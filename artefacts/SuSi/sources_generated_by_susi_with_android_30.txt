
LOCATION_INFORMATION:
<android.telephony.CellIdentityNr: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION (LOCATION_INFORMATION)
<android.telephony.CellIdentityWcdma: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)
<android.telephony.CellIdentityLte: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)
<android.telephony.CellIdentityTdscdma: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)
<android.telephony.CellIdentityCdma: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)
<android.telephony.CellIdentityGsm: android.telephony.CellLocation asCellLocation()> (LOCATION_INFORMATION)

NETWORK_INFORMATION:
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthWcdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.content.res.Resources: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.widget.HorizontalScrollView$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Default: java.lang.String getImsSmsFormatForSubscriber(int)> (NETWORK_INFORMATION)
<android.net.Uri$StringUri: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId(java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.face.FaceManager: java.lang.String getAcquiredString(android.content.Context,int,int)> (NETWORK_INFORMATION)
<com.android.internal.database.SortCursor: java.lang.String getString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSubscriptionCarrierName(int)> (NETWORK_INFORMATION)
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)> (NETWORK_INFORMATION)
<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context,int)> (NETWORK_INFORMATION)
<android.app.job.JobInfo: java.lang.String getPriorityString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getTypeAllocationCodeForSlot(int)> (NETWORK_INFORMATION)
<android.text.TextUtils$Reverser: java.lang.String toString()> (NETWORK_INFORMATION)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.app.LoaderManagerImpl: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceSvn(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.database.MatrixCursor: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.telephony.SubscriptionInfo: java.lang.String getCardString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.filterfw.core.FilterFunction: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneStateListener$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId(java.lang.String)> (NETWORK_INFORMATION)
<android.widget.AbsListView$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.NetworkRegistrationInfo: java.lang.String lambda$toString$0(java.lang.Integer)> (NETWORK_INFORMATION)
<android.media.ExifInterface$ExifAttribute: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSimChallengeResponse(int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceId(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.cdma.sms.UserData: byte[] stringToAscii(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaPrlVersion(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getRecipientAddress()> (NETWORK_INFORMATION)
<android.app.backup.IBackupManager$Default: java.lang.String getDestinationStringForUser(int,java.lang.String)> (NETWORK_INFORMATION)
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getEsn(int)> (NETWORK_INFORMATION)
<android.hardware.display.BrightnessCorrection$ScaleAndTranslateLog: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1NumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$402(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$000(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.net.Uri$OpaqueUri: java.lang.String toString()> (NETWORK_INFORMATION)
<android.os.PersistableBundle: java.lang.String toString()> (NETWORK_INFORMATION)
<android.service.notification.ZenModeConfig: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityCdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_2.ICas$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.RestrictionEntry: java.lang.String getSelectedString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getBoundImsServicePackage(int,boolean,int)> (NETWORK_INFORMATION)
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSimLocaleForSubscriber(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getManualNetworkSelectionPlmn(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccController$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.media.TextTrackCue: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailNumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.ServiceState: java.lang.String rilServiceStateToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMmsUserAgent(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailAlphaTagForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getGroupIdLevel1ForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.media.AudioHandle: java.lang.String toString()> (NETWORK_INFORMATION)
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])> (NETWORK_INFORMATION)
<android.app.Fragment: java.lang.String getString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)> (NETWORK_INFORMATION)
<android.transition.Transition: java.lang.String toString(java.lang.String)> (NETWORK_INFORMATION)
<android.app.DownloadManager$CursorTranslator: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.SmsCbEtwsInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.IccOpenLogicalChannelResponse: java.lang.String toString()> (NETWORK_INFORMATION)
<android.os.StrictMode$AndroidBlockGuardPolicy: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: java.lang.String getDefaultCarrierServicePackageName()> (NETWORK_INFORMATION)
<android.telephony.DataConnectionRealTimeInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.hardware.Sensor: java.lang.String getStringType()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String createAppSpecificSmsTokenWithPackageInfo(int,java.lang.String,java.lang.String,android.app.PendingIntent)> (NETWORK_INFORMATION)
<android.media.TextTrackRegion: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.content.res.TypedArray: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityWcdma: java.lang.String getMncString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityLte: java.lang.String getMccString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$500(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<android.os.BaseBundle: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()> (NETWORK_INFORMATION)
<android.app.backup.BackupManager: java.lang.String getDestinationString(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CellConfigLte: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSimLocaleForSubscriber(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.app.ActivityThread$H: java.lang.String codeToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getNaiForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimImpi(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephonyRegistry$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.util.ArrayMap: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getManualNetworkSelectionPlmn(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IMms$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()> (NETWORK_INFORMATION)
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)> (NETWORK_INFORMATION)
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.ModemActivityInfo$TransmitPower: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CarrierRestrictionRules: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentity: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.util.SparseIntArray: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.pm.PackageManager: java.lang.String deleteStatusToString(int)> (NETWORK_INFORMATION)
<android.telephony.CallAttributes: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$300(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<android.media.ExifInterface$Rational: java.lang.String toString()> (NETWORK_INFORMATION)
<android.util.proto.ProtoStream: java.lang.String getFieldTypeString(long)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOns$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumber(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISub$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.text.SpannableStringInternal: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.ModemActivityInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceIdForPhone(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)> (NETWORK_INFORMATION)
<com.android.internal.widget.ILockSettings$Default: java.lang.String getString(java.lang.String,java.lang.String,int)> (NETWORK_INFORMATION)
<android.telephony.BarringInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdnForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.ModemInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getEsn(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<android.net.Uri: java.lang.String toSafeString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.SubscriptionInfo: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.net.ProxyInfo: java.lang.String getExclusionListAsString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneStateListener$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: int setImsProvisioningString(int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$102(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.PreciseCallState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.ServiceState: java.lang.String getRoamingLogString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CellInfoNr: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.ims.aidl.IImsConfig$Default: java.lang.String getConfigString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.transition.Transition: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.NetworkRegistrationInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getAidForAppType(int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimIst(int)> (NETWORK_INFORMATION)
<android.app.VoiceInteractor$Request: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.VoiceSpecificRegistrationInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumberWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IMms$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsHeader: java.lang.String toString()> (NETWORK_INFORMATION)
<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getTypeAllocationCodeForSlot(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)> (NETWORK_INFORMATION)
<android.view.DisplayCutout$Bounds: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.widget.CompoundButton$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaPrlVersion(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityGsm: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccController$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$602(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.UiccAccessRule: java.lang.String toString()> (NETWORK_INFORMATION)
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaMdn(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getSmscAddressFromIccEfForSubscriber(int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSubscriptionCarrierName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.uicc.IccUtils: java.lang.String getDecimalSubstring(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.SignalStrength: java.lang.String toString()> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureEvent: java.lang.String getTypeAsString(int)> (NETWORK_INFORMATION)
<android.app.ActivityThread$ActivityClientRecord: java.lang.String getStateString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberIdForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.OperatorInfo: java.lang.String toString()> android.permission.STOP_APP_SWITCHES (NETWORK_INFORMATION)
<android.telephony.SubscriptionPlan: java.lang.String toString()> (NETWORK_INFORMATION)
<android.media.MediaFormat: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1AlphaTagForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.NeighboringCellInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.INumberVerificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityNr: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityTdscdma: java.lang.String getMncString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)> (NETWORK_INFORMATION)
<android.media.MediaPlayer: java.lang.String getDrmPropertyString(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.PreciseDataConnectionState: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CallQuality: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceId(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String createAppSpecificSmsToken(int,java.lang.String,android.app.PendingIntent)> (NETWORK_INFORMATION)
<com.android.internal.telephony.Sms7BitEncodingTranslator: java.lang.String translate(java.lang.CharSequence,boolean)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi(int)> (NETWORK_INFORMATION)
<android.util.proto.EncodedBuffer: java.lang.String getDebugString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getGroupIdLevel1ForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CellInfoTdscdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.util.SyncResultReceiver: java.lang.String getStringResult()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getImeiForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaMdn(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.widget.ScrollView$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getMvnoTypeStringFromInt(int)> (NETWORK_INFORMATION)
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> (NETWORK_INFORMATION)
<android.telephony.SmsCbMessage: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.util.ConcurrentUtils$DirectExecutor: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureHelper: java.lang.String getLoggingLevelAsString(int)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberRange: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.RadioAccessFamily: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.util.StateMachine$SmHandler$StateInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getBoundImsServicePackage(int,boolean,int)> (NETWORK_INFORMATION)
<android.webkit.WebViewDelegate: java.lang.String getErrorString(android.content.Context,int)> (NETWORK_INFORMATION)
<android.print.PageRange: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.provider.DeviceConfig: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.CellInfoWcdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.CellNetworkScanResult: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.pm.ShortcutQueryWrapper: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IMms$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMmsUserAgent(int)> (NETWORK_INFORMATION)
<android.view.autofill.AutofillManager: java.lang.String getSmartSuggestionModeToString(int)> (NETWORK_INFORMATION)
<android.telephony.PhoneCapability: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISub$Stub$Proxy: java.lang.String getSubscriptionProperty(int,java.lang.String,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.view.textclassifier.TextClassifierEvent: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellInfoCdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.DataSpecificRegistrationInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<android.filterfw.core.FilterPort: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOns$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.os.Bundle: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.TelephonyManager: java.lang.String dataStateToString(int)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getAidForAppType(int,int)> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureSession: java.lang.String getStateAsString(int)> (NETWORK_INFORMATION)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: java.lang.String getConfigString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$202(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvnUsingSubId(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.text.Layout$Ellipsizer: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain(int)> (NETWORK_INFORMATION)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationString(java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_0.ICasListener$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.widget.SearchView$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.pm.PackageManager: java.lang.String permissionFlagToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.provider.Settings$Config: java.lang.String getString(android.content.ContentResolver,java.lang.String)> (NETWORK_INFORMATION)
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.String toString()> (NETWORK_INFORMATION)
<android.media.ExternalRingtonesCursorWrapper: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.widget.TextView$CharWrapper: java.lang.String toString()> (NETWORK_INFORMATION)
<android.text.TextUtils: java.lang.String getEllipsisString(android.text.TextUtils$TruncateAt)> (NETWORK_INFORMATION)
<android.media.MediaFormat: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.fingerprint.FingerprintManager: java.lang.String getErrorString(android.content.Context,int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephonyRegistry$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.widget.AdapterViewAnimator$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IIntegerConsumer$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSimChallengeResponse(int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<android.transition.TransitionSet: java.lang.String toString(java.lang.String)> (NETWORK_INFORMATION)
<android.app.ActivityThread: java.lang.String getStringCoreSetting(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceId(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.NetworkRegistrationInfo: java.lang.String domainToString(int)> (NETWORK_INFORMATION)
<android.content.pm.PackageManager: java.lang.String installStatusToString(int)> (NETWORK_INFORMATION)
<android.util.SparseArray: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> (NETWORK_INFORMATION)
<android.provider.DeviceConfig$Properties: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getImsProvisioningString(int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.lang.String getEid(int,java.lang.String)> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureSession: java.lang.String getFlushReasonAsString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IIntegerConsumer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISub$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.content.pm.Signature: java.lang.String toCharsString()> (NETWORK_INFORMATION)
<android.hardware.cas.V1_2.ICasListener$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.view.InputBindResult: java.lang.String getResultString()> (NETWORK_INFORMATION)
<android.telephony.NetworkRegistrationInfo: java.lang.String serviceTypeToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()> (NETWORK_INFORMATION)
<android.telephony.SubscriptionInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CbGeoUtils$Circle: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getMsisdnForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()> (NETWORK_INFORMATION)
<android.util.SparseBooleanArray: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceIdForPhone(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimDomain(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Default: java.lang.String getSmscAddressFromIccEfForSubscriber(int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$302(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getManufacturerCodeForSlot(int)> (NETWORK_INFORMATION)
<android.database.CursorWrapper: java.lang.String getString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()> (NETWORK_INFORMATION)
<android.hardware.radio.RadioMetadata: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.SmsCbCmasInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.SmsCbLocation: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCurrentPackageName()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int,int)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_1.ICasListener$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int,int,int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityGsm: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.telephony.CbGeoUtils: java.lang.String lambda$encodeGeometriesToString$0(android.telephony.CbGeoUtils$Geometry)> (NETWORK_INFORMATION)
<android.accounts.AuthenticatorDescription: java.lang.String toString()> (NETWORK_INFORMATION)
<android.util.apk.WrappedX509Certificate: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String getApplicationName(android.content.Context)> (NETWORK_INFORMATION)
<android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)> (NETWORK_INFORMATION)
<android.util.LongSparseLongArray: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityGsm: java.lang.String getMncString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Default: java.lang.String createAppSpecificSmsTokenWithPackageInfo(int,java.lang.String,java.lang.String,android.app.PendingIntent)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureHelper: java.lang.String getSanitizedString(java.lang.CharSequence)> (NETWORK_INFORMATION)
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getNaiForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IBooleanConsumer$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_0.ICas$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.view.contentcapture.ContentCaptureSession: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellInfoGsm: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getManufacturerCodeForSlot(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.INumberVerificationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Default: java.lang.String createAppSpecificSmsToken(int,java.lang.String,android.app.PendingIntent)> (NETWORK_INFORMATION)
<android.app.PropertyInvalidatedCache: java.lang.String queryToString(java.lang.Object)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOns$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.widget.CheckedTextView$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.util.function.pooled.ArgumentPlaceholder: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getImeiForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.internal.hidl.base.V1_0.IBase$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityWcdma: java.lang.String toString()> (NETWORK_INFORMATION)
<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String nvReadItem(int)> (NETWORK_INFORMATION)
<android.telephony.ImsiEncryptionInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.accounts.Account: java.lang.String toSafeString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.database.CursorWindow: java.lang.String getString(int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthTdscdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMmsUAProfUrl(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityTdscdma: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getNetworkCountryIsoForPhone(int)> (NETWORK_INFORMATION)
<android.util.LongSparseArray: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.os.Bundle: java.lang.String toShortString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityNr: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1NumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberIdForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.net.LocalSocketImpl: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISub$Default: java.lang.String getSubscriptionProperty(int,java.lang.String,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> (NETWORK_INFORMATION)
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()> (NETWORK_INFORMATION)
<android.content.res.AssetManager: java.lang.String getOverlayablesToString(java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CbGeoUtils$Polygon: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthNr: java.lang.String toString()> (NETWORK_INFORMATION)
<android.view.inputmethod.InputConnectionInspector: java.lang.String getMissingMethodFlagsAsString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberId(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSubscriptionSpecificCarrierName(int)> (NETWORK_INFORMATION)
<android.telephony.LteVopsSupportInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailNumber(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.database.AbstractWindowedCursor: java.lang.String getString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getMsisdn(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IBooleanConsumer$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.util.proto.ProtoStream: java.lang.String getWireTypeString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.CbGeoUtils$LatLng: java.lang.String toString()> (NETWORK_INFORMATION)
<android.net.PlatformVpnProfile: java.lang.String getTypeString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaMin(int)> (NETWORK_INFORMATION)
<android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()> (NETWORK_INFORMATION)
<android.telephony.TelephonyDisplayInfo: java.lang.String overrideNetworkTypeToString(int)> (NETWORK_INFORMATION)
<android.telephony.CellInfoLte: java.lang.String toString()> (NETWORK_INFORMATION)
<android.util.SparseLongArray: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.uicc.IccUtils: byte[] hexStringToBytes(java.lang.String)> (NETWORK_INFORMATION)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationStringForUser(int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$600(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityNr: java.lang.String getMncString()> (NETWORK_INFORMATION)
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.SubscriptionInfo: java.lang.String getMncString()> (NETWORK_INFORMATION)
<android.print.PrintJobInfo: java.lang.String getAdvancedStringOption(java.lang.String)> (NETWORK_INFORMATION)
<android.hardware.fingerprint.FingerprintManager: java.lang.String getAcquiredString(android.content.Context,int,int)> (NETWORK_INFORMATION)
<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.TelephonyDisplayInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.util.StateMachine: java.lang.String getWhatToString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.os.BatteryStatsImpl: java.lang.String getHistoryTagPoolString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.net.NetworkKey: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IIntegerConsumer$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.media.Metadata: java.lang.String getString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceSvnUsingSubId(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberIdWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.webkit.JsPromptResult: java.lang.String getStringResult()> (NETWORK_INFORMATION)
<android.service.notification.ZenModeConfig$ZenRule: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$200(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.TelephonyHistogram: java.lang.String toString()> (NETWORK_INFORMATION)
<android.os.PersistableBundle: java.lang.String toShortString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$100(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$502(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)> (NETWORK_INFORMATION)
<android.util.Rational: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.Intent: java.lang.String getDataString()> (NETWORK_INFORMATION)
<android.widget.AbsSpinner$SavedState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.app.backup.IBackupManager$Default: java.lang.String getDestinationString(java.lang.String)> (NETWORK_INFORMATION)
<android.net.Uri$HierarchicalUri: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.UiccAccessRule: java.lang.String getCertificateHexString()> (NETWORK_INFORMATION)
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> (NETWORK_INFORMATION)
<android.telephony.PinResult: java.lang.String toString()> (NETWORK_INFORMATION)
<android.content.Context: java.lang.String getString(int)> (NETWORK_INFORMATION)
<android.telephony.CbGeoUtils: java.lang.String encodeGeometriesToString(java.util.List)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumberWithFeature(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getImsSmsFormatForSubscriber(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimIst(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()> (NETWORK_INFORMATION)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM8bit(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.widget.TextView$TextAppearanceAttributes: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMmsUAProfUrl(int)> (NETWORK_INFORMATION)
<android.telephony.ClosedSubscriberGroupInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityTdscdma: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.view.Choreographer$3: java.lang.String toString()> (NETWORK_INFORMATION)
<android.view.inputmethod.SparseRectFArray: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CallForwardingInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1Number(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.VisualVoicemailSmsFilterSettings: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumberForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.CellBroadcastUtils: java.lang.String getDefaultCellBroadcastReceiverPackageName(android.content.Context)> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getProxyAddressAsString()> (NETWORK_INFORMATION)
<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getProtocolStringFromInt(int)> (NETWORK_INFORMATION)
<android.telephony.ServiceState: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTagForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.telephony.UiccCardInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getNetworkCountryIsoForPhone(int)> (NETWORK_INFORMATION)
<android.view.textclassifier.TextClassifier$1: java.lang.String toString()> (NETWORK_INFORMATION)
<android.filterfw.core.Filter: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1AlphaTag(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.INumberVerificationCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityWcdma: java.lang.String getMccString()> (NETWORK_INFORMATION)
<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailAlphaTag(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.text.TextUtils$StringWithRemovedChars: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getMmsProxyAddressAsString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IEuiccController$Default: java.lang.String getEid(int,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.DataFailCause: java.lang.String toString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber(java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IBooleanConsumer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NETWORK_INFORMATION)
<android.content.pm.ShortcutInfo: java.lang.String getDisabledReasonDebugString(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSubscriptionSpecificCarrierName(int)> (NETWORK_INFORMATION)
<android.animation.AnimatorSet$AnimationEvent: java.lang.String toString()> (NETWORK_INFORMATION)
<android.util.ArraySet: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.CellIdentityLte: java.lang.String getMncString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$002(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.telephony.CellSignalStrengthLte: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])> (NETWORK_INFORMATION)
<android.telephony.CellIdentity: java.lang.String getMncString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getImsProvisioningString(int,int)> (NETWORK_INFORMATION)
<android.os.ParcelFileDescriptor$Status: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaMin(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String toString()> (NETWORK_INFORMATION)
<android.util.KeyValueListParser: java.lang.String getString(java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<android.telephony.ClientRequestStats: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.UiccSlotInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ISub$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<android.graphics.ColorSpace: java.lang.String toString()> (NETWORK_INFORMATION)
<android.telephony.AvailableNetworkInfo: java.lang.String toString()> (NETWORK_INFORMATION)
<android.graphics.drawable.Icon: java.lang.String getUriString()> (NETWORK_INFORMATION)
<android.telephony.data.ApnSetting: java.lang.String getApnTypesStringFromBitmask(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTagForSubscriber(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String nvReadItem(int)> (NETWORK_INFORMATION)
<android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> (NETWORK_INFORMATION)
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (NETWORK_INFORMATION)
<android.accounts.Account: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCurrentPackageName()> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Stub: java.lang.String getDefaultTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: java.lang.String getTransactionName(int)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)> (NETWORK_INFORMATION)
<com.android.internal.telephony.ICarrierConfigLoader$Default: java.lang.String getDefaultCarrierServicePackageName()> (NETWORK_INFORMATION)
<android.telephony.ServiceState: java.lang.String roamingTypeToString(int)> (NETWORK_INFORMATION)
<android.webkit.LegacyErrorStrings: java.lang.String getString(int,android.content.Context)> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()> (NETWORK_INFORMATION)
<android.util.proto.ProtoStream: java.lang.String getFieldCountString(long)> (NETWORK_INFORMATION)
<android.hardware.cas.V1_1.ICas$Stub: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()> (NETWORK_INFORMATION)
<android.view.textclassifier.TextClassifier$Utils: java.lang.String getSubString(java.lang.String,int,int,int)> (NETWORK_INFORMATION)
<android.telephony.CellIdentityLte: java.lang.String toString()> (NETWORK_INFORMATION)
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()> (NETWORK_INFORMATION)
<android.telephony.NetworkRegistrationInfo: java.lang.String registrationStateToString(int)> (NETWORK_INFORMATION)
<android.hardware.camera2.utils.TypeReference: java.lang.String toString()> (NETWORK_INFORMATION)

ACCOUNT_INFORMATION:
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture finishSessionAsUser(android.os.Bundle,android.app.Activity,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$22: java.lang.Boolean bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult()> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPreviousName(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: int getAccountVisibility(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: java.lang.String getUserData(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture copyAccountToUser(android.accounts.Account,android.os.UserHandle,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.util.HashMap access$200(android.accounts.AccountManager)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$5: java.lang.Boolean bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$AmsTask$1: android.os.Bundle call()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: java.lang.String getPreviousName(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture isCredentialsUpdateSuggested(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int access$1502(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,int)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$BaseFutureTask$1: java.lang.Object call()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.os.Handler access$900(android.accounts.AccountManager)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$11: java.lang.Boolean bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$1: java.lang.Object bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.util.HashMap access$300(android.accounts.AccountManager)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$3: java.lang.Object bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture finishSession(android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.content.Context access$100(android.accounts.AccountManager)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$4: android.accounts.Account bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: java.lang.String getPassword(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: int getAccountVisibility(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.Exception access$700(android.accounts.AccountManager,int,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startUpdateCredentialsSession(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypesAsUser(int)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startAddAccountSession(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.GET_ACCOUNTS android.permission.MANAGE_ACCOUNTS (ACCOUNT_INFORMATION)
<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)> (ACCOUNT_INFORMATION)
<android.accounts.IAccountManager$Default: int getAccountVisibility(android.accounts.Account,java.lang.String)> (ACCOUNT_INFORMATION)
<android.accounts.AccountManager$2: java.lang.Boolean bundleToResult(android.os.Bundle)> (ACCOUNT_INFORMATION)

BLUETOOTH_INFORMATION:
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig getCodecConfig()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getProfileConnectionState(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: android.util.SparseArray getManufacturerSpecificData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.bluetooth.IBluetoothStateChangeCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: long getCreationElapsedMilli()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub: android.bluetooth.IBluetoothSap getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getDataStatus()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp$1: android.bluetooth.IBluetoothA2dp getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: int getInstanceId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLeCodedPhySupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub: android.bluetooth.IBluetoothAvrcpController getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isHearingAidProfileSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothInputStream: int available()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getLeIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub: android.bluetooth.IBluetoothMap asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getActiveDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAudioConfig: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean isAvrcpAbsoluteVolumeSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.UidTraffic: int getUid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getMatchMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getMessageAccessPermission()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteType(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.bluetooth.IBluetoothGattServerCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getBatteryLevel(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerEnergyUsed()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothClass getBluetoothClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: java.util.List getServices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific3()> (BLUETOOTH_INFORMATION)
<android.bluetooth.OobData: byte[] getLeBluetoothDeviceAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub: android.bluetooth.IBluetoothPan asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub: android.bluetooth.IBluetoothHidDevice asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattCharacteristic getCharacteristicById(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter$4: java.lang.String queryToString(java.lang.Object)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothActivityEnergyInfo getControllerActivityEnergyInfo(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.UidTraffic: long getTxBytes()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int getChannelMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: int getManufacturerId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbap: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub: android.bluetooth.IBluetoothMap getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: int getInstanceId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub: android.bluetooth.IBluetoothManagerCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.bluetooth.le.IPeriodicAdvertisingCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: java.util.List getMostRecentlyConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSetParameters: int getTxPowerLevel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getLeMaximumAdvertisingDataLength()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothInputStream: int read()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: int getClassOfDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothProfileConnector: java.lang.Object getService()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.os.ParcelUuid[] getUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.IBluetoothPbap getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAudioConfig: int getAudioFormat()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.bluetooth.IBluetoothStateChangeCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.OobData: byte[] getLeSecureConnectionsConfirmation()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: boolean isBondingInitiatedLocally()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid$1: android.bluetooth.IBluetoothHearingAid getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice$3: java.lang.Integer recompute(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: java.util.List getServices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: android.bluetooth.IBluetoothGatt getBluetoothGatt()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient$1: android.bluetooth.IBluetoothMapClient getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub: android.bluetooth.IBluetoothCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: boolean getIdleTime(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothClass getBluetoothClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: long getReportDelayMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub: android.bluetooth.IBluetoothMapClient asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattDescriptor getDescriptorByHandle(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: boolean getIncludeTxPowerLevel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isOffloadedScanBatchingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: byte[] getBytes()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub: android.bluetooth.IBluetoothGatt getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getScanResultType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub: android.bluetooth.IBluetoothSocketManager getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub: android.bluetooth.IBluetoothGattCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getLeMaximumAdvertisingDataLength()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPan: boolean isTetheringOn()> android.permission.BLUETOOTH (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: android.bluetooth.UidTraffic[] getUidTraffic()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSetParameters: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSet: int getAdvertiserId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getSimAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getTokenBucketSize()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter$4: java.lang.Integer recompute(java.lang.Integer)> (BLUETOOTH_INFORMATION)
<android.bluetooth.UidTraffic: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getPeriodicAdvertisingInterval()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDevice: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothServerSocket: int getPsm()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: int getTxPowerLevel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbap: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAudioConfig: int getSampleRate()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSetParameters: int getSecondaryPhy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerTxTimeMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: long getSupportedProfiles()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap$1: android.bluetooth.IBluetoothSap getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: long getHiSyncId(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub: android.bluetooth.IBluetoothHidHost getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isDiscovering()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: byte[] getServiceDataMask()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub: android.bluetooth.IBluetoothHearingAid getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub: android.bluetooth.IBluetoothMapClient getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getTokenRate()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: int getSupportedFeatures(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub: android.bluetooth.IBluetoothMetadataListener getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingParameters: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getMaxConnectedAudioDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseSettings: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: byte[] getDescriptors()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSetParameters: int getInterval()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.bluetooth.IBluetoothSocketManager getSocketManager()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean getSilenceMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub: android.bluetooth.IBluetoothA2dpSink getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattCharacteristic getCharacteristicByHandle(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: java.util.Map getServiceData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: long getTimestampNanos()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub: android.bluetooth.IBluetoothManagerCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.bluetooth.le.IPeriodicAdvertisingCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getAdvertisingSid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int getTxPower()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: android.bluetooth.IBluetoothGatt getBluetoothGatt()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getBondState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int getConnectionType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerRxTimeMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.bluetooth.IBluetoothGattServerCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbap: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getPhonebookAccessPermission()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int getMaxTransmitPacketSize()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: boolean isAudioOn()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDevice: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getSecondaryPhy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getLeState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub: android.bluetooth.IBluetoothHidHost asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub: android.bluetooth.IBluetoothCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getDescription()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: int numHwTrackFiltersAvailable()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub: android.bluetooth.IBluetoothPan getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: long getSupportedProfiles()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothProfileConnector: int access$500(android.bluetooth.BluetoothProfileConnector)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getBatteryLevel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isMultiAdvertisementSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int write(byte[],int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getRssi()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingParameters: boolean getIncludeTxPower()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: int getHandles()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: int isOptionalCodecsSupported(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getCallbackType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub: android.bluetooth.IBluetoothMetadataListener asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getPhy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getAdapterConnectionState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient$1: android.bluetooth.IBluetoothPbapClient getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: android.bluetooth.le.ScanRecord getData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAudioConfig: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub: android.bluetooth.IBluetoothHearingAid asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub: android.bluetooth.IBluetoothHidDevice getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific1()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isOffloadedScanBatchingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getRemoteClass(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: long getHiSyncId(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub: android.bluetooth.IBluetoothSocketManager asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getNumOfMatches()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.UidTraffic: long getRxBytes()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getSupportedFeatures(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int getSyncHandle()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub: android.bluetooth.IBluetoothA2dpSink asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: java.util.List getSupportedProfiles()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getLatency()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient$1: android.bluetooth.IBluetoothHeadsetClient getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothDevice[] getBondedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getAdapterConnectionState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int getCodecPriority()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int getBitsPerSample()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDevice$1: android.bluetooth.IBluetoothHidDevice getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingParameters: int getInterval()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.OobData: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.util.Pair readOutOfBandData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.OobData: byte[] getLeSecureConnectionsRandom()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: int getType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getProfileConnectionState(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothManager: java.util.List getDevicesMatchingConnectionStates(int,int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.IBluetoothPbap asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub: android.bluetooth.IBluetoothGattCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getScanMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(android.bluetooth.BluetoothDevice,java.util.UUID,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getRemoteType(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isLe2MPhySupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.PeriodicAdvertisingManager getPeriodicAdvertisingManager()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpController: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getLeIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID,int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getBatteryLevel(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerIdleTimeMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Default: java.lang.String getUserAppName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: java.util.List getSystemConfigEnabledProfilesForPackage(java.lang.String)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isLePeriodicAdvertisingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig[] getCodecsSelectableCapabilities()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getConnectionState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseSettings: int getMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattDescriptor getDescriptorById(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: boolean getLegacy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: java.lang.String getNumber()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: byte[] getClassOfDeviceBytes()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.bluetooth.IBluetoothHeadsetClient getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: boolean isInbandRingingEnabled()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPbapClient: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getActiveDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpPlayerSettings: int getSettings()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattIncludedService: int getType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.util.List getSystemConfigEnabledProfilesForPackage(java.lang.String)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.OobData: byte[] getSecurityManagerTk()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean getLeAccess()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getDeviceSide(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Default: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpPlayerSettings: int getSettingValue(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isLeCodedPhySupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getBondState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseSettings: int getTimeout()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int getSampleRate()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpController: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: boolean getIncludeDeviceName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpPlayerSettings: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub: android.bluetooth.IBluetoothPbapClient asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.TruncatedFilter: android.bluetooth.le.ScanFilter getFilter()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: int isOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getMostRecentlyConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: int getDeviceSide(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isBleScanAlwaysAvailable()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.bluetooth.IBluetoothHidDeviceCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: int getDeviceMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub: android.bluetooth.IBluetoothSap asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: boolean isTetheringOn()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothDevice getDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isAudioOn()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothClass: int getDeviceClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getScanMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getPrimaryPhy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.lang.String getUserAppName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLePeriodicAdvertisingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLe2MPhySupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific4()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: int getDeviceSide(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothClass getBluetoothClass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: java.lang.String getDeviceName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAudioConfig: int getChannelConfig()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isActivityAndEnergyReportingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: java.lang.String getName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub: android.bluetooth.IBluetoothAvrcpController asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.IBluetoothHeadset asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getDeviceMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: android.bluetooth.BluetoothDevice getDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: byte[] getManufacturerData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.TruncatedFilter: java.util.List getStorageDescriptors()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattIncludedService: java.util.UUID getUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter$2: java.lang.Integer recompute(java.lang.Void)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dpSink$1: android.bluetooth.IBluetoothA2dpSink getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: long getDiscoveryEndMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattServer: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattIncludedService: int getInstanceId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuidMask()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int getDataStatus()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: java.lang.String getCodecName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: long getDiscoveryEndMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub: android.bluetooth.IBluetoothManager asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPan$1: android.bluetooth.IBluetoothPan getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.bluetooth.le.IAdvertisingSetCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: byte[] getManufacturerDataMask()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: byte[] getServiceData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: boolean getIdleTime(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothStateChangeCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothServerSocket: int getChannel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getSimAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: long getTimestampNanos()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: int getId()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getIdleTime(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: boolean getSilenceMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSap: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: java.util.List getServiceUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: int getOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice getActiveDevice()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDevice: java.lang.String getUserAppName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()> android.permission.BLUETOOTH (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int getKeySize()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClientCall: java.util.UUID getUUID()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.bluetooth.IBluetoothProfileServiceConnection getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: int getAdvertiseFlags()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuidMask()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getDiscoverableTimeout()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.bluetooth.IBluetoothHeadsetClient asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: java.util.List getServiceSolicitationUuids()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Default: int numHwTrackFiltersAvailable()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.bluetooth.IBluetoothHidDeviceCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattIncludedService: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLeExtendedAdvertisingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothManager: int getConnectionState(android.bluetooth.BluetoothDevice,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: int getDeviceMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceDataUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: int getCodecType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.IBluetoothSocketManager getSocketManager()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getMaxConnectedAudioDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub: android.bluetooth.IBluetoothPbapClient getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig[] getCodecsLocalCapabilities()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseData: android.util.SparseArray getManufacturerSpecificData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: byte[] getMetadata(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub: android.bluetooth.le.IScannerCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: byte[] getManufacturerSpecificData(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getLeMaximumAdvertisingDataLength()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isOffloadedFilteringSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: boolean getAudioRouteAllowed()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getMaxConnectedAudioDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: java.lang.String getName()> android.permission.BLUETOOTH (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMapClient: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getServiceType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: boolean isAvrcpAbsoluteVolumeSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecStatus: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getDelayVariation()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.bluetooth.le.IAdvertisingSetCallback getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceName()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: java.util.List getActiveDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dpSink$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothAvrcpController$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpController$1: android.bluetooth.IBluetoothAvrcpController getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Default: int supportsOptionalCodecs(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanSettings: int getScanMode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter$3: java.lang.Boolean recompute(java.lang.Void)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: java.util.List getMostRecentlyConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost$1: android.bluetooth.IBluetoothHidHost getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidHost: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecStatus: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> android.permission.BLUETOOTH (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanResult: int getTxPower()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: long getDiscoveryEndMillis()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int available()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub: android.bluetooth.IBluetoothManager getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: long getTimeStamp()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.bluetooth.IBluetoothProfileServiceConnection asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothActivityEnergyInfo: int getBluetoothStackState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IScannerCallback$Stub: android.bluetooth.le.IScannerCallback asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothCallback$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isBleAppPresent()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isInbandRingingEnabled()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothA2dp: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: int getSimAccessPermission()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Stub: android.bluetooth.IBluetoothGatt asInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int supportsOptionalCodecs(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int bindListen()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: int getIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHearingAid: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter$4: java.lang.String queryToString(java.lang.Integer)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertisingSetParameters: int getPrimaryPhy()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.PeriodicAdvertisingReport: int getRssi()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isLeExtendedAdvertisingSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGattCallback$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAvrcpController: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int getMaxReceivePacketSize()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getLeIoCapability()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothGatt$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Default: boolean getAudioRouteAllowed()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getPeakBandwidth()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap$1: android.bluetooth.IBluetoothMap getServiceInterface(android.os.IBinder)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: int getState()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.AdvertiseSettings: int getTxPowerLevel()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean getAudioRouteAllowed()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Default: int getConnectionState(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothGattCharacteristic: int describeContents()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.IBluetoothHeadset getDefaultImpl()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanRecord: java.util.Map getServiceData()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Default: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMetadataListener$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific2()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub: java.lang.String getDefaultTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothDevice[] getBondedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMap$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: java.lang.String getTransactionName(int)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHearingAid$Default: long getHiSyncId(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getProvider()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.ScanFilter: int hashCode()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: android.os.IBinder asBinder()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IAdvertisingSetCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothSocket: int getPort()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothPbap$Default: java.util.List getConnectedDevices()> (BLUETOOTH_INFORMATION)
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isEnabled()> (BLUETOOTH_INFORMATION)
<android.bluetooth.IBluetoothSap$Default: java.util.List getDevicesMatchingConnectionStates(int[])> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: byte getSubclass()> (BLUETOOTH_INFORMATION)
<android.bluetooth.BluetoothMap: int getPriority(android.bluetooth.BluetoothDevice)> (BLUETOOTH_INFORMATION)

SYNCHRONIZATION_DATA:
<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: int getIsSyncable(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> android.permission.READ_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)> (SYNCHRONIZATION_DATA)
<android.provider.BrowserContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> (SYNCHRONIZATION_DATA)
<android.provider.BrowserContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> (SYNCHRONIZATION_DATA)
<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Default: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)

SMS_MMS:
<android.telephony.SubscriptionManager: void invalidateDefaultSmsSubIdCaches()> (SMS_MMS)
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getOrder()> (SMS_MMS)
<android.media.MediaCodec$CryptoInfo$Pattern: int getEncryptBlocks()> (SMS_MMS)
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)> (SMS_MMS)
<android.service.notification.NotificationRankingUpdate: int describeContents()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub: android.content.pm.IDataLoaderStatusListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.UserInfo: int describeContents()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int hashCode()> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int stopUser(int,boolean,android.app.IStopUserCallback)> (SMS_MMS)
<android.view.textclassifier.EntityConfidence: int lambda$resetSortedEntitiesFromMap$0$EntityConfidence(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.View: int getOutlineAmbientShadowColor()> (SMS_MMS)
<android.app.Notification$MessagingStyle: java.lang.CharSequence getUserDisplayName()> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: int getSpecificCarrierId()> (SMS_MMS)
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)> (SMS_MMS)
<android.telephony.CellIdentityNr: long getNci()> (SMS_MMS)
<android.hardware.ICamera$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkIdentity: int compareTo(android.net.NetworkIdentity)> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo$1: void <init>()> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isProvisioningAllowed(java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getRank()> (SMS_MMS)
<android.view.FocusFinder$FocusSorter: int lambda$new$0$FocusFinder$FocusSorter(android.view.View,android.view.View)> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getHideOffset()> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: int getCookie()> (SMS_MMS)
<android.view.View: int getRawTextAlignment()> (SMS_MMS)
<android.os.IncidentManager$IncidentReport: long getPrivacyPolicy()> (SMS_MMS)
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts(int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfiguration: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getOtaSpNumberSchema(java.lang.String)> (SMS_MMS)
<android.telephony.JapanesePhoneNumberFormatter: void <init>()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isUsingUnifiedPassword(android.content.ComponentName)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getBcc()> (SMS_MMS)
<android.view.KeyboardShortcutInfo: int getKeycode()> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.Range: java.lang.Comparable getLower()> (SMS_MMS)
<android.print.PrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: int describeContents()> (SMS_MMS)
<android.view.IGraphicsStats$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.tv.TvStreamConfig: int getMaxHeight()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getHiddenApiWhitelistedApps()> (SMS_MMS)
<android.debug.IAdbManager$Stub: android.debug.IAdbManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int getId()> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod getDefaultImpl()> (SMS_MMS)
<android.view.Display: android.graphics.ColorSpace[] getSupportedWideColorGamut()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: int hashCode()> (SMS_MMS)
<android.util.SparseArray: int size()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getSmartStart()> (SMS_MMS)
<android.security.KeyStore: boolean isHardwareBacked()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getMinDrainedPower()> (SMS_MMS)
<android.media.RingtoneManager: int inferStreamType()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedInstrumentation: int describeContents()> (SMS_MMS)
<android.telephony.SubscriptionPlan: int hashCode()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$VideoEvent: long getTimeSinceLastEvent()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: java.util.List getPnoNetworks()> (SMS_MMS)
<android.view.Window: android.view.View getNavigationBarBackgroundView()> (SMS_MMS)
<android.graphics.text.MeasuredText: char[] getChars()> (SMS_MMS)
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()> (SMS_MMS)
<android.graphics.Paint: android.os.LocaleList getTextLocales()> (SMS_MMS)
<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setFishEyeStyle()> (SMS_MMS)
<android.security.KeyStoreException: int getErrorCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppInstallerComponent()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String)> (SMS_MMS)
<android.widget.RemoteViews$ReflectionAction: int getActionTag()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Timer: long getTimeSinceMarkLocked(long)> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.SizeF: float getWidth()> (SMS_MMS)
<android.telephony.CellConfigLte: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getSystemAvailableFeatures()> (SMS_MMS)
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getWellbeingPackageName()> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentity$hidl_discriminator: java.lang.String getName(byte)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: int describeContents()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getScanTimeMillis()> (SMS_MMS)
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String)> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub: android.app.IAlarmCompleteListener getDefaultImpl()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.Surface: int describeContents()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: android.gsi.GsiProgress getInstallationProgress()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getAuthority()> (SMS_MMS)
<android.app.backup.BackupManager: java.lang.String[] listAllTransports()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.View: int[] getDrawableState()> (SMS_MMS)
<android.os.storage.StorageVolume: int describeContents()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub: android.net.INetworkScoreCache asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getSourceDrawableResId()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserSerialNumber(int)> (SMS_MMS)
<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)> (SMS_MMS)
<android.metrics.LogMaker: int getType()> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$TimeUnit: int toByteArray(byte[],int)> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeNameResource(int)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.view.autofill.IAugmentedAutofillManagerClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.Instrumentation$ActivityResult: int getResultCode()> (SMS_MMS)
<android.telecom.Logging._$$Lambda$SessionManager$hhtZwTEbvO_fLNlAvB6Do9_2gW4: long get()> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getAveragePowerForCpuCluster(int)> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)> (SMS_MMS)
<android.location.Address: java.lang.String getPostalCode()> (SMS_MMS)
<android.widget.Spinner: java.lang.CharSequence getPrompt()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub: android.net.wifi.nl80211.IScanEvent getDefaultImpl()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getAvailableUidStatsLocked(int)> (SMS_MMS)
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub$Proxy: java.util.List getIncidentReportList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.MotionEvent: int getDisplayId()> (SMS_MMS)
<android.app.Notification$TvExtender: java.lang.String getChannelId()> (SMS_MMS)
<android.net.IConnectivityManager$Default: byte[] getNetworkWatchlistConfigHash()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: android.hardware.display.BrightnessCorrection getCorrectionByPackageName(java.lang.String)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.media.soundtrigger_middleware.ISoundTriggerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()> (SMS_MMS)
<android.telephony.CellInfoWcdma: int describeContents()> (SMS_MMS)
<android.hardware.radio.ProgramList$Filter: java.util.Map getVendorFilter()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub: com.android.internal.view.IDragAndDropPermissions asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<android.graphics.RenderNode: float getRotationZ()> (SMS_MMS)
<android.app.ISearchManager$Default: android.content.ComponentName getWebSearchActivity()> (SMS_MMS)
<android.os.WorkSource$WorkChain: int[] getUids()> (SMS_MMS)
<android.telecom.Log: java.lang.String getPackageAbbreviation(java.lang.String)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub: android.security.keystore.IKeystoreService getDefaultImpl()> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: int getStatus()> (SMS_MMS)
<android.view.KeyEvent: int getDeadChar(int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()> (SMS_MMS)
<android.view.Display: android.view.DisplayAdjustments getDisplayAdjustments()> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: float getBlue()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1400(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: android.graphics.Insets getInsets()> (SMS_MMS)
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: byte[] pickBestDigestForV4(java.util.Map)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: int getInstanceId()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager$Model: int getVersion()> (SMS_MMS)
<android.widget.TextView: android.content.UndoManager getUndoManager()> (SMS_MMS)
<android.os.PowerManager: boolean isAmbientDisplayAvailable()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getOverScrollMode()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: int getSoftKeyboardShowMode()> (SMS_MMS)
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()> (SMS_MMS)
<android.app.usage.UsageStats: long getLastTimeUsed()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getTransformCapabilities()> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: int getFlashLockState()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneSignalScanningTimer()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiAudioSystemClient getAudioSystemClient()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.Locale getSimLocale()> (SMS_MMS)
<android.media.Utils: java.io.File getUniqueExternalFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getReadPos()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: boolean getOemUnlockEnabled()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()> (SMS_MMS)
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.os.UserHandle)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getDefaultAppsBackup(int)> (SMS_MMS)
<android.widget.TextView: int getVerticalOffset(boolean)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable5gNonDFSChannels()> (SMS_MMS)
<android.telephony.CellInfoNr$1: void <init>()> (SMS_MMS)
<android.app.AsyncNotedAppOp: long getTime()> (SMS_MMS)
<android.net.NetworkIdentity: int getType()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.job.JobWorkItem: java.lang.Object getGrants()> (SMS_MMS)
<android.os.CpuUsageInfo: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.lang.String[] getWifiIfaces()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub: android.print.IPrintServicesChangeListener getDefaultImpl()> (SMS_MMS)
<android.util.Half: int intValue()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> (SMS_MMS)
<android.media.MediaCas: byte[] access$000(android.media.MediaCas,java.util.ArrayList)> (SMS_MMS)
<android.app.IAlarmManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getStartScrollBottom()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: java.util.List getContextHubs()> (SMS_MMS)
<android.view.IWindowManager$Default: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.proto.ProtoInputStream: int getWireType()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isNetworkLoggingEnabled(android.content.ComponentName)> (SMS_MMS)
<android.content.integrity.RuleSet: java.util.List getRules()> (SMS_MMS)
<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Default: android.hardware.lights.LightState getLightState(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.Context: int getUserId()> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Rect getSafeInset()> (SMS_MMS)
<android.location.Criteria: int access$202(android.location.Criteria,int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isDeviceUpgrading()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isHearingAidCompatibilitySupported()> (SMS_MMS)
<android.view.contentcapture.DataRemovalRequest: java.lang.String getPackageName()> (SMS_MMS)
<android.app.ActivityOptions: android.app.PendingIntent getUsageTimeReport()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: com.android.internal.graphics.palette.ColorCutQuantizer$Vbox splitBox()> (SMS_MMS)
<android.media.IVolumeController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioAttributes: int getAllowedCapturePolicy()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAffiliationIds(android.content.ComponentName)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: int getFillColor()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: android.util.Size getMaxSize(android.util.Size[])> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.util.Pair getMinimumBrightnessCurve()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDeviceIdlingCount(int,int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getNameSource()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getDepth()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getTabCount()> (SMS_MMS)
<android.media.IMediaRouterClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getSharedLibrariesAsUser(int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts(int,boolean)> (SMS_MMS)
<android.view.ViewConfiguration: int getWindowTouchSlop()> (SMS_MMS)
<android.service.notification.StatusBarNotification: long getPostTime()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: java.lang.String getCurrentTransport()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: int getChangingConfigurations()> (SMS_MMS)
<android.telephony.CellInfoNr: android.telephony.CellInfoNr createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.security.keystore.IKeystoreExportKeyCallback getDefaultImpl()> (SMS_MMS)
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)> (SMS_MMS)
<android.telephony.TelephonyHistogram$1: android.telephony.TelephonyHistogram[] newArray(int)> (SMS_MMS)
<android.app.Person: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.animation.ValueAnimator: long getDuration()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$802(android.security.keystore.recovery.KeyChainSnapshot,byte[])> (SMS_MMS)
<android.media.AudioRecordingConfiguration: java.lang.String getClientPackageName()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDeferFullBackup()> (SMS_MMS)
<android.content.pm.FeatureInfo: int describeContents()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.View access$100(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult: int describeContents()> (SMS_MMS)
<android.os.Bundle: short getShort(java.lang.String,short)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase(int)> (SMS_MMS)
<android.hardware.ISerialManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifier$ResponseReceiver: java.lang.Object get()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getDataEnabled(int)> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: java.lang.String getNumber()> (SMS_MMS)
<android.telephony.ServiceState: int getRilDataRadioTechnology()> (SMS_MMS)
<android.graphics.ColorSpace$Lab: float getMaxValue(int)> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTextStyle()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.net.InetAddress getMmsProxyAddress()> (SMS_MMS)
<android.net.Uri$PathSegments: java.lang.Object get(int)> (SMS_MMS)
<android.graphics.Color: float getComponent(int)> (SMS_MMS)
<android.net.IIpSecService$Stub: android.net.IIpSecService getDefaultImpl()> (SMS_MMS)
<android.net.Network: android.net.Network getPrivateDnsBypassingCopy()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: long readLong()> (SMS_MMS)
<android.animation.PathKeyframes$SimpleKeyframes: java.util.ArrayList getKeyframes()> (SMS_MMS)
<android.app.Notification$Action: int describeContents()> (SMS_MMS)
<android.app.backup.BackupDataInput: java.lang.String getKey()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getSystemCaptionsServicePackageName()> (SMS_MMS)
<android.net.IEthernetManager$Default: android.net.IpConfiguration getConfiguration(java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.util.List getEnabledNotificationListenerPackages()> (SMS_MMS)
<android.net.LinkProperties: java.lang.String getTcpBufferSizes()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getExternalStatsCollectionRateLimitMs()> (SMS_MMS)
<android.net.TrafficStats: long getUidUdpTxPackets(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHistoryUsedSize()> (SMS_MMS)
<android.window.DisplayAreaInfo: int describeContents()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File)> (SMS_MMS)
<android.hardware.ICamera$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: byte[] getBytes(int,byte[])> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int getRttMode()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getTextIdEntry()> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.view.IRotationWatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: int getHorizontalGravity(boolean)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor getControlFd(long)> (SMS_MMS)
<android.media.MediaDrm$CertificateRequest: java.lang.String getDefaultUrl()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getPlaybackType()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder getWindowToken(int,int)> (SMS_MMS)
<android.os.IIncidentManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,int)> (SMS_MMS)
<android.telephony.CbGeoUtils$Polygon: boolean contains(android.telephony.CbGeoUtils$LatLng)> (SMS_MMS)
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<android.os.Environment: java.lang.String getExternalStorageState(java.io.File)> (SMS_MMS)
<android.security.IFileIntegrityService$Stub: android.security.IFileIntegrityService asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.hardware.hdmi.IHdmiRecordListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: int describeContents()> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.String getId()> (SMS_MMS)
<android.widget.ImageView: boolean getAdjustViewBounds()> (SMS_MMS)
<android.util.LongSparseLongArray: long get(long)> (SMS_MMS)
<android.graphics.Color: int toArgb()> (SMS_MMS)
<android.media.IAudioService$Default: int getUiSoundsStreamType()> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getOpacity()> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo: int describeContents()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: int describeContents()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub: android.content.pm.IPackageDataObserver getDefaultImpl()> (SMS_MMS)
<android.view.KeyEvent: int getDeviceId()> (SMS_MMS)
<android.app.blob.BlobHandle: java.lang.String getTag()> (SMS_MMS)
<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)> (SMS_MMS)
<android.view.Display: int getWidth()> (SMS_MMS)
<android.view.Window: android.transition.TransitionManager getTransitionManager()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Default: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)> (SMS_MMS)
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)> (SMS_MMS)
<android.app.Instrumentation: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: long getLastAudiblyAlertedMillis()> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub: com.android.internal.textservice.ITextServicesSessionListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.method.CharacterPickerDialog$OptionsAdapter: int getCount()> (SMS_MMS)
<android.media.session.MediaSessionManager: int getSessionPolicies(android.media.session.MediaSession$Token)> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.ResourcesImpl access$300(android.app.ResourcesManager,android.content.res.ResourcesKey)> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.KeyEvent: int getScanCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(java.lang.String,int)> (SMS_MMS)
<android.os.ParcelFileDescriptor: java.io.File getFile(java.io.FileDescriptor)> (SMS_MMS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: android.view.Surface getInputSurface()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.lang.String[] getAllArgs()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.CaptureCollector access$200(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: int getMaxPower()> (SMS_MMS)
<android.net.IEthernetManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: java.util.ArrayList createSnapshots(android.os.Bundle,java.util.Collection)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int getUpperLimit()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.ListView: int getHeightForPosition(int)> (SMS_MMS)
<android.os.LocaleList: int describeContents()> (SMS_MMS)
<android.telephony.CellInfoWcdma$1: android.telephony.CellInfoWcdma[] newArray(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedAccessibilityServicesForUser(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.ViewPropertyAnimator: long getDuration()> (SMS_MMS)
<android.print.PageRange: int hashCode()> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub: android.print.IPrinterDiscoveryObserver getDefaultImpl()> (SMS_MMS)
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)> (SMS_MMS)
<android.text.style.SuperscriptSpan: int getSpanTypeId()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int getShiftedColor(int,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserAdded(int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()> (SMS_MMS)
<android.view.DisplayAddress$Physical: java.lang.Long getModel()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getLockTaskLaunchMode()> (SMS_MMS)
<android.telephony.ServiceState: int getNrFrequencyRange()> (SMS_MMS)
<android.util.KeyValueListParser: long getDurationMillis(java.lang.String,long)> (SMS_MMS)
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> android.permission.RECEIVE_SMS android.permission.READ_SMS (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Default: java.lang.String getMIMEType()> (SMS_MMS)
<android.view.InputDevice: int getGeneration()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanIdentity getLowpanIdentity()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.Network getActiveNetwork()> (SMS_MMS)
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.app.Activity: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()> (SMS_MMS)
<android.content.BroadcastReceiver$PendingResult: int getSendingUserId()> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.projection.MediaProjectionInfo: int hashCode()> (SMS_MMS)
<android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)> (SMS_MMS)
<android.net.Credentials: int getPid()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: java.util.List getChildTasks(android.window.WindowContainerToken,int[])> (SMS_MMS)
<android.location.LocationManager: boolean isProviderEnabledForUser(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.content.ContextWrapper: boolean isDeviceProtectedStorage()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: int getCallId()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getImei()> (SMS_MMS)
<android.hardware.camera2.CaptureFailure: long getFrameNumber()> (SMS_MMS)
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,java.lang.String[])> (SMS_MMS)
<android.telephony.PhoneNumberRange: int describeContents()> (SMS_MMS)
<android.service.notification.ZenModeConfig$EventInfo: int hashCode()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.net.wifi.nl80211.IPnoScanEvent asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.CasSessionRequest: int describeContents()> (SMS_MMS)
<android.app.IWallpaperManager$Default: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getProfileClass()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> (SMS_MMS)
<android.net.lowpan.LowpanManager: java.lang.String[] getInterfaceList()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getDefaultDialerPackage()> (SMS_MMS)
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.security.Principal getSubjectDN()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.app.Fragment: boolean isHideReplaced()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getHeight()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String[] getIgnoreSettingsWhitelist()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: int describeContents()> (SMS_MMS)
<android.view.View: boolean getKeepScreenOn()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setEmergencyOnly(boolean)> (SMS_MMS)
<android.app.NotificationManager: boolean areNotificationsPaused()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.tv.TvTrackInfo: int describeContents()> (SMS_MMS)
<android.widget.ScrollView: int computeVerticalScrollRange()> (SMS_MMS)
<android.location.GnssMeasurementCorrections: double getVerticalPositionUncertaintyMeters()> (SMS_MMS)
<android.hardware.hdmi.HdmiAudioSystemClient: int getDeviceType()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.view.Display$Mode: int getPhysicalHeight()> (SMS_MMS)
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayConfig[] getDisplayConfigs(android.os.IBinder)> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean isEmbedded()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.view.IAppTransitionAnimationSpecsFuture asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.PackageParser$Package: java.util.List getChildPackageNames()> (SMS_MMS)
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: java.lang.String getWidgetType()> (SMS_MMS)
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)> (SMS_MMS)
<android.app.backup.BackupManager: int requestBackup(java.lang.String[],android.app.backup.BackupObserver,android.app.backup.BackupManagerMonitor,int)> (SMS_MMS)
<android.media.session.PlaybackState$CustomAction: int getIcon()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: com.android.internal.telephony.euicc.IGetRulesAuthTableCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.ViewRootImpl$ViewPreImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getTotalBytes(java.util.UUID)> (SMS_MMS)
<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiBatchedScanCount(int,int)> (SMS_MMS)
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)> (SMS_MMS)
<android.app.IUriGrantsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.params.InputConfiguration: int getWidth()> (SMS_MMS)
<android.telephony.PinResult$1: android.telephony.PinResult createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.text.DynamicLayout: boolean getLineContainsTab(int)> (SMS_MMS)
<android.location.GpsClock: double getBiasUncertaintyInNs()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int deleteBindMount(int,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.database.AbstractCursor: int getColumnCount()> (SMS_MMS)
<android.graphics.ImageDecoder: android.graphics.Rect getCrop()> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: byte[] getMessageClass()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getEnterTransition()> (SMS_MMS)
<com.android.internal.policy.DecorContext: android.content.res.Resources getResources()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.Context: int getNextAutofillId()> (SMS_MMS)
<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)> (SMS_MMS)
<android.content.LoggingContentInterface: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.widget.ListView: android.widget.Adapter getAdapter()> (SMS_MMS)
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()> (SMS_MMS)
<android.net.Uri$AbstractPart: java.lang.String getDecoded()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CallQuality: boolean isIncomingSilenceDetectedAtCallSetup()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int access$602(android.view.inputmethod.InputMethodManager,int)> (SMS_MMS)
<android.view.MotionEvent: int getActionIndex()> (SMS_MMS)
<android.hardware.camera2.legacy.ParameterUtils: float getMaxZoomRatio(android.hardware.Camera$Parameters)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String convertPreDial(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNai(int)> (SMS_MMS)
<android.media.MediaMetadataRetriever$BitmapParams: android.graphics.Bitmap$Config getActualConfig()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult$1: com.android.internal.telephony.CellNetworkScanResult createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabled()> (SMS_MMS)
<android.telephony.CellIdentityCdma$1: android.telephony.CellIdentityCdma[] newArray(int)> (SMS_MMS)
<android.security.KeyStore: byte[] get(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfileCalendarPackages()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)> (SMS_MMS)
<android.hardware.usb.ParcelableUsbPort: int describeContents()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreRSAPrivateKey: java.math.BigInteger getModulus()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int clearSubInfo()> (SMS_MMS)
<android.content.pm.ShortcutManager: int getIconMaxHeight()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.animation.AnimationSet: java.util.List getAnimations()> (SMS_MMS)
<android.widget.GridView: int lookForSelectablePosition(int,boolean)> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow: int clipVertically(int)> (SMS_MMS)
<android.view.View$MatchLabelForPredicate: int access$1302(android.view.View$MatchLabelForPredicate,int)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$1000(int)> (SMS_MMS)
<android.location.LocationManager: boolean isProviderPackage(java.lang.String)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotAfter()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.hardware.biometrics.IBiometricServiceLockoutResetCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textclassifier.TextLinks: android.os.Bundle getExtras()> (SMS_MMS)
<android.graphics.Canvas: int getMaximumBitmapWidth()> (SMS_MMS)
<android.view.ViewRootImpl$NativePreImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.WindowManagerImpl: android.view.WindowMetrics getCurrentWindowMetrics()> (SMS_MMS)
<android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSessionLegacyHelper getHelper(android.content.Context)> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback getDefaultImpl()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: android.view.textclassifier.TextClassifier$EntityConfig getTypeConfig()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getRxTimeMillis()> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Default: int canAuthenticate(java.lang.String,int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: int describeContents()> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: int getInputMethodWindowVisibleHeight()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCOLR()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int getToolchainVersion()> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String)> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getTimingAdvance()> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: int describeContents()> (SMS_MMS)
<android.graphics.Paint: float getStrokeWidth()> (SMS_MMS)
<android.telephony.CellIdentityGsm: void updateGlobalCellId()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()> (SMS_MMS)
<android.os.INetworkManagementService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.net.IProxyService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$1: android.telephony.CarrierRestrictionRules[] newArray(int)> (SMS_MMS)
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.os.storage.StorageVolume: long getMaxFileSize()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.RadioAccessFamily: int describeContents()> (SMS_MMS)
<android.net.wifi.nl80211.HiddenNetwork: int describeContents()> (SMS_MMS)
<android.telephony.CellInfoTdscdma: int describeContents()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: java.util.List getDevicesForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IncidentManager$IncidentReport: java.io.InputStream getInputStream()> (SMS_MMS)
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()> (SMS_MMS)
<android.database.CursorWindow: double getDouble(int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)> (SMS_MMS)
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)> (SMS_MMS)
<android.net.IpSecConfig: android.net.IpSecAlgorithm getAuthentication()> (SMS_MMS)
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Default: int getRegistrationTechnology()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSubscriptionId(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)> (SMS_MMS)
<android.service.notification.StatusBarNotification: int getNormalizedUserId()> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getRuntimePermissionBackup$5(android.os.UserHandle,android.permission.IPermissionController)> (SMS_MMS)
<android.net.Uri$AbstractHierarchicalUri: int getPort()> (SMS_MMS)
<android.os.Environment: java.io.File getDataRefProfilesDePackageDirectory(java.lang.String)> (SMS_MMS)
<android.app.slice.SliceItem: android.app.PendingIntent getAction()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.RemoteAnimationDefinition$RemoteAnimationAdapterEntry: int describeContents()> (SMS_MMS)
<com.android.internal.util.AsyncChannel: int fullyConnectSync(android.content.Context,android.os.Handler,android.os.Handler)> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: double getAsDouble()> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Default: java.lang.String[] getInterfaceList()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getPrimaryImage(android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<android.util.Pair: int hashCode()> (SMS_MMS)
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String)> (SMS_MMS)
<android.view.View$11: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: java.time.LocalTime getNightDisplayCustomEndTime()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getManagedProfileMaximumTimeOff(android.content.ComponentName)> (SMS_MMS)
<android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getPowerConsumptionMw()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getSpanTypeId()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionParams: boolean getEnableRollback()> (SMS_MMS)
<android.app.job.JobInfo: long getMinPeriodMillis()> (SMS_MMS)
<android.net.MacAddress: int getAddressType()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getAccessibleSubscriptionInfoList(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.X509Certificate getTrustAnchor(java.security.cert.X509Certificate)> (SMS_MMS)
<android.app.ActivityOptions: int getLaunchTaskId()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: int describeContents()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String)> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetEnd()> (SMS_MMS)
<android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: java.util.Map getRecoveryStatus()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean rebootModem(int)> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.os.IPowerManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getFullPowerWhitelistExceptIdle()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: int describeContents()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub$Proxy: android.content.Intent createLocalApprovalIntent()> (SMS_MMS)
<android.media.MediaFormat: long getLong(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: long cancelRepeating(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int captureBurst(java.util.List,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)> (SMS_MMS)
<com.android.internal.os.FuseAppLoop$BytesMap: byte[] startUsing(long)> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener getDefaultImpl()> (SMS_MMS)
<android.widget.TextView: int getSelectionStart()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: android.media.soundtrigger.SoundTriggerManager$Model getModel(java.util.UUID)> (SMS_MMS)
<android.graphics.RecordingCanvas: int getWidth()> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize getStandardMediaSizeById(java.lang.String)> (SMS_MMS)
<android.printservice.recommendation.RecommendationInfo: int getNumDiscoveredPrinters()> (SMS_MMS)
<android.telephony.ServiceState: int getDataNetworkType()> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()> (SMS_MMS)
<android.media.AudioManager: boolean isStreamAffectedByMute(int)> (SMS_MMS)
<android.app.INotificationManager$Default: int getHintsFromListener(android.service.notification.INotificationListener)> (SMS_MMS)
<android.transition.ChangeBounds$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.widget.OverScroller: int getFinalX()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: long getBeginTimeMillis()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub: android.print.ILayoutResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.CpuUsageInfo: long getActive()> (SMS_MMS)
<android.content.pm.VerifierInfo: int describeContents()> (SMS_MMS)
<android.app.AppOpsManager: int checkAudioOp(int,int,int,java.lang.String)> (SMS_MMS)
<android.net.IpSecAlgorithm: byte[] getKey()> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: java.util.List getUsers()> (SMS_MMS)
<android.net.NetworkStats: int findIndexHinted(java.lang.String,int,int,int,int,int,int,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> (SMS_MMS)
<android.print.PrinterId: java.lang.String getLocalId()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: int getItemViewType(int)> (SMS_MMS)
<com.android.internal.os.TransferPipe: java.io.OutputStream getNewOutputStream()> (SMS_MMS)
<android.app.LoadedApk: java.io.File getDataDirFile()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int checkProvisioningPreCondition(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.ConnectivityManager: boolean getMobileDataEnabled()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getPath()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkCapabilities: int[] getAdministratorUids()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getPrivAppDenyPermissions(java.lang.String)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: long getmtime(java.lang.String,int)> (SMS_MMS)
<android.telephony.ims.feature.ImsFeature$Capabilities: int getMask()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean isOpen()> (SMS_MMS)
<android.media.MicrophoneInfo: int getDirectionality()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: byte[] getEnvelopeBearerData()> (SMS_MMS)
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()> (SMS_MMS)
<android.os.ZygoteProcess$ZygoteState: boolean isClosed()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: java.util.List getIntentFilters()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDeferKeyValueBackup()> (SMS_MMS)
<android.content.IIntentReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$400(int)> (SMS_MMS)
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.net.NetworkProvider: android.os.Messenger getMessenger()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int access$600(android.hardware.camera2.impl.CameraOfflineSessionImpl)> (SMS_MMS)
<android.telecom.PhoneAccount: android.telecom.PhoneAccountHandle getAccountHandle()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int describeContents()> (SMS_MMS)
<android.location.GpsMeasurement: double getPseudorangeRateInMetersPerSec()> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: java.lang.String getIccid()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForStrategyWithLegacyStreamType(int)> (SMS_MMS)
<android.location.GnssStatus$GnssSvInfo: int access$100(android.location.GnssStatus$GnssSvInfo)> (SMS_MMS)
<android.media.session.ISessionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getNumBytesTx()> (SMS_MMS)
<android.net.LocalSocketImpl$SocketInputStream: int read()> (SMS_MMS)
<android.media.midi.MidiPortImpl: long getPacketTimestamp(byte[],int)> (SMS_MMS)
<android.widget.TextView: int getAutoSizeTextType()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: android.os.storage.VolumeInfo[] getVolumes(int)> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.PorterDuffColorFilter: long createNativeInstance()> (SMS_MMS)
<android.media.IMediaRouter2$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getAllSessions(java.lang.String)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getRoaming()> (SMS_MMS)
<android.webkit.WebStorage$Origin: long getUsage()> (SMS_MMS)
<android.widget.AdapterView: int findSyncPosition()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: long getMetadataPtr()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getPassword()> (SMS_MMS)
<android.filterfw.core.SyncRunner: int step()> (SMS_MMS)
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()> (SMS_MMS)
<android.os.IServiceCallback$Stub: android.os.IServiceCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub$Proxy: int getPreferredDataSubscriptionId(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()> (SMS_MMS)
<android.app.NotificationManager: android.app.INotificationManager getService()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getVolumeHandling()> (SMS_MMS)
<android.media.session.MediaSession$Token: android.media.session.ISessionController getBinder()> (SMS_MMS)
<android.net.TelephonyNetworkSpecifier: int hashCode()> (SMS_MMS)
<android.app.IApplicationThread$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Paint: java.util.Locale getTextLocale()> (SMS_MMS)
<android.telephony.AccessNetworkConstants$NgranBands: int getFrequencyRangeGroup(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getInstalledAccessibilityServiceList(int)> (SMS_MMS)
<android.media.tv.TvContentRating: java.lang.String getMainRating()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(java.lang.String)> (SMS_MMS)
<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()> (SMS_MMS)
<android.widget.SuggestionsAdapter$1: long getPostingDelay(java.lang.CharSequence)> (SMS_MMS)
<android.app.timedetector.NetworkTimeSuggestion: android.os.TimestampedValue getUtcTime()> (SMS_MMS)
<android.app.SearchableInfo: int getSettingsDescriptionId()> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfo$Info: byte getDiscriminator()> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int getHeight()> (SMS_MMS)
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmap(boolean)> (SMS_MMS)
<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()> (SMS_MMS)
<android.database.CursorWrapper: android.net.Uri getNotificationUri()> (SMS_MMS)
<android.util.apk.VerbatimX509Certificate: byte[] getEncoded()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()> (SMS_MMS)
<android.content.pm.ShortcutManager: java.util.List getShareTargets(android.content.IntentFilter)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.telephony.SmsRawData$1: void <init>()> (SMS_MMS)
<android.os.StatFs: int getAvailableBlocks()> (SMS_MMS)
<android.app.NotificationManager: android.content.ComponentName getAllowedNotificationAssistant()> (SMS_MMS)
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()> (SMS_MMS)
<android.media.MediaCodec$MediaImage$MediaPlane: java.nio.ByteBuffer getBuffer()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSetupWizardPackageName()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()> (SMS_MMS)
<android.text.StaticLayout: int getTopPadding()> (SMS_MMS)
<android.view.autofill.AutofillId: int getVirtualChildIntId()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: int getCount()> (SMS_MMS)
<android.service.notification.Adjustment: int getUser()> (SMS_MMS)
<android.graphics.Rect$UnflattenHelper: java.util.regex.Matcher getMatcher(java.lang.String)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub: com.android.internal.compat.IPlatformCompat getDefaultImpl()> (SMS_MMS)
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.media.MediaRoute2Info: int hashCode()> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.JobParameters: java.lang.String[] getTriggeredContentAuthorities()> (SMS_MMS)
<android.os.storage.VolumeInfo: android.os.storage.DiskInfo getDisk()> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getProfiles()> (SMS_MMS)
<android.hardware.input.KeyboardLayout: int describeContents()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserBadgeDarkColorResId(int)> (SMS_MMS)
<android.renderscript.RenderScript: int nMeshGetIndexCount(long)> (SMS_MMS)
<android.os.ZygoteProcess: android.net.LocalSocketAddress getPrimarySocketAddress()> (SMS_MMS)
<android.app.Fragment: android.animation.Animator getAnimatingAway()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.PrintDocumentInfo: int getContentType()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: java.lang.String getEntity(int)> (SMS_MMS)
<android.content.pm.PackageParser$Package: java.util.List getAllCodePaths()> (SMS_MMS)
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.view.WindowInsetsAnimation$Bounds: android.graphics.Insets getLowerBound()> (SMS_MMS)
<android.text.PackedObjectVector: int width()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)> (SMS_MMS)
<android.os.SystemConfigManager: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()> (SMS_MMS)
<android.graphics.ColorSpace: java.lang.String getName()> (SMS_MMS)
<android.app.ActivityManager: int getLockTaskModeState()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Im: int getProtocolLabelResource(int)> (SMS_MMS)
<android.widget.ArrayAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.os.IUserManager$Default: java.lang.String getUserName()> (SMS_MMS)
<android.graphics.Outline: float getAlpha()> (SMS_MMS)
<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)> (SMS_MMS)
<android.transition.ChangeTransform$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.graphics.RectF: int hashCode()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)> (SMS_MMS)
<android.app.IAlarmListener$Stub: android.app.IAlarmListener getDefaultImpl()> (SMS_MMS)
<android.renderscript.Type: android.renderscript.Element getElement()> (SMS_MMS)
<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> (SMS_MMS)
<android.app.AppOpsManager$OpEventProxyInfo: int describeContents()> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: java.util.Map getVendorInfo()> (SMS_MMS)
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.content.res.Resources)> (SMS_MMS)
<android.telephony.PhoneNumberRange$1: android.telephony.PhoneNumberRange createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ChangedPackages getChangedPackages(int)> (SMS_MMS)
<android.media.AudioSystem: int getValueForVibrateSetting(int,int,int)> (SMS_MMS)
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getMinimumColorTemperature(android.content.Context)> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.text.method.DialerKeyListener: char[] getAcceptedChars()> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: int getEndIndex()> (SMS_MMS)
<android.view.View$4: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: android.view.AppTransitionAnimationSpec[] get()> (SMS_MMS)
<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$VideoEvent: int describeContents()> (SMS_MMS)
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String,boolean)> (SMS_MMS)
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()> (SMS_MMS)
<android.app.IWindowToken$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputFormats()> (SMS_MMS)
<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)> (SMS_MMS)
<com.android.internal.os.RuntimeInit: java.lang.String lambda$commonInit$0()> (SMS_MMS)
<android.widget.AdapterViewAnimator: int access$000(android.widget.AdapterViewAnimator)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getGlobalPrivateDnsMode(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatterySipper: int compareTo(java.lang.Object)> (SMS_MMS)
<android.telephony.ServiceState$1: android.telephony.ServiceState[] newArray(int)> (SMS_MMS)
<android.media.VolumeShaper$State: float getVolume()> (SMS_MMS)
<android.widget.Spinner: int getDropDownHorizontalOffset()> (SMS_MMS)
<android.media.tv.TvInputInfo: int describeContents()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.IOverrideValidator getOverrideValidator()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()> (SMS_MMS)
<android.app.SystemServiceRegistry$11: android.hardware.hdmi.HdmiControlManager createService()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isUnattendedManagedKiosk()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler)> (SMS_MMS)
<android.view.ViewRootImpl: int getTextDirection()> (SMS_MMS)
<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getShortcutId()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.telephony.ims.aidl.IImsMmTelListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.net.IpSecConfig: android.net.IpSecAlgorithm getEncryption()> (SMS_MMS)
<android.view.View: int getSuggestedMinimumHeight()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> (SMS_MMS)
<android.app.Activity: android.app.FragmentManager getFragmentManager()> (SMS_MMS)
<android.service.vr.IVrManager$Default: boolean getPersistentVrModeEnabled()> (SMS_MMS)
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> (SMS_MMS)
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.os.UserManager: java.util.List getUserProfiles()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModelEvent: int hashCode()> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$XMBKvTqAZ_tfr6YV6zRf1verEog: int applyAsInt(java.lang.Object)> (SMS_MMS)
<android.renderscript.FieldPacker: int getPos()> (SMS_MMS)
<android.app.Notification: int getGroupAlertBehavior()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.widget.RadioGroup: int getCheckedRadioButtonId()> (SMS_MMS)
<android.net.IpSecManager$UdpEncapsulationSocket: int getResourceId()> (SMS_MMS)
<android.location.GnssMeasurement: int getSvid()> (SMS_MMS)
<android.text.DynamicLayout: int getEllipsizedWidth()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.app.IAppTask$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo()> (SMS_MMS)
<android.os.NullVibrator: android.os.NullVibrator getInstance()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: java.lang.CharSequence getLabel()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: int describeContents()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getMimeGroup(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.Temperature: float getValue()> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback()> (SMS_MMS)
<android.hardware.radio.V1_0.WcdmaSignalStrength: int hashCode()> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue getFrom()> (SMS_MMS)
<android.graphics.Color: boolean isSrgb()> (SMS_MMS)
<android.telephony.TelephonyManager: int getNumberOfModemsWithSimultaneousDataConnections()> (SMS_MMS)
<android.net.NetworkStats: long getElapsedRealtimeAge()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.lang.String access$100(android.telephony.VisualVoicemailSmsFilterSettings$Builder)> (SMS_MMS)
<android.text.style.TypefaceSpan: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSupportedModemCount()> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: int getLayoutNumRows()> (SMS_MMS)
<android.telephony.ModemActivityInfo: int describeContents()> (SMS_MMS)
<android.media.midi.MidiDeviceStatus: android.media.midi.MidiDeviceInfo getDeviceInfo()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()> (SMS_MMS)
<android.media.AudioManager: int listPreviousAudioDevicePorts(java.util.ArrayList)> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateService()> (SMS_MMS)
<android.widget.OverScroller: int getStartY()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLeftPadding()> (SMS_MMS)
<android.service.vr.IVrManager$Stub$Proxy: int getVr2dDisplayId()> (SMS_MMS)
<android.permission.IPermissionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GpsClock: double getBiasInNs()> (SMS_MMS)
<android.graphics.fonts.SystemFonts: android.graphics.fonts.FontFamily[] getSystemFallback(java.lang.String)> (SMS_MMS)
<android.os.FileUtils$1: int compare(java.io.File,java.io.File)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getDefaultSubId()> (SMS_MMS)
<android.app.NotificationChannelGroup: java.lang.String getId()> (SMS_MMS)
<android.os.storage.VolumeInfo: java.io.File getInternalPathForUser(int)> (SMS_MMS)
<android.net.NetworkScoreManager: android.net.NetworkScorerAppData getActiveScorer()> (SMS_MMS)
<android.media.MediaRouterClientState: android.media.MediaRouterClientState$RouteInfo getRoute(java.lang.String)> (SMS_MMS)
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()> (SMS_MMS)
<android.telephony.ims.feature.ImsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()> (SMS_MMS)
<android.widget.Toolbar: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.widget.AdapterViewAnimator: int modulo(int,int)> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.ApkAssets[] access$102(android.content.res.AssetManager,android.content.res.ApkAssets[])> (SMS_MMS)
<android.telephony.PreciseCallState$1: android.telephony.PreciseCallState[] newArray(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: int describeContents()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)> (SMS_MMS)
<android.text.FontConfig$Font: java.lang.String getFontName()> (SMS_MMS)
<android.widget.Magnifier: android.graphics.Point getPosition()> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo[] newArray(int)> (SMS_MMS)
<android.graphics.Path: android.graphics.Path$FillType getFillType()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getPhoneAccountsSupportingScheme(java.lang.String,java.lang.String)> (SMS_MMS)
<android.filterfw.core.VertexFrame: float[] getFloats()> (SMS_MMS)
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ICellInfoCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaPrlVersion(int)> (SMS_MMS)
<android.hardware.CameraStatus: int describeContents()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getRsrp()> (SMS_MMS)
<android.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()> (SMS_MMS)
<android.view.animation.PathInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.net.ConnectivityThread: android.os.Looper getInstanceLooper()> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintJobInfos(int,int)> (SMS_MMS)
<android.app.backup.FullBackupDataOutput: long getSize()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getId()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isInUse()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int describeContents()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int getRegion()> (SMS_MMS)
<android.app.role.IRoleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean disableDataConnectivity()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getAlpha()> (SMS_MMS)
<android.telephony.SmsCbMessage: boolean isEtwsMessage()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedService: int getForegroundServiceType()> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: long getMaximumDataBlockSize()> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()> (SMS_MMS)
<android.location.GpsMeasurement: short getState()> (SMS_MMS)
<android.hardware.camera2.params.ReprocessFormatsMap: int hashCode()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.hardware.biometrics.IBiometricServiceReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getProgressBackgroundTintMode()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])> (SMS_MMS)
<android.os.IThermalStatusListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.HardwareBuffer: int getHeight()> (SMS_MMS)
<android.os.ISystemConfig$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)> (SMS_MMS)
<android.os.Debug: int getThreadAllocSize()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getStarts(int)> (SMS_MMS)
<android.view.autofill.AutofillManager$AugmentedAutofillManagerClient: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)> (SMS_MMS)
<android.widget.ImageView: boolean getBaselineAlignBottom()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)> (SMS_MMS)
<android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getTaskAffinity()> (SMS_MMS)
<android.content.IntentFilter: java.lang.String getAction(int)> (SMS_MMS)
<android.telephony.CellInfoLte: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> (SMS_MMS)
<android.text.style.RelativeSizeSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: int getOtaStatus(int)> (SMS_MMS)
<android.print.PrinterId: int describeContents()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<android.app.Activity$HostCallbacks: int onGetWindowAnimations()> (SMS_MMS)
<android.text.MeasuredParagraph: android.text.Layout$Directions getDirections(int,int)> (SMS_MMS)
<android.media.AudioManager: int getDeviceVolumeBehavior(int,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getActiveNetwork()> (SMS_MMS)
<android.app.SystemServiceRegistry$21: android.location.CountryDetector createService()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: java.lang.String generateLocation()> (SMS_MMS)
<android.widget.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.os.Binder: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioTrack: int getSampleRate()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getPersistableMode()> (SMS_MMS)
<android.database.AbstractWindowedCursor: short getShort(int)> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: int getRotation()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getClassName()> (SMS_MMS)
<android.widget.ListPopupWindow: int getHeight()> (SMS_MMS)
<android.media.VolumeShaper: int getId()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: java.lang.String getPackageName()> (SMS_MMS)
<android.widget.TextView: android.os.LocaleList getImeHintLocales()> (SMS_MMS)
<android.content.ContentProvider: android.content.Context requireContext()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()> (SMS_MMS)
<android.view._$$Lambda$FocusFinder$P8rLvOJhymJH5ALAgUjGaM5gxKA: android.view.View get(android.view.View,android.view.View)> (SMS_MMS)
<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSmsSubId()> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int getTitleResId()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getInstalledModules(int)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedFrameRates()> (SMS_MMS)
<android.telephony.UiccCardInfo: boolean isEuicc()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getSnoozedNotificationsFromListener(android.service.notification.INotificationListener,int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModelEvent: int describeContents()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)> (SMS_MMS)
<android.media.session.PlaybackState: float getPlaybackSpeed()> (SMS_MMS)
<android.app.backup.FullBackup$BackupScheme: boolean isFullBackupContentEnabled()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getApnSetId()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getPrimaries(float[])> (SMS_MMS)
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)> (SMS_MMS)
<android.view.WindowMetrics: android.graphics.Rect getBounds()> (SMS_MMS)
<android.media.AudioAttributes: int getCapturePreset()> (SMS_MMS)
<android.app.IAppTask$Stub: android.app.IAppTask asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioGain: int rampDurationMaxMs()> (SMS_MMS)
<android.app.Activity: android.os.IBinder autofillClientGetActivityToken()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()> (SMS_MMS)
<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri: int hashCode()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: byte[] getInstantAppCookie(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: android.util.Size getSize()> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: boolean getFeature(java.lang.String)> (SMS_MMS)
<android.app.compat.ChangeIdStateQuery: int hashCode()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: byte getChreApiMinorVersion()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getRingerModeInternal()> (SMS_MMS)
<android.security.KeyStore: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)> (SMS_MMS)
<android.service.autofill.UserData: int getMaxUserDataSize()> (SMS_MMS)
<android.os.VibrationEffect$Prebaked: long getDuration()> (SMS_MMS)
<android.net.IpPrefix: byte[] access$000(android.net.IpPrefix)> (SMS_MMS)
<android.view.ViewTreeObserver$CopyOnWriteArray: int size()> (SMS_MMS)
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)> (SMS_MMS)
<android.telecom.VideoProfile: int getQuality()> (SMS_MMS)
<android.content.ContentResolver: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmount(int)> (SMS_MMS)
<android.view.ViewConfiguration: long getAccessibilityShortcutKeyTimeoutAfterConfirmation()> (SMS_MMS)
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()> (SMS_MMS)
<android.view.IWindowSession$Stub: android.view.IWindowSession asInterface(android.os.IBinder)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getSubject()> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: int[] getAllAttributes()> (SMS_MMS)
<android.view.Choreographer: long getFrameTime()> (SMS_MMS)
<android.os.Temperature: int getStatus()> (SMS_MMS)
<android.os.IncidentReportArgs: int sectionCount()> (SMS_MMS)
<android.graphics.animation.RenderNodeAnimator: long getDuration()> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> (SMS_MMS)
<android.view.InsetsSource: int getType()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()> (SMS_MMS)
<android.media.IAudioService$Default: int getRingerModeInternal()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.metrics.LogMaker: long getTimestamp()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int getUarfcn()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)> (SMS_MMS)
<android.graphics.Region: android.graphics.Rect getBounds()> (SMS_MMS)
<com.android.internal.os.ClassLoaderFactory: java.lang.String getPathClassLoaderName()> (SMS_MMS)
<android.widget.CursorAdapter: android.database.Cursor getCursor()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getDominantColor(int)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryTotalPss()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getCurrentInsets()> (SMS_MMS)
<android.app.admin.PasswordMetrics$ComplexityBucket$1: int getMinimumLength(boolean)> (SMS_MMS)
<android.os.IUserManager$Default: android.os.Bundle getDefaultGuestRestrictions()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.renderscript.Float2: float get(int)> (SMS_MMS)
<android.text.style.LineBackgroundSpan$Standard: int describeContents()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.media.tv.tunerresourcemanager.IResourcesReclaimListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProcess: int getGwpAsanMode()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeCount()> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()> (SMS_MMS)
<android.os.PowerManager: boolean isSustainedPerformanceModeSupported()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IMediaRouterClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int,long)> (SMS_MMS)
<android.location.GnssMeasurementCorrections: long getToaGpsNanosecondsOfWeek()> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: int describeContents()> (SMS_MMS)
<android.os.SystemProperties: long getLong(java.lang.String,long)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeSuggestedWordStartIndex()> (SMS_MMS)
<android.view.KeyEvent: int getFlags()> (SMS_MMS)
<android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: int getEndLineHyphenEdit(int)> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: void requestEmbeddedSubscriptionInfoListRefresh()> (SMS_MMS)
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)> (SMS_MMS)
<android.telephony.CallAttributes: int hashCode()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getExternalCacheDir()> (SMS_MMS)
<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()> (SMS_MMS)
<android.app.IBackupAgent$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getAlternateSetting()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: long getTotalBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.ICancellationSignal$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)> (SMS_MMS)
<android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.integrity.RuleSet: java.lang.String getVersion()> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getInterfaceClass()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.app.INotificationManager$Default: java.util.List getAllowedAssistantAdjustments(java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: int getChangingConfigurations()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.TextClassificationSessionId: int describeContents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo2Callback getDefaultImpl()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: android.telephony.NetworkRegistrationInfo sanitizeLocationInfo()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getUiccCardsInfo(java.lang.String)> (SMS_MMS)
<android.internal.hidl.base.V1_0.DebugInfo: int hashCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAppTasks(java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: java.util.List getScanResults(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighResolutionOutputSizes(int)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: boolean isValid()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub: android.app.admin.StartInstallingUpdateCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: boolean isMultiPackage()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4600()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri getReferrerUri()> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int describeContents()> (SMS_MMS)
<android.text.PackedObjectVector: int size()> (SMS_MMS)
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> (SMS_MMS)
<android.widget.TextView: java.lang.String getSelectedText()> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int getGeneration()> (SMS_MMS)
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaMin(int)> (SMS_MMS)
<android.widget.Editor: float getLastUpPositionY()> (SMS_MMS)
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: boolean isCreated()> (SMS_MMS)
<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getVendorId()> (SMS_MMS)
<android.media.MediaFormat: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getPackagesWithCarrierPrivileges()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getDurationHour()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getServices(int,int)> (SMS_MMS)
<android.util.jar.StrictJarFile$FDStream: int read()> (SMS_MMS)
<android.app.NotificationManager: android.app.NotificationManager$Policy getNotificationPolicy()> (SMS_MMS)
<android.telephony.ServiceState$1: void <init>()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getPrivateFlagsForUid(int)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)> (SMS_MMS)
<android.media.AudioManager: int getVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.os.IVibratorStateListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CellInfoNr: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Range getFpsRange()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: boolean isCallerCurrentAlwaysOnVpnLockdownApp()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: java.util.List getBands()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioMetadata$AutoGrowByteBuffer: int position()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mutate()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.TelecomAnalytics dumpCallAnalytics()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryRepeatCallers()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPackageSuspended()> (SMS_MMS)
<android.widget.TextView: int getMinEms()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerDescramblerRequest: int describeContents()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.Bitmap getBitmapAsUser(int,boolean)> (SMS_MMS)
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: int schedule(android.app.job.JobInfo)> (SMS_MMS)
<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Default: android.media.midi.MidiDeviceInfo getDeviceInfo()> (SMS_MMS)
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.content.SyncRequest: long getSyncRunTime()> (SMS_MMS)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.os.Bundle getExtras()> (SMS_MMS)
<android.view.InsetsState: int calculateUncontrollableInsetsFromFrame(android.graphics.Rect)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeBindMount(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.app.contentsuggestions.IContentSuggestionsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.AbsListView: int getListPaddingBottom()> (SMS_MMS)
<android.graphics.ParcelableColorSpace: float getMaxValue(int)> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getInsets(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.proto.ProtoStream: int getOffsetFromToken(long)> (SMS_MMS)
<android.telephony.ServiceState: boolean isIwlanPreferred()> (SMS_MMS)
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int unlock(int,java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int getDisplayId()> (SMS_MMS)
<android.location.GpsStatus: java.lang.Iterable getSatellites()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CallQuality: int getAverageRelativeJitter()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int describeContents()> (SMS_MMS)
<android.text.FontConfig$Font: java.lang.String getFallbackFor()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTextSelectionStart()> (SMS_MMS)
<android.os.IThermalStatusListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: int getDesiredMinimumHeight()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.input.KeyboardLayout: int getProductId()> (SMS_MMS)
<android.telephony.SmsManager: int getDefaultSmsSubscriptionId()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getDbm()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: int getChildCount()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.TextureLayer: long getLayerHandle()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)> (SMS_MMS)
<android.telephony.AccessNetworkUtils: int getOperatingBandForEarfcn(int)> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()> (SMS_MMS)
<android.widget.TextView: int getAutoSizeMaxTextSize()> (SMS_MMS)
<android.app.RemoteAction: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray getSplitDependencies()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub: com.android.internal.inputmethod.IInputContentUriToken getDefaultImpl()> (SMS_MMS)
<android.media.AudioManager: boolean isVolumeFixed()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getPath()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$7: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.util.EventLog$Event: long getTimeNanos()> (SMS_MMS)
<android.telephony.euicc.EuiccManager: void getDefaultDownloadableSubscriptionList(android.app.PendingIntent)> (SMS_MMS)
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()> (SMS_MMS)
<android.telephony.SignalStrength: boolean isGsm()> (SMS_MMS)
<android.telephony.SignalStrength: int getGsmLevel()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdType()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRecords: int access$1900(com.android.internal.util.StateMachine$LogRecords)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> (SMS_MMS)
<android.view.View: long getUniqueDrawingId()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Activity: android.content.ComponentName getCallingActivity()> (SMS_MMS)
<android.app.Notification: java.lang.CharSequence getSettingsText()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule$Builder addRuleFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List access$202(android.telephony.CarrierRestrictionRules,java.util.List)> (SMS_MMS)
<android.app.ContextImpl: android.view.Display getDisplay()> (SMS_MMS)
<android.security.keymaster.KeymasterDefs: java.lang.String getErrorMessage(int)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Default: int getConfigInt(int)> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub: android.app.prediction.IPredictionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.TestLooperManager: android.os.MessageQueue getMessageQueue()> (SMS_MMS)
<android.media.MediaDrm$KeyRequest: java.lang.String getDefaultUrl()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules build()> (SMS_MMS)
<android.app.job.JobWorkItem: int getWorkId()> (SMS_MMS)
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage(android.os.UserHandle)> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Proxy: int hashCode()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int hashCode()> (SMS_MMS)
<android.app.Dialog: android.app.ActionBar getActionBar()> (SMS_MMS)
<android.media.AudioManager: java.util.List getActivePlaybackConfigurations()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isOverrideApnEnabled(android.content.ComponentName)> (SMS_MMS)
<android.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getRotationAnimation()> (SMS_MMS)
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: int getRadioPowerState()> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: java.lang.String getName()> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub: android.window.IDisplayAreaOrganizerController getDefaultImpl()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)> (SMS_MMS)
<android.widget.ExpandableListView: int getFlatListPosition(long)> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy$InstallationOption: long getEffectiveTime()> (SMS_MMS)
<android.media.MediaMetadata: long getLong(java.lang.String)> (SMS_MMS)
<android.hardware.lights.Light: int getId()> (SMS_MMS)
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()> (SMS_MMS)
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)> (SMS_MMS)
<android.telephony.CdmaEriInformation: int getEriIconMode()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isSaturationActivated()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.PackageParser$Package: long getLongVersionCode()> (SMS_MMS)
<android.location.GnssAntennaInfo$SphericalCorrections: double[][] getCorrectionUncertaintiesArray()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub$Proxy: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)> (SMS_MMS)
<com.android.internal.app.LocalePicker: java.lang.String[] getSupportedLocales(android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: com.android.internal.telephony.euicc.IGetProfileCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: int getScanState()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: java.lang.String getErrorPhysicalCameraId()> (SMS_MMS)
<android.os.UserManager: boolean isManagedProfile(int)> (SMS_MMS)
<android.media.tv.TvTrackInfo: int getAudioSampleRate()> (SMS_MMS)
<android.text.Annotation: int getSpanTypeId()> (SMS_MMS)
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getIncidentReportApproverPackageName()> (SMS_MMS)
<android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)> (SMS_MMS)
<android.graphics.ImageDecoder$DecodeException: android.graphics.ImageDecoder$Source getSource()> (SMS_MMS)
<android.media.AudioTrack: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.app.PictureInPictureParams: java.util.List getActions()> (SMS_MMS)
<android.os.ResultReceiver: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: int checkPermission(java.lang.String,int,int)> (SMS_MMS)
<android.location.ILocationListener$Stub: android.location.ILocationListener getDefaultImpl()> (SMS_MMS)
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.JobInfo: int getBackoffPolicy()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)> (SMS_MMS)
<android.view.animation.GridLayoutAnimationController: float getRowDelay()> (SMS_MMS)
<android.widget.OverScroller: int timePassed()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForOriginationEnd()> (SMS_MMS)
<android.telephony.SmsManager$3: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)> (SMS_MMS)
<android.content.Context: java.io.File getCrateDir(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRecommendedStreamConfiguration$MarshalerRecommendedStreamConfiguration: int getNativeSize()> (SMS_MMS)
<android.graphics.RenderNode: boolean getClipToBounds()> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getSlotIndex()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()> (SMS_MMS)
<android.widget.HorizontalScrollView: int getLeftEdgeEffectColor()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.UiAutomation: java.util.List getWindows()> (SMS_MMS)
<android.animation.StateListAnimator$Tuple: android.animation.Animator getAnimator()> (SMS_MMS)
<android.widget.TextView: int getCurrentHintTextColor()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$VideoCapabilities getVideoCapabilities()> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getOpacity()> (SMS_MMS)
<android.location.LocationManager: java.util.List getProviders(boolean)> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo: int hashCode()> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: int getEndIndex()> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentSender: android.content.IIntentSender getTarget()> (SMS_MMS)
<android.text.Layout: int getLineEnd(int)> (SMS_MMS)
<android.text.method.WordIterator: int getPunctuationEnd(int)> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getLevel()> (SMS_MMS)
<android.accessibilityservice.AccessibilityGestureEvent: int describeContents()> (SMS_MMS)
<android.telephony.ims.ImsSsData: int[] getSuppServiceInfoCompat()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getDisabledReasonForRestoreIssue(android.content.Context,int)> (SMS_MMS)
<android.view.VerifiedInputEvent: int access$000(android.os.Parcel)> (SMS_MMS)
<android.net.IpSecManager$SecurityParameterIndex: int getSpi()> (SMS_MMS)
<android.telephony.DataFailCause: boolean isRadioRestartFailure(android.content.Context,int,int)> (SMS_MMS)
<android.os.BatteryStats$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<com.android.internal.policy.DecorView: int getColorViewTopInset(int,int)> (SMS_MMS)
<android.hardware.display.DisplayManager: java.util.List getBrightnessEvents()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.graphics.Region getMagnificationRegion(int)> (SMS_MMS)
<android.provider.DocumentsContract$Path: java.lang.String getRootId()> (SMS_MMS)
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> (SMS_MMS)
<android.media.AudioManager: java.lang.Object access$1500(android.media.AudioManager)> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: int getSessionPolicies(android.media.session.MediaSession$Token)> (SMS_MMS)
<android.widget.SelectionActionModeHelper: android.view.textclassifier.TextClassification getTextClassification()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int hashCode()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: short getAccumulatedDeltaRangeState()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.MediaDrm$ListenerArgs: int access$1300(android.media.MediaDrm$ListenerArgs)> (SMS_MMS)
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.app.ISearchManager$Default: java.util.List getGlobalSearchActivities()> (SMS_MMS)
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)> (SMS_MMS)
<android.view.DisplayInfo: int describeContents()> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int loadPhraseModel(android.media.soundtrigger_middleware.PhraseSoundModel)> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.textclassifier.TextClassification: java.util.List getActions()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.TypeConverter: java.lang.Class getSourceType()> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityWcdma: int hashCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getRssi()> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: android.util.Property getProperty(java.lang.String)> (SMS_MMS)
<android.os.IVold$Stub$Proxy: java.lang.String fdeGetPassword()> (SMS_MMS)
<android.os.PowerManager: boolean isRebootingUserspaceSupportedImpl()> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsFileCacheDirectory()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Outline: boolean getRect(android.graphics.Rect)> (SMS_MMS)
<android.content.ClipDescription: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getFillAlpha()> (SMS_MMS)
<android.util.Half: int getSign(short)> (SMS_MMS)
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query,java.lang.String[])> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: java.lang.String getLegacyParameters(int)> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.CharSequence getName()> (SMS_MMS)
<android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)> (SMS_MMS)
<android.provider.Telephony$Mms$Addr: android.net.Uri getAddrUriForMessage(java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.session.MediaSession$QueueItem: int describeContents()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: long getScreenUnlockedFunctions()> (SMS_MMS)
<android.provider.Settings$Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)> (SMS_MMS)
<android.app.job.JobWorkItem: long getEstimatedNetworkDownloadBytes()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: android.os.storage.CrateMetadata[] getUserCrates(java.lang.String,int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: java.util.Set getContentCaptureConditions()> (SMS_MMS)
<android.app.IUidObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int,boolean)> (SMS_MMS)
<com.android.internal.policy.PhoneFallbackEventHandler: android.app.SearchManager getSearchManager()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)> (SMS_MMS)
<android.content.UndoManager: boolean isInUpdate()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getProtectedBroadcasts()> (SMS_MMS)
<android.app.NotificationChannel: int getLockscreenVisibility()> (SMS_MMS)
<com.android.internal.app.AlertController: int access$1302(com.android.internal.app.AlertController,int)> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getCurrentRuleSetVersion()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.content.pm.ParceledListSlice getAmbientBrightnessStats()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: int getStartIndex()> (SMS_MMS)
<android.media.tv.TvTrackInfo: int getVideoHeight()> (SMS_MMS)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: com.android.internal.telephony.euicc.IAuthenticateServerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String[] getMessages()> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.IRestrictionsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: long getFlags()> (SMS_MMS)
<android.app.WallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int,int)> (SMS_MMS)
<android.os.IInstalld$Default: long[] getUserSize(java.lang.String,int,int,int[])> (SMS_MMS)
<android.widget.RtlSpacingHelper: int getEnd()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int hashCode()> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.renderscript.Float3: float get(int)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String,int)> (SMS_MMS)
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()> (SMS_MMS)
<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(android.widget.ExpandableListConnector$GroupMetadata)> (SMS_MMS)
<android.hardware.input.TouchCalibration: int describeContents()> (SMS_MMS)
<android.telephony.CellSignalStrength: void <init>()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int[] getProfileIds(int,boolean)> (SMS_MMS)
<android.app.assist.AssistContent: android.os.Bundle getExtras()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: byte[] readLengthPrefixedByteArray(java.nio.ByteBuffer)> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getHeight()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: java.lang.String getBackgroundPermission()> (SMS_MMS)
<android.telephony.SmsManager: java.lang.String getSmscAddress()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> (SMS_MMS)
<android.os.IInstalld$Stub: android.os.IInstalld asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.widget.ListView: int getMaxScrollAmount()> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.ICountryDetector$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.TypedProperties: short getShort(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.text.method.QwertyKeyListener: int getInputType()> (SMS_MMS)
<android.os.IThermalService$Default: android.os.CoolingDevice[] getCurrentCoolingDevices()> (SMS_MMS)
<android.os.Build$Partition: long getBuildTimeMillis()> (SMS_MMS)
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: boolean isDeviceColorManaged()> (SMS_MMS)
<android.service.notification.INotificationListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Toolbar: android.content.Context getPopupContext()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Default: android.gsi.GsiProgress getInstallationProgress()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.Display: android.graphics.ColorSpace getPreferredWideGamutColorSpace()> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub: android.view.autofill.IAutoFillManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IAudioService$Default: int getStreamMaxVolume(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedInputMethods(android.content.ComponentName)> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String)> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getInputType()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$1: void <init>()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int getOutputPortCount()> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.Window: android.transition.Scene getContentScene()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVoiceCapable()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: long getSurfaceId(android.view.Surface)> (SMS_MMS)
<android.app.ContextImpl: android.content.ContentCaptureOptions getContentCaptureOptions()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.net.netstats.provider.INetworkStatsProvider asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.ActivityInfo: int getThemeResource()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()> (SMS_MMS)
<android.view.Window: android.view.WindowManager getWindowManager()> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.policy.DecorView: int getNavBarSize(int,int,int)> (SMS_MMS)
<android.media.AudioManager: java.util.List access$900(android.media.AudioManager)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.View: float getTranslationY()> (SMS_MMS)
<android.print.PrintManager: java.util.List getPrintJobs()> (SMS_MMS)
<android.view.Window: int getNavigationBarDividerColor()> (SMS_MMS)
<android.app.Notification$MessagingStyle: int getUnreadMessageCount()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: char previous()> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)> (SMS_MMS)
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: char gsmToChar(int)> (SMS_MMS)
<android.content.Intent: android.content.ComponentName getComponent()> (SMS_MMS)
<android.os.storage.VolumeRecord: int hashCode()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: android.window.WindowContainerToken getImeTarget(int)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int read()> (SMS_MMS)
<android.widget.GridView: int getVerticalSpacing()> (SMS_MMS)
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getAlpha()> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getMonitoredRailChargeConsumedMaMs()> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationScale(int)> (SMS_MMS)
<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$LogRec getLogRec(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.widget.ActionMenuView: int getWindowAnimations()> (SMS_MMS)
<android.telephony.UiccSlotInfo: boolean getIsExtendedApduSupported()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getInverseTransform(float[])> (SMS_MMS)
<android.content.pm.parsing.component.ParsedInstrumentation: java.lang.String getTargetPackage()> (SMS_MMS)
<android.hardware.Camera$Parameters: float getHorizontalViewAngle()> (SMS_MMS)
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.dex.ArtManager getArtManager()> (SMS_MMS)
<android.view.TouchDelegate: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.PrecomputedText: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getId()> (SMS_MMS)
<android.content.pm.PackageManager: boolean getSyntheticAppDetailsActivityEnabled(java.lang.String)> (SMS_MMS)
<android.animation.PathKeyframes$4: int getIntValue(float)> (SMS_MMS)
<com.android.internal.os.FuseAppLoop: int registerCallback(android.os.ProxyFileDescriptorCallback,android.os.Handler)> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Default: java.lang.String getCurrentRuleSetVersion()> (SMS_MMS)
<android.media.AudioPlaybackCaptureConfiguration: android.media.projection.MediaProjection getMediaProjection()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.ViewParent getParent()> (SMS_MMS)
<android.media.MediaCasStateException: java.lang.String getDiagnosticInfo()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnIndex()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getColorMode()> (SMS_MMS)
<android.util.LruCache: int evictionCount()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getKey()> (SMS_MMS)
<com.android.internal.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.app.SearchableInfo$ActionKeyInfo: int describeContents()> (SMS_MMS)
<android.text.SpannableString: int hashCode()> (SMS_MMS)
<android.os.UserManager: java.lang.String getSeedAccountName()> (SMS_MMS)
<android.widget.TextView: boolean getHorizontallyScrolling()> (SMS_MMS)
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()> (SMS_MMS)
<android.net.ConnectivityManager: int getNetworkPreference()> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.os.Looper access$100(android.net.lowpan.LowpanManager)> (SMS_MMS)
<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: android.content.AutofillOptions getAutofillOptions()> (SMS_MMS)
<android.util.SparseSetArray: int size()> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener getDefaultImpl()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: boolean isUserAMonkey()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getTheme()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int getWindowSetMask()> (SMS_MMS)
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int changeIccLockPassword(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()> (SMS_MMS)
<android.telephony.ims.stub.RcsCapabilityExchange: android.telephony.ims.aidl.IRcsFeatureListener getListener()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Default: android.content.pm.ParceledListSlice getCurrentRules()> (SMS_MMS)
<android.widget.CompoundButton: int[] onCreateDrawableState(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int getChannelNumber()> (SMS_MMS)
<android.view.PointerIcon: int getType()> (SMS_MMS)
<android.telephony.CellIdentityNr: int[] getBands()> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: double[] getTempDouble3Array()> (SMS_MMS)
<android.widget.TextView: int getInputType()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] listAllTransports()> (SMS_MMS)
<android.net.LocalSocketImpl: java.lang.Object getOption(int)> (SMS_MMS)
<android.hardware.radio.V1_0.TdScdmaSignalStrength: int hashCode()> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable getTextCursorDrawable()> (SMS_MMS)
<android.animation.PropertyValuesHolder: java.lang.Class getValueType()> (SMS_MMS)
<android.view.View: int getDrawingCacheQuality()> (SMS_MMS)
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()> (SMS_MMS)
<android.net.INetworkStatsService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.ImageDecoder$Source: android.content.res.Resources getResources()> (SMS_MMS)
<android.view.ViewStub: int getLayoutResource()> (SMS_MMS)
<android.os.storage.VolumeRecord: java.lang.String getFsUuid()> (SMS_MMS)
<android.telephony.ims.ImsSsData: java.util.List getSuppServiceInfo()> (SMS_MMS)
<android.window.IWindowOrganizerController$Default: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams disallowColorization()> (SMS_MMS)
<android.app.blob.BlobInfo: int describeContents()> (SMS_MMS)
<android.content.Intent: android.content.Intent getSelector()> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue getEncodedStringValue(int)> (SMS_MMS)
<android.widget.Toolbar: int getCurrentContentInsetLeft()> (SMS_MMS)
<android.net.TrafficStats: long getRxPackets(java.lang.String)> (SMS_MMS)
<android.telephony.SignalStrength: int getLteSignalStrength()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: boolean isCharging()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: long getPostedTimeMs()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub: com.android.internal.app.ISoundTriggerService getDefaultImpl()> (SMS_MMS)
<android.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: boolean getEnsureStatusBarContrastWhenTransparent()> (SMS_MMS)
<android.content.pm.PackageParser: int lambda$parseBaseApplication$1(android.content.pm.PackageParser$Activity,android.content.pm.PackageParser$Activity)> (SMS_MMS)
<android.util.PathParser$PathData: long getNativePtr()> (SMS_MMS)
<android.permission.IPermissionManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentFilter: int countDataTypes()> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionPlan: java.util.Iterator cycleIterator()> (SMS_MMS)
<android.animation.AnimatorSet: long getTotalDuration()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()> (SMS_MMS)
<android.view.animation.LayoutAnimationController: float getDelay()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getFormat()> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo: int hashCode()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()> (SMS_MMS)
<android.renderscript.Element: int getSubElementCount()> (SMS_MMS)
<android.graphics.RenderNode: float getScaleY()> (SMS_MMS)
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDisplayWhiteBalanceEnabled()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub: android.view.IWindowFocusObserver getDefaultImpl()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: long getUserActivityTimeout()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isValidPhoneId(int)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserWhitelistedApps()> (SMS_MMS)
<android.telephony.SubscriptionPlan: int describeContents()> (SMS_MMS)
<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.Looper: android.os.Looper getMainLooper()> (SMS_MMS)
<android.content.IClipboard$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.Transition: java.util.List getTargetTypes()> (SMS_MMS)
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getImsProvisioningStatusForCapability(int,int,int)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo$1: android.telephony.BarringInfo$BarringServiceInfo[] newArray(int)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)> (SMS_MMS)
<android.telecom.Logging.EventManager$EventRecord: android.telecom.Logging.EventManager$Loggable getRecordEntry()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()> (SMS_MMS)
<android.media.SyncParams: float getTolerance()> (SMS_MMS)
<android.net.IpSecTransform: android.net.IpSecConfig getConfig()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getAppPredictionServicePackageName()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getSlotIndex(int)> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub: com.android.internal.app.ISoundTriggerService asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getOpPackageName()> (SMS_MMS)
<android.view.InsetsSourceControl: int getType()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getDeviceClass()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$300(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.net.NetworkScorerAppData: android.content.ComponentName getRecommendationServiceComponent()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: boolean isValid()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getNameForUid(int)> (SMS_MMS)
<android.app.job.JobInfo: int getNetworkType()> (SMS_MMS)
<android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()> (SMS_MMS)
<android.view.View$MeasureSpec: int getMode(int)> (SMS_MMS)
<android.content.pm.ModuleInfo: java.lang.String getApexModuleName()> (SMS_MMS)
<android.graphics.ColorSpace$Xyz: float getMaxValue(int)> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub: android.service.notification.IStatusBarNotificationHolder asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.style.MetricAffectingSpan$Passthrough: android.text.style.CharacterStyle getUnderlying()> (SMS_MMS)
<android.transition.Slide$1: float getGoneX(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getActivePhoneType()> (SMS_MMS)
<android.os.storage.StorageVolume: int hashCode()> (SMS_MMS)
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.String getNumber()> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature: android.os.IInterface getBinder()> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: int getProperty(int,android.os.BatteryProperty)> (SMS_MMS)
<android.app.Activity: android.content.SharedPreferences getPreferences(int)> (SMS_MMS)
<android.media.MediaFormat$UnprefixedKeySet: java.lang.String mapItemToKey(java.lang.String)> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes$Margins getMinMargins()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService getDefaultImpl()> (SMS_MMS)
<android.media.AudioManager: java.util.List access$1100(android.media.AudioManager)> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: int getVoWiFiRoamingModeSetting()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean isAssistDataAllowedOnCurrentActivity()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)> (SMS_MMS)
<android.os.StatFs: int getBlockSize()> (SMS_MMS)
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.os.BatteryStatsManager: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()> (SMS_MMS)
<android.app.IAlarmManager$Default: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)> (SMS_MMS)
<android.media.midi.MidiDeviceServer$PortClient: android.media.midi.MidiInputPort getInputPort()> (SMS_MMS)
<android.view.inputmethod.SparseRectFArray: int hashCode()> (SMS_MMS)
<android.location.LocationTime: int describeContents()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: android.os.Bundle getExtras()> (SMS_MMS)
<android.os.Process: long getStartUptimeMillis()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property getProperty(java.lang.String)> (SMS_MMS)
<android.media.AudioRecord: int getRecordingState()> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.net.IIpSecService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMax()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getDataEnabled()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getSleepTimeMillis()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)> (SMS_MMS)
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$0SeZK03YbYwxm_nBE39jPZ1sdMM: float getInterpolation(float)> (SMS_MMS)
<android.util.LruCache: int hitCount()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: byte[] getSigAlgParams()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSaveExceptIdle()> (SMS_MMS)
<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: android.content.pm.ParceledListSlice getCurrentRules()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()> (SMS_MMS)
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeLink(int,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.util.proto.ProtoStream: int getTagSizeFromToken(long)> (SMS_MMS)
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()> (SMS_MMS)
<android.telephony.PhoneNumberRange: int hashCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma$1: android.telephony.CellSignalStrengthTdscdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)> (SMS_MMS)
<android.graphics.Region: boolean getBounds(android.graphics.Rect)> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultRespondViaMessageApplication(android.content.Context,boolean)> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.lang.String getSeedAccountName()> (SMS_MMS)
<android.graphics.CanvasProperty: long getNativeContainer()> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: long getExpiry()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getPasswordExpiration(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.renderscript.Int3: int get(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> (SMS_MMS)
<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers()> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int describeContents()> (SMS_MMS)
<android.view.IWindowManager$Default: float getCurrentAnimatorScale()> (SMS_MMS)
<android.telephony.ServiceState: int getDuplexMode()> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: android.media.MediaFormat getFormat()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: android.transition.Transition getEnterTransition()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCdmaEriIconIndex(int)> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: int getAllowedCapturePolicy()> (SMS_MMS)
<android.os.UserManager: int[] getProfileIdsWithDisabled(int)> (SMS_MMS)
<android.view.IWindowFocusObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerRxDurationMillis()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getUserId()> (SMS_MMS)
<android.widget.OverScroller: float getCurrVelocity()> (SMS_MMS)
<com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State valueOf(java.lang.String)> (SMS_MMS)
<android.os.ISystemConfig$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: android.content.Context createContextForSplit(java.lang.String)> (SMS_MMS)
<android.text.BidiFormatter: boolean getStereoReset()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.media.session.PlaybackState getPlaybackState()> (SMS_MMS)
<android.net.IpSecConfig: int getSpiResourceId()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.webkit.WebViewFactory: java.lang.String getDataDirectorySuffix()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getColorMode()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int access$000(com.android.internal.policy.PhoneWindow)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMinAspectRatio()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellInfoCdma: android.telephony.CellInfoCdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub: com.android.internal.telephony.IOns getDefaultImpl()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtIndex(int)> (SMS_MMS)
<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub: android.media.midi.IMidiDeviceListener getDefaultImpl()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeEnabled(android.content.ComponentName)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager access$300(android.companion.CompanionDeviceManager)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.lang.String getDatasetId()> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: java.lang.String getName()> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()> (SMS_MMS)
<android.media.SubtitleController: android.media.SubtitleTrack[] getTracks()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)> (SMS_MMS)
<android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportanceForClient(int,android.content.Context)> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo: boolean isUsingCarrierAggregation()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHistory: java.util.List getFilesNumbers()> (SMS_MMS)
<android.view.View: int getSolidColor()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedIntentInfo: int getIcon()> (SMS_MMS)
<android.media.MediaPlayer: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackageForUser(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isDataAllowedInVoiceCall(int)> (SMS_MMS)
<android.widget.TextView: int getBottomPaddingOffset()> (SMS_MMS)
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.timezone.IRulesManager$Default: android.app.timezone.RulesState getRulesState()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getIdEntry()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: java.lang.String getMobileNetworkOperator()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getGpsBatteryDrainMaMs()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)> (SMS_MMS)
<android.text.style.LineBackgroundSpan$Standard: int getColor()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: int[] signalPoll()> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub: android.app.prediction.IPredictionCallback getDefaultImpl()> (SMS_MMS)
<android.net.LinkProperties: java.lang.String getDomains()> (SMS_MMS)
<android.content.res.Resources: int[] getIntArray(int)> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Notification: int access$802(android.app.Notification,int)> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getPaddingMode()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub$Proxy: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getTextResName()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.service.persistentdata.IPersistentDataBlockService getDefaultImpl()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getSleepTimeMillis()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub: android.app.ITransientNotificationCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.ServiceState: int getState()> (SMS_MMS)
<android.util.proto.ProtoInputStream: int nextField()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: int getItemViewType(int)> (SMS_MMS)
<android.app.role.IRoleController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Notification$WearableExtender: int getCustomSizePreset()> (SMS_MMS)
<android.app.VoiceInteractor$CommandRequest: java.lang.String getRequestTypeName()> (SMS_MMS)
<android.animation.FloatKeyframeSet: java.lang.Class getType()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.ProgressBar: int getMax()> (SMS_MMS)
<android.view.MotionEvent: int getMetaState()> (SMS_MMS)
<android.text.StaticLayout: int getLineTop(int)> (SMS_MMS)
<android.app.Person: int hashCode()> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.widget.Toast: android.app.INotificationManager access$200()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: long getStaticSharedLibVersion()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryCodeRss()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: int addPowerSaveWhitelistApps(java.util.List)> (SMS_MMS)
<android.content.pm.IDataLoader$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.HtmlToSpannedConverter$Background: int access$1400(android.text.HtmlToSpannedConverter$Background)> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findPrivateForEmulated(android.os.storage.VolumeInfo)> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: java.lang.Object access$1000(android.media.AudioManager)> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: int getSubChannel()> (SMS_MMS)
<android.app.role.RoleManager: boolean isRoleAvailable(java.lang.String)> (SMS_MMS)
<android.content.RestrictionEntry: int getType()> (SMS_MMS)
<android.media.MediaDrm: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<android.telephony.CallQuality: int hashCode()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getVersionCode()> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub: android.window.IDisplayAreaOrganizerController asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.AbsListView: int getListPaddingRight()> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(android.net.Uri$Part)> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.LoadedApk: java.lang.ClassLoader createSharedLibraryLoader(android.content.pm.SharedLibraryInfo,boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.CellConfigLte: int hashCode()> (SMS_MMS)
<android.telephony.ims.ImsSsData: int getRequestType()> (SMS_MMS)
<android.telephony.CellInfoLte: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.content.pm.IDataLoader$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub: com.android.ims.internal.IImsExternalCallStateListener getDefaultImpl()> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaDrm: byte[] access$400(android.media.MediaDrm,byte[],byte[],byte[],byte[])> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.content.ComponentName getDefaultPhoneApp()> (SMS_MMS)
<android.animation.LayoutTransition: long getDuration(int)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.DataLoaderParamsParcel: int describeContents()> (SMS_MMS)
<android.util.KeyValueListParser$FloatValue: float getValue()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: android.app.assist.AssistStructure$ViewNode getRootViewNode()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.IContentObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$VideoEvent: int getEventName()> (SMS_MMS)
<android.content.pm.PackageUserState$SuspendParams: int hashCode()> (SMS_MMS)
<android.media.AudioTrack$TunerConfiguration: int getContentId()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isVtSettingEnabled()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getDefaultCrossProfilePackages()> (SMS_MMS)
<com.android.internal.os.ZygoteServer: java.lang.Runnable runSelectLoop(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: boolean isStateful()> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isInEmergencySmsMode()> (SMS_MMS)
<android.app.IServiceConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IGraphicsStats$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.Display: int getFlags()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getFocusedStackInfo()> (SMS_MMS)
<android.service.notification.ZenPolicy: byte[] toProto()> (SMS_MMS)
<android.app.admin.ConnectEvent: int getPort()> (SMS_MMS)
<android.app.Notification$Builder: int access$4600(android.app.Notification$Builder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int access$400()> (SMS_MMS)
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$4: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.media.MediaCodecInfo$AudioCapabilities: android.util.Range getBitrateRange()> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetLeft()> (SMS_MMS)
<android.media.AudioFormat: int getChannelCount()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.util.List getKeys()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int getLowerLimit()> (SMS_MMS)
<android.view.IWindowSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$EventTiming: int describeContents()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomaticallyAsUser(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()> (SMS_MMS)
<android.widget.Toast: float getVerticalMargin()> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray getKernelMemoryStats()> (SMS_MMS)
<android.os.WorkSource$WorkChain: int getSize()> (SMS_MMS)
<android.util.proto.ProtoInputStream: int getOffset()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.os.PersistableBundle getTransferOwnershipBundle()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryConversations()> (SMS_MMS)
<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarVerifier$VerifierEntry initEntry(java.lang.String)> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBatteryPropertiesRegistrar getDefaultImpl()> (SMS_MMS)
<android.os.UserManager: android.os.UserManager get(android.content.Context)> (SMS_MMS)
<android.print.PrintJobInfo: java.lang.String getLabel()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.NotificationManager$Policy: int getAllSuppressedVisualEffects()> (SMS_MMS)
<android.widget.ListPopupWindow: int getHorizontalOffset()> (SMS_MMS)
<android.webkit.WebView: int getContentHeight()> (SMS_MMS)
<android.app.IActivityController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.SharedMemory: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.net.lowpan.LowpanProvision: int hashCode()> (SMS_MMS)
<android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerController getInstance()> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma$1: android.telephony.CellSignalStrengthCdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.CallForwardingInfo: int getTimeoutSeconds()> (SMS_MMS)
<com.android.internal.app.AlertController: int access$900(com.android.internal.app.AlertController)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getGuestUserDisabled(android.content.ComponentName)> (SMS_MMS)
<android.accounts.IAccountManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.LinkProperties getActiveLinkProperties()> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest: int hashCode()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getMinWidth()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getAccountTypesWithManagementDisabled()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.slice.SliceManager: java.util.Collection getSliceDescendants(android.net.Uri)> (SMS_MMS)
<android.content.res.ConfigurationBoundResourceCache: java.lang.Object getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> (SMS_MMS)
<android.view.textclassifier.TextLanguage$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.app.Activity: android.content.ComponentName contentCaptureClientGetComponentName()> (SMS_MMS)
<com.google.android.mms.util.PduCacheEntry: long getThreadId()> (SMS_MMS)
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.widget.TextView: android.text.Layout getHintLayout()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.Paint: int getShadowLayerColor()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VPath$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeEnabled(android.content.ComponentName)> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub: com.android.ims.internal.IImsExternalCallStateListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.GnssMeasurementCorrections: float getEnvironmentBearingUncertaintyDegrees()> (SMS_MMS)
<android.app.IUidObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.PopupWindow: android.widget.PopupWindow$OnDismissListener getOnDismissListener()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getEmergencyCallbackMode(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.TelecomAnalytics dumpCallAnalytics()> (SMS_MMS)
<android.app.SyncNotedAppOp: java.lang.String getAttributionTag()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.view.Display$Mode: int getModeId()> (SMS_MMS)
<android.os.IThermalEventListener$Stub: android.os.IThermalEventListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getAdvertiseIsEnabled()> (SMS_MMS)
<android.telephony.TelephonyManager: void sendUssdRequest(java.lang.String,android.telephony.TelephonyManager$UssdResponseCallback,android.os.Handler)> (SMS_MMS)
<android.app.ActivityOptions: boolean getLockTaskMode()> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)> (SMS_MMS)
<android.net.lowpan.LowpanEnergyScanResult: int getMaxRssi()> (SMS_MMS)
<android.hardware.usb.UsbManager: long getScreenUnlockedFunctions()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getPhoneAccountsSupportingScheme(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkInfo[] getAllNetworkInfo()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean canDisablePhysicalSubscription()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.job.JobInfo$TriggerContentUri: int describeContents()> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingTop()> (SMS_MMS)
<android.app.Fragment: boolean getUserVisibleHint()> (SMS_MMS)
<android.widget.HorizontalScrollView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.lang.String getCertificateAlias(java.security.cert.Certificate,boolean)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)> (SMS_MMS)
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)> (SMS_MMS)
<android.app.job.JobWorkItem: int getDeliveryCount()> (SMS_MMS)
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int,boolean)> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.CoolingDevice: int getType()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryGraphics()> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: int getCurrentModeType()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IStopUserCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.KeyEvent: char getMatch(char[])> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreLoadStoreParameter: int getUid()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int getWidth()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IAlarmManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)> (SMS_MMS)
<android.util.ArrayMap: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isSecondaryLockscreenEnabled(android.os.UserHandle)> (SMS_MMS)
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int getPackageUid(java.lang.String,int)> (SMS_MMS)
<android.telecom.Logging.Session: long getLocalExecutionTime()> (SMS_MMS)
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()> (SMS_MMS)
<android.print.PrinterInfo: boolean getHasCustomPrinterIcon()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: long getCacheBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.util.SparseArray getWindowsOnAllDisplays()> (SMS_MMS)
<android.media.AudioDevicePort: int type()> (SMS_MMS)
<android.text.method.MultiTapKeyListener: int getInputType()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: void resetAllCarrierActions()> (SMS_MMS)
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> (SMS_MMS)
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()> (SMS_MMS)
<android.graphics.ImageDecoder$ContentResolverSource: android.content.res.Resources getResources()> (SMS_MMS)
<android.app.Fragment$SavedState: int describeContents()> (SMS_MMS)
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable getItemBackgroundDrawable()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.SocketKeepalive createSocketKeepalive(android.net.Network,android.net.IpSecManager$UdpEncapsulationSocket,java.net.InetAddress,java.net.InetAddress,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)> (SMS_MMS)
<android.text.Layout: float getSpacingAdd()> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()> (SMS_MMS)
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.util.apk.VerbatimX509Certificate: int hashCode()> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: android.app.IApplicationThread getClient()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int getParameter(android.os.ParcelUuid,int)> (SMS_MMS)
<android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.media.AudioManager: java.lang.Object access$500(android.media.AudioManager)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)> (SMS_MMS)
<com.android.net.IProxyService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: int[] getRelativeAddress()> (SMS_MMS)
<android.media.Ringtone: android.net.Uri getUri()> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int getProvisionStatus()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: java.util.Set getAdditionalPlmns()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getPrivAppPermissions(java.lang.String)> (SMS_MMS)
<android.view.View$5: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.view.View: boolean getDefaultFocusHighlightEnabled()> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: int getFlags()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getTvContentRatingSystemList(int)> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub: android.security.keystore.IKeystoreResponseCallback getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface getService()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: android.media.soundtrigger.SoundTriggerDetector createSoundTriggerDetector(java.util.UUID,android.media.soundtrigger.SoundTriggerDetector$Callback,android.os.Handler)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiStateTimer(int)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: com.android.internal.telephony.euicc.ISetNicknameCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub: com.android.internal.app.IVoiceInteractor getDefaultImpl()> (SMS_MMS)
<android.graphics.Color: float[] getComponents()> (SMS_MMS)
<android.os.storage.VolumeInfo: int getState()> (SMS_MMS)
<android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: com.android.internal.telephony.util.HandlerExecutor access$000(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: android.hardware.usb.UsbAccessory getCurrentAccessory()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: int getAllPhoneAccountsCount()> (SMS_MMS)
<android.telecom.PhoneAccount: android.os.Bundle getExtras()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectBackgroundTime(int)> (SMS_MMS)
<android.media.AudioGain: int minValue()> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: com.android.internal.app.IAppOpsAsyncNotedCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.trust.ITrustListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: long getCarrierCycles()> (SMS_MMS)
<android.os.IPowerManager$Default: float getBrightnessConstraint(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimApplicationState()> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)> (SMS_MMS)
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int,boolean)> (SMS_MMS)
<android.widget.ListPopupWindow$1: com.android.internal.view.menu.ShowableListMenu getPopup()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int access$600(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getEmergencyNumberListTestMode()> (SMS_MMS)
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()> (SMS_MMS)
<android.view.VerifiedMotionEvent: long getDownTimeNanos()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.database.MatrixCursor: int getInt(int)> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> (SMS_MMS)
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> (SMS_MMS)
<android.text.method.CharacterPickerDialog$OptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailableZoomCropRectangles(android.hardware.Camera$Parameters,android.graphics.Rect)> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int describeContents()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray getWidths()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int getModelParameter(int,int)> (SMS_MMS)
<android.app.FragmentManagerImpl: int getTargetSdk()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionApn()> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.String getClientPackageName()> (SMS_MMS)
<android.hardware.Sensor: int getReportingMode()> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: boolean isUiModeLocked()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.Uri$StringUri: java.util.List getPathSegments()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.CarrierRestrictionRules getAllowedCarriers()> (SMS_MMS)
<android.widget.PopupWindow: int getAnimationStyle()> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getAudioCapabilities()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getAndClearPackageToUserTypeWhitelist()> (SMS_MMS)
<android.content.SyncRequest: int describeContents()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.service.autofill.UserData: java.lang.String getFieldClassificationAlgorithm()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.security.keystore.IKeystoreOperationResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyScanManager$NetworkScanInfo: android.telephony.TelephonyScanManager$NetworkScanCallback access$100(android.telephony.TelephonyScanManager$NetworkScanInfo)> (SMS_MMS)
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)> (SMS_MMS)
<android.content.res.AssetManager$AssetInputStream: int available()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getNetworkType()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()> (SMS_MMS)
<android.view.Display: java.lang.String getName()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getDeviceSummaryForNetwork()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RadioGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.telephony.ims.ImsReasonInfo: java.lang.String getExtraMessage()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int unloadNanoApp(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.SoundTriggerModuleProperties: int describeContents()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getDisabledReason()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getCallingPackageUnchecked()> (SMS_MMS)
<android.print.PageRange: int describeContents()> (SMS_MMS)
<android.util.Property: java.lang.Class getType()> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub: java.lang.String access$000()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: boolean isPrimary()> (SMS_MMS)
<android.hardware.camera2.utils.SurfaceUtils: android.util.Size getSurfaceSize(android.view.Surface)> (SMS_MMS)
<android.view.autofill.AutofillManager: java.lang.String getDefaultFieldClassificationAlgorithm()> (SMS_MMS)
<android.content.ContentProvider$Transport: int access$300(android.content.ContentProvider$Transport,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getPackageUid(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: android.content.Context getThemedContext()> (SMS_MMS)
<android.media.AudioManager: int releaseAudioPatch(android.media.AudioPatch)> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSendToApplication(android.content.Context,boolean)> (SMS_MMS)
<android.app.WallpaperManager$Globals: android.app.WallpaperColors getWallpaperColors(int,int,int)> (SMS_MMS)
<android.filterfw.core.Frame: android.filterfw.core.Frame release()> (SMS_MMS)
<android.content.om.OverlayInfo: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getCameraOnTime(long,int)> (SMS_MMS)
<android.hardware.camera2.params.Face: int getId()> (SMS_MMS)
<android.hardware.usb.UsbManager: boolean isFunctionEnabled(java.lang.String)> (SMS_MMS)
<android.content.pm.ResolveInfo: int resolveLabelResId()> (SMS_MMS)
<android.view.InsetsController: android.view.InsetsState getLastDispatchedState()> (SMS_MMS)
<android.telephony.TelephonyManager: android.os.Bundle getVisualVoicemailSettings()> (SMS_MMS)
<android.permission.PermissionControllerManager$1: long getAutoDisconnectTimeoutMs()> (SMS_MMS)
<android.view.textclassifier.TextClassificationContext: java.lang.String getWidgetType()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.contentsuggestions.ContentSelection: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.usb.UsbPort: android.hardware.usb.UsbPortStatus getStatus()> (SMS_MMS)
<android.view.FocusFinder$1: android.view.FocusFinder initialValue()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isFactoryResetProtectionPolicySupported()> (SMS_MMS)
<android.app.Activity$HostCallbacks: android.app.Activity onGetHost()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProcess: java.lang.String getName()> (SMS_MMS)
<android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.os.Environment$UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> (SMS_MMS)
<android.telephony.ServiceState: int getChannelNumber()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.util.List getAutoRevokeExemptionRequestedPackages(int)> (SMS_MMS)
<android.view.textclassifier.TextClassificationSessionId: int hashCode()> (SMS_MMS)
<android.telecom.Logging.EventManager: java.util.concurrent.LinkedBlockingQueue getEventRecords()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int hashCode()> (SMS_MMS)
<android.media.AudioTrack: int reloadStaticData()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()> (SMS_MMS)
<android.app.NotificationManager$Policy: int allowCallsFrom()> (SMS_MMS)
<android.view.IWindowId$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.ParcelFileDescriptor getUserIcon(int)> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: com.android.internal.widget.ICheckCredentialProgressCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getPermissions()> (SMS_MMS)
<android.net.TrafficStats: long getTotalRxBytes()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$9: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isInstantApp()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: android.os.PowerSaveState getPowerSaveState(int)> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponentsForUser(int)> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifierMetadata: int describeContents()> (SMS_MMS)
<android.os.UserManager: android.os.UserHandle getProfileParent(android.os.UserHandle)> (SMS_MMS)
<android.security.KeyStore: int delete2(java.lang.String,int)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getMaxTextLength()> (SMS_MMS)
<android.app.INotificationManager$Default: int getPackageImportance(java.lang.String)> (SMS_MMS)
<android.os.StrictMode$4: android.os.StrictMode$AndroidBlockGuardPolicy initialValue()> (SMS_MMS)
<android.view.View: int getAccessibilitySelectionStart()> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getChannelIdLogTag()> (SMS_MMS)
<android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener getDefaultImpl()> (SMS_MMS)
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextClassification: int describeContents()> (SMS_MMS)
<android.animation.AnimatorSet$SeekState: long getPlayTimeNormalized()> (SMS_MMS)
<android.content.UndoOwner: java.lang.String getTag()> (SMS_MMS)
<android.media.session.PlaybackState: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.lang.String getText()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: android.os.Handler getHandler()> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: long getNativePtr()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub: android.view.IWindowFocusObserver asInterface(android.os.IBinder)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: byte[] getTransactionId()> (SMS_MMS)
<android.apex.ApexInfo: int describeContents()> (SMS_MMS)
<android.widget.GridView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.widget.ImageButton: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.text.DynamicLayout: int getIndexFirstChangedBlock()> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: int getCredentialType(int)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: int getCount()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataNetworkType(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telecom.TelecomManager: int getCurrentTtyMode()> (SMS_MMS)
<android.os.VibrationEffect$Composed: long getDuration()> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCLIP()> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.media.session.PlaybackState$CustomAction: android.os.Bundle getExtras()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()> (SMS_MMS)
<android.view.Display: int getOrientation()> (SMS_MMS)
<android.telephony.SmsCbMessage: int getSubscriptionId()> (SMS_MMS)
<android.os.BatteryStats$Timer: long getMaxDurationMsLocked(long)> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()> (SMS_MMS)
<android.net.INetworkStatsService$Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.feature.ImsFeature: int getSlotIndex()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getAuthority()> (SMS_MMS)
<android.print.PrintJobInfo: java.lang.String getTag()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()> (SMS_MMS)
<android.hardware.lights.LightsManager: java.util.List getLights()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.MotionEvent: float getToolMajor()> (SMS_MMS)
<android.os.Process: int getThreadGroupLeader(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getCurrentPhoneType()> (SMS_MMS)
<android.text.PrecomputedText: int length()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.IIpSecService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.TypedProperties: int interpretType(java.lang.String)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IThermalService$Default: int getCurrentThermalStatus()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: int getRestrictBackgroundByCaller()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)> (SMS_MMS)
<android.media.AudioManager: android.media.AudioManager$ServiceEventHandlerDelegate access$400(android.media.AudioManager)> (SMS_MMS)
<android.telephony.SmsCbMessage: java.util.List getGeometries()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultExternalTelephonyProviderChangedApplication(android.content.Context,boolean)> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: int[] getSupportedTypes()> (SMS_MMS)
<android.widget.LinearLayout: float getWeightSum()> (SMS_MMS)
<android.security.IKeyChainService$Default: android.content.pm.StringParceledListSlice getSystemCaAliases()> (SMS_MMS)
<android.database.CursorWindow: int getNumRows()> (SMS_MMS)
<android.os.IClientCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int access$500()> (SMS_MMS)
<android.os.ISystemConfig$Default: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()> (SMS_MMS)
<android.app.usage.UsageStats: android.app.usage.UsageStats getObfuscatedForInstantApp()> (SMS_MMS)
<android.app.backup.BackupDataOutput: long getQuota()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: java.lang.String getSmsFormat()> (SMS_MMS)
<android.content.ContentProvider: int enforceReadPermissionInner(android.net.Uri,java.lang.String,java.lang.String,android.os.IBinder)> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getUserCert()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int removePreferredDeviceForStrategy(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)> (SMS_MMS)
<android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAllCrossProfilePackages()> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataNetworkType(int)> (SMS_MMS)
<com.android.internal.view.FloatingActionMode: android.view.MenuInflater getMenuInflater()> (SMS_MMS)
<android.location.LocationManager$1: java.lang.Boolean recompute(java.lang.Integer)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getScrollX()> (SMS_MMS)
<android.media.AudioRecord: int read(short[],int,int)> (SMS_MMS)
<com.android.internal.database.SortCursor: int access$102(com.android.internal.database.SortCursor,int)> (SMS_MMS)
<android.view.Display: int getRemoveMode()> (SMS_MMS)
<android.net.TestNetworkInterface: android.os.ParcelFileDescriptor getFileDescriptor()> (SMS_MMS)
<android.app.IActivityManager$Default: int getTaskForActivity(android.os.IBinder,boolean)> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.ICameraService$Default: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentResolver$MimeTypeInfo: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getChildCount()> (SMS_MMS)
<android.media.midi.MidiManager: android.media.midi.MidiDeviceServer createDeviceServer(android.media.midi.MidiReceiver[],int,java.lang.String[],java.lang.String[],android.os.Bundle,int,android.media.midi.MidiDeviceServer$Callback)> (SMS_MMS)
<android.view.MotionEvent: float getToolMinor()> (SMS_MMS)
<android.hardware.hdmi.HdmiPortInfo: int getAddress()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getSupportedTypes()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserBadgeResId(int)> (SMS_MMS)
<android.telephony.PhoneCapability$1: void <init>()> (SMS_MMS)
<android.os.Binder: android.os.TransactionTracker getTransactionTracker()> (SMS_MMS)
<android.widget.Toast: android.view.WindowManager$LayoutParams getWindowParams()> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ContentProvider$Transport: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)> (SMS_MMS)
<android.os.health.HealthStats: int getStatsKeyAt(int)> (SMS_MMS)
<android.view.View: int getRightPaddingOffset()> (SMS_MMS)
<android.hardware.camera2.params.InputConfiguration: int getFormat()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)> (SMS_MMS)
<android.content.IIntentSender$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.FileUtils: int getUid(java.lang.String)> (SMS_MMS)
<android.app.job.JobInfo: int getClipGrantFlags()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub: android.permission.IOnPermissionsChangeListener getDefaultImpl()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurring(java.time.ZonedDateTime,java.time.Period)> (SMS_MMS)
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)> (SMS_MMS)
<android.os.LocaleList: int size()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getSimStateForSlotIndex(int)> (SMS_MMS)
<android.transition.ChangeBounds$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.drm.ProcessedData: java.lang.String getAccountId()> (SMS_MMS)
<android.app.NotificationManager: boolean isSystemConditionProviderEnabled(java.lang.String)> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$stageAndApplyRuntimePermissionsBackup$8(android.os.UserHandle,byte[],android.permission.IPermissionController)> (SMS_MMS)
<android.app.Notification$Builder: int access$3700(android.app.Notification$Builder)> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.ILocationManager$Default: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)> (SMS_MMS)
<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isBluetoothScoOn()> (SMS_MMS)
<android.graphics.Outline: float getRadius()> (SMS_MMS)
<android.app.Notification$BuilderRemoteViews: android.app.Notification$BuilderRemoteViews clone()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: int getSystemUiVisibility()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getOutFileDescriptor()> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String)> (SMS_MMS)
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()> (SMS_MMS)
<android.media.AudioFocusInfo: int getSdkTarget()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int[] getTextLineCharOffsets()> (SMS_MMS)
<android.content.Context: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (SMS_MMS)
<android.media.AudioPlaybackCaptureConfiguration: int[] getExcludeUids()> (SMS_MMS)
<android.app.INotificationManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo getPrimaryUser()> (SMS_MMS)
<android.webkit.WebStorage$Origin: java.lang.String getOrigin()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Proxy: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String getAlwaysOnVpnPackage(int)> (SMS_MMS)
<android.app.RemoteInput$Builder: android.os.Bundle getExtras()> (SMS_MMS)
<android.telephony.ims.ImsReasonInfo: int describeContents()> (SMS_MMS)
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfoLte: int hashCode()> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.util.Set getSelectedDatasetIds()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo: int hashCode()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()> (SMS_MMS)
<android.view.InsetsAnimationThreadControlRunner: int getAnimationType()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)> (SMS_MMS)
<android.os.TimestampedValue: int hashCode()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int getCaptureSession()> (SMS_MMS)
<android.view.KeyCharacterMap: int describeContents()> (SMS_MMS)
<android.location.Geofence: double getLongitude()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.media.tv.tunerresourcemanager.IResourcesReclaimListener getDefaultImpl()> (SMS_MMS)
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingEnd()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getHomeActivities(java.util.List)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()> (SMS_MMS)
<android.telephony.ServiceState: int getLteEarfcnRsrpBoost()> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$Identifier: java.lang.CharSequence getName()> (SMS_MMS)
<android.os.IInstalld$Default: android.os.storage.CrateMetadata[] getAppCrates(java.lang.String,java.lang.String[],int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.content.ComponentName getCallingActivity(android.os.IBinder)> (SMS_MMS)
<android.service.notification.Adjustment: java.lang.String getIssuer()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getDeviceOwnerOrganizationName()> (SMS_MMS)
<android.hardware.radio.ProgramSelector$Identifier: int hashCode()> (SMS_MMS)
<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize: int getNativeSize()> (SMS_MMS)
<android.widget.Scroller: int getFinalX()> (SMS_MMS)
<android.telephony.CellInfo: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean canConnectTo5GInDsdsMode()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$TaskDescription getTaskDescription(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getApnName()> (SMS_MMS)
<android.content.LoggingContentInterface: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.view.SurfaceView$2: android.view.Surface getSurface()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getPortInfo()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.filterfw.core.Frame: boolean isReusable()> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub: android.content.ISyncStatusObserver getDefaultImpl()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> (SMS_MMS)
<android.view.ViewConfiguration: float getAmbiguousGestureMultiplier()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIcc(java.lang.String)> (SMS_MMS)
<android.net.NetworkRequest: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Default: int getParentSessionId()> (SMS_MMS)
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[],java.lang.String[])> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()> (SMS_MMS)
<android.os.Build: java.lang.String getRadioVersion()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveCount(int)> (SMS_MMS)
<android.os.IIncidentManager$Stub: android.os.IIncidentManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Int4: int elementSum()> (SMS_MMS)
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)> (SMS_MMS)
<android.net.INetworkScoreService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableUsbRegexs()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: android.os.storage.VolumeRecord[] getVolumeRecords(int)> (SMS_MMS)
<android.app.ActivityManager: int getMaxRecentTasksStatic()> (SMS_MMS)
<android.os.health.HealthStats: int getTimerKeyAt(int)> (SMS_MMS)
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDeviceProtectedDataDir(android.content.pm.parsing.ParsingPackageRead,int)> (SMS_MMS)
<android.media.session.MediaSession$Token: int getUid()> (SMS_MMS)
<android.webkit.Plugin: java.lang.String getPath()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getInstrumentations()> (SMS_MMS)
<android.widget.TextView: int getAutofillType()> (SMS_MMS)
<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Default: float[] getFanSpeeds(java.lang.String)> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: int getId()> (SMS_MMS)
<android.hardware.Sensor: java.util.UUID getUuid()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub: com.android.internal.widget.IRemoteViewsFactory getDefaultImpl()> (SMS_MMS)
<android.hardware.Camera$Parameters: boolean getVideoStabilization()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int describeContents()> (SMS_MMS)
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.app.Fragment: int getNextTransitionStyle()> (SMS_MMS)
<android.util.EventLog$Event: byte[] getBytes()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.util.SparseArray: int indexOfValue(java.lang.Object)> (SMS_MMS)
<android.app.timezone.RulesState: java.lang.String getBaseRulesVersion()> (SMS_MMS)
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub: android.os.incremental.IStorageHealthListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getFullPowerWhitelistExceptIdle()> (SMS_MMS)
<android.os.storage.StorageManager: long getAllocatableBytes(java.util.UUID)> (SMS_MMS)
<android.util.proto.ProtoStream: int getObjectIdFromToken(long)> (SMS_MMS)
<android.filterfw.core.Filter: int getStatus()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)> (SMS_MMS)
<android.security.net.config.WfaCertificateSource$NoPreloadHolder: android.security.net.config.WfaCertificateSource access$100()> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getAppBytes()> (SMS_MMS)
<android.telephony.SmsManager: java.util.List getMessagesFromIcc()> (SMS_MMS)
<android.app.FragmentHostCallback: android.util.ArrayMap retainLoaderNonConfig()> (SMS_MMS)
<android.view.KeyEvent: int getMetaState()> (SMS_MMS)
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.media.MediaPlayer: int getSelectedTrack(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] getNamesForUids(int[])> (SMS_MMS)
<android.telephony._$$Lambda$CbGeoUtils$Polygon$WFBMZ4F3Agw9FQd3hBGj_MGCuho: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)> (SMS_MMS)
<android.animation.ValueAnimator: long getFrameDelay()> (SMS_MMS)
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)> (SMS_MMS)
<android.os.IProgressListener$Stub: android.os.IProgressListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIds(android.content.ComponentName)> (SMS_MMS)
<android.view.IScrollCaptureController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CellSignalStrength: int inRangeOrUnavailable(int,int,int,int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String,int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: byte[] getContentType()> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo$1: android.telephony.VoiceSpecificRegistrationInfo[] newArray(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getLaunchedFromUid(android.os.IBinder)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDarkVibrantSwatch()> (SMS_MMS)
<android.telephony.UssdResponse: java.lang.String getUssdRequest()> (SMS_MMS)
<android.graphics.GraphicBuffer: int getFormat()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isStorageLow()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetPercentage()> (SMS_MMS)
<android.widget.Magnifier$SurfaceInfo: int access$2100(android.widget.Magnifier$SurfaceInfo)> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getForeground()> (SMS_MMS)
<android.net.Network: long getNetworkHandle()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int access$900(android.media.ExifInterface$ByteOrderedDataInputStream)> (SMS_MMS)
<android.database.CursorWindow: float getFloat(int,int)> (SMS_MMS)
<android.media.AudioFormat: int getPropertySetMask()> (SMS_MMS)
<android.widget.ScrollView: int getTopEdgeEffectColor()> (SMS_MMS)
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)> (SMS_MMS)
<android.os.IDumpstate$Stub: android.os.IDumpstate getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.CharSequence getSimSpecificCarrierIdName()> (SMS_MMS)
<android.content.ContextWrapper: android.view.Display getDisplayNoVerify()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: int getUcePublishState(int)> (SMS_MMS)
<android.app.usage.UsageStats: long getFirstTimeStamp()> (SMS_MMS)
<android.os.IUserManager$Default: android.content.pm.UserInfo getProfileParent(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: com.android.internal.app.IAppOpsAsyncNotedCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.radio.ITuner$Default: android.graphics.Bitmap getImage(int)> (SMS_MMS)
<android.location.GpsMeasurement: double getSnrInDb()> (SMS_MMS)
<android.media.AudioPort: android.media.AudioHandle handle()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.AbsListView: int getHeaderViewsCount()> (SMS_MMS)
<android.util.ArraySet$1: int colGetSize()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioHalVersion()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getInputSizes(int)> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.UserManager: int getUserHandle()> (SMS_MMS)
<android.app.Instrumentation: android.content.Context getContext()> (SMS_MMS)
<android.hardware.ICameraClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.ScrollCaptureTarget: android.graphics.Rect getLocalVisibleRect()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: long getScreenUnlockedFunctions()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.AssetManager getAssets()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: com.android.internal.graphics.palette.Palette$Swatch getAverageColor()> (SMS_MMS)
<android.app.IWallpaperManager$Default: int getWidthHint(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)> (SMS_MMS)
<android.view.IInputMonitorHost$Stub: android.view.IInputMonitorHost asInterface(android.os.IBinder)> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: int getVisibilityOverride()> (SMS_MMS)
<android.app.ISearchManager$Default: android.content.ComponentName getGlobalSearchActivity()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()> (SMS_MMS)
<android.view.View: int getOutlineSpotShadowColor()> (SMS_MMS)
<android.content.pm.PackagePartitions: java.util.ArrayList getOrderedPartitions(java.util.function.Function)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getStreamMinVolume(int)> (SMS_MMS)
<android.media.tv.TvTrackInfo: float getVideoFrameRate()> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.util.PduCacheEntry: int getMessageBox()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighResolutionOutputSizes(int)> (SMS_MMS)
<android.widget.BaseAdapter: int getItemViewType(int)> (SMS_MMS)
<android.net.ConnectivityThread: android.net.ConnectivityThread get()> (SMS_MMS)
<android.app.timezonedetector.ManualTimeZoneSuggestion: java.util.List getDebugInfo()> (SMS_MMS)
<android.view.RemoteAnimationTarget: int describeContents()> (SMS_MMS)
<android.os.BatteryStats$LevelStepTracker: int getLevelAt(int)> (SMS_MMS)
<android.os.IVibratorService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.Layout$SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.os.Parcel: int dataAvail()> (SMS_MMS)
<android.location.GnssMeasurement: long getReceivedSvTimeNanos()> (SMS_MMS)
<android.drm.DrmInfo: java.lang.String getMimeType()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getSystemPowerWhitelistExceptIdle()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int getClientPid()> (SMS_MMS)
<android.widget.Scroller: int getStartY()> (SMS_MMS)
<android.os.incremental.IncrementalFileSystemControlParcel: int describeContents()> (SMS_MMS)
<android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> (SMS_MMS)
<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: java.lang.String getMnc()> (SMS_MMS)
<android.text.style.SuggestionSpan: int getUnderlineColor()> (SMS_MMS)
<android.graphics.drawable.RippleForeground$2: java.lang.Float get(android.graphics.drawable.RippleForeground)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathEnd()> (SMS_MMS)
<com.android.internal.view.IInputContext$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.graphics.Point getStableDisplaySize()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getTotalBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: byte[] getTransactionId()> (SMS_MMS)
<android.telecom.PhoneAccount: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getPrimaryImage()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma$1: void <init>()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: java.util.ArrayList setSharedElementState(android.os.Bundle,java.util.ArrayList)> (SMS_MMS)
<android.media.RoutingSessionInfo: android.os.Bundle getControlHints()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewRootImpl$NativePostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.net.NetworkTemplate: android.net.NetworkTemplate getNetworkTemplateFromBackup(java.io.DataInputStream)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int step(int,boolean)> (SMS_MMS)
<android.widget.TextView: android.view.textclassifier.TextClassificationContext getTextClassificationContext()> (SMS_MMS)
<android.os.HardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages()> (SMS_MMS)
<android.net.ConnectivityManager: int getMultipathPreference(android.net.Network)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: int getAppStandbyBucket(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.slice.SliceItem: android.app.slice.Slice getSlice()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()> (SMS_MMS)
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getOemDirectory()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceUsageFlags(android.view.Surface)> (SMS_MMS)
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)> (SMS_MMS)
<android.os.UserHandle: int getCacheAppGid(int,int)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaCodec$MediaImage: int getHeight()> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.util.SparseBooleanArray: int size()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int hashCode()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByCarrier()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: long getRateLimitResetTime(java.lang.String,int)> (SMS_MMS)
<android.view.ViewGroup$1: android.view.View getCustomView()> (SMS_MMS)
<android.hardware.ConsumerIrManager$CarrierFrequencyRange: int getMaxFrequency()> (SMS_MMS)
<android.app.backup.BackupDataInputStream: int size()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean getResizeableActivity()> (SMS_MMS)
<com.android.internal.telephony.SmsRawData: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getNumAnrs(int)> (SMS_MMS)
<android.content.res.ColorStateList$ColorStateListFactory: int getChangingConfigurations()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> (SMS_MMS)
<android.os.BaseBundle: boolean isEmptyParcel()> (SMS_MMS)
<android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getAttentionServicePackageName()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: int getIdleConnectionTimeout()> (SMS_MMS)
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)> (SMS_MMS)
<android.os.Build: java.util.List getFingerprintedPartitions()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayAutoMode()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: java.lang.String getLabel()> (SMS_MMS)
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()> (SMS_MMS)
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IShortcutService$Default: int getRemainingCallCount(java.lang.String,int)> (SMS_MMS)
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: int getParentSessionId()> (SMS_MMS)
<android.os.PatternMatcher: int getType()> (SMS_MMS)
<android.net.StaticIpConfiguration: java.util.List getDnsServers()> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Parcel: boolean[] createBooleanArray()> (SMS_MMS)
<android.graphics.Canvas: int getWidth()> (SMS_MMS)
<android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.content.pm.ActivityInfo,android.os.IBinder,int,android.content.res.Configuration)> (SMS_MMS)
<android.os.IVold$Stub$Proxy: boolean isConvertibleToFbe()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub: android.app.backup.IBackupObserver getDefaultImpl()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getSelectableSubscriptionInfoList()> (SMS_MMS)
<android.security.IFileIntegrityService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: int getLineBreakOffset(int)> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.style.AccessibilityReplacementSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.app.DirectAction: android.os.Bundle getExtras()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub: android.app.backup.IBackupObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getSecondaryUsers(android.content.ComponentName)> (SMS_MMS)
<android.media.AudioManager: int getStreamVolume(int)> (SMS_MMS)
<android.accessibilityservice.GestureDescription: android.accessibilityservice.GestureDescription$StrokeDescription getStroke(int)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastRejectBackgroundTime(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getLineNumber()> (SMS_MMS)
<android.app.IAlarmListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager: int opToDefaultMode(int)> (SMS_MMS)
<android.service.autofill.FillEventHistory: int describeContents()> (SMS_MMS)
<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDetailedUidStats(java.lang.String[])> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getInstallerPackageName()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: long getRecommendedTimeoutMillis()> (SMS_MMS)
<android.widget.SearchView: int getMaxWidth()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getNumPacketsRx()> (SMS_MMS)
<android.location.GnssMeasurement: int getConstellationType()> (SMS_MMS)
<android.content.pm.StringParceledListSlice: int describeContents()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPermissionGroups()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int access$276(android.window.WindowContainerTransaction$Change,int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GnssNavigationMessage: int getSubmessageId()> (SMS_MMS)
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinder()> (SMS_MMS)
<android.content.res.Resources$Theme: int getExplicitStyle(android.util.AttributeSet)> (SMS_MMS)
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastZslStillFrameNumber()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordComplexity()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()> (SMS_MMS)
<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()> (SMS_MMS)
<android.net.IpPrefix$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IAppTask$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebViewZygote: android.os.ZygoteProcess getProcess()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray getMinExtensionVersions()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)> (SMS_MMS)
<android.drm.DrmSupportInfo: java.lang.String getDescription()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getEuiccControllerService()> (SMS_MMS)
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> (SMS_MMS)
<android.telephony.CallForwardingInfo: int getStatus()> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int unlink(int,java.lang.String)> (SMS_MMS)
<android.provider.Telephony$Sms: java.lang.String getDefaultSmsPackage(android.content.Context)> (SMS_MMS)
<android.app.IUserSwitchObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.app.ITransientNotification$Stub: android.app.ITransientNotification getDefaultImpl()> (SMS_MMS)
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isInstalled()> (SMS_MMS)
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int[] getValidOutputFormatsForInput(int)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getNavigationItemCount()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getTaskAffinity()> (SMS_MMS)
<android.media.AudioTrack: int getNativeOutputSampleRate(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.app.ActivityThread: android.app.Application getApplication()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: boolean getAf()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: java.util.List access$300(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<com.android.internal.util.StateMachine: int getLogRecCount()> (SMS_MMS)
<android.widget.CompoundButton: android.graphics.BlendMode getButtonTintBlendMode()> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.IServiceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.autofill.AutofillManager: int getDatasetIdFromAuthenticationId(int)> (SMS_MMS)
<android.view.ThreadedRenderer: android.graphics.Picture captureRenderingCommands()> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub: com.android.internal.policy.IKeyguardDismissCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: int[] getInputDeviceIds()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)> (SMS_MMS)
<android.widget.PopupWindow: boolean getAllowScrollingAnchorParent()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: long computeChargeTimeRemaining()> (SMS_MMS)
<android.app.usage.UsageStats: long getLastTimeVisible()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getName()> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: int getBeginIndex()> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.net.wifi.nl80211.ISendMgmtFrameEvent asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getActiveNetwork()> (SMS_MMS)
<android.view.textclassifier.TextLanguage$Request: int describeContents()> (SMS_MMS)
<android.view.ThreadedRenderer: android.graphics.RenderNode getRootNode()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getReturnTransition()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: java.util.List getTargets()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.SensorManager: float getInclination(float[])> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)> (SMS_MMS)
<android.print.IPrintManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: java.lang.Integer getEnum(int)> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.Matrix4f: float[] getArray()> (SMS_MMS)
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getPackageStats()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getLocaleFromDefaultSim()> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)> (SMS_MMS)
<android.widget.Editor: int access$6900(android.widget.Editor,int)> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub: android.app.prediction.IPredictionManager getDefaultImpl()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getRoamingProtocol()> (SMS_MMS)
<android.telephony.ims.ImsConferenceState: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getAlpha()> (SMS_MMS)
<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.IconMenuView$LayoutParams getTextAppropriateLayoutParams()> (SMS_MMS)
<android.location.LocationRequest: long getExpireAt()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub: android.os.incremental.IStorageHealthListener getDefaultImpl()> (SMS_MMS)
<android.telephony.CellInfo: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)> (SMS_MMS)
<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()> (SMS_MMS)
<android.content.ContentProviderNative: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isTtyOverVolteEnabled()> (SMS_MMS)
<android.telephony.CellConfigLte$1: android.telephony.CellConfigLte createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub: android.location.IGnssNavigationMessageListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo: int hashCode()> (SMS_MMS)
<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager$CarrierFrequencyRange[] getCarrierFrequencies()> (SMS_MMS)
<android.view.textclassifier.ConversationAction: float getConfidenceScore()> (SMS_MMS)
<android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)> (SMS_MMS)
<android.widget.Spinner$1: com.android.internal.view.menu.ShowableListMenu getPopup()> (SMS_MMS)
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)> (SMS_MMS)
<android.text.SpannableString: int getSpanStart(java.lang.Object)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)> (SMS_MMS)
<android.security.keystore.recovery.KeyDerivationParams: int getMemoryDifficulty()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int getLeft()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int getDialogMessageResId()> (SMS_MMS)
<android.telephony.SmsManager: int getPremiumSmsConsent(java.lang.String)> (SMS_MMS)
<android.animation.Keyframe$FloatKeyframe: android.animation.Keyframe$FloatKeyframe clone()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()> (SMS_MMS)
<android.text.method.WordIterator: int getEnd(int)> (SMS_MMS)
<android.content.UriMatcher: int match(android.net.Uri)> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getMobileRadioApWakeupCount(int)> (SMS_MMS)
<android.drm.DrmSupportInfo: int hashCode()> (SMS_MMS)
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getCertsFromCarrierPrivilegeAccessRules()> (SMS_MMS)
<android.app.IWallpaperManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)> (SMS_MMS)
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)> (SMS_MMS)
<android.os.PowerManager: int getPowerSaveModeTrigger()> (SMS_MMS)
<android.os.LocaleList: int getFirstMatchIndexWithEnglishSupported(java.util.Collection)> (SMS_MMS)
<android.app.Activity: boolean isImmersive()> (SMS_MMS)
<android.widget.SelectionActionModeHelper$TextClassificationHelper: android.widget.SelectionActionModeHelper$SelectionResult getOriginalSelection()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getIcon()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Default: long getAuthenticatorId(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getNamespaceCount(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String[] getPackagesForUid(int)> (SMS_MMS)
<android.widget.EditText: boolean getDefaultEditable()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: android.hardware.radio.RadioManager$BandDescriptor getDescriptor()> (SMS_MMS)
<android.media.session.MediaController: java.lang.String getTag()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCallWaiting()> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleLeft()> (SMS_MMS)
<android.renderscript.RenderScript: long nFileA3DCreateFromFile(java.lang.String)> (SMS_MMS)
<android.view.View: int getTextAlignment()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$902(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.printservice.PrintServiceInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.media.effect.FilterEffect: java.lang.String getName()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.ComponentName getInstantAppResolverSettingsComponent()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getBaseCodePath()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createRestrictedProfile(java.lang.String)> (SMS_MMS)
<android.hardware.location.IContextHubClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.TransitionManager: android.transition.Transition getTransition(android.transition.Scene)> (SMS_MMS)
<android.net.IpSecManager: java.io.IOException rethrowCheckedExceptionFromServiceSpecificException(android.os.ServiceSpecificException)> (SMS_MMS)
<android.location.Location$1: android.location.Location$BearingDistanceCache initialValue()> (SMS_MMS)
<android.content.UndoManager$UndoState: android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner)> (SMS_MMS)
<android.media.ExifInterface$Rational: double calculate()> (SMS_MMS)
<android.app.slice.Slice: java.util.List getHints()> (SMS_MMS)
<android.content.res.DrawableCache: android.graphics.drawable.Drawable getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)> (SMS_MMS)
<android.view.contentcapture.DataRemovalRequest$LocusIdRequest: android.content.LocusId getLocusId()> (SMS_MMS)
<android.app.usage.UsageStatsManager: int getAppStandbyBucket()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<android.app.INotificationManager$Default: java.util.List getZenRules()> (SMS_MMS)
<android.net.wifi.nl80211.HiddenNetwork: int hashCode()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfigParser$ParsingContext: int access$208(com.android.internal.content.om.OverlayConfigParser$ParsingContext)> (SMS_MMS)
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeUncertaintyMeters()> (SMS_MMS)
<android.text.style.RelativeSizeSpan: float getSizeChange()> (SMS_MMS)
<android.os.UserHandle: int getCacheAppGid(int)> (SMS_MMS)
<android.net.Uri$StringUri: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getServicesSystemSharedLibraryPackageName()> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$1: android.telephony.VisualVoicemailSmsFilterSettings[] newArray(int)> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> (SMS_MMS)
<android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState$1: android.telephony.PreciseDataConnectionState createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: boolean isHdmiCecVolumeControlEnabled()> (SMS_MMS)
<android.text.style.SuperscriptSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: android.content.pm.ParceledListSlice getAllJobSnapshots()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub: android.content.integrity.IAppIntegrityManager getDefaultImpl()> (SMS_MMS)
<android.inputmethodservice.InlineSuggestionSession: com.android.internal.view.IInlineSuggestionsRequestCallback getRequestCallback()> (SMS_MMS)
<android.service.autofill.UserData: android.util.ArrayMap getFieldClassificationArgs()> (SMS_MMS)
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getIdType()> (SMS_MMS)
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.hardware.biometrics.IBiometricServiceLockoutResetCallback getDefaultImpl()> (SMS_MMS)
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTextSelectionEnd()> (SMS_MMS)
<android.animation.Animator: boolean isStarted()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()> (SMS_MMS)
<android.location.GnssMeasurement: double getCarrierPhaseUncertainty()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: int getCount()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getAsuLevel()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: int enableTargetSdkChanges(java.lang.String,int)> (SMS_MMS)
<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(java.lang.Object)> (SMS_MMS)
<android.hardware.radio.ProgramList$Chunk: java.util.Set getRemoved()> (SMS_MMS)
<android.service.notification.Adjustment: java.lang.String getPackage()> (SMS_MMS)
<android.view.autofill.AutofillId: int hashCode()> (SMS_MMS)
<android.text.Layout: int getParagraphLeft(int)> (SMS_MMS)
<android.widget.CompoundButton: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$ConversationActionsEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestPath()> (SMS_MMS)
<android.hardware.LegacySensorManager: int getRotation()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: long getNativeRenderer()> (SMS_MMS)
<android.telephony._$$Lambda$VtfSvbW0tRP_qFDYPVM9jEdZHj0: java.lang.Object applyOrThrow(java.lang.Object)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getPassword()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getEnvelopeServiceCategory()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()> (SMS_MMS)
<com.android.internal.policy.DecorView: android.view.View getNavigationBarBackgroundView()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectBadge()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.os.IncidentManager$DumpCallback: int access$102(android.os.IncidentManager$DumpCallback,int)> (SMS_MMS)
<android.text.style.LocaleSpan: java.util.Locale getLocale()> (SMS_MMS)
<android.app.AppOpsManager: int resolveFirstUnrestrictedUidState(int)> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.animation.Keyframe$ObjectKeyframe: android.animation.Keyframe$ObjectKeyframe clone()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getDoNotAskCredentialsOnBoot()> (SMS_MMS)
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)> (SMS_MMS)
<android.media.MediaRoute2Info: android.os.Bundle getExtras()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getSize()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: int getStart()> (SMS_MMS)
<android.graphics.fonts.FontStyle: int getMatchScore(android.graphics.fonts.FontStyle)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getEncodedQuery()> (SMS_MMS)
<android.telephony.CellInfoGsm: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IWindowManager$Default: android.graphics.Bitmap screenshotWallpaper()> (SMS_MMS)
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getFlagsForUid(int)> (SMS_MMS)
<android.content.pm.ComponentInfo: int getBannerResource()> (SMS_MMS)
<android.view.MotionEvent: long getDownTime()> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: float getConfidenceScore(java.lang.String)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.Certificate getCertificate(java.lang.String)> (SMS_MMS)
<android.telecom.TelecomManager: boolean isInCall()> (SMS_MMS)
<android.telephony.CallAttributes$1: android.telephony.CallAttributes createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: byte[] getMacAddress()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName getTopActivityComponent()> (SMS_MMS)
<android.app.WindowConfiguration: int getDisplayWindowingMode()> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub: android.service.notification.IConditionProvider asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.LocaleList: java.util.Locale get(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoWiFiModeSetting(int)> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: java.lang.String getProxyPackageName(int,int)> (SMS_MMS)
<android.view.ViewConfiguration: int getEdgeSlop()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.IllegalArgumentException getInvalidIconException()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: android.hardware.radio.RadioMetadata$Clock getClock(java.lang.String)> (SMS_MMS)
<android.app.Notification$Action: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: int getInterfaceCount()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int getEmergencyCallRouting()> (SMS_MMS)
<android.hardware.radio.ITuner$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getLastSecurityLogRetrievalTime()> (SMS_MMS)
<android.location.Location: float getSpeedAccuracyMetersPerSecond()> (SMS_MMS)
<android.app.role.IRoleManager$Stub: android.app.role.IRoleManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPersistentApplications(int)> (SMS_MMS)
<android.widget.TextView: int getExtendedPaddingTop()> (SMS_MMS)
<android.sysprop.CryptoProperties$type_values: java.lang.String getPropValue()> (SMS_MMS)
<android.view.MagnificationSpec: int describeContents()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int access$502(android.net.lowpan.LowpanChannelInfo,int)> (SMS_MMS)
<android.webkit.WebResourceResponse: java.io.InputStream getData()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getMinHeight()> (SMS_MMS)
<android.media.soundtrigger_middleware.Phrase: int describeContents()> (SMS_MMS)
<android.view.View: int getRight()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryStack()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isManagedProfile(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int decodeReturnType(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiSupplStateTime(int,long,int)> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.view.accessibility.IWindowMagnificationConnection asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.compat.ChangeReporter$ChangeReport: int hashCode()> (SMS_MMS)
<android.widget.RemoteViews$LayoutParamAction: java.lang.String getUniqueKey()> (SMS_MMS)
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextLinkifyEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyRequest access$1002(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.camera2.legacy.LegacyRequest)> (SMS_MMS)
<android.media.AudioPresentation: int getProgramId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.TypedArray: java.lang.String getPositionDescription()> (SMS_MMS)
<android.media.AudioTrack: int getNativeFrameCount()> (SMS_MMS)
<android.util.ContainerHelpers: int binarySearch(int[],int,int)> (SMS_MMS)
<android.net.shared.Inet4AddressUtils: java.net.Inet4Address getBroadcastAddress(java.net.Inet4Address,int)> (SMS_MMS)
<android.content.ContextWrapper: boolean isUiContext()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.Intent createAdminSupportIntent(java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String[] access$600()> (SMS_MMS)
<android.app.Application: java.lang.String getProcessName()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: com.android.internal.widget.ICheckCredentialProgressCallback getDefaultImpl()> (SMS_MMS)
<android.app.LoadedApk: java.lang.String getDataDir()> (SMS_MMS)
<android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getOpportunisticSubscriptions()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.prediction.AppPredictionSessionId: int hashCode()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDarkMutedSwatch()> (SMS_MMS)
<com.android.internal.statusbar.StatusBarIcon: int describeContents()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getGnssHardwareModelName()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int available()> (SMS_MMS)
<android.view.MotionEvent: float getXCursorPosition()> (SMS_MMS)
<android.content.ContentResolver: android.graphics.drawable.Drawable getTypeDrawable(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)> (SMS_MMS)
<android.content.res.AssetManager: int getResourceArraySize(int)> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] getVerityRootHash(java.lang.String)> (SMS_MMS)
<android.telephony.CellInfoTdscdma: int hashCode()> (SMS_MMS)
<android.net.IpSecManager: java.lang.RuntimeException rethrowUncheckedExceptionFromServiceSpecificException(android.os.ServiceSpecificException)> (SMS_MMS)
<com.android.internal.os.RailStats: com.android.internal.os.RailStats getRailStats()> (SMS_MMS)
<android.text.Layout: int getLineExtra(int)> (SMS_MMS)
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub: android.app.backup.ISelectBackupTransportCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVisualVoicemailEnabled(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.hardware.Camera$Size: int hashCode()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$12: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.media.VolumeShaper$Configuration: long getDuration()> (SMS_MMS)
<android.widget.Scroller: int getCurrY()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfo: int hashCode()> (SMS_MMS)
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getSetupWizardPackageName()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getRollbackDataPolicy()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoWiFiSettingEnabled(int)> (SMS_MMS)
<android.util.SparseArray: int indexOfKey(int)> (SMS_MMS)
<android.content.RestrictionsManager: android.content.Intent createLocalApprovalIntent()> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbDevice: boolean getHasAudioPlayback()> (SMS_MMS)
<android.service.autofill.FieldClassification$1: int compare(android.service.autofill.FieldClassification$Match,android.service.autofill.FieldClassification$Match)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.util.Set getWhitelistedRestrictedPermissions()> (SMS_MMS)
<android.os.SystemVibrator: boolean isVibrating()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getParentSessionId()> (SMS_MMS)
<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: byte[] read()> (SMS_MMS)
<android.media.AudioTrack: float getMaxVolume()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.transition.Slide$CalculateSlideVertical: float getGoneX(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getTag()> (SMS_MMS)
<android.media.AudioSystem: java.lang.String getOutputDeviceName(int)> (SMS_MMS)
<android.media.IAudioService$Default: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)> (SMS_MMS)
<android.widget.GridView: int getColumnWidth()> (SMS_MMS)
<android.app.backup.BackupDataOutput: int getTransportFlags()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)> (SMS_MMS)
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getDefaultConfig()> (SMS_MMS)
<android.app.EnterTransitionCoordinator: android.transition.Transition getSharedElementTransition()> (SMS_MMS)
<android.graphics.ImageDecoder: boolean getConserveMemory()> (SMS_MMS)
<android.service.notification.ZenModeConfig: int hashCode()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkStats: long getElapsedRealtime()> (SMS_MMS)
<android.media.MediaPlayer$ProvisioningThread: int status()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub: android.hardware.radio.ITunerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String,int,int)> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getObbBytes()> (SMS_MMS)
<android.renderscript.Short4: short length()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryReminders()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: boolean getCurrentLocation(android.location.LocationRequest,android.os.ICancellationSignal,android.location.ILocationListener,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.radio.RadioMetadata$Clock: long getUtcEpochSeconds()> (SMS_MMS)
<android.content.integrity.AppIntegrityManager: java.lang.String getCurrentRuleSetVersion()> (SMS_MMS)
<android.telecom.Logging.SessionManager: java.lang.String getSessionId()> (SMS_MMS)
<android.view.VelocityTracker: float getYVelocity(int)> (SMS_MMS)
<android.media.IAudioService$Default: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar$Tab getSelectedTab()> (SMS_MMS)
<android.app.INotificationManager$Default: java.util.List getEnabledNotificationListenerPackages()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IDumpstate$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()> (SMS_MMS)
<android.app.timezone.Utils: int validateVersion(java.lang.String,int)> (SMS_MMS)
<android.widget.ProgressBar: int getMinWidth()> (SMS_MMS)
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)> (SMS_MMS)
<android.graphics.Bitmap: int getDensity()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()> (SMS_MMS)
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> (SMS_MMS)
<android.media.MediaDrm$ProvisionRequest: byte[] getData()> (SMS_MMS)
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub: android.hardware.display.IColorDisplayManager getDefaultImpl()> (SMS_MMS)
<android.telephony.NetworkScanRequest: boolean getIncrementalResults()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int getLegacyStreamTypeForAudioAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager: int getNumOps()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence getText()> (SMS_MMS)
<android.os.GraphicsEnvironment: java.lang.String getDebugLayerPathsFromSettings(android.os.Bundle,android.content.pm.IPackageManager,java.lang.String,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: boolean getBindInstantServiceAllowed(int)> (SMS_MMS)
<android.view.SurfaceControl: int[] getDisplayColorModes(android.os.IBinder)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub: android.view.contentcapture.IContentCaptureManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()> (SMS_MMS)
<android.os.VibrationEffect$Composed: java.util.List getPrimitiveEffects()> (SMS_MMS)
<android.app.Instrumentation: android.os.Bundle getBinderCounts()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)> (SMS_MMS)
<android.widget.Magnifier: android.graphics.PointF getMagnifierDefaultSize()> (SMS_MMS)
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.location.ILocationListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.RulesState: android.app.timezone.DistroRulesVersion getInstalledDistroRulesVersion()> (SMS_MMS)
<android.animation.FloatKeyframeSet: float getFloatValue(float)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean getImsProvisioningStatusForCapability(int,int,int)> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionRemove: int getActionTag()> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getSubscriptionType()> (SMS_MMS)
<android.os.MemoryFile: int length()> (SMS_MMS)
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte copy()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isNotificationListenerServicePermitted(java.lang.String,int)> (SMS_MMS)
<android.graphics.Paint: float getStrikeThruThickness()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: int describeContents()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy$InstallationOption getInstallationOptionAt(long)> (SMS_MMS)
<android.permission.PermissionManager: int getRuntimePermissionsVersion()> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.MessageSamplingConfig: long getExpirationTimeSinceBootMillis()> (SMS_MMS)
<android.os.UserManager: java.util.List getEnabledProfiles()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback getDefaultImpl()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int encryptStorage(int,java.lang.String)> (SMS_MMS)
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyImsServiceRegisterer()> (SMS_MMS)
<android.graphics.BitmapRegionDecoder: int getWidth()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()> (SMS_MMS)
<android.widget.AdapterView: int getSelectedItemPosition()> (SMS_MMS)
<android.media.projection.MediaProjectionInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetRight()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: android.util.Pair getCurve()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAllCrossProfilePackages()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.location.GnssMeasurement: long getCarrierCycles()> (SMS_MMS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()> (SMS_MMS)
<android.util.SparseSetArray: int sizeAt(int)> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getModel()> (SMS_MMS)
<android.location.LocationRequest: boolean getHideFromAppOps()> (SMS_MMS)
<android.net.MacAddress: java.net.Inet6Address getLinkLocalIpv6FromEui48Mac()> (SMS_MMS)
<android.view.InputEvent: android.view.InputDevice getDevice()> (SMS_MMS)
<android.hardware.Camera$Parameters: float getVerticalViewAngle()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)> (SMS_MMS)
<android.text.SpannableString: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.app.DownloadManager: int markRowDeleted(long[])> (SMS_MMS)
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)> (SMS_MMS)
<android.os.INetworkManagementService$Default: java.lang.String[] listTetheredInterfaces()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getPhoneId(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.view.accessibility.AccessibilityWindowInfo getWindow(int)> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackages(long,android.app.backup.IRestoreObserver,java.lang.String[],android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getTransportType()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.CellIdentity: void <clinit>()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int getWindowingMode()> (SMS_MMS)
<android.view.IPinnedStackListener$Stub: android.view.IPinnedStackListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.ContentProvider: android.content.Context getContext()> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: byte[] toByteArray()> (SMS_MMS)
<android.content.SyncStatusInfo: int describeContents()> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.ListPopupWindow: android.view.View getSelectedView()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isSpeakerphoneOn()> (SMS_MMS)
<android.net.NetworkPolicyManager: int getUidPolicy(int)> (SMS_MMS)
<android.os.Debug: int getGlobalFreedSize()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray: int describeContents()> (SMS_MMS)
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()> (SMS_MMS)
<android.media.AudioManager$NativeEventHandlerDelegate: android.os.Handler getHandler()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.view.Surface getInputSurface()> (SMS_MMS)
<android.transition.Slide: int getSlideEdge()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeForSms(java.lang.String)> (SMS_MMS)
<android.app.admin.NetworkEvent: long getId()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)> (SMS_MMS)
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsUid()> (SMS_MMS)
<android.view.IRotationWatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioned()> (SMS_MMS)
<android.os.Parcel: android.os.IBinder[] createBinderArray()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getDbm()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: long[] getProcessPss(int[])> (SMS_MMS)
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.widget.TextView: int getRightPaddingOffset()> (SMS_MMS)
<android.location.Location: int describeContents()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalSwappedOut()> (SMS_MMS)
<android.widget.Editor$HandleView: float getHorizontal(android.text.Layout,int)> (SMS_MMS)
<android.app.DreamManager: boolean isDreaming()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiPlaybackClient getPlaybackClient()> (SMS_MMS)
<android.media.MicrophoneInfo: java.lang.String getAddress()> (SMS_MMS)
<android.os.incremental.StorageHealthCheckParams: int describeContents()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.SigningInfo: int describeContents()> (SMS_MMS)
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIdsForHost(java.lang.String,int)> (SMS_MMS)
<android.text.PrecomputedText: java.lang.CharSequence getText()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getPortInfo()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: java.util.List getAvailableServices()> (SMS_MMS)
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.app.Fragment: int getNextTransition()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: android.os.UserHandle getUser()> (SMS_MMS)
<com.android.internal.util.TypedProperties: int getInt(java.lang.String)> (SMS_MMS)
<android.text.StaticLayout: int getEllipsisCount(int)> (SMS_MMS)
<android.os.IRecoverySystem$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.BinderInternal: long getLastGcTime()> (SMS_MMS)
<android.widget.RemoteViews$SetOnClickResponse: int getActionTag()> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getHorizontalGravity(boolean)> (SMS_MMS)
<android.util.Rational: int hashCode()> (SMS_MMS)
<android.app.Notification$WearableExtender: android.app.PendingIntent getDisplayIntent()> (SMS_MMS)
<android.graphics.text.LineBreaker: int access$300(long,int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getAllowedCarriers(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long forceNetworkLogs()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getPath()> (SMS_MMS)
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.BlendMode getIndeterminateTintBlendMode()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)> (SMS_MMS)
<android.telephony.CellInfo: long getTimeStamp()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getBitErrorRate()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IInstalld$Default: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])> (SMS_MMS)
<android.view.MotionEvent$PointerProperties: int hashCode()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getDestState()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)> (SMS_MMS)
<android.os.SharedMemory: int describeContents()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: float getComponent(int)> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)> (SMS_MMS)
<android.os.BaseBundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRecords: int size()> (SMS_MMS)
<android.content.IntentFilter: boolean getAutoVerify()> (SMS_MMS)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: com.android.internal.telephony.euicc.IAuthenticateServerCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getManageSpaceActivityName()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getDisplayOptions()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: boolean isNetworkActive()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)> (SMS_MMS)
<android.media.MediaRouter$RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getSmsSendCapable(boolean)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getStarts(int)> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: int describeContents()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getMonitoredRailChargeConsumedMaMillis()> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityOperatorNames: int hashCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)> (SMS_MMS)
<android.service.notification.INotificationListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper$1: int compare(com.android.internal.os.BatterySipper,com.android.internal.os.BatterySipper)> (SMS_MMS)
<android.telephony.PreciseCallState: int describeContents()> (SMS_MMS)
<android.os.storage.StorageManager: long getPrimaryStorageSize()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Path getIconMask()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isCphsMwiMessage()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int verifyEncryptionPassword(java.lang.String)> (SMS_MMS)
<android.os.HandlerThread: android.os.Looper getLooper()> (SMS_MMS)
<android.util.LongSparseLongArray: int access$002(android.util.LongSparseLongArray,int)> (SMS_MMS)
<android.view.WindowManagerGlobal: android.view.View getRootView(java.lang.String)> (SMS_MMS)
<android.app.ResultInfo: int hashCode()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(int)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.BlendMode getSecondaryProgressTintBlendMode()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Default: android.net.NetworkStats getTetherStats(int)> (SMS_MMS)
<android.sysprop.CryptoProperties$state_values: java.lang.String getPropValue()> (SMS_MMS)
<android.view.MotionEvent: int getButtonState()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: int describeContents()> (SMS_MMS)
<android.text.BidiFormatter$DirectionalityEstimator: byte getDirectionality(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.CharSequence getNonLocalizedLabel()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int getAudioSource()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesOptionalLibraries()> (SMS_MMS)
<android.util.SparseIntArray: int get(int,int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Region getSafeZone()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.NativeHandle: java.io.FileDescriptor[] getFileDescriptors()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getAllSubInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.animation.RenderNodeAnimator: long getNativeAnimator()> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: java.util.ArrayList getActionsIntents(android.view.textclassifier.TextClassification)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getWellbeingPackageName()> (SMS_MMS)
<com.android.internal.os.FuseAppLoop$CallbackEntry: long getThreadId()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics$Key: java.lang.String getName()> (SMS_MMS)
<android.view.DisplayAdjustments: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.widget.Spinner$DialogPopup: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.window.WindowContainerTransaction$HierarchyOp: android.os.IBinder getContainer()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isDeviceColorManaged()> (SMS_MMS)
<android.text.PrecomputedText: int getParagraphStart(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothUnoptimizedScanTimer()> (SMS_MMS)
<android.content.res.ColorStateList$ColorStateListFactory: android.content.res.ColorStateList newInstance()> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IThermalService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub$Proxy: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getPictureFormat()> (SMS_MMS)
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()> (SMS_MMS)
<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiStateTime(int,long,int)> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCLIR(int)> (SMS_MMS)
<android.os.Debug: int getGlobalAllocCount()> (SMS_MMS)
<android.net.lowpan.LowpanProvision: android.net.lowpan.LowpanIdentity getLowpanIdentity()> (SMS_MMS)
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)> (SMS_MMS)
<android.view.animation.Animation: int getBackgroundColor()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)> (SMS_MMS)
<android.app.role.IRoleManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IPinnedStackListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.autofill.AutofillManager$CompatibilityBridge: java.util.List getEnabledAccessibilityServiceList(int,java.util.List)> (SMS_MMS)
<android.graphics.Bitmap: int getRowBytes()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: com.android.internal.telephony.IOnSubscriptionsChangedListener getDefaultImpl()> (SMS_MMS)
<android.app.IUiModeManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.http.SslCertificate: java.security.cert.X509Certificate getX509Certificate()> (SMS_MMS)
<android.text.method.TextKeyListener$NullKeyListener: int getInputType()> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int getNetworkType()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)> (SMS_MMS)
<android.location.ICountryDetector$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.LocalSocket: int getSoTimeout()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider asInterface(android.os.IBinder)> (SMS_MMS)
<android.filterfw.core.NativeBuffer: boolean isReadOnly()> (SMS_MMS)
<android.util.Rational: int getNumerator()> (SMS_MMS)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.KeyCharacterMap: int getKeyboardType()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: int compareSignatureAlgorithm(int,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int stopUser(android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.UiccSlotInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.view.ViewConfiguration: int getMaximumFlingVelocity()> (SMS_MMS)
<android.filterfw.core.VertexFrame: int[] getInts()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallWaitingStatus(int)> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()> (SMS_MMS)
<android.view.textclassifier.SelectionSessionLogger$SignatureParser: java.lang.String getClassifierId(java.lang.String)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.IVold$Default: int fdeComplete()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)> (SMS_MMS)
<android.app.Notification$MessagingStyle: int getConversationType()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int unloadSoundModel(android.os.ParcelUuid)> (SMS_MMS)
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)> (SMS_MMS)
<android.app.backup.BackupManager: long getAvailableRestoreToken(java.lang.String)> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentProvider$Transport: android.os.ICancellationSignal createCancellationSignal()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: int getAlpha()> (SMS_MMS)
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,boolean,int,int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()> (SMS_MMS)
<android.widget.Editor$EasyEditPopupWindow: int getTextOffset()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: float getExcessPathLengthMeters()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: int getNativeSize()> (SMS_MMS)
<android.os.StatFs: int getBlockCount()> (SMS_MMS)
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.TelephonyManager lambda$registerServiceWrappers$0(android.content.Context)> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getTranslateY()> (SMS_MMS)
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: android.hardware.camera2.params.SessionConfiguration getSessionConfiguration()> (SMS_MMS)
<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,android.security.KeyStoreException)> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.Context: int getColor(int)> (SMS_MMS)
<android.text.style.TtsSpan: int describeContents()> (SMS_MMS)
<android.security.IFileIntegrityService$Stub: android.security.IFileIntegrityService getDefaultImpl()> (SMS_MMS)
<android.graphics.Paint: float getUnderlinePosition()> (SMS_MMS)
<android.os.Debug: int getMethodTracingMode()> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.hardware.hdmi.IHdmiRecordListener getDefaultImpl()> (SMS_MMS)
<android.hardware.location.ContextHubMessage: byte[] getData()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: java.lang.Object get()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)> (SMS_MMS)
<android.app.IActivityManager$Default: int stopUserWithDelayedLocking(int,boolean,android.app.IStopUserCallback)> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()> (SMS_MMS)
<android.net.WebAddress: java.lang.String getPath()> (SMS_MMS)
<android.text.style.SpellCheckSpan: int getSpanTypeId()> (SMS_MMS)
<android.util.MapCollections: java.util.Set getEntrySet()> (SMS_MMS)
<android.media.MediaCodec$CryptoException: int getErrorCode()> (SMS_MMS)
<android.os.ShellCommand: java.lang.String peekNextArg()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback access$200(android.hardware.location.ContextHubManager)> (SMS_MMS)
<android.webkit.ConsoleMessage: int lineNumber()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPersonalAppsSuspendedReasons(android.content.ComponentName)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.LocationRequest: long getExpirationRealtimeMs(long)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Default: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)> (SMS_MMS)
<android.widget.RemoteViews$BitmapCache: int getBitmapMemory()> (SMS_MMS)
<android.view.ThreadedRenderer: int getHeight()> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)> (SMS_MMS)
<android.telephony.CbGeoUtils: int sign(double)> (SMS_MMS)
<android.os.IRecoverySystem$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String,boolean,java.util.Collection)> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getEnterTransition()> (SMS_MMS)
<android.app.Notification$BigTextStyle: android.widget.RemoteViews makeBigContentView()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)> (SMS_MMS)
<android.app.IUidObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: long computeChargeTimeRemaining()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgOID()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GnssMeasurementCorrections: double getHorizontalPositionUncertaintyMeters()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()> (SMS_MMS)
<android.app.Fragment: java.lang.Object getHost()> (SMS_MMS)
<android.os.Environment: java.lang.String getStorageState(java.io.File)> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.euicc.EuiccManager lambda$registerServiceWrappers$3(android.content.Context)> (SMS_MMS)
<android.telecom.TelecomManager: boolean isOutgoingCallPermitted(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()> (SMS_MMS)
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)> (SMS_MMS)
<android.util.proto.ProtoStream: java.lang.String getFieldIdString(long)> (SMS_MMS)
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: long computeBatteryTimeRemaining()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: java.util.List getClientEffects()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub: com.android.internal.textservice.ITextServicesSessionListener getDefaultImpl()> (SMS_MMS)
<android.graphics.RenderNode: int getAmbientShadowColor()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getLaunchedFromUid(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.Shader: long getNativeInstance()> (SMS_MMS)
<android.app.BackStackRecord: int getBreadCrumbTitleRes()> (SMS_MMS)
<android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)> (SMS_MMS)
<android.view.textclassifier.TextSelection: java.lang.String getEntity(int)> (SMS_MMS)
<com.android.server.SystemConfig: java.util.Set getRollbackWhitelistedPackages()> (SMS_MMS)
<android.app.AutomaticZenRule: java.lang.String getName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isAvailable(int,int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getNetworkActivityBytes(int,int)> (SMS_MMS)
<android.os.HidlSupport: int lambda$deepHashCode$3(java.lang.Object)> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.BackStackRecord: android.app.Fragment expandOps(java.util.ArrayList,android.app.Fragment)> (SMS_MMS)
<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)> (SMS_MMS)
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: int getUid()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveSubInfoCount(java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.proto.ProtoOutputStream: int getRawSize()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters(int)> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()> (SMS_MMS)
<android.content.pm.PermissionGroupInfo: int describeContents()> (SMS_MMS)
<android.os.IUserManager$Default: long getUserUnlockRealtime()> (SMS_MMS)
<android.telephony.CellInfoTdscdma: android.telephony.CellInfoTdscdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.content.pm.VersionedPackage: java.lang.String getPackageName()> (SMS_MMS)
<android.util.MemoryIntArray: int size()> (SMS_MMS)
<android.view.ThreadedRenderer$SimpleRenderer: android.graphics.RenderNode getRootNode()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: int getOpacity()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRealPackage()> (SMS_MMS)
<android.view.View: int getMeasuredHeight()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<android.graphics.Canvas: android.graphics.Matrix getMatrix()> (SMS_MMS)
<android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$100()> (SMS_MMS)
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)> (SMS_MMS)
<android.net.nsd.INsdManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.AutoGrowArray$ByteArray: byte get(int)> (SMS_MMS)
<android.widget.Editor: android.text.method.WordIterator getWordIterator()> (SMS_MMS)
<android.graphics.Paint: int getStartHyphenEdit()> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult$1: com.android.internal.telephony.CellNetworkScanResult[] newArray(int)> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo$1: android.telephony.VoiceSpecificRegistrationInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.AudioDeviceAttributes: int getType()> (SMS_MMS)
<android.media.RoutingSessionInfo: int getVolume()> (SMS_MMS)
<android.widget.RemoteViews: int estimateMemoryUsage()> (SMS_MMS)
<android.widget.TextView: android.view.ActionMode$Callback getCustomInsertionActionModeCallback()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.app.NotificationManager$Policy: int allowMessagesFrom()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getVersionCodeMajor()> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)> (SMS_MMS)
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: boolean archiveStoredConversation(java.lang.String,long,boolean)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioTrack$NativePositionEventHandlerDelegate: android.os.Handler getHandler()> (SMS_MMS)
<android.content.IContentService$Stub: android.content.IContentService getDefaultImpl()> (SMS_MMS)
<android.app.backup.BackupManager: int requestBackup(java.lang.String[],android.app.backup.BackupObserver)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int hashCode()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateModemControllerActivityLocked()> (SMS_MMS)
<android.view.RemoteAnimationAdapter: boolean getChangeNeedsSnapshot()> (SMS_MMS)
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()> (SMS_MMS)
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keymaster.KeymasterBlob: int describeContents()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createInputStream(int,int,int)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()> (SMS_MMS)
<android.media.MediaFormat: float getFloat(java.lang.String)> (SMS_MMS)
<android.view.View: float getScaleX()> (SMS_MMS)
<android.app.LoadedApk: java.lang.String getAppDir()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataEnabled()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> (SMS_MMS)
<android.widget.TextView: int getBreakStrategy()> (SMS_MMS)
<com.android.internal.infra.ServiceConnector$Impl: long getAutoDisconnectTimeoutMs()> (SMS_MMS)
<android.widget.ScrollView: float getBottomFadingEdgeStrength()> (SMS_MMS)
<android.net.NetworkIdentity: int compareTo(java.lang.Object)> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.LauncherApps: android.graphics.drawable.Icon getShortcutIcon(android.content.pm.ShortcutInfo)> (SMS_MMS)
<android.hardware.location.ContextHubInfo: java.lang.String getToolchain()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub$Proxy: android.hardware.lights.LightState getLightState(int)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDeviceIdleModeCount(int,int)> (SMS_MMS)
<android.view.Display: int getRotation()> (SMS_MMS)
<android.os.AsyncTask$3: java.lang.Object call()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getBugreportWhitelistedPackages()> (SMS_MMS)
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: java.lang.String getProperty(java.lang.String)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: boolean getFeature(java.lang.String)> (SMS_MMS)
<android.view.Display: long getPresentationDeadlineNanos()> (SMS_MMS)
<android.view.View: android.graphics.PorterDuff$Mode getForegroundTintMode()> (SMS_MMS)
<android.database.AbstractWindowedCursor: double getDouble(int)> (SMS_MMS)
<android.location.GnssMeasurement: double getPseudorangeRateMetersPerSecond()> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaSystemId()> (SMS_MMS)
<android.text.method.WordIterator: int preceding(int)> (SMS_MMS)
<android.graphics.fonts.Font: int getTtcIndex()> (SMS_MMS)
<android.content.ContentProvider$Transport: java.lang.String getProviderName()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: int getKeyType()> (SMS_MMS)
<android.graphics.ImageDecoder: int getMemorySizePolicy()> (SMS_MMS)
<android.text.DynamicLayout: int[] getBlockEndLines()> (SMS_MMS)
<android.app.AppOpsManager: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()> (SMS_MMS)
<android.view.InsetsSource: android.graphics.Rect getVisibleFrame()> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.hardware.fingerprint.IFingerprintClientActiveCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaRecorder: java.util.List getActiveMicrophones()> (SMS_MMS)
<android.view.InputMonitor: int describeContents()> (SMS_MMS)
<android.app.assist.AssistStructure: int getWindowNodeCount()> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()> (SMS_MMS)
<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList(boolean)> (SMS_MMS)
<android.telephony.SmsMessage: boolean isStatusReportMessage()> (SMS_MMS)
<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()> (SMS_MMS)
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean hasIccCard(int)> (SMS_MMS)
<android.view.VerifiedMotionEvent: float getRawX()> (SMS_MMS)
<android.location.Address: int access$100(android.location.Address)> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub: android.view.IRemoteAnimationFinishedCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isPackageSuspended(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.view.animation.AnimationUtils$1: android.view.animation.AnimationUtils$AnimationState initialValue()> (SMS_MMS)
<android.app.assist.AssistStructure: int access$100(android.app.assist.AssistStructure)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCallStateForSlot(int)> (SMS_MMS)
<android.telephony.ims.ImsSsData: int getResult()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getZoomRatios()> (SMS_MMS)
<android.media.AudioRecord: int getAudioFormat()> (SMS_MMS)
<android.appwidget.AppWidgetManager: boolean isBoundWidgetPackage(java.lang.String,int)> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: int getAsInt()> (SMS_MMS)
<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String[])> (SMS_MMS)
<android.print.PrintJobInfo: int getAppId()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.hardware.ICamera$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getVerticalScrollbarTrackDrawable()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean nvWriteCdmaPrl(byte[])> (SMS_MMS)
<android.text.Layout: int getEllipsizedWidth()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: java.lang.String getPartitionId()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()> (SMS_MMS)
<android.content.res.ComplexColor: int getChangingConfigurations()> (SMS_MMS)
<android.webkit.WebView: android.os.Handler getHandler()> (SMS_MMS)
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int,int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> (SMS_MMS)
<android.net.ProxyInfo: java.lang.String getHost()> (SMS_MMS)
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()> (SMS_MMS)
<android.telephony.SmsCbMessage: int getServiceCategory()> (SMS_MMS)
<android.content.ContentValues: android.util.ArrayMap getValues()> (SMS_MMS)
<android.os.RemoteCallback: int describeContents()> (SMS_MMS)
<android.app.ActivityManager: int getUidImportance(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encode(com.android.internal.telephony.cdma.sms.BearerData)> (SMS_MMS)
<android.app.SystemServiceRegistry: java.lang.Object getSystemService(android.app.ContextImpl,java.lang.String)> (SMS_MMS)
<com.android.internal.util.StateMachine: android.os.Handler getHandler()> (SMS_MMS)
<android.service.notification.ZenModeConfig$EventInfo: int resolveUserId(int)> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Default: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IDeviceIdentifiersPolicyService getDefaultImpl()> (SMS_MMS)
<android.content.ContentProvider$Transport: int delete(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle)> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.BoringLayout: int getEllipsisStart(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface()> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getWeight()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsMessage: byte[] getUserData()> (SMS_MMS)
<android.app.job.JobInfo: long getMinBackoffMillis()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyFaceDetectMapper access$1600(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.os.PowerManager$2: java.lang.Boolean recompute(java.lang.Void)> (SMS_MMS)
<android.telephony.SmsManager: int getSmsCapacityOnIcc()> (SMS_MMS)
<android.content.om.IOverlayManager$Default: java.util.Map getAllOverlays(int)> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub: com.android.internal.widget.IRemoteViewsFactory asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()> (SMS_MMS)
<android.telephony.CallQuality: int getCallDuration()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence getNonLocalizedLabel()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.hardware.biometrics.IBiometricServiceReceiver getDefaultImpl()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getAdoptPermissions()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: float[] getScores()> (SMS_MMS)
<android.app.Fragment: android.view.View getView()> (SMS_MMS)
<android.os.UserManager$1: java.lang.Boolean recompute(java.lang.Integer)> (SMS_MMS)
<android.app.AlarmManager$AlarmClockInfo: android.app.PendingIntent getShowIntent()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()> (SMS_MMS)
<android.os.health.HealthKeys$SortedIntArray: int[] getArray()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.view.accessibility.IAccessibilityEmbeddedConnection getConnection()> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryUnknownRss()> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: float getLineAscent(int)> (SMS_MMS)
<android.content.pm.PackageManager$PackageInfoQuery: int hashCode()> (SMS_MMS)
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int getChangeMask()> (SMS_MMS)
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.Context)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1100()> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: long getItemId(int)> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getAlpha()> (SMS_MMS)
<com.android.internal.view.AppearanceRegion: int getAppearance()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: long getItemId(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataNetworkType(java.lang.String,java.lang.String)> (SMS_MMS)
<android.renderscript.Allocation: android.renderscript.Element getElement()> (SMS_MMS)
<android.view.WindowInsets: int getSystemWindowInsetLeft()> (SMS_MMS)
<android.graphics.Bitmap: int getByteCount()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getActiveAdmins(int)> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalSize(int,int)> (SMS_MMS)
<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()> (SMS_MMS)
<android.hardware.HardwareBuffer: int getFormat()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GeocoderParams: java.lang.String getClientPackage()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvInputInfo: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.List getActiveSessionsForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataSystemDeDirectory(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean iccCloseLogicalChannel(int,int)> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isInteractive()> (SMS_MMS)
<android.hardware.Sensor: int getHighestDirectReportRateLevel()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createUserWithThrow(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()> (SMS_MMS)
<android.content.UndoManager$UndoState: int getCommitId()> (SMS_MMS)
<android.content.IClipboard$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getForegroundServiceType(android.content.ComponentName,android.os.IBinder)> (SMS_MMS)
<android.net.NetworkCapabilities: int hashCode()> (SMS_MMS)
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.net.Uri)> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroup: int[] getLegacyStreamTypes()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: boolean isFilterBitmap()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getResizeMode()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isSubscriptionEnabled(int)> (SMS_MMS)
<android.text.PrecomputedText: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.TextView: java.lang.String getPrivateImeOptions()> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)> (SMS_MMS)
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.GLThreadManager access$502(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.camera2.legacy.GLThreadManager)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isKeyguardLocked()> (SMS_MMS)
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$800(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int getClientUid()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isImsRegistered(int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: java.util.List getEnrolledFingerprints(int,java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getRejectTime()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: boolean isSettingRestrictedForUser(java.lang.String,int,java.lang.String,int)> (SMS_MMS)
<android.content.pm.split.SplitAssetDependencyLoader: android.content.res.AssetManager getBaseAssetManager()> (SMS_MMS)
<android.view.KeyEvent: long getDownTime()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getSubscriptionSpecificCarrierId(int)> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])> (SMS_MMS)
<android.telephony.CallForwardingInfo: int getReason()> (SMS_MMS)
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: int findStateDrawableIndex(int[])> (SMS_MMS)
<android.hardware.input.InputManager: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.view.VerifiedInputEvent: int getDeviceId()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getLinkedApps()> (SMS_MMS)
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()> (SMS_MMS)
<android.os.IServiceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IVold$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getRecognitionModes()> (SMS_MMS)
<android.content.IntentSender: android.os.IBinder getWhitelistToken()> (SMS_MMS)
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: int getNumberOfCameras(int)> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.ActionBarContainer$ActionBarBackgroundDrawable: int getOpacity()> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getChannelMasks()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List access$302(android.telephony.CarrierRestrictionRules,java.util.List)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IPinnedStackController$Default: int getDisplayRotation()> (SMS_MMS)
<android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest$Key,java.lang.Object)> (SMS_MMS)
<android.telecom.Logging.EventManager: java.util.Map access$100(android.telecom.Logging.EventManager)> (SMS_MMS)
<android.text.style.AccessibilityClickableSpan: int getSpanTypeId()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimCardState(int)> (SMS_MMS)
<android.location.ILocationManager$Default: int getGnssBatchSize(java.lang.String)> (SMS_MMS)
<android.telephony.DataFailCause$1: void <init>()> (SMS_MMS)
<android.view.SurfaceControlViewHost$SurfacePackage: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRestrictedAccountType()> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)> (SMS_MMS)
<android.hardware.lights.Light: int getType()> (SMS_MMS)
<android.database.CursorWrapper: boolean isLast()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: long getFreeBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener getDefaultImpl()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedAttribution: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextSelection: int getEntityCount()> (SMS_MMS)
<android.hardware.face.FaceManager$AuthenticationResult: android.hardware.biometrics.CryptoObject getCryptoObject()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.biometrics.CryptoObject: long getOpId()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: boolean isMultiProcessEnabled()> (SMS_MMS)
<android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.view.contentcapture.ViewNode: android.os.LocaleList getLocaleList()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViews$SetRemoteViewsAdapterList: int getActionTag()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo$1: void <init>()> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: int size()> (SMS_MMS)
<android.location.GnssReflectingPlane: double getLatitudeDegrees()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetStart(int)> (SMS_MMS)
<android.os.BaseBundle: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.view.ViewDebug$SoftwareCanvasProvider: android.graphics.Canvas getCanvas(android.view.View,int,int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)> (SMS_MMS)
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentity: java.lang.String getGlobalCellId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getDeviceOwnerOrganizationName()> (SMS_MMS)
<android.app.IAlarmListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.BackupManager: java.lang.String selectBackupTransport(java.lang.String)> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: android.os.Bundle getForeignLanguageExtra(android.view.textclassifier.TextClassification)> (SMS_MMS)
<android.net.ITestNetworkManager$Stub$Proxy: android.net.TestNetworkInterface createTapInterface()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.IpPrefix[] getLinkNetworks()> (SMS_MMS)
<android.media.IPlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK getDeviceStateCallback()> (SMS_MMS)
<android.app.ActionBar: int getHideOffset()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()> (SMS_MMS)
<android.telephony.ServiceState: int[] getCellBandwidths()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getForbiddenPlmns()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: boolean isInService()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.impl.CaptureCallback getCallback()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ResourcesImpl$ThemeImpl newThemeImpl()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.CaptivePortalData: long getExpiryTimeMillis()> (SMS_MMS)
<android.content.SyncStatusInfo: long getEventTime(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getCameraDisabled(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.location.Criteria: int getBearingAccuracy()> (SMS_MMS)
<android.telephony.SignalStrength: boolean equals(java.lang.Object)> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: int hashCode()> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)> (SMS_MMS)
<android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int getStart()> (SMS_MMS)
<com.android.internal.graphics.SfVsyncFrameCallbackProvider: long getFrameTime()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> (SMS_MMS)
<android.renderscript.Int2: int get(int)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getVisibility()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean getRcsProvisioningStatusForCapability(int,int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationCenterX(int)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailableDFSChannels()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$RecordSource: int toByteArray(boolean,byte[],int)> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getRecipientAddress()> (SMS_MMS)
<android.animation.AnimatorSet: long getStartDelay()> (SMS_MMS)
<android.location.ILocationListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.TypedArray: int getColor(int,int)> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebViewRenderProcess getWebViewRenderProcess()> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: java.util.Set getChangedKeys()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)> (SMS_MMS)
<android.media.MediaDrm$KeyStatus: byte[] getKeyId()> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getUserSysTimeReaderInstance()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()> (SMS_MMS)
<android.widget.CompoundButton: int getCompoundPaddingLeft()> (SMS_MMS)
<android.util.EventLog: int getTagCode(java.lang.String)> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getAllPhoneAccountHandles()> (SMS_MMS)
<android.hardware.display.WifiDisplaySessionInfo: int describeContents()> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$2: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.view.View$12: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneTypeForSlot(int)> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub: android.app.IAlarmCompleteListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.StaticLayout: int getHeight(boolean)> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()> (SMS_MMS)
<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()> (SMS_MMS)
<android.content.Context: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.ApkAssets[] getApkAssets()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.jar.StrictJarFile: java.security.cert.Certificate[] getCertificates(java.util.zip.ZipEntry)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle$MarshalerMeteringRectangle: int getNativeSize()> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableSoundTrigger()> (SMS_MMS)
<android.net.wifi.nl80211.RadioChainInfo: int getLevelDbm()> (SMS_MMS)
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()> (SMS_MMS)
<android.widget.SearchView: java.lang.CharSequence getQuery()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub: android.app.job.IJobScheduler getDefaultImpl()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.os.UserHandle getUserForAncestralSerialNumber(long)> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)> (SMS_MMS)
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)> (SMS_MMS)
<android.content.res.Resources: int getInteger(int)> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: java.lang.String getFontVariationSettings()> (SMS_MMS)
<android.telephony.ServiceState: boolean getVoiceRoaming()> (SMS_MMS)
<android.app.Notification$Builder: int access$4100(android.app.Notification$Builder)> (SMS_MMS)
<android.util.Half: int hashCode()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: int getPhysicalAddress()> (SMS_MMS)
<android.net.NetworkPolicy: int hashCode()> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingLeft()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()> (SMS_MMS)
<android.media.AudioManager: android.media.AudioManager$FocusRequestInfo access$300(android.media.AudioManager,java.lang.String)> (SMS_MMS)
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)> (SMS_MMS)
<android.graphics.Paint: float getTextScaleX()> (SMS_MMS)
<com.android.internal.util.SyncResultReceiver: int getIntResult()> (SMS_MMS)
<android.text.Layout: float getPrimaryHorizontal(int,boolean)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfileCalendarPackages(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getMaxLearnedBatteryCapacity()> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo: int getNetworkType()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getCallProfile()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: byte[] getMetadataByPath(int,java.lang.String)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: android.content.pm.ParceledListSlice getAllJobSnapshots()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int getRequestRes()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: float getSpectrumCenterFrequency()> (SMS_MMS)
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getAlpha()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: boolean isUserUnlocked(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()> (SMS_MMS)
<android.renderscript.RenderScript: java.lang.String getCachePath()> (SMS_MMS)
<android.media.MediaDescription: android.net.Uri getMediaUri()> (SMS_MMS)
<android.view.InsetsAnimationThread: android.os.Handler getHandler()> (SMS_MMS)
<android.app.Notification$MessagingStyle: java.lang.CharSequence getHeadsUpStatusBarText()> (SMS_MMS)
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()> (SMS_MMS)
<com.android.net.IProxyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkSelectionMode(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int getBackgroundRequestDetailResourceId()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readLine()> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult: int getStatus()> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.CellInfoLte: int hashCode()> (SMS_MMS)
<android.content.pm.ChangedPackages: java.util.List getPackageNames()> (SMS_MMS)
<android.view.View: int getScrollBarStyle()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeInfo[] listUIChanges()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()> (SMS_MMS)
<com.android.internal.location.ProviderProperties: int describeContents()> (SMS_MMS)
<android.net.RssiCurve: int hashCode()> (SMS_MMS)
<android.location.GnssClock: java.lang.String getReferenceCodeTypeForIsb()> (SMS_MMS)
<android.graphics.RenderNode: float getPivotY()> (SMS_MMS)
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()> (SMS_MMS)
<android.location.ILocationManager$Default: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.shapes.RectShape: int hashCode()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getPhoneOnCount(int)> (SMS_MMS)
<android.telephony.TelephonyManager: void setNetworkSelectionModeAutomatic()> (SMS_MMS)
<android.view.WindowManagerGlobal: java.util.ArrayList getWindowViews()> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.net.Network: int describeContents()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)> (SMS_MMS)
<android.app.prediction.AppTarget: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int getVolumeGroupId()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getValidOutputFormatsForInput(int)> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerTxDurationMillis()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getTag()> (SMS_MMS)
<android.telephony.UiccSlotInfo: int getLogicalSlotIdx()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()> (SMS_MMS)
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.view.View: int getNextFocusUpId()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.lang.String getUserAccount(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionManager: android.net.Uri getUriForSubscriptionId(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetProfileCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable6gChannels()> (SMS_MMS)
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean,int)> (SMS_MMS)
<android.app.IAppTask$Stub: android.app.IAppTask getDefaultImpl()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: java.util.List getEnums(int)> (SMS_MMS)
<android.media.MediaFormat$FilteredMappedKeySet$KeyIterator: java.lang.Object next()> (SMS_MMS)
<android.view.ViewRootImpl$SyntheticInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean needsOtaServiceProvisioning()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getNcpVersion()> (SMS_MMS)
<android.text.PrecomputedText$Params: int hashCode()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int access$100(android.os.Parcel)> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getLongLabelResourceId()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: byte[] get(java.lang.String,int)> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsResponse: int describeContents()> (SMS_MMS)
<android.net.NetworkScorerAppData: java.lang.String getRecommendationServicePackageName()> (SMS_MMS)
<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()> (SMS_MMS)
<android.app.Fragment: java.lang.String getTag()> (SMS_MMS)
<android.telephony.TelephonyManager: int getPhoneCount()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getId()> (SMS_MMS)
<com.android.internal.os.IShellCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.FrameLayout: int getPaddingLeftWithForeground()> (SMS_MMS)
<android.os.Environment: java.io.File getDataSystemCeDirectory(int)> (SMS_MMS)
<android.location.Address: java.lang.String getPremises()> (SMS_MMS)
<android.telecom.Logging.Session: android.telecom.Logging.Session$Info getInfo()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.VolumeRecord: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isHdmiSystemAudioSupported()> (SMS_MMS)
<android.location.GpsMeasurement: double getPseudorangeUncertaintyInMeters()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getDeviceOwnerComponentOnCallingUser()> (SMS_MMS)
<android.os.IVoldTaskListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.Log: android.telecom.Logging.SessionManager getSessionManager()> (SMS_MMS)
<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()> (SMS_MMS)
<android.os.Messenger: android.os.IBinder getBinder()> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os._$$Lambda$ThreadLocalWorkSource$IP9vRFCDG5YwbWbXAEGHH52B9IE: java.lang.Object get()> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()> (SMS_MMS)
<android.widget.Magnifier: int getDefaultHorizontalSourceToMagnifierOffset()> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int getKeyframeIdAt(int)> (SMS_MMS)
<android.os.PowerWhitelistManager: boolean isWhitelisted(java.lang.String,boolean)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: int getTextSelectionEnd()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub: android.app.admin.StartInstallingUpdateCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int length()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int)> (SMS_MMS)
<android.net.NetworkScorerAppData: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getRunningAppProcesses()> (SMS_MMS)
<android.os.Debug: java.util.Map getRuntimeStats()> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int describeContents()> (SMS_MMS)
<android.print.PrintManager: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId)> (SMS_MMS)
<android.content.pm.IShortcutService$Default: byte[] getBackupPayload(int)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String getCodePath()> (SMS_MMS)
<android.hardware.camera2.CameraManager: boolean isConcurrentSessionConfigurationSupported(java.util.Map)> (SMS_MMS)
<android.view.DisplayCutout$ParcelableWrapper: int describeContents()> (SMS_MMS)
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceName(java.lang.Class)> (SMS_MMS)
<android.view.autofill.AutofillId: long getVirtualChildLongId()> (SMS_MMS)
<android.webkit.WebView: java.lang.String getTouchIconUrl()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: int[] getFrequenciesMhz()> (SMS_MMS)
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.graphics.Rect getTaskBounds(int)> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getWidth()> (SMS_MMS)
<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.telephony.CallQuality$1: void <init>()> (SMS_MMS)
<android.content.res.Resources: android.graphics.Typeface getFont(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getSimCallManagerForUser(int)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: int getStorageCryptType()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getOpsForPackage(int,java.lang.String,int[])> (SMS_MMS)
<android.text.FontConfig$Alias: int getWeight()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub: android.content.integrity.IAppIntegrityManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.View: int getPaddingBottom()> (SMS_MMS)
<android.os.WorkSource$WorkChain: int hashCode()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: int lambda$dumpDatabaseDirectory$0(java.io.File,java.io.File)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int listUidsOfAuthBoundKeys(java.util.List)> (SMS_MMS)
<android.content.res.TypedArray: int getIndexCount()> (SMS_MMS)
<android.text.style.AbsoluteSizeSpan: int getSize()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getVolume()> (SMS_MMS)
<android.hardware.input.InputDeviceIdentifier: int getVendorId()> (SMS_MMS)
<android.view.KeyEvent: int getKeyCode()> (SMS_MMS)
<android.content.Intent: android.content.ClipData getClipData()> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getPhoneAccountsForPackage()> (SMS_MMS)
<android.media.AudioManager: int resetAudioPortGeneration()> (SMS_MMS)
<android.os.VibrationEffect$Composition$PrimitiveEffect: int hashCode()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: android.app.trust.IStrongAuthTracker$Stub getStub()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isCapable(int,int)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getCc()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)> (SMS_MMS)
<android.hardware.location.NanoApp: java.lang.String getName()> (SMS_MMS)
<android.app.IActivityController$Stub$Proxy: int systemNotResponding(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()> (SMS_MMS)
<com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()> (SMS_MMS)
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> android.permission.READ_SYNC_STATS (SMS_MMS)
<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()> (SMS_MMS)
<android.print.IWriteResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telecom.Logging.Session$Info: int describeContents()> (SMS_MMS)
<android.security.net.config.NetworkSecurityTrustManager: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.TextView: int computeVerticalScrollExtent()> (SMS_MMS)
<android.os.SimpleClock: java.time.ZoneId getZone()> (SMS_MMS)
<android.net.nsd.NsdManager: android.util.SparseArray access$500(android.net.nsd.NsdManager)> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: com.android.internal.os.PowerProfile getPowerProfile()> (SMS_MMS)
<android.location.GnssAntennaInfo$SphericalCorrections: double getDeltaTheta()> (SMS_MMS)
<android.net.IpSecConfig: android.net.IpSecAlgorithm getAuthenticatedEncryption()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getWrappedApplicationKeys()> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$YBVyClIRQJdWREquhRoX1Ha8_yw: int callMethod(com.android.internal.telephony.ISub)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)> (SMS_MMS)
<android.app.BackStackRecord: boolean isPostponed()> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.Matrix4f: float get(int,int)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayCategory()> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.app.contentsuggestions.IContentSuggestionsManager getDefaultImpl()> (SMS_MMS)
<android.content.Intent: java.lang.String getPackage()> (SMS_MMS)
<android.graphics.HardwareRendererObserver: long getNativeInstance()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getInstallReason()> (SMS_MMS)
<android.view.DisplayCutout$ParcelableWrapper: int hashCode()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedEcdsaSignatureDigests()> (SMS_MMS)
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)> (SMS_MMS)
<android.hardware.hdmi.HdmiUtils: int getLocalPortFromPhysicalAddress(int,int)> (SMS_MMS)
<android.widget.RadioGroup: int getIndexWithinVisibleButtons(android.view.View)> (SMS_MMS)
<android.os.connectivity.GpsBatteryStats: long getEnergyConsumedMaMs()> (SMS_MMS)
<android.animation.Animator$AnimatorConstantState: android.animation.Animator newInstance()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanBackgroundTime(long)> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.view.InputDevice getInputDevice(int)> (SMS_MMS)
<android.telephony.SubscriptionPlan: android.util.RecurrenceRule getCycleRule()> (SMS_MMS)
<android.os.storage.StorageManager: boolean isEncrypted(java.io.File)> (SMS_MMS)
<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> (SMS_MMS)
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier lambda$new$0$TextClassificationManager(android.view.textclassifier.TextClassificationContext)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: long getUserCreationTime(int)> (SMS_MMS)
<android.app.BackStackRecord: int commitAllowingStateLoss()> (SMS_MMS)
<android.text.style.ReplacementSpan: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.gsi.AvbPublicKey: int describeContents()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IMediaHTTPService$Stub$Proxy: android.media.IMediaHTTPConnection makeHTTPConnection()> (SMS_MMS)
<android.media.WebVttRenderingWidget$RegionLayout: android.media.TextTrackRegion getRegion()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean canConnectTo5GInDsdsMode()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: int addPowerSaveWhitelistApps(java.util.List)> (SMS_MMS)
<android.widget.SearchView: java.lang.CharSequence getQueryHint()> (SMS_MMS)
<android.util.apk.ZipUtils: long getZipEocdCentralDirectorySizeBytes(java.nio.ByteBuffer)> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()> (SMS_MMS)
<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getCsiRsrq()> (SMS_MMS)
<android.app.IProcessObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.UiccAccessRule$1: android.telephony.UiccAccessRule[] newArray(int)> (SMS_MMS)
<android.content.Context: android.os.UserHandle getUser()> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: long getDuration()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub: android.content.om.IOverlayManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getParcelVersion()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getComputedPower()> (SMS_MMS)
<android.view.ScrollCaptureSession: android.view.Surface getSurface()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: int getIconResId()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothUnoptimizedScanBackgroundTimer()> (SMS_MMS)
<android.hardware.SystemSensorManager: boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor)> (SMS_MMS)
<android.app.TaskStackBuilder: int getIntentCount()> (SMS_MMS)
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: android.hardware.camera2.impl.CameraMetadataNative getCameraMetadata()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.math.BigInteger getCertificateSerialNumber()> (SMS_MMS)
<android.media.AudioMetadata$BaseMap: java.lang.Object get(android.media.AudioMetadata$Key)> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: int describeContents()> (SMS_MMS)
<com.google.android.mms.ContentType: java.util.ArrayList getAudioTypes()> (SMS_MMS)
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)> (SMS_MMS)
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)> (SMS_MMS)
<android.service.oemlock.OemLockManager: boolean isDeviceOemUnlocked()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getManualNetworkSelectionPlmn()> (SMS_MMS)
<com.android.internal.telephony.IOns$Default: boolean setEnable(boolean,java.lang.String)> (SMS_MMS)
<android.content.pm.StringParceledListSlice: java.util.List getList()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributePrefix(int)> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.KeyframeSet: java.lang.Class getType()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ServiceState getServiceState()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()> (SMS_MMS)
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: boolean getBlockUninstallForUser(java.lang.String,int)> (SMS_MMS)
<android.text.AutoGrowArray$IntArray: int get(int)> (SMS_MMS)
<android.os.IUserManager$Default: int getUserBadgeLabelResId(int)> (SMS_MMS)
<android.content.pm.ActivityInfo: int describeContents()> (SMS_MMS)
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int getAccessibilityWindowId(android.os.IBinder)> (SMS_MMS)
<android.hardware.biometrics.CryptoObject: javax.crypto.Mac getMac()> (SMS_MMS)
<android.graphics.text.LineBreaker: int access$200(long)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isUninstallInQueue(java.lang.String)> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.PackageInfo access$100(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.database.SortCursor: int getInt(int)> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: int describeContents()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForUser(int,java.lang.String,long,long)> (SMS_MMS)
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: boolean isClosed()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: float getElevation()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.GLThreadManager access$500(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.view.InputDevice: android.view.InputDevice getDevice(int)> (SMS_MMS)
<android.app.ActivityManager: java.util.List getRunningTasks(int)> (SMS_MMS)
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)> (SMS_MMS)
<android.widget.FrameLayout: boolean getMeasureAllChildren()> (SMS_MMS)
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: java.util.List getInlinePresentationSpecs()> (SMS_MMS)
<android.content.pm.IShortcutService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Dialog: android.view.SearchEvent getSearchEvent()> (SMS_MMS)
<android.widget.ToastPresenter: android.os.IBinder getToken()> (SMS_MMS)
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()> (SMS_MMS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int getGlobalAudioRestriction()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getId()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)> (SMS_MMS)
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceInfo[] getDevices()> (SMS_MMS)
<android.media.IAudioService$Default: java.util.List getActiveRecordingConfigurations()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentityTdscdma copy()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getMaxNumPictureInPictureActions(android.os.IBinder)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.SyncInfo: int describeContents()> (SMS_MMS)
<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getDeleteIntent()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.Adjustment: java.lang.CharSequence getExplanation()> (SMS_MMS)
<android.widget.ToastPresenter: android.view.WindowManager$LayoutParams getLayoutParams()> (SMS_MMS)
<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.view.KeyEvent: int getModifierMetaStateMask()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> (SMS_MMS)
<android.app.ActivityManager: int getMaxNumPictureInPictureActions()> (SMS_MMS)
<android.media.MediaPlayer$TrackInfo: android.media.MediaFormat getFormat()> (SMS_MMS)
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getPreferredDataSubscriptionId()> (SMS_MMS)
<android.hardware.ICameraClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitCodePaths()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isDeviceIdleMode()> (SMS_MMS)
<android.transition.ChangeTransform$1: float[] get(android.transition.ChangeTransform$PathAnimatorMatrix)> (SMS_MMS)
<android.hardware.radio.ProgramSelector$Identifier: int describeContents()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AutomaticZenRule: android.net.Uri getConditionId()> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: boolean isInCall()> (SMS_MMS)
<android.app.ApplicationPackageManager$HasSystemFeatureQuery: int hashCode()> (SMS_MMS)
<android.accounts.AuthenticatorDescription: int hashCode()> (SMS_MMS)
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> (SMS_MMS)
<android.hardware.radio.V1_5.OptionalCsgInfo$hidl_discriminator: java.lang.String getName(byte)> (SMS_MMS)
<android.permission.PermissionManager: int access$200(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.os.storage.VolumeInfo: android.content.Intent buildBrowseIntentForUser(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getActiveSubInfoCountMax()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float getMaxValue(int)> (SMS_MMS)
<android.media.midi.MidiDeviceInfo$PortInfo: int getType()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getVersion()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int getModelState(android.os.ParcelUuid)> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getContentCaptureServicePackageName()> (SMS_MMS)
<android.widget.TextView$CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)> (SMS_MMS)
<android.widget.TextView: boolean getDefaultEditable()> (SMS_MMS)
<android.os.UserHandle: int getIdentifier()> (SMS_MMS)
<android.os.Environment: java.io.File getUserConfigDirectory(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> (SMS_MMS)
<android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)> (SMS_MMS)
<android.os.ServiceManager: java.lang.String[] listServices()> (SMS_MMS)
<android.content.pm.PackageParser$Package: int describeContents()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.CameraCaptureSession: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub: android.app.ITransientNotificationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledOverscrollDistance()> (SMS_MMS)
<android.transition.Transition: android.transition.Transition clone()> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)> (SMS_MMS)
<android.text.SpannedString: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: int getPartIndex(com.google.android.mms.pdu.PduPart)> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String,int)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: android.hardware.display.Time getNightDisplayCustomEndTime()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric()> (SMS_MMS)
<android.media.AudioPlaybackCaptureConfiguration: int[] getExcludeUsages()> (SMS_MMS)
<android.os.StatFs: long getTotalBytes()> (SMS_MMS)
<android.security.KeyStore: int attestDeviceIds(android.security.keymaster.KeymasterArguments,android.security.keymaster.KeymasterCertificateChain)> (SMS_MMS)
<android.database.sqlite.SQLiteConnection: int getConnectionId()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List access$200(android.telephony.CarrierRestrictionRules)> (SMS_MMS)
<android.view.ViewRootImpl: int getLayoutDirection()> (SMS_MMS)
<android.os.IMessenger$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.CharSequence getBackgroundPermissionOptionLabel()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> (SMS_MMS)
<android.os.BatteryManager: boolean isCharging()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.printservice.recommendation.IRecommendationsChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)> (SMS_MMS)
<android.net.ConnectivityManager: int getConnectionOwnerUid(int,java.net.InetSocketAddress,java.net.InetSocketAddress)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.Intent: java.lang.String getLaunchToken()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getAllSubInfoCount(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.Credentials: int getUid()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: java.lang.Object getTargetByName(java.lang.String)> (SMS_MMS)
<android.util.apk.VerityBuilder: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory,android.util.apk.SignatureInfo)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getClassName()> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: boolean isStateful()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder getLeashedParent()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)> (SMS_MMS)
<android.os.VibrationEffect: android.os.VibrationEffect get(int,boolean)> (SMS_MMS)
<android.telephony.SmsMessage: int getProtocolIdentifier()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextClassificationConstants: java.lang.String getTextClassifierServicePackageOverride()> (SMS_MMS)
<android.widget.TextView: int getJustificationMode()> (SMS_MMS)
<android.app.ActivityManager: boolean isActivityStartAllowedOnDisplay(android.content.Context,int,android.content.Intent)> (SMS_MMS)
<android.telephony.PinResult: int getType()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getSharedSystemSharedLibraryPackageName()> (SMS_MMS)
<android.app.job.JobParameters: java.lang.String getDebugStopReason()> (SMS_MMS)
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()> (SMS_MMS)
<android.app.ContextImpl$ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub: android.content.pm.IPackageInstallerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback access$000(android.hardware.location.ContextHubManager)> (SMS_MMS)
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierPrivilegeStatus(int)> (SMS_MMS)
<android.os.UserManager: java.util.List getUserRestrictionSources(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.widget.ListView: int getHeaderViewsCount()> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver getDefaultImpl()> (SMS_MMS)
<android.security.KeyStore: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)> (SMS_MMS)
<android.print.PrintAttributes$Margins: int getRightMils()> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Default: long getRemainingLeaseQuotaBytes(java.lang.String)> (SMS_MMS)
<android.graphics.ColorSpace: android.graphics.ColorSpace get(int)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: boolean isAnalogForced()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledSingleShiftTables()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int access$000()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()> (SMS_MMS)
<android.app.Fragment: int getId()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: long[] getUsesStaticLibrariesVersions()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: java.util.Collection getRelatedContent()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getType()> (SMS_MMS)
<android.media.AudioManager: int listAudioDevicePorts(java.util.ArrayList)> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.radio.Announcement: android.hardware.radio.ProgramSelector getSelector()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.RenderScript: long nFontCreateFromAssetStream(java.lang.String,float,int,long)> (SMS_MMS)
<android.media.tv.TvTrackInfo: java.lang.String getId()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub: android.content.IRestrictionsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.Log$ImmediateLogWriter: int getWritten()> (SMS_MMS)
<android.app.JobSchedulerImpl: java.util.List getAllJobSnapshots()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isPotentialEmergencyNumber(java.lang.String)> (SMS_MMS)
<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getWritePermission()> (SMS_MMS)
<android.net.TelephonyNetworkSpecifier: int describeContents()> (SMS_MMS)
<android.os.storage.VolumeInfo: int getType()> (SMS_MMS)
<android.view.InputChannel: android.os.IBinder getToken()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionManager: int lambda$addSubscriptionsIntoGroup$8(java.lang.Integer)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCOLP()> (SMS_MMS)
<android.widget.RemoteViewsAdapter: int getItemViewType(int)> (SMS_MMS)
<android.telephony.CallAttributes: int describeContents()> (SMS_MMS)
<android.app.Notification: long getTimeoutAfter()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getMode()> (SMS_MMS)
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(int[],int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,int)> (SMS_MMS)
<android.hardware.ICameraClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityCdma$1: android.telephony.CellIdentityCdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration$Builder: int getMaxCorrectionsByPackageName()> (SMS_MMS)
<android.app.IAlarmManager$Stub$Proxy: long getNextWakeFromIdleTime()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$1: int compare(com.android.internal.graphics.palette.ColorCutQuantizer$Vbox,com.android.internal.graphics.palette.ColorCutQuantizer$Vbox)> (SMS_MMS)
<com.android.internal.content.om.OverlayConfigParser$ParsingContext: int access$210(com.android.internal.content.om.OverlayConfigParser$ParsingContext)> (SMS_MMS)
<android.location.Address: java.lang.String getLocality()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: long getDurationSinceSessionStart()> (SMS_MMS)
<android.content.res.Resources: float getFloat(int)> (SMS_MMS)
<android.view.RemoteAnimationDefinition: int describeContents()> (SMS_MMS)
<android.webkit.TracingController: android.webkit.TracingController getInstance()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Fragment: android.os.Bundle getArguments()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.util.Map getScreenOffRpmStats()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.CharSequence getName()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: int getConfigInt(int)> (SMS_MMS)
<android.view.Display: java.lang.String getUniqueId()> (SMS_MMS)
<android.os.Debug: int getGlobalAllocSize()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: boolean isSubscriptionEnabled(int)> (SMS_MMS)
<android.media.AudioSystem: int getNumStreamTypes()> (SMS_MMS)
<android.telephony.TelephonyManager: void silenceRinger()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$6: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: com.android.internal.appwidget.IAppWidgetHost asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.app.IActivityController$Default: int appNotResponding(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.net.NetworkPolicy: android.net.NetworkPolicy getNetworkPolicyFromBackup(java.io.DataInputStream)> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub: android.app.IRequestFinishCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()> (SMS_MMS)
<android.media.tv.TvTrackInfo: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.media.AudioManager: int getOutputLatency(int)> (SMS_MMS)
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createNonrecurring(java.time.ZonedDateTime,java.time.ZonedDateTime)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitNames()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int getHostDisplayId()> (SMS_MMS)
<android.content.res.Resources: java.lang.String[] getStringArray(int)> (SMS_MMS)
<android.hardware.radio.RadioTuner: android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList$Filter)> (SMS_MMS)
<android.app.slice.SliceManager: java.util.List getPinnedSlices()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: void updateGlobalCellId()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayTargetName()> (SMS_MMS)
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,android.media.VolumeShaper$Configuration)> (SMS_MMS)
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)> (SMS_MMS)
<android.hardware.radio.ITuner$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintServiceRecommendations(int)> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: int getClientPid(java.lang.String)> (SMS_MMS)
<android.os.Binder: long access$000()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer getDefaultImpl()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: int describeContents()> (SMS_MMS)
<android.app.backup.BackupManager: boolean isBackupServiceActive(android.os.UserHandle)> (SMS_MMS)
<android.content.LocusId: java.lang.String getId()> (SMS_MMS)
<android.widget.RemoteViews$RemoteViewsContextWrapper: android.content.res.Resources$Theme getTheme()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int createStream(android.hardware.camera2.params.OutputConfiguration)> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.printservice.recommendation.RecommendationInfo: java.lang.CharSequence getPackageName()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int getDetectionServiceOperationsTimeout()> (SMS_MMS)
<android.net.TrafficStats: long getUidTcpRxSegments(int)> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorAlpha()> (SMS_MMS)
<com.android.internal.util.BitwiseInputStream: int available()> (SMS_MMS)
<android.widget.inline.InlinePresentationSpec: android.util.Size getMinSize()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.PhraseRecognitionEvent: int describeContents()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSessionId getContentCaptureSessionId()> (SMS_MMS)
<android.media.Image: long getNativeContext()> (SMS_MMS)
<android.graphics.Bitmap: int getPixel(int,int)> (SMS_MMS)
<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()> (SMS_MMS)
<android.os.storage.StorageManager: java.io.File translateAppToSystem(java.io.File,int,int)> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.inputmethod.CancellationGroup$Completable$Values: java.lang.Object getValue()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: java.lang.String getCallingPackageName()> (SMS_MMS)
<android.view.MotionEvent: float getRawX()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: int getRank()> (SMS_MMS)
<android.content.pm.Signature: int hashCode()> (SMS_MMS)
<android.util.MemoryIntArray: int get(int)> (SMS_MMS)
<android.view.WindowInsetsAnimation: long getDurationMillis()> (SMS_MMS)
<android.text.style.AlignmentSpan$Standard: int getSpanTypeIdInternal()> (SMS_MMS)
<android.app.servertransaction.ClientTransactionItem: int getPostExecutionState()> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.math.BigInteger getSerialNumber()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$MiscElt: int hashCode()> (SMS_MMS)
<android.media.AudioManager: boolean isMusicActiveRemotely()> (SMS_MMS)
<android.text.TextDirectionHeuristics: int access$100(int)> (SMS_MMS)
<android.view.IWindowManager$Default: int getInitialDisplayDensity(int)> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int getClientAudioSessionId()> (SMS_MMS)
<android.view.SurfaceControl: int getHeight()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)> (SMS_MMS)
<android.net.LinkProperties: java.util.List getAllRoutes()> (SMS_MMS)
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()> (SMS_MMS)
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByUser()> (SMS_MMS)
<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()> (SMS_MMS)
<android.app.job.JobInfo: long getMinLatencyMillis()> (SMS_MMS)
<android.widget.OverScroller: int getCurrY()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int[] getSlotsMapping()> (SMS_MMS)
<android.os.IProgressListener$Stub: android.os.IProgressListener getDefaultImpl()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.PrintWriter getErrPrintWriter()> (SMS_MMS)
<android.animation.AnimatorSet$3: int compare(android.animation.AnimatorSet$AnimationEvent,android.animation.AnimatorSet$AnimationEvent)> (SMS_MMS)
<android.widget.ListPopupWindow: int getAnimationStyle()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: int getCredentialType(int)> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getAutoRevokeExemptionRequestedPackages(int)> (SMS_MMS)
<android.view.IWindowManager$Default: android.graphics.Region getCurrentImeTouchRegion()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getSelfManagedPhoneAccounts(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.ISearchManager$Default: java.util.List getSearchablesInGlobalSearch()> (SMS_MMS)
<android.widget.AbsListView: int getLeftPaddingOffset()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getCachedSizeKb()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean$MarshalerBoolean: int getNativeSize()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList getMixes()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getStatus()> (SMS_MMS)
<android.net.TrafficStats: long getUidUdpRxPackets(int)> (SMS_MMS)
<android.view.SurfaceControl: android.view.SurfaceControl$DesiredDisplayConfigSpecs getDesiredDisplayConfigSpecs(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)> (SMS_MMS)
<android.text.TextDirectionHeuristics$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)> (SMS_MMS)
<android.widget.TextView$Marquee: float getMaxFadeScroll()> (SMS_MMS)
<android.view.ViewConfiguration: int getScrollDefaultDelay()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getVendorId()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String[] getTetheredIfaces()> (SMS_MMS)
<android.print.PageRange: int getSize()> (SMS_MMS)
<android.app.job.JobInfo: long getMinFlexMillis()> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timedetector.ManualTimeSuggestion: int describeContents()> (SMS_MMS)
<android.view.animation.Animation: int getRepeatCount()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: int describeContents()> (SMS_MMS)
<android.os.IUserManager$Stub: android.os.IUserManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)> (SMS_MMS)
<android.app.ContextImpl: android.content.res.AssetManager getAssets()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isDataEnabled(int)> (SMS_MMS)
<android.text.HtmlToSpannedConverter$Heading: int access$1300(android.text.HtmlToSpannedConverter$Heading)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: byte[] getTransactionId()> (SMS_MMS)
<android.graphics.ColorSpace$Lab: float getMinValue(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long forceNetworkLogs()> (SMS_MMS)
<com.android.internal.telephony.SmsAddress: boolean couldBeEmailGateway()> (SMS_MMS)
<android.content.res.Resources: android.util.LongSparseArray getPreloadedDrawables()> (SMS_MMS)
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: java.lang.String getName()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub: com.android.internal.compat.IOverrideValidator asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.security.Principal getIssuerDN()> (SMS_MMS)
<android.media.session.MediaSessionLegacyHelper: boolean isGlobalPriorityActive()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isDeviceOemUnlocked()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: int getUserSecretType()> (SMS_MMS)
<android.hardware.Camera$Parameters: int getJpegQuality()> (SMS_MMS)
<android.media.IMediaRouterService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioSystem: java.lang.String getDeviceName(int)> (SMS_MMS)
<android.app.contentsuggestions.ClassificationsRequest: java.util.List getSelections()> (SMS_MMS)
<android.view.IWindowManager$Default: int getNavBarPosition(int)> (SMS_MMS)
<android.text.style.ScaleXSpan: int describeContents()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.security.PublicKey getPublicKey()> (SMS_MMS)
<android.location.Address: java.util.Locale getLocale()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: int detachMixes(java.util.List)> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList(int,int)> (SMS_MMS)
<android.app.Notification$Builder: int access$3800(android.app.Notification$Builder)> (SMS_MMS)
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] preceding(int)> (SMS_MMS)
<android.os.Debug: int getGlobalClassInitCount()> (SMS_MMS)
<android.widget.SearchView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.widget.AdapterView: long getSelectedItemId()> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.media.midi.MidiDeviceInfo getDeviceInfo()> (SMS_MMS)
<android.widget.CursorAdapter: android.content.res.Resources$Theme getDropDownViewTheme()> (SMS_MMS)
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: byte[] getEncoded()> (SMS_MMS)
<android.media.SubtitleTrack$CueList$1: java.util.Iterator iterator()> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.text.method.DateKeyListener: int getInputType()> (SMS_MMS)
<android.webkit.WebViewProviderResponse: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.lang.String getEndPlatformVersion()> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getContentIntentAvailableOffline()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledApplications(int,int)> (SMS_MMS)
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getMagnifierHandleTrigger()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getRecentStorageVolumes()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String)> (SMS_MMS)
<android.widget.RtlSpacingHelper: int getLeft()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()> (SMS_MMS)
<android.media.IAudioService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)> (SMS_MMS)
<android.hardware.hdmi.HdmiHotplugEvent: int getPort()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getMoveStatus(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Default: android.telephony.euicc.EuiccInfo getEuiccInfo(int)> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannel getNotificationChannelForPackage(java.lang.String,int,java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId,int)> (SMS_MMS)
<android.media.IMediaRouterService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager: int permissionToOpCode(java.lang.String)> (SMS_MMS)
<android.app.timezonedetector.ManualTimeZoneSuggestion: int hashCode()> (SMS_MMS)
<android.app.NotificationManager: int getRuleInstanceCount(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ContextWrapper: android.view.DisplayAdjustments getDisplayAdjustments(int)> (SMS_MMS)
<com.android.internal.os.KernelSingleUidTimeReader: long[] getDeltaLocked(long[],long[])> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: long getAllocatableBytes(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getDefaultBrowserPackageNameAsUser(int)> (SMS_MMS)
<android.graphics.fonts.FontStyle: int getWeight()> (SMS_MMS)
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()> (SMS_MMS)
<android.hardware.camera2.utils.SubmitInfo: long getLastFrameNumber()> (SMS_MMS)
<android.view.animation.OvershootInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsNavigationMessage: byte getType()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: int getItemId()> (SMS_MMS)
<android.text.DynamicLayout: int getLineCount()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.LowpanInterface: java.lang.String getName()> (SMS_MMS)
<android.text.AutoGrowArray$IntArray: int size()> (SMS_MMS)
<android.content.ContextWrapper: java.util.concurrent.Executor getMainExecutor()> (SMS_MMS)
<android.content.BroadcastReceiver: boolean getAbortBroadcast()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: int access$100(android.widget.OverScroller$SplineOverScroller)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isConnected()> (SMS_MMS)
<android.animation.ValueAnimator: long getTotalDuration()> (SMS_MMS)
<android.app.SearchableInfo: int getSuggestThreshold()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getHiddenStateInsets()> (SMS_MMS)
<android.view.inputmethod.InputContentInfo: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.MediaCodec$MediaImage$MediaPlane: int getRowStride()> (SMS_MMS)
<android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.PersistableBundle getSeedAccountOptions()> (SMS_MMS)
<android.inputmethodservice._$$Lambda$InputMethodService$TZAfta6HEKUpxapSrZpy7Hhlwrw: java.lang.Object get()> (SMS_MMS)
<android.location.Location: float getVerticalAccuracyMeters()> (SMS_MMS)
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.String getName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataActivity()> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: java.lang.String getCallingPackageName()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: java.lang.String getCallId()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getPrimaryUser()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()> (SMS_MMS)
<android.hardware.face.FaceManager: int getMappedAcquiredInfo(int,int)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getKey()> (SMS_MMS)
<android.text.BoringLayout: int getLineStart(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel: int describeContents()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: long getSize()> (SMS_MMS)
<android.location.Address: java.lang.String getAddressLine(int)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub: android.media.IMediaHTTPConnection getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.InlineSuggestionsRequestInfo: int describeContents()> (SMS_MMS)
<android.content.pm.VersionedPackage: int describeContents()> (SMS_MMS)
<android.window.WindowContainerTransaction: java.util.List getHierarchyOps()> (SMS_MMS)
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)> (SMS_MMS)
<android.app.SearchableInfo: int getIconId()> (SMS_MMS)
<android.app.RemoteInputHistoryItem: java.lang.String getMimeType()> (SMS_MMS)
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()> (SMS_MMS)
<android.database.AbstractWindowedCursor: int getInt(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()> (SMS_MMS)
<android.app.ApplicationPackageManager$ResourceName: int hashCode()> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getHintAvoidBackgroundClipping()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCdmaEriIconMode(int)> (SMS_MMS)
<com.android.internal.app.AlertController: int access$1100(com.android.internal.app.AlertController)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub: android.security.IKeyChainAliasCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$11: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.util.EventLog$Event: java.lang.Object getData()> (SMS_MMS)
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$hxk87AxkClLRhRgGak0NUvJOACM: float getInterpolation(float)> (SMS_MMS)
<android.security.IFileIntegrityService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.LoaderManagerImpl: android.app.FragmentHostCallback getFragmentHostCallback()> (SMS_MMS)
<android.net.IpSecConfig: int getEncapRemotePort()> (SMS_MMS)
<android.content.res.StringBlock: java.lang.CharSequence get(int)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.ImsException: int getCode()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreECPrivateKey: java.security.spec.ECParameterSpec getParams()> (SMS_MMS)
<android.security.net.config.SystemCertificateSource$NoPreloadHolder: android.security.net.config.SystemCertificateSource access$100()> (SMS_MMS)
<android.net.ITestNetworkManager$Stub: android.net.ITestNetworkManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.session.PlaybackState$CustomAction: java.lang.String getAction()> (SMS_MMS)
<android.net.IConnectivityManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()> (SMS_MMS)
<android.telephony.UiccCardInfo$1: android.telephony.UiccCardInfo[] newArray(int)> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaDrm: java.util.List getSupportedCryptoSchemes()> (SMS_MMS)
<android.graphics.Paint: float getStrikeThruPosition()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: int getSuppressedVisualEffects()> (SMS_MMS)
<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: boolean update()> (SMS_MMS)
<android.security.KeyStore: boolean isConfirmationPromptSupported()> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: java.util.List getAvailableSizes()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)> (SMS_MMS)
<android.media.MediaCodec$MediaImage: int getScalingMode()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: int getCapabilities()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToRFC3966(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()> (SMS_MMS)
<android.widget.ListView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.graphics.Matrix access$700(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,long,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl[],android.graphics.Point,android.view.SurfaceControl)> (SMS_MMS)
<android.media.projection.MediaProjectionInfo: int describeContents()> (SMS_MMS)
<android.widget.RemoteViews$BitmapCache: int getBitmapId(android.graphics.Bitmap)> (SMS_MMS)
<android.renderscript.Allocation: long getStride()> (SMS_MMS)
<android.view.View: android.graphics.Paint getDebugPaint()> (SMS_MMS)
<android.media.MediaRouter$RouteCategory: java.util.List getRoutes(java.util.List)> (SMS_MMS)
<android.app.PackageDeleteObserver: android.content.pm.IPackageDeleteObserver2 getBinder()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getScaleX()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getPcscfServers()> (SMS_MMS)
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: android.view.Surface getSurface()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanCredential getLowpanCredential()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int exist(java.lang.String,int)> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.os.Bundle getSuspendedPackageAppExtras()> (SMS_MMS)
<android.os.StrictMode$3: android.os.Handler initialValue()> (SMS_MMS)
<android.app.ResultInfo: int describeContents()> (SMS_MMS)
<android.view.View: float getY()> (SMS_MMS)
<android.media.Rating: int getRatingStyle()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getValuesPerSample()> (SMS_MMS)
<android.view.View: int[] getLocationOnScreen()> (SMS_MMS)
<android.content.res.AssetManager: int addOverlayPath(java.lang.String)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IStopUserCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Parcel: java.lang.String[] createString8Array()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getOperatorNumeric()> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentityWcdma: int hashCode()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int describeContents()> (SMS_MMS)
<android.os.ParcelFileDescriptor: int describeContents()> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int getClirInterrogationStatus()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.SurfaceControl: android.view.Display$HdrCapabilities getHdrCapabilities(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.os.ParcelFileDescriptor getLifeMonitor()> (SMS_MMS)
<android.telephony.CbGeoUtils$Circle: double getRadius()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService asInterface(android.os.IBinder)> (SMS_MMS)
<android.accessibilityservice.GestureDescription: int getDisplayId()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.TrafficStats: long getUidTcpRxBytes(int)> (SMS_MMS)
<android.text.FontConfig$Alias: java.lang.String getName()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int describeContents()> (SMS_MMS)
<android.telephony.CallAttributes: android.telephony.PreciseCallState getPreciseCallState()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherPrivate(int)> (SMS_MMS)
<android.view.View: android.graphics.Rect getClipBounds()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()> (SMS_MMS)
<android.animation.Animator: long getTotalDuration()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)> (SMS_MMS)
<android.app.ActivityManager$AppTask: android.app.ActivityManager$RecentTaskInfo getTaskInfo()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()> (SMS_MMS)
<android.hardware.ISerialManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int getPlayerState()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAffiliatedUser()> (SMS_MMS)
<android.print.PrintAttributes$Resolution: java.lang.String getId()> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$200(android.security.keystore.recovery.WrappedApplicationKey)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalX(int,int)> (SMS_MMS)
<android.app.IActivityManager$Default: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> (SMS_MMS)
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()> (SMS_MMS)
<android.widget.ExpandableListView: long getSelectedId()> (SMS_MMS)
<android.content.integrity.AppIntegrityManager: java.lang.String getCurrentRuleSetProvider()> (SMS_MMS)
<com.google.android.mms.ContentType: java.util.ArrayList getImageTypes()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ProxyInfo: int hashCode()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SignalStrength: int getEvdoEcio()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCallWaitingStatus()> (SMS_MMS)
<android.os.LocaleList: int hashCode()> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isTtyModeSupported()> (SMS_MMS)
<android.filterfw.io.PatternScanner: int lineNo()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub: android.hardware.ISensorPrivacyListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getLocalTextClassifier()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedIntentInfo: int getLabelRes()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.util.List GetApInterfaces()> (SMS_MMS)
<android.text.TextUtils$Reverser: int length()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getCpuActiveTime()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: long getIdleConnectionTimeout()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getPrivateFlags()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRttSupported(int)> (SMS_MMS)
<android.view.inputmethod.CorrectionInfo: int getOffset()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: android.os.IBinder getHostInputToken()> (SMS_MMS)
<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub: android.content.pm.dex.IArtManager getDefaultImpl()> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.util.List getZenRules()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: java.util.List getVideoEvents()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getPhoneAccountsForPackage(java.lang.String)> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: android.graphics.Path getPath()> (SMS_MMS)
<android.net.NetworkCapabilities: int getRequestorUid()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSmartActions()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String)> (SMS_MMS)
<android.content.res.ColorStateList: int[] getColors()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: int getGnssYearOfHardware()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getWifiMulticastWakelockCount(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: float getElevation()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentity: boolean equals(java.lang.Object)> (SMS_MMS)
<android.security.IKeyChainService$Stub: android.security.IKeyChainService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getLinkProperties()> (SMS_MMS)
<android.view.inputmethod.SparseRectFArray: android.graphics.RectF get(int)> (SMS_MMS)
<android.os.Bundle: float getFloat(java.lang.String)> (SMS_MMS)
<android.app.WallpaperManager: int getDesiredMinimumWidth()> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: float getThermalHeadroom(int)> (SMS_MMS)
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.telephony.CellIdentity: boolean isValidPlmn(java.lang.String)> (SMS_MMS)
<android.os.UserManager: int getUserIconBadgeResId(int)> (SMS_MMS)
<android.widget.AbsListView: int getListPaddingLeft()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int lock(int)> (SMS_MMS)
<android.graphics.animation.RenderNodeAnimator: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.text.BoringLayout: int getHeight()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int getChangingConfigurations()> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: int hashCode()> (SMS_MMS)
<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()> (SMS_MMS)
<android.window.IWindowOrganizerController$Default: android.window.ITaskOrganizerController getTaskOrganizerController()> (SMS_MMS)
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)> (SMS_MMS)
<android.view.VelocityTracker$Estimator: float getXCoeff(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State[] values()> (SMS_MMS)
<android.os.IThermalStatusListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getEnableDataSaver()> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingRight()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getCqi()> (SMS_MMS)
<android.media.AudioRecord: int getSampleRate()> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioAttributes()> (SMS_MMS)
<android.hardware.input.TouchCalibration: int hashCode()> (SMS_MMS)
<android.util.ArrayMap$1: int colIndexOfValue(java.lang.Object)> (SMS_MMS)
<android.telephony.TelephonyManager: void shutdownAllRadios()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: boolean getRestrictBackground()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoSizesFor(android.util.Range)> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getTotalSize()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultVoiceSubId()> (SMS_MMS)
<android.content.pm.DataLoaderParams: int getType()> (SMS_MMS)
<android.app.AppOpsManager$PackageOps: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)> (SMS_MMS)
<android.renderscript.RenderScript: long nFileA3DCreateFromAsset(android.content.res.AssetManager,java.lang.String)> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub: android.hardware.display.IVirtualDisplayCallback getDefaultImpl()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo getPrimaryPhysicalVolume()> (SMS_MMS)
<android.security.KeyStore: byte[] get(java.lang.String,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)> (SMS_MMS)
<android.os.UserManager: int getUserSwitchability(android.os.UserHandle)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: java.lang.String getResultId()> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: int getFlags(int)> (SMS_MMS)
<android.widget.TextView: boolean getShowSoftInputOnFocus()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int getNativeSize()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: int getDuplexModes()> (SMS_MMS)
<android.content.SyncRequest$Builder: int access$500(android.content.SyncRequest$Builder)> (SMS_MMS)
<android.util.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)> (SMS_MMS)
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)> (SMS_MMS)
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getInputs()> (SMS_MMS)
<android.telephony.CbGeoUtils$LatLng: boolean equals(java.lang.Object)> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow: int getTextOffset()> (SMS_MMS)
<android.renderscript.RenderScript: long nProgramVertexCreate(java.lang.String,java.lang.String[],long[])> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: int getWallpaperIdForUser(int,int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyInfo getGlobalProxy()> (SMS_MMS)
<android.app.IActivityController$Stub$Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentLocation(java.lang.String)> (SMS_MMS)
<com.android.internal.infra.AndroidFuture: java.lang.Throwable unwrapExecutionException(java.lang.Throwable)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getScreenOffRpmTimerLocked(java.lang.String)> (SMS_MMS)
<android.util.ArrayMap: int indexOf(java.lang.Object,int)> (SMS_MMS)
<android.metrics.LogMaker: long getCounterBucket()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: boolean getFocusable()> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowPending()> (SMS_MMS)
<android.view.View$6: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub: com.android.internal.app.IVoiceInteractor asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()> (SMS_MMS)
<android.graphics.RenderNode: float getAlpha()> (SMS_MMS)
<android.media.MediaDescription: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: boolean isExtraLocationControllerPackageEnabled()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean iccCloseLogicalChannelBySlot(int,int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)> (SMS_MMS)
<android.text.style.LineHeightSpan$Standard: int getSpanTypeIdInternal()> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: int getMaxSharedSurfaceCount()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()> (SMS_MMS)
<android.telecom.TelecomAnalytics$SessionTiming: int describeContents()> (SMS_MMS)
<android.os.health.HealthStats: int getMeasurementsKeyAt(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)> (SMS_MMS)
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy$ValidationFailedException: int describeContents()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.SpannableStringInternal: int hashCode()> (SMS_MMS)
<android.filterfw.core.GLFrame: int getTextureId()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailablePhysicalCameraRequestKeys()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getSimCallManager(int)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr$1: android.telephony.CellSignalStrengthNr createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.location.NanoAppMessage: int getMessageType()> (SMS_MMS)
<android.text.DynamicLayout: int getTopPadding()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.os.Bundle getSuspendedPackageAppExtras(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera$Parameters access$1100(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.app.Notification$WearableExtender: int getContentIconGravity()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int setImsProvisioningInt(int,int,int)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.InsetsController getInsetsController()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getRxTimeCounter()> (SMS_MMS)
<android.content.pm.LauncherApps: int getShortcutIconResId(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)> (SMS_MMS)
<android.os.INetworkActivityListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.MediaSession$Token: int hashCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.os.Bundle getUserRestrictions(android.content.ComponentName,boolean)> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsMediaDirectory()> (SMS_MMS)
<android.widget.AdapterView: long getItemIdAtPosition(int)> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForLegacyStreamType(int)> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)> (SMS_MMS)
<android.telephony.PreciseCallState: int hashCode()> (SMS_MMS)
<android.os.BatteryProperty: long getLong()> (SMS_MMS)
<android.media.MediaRoute2Info: int describeContents()> (SMS_MMS)
<android.view.RemoteAnimationAdapter: int describeContents()> (SMS_MMS)
<android.util.SizeF: int hashCode()> (SMS_MMS)
<android.net.NetworkPolicy: int describeContents()> (SMS_MMS)
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> (SMS_MMS)
<android.app.role.IRoleManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.StrictMode$AndroidBlockGuardPolicy: int getPolicyMask()> (SMS_MMS)
<android.media.AudioRecord: int read(short[],int,int,int)> (SMS_MMS)
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsCompanionServiceRegisterer()> (SMS_MMS)
<android.graphics.drawable.ScaleDrawable: int getOpacity()> (SMS_MMS)
<android.content.RestrictionEntry: int getIntValue()> (SMS_MMS)
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)> (SMS_MMS)
<android.drm.DrmUtils: byte[] readBytes(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int cancelConfirmationPrompt(android.os.IBinder)> (SMS_MMS)
<android.content.res.AssetFileDescriptor: long getStartOffset()> (SMS_MMS)
<android.widget.TextView: int getAutoLinkMask()> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifier: int getMaxGenerateLinksTextLength()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: int hashCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getPackage()> (SMS_MMS)
<android.view.animation.Animation: int getRepeatMode()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserRestrictionSource(java.lang.String,int)> (SMS_MMS)
<com.android.internal.net.VpnInfo: int describeContents()> (SMS_MMS)
<android.os.Environment: java.io.File getDataSystemDeDirectory()> (SMS_MMS)
<android.hardware.radio.Announcement: int describeContents()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int getId()> (SMS_MMS)
<android.os.ParcelFileDescriptor: long getStatSize()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionPlan: long access$402(android.telephony.SubscriptionPlan,long)> (SMS_MMS)
<android.telephony.CellIdentityCdma: int getLongitude()> (SMS_MMS)
<android.graphics.drawable.Icon: android.net.Uri getUri()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$100(android.hardware.camera2.legacy.LegacyFocusStateMapper)> (SMS_MMS)
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor getControlFd(long)> (SMS_MMS)
<android.widget.ScrollView: int getMaxScrollAmount()> (SMS_MMS)
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailablePreviewZoomCropRectangles(android.hardware.Camera$Parameters,android.graphics.Rect,android.util.Size)> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.String getOriginalId()> (SMS_MMS)
<android.graphics.Point: int describeContents()> (SMS_MMS)
<android.os.SharedMemory: int getSize()> (SMS_MMS)
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.os.BaseBundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> (SMS_MMS)
<android.content.ContentResolver: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)> (SMS_MMS)
<android.app.PendingIntent: boolean isActivity()> (SMS_MMS)
<android.telephony.CbGeoUtils$Circle: android.telephony.CbGeoUtils$LatLng getCenter()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int createLinkedStorage(java.lang.String,int,int)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IUriGrantsManager$Stub$Proxy: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)> (SMS_MMS)
<android.media.VolumeShaper$State: int hashCode()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Default: long getSize()> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: long getItemId(int)> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long[] getRawInfo()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.view.TextureLayer: long getDeferredLayerUpdater()> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub: android.app.backup.IBackupManagerMonitor asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Default: int getCurrentAudioFocus()> (SMS_MMS)
<android.view.View: int computeVerticalScrollRange()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: boolean isActiveSubId(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.View: int getId()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: int getNanoAppVersion()> (SMS_MMS)
<android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)> (SMS_MMS)
<android.os.IServiceManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getAppPredictionServicePackageName()> (SMS_MMS)
<android.view.IWindow$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read(byte[])> (SMS_MMS)
<android.app.DisabledWallpaperManager: int getWallpaperId(int)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor getExecutor()> (SMS_MMS)
<android.graphics.ColorSpace$Xyz: float getMinValue(int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getLauncherActivities(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSession getSession(android.app.PendingIntent)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read()> (SMS_MMS)
<com.android.internal.os.ZygoteConnection: boolean isPreloadComplete()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isMwiDontStore()> (SMS_MMS)
<android.telephony.SubscriptionPlan: long getDataLimitBytes()> (SMS_MMS)
<android.app.IUidObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: int getNetworkType(int)> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: android.os.Handler getHandler()> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: byte[] getMetadata()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getIconTint()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectLights()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.dex.IArtManager getArtManager()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownItemCount()> (SMS_MMS)
<android.app.IUiModeManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkRequest: android.net.NetworkSpecifier getNetworkSpecifier()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwnerAsUser(int)> (SMS_MMS)
<android.app.IAlarmListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.WindowInsetsAnimation$Callback: int getDispatchMode()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.IntArray: int get(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int access$500(android.hardware.camera2.impl.CameraDeviceImpl)> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub: android.view.IWindowSessionCallback getDefaultImpl()> (SMS_MMS)
<android.media.MediaFormat$UnprefixedKeySet: java.lang.String mapKeyToItem(java.lang.String)> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getChannelCounts()> (SMS_MMS)
<android.os.UserManager$EnforcingUser: int getUserRestrictionSource()> (SMS_MMS)
<android.print.PrintAttributes: int describeContents()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetManager: int[] getStyleAttributes(int)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: java.lang.String createObb(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.security.IKeyChainService$Default: byte[] getCaCertificates(java.lang.String)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.FragmentManagerNonConfig: java.util.List getFragments()> (SMS_MMS)
<android.view.ViewConfiguration: int getHoverTapSlop()> (SMS_MMS)
<android.view.View: int getPaddingLeft()> (SMS_MMS)
<android.net.IpSecAlgorithm: java.lang.String getName()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int putClockFromNative(int,long,int)> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector getSelector()> (SMS_MMS)
<android.app.servertransaction.ActivityRelaunchItem: int hashCode()> (SMS_MMS)
<android.app.ContextImpl: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: java.time.ZonedDateTime getReferenceTime()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.database.sqlite.SQLiteConnection$OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int registerNetworkProvider(android.os.Messenger,java.lang.String)> (SMS_MMS)
<android.content.res.AssetFileDescriptor: long getDeclaredLength()> (SMS_MMS)
<android.content.res.Resources: android.content.res.Resources getSystem()> (SMS_MMS)
<android.app.NotificationChannelGroup: java.lang.CharSequence getName()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()> (SMS_MMS)
<android.view.accessibility.CaptioningManager: float getFontScale()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CallQuality: int getUplinkCallQualityLevel()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: android.telephony.CarrierRestrictionRules$Builder newBuilder()> (SMS_MMS)
<android.media.Utils$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera access$1300(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: boolean isStaged()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: int describeContents()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.util.Map getWakeupReasonStats()> (SMS_MMS)
<android.app.LoadedApk: android.app.Application getApplication()> (SMS_MMS)
<android.widget.ListPopupWindow: int getSoftInputMode()> (SMS_MMS)
<android.media.MediaFormat: long getLong(java.lang.String,long)> (SMS_MMS)
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()> (SMS_MMS)
<android.hardware.radio.ProgramList$Filter: int hashCode()> (SMS_MMS)
<android.os.BaseBundle: int[] getIntArray(java.lang.String)> (SMS_MMS)
<android.os.health.SystemHealthManager: android.os.health.HealthStats[] takeUidSnapshots(int[])> (SMS_MMS)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: com.android.internal.telephony.euicc.IDisableProfileCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isDeviceProvisioningConfigApplied()> (SMS_MMS)
<android.view.DisplayInfo: int hashCode()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)> (SMS_MMS)
<android.app.SearchableInfo: int getLabelId()> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: java.lang.String getIcbNum()> (SMS_MMS)
<android.media.AudioGainConfig: int index()> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: int describeContents()> (SMS_MMS)
<android.text.StaticLayout: int getEndHyphenEdit(int)> (SMS_MMS)
<android.text.style.TextAppearanceSpan: java.lang.String getFontFeatureSettings()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: int write(byte[])> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.permission.SplitPermissionInfoParcelable: int getTargetSdk()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerNameAsUser(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isUsableSubIdValue(int)> (SMS_MMS)
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()> (SMS_MMS)
<android.telephony.CallQuality: int getCodecType()> (SMS_MMS)
<android.content.LoggingContentInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)> (SMS_MMS)
<android.view.WindowInsetsAnimation$Bounds: android.graphics.Insets getUpperBound()> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: int attestKey(java.lang.String,byte[],int[],android.security.keymaster.KeymasterCertificateChain)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()> (SMS_MMS)
<android.webkit.Plugin: java.lang.String getFileName()> (SMS_MMS)
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)> (SMS_MMS)
<android.app.timezone.ICallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: boolean isEmail()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$ICallback)> (SMS_MMS)
<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManagerImpl()> (SMS_MMS)
<android.app.timezonedetector.ManualTimeZoneSuggestion: int describeContents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.location.GnssMeasurementsEvent: int describeContents()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: long getId()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub$Proxy: long getSize()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int is_hardware_backed(java.lang.String)> (SMS_MMS)
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetEndWithActions()> (SMS_MMS)
<android.util.AtomicFile: long getLastModifiedTime()> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int compareTo(android.telephony.emergency.EmergencyNumber)> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfo: int hashCode()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.backup.IRestoreSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo$1: android.telephony.BarringInfo$BarringServiceInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.AudioManager: android.util.ArrayMap access$1300(android.media.AudioManager)> (SMS_MMS)
<android.view.ViewGroup: int getPersistentDrawingCache()> (SMS_MMS)
<android.os.storage.IStorageEventListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.KeyEvent: boolean isPrintingKey()> (SMS_MMS)
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.IntArray: int size()> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$3: java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int movePackage(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.StaticIpConfiguration: int describeContents()> (SMS_MMS)
<com.android.internal.widget.VerifyCredentialResponse: int getResponseCode()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.view.View: int getForegroundGravity()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getSnoozedNotificationsFromListener(android.service.notification.INotificationListener,int)> (SMS_MMS)
<android.media.AudioRecord: int read(byte[],int,int)> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.service.autofill.UserData: int getMaxFieldClassificationIdsSize()> (SMS_MMS)
<android.telephony.SubscriptionInfo$1: android.telephony.SubscriptionInfo[] newArray(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> (SMS_MMS)
<android.telephony.CallQuality: int getNumRtpPacketsNotReceived()> (SMS_MMS)
<android.animation.Keyframe$IntKeyframe: java.lang.Object getValue()> (SMS_MMS)
<android.os.INetworkManagementService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebView: int getProgress()> (SMS_MMS)
<android.app.ActivityManager: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String)> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.PackageInstaller: java.util.List getAllSessions()> (SMS_MMS)
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()> (SMS_MMS)
<android.telephony.SmsManager: boolean isImsSmsSupported()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase(int)> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: long getFadeDuration()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.PrintWriter getOutPrintWriter()> (SMS_MMS)
<android.view.View: int getMeasuredWidth()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int hashCode()> (SMS_MMS)
<android.os.VibrationEffect: android.os.VibrationEffect get(android.net.Uri,android.content.Context)> (SMS_MMS)
<android.view.VelocityTracker: float getXVelocity(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ConfigurationBoundResourceCache getAnimatorCache()> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getAlwaysOnVpnPackage()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub: android.print.IPrintDocumentAdapter getDefaultImpl()> (SMS_MMS)
<android.os.Debug$MemoryInfo: java.util.Map getMemoryStats()> (SMS_MMS)
<android.os.IVold$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IVibratorService$Stub: android.os.IVibratorService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)> (SMS_MMS)
<android.app.IAlarmManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.prediction.AppTarget: java.lang.String getClassName()> (SMS_MMS)
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)> (SMS_MMS)
<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.os.IBinder getLeashToken()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.os.PersistableBundle[] getIntentPersistableExtrases()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.text.style.SuggestionSpan: int hashCode()> (SMS_MMS)
<android.content.res.AssetManager: int addAssetPathAsSharedLibrary(java.lang.String)> (SMS_MMS)
<android.permission.IPermissionController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)> (SMS_MMS)
<android.view.View: int getPaddingStart()> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub: com.android.ims.internal.IImsUtListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.UiccSlotInfo: java.lang.String getCardId()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTextStyle()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.DiskInfo[] getDisks()> (SMS_MMS)
<android.os.storage.StorageManager: android.util.Pair getPrimaryStoragePathAndSize()> (SMS_MMS)
<android.media.session.MediaSession: android.media.session.MediaSession$Token getSessionToken()> (SMS_MMS)
<android.webkit.WebView: java.lang.String getOriginalUrl()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: android.app.job.JobInfo getPendingJob(int)> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: java.lang.String getMcc()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: int describeContents()> (SMS_MMS)
<android.view.inputmethod.CompletionInfo: int getPosition()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: int hashCode()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: com.android.internal.view.IInlineSuggestionsResponseCallback getDefaultImpl()> (SMS_MMS)
<android.drm.ProcessedData: java.lang.String getSubscriptionId()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.RequestHandlerThread access$700(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getSubscriptionCarrierId(int)> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()> (SMS_MMS)
<android.content.BroadcastReceiver: boolean getDebugUnregister()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo: int describeContents()> (SMS_MMS)
<android.animation.StateListAnimator: java.util.ArrayList getTuples()> (SMS_MMS)
<android.location.ILocationManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MicrophoneInfo: float getMaxSpl()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback getDefaultImpl()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int getHeight()> (SMS_MMS)
<android.text.DynamicLayout: int getEllipsisCount(int)> (SMS_MMS)
<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.graphics.Point getStableDisplaySize()> (SMS_MMS)
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()> (SMS_MMS)
<android.app.WindowConfiguration: int hashCode()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String getBaseResourcePath()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.lang.String getOverrideGroupKey()> (SMS_MMS)
<android.app.AppGlobals: android.permission.IPermissionManager getPermissionManager()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.NinePatch: int getHeight()> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener getDefaultImpl()> (SMS_MMS)
<android.telephony.ServiceState: int convertBearerBitmaskToNetworkTypeBitmask(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPersonalAppsSuspendedReasons(android.content.ComponentName)> (SMS_MMS)
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$AttributedHistoricalOps getAttributedOps(java.lang.String)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getBroadcastForState(int)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledEdgeSlop()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub: android.content.IOnPrimaryClipChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.view.InsetsFlags: int getAppearance(int)> (SMS_MMS)
<android.location.ILocationListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: long createSession(android.app.blob.BlobHandle,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataEnabledForApn(int)> (SMS_MMS)
<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionPlan: int[] access$802(android.telephony.SubscriptionPlan,int[])> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)> (SMS_MMS)
<android.app.slice.Slice: android.app.slice.SliceSpec getSpec()> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)> (SMS_MMS)
<android.content.ContextWrapper: android.content.Context getBaseContext()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid)> (SMS_MMS)
<android.transition.TransitionSet: int getOrdering()> (SMS_MMS)
<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getProcesses()> (SMS_MMS)
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: int getRequestId()> (SMS_MMS)
<android.app.LoadedApk: java.lang.ClassLoader getSplitClassLoader(java.lang.String)> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Rect getLeftBound()> (SMS_MMS)
<android.telephony.TelephonyManager: android.content.ComponentName getAndUpdateDefaultRespondViaMessageApplication()> (SMS_MMS)
<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()> (SMS_MMS)
<com.android.internal.policy.DecorContext: android.content.AutofillOptions getAutofillOptions()> (SMS_MMS)
<android.os.Handler: java.lang.String getTraceName(android.os.Message)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getDisabledUntilUsedPreinstalledCarrierApps()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils$1: java.lang.Void doInBackground(java.lang.Void[])> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getClassName()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.view.KeyCharacterMap: int getModifierBehavior()> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.content.ContentProvider$Transport: android.net.Uri uncanonicalize(java.lang.String,java.lang.String,android.net.Uri)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getDarkMutedColor(int)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getPackageScreenCompatMode(java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()> (SMS_MMS)
<android.content.ContentProviderOperation: int describeContents()> (SMS_MMS)
<android.transition.Transition: android.transition.PathMotion getPathMotion()> (SMS_MMS)
<android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)> (SMS_MMS)
<android.app.Dialog: android.app.Activity getOwnerActivity()> (SMS_MMS)
<android.location.GnssAntennaInfo$SphericalCorrections: int describeContents()> (SMS_MMS)
<android.telephony.ClientRequestStats$1: android.telephony.ClientRequestStats[] newArray(int)> (SMS_MMS)
<android.os.ShellCommand: android.os.ShellCallback getShellCallback()> (SMS_MMS)
<android.view.Display: android.view.DisplayCutout getCutout()> (SMS_MMS)
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.TextView: android.text.method.WordIterator getWordIterator()> (SMS_MMS)
<android.os.UserHandle: int hashCode()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: android.content.pm.VersionedPackage getDeclaringPackage()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)> (SMS_MMS)
<android.view.View: float getRotationY()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable2gChannels()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAffiliationIds(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SubscriptionPlan: long access$602(android.telephony.SubscriptionPlan,long)> (SMS_MMS)
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getLightVibrantSwatch()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: long getUpdatedMillis()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$202(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)> (SMS_MMS)
<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.hardware.camera2.params.BlackLevelPattern: int hashCode()> (SMS_MMS)
<android.text.PrecomputedText: int checkResultUsable(int,int,android.text.TextDirectionHeuristic,android.text.TextPaint,int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getClientRequestStats(int)> (SMS_MMS)
<android.text.style.TtsSpan: int getSpanTypeId()> (SMS_MMS)
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeMyUidSnapshot()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: java.util.List GetApInterfaces()> (SMS_MMS)
<android.telephony.UssdResponse: int describeContents()> (SMS_MMS)
<android.accessibilityservice.AccessibilityShortcutInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.renderscript.RenderScript: long nFontCreateFromFile(java.lang.String,float,int)> (SMS_MMS)
<android.media.AudioRecord: int getAudioSessionId()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.net.IEthernetManager$Stub: android.net.IEthernetManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextLanguage: float getConfidenceScore(android.icu.util.ULocale)> (SMS_MMS)
<android.hardware.location.NanoAppState: long getNanoAppVersion()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()> (SMS_MMS)
<android.content.IntentFilter: java.lang.String[] getHosts()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: byte[] getHashFactor(com.android.internal.widget.LockscreenCredential,int)> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: int getRemainingCallCount(java.lang.String,int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int calculateFootprint()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getGwpAsanMode()> (SMS_MMS)
<android.filterfw.core.FilterGraph: java.util.Set getFilters()> (SMS_MMS)
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()> (SMS_MMS)
<android.view.KeyboardShortcutInfo: int getModifiers()> (SMS_MMS)
<android.location.GpsSatellite: int getPrn()> (SMS_MMS)
<android.media.AudioManager: int getVibrateSetting(int)> (SMS_MMS)
<android.media.session.MediaSessionManager: java.lang.Object access$1100(android.media.session.MediaSessionManager)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: long getMessageSize()> (SMS_MMS)
<android.hardware.ICameraClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getDeviceOwnerComponent(boolean)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensityNoBackground(android.os.UserHandle,int)> (SMS_MMS)
<android.app.AlertDialog$Builder: android.content.Context getContext()> (SMS_MMS)
<android.text.style.LocaleSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getDimensionCount()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean enableDataConnectivity()> (SMS_MMS)
<android.telephony.CellSignalStrength: int getAsuFromRscpDbm(int)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Proxy: int hashCode()> (SMS_MMS)
<android.app.Notification$Action: android.app.RemoteInput[] getDataOnlyRemoteInputs()> (SMS_MMS)
<android.os.IServiceManager$Stub: android.os.IServiceManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeysNeedingPermission()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: java.lang.CharSequence getText()> (SMS_MMS)
<android.content.Context: java.lang.CharSequence getText(int)> (SMS_MMS)
<android.os.storage.VolumeInfo: android.os.storage.StorageVolume buildStorageVolume(android.content.Context,int,boolean)> (SMS_MMS)
<android.telecom.TelecomAnalytics: int describeContents()> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: android.os.Temperature[] getCurrentTemperaturesWithType(int)> (SMS_MMS)
<android.content.pm.PackageParser$Provider: int describeContents()> (SMS_MMS)
<android.view.contentcapture.DataShareRequest: android.content.LocusId getLocusId()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ScrollCaptureTarget: int getHint()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub$Proxy: android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.ImeInsetsSourceConsumer access$900(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<android.content.pm.PackageManager: int getUserId()> (SMS_MMS)
<android.media.AudioTrack: int access$502(android.media.AudioTrack,int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isSmsSimPickActivityNeeded(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getUserControlDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanManager getManager()> (SMS_MMS)
<android.database.AbstractCursor: java.util.List getNotificationUris()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.ConnectivityManager: int getRestrictBackgroundStatus()> (SMS_MMS)
<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$QueueRequest clear()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: float getShortTermModelLowerLuxMultiplier()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: java.lang.CharSequence getText()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(java.lang.String)> (SMS_MMS)
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()> (SMS_MMS)
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()> (SMS_MMS)
<android.util.jar.StrictJarVerifier: java.security.cert.Certificate[][] getCertificateChains(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()> (SMS_MMS)
<android.media.AudioManager: int registerAudioPolicyStatic(android.media.audiopolicy.AudioPolicy)> (SMS_MMS)
<android.app.Notification$BigPictureStyle: android.widget.RemoteViews makeBigContentView()> (SMS_MMS)
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.io.File,int)> (SMS_MMS)
<android.app.Fragment: android.app.Fragment findFragmentByWho(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getScrollX()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: float getAlpha()> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String getExtraLocationControllerPackage()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isWorldPhone(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: int getVibrateSetting(int)> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub: android.view.autofill.IAutoFillManager getDefaultImpl()> (SMS_MMS)
<android.security.keystore.ParcelableKeyGenParameterSpec: android.security.keystore.KeyGenParameterSpec getSpec()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: long getAwakeTimeBattery()> (SMS_MMS)
<android.view.View: float getPivotY()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationCallback getDefaultImpl()> (SMS_MMS)
<android.os.BinderProxy: long access$600()> (SMS_MMS)
<android.hardware.radio.TunerAdapter: boolean isAntennaConnected()> (SMS_MMS)
<android.media.session.ISessionManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getResizingBackgroundDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,boolean)> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: java.lang.String getServiceProviderName()> (SMS_MMS)
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()> (SMS_MMS)
<android.util.LruCache: java.lang.Object create(java.lang.Object)> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFileResourceEntry: java.lang.String getVariationSettings()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.service.notification.StatusBarNotification: com.android.internal.logging.InstanceId getInstanceId()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()> (SMS_MMS)
<android.renderscript.Short3: short length()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int hashCode()> (SMS_MMS)
<android.app.job.IJobCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getPackagesWithCarrierPrivileges(int)> (SMS_MMS)
<android.text.style.EasyEditSpan: int getSpanTypeId()> (SMS_MMS)
<android.util.Property: java.lang.String getName()> (SMS_MMS)
<android.graphics.Typeface: int hashCode()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable$ColorStateListDrawableState: int getChangingConfigurations()> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int getEmergencyNumberSourceBitmask()> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getSerialNumber()> (SMS_MMS)
<android.content.UndoOperation: android.content.UndoOwner getOwner()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo: byte getDiscriminator()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getFlashMode()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: int hashCode()> (SMS_MMS)
<android.app.IActivityManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.ActivityOptions: android.content.Intent getResultData()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: java.util.List getMessagesFromBundleArray(android.os.Parcelable[])> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: int access$000(java.lang.Enum)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.app.DisabledWallpaperManager getInstance()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalToolMinor(int)> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createGuest(android.content.Context,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.ConversationActions: int describeContents()> (SMS_MMS)
<android.net.CaptivePortalData: int describeContents()> (SMS_MMS)
<android.app.ITransientNotification$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessBackgroundTime(int)> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: boolean isHdmiSystemAudioSupported()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.net.TrafficStats: long getTotalTxPackets()> (SMS_MMS)
<com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: java.lang.String getInterfaceName()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: int createStream(android.hardware.camera2.params.OutputConfiguration)> (SMS_MMS)
<android.text.Layout: android.text.TextPaint getPaint()> (SMS_MMS)
<android.app.DownloadManager: int remove(long[])> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdTempWhitelist()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder startOrGetTestNetworkService()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPackageStateProtected(java.lang.String,int)> (SMS_MMS)
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.filterfw.core.Frame: int incRefCount()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: android.net.Uri convertSipUriToTelUri(android.net.Uri)> (SMS_MMS)
<android.telephony.SmsCbLocation: boolean isInLocationArea(java.lang.String,int,int)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlgorithm()> (SMS_MMS)
<android.app.IActivityController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.RadioAccessFamily: int compare(long,long)> (SMS_MMS)
<android.database.MatrixCursor: byte[] getBlob(int)> (SMS_MMS)
<android.app.NotificationChannel: int getOriginalImportance()> (SMS_MMS)
<android.media.IMediaRouterClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellInfoGsm$1: void <init>()> (SMS_MMS)
<android.content.IntentFilter: int countDataPaths()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyHistogram: int[] getBucketEndPoints()> (SMS_MMS)
<android.view.DisplayCutout: int getSafeInsetTop()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IVibratorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.ProxyInfo getGlobalProxy()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getDefaultTextClassifierPackageName()> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentity: int hashCode()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.backup.BackupDataInput: int getDataSize()> (SMS_MMS)
<android.location.GpsMeasurement: int describeContents()> (SMS_MMS)
<android.content.ContentResolver: java.lang.String getAttributionTag()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: boolean isCommissioned()> (SMS_MMS)
<android.content.res.AssetManager: boolean getThemeValue(long,int,android.util.TypedValue,boolean)> (SMS_MMS)
<android.view.View: java.lang.CharSequence getTooltip()> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeConfig: int describeContents()> (SMS_MMS)
<android.telecom.PhoneAccount: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.app.LoadedApk: android.content.res.AssetManager getAssets()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int isMultiSimSupported(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.InsetsController: android.view.InsetsState getState()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getAvailableExtraData()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int onKeyguardVisibilityChanged(boolean,int)> (SMS_MMS)
<android.util.MapCollections$MapIterator: java.lang.Object getKey()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getLaunchedFromUid(android.os.IBinder)> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ActivityOptions: int getLaunchWindowingMode()> (SMS_MMS)
<android.view.View$MeasureSpec: int getSize(int)> (SMS_MMS)
<android.media.AudioManager: int getRingerMode()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getProgrammedInfo()> (SMS_MMS)
<android.view.IGraphicsStats$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1300()> (SMS_MMS)
<android.media.MediaDescrambler: android.os.IHwBinder getBinder()> (SMS_MMS)
<android.widget.ArrayAdapter: java.lang.CharSequence[] getAutofillOptions()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable2gChannels()> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String[] getChoiceValues()> (SMS_MMS)
<android.graphics.fonts.FontVariationAxis: java.lang.String getTag()> (SMS_MMS)
<android.media.IPlayer$Stub: android.media.IPlayer asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.IKeyChainService$Default: android.content.pm.StringParceledListSlice getUserCaAliases()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int access$008(com.android.internal.os.BatteryStatsImpl)> (SMS_MMS)
<android.widget.Editor: android.widget.TextView getTextView()> (SMS_MMS)
<android.permission.IPermissionController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()> (SMS_MMS)
<android.security.KeyStore: long getmtime(java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isMeteredDataDisabledPackageForUser(android.content.ComponentName,java.lang.String,int)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryCalls()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Toolbar: int getTitleMarginStart()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getInstallReason(java.lang.String,int)> (SMS_MMS)
<android.drm.DrmManagerClient: int access$200(android.drm.DrmManagerClient,int)> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: int getUidForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.os.UserManager: boolean isSameProfileGroup(android.os.UserHandle,android.os.UserHandle)> (SMS_MMS)
<android.location.ICountryListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getExitTransition()> (SMS_MMS)
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()> (SMS_MMS)
<android.media.IMediaHTTPService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.Display: android.view.Display$HdrCapabilities getHdrCapabilities()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean isHigherPriority(android.media.tv.tunerresourcemanager.ResourceClientProfile,android.media.tv.tunerresourcemanager.ResourceClientProfile)> (SMS_MMS)
<android.telephony.ims.ImsSsData: int describeContents()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Message: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getInstallReason(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)> (SMS_MMS)
<android.widget.AbsListView: int getBottomEdgeEffectColor()> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.Credentials: int getGid()> (SMS_MMS)
<android.widget.FastScroller$6: java.lang.Integer get(android.view.View)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getRemoteCallProfile()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)> (SMS_MMS)
<android.security.IFileIntegrityService$Stub$Proxy: boolean isApkVeritySupported()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub: android.media.tv.ITvInputClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.ComponentName: java.lang.String getPackageName()> (SMS_MMS)
<android.telephony.CellConfigLte: boolean isEndcAvailable()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getDefaultDialerPackageForUser(int)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: byte[] getMacAddress()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Default: java.lang.String getSerial()> (SMS_MMS)
<android.os.StrictMode$AndroidBlockGuardPolicy: int getThreadPolicyMask()> (SMS_MMS)
<android.view.View: int getNextFocusLeftId()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedService: java.lang.String getPermission()> (SMS_MMS)
<android.os.UserManager$EnforcingUser: int describeContents()> (SMS_MMS)
<android.app.Notification$InboxStyle: android.widget.RemoteViews makeBigContentView()> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifyCallStateChangedForAllSubscriptions(int,java.lang.String)> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getRole()> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)> (SMS_MMS)
<android.provider.FontsContract: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.provider.FontRequest)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()> (SMS_MMS)
<android.content.res.Configuration: int getLayoutDirection()> (SMS_MMS)
<android.location.GpsClock: byte getType()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub: android.app.trust.IStrongAuthTracker getDefaultImpl()> (SMS_MMS)
<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()> (SMS_MMS)
<android.media.session.ISession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.hardware.display.Time getNightDisplayCustomStartTime()> (SMS_MMS)
<android.view.DisplayInfo: int findDefaultModeByRefreshRate(float)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)> (SMS_MMS)
<android.os.Parcel: long getBlobAshmemSize()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: int lambda$static$0(com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration,com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration)> (SMS_MMS)
<android.util.EventLog$Event: int getTag()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Default: java.lang.String getSerialForPackage(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.util.List getAudioVolumeGroups()> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int getCameraAudioRestriction()> (SMS_MMS)
<android.view.ScrollCaptureSession: android.graphics.Rect getScrollBounds()> (SMS_MMS)
<android.widget.RemoteViews$BitmapCache: android.graphics.Bitmap getBitmapForId(int)> (SMS_MMS)
<android.os.UserHandle: int getAppId(int)> (SMS_MMS)
<android.media.MediaRecorder: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getEventType()> (SMS_MMS)
<android.view.MotionEvent: int getDeviceId()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo,android.os.storage.StorageManager)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getSystemTextClassifierPackageName()> (SMS_MMS)
<android.telephony.SubscriptionPlan$1: void <init>()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionAsUser(android.content.Context,int)> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getWindowChanges()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getVibrantSwatch()> (SMS_MMS)
<android.content.ContentProviderOperation$BackReference: int describeContents()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: int hashCode()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig getZygoteInstance()> (SMS_MMS)
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()> (SMS_MMS)
<android.net.NetworkCapabilities: int[] getTransportTypes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isDataEnabledForApn(int,int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])> (SMS_MMS)
<android.media.AudioRecord: int getPositionNotificationPeriod()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> (SMS_MMS)
<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()> (SMS_MMS)
<android.telephony.TelephonyManager: void <clinit>()> (SMS_MMS)
<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()> (SMS_MMS)
<android.os.Parcel: int dataCapacity()> (SMS_MMS)
<android.content.ContentResolver: java.lang.String getPackageName()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.RectF: int describeContents()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getOpacity()> (SMS_MMS)
<com.android.internal.widget.VerifyCredentialResponse: byte[] getPayload()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$2: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.telephony.UiccAccessRule: java.util.List getSignatures(android.content.pm.PackageInfo)> (SMS_MMS)
<android.app.slice.SliceItem: long getLong()> (SMS_MMS)
<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.content.UndoOperation: java.lang.Object getOwnerData()> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub: android.app.timedetector.ITimeDetectorService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.health.HealthKeys$Constants: int getSize(int)> (SMS_MMS)
<com.android.internal.util.SizedInputStream: int read()> (SMS_MMS)
<android.view.autofill.AutofillValue: java.lang.CharSequence getTextValue()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.util.Set getNonCriticalExtensionOIDs()> (SMS_MMS)
<android.text.style.BulletSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.widget.Toolbar: android.view.View getNavigationView()> (SMS_MMS)
<android.app.AlarmManager: long getNextWakeFromIdleTime()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getOetf()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgName()> (SMS_MMS)
<android.database.CursorWrapper: int getCount()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.RelativeSizeSpan: int getSpanTypeId()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)> (SMS_MMS)
<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.HdmiSwitchClient: java.util.List getDeviceList()> (SMS_MMS)
<android.media.MicrophoneInfo: int getLocation()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isUniqueDeviceAttestationSupported()> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: long getDate()> (SMS_MMS)
<android.view.IWindowManager$Default: int getDefaultDisplayRotation()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()> (SMS_MMS)
<android.app.Notification$WearableExtender: java.lang.String getBridgeTag()> (SMS_MMS)
<android.graphics.RenderNode: float getRotationX()> (SMS_MMS)
<android.app.Notification$WearableExtender: android.graphics.Bitmap getBackground()> (SMS_MMS)
<android.database.MatrixCursor: int access$000(android.database.MatrixCursor)> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int queryCapabilityStatus()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.pm.UserInfo getCurrentUser()> (SMS_MMS)
<android.media.midi.IMidiManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: byte[] getTriggerAudio()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeZoneEnabled(android.content.ComponentName)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledOverflingDistance()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: int getAccessibilityWindowId(android.os.IBinder)> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaDrm: byte[] access$500(android.media.MediaDrm,byte[],byte[],byte[])> (SMS_MMS)
<android.telephony.RadioAccessFamily: int rafTypeFromString(java.lang.String)> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.filterfw.core.Filter: boolean canProcess()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)> (SMS_MMS)
<android.os.BatteryStats: java.lang.String formatBytesLocked(long)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: int getItemViewType(int)> (SMS_MMS)
<android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()> (SMS_MMS)
<android.net.Uri$Part: boolean isEmpty()> (SMS_MMS)
<android.widget.Magnifier: int getDefaultVerticalSourceToMagnifierOffset()> (SMS_MMS)
<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()> (SMS_MMS)
<android.content.pm.PackageParser$Permission: int describeContents()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.lang.Object lambda$createStubInstance$0(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)> (SMS_MMS)
<android.telephony.LteVopsSupportInfo$1: void <init>()> (SMS_MMS)
<android.view.IPinnedStackListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: java.util.ArrayList copyMappedViews()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionParams: int describeContents()> (SMS_MMS)
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.content.pm.IDataLoader$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (SMS_MMS)
<android.view.View: int getLabelFor()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils$RequestThrottledException: int getTimeoutMs()> (SMS_MMS)
<android.os.Bundle: char getChar(java.lang.String,char)> (SMS_MMS)
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getMinTextEms()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getEnableFirewall()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Proxy: int hashCode()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub$Proxy: float[] getDeviceTemperatures(java.lang.String,int,int)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.view.InsetsSourceControl: android.view.SurfaceControl getLeash()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: android.os.ParcelFileDescriptor getStatisticsStream()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int getDisplayId()> (SMS_MMS)
<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.media.session.PlaybackState getPlaybackState()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getAllLinkAddresses()> (SMS_MMS)
<android.net.Proxy: java.lang.String getDefaultHost()> (SMS_MMS)
<android.location.Location: float getBearingAccuracyDegrees()> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.Layout: int getStartHyphenEdit(int)> (SMS_MMS)
<android.media.MediaCodec$MediaImage: int getTransform()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.DisplayAddress$Network: int hashCode()> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int getDpi()> (SMS_MMS)
<android.media.Metadata: int lastSytemId()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getKeySetMapping()> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: long getPresentationTimeUs()> (SMS_MMS)
<android.service.notification.StatusBarNotification: android.content.Context getPackageContext(android.content.Context)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getText()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int unregisterCallback(android.hardware.location.ContextHubManager$ICallback)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: int getRetrieveStatus()> (SMS_MMS)
<android.telephony.SignalStrength: int getWcdmaLevel()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindow$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean canChangeDtmfToneLength()> (SMS_MMS)
<android.net.RouteInfo: android.net.IpPrefix getDestination()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int registerNetworkProvider(android.os.Messenger,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getAttentionServicePackageName()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.ComponentName getAllowedNotificationAssistantForUser(int)> (SMS_MMS)
<android.content.IntentFilter$AuthorityEntry: int getPort()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()> (SMS_MMS)
<android.print.PrintDocumentInfo: java.lang.String getName()> (SMS_MMS)
<android.location.LocationManager$GnssNavigationMessageListenerManager: boolean registerService(java.lang.Void)> (SMS_MMS)
<android.app.ActivityOptions: boolean getLaunchTaskBehind()> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.SearchableInfo: int getInputType()> (SMS_MMS)
<android.net.TrafficStats: long getLoopbackTxBytes()> (SMS_MMS)
<android.view.MagnificationSpec: int hashCode()> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getSystemServiceName(java.lang.Class)> (SMS_MMS)
<android.app.prediction.AppTargetEvent: int describeContents()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.Set getPhysicalCameraIds()> (SMS_MMS)
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair jpegProduced()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getDataConnectionState()> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getFlat()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: int getSize()> (SMS_MMS)
<android.telephony.UssdResponse$1: android.telephony.UssdResponse[] newArray(int)> (SMS_MMS)
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int)> (SMS_MMS)
<android.app.prediction.AppPredictionSessionId: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: int getPackageProcessState(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: boolean isNightDisplayActivated()> (SMS_MMS)
<android.telephony.euicc.EuiccManager: android.telephony.euicc.EuiccManager createForCardId(int)> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: int getRowCount()> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: int getOpacity()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String[] getSystemSharedLibraryNames()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppPermissions(java.lang.String)> (SMS_MMS)
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)> (SMS_MMS)
<android.print.IPrintManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.NinePatch: int getDensity()> (SMS_MMS)
<android.app.slice.ISliceManager$Default: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)> (SMS_MMS)
<android.app.contentsuggestions.ContentClassification: java.lang.String getId()> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub: android.hardware.radio.IAnnouncementListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getAveragePowerOrDefault(java.lang.String,double)> (SMS_MMS)
<android.content.IClipboard$Default: android.content.ClipData getPrimaryClip(java.lang.String,int)> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setNetworkTypes(int[])> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()> (SMS_MMS)
<android.text.Html$HtmlParser: org.ccil.cowan.tagsoup.HTMLSchema access$000()> (SMS_MMS)
<android.content.om.OverlayInfo: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)> (SMS_MMS)
<android.view.View: java.util.ArrayList getTouchables()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int access$102(android.media.tv.TvStreamConfig,int)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.app.SystemServiceRegistry$16: android.os.IBinder lambda$createService$0()> (SMS_MMS)
<android.view.DragEvent: com.android.internal.view.IDragAndDropPermissions getDragAndDropPermissions()> (SMS_MMS)
<android.app.timezone.ICallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastAccessBackgroundTime(int)> (SMS_MMS)
<android.net.lowpan.LowpanProperty: java.lang.Object getFromMap(java.util.Map)> (SMS_MMS)
<android.view.View: int getAutofillViewId()> (SMS_MMS)
<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaShort()> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()> (SMS_MMS)
<android.content.res.GradientColor: int getChangingConfigurations()> (SMS_MMS)
<android.permission.IPermissionController$Stub: android.permission.IPermissionController getDefaultImpl()> (SMS_MMS)
<android.webkit.WebResourceResponse: java.lang.String getMimeType()> (SMS_MMS)
<android.os.IRemoteCallback$Stub: android.os.IRemoteCallback getDefaultImpl()> (SMS_MMS)
<android.view.KeyEvent: int getKeyboardDevice()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getUahDischarge(int)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] access$402(android.security.keystore.recovery.KeyChainProtectionParams,byte[])> (SMS_MMS)
<android.widget.SmartSelectSprite$RoundedRectangleShape: float getRoundRatio()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getNavigationMode()> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.text.AutoGrowArray$FloatArray: int size()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()> (SMS_MMS)
<android.net.NetworkCapabilities: java.lang.String getSsid()> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow: int getVerticalLocalPosition(int)> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Typeface: int access$300(android.graphics.Typeface)> (SMS_MMS)
<android.telecom.VideoProfile$CameraCapabilities: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: android.util.ArrayMap access$200(android.view.accessibility.AccessibilityManager)> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int getDensityDpi()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserHandle(int)> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.TextView: int getTopPaddingOffset()> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfKeyframe(int[])> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: byte[] getBinaryNoHeader()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.widget.Toolbar: android.graphics.drawable.Drawable getLogo()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getAllPhoneAccountHandles()> (SMS_MMS)
<android.transition.TransitionSet: int getTransitionCount()> (SMS_MMS)
<android.media.AudioManager: long getAdditionalOutputDeviceDelay(android.media.AudioDeviceInfo)> (SMS_MMS)
<android.view.View: int getWidth()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getChunkCount()> (SMS_MMS)
<android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener()> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int describeContents()> (SMS_MMS)
<android.app.IAppTask$Default: android.app.ActivityManager$RecentTaskInfo getTaskInfo()> (SMS_MMS)
<com.android.internal.util.StateMachine: int getLogRecMaxSize()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int getLqi()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.CameraDeviceState access$000(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getPivotY()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: android.content.ComponentName getServiceSettingsComponentName()> (SMS_MMS)
<android.text.method.TextKeyListener: int getPrefs(android.content.Context)> (SMS_MMS)
<android.service.notification.ZenModeConfig: java.lang.String getOwnerCaption(android.content.Context,java.lang.String)> (SMS_MMS)
<android.os.IncidentManager$PendingReport: int getFlags()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyServiceRegisterer()> (SMS_MMS)
<android.location.GnssClock: double getDriftNanosPerSecond()> (SMS_MMS)
<android.service.notification.ZenModeConfig: android.content.ComponentName getScheduleConditionProvider()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: int getDisplayId()> (SMS_MMS)
<android.location.Criteria: int access$302(android.location.Criteria,int)> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSmartReplies()> (SMS_MMS)
<android.filterfw.core.Frame: int getRefCount()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getStart()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int hashCode()> (SMS_MMS)
<android.os.ISystemUpdateManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getPackageImportance(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()> (SMS_MMS)
<android.net.NetworkStats: int[] getUniqueUids()> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getVerticalScrollbarThumbDrawable()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotBefore()> (SMS_MMS)
<android.util.Log: int access$000()> (SMS_MMS)
<android.widget.ListPopupWindow: android.widget.ListView getListView()> (SMS_MMS)
<com.android.internal.util.SyncResultReceiver: int getOptionalExtraIntResult(int)> (SMS_MMS)
<android.widget.Editor$SuggestionHelper: int getSuggestionInfo(android.widget.Editor$SuggestionInfo[],android.widget.Editor$SuggestionSpanInfo)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getLoggingDurationMillis()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()> (SMS_MMS)
<android.text.Annotation: int getSpanTypeIdInternal()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> (SMS_MMS)
<android.os.Parcel: float[] createFloatArray()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getModulus()> (SMS_MMS)
<android.media.VolumeShaper: float getVolume()> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub: android.app.blob.IBlobCommitCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IMediaRouter2$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BatteryStats$LevelStepTracker: int getInitModeAt(int)> (SMS_MMS)
<android.media.MediaMetadata: android.media.MediaDescription getDescription()> (SMS_MMS)
<android.text.Layout: long getRunRange(int)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String getAlias()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.media.soundtrigger_middleware.ISoundTriggerCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.SignalStrength: int getLteDbm()> (SMS_MMS)
<android.content.ContextWrapper: int getDisplayId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)> (SMS_MMS)
<android.os.PowerManager: int getDefaultScreenBrightnessForVrSetting()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Relation: int getTypeLabelResource(int)> (SMS_MMS)
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean needMobileRadioShutdown()> (SMS_MMS)
<android.telephony.UiccAccessRule: byte[] encodeRules(android.telephony.UiccAccessRule[])> (SMS_MMS)
<android.media.tv.TvTrackInfo: int getVideoWidth()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTextSelectionStart()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo$1: void <init>()> (SMS_MMS)
<android.service.notification.INotificationListener$Stub: android.service.notification.INotificationListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectLeft()> (SMS_MMS)
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()> (SMS_MMS)
<android.graphics.RenderNode: int getHeight()> (SMS_MMS)
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)> (SMS_MMS)
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isAmbientDisplaySuppressed()> (SMS_MMS)
<android.hardware.location.NanoApp: int getNeededReadMemBytes()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowUnthrottledLocation()> (SMS_MMS)
<android.net.INetworkScoreService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataActivationState(int,java.lang.String)> (SMS_MMS)
<android.text.DynamicLayout: int getNumberOfBlocks()> (SMS_MMS)
<android.os.IVoldListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.Rlog: boolean isLoggable(java.lang.String,int)> (SMS_MMS)
<android.util.SparseBooleanArray: int indexOfKey(int)> (SMS_MMS)
<android.media.MediaRouter$RouteCategory: int getSupportedTypes()> (SMS_MMS)
<android.view.InputDevice: int getVendorId()> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: byte[] access$102(android.net.wifi.nl80211.PnoNetwork,byte[])> (SMS_MMS)
<android.content.Context: android.content.AutofillOptions getAutofillOptions()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView createMoreItemView()> (SMS_MMS)
<android.provider.Settings$NameValueCache: android.util.ArrayMap getStringsForPrefix(android.content.ContentResolver,java.lang.String,java.util.List)> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: int update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String[])> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String getResourceTypeName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: long getExpiry()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents(int)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int)> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.permission.IPermissionManager$Default: android.content.pm.ParceledListSlice getAllPermissionGroups(int)> (SMS_MMS)
<android.content.UndoOperation: int describeContents()> (SMS_MMS)
<android.text.Layout: float getLineRight(int)> (SMS_MMS)
<android.telecom.Log: java.lang.String getSessionId()> (SMS_MMS)
<android.telephony.SmsManager: int checkSmsShortCodeDestination(java.lang.String,java.lang.String)> (SMS_MMS)
<android.print.PrintJobInfo: android.print.PrintJobId getId()> (SMS_MMS)
<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)> (SMS_MMS)
<android.media.AudioPortEventHandler: android.os.Handler handler()> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandConfig$Builder: android.hardware.radio.RadioManager$AmBandConfig build()> (SMS_MMS)
<android.media.ExifInterface: long getDateTimeDigitized()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)> (SMS_MMS)
<android.content.res.AssetManager: boolean isUpToDate()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: int readAt(long,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getSystemCaptionsServicePackageName()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IVold$Default: java.lang.String fdeGetPassword()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getSmsReceiveCapable(boolean)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int[] getSplitFlags()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int,boolean)> (SMS_MMS)
<android.view.View: float getHorizontalScrollFactor()> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: int describeContents()> (SMS_MMS)
<android.app.WallpaperColors: android.graphics.Color getTertiaryColor()> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioTrack: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoManager$UndoState getTopRedo(android.content.UndoOwner[])> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Stub: com.android.internal.telephony.INumberVerificationCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: int getPreferredNetworkType(int)> (SMS_MMS)
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)> (SMS_MMS)
<android.view.DisplayCutout: int getSafeInsetLeft()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isHearingAidCompatibilitySupported()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndex(int)> (SMS_MMS)
<android.transition.ChangeBounds$2: android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: int access$300(android.telephony.VisualVoicemailSmsFilterSettings$Builder)> (SMS_MMS)
<android.location.GnssStatus: int getConstellationType(int)> (SMS_MMS)
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableIfaces()> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)> (SMS_MMS)
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: byte[] getEncodedCaCertificate(java.lang.String,boolean)> (SMS_MMS)
<android.content.SyncAdapterType: java.lang.String getPackageName()> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int getFlags()> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int,int)> (SMS_MMS)
<android.database.CursorWrapper: int getPosition()> (SMS_MMS)
<android.location.Address: double getLongitude()> (SMS_MMS)
<android.hardware.camera2.TotalCaptureResult: java.util.List getPartialResults()> (SMS_MMS)
<android.os.storage.StorageManager: int getProxyFileDescriptorMountPointId()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getMoveStatus(int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getReenterTransition()> (SMS_MMS)
<android.permission.IPermissionManager$Default: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities getNetworkCapabilities()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View: android.graphics.BlendMode getBackgroundTintBlendMode()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getRecognitionModes()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: int getEventType()> (SMS_MMS)
<android.net.RouteInfo: java.lang.String getInterface()> (SMS_MMS)
<android.content.pm.ShortcutManager: java.util.List getPinnedShortcuts()> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()> (SMS_MMS)
<android.media.IRemoteVolumeController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.contexthub.V1_0.PhysicalSensor: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> (SMS_MMS)
<android.text.style.TypefaceSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass valueOf(java.lang.String)> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioAttributes: int getFlags()> (SMS_MMS)
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$1: android.telephony.CarrierRestrictionRules createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.CellIdentity$1: android.telephony.CellIdentity[] newArray(int)> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: long getLongVersionCode()> (SMS_MMS)
<android.app.FragmentHostCallback: android.app.FragmentManagerImpl getFragmentManagerImpl()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int)> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableWifiRegexs()> (SMS_MMS)
<android.telephony.BarringInfo$1: android.telephony.BarringInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.filterfw.core.FieldPort: java.lang.Object getTarget()> (SMS_MMS)
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()> (SMS_MMS)
<android.app.slice.SliceItem: android.widget.RemoteViews getRemoteView()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int unlink(int,java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.TypedArray resolveAttributes(android.content.res.Resources$Theme,int[],int[])> (SMS_MMS)
<android.os.IProgressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: int hashCode()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getUiccCardsInfo(java.lang.String)> (SMS_MMS)
<android.telephony.CellSignalStrengthLte$1: android.telephony.CellSignalStrengthLte[] newArray(int)> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub: android.security.keystore.ICredstoreTokenCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma$1: void <init>()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.util.List getAllowedAssistantAdjustments(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityWcdma$1: void <init>()> (SMS_MMS)
<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.view.View getErrorView()> (SMS_MMS)
<android.hardware.lights.Light: int getOrdinal()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)> (SMS_MMS)
<android.os.IVoldMountCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: com.android.internal.inputmethod.ICharSequenceResultCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)> (SMS_MMS)
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.widget.Editor$HandleView: int getPreferredHeight()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.security.AttestedKeyPair generateKeyPair(android.content.ComponentName,java.lang.String,android.security.keystore.KeyGenParameterSpec,int)> (SMS_MMS)
<android.content.res.ApkAssets: java.lang.CharSequence getStringFromPool(int)> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient getDefaultImpl()> (SMS_MMS)
<android.metrics.LogMaker: int getCounterValue()> (SMS_MMS)
<android.widget.AbsSpinner: int getCount()> (SMS_MMS)
<android.view.textclassifier.TextLinksParams: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)> (SMS_MMS)
<android.widget.EditorTouchState: float getLastUpY()> (SMS_MMS)
<android.util.jar.StrictJarManifest: android.util.jar.StrictJarManifest$Chunk getChunk(java.lang.String)> (SMS_MMS)
<android.os.BaseBundle: int getInt(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ContextImpl: android.content.Context getApplicationContext()> (SMS_MMS)
<android.util.jar.StrictJarVerifier: boolean readCertificates()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)> (SMS_MMS)
<android.os.BaseBundle: char getChar(java.lang.String)> (SMS_MMS)
<android.view.InputDevice: android.hardware.input.InputDeviceIdentifier getIdentifier()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int calculateMarshalSize(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ChangedPackages getChangedPackages(int,int)> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.VirtualDisplay createVirtualDisplay(android.content.Context,android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)> (SMS_MMS)
<android.widget.Editor$PositionListener: int getPositionXOnScreen()> (SMS_MMS)
<android.widget.ExpandableListConnector: long getItemId(int)> (SMS_MMS)
<android.net.MacAddress: int describeContents()> (SMS_MMS)
<android.location.Location: float getAccuracy()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: int getAlpha()> (SMS_MMS)
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: byte[] getIntentFilterVerificationBackup(int)> (SMS_MMS)
<android.app.assist.AssistStructure$HtmlInfoNode: java.util.List getAttributes()> (SMS_MMS)
<android.widget.Editor$HandleView: int getIdealFingerToCursorOffset()> (SMS_MMS)
<android.app.AppOpsManager: int resolveLastRestrictedUidState(int)> (SMS_MMS)
<android.util.DisplayMetrics: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.os.Environment: java.io.File getPackageCacheDirectory()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.TextView: float getShadowDy()> (SMS_MMS)
<android.widget.AbsListView: int computeVerticalScrollOffset()> (SMS_MMS)
<android.os.IIncidentManager$Stub$Proxy: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()> (SMS_MMS)
<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)> (SMS_MMS)
<android.graphics.animation.FallbackLUTInterpolator: float getInterpolation(float)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow$PanelFeatureState: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()> (SMS_MMS)
<android.view.ViewConfiguration: int getDoubleTapMinTime()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()> (SMS_MMS)
<android.os.IClientCallback$Stub: android.os.IClientCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.prediction.AppPredictionContext: java.lang.String getUiSurface()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getObbDir()> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> (SMS_MMS)
<android.app.IServiceConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: int getType()> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.animation.PathKeyframes$FloatKeyframesBase: java.lang.Class getType()> (SMS_MMS)
<android.net.lowpan.LowpanProvision: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)> (SMS_MMS)
<android.renderscript.Int3: int elementSum()> (SMS_MMS)
<android.app.ActivityManager$RunningServiceInfo: int describeContents()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: java.util.List getSystemGestureExclusionRects()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)> (SMS_MMS)
<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager access$200(android.hardware.lights.LightsManager)> (SMS_MMS)
<android.util.apk.VerityBuilder: byte[] generateApkVerityRootHash(java.io.RandomAccessFile,java.nio.ByteBuffer,android.util.apk.SignatureInfo)> (SMS_MMS)
<android.net.Network: java.net.InetAddress getByName(java.lang.String)> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)> (SMS_MMS)
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.app.contentsuggestions.IClassificationsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.KeyEvent: int getDisplayId()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: byte[] getHashFactor(com.android.internal.widget.LockscreenCredential,int)> (SMS_MMS)
<android.animation.AnimatorSet: int getChangingConfigurations()> (SMS_MMS)
<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getBackgroundColor()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isSystemOnlyUser(android.content.ComponentName)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.Bundle getUserRestrictions(android.content.ComponentName,boolean)> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$_V9Pitohq6YI8ab2G44kCDK4K4M: int callMethod(com.android.internal.telephony.ISub)> (SMS_MMS)
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: byte[] getDigestBytes()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: boolean getRestrictBackground()> (SMS_MMS)
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.app.SystemServiceRegistry$114: android.os.incremental.IncrementalManager createService(android.app.ContextImpl)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)> (SMS_MMS)
<android.view.View: float getRightFadingEdgeStrength()> (SMS_MMS)
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String,java.nio.ByteBuffer)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: int getColorMode()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.RemoteController: long getEstimatedMediaPosition()> (SMS_MMS)
<android.content.res.CompatResources: android.content.res.ColorStateList getColorStateList(int)> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: int getRadius()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getCodeCacheDirBeforeBind(java.io.File)> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest: int describeContents()> (SMS_MMS)
<android.view.Display: android.view.Display$Mode getMode()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub: android.location.IGnssMeasurementsListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.PrecomputedText: int getParagraphEnd(int)> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()> (SMS_MMS)
<android.content.pm.IShortcutService$Default: int getIconMaxDimensions(java.lang.String,int)> (SMS_MMS)
<android.view.MotionEvent: float getYCursorPosition()> (SMS_MMS)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.Type: int getY()> (SMS_MMS)
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(java.lang.Object[],java.lang.Object)> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getThreshold()> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.Certificate getCertificate(java.lang.String,boolean)> (SMS_MMS)
<android.os.IVoldTaskListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.IKeyChainService$Default: byte[] getCertificate(java.lang.String)> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int access$002(com.android.internal.policy.PhoneWindow,int)> (SMS_MMS)
<android.hardware.SerialPort: java.lang.String getName()> (SMS_MMS)
<android.view.View$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureFeatureEnabled()> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts(boolean)> (SMS_MMS)
<android.app.ActivityManager: int getLargeMemoryClass()> (SMS_MMS)
<android.telephony.SmsCbMessage: int getMessagePriority()> (SMS_MMS)
<android.net.LinkAddress: int getPrefixLength()> (SMS_MMS)
<android.location.ICountryListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ComponentInfo: int getLogoResource()> (SMS_MMS)
<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)> (SMS_MMS)
<android.webkit.WebView: float getScale()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: android.os.Bundle getProperties()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getIdleTimeCounter()> (SMS_MMS)
<android.graphics.fonts.SystemFonts: java.util.Map getRawSystemFallbackMap()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: int access$402(android.telephony.CarrierRestrictionRules,int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: int getPreferredWideGamutColorSpaceId()> (SMS_MMS)
<android.app.LoadedApk: java.lang.String[] getSplitAppDirs()> (SMS_MMS)
<android.os.storage.StorageManager: boolean isCheckpointSupported()> (SMS_MMS)
<android.view.textclassifier.TextLanguage: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int getSpacing()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.pm.split.SplitAssetDependencyLoader: android.content.res.AssetManager getSplitAssetManager(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getIdAttribute()> (SMS_MMS)
<android.widget._$$Lambda$TextView$DJlzb7VS7J_1890Kto7GAApQDN0: java.lang.Object get()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataAllowedInVoiceCall(int)> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest getSessionParameters()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getStartPadding()> (SMS_MMS)
<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()> (SMS_MMS)
<android.widget.TextView: int getMarqueeRepeatLimit()> (SMS_MMS)
<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.VolumeRecord[] getVolumeRecords(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getOtaSpNumberSchemaForPhone(int,java.lang.String)> (SMS_MMS)
<android.app.ContextImpl: int getThemeResId()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: java.util.List getConnectedDevicesList()> (SMS_MMS)
<android.app.VrManager: boolean isVrModeEnabled()> (SMS_MMS)
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getConversationId()> (SMS_MMS)
<android.os.IVoldTaskListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: int getAlphabeticModifiers()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.Resources: java.lang.String getResourceName(int)> (SMS_MMS)
<android.media.session.ISessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)> (SMS_MMS)
<android.hardware.SystemSensorManager$BaseEventQueue: int flush()> (SMS_MMS)
<com.android.internal.database.SortCursor: long getLong(int)> (SMS_MMS)
<android.app.prediction.AppPredictionContext: int getPredictedTargetCount()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4400()> (SMS_MMS)
<android.app.WindowConfiguration: int describeContents()> (SMS_MMS)
<android.hardware.radio.ProgramList$Chunk: java.util.Set getModified()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: android.os.IBinder getApplicationWindowToken()> (SMS_MMS)
<android.telecom.TelecomManager: java.lang.String getSystemDialerPackage()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal()> (SMS_MMS)
<android.app.ContextImpl: android.os.IBinder getActivityToken()> (SMS_MMS)
<com.android.internal.app.LocalePicker: java.util.List getAllAssetLocales(android.content.Context,boolean)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.hardware.CameraInfo getCameraInfo(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> (SMS_MMS)
<android.text.DynamicLayout: int getLineTop(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VClipPath: int getNativeSize()> (SMS_MMS)
<android.app.IAlarmCompleteListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ListPopupWindow: long getSelectedItemId()> (SMS_MMS)
<android.widget.GridView: android.widget.Adapter getAdapter()> (SMS_MMS)
<android.security.KeyStore: int getLastError()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> (SMS_MMS)
<android.view.SurfaceView: float getCornerRadius()> (SMS_MMS)
<android.widget.FastScroller$5: java.lang.Integer get(android.view.View)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.net.TrafficStats: long getMobileRxPackets()> (SMS_MMS)
<android.net.LocalSocketImpl: int available()> (SMS_MMS)
<android.app.VoiceInteractor: android.app.VoiceInteractor$Request getActiveRequest(java.lang.String)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage,int)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationType()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: android.net.Uri getAddress()> (SMS_MMS)
<android.net.http.SslError: int getPrimaryError()> (SMS_MMS)
<android.os.ISystemConfig$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()> (SMS_MMS)
<android.hardware.hdmi.HdmiTvClient: int getDeviceType()> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: java.lang.String getTargetAddr()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.Set getMimeGroup(java.lang.String)> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$DelegateImpl getDelegate()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: int[] getActionIndices()> (SMS_MMS)
<android.net.ProxyInfo: int describeContents()> (SMS_MMS)
<android.location.AbstractListenerManager: void <init>()> (SMS_MMS)
<android.app.role.IRoleManager$Stub$Proxy: java.lang.String getDefaultSmsPackage(int)> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.database.CursorWrapper: boolean isAfterLast()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: android.content.pm.PackageInfo getCurrentWebViewPackage()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getTitle()> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.content.ComponentName getDefaultRespondViaMessageApplication()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int logoutUser(android.content.ComponentName)> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: int release()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Default: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)> (SMS_MMS)
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: int getReadStatus()> (SMS_MMS)
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateServiceUnchecked()> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getEncapsulationMetadataTypes()> (SMS_MMS)
<android.app.BackStackRecord: int getTransitionStyle()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges(int)> (SMS_MMS)
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()> (SMS_MMS)
<android.media.AudioManager: int getUiSoundsStreamType()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()> (SMS_MMS)
<android.telephony.SmsCbLocation$1: void <init>()> (SMS_MMS)
<android.view.ActionMode: int getType()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationHistory getNotificationHistory(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getUser()> (SMS_MMS)
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()> (SMS_MMS)
<android.app.VoiceInteractor$Request: android.content.Context getContext()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesLibraries()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getEmergencyNumberListTestMode()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.lang.String getUserIdentity()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getCsiRsrp()> (SMS_MMS)
<android.media.MediaCodec: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: byte[] getExtendedAddress()> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: int hashCode()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getImplementor()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.graphics.Point getStableDisplaySize()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.Capability: int getMode()> (SMS_MMS)
<android.net.NetworkAgentConfig: int describeContents()> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.CdmaEriInformation getCdmaEriInformation()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: int getRequestType()> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfoLte: int hashCode()> (SMS_MMS)
<android.widget.ListView: int lookForSelectablePosition(int,boolean)> (SMS_MMS)
<android.telephony.ClientRequestStats: java.lang.String getCallingPackage()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: int getPermissionFlags(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.text.style.LineHeightSpan$Standard: int getHeight()> (SMS_MMS)
<android.service.dreams.IDreamManager$Default: android.content.ComponentName getDefaultDreamComponentForUser(int)> (SMS_MMS)
<android.graphics.drawable.Drawable: int getLevel()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int getUpperLimit()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Default: android.content.pm.ParceledListSlice getAvailableRollbacks()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Default: java.lang.String getUri()> (SMS_MMS)
<android.media.midi.MidiDeviceStatus: int getOutputPortOpenCount(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)> (SMS_MMS)
<android.telephony.SmsCbMessage: int describeContents()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: long flush()> (SMS_MMS)
<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastDuration(int,int,int)> (SMS_MMS)
<android.view.SurfaceControl: android.hardware.display.DisplayedContentSample getDisplayedContentSample(android.os.IBinder,long,long)> (SMS_MMS)
<android.location.ICountryDetector$Stub$Proxy: android.location.Country detectCountry()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CarrierRestrictionRules getAllowedCarriers()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String nvReadItem(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMaxExposureCompensation()> (SMS_MMS)
<com.android.internal.policy.DecorView$2: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.os.ParcelFileDescriptor$Status: java.io.IOException asIOException()> (SMS_MMS)
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: long getDate()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getVoiceOperatorAlphaShort()> (SMS_MMS)
<android.os.Build$Partition: java.lang.String getName()> (SMS_MMS)
<android.print.PrintJob: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()> (SMS_MMS)
<android.media.MediaSyncEvent: int getAudioSessionId()> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> (SMS_MMS)
<android.os.BaseBundle: boolean isDefinitelyEmpty()> (SMS_MMS)
<android.view.View: android.view.animation.Animation getAnimation()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfoNr: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: int getUidPolicy(int)> (SMS_MMS)
<android.media.session.MediaSession$Token: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataState()> (SMS_MMS)
<android.os.VibrationAttributes: int getFlags()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()> (SMS_MMS)
<android.telecom.PhoneAccount: android.net.Uri getSubscriptionAddress()> (SMS_MMS)
<android.telephony.TelephonyManager: com.android.internal.telephony.CellNetworkScanResult getAvailableNetworks()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getFlashlightTurnedOnTimer()> (SMS_MMS)
<android.telephony.SmsMessage: int getStatus()> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: android.app.IApplicationThread getIApplicationThread()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: byte[] getMacAddress()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: android.graphics.drawable.Icon getBubbleIcon()> (SMS_MMS)
<android.media.MediaCodecInfo$EncoderCapabilities: android.util.Range getComplexityRange()> (SMS_MMS)
<android.hardware.usb.UsbAccessory: int describeContents()> (SMS_MMS)
<android.media.MicrophoneInfo: float getMinSpl()> (SMS_MMS)
<android.os.IRemoteCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.List getSession2Tokens(int)> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getVideoStateFromImsCallProfile(android.telephony.ims.ImsCallProfile)> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub: android.view.IRecentsAnimationController getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)> (SMS_MMS)
<android.app.assist.AssistStructure: int getFlags()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: float getCurrentAnimatorScale()> (SMS_MMS)
<android.content.ContentResolver$MimeTypeInfo: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.os.IUserManager$Default: int[] getProfileIds(int,boolean)> (SMS_MMS)
<android.app.slice.SliceItem: java.lang.String getFormat()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)> (SMS_MMS)
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)> (SMS_MMS)
<android.app.Fragment: android.app.SharedElementCallback getExitTransitionCallback()> (SMS_MMS)
<android.widget.SelectionActionModeHelper$TextClassificationAsyncTask: android.widget.SelectionActionModeHelper$SelectionResult doInBackground(java.lang.Void[])> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable5gNonDFSChannels()> (SMS_MMS)
<android.view.View: int getScrollBarSize()> (SMS_MMS)
<android.app.IWindowToken$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.SensorPrivacyManager: boolean isSensorPrivacyEnabled()> (SMS_MMS)
<android.media.MediaCas: android.hardware.cas.V1_0.IMediaCasService getService()> (SMS_MMS)
<android.content.SyncRequest: java.lang.String getProvider()> (SMS_MMS)
<android.app.WindowConfiguration: int getWindowingMode()> (SMS_MMS)
<android.os.Temperature: int hashCode()> (SMS_MMS)
<android.view.IRecentsAnimationController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.SystemClock$4: long millis()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: boolean isHdmiCecVolumeControlEnabled()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ContentProviderProxy: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isInstantApp(java.lang.String)> (SMS_MMS)
<android.widget.Magnifier: android.graphics.Point getSourcePosition()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.graphics.Typeface loadFont(android.content.res.Resources,android.util.TypedValue,int)> (SMS_MMS)
<android.graphics.ParcelableColorSpace: int describeContents()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int access$5600(long)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfilePackages(android.content.ComponentName)> (SMS_MMS)
<android.os.RecoverySystem$1: int read()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum$MarshalerEnum: int getNativeSize()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Default: java.lang.String getSerial(java.lang.String)> (SMS_MMS)
<android.view.Display$Mode: int hashCode()> (SMS_MMS)
<android.app.IBackupAgent$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: int getContentClass()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getAllSessions(int)> (SMS_MMS)
<android.text.Layout: int getHeight()> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BaseBundle: java.util.ArrayList getStringArrayList(java.lang.String)> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.TouchCalibration getTouchCalibration(java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: boolean getAutoExposureLock()> (SMS_MMS)
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_5.CellInfo,long)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: java.util.List extractAsyncOps(java.lang.String)> (SMS_MMS)
<android.app.role.IRoleManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: android.util.Size getSize()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: char last()> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String[] getLocales()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: android.view.View getCustomView()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int getClientAudioSource()> (SMS_MMS)
<android.media.AudioTrack: float getMinVolume()> (SMS_MMS)
<android.hardware.location.NanoApp: java.lang.String getPublisher()> (SMS_MMS)
<android.util.MergedConfiguration: android.content.res.Configuration getMergedConfiguration()> (SMS_MMS)
<android.telephony.CallForwardingInfo: int describeContents()> (SMS_MMS)
<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()> (SMS_MMS)
<android.os.IThermalService$Default: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)> (SMS_MMS)
<android.content.pm.Signature: java.security.PublicKey getPublicKey()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)> (SMS_MMS)
<android.view.IPinnedStackController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.MediaFormat$PrefixedKeySetWithPrefixRemoved: java.lang.String mapItemToKey(java.lang.String)> (SMS_MMS)
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForUser(java.util.UUID,android.os.UserHandle)> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Default: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int,int,java.lang.String)> (SMS_MMS)
<android.filterfw.core.GLFrame: float[] getFloats()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: java.lang.String getDeviceOwnerInfo()> (SMS_MMS)
<android.media.session.PlaybackState: int getState()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: int getColorMode()> (SMS_MMS)
<android.media.IVolumeController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: int describeContents()> (SMS_MMS)
<android.webkit.WebMessage: java.lang.String getData()> (SMS_MMS)
<android.content.ContentProvider: int enforceWritePermissionInner(android.net.Uri,java.lang.String,java.lang.String,android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: java.lang.CharSequence getNonLocalizedLabel()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfoTdscdma: int hashCode()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int getEnd()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForConsumptionEnd()> (SMS_MMS)
<android.content.pm.FeatureGroupInfo: int describeContents()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List getAllowedCarriers()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryEventStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.telephony.ims.ImsRcsManager: boolean isAvailable(int)> (SMS_MMS)
<android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.backup.BackupManager: boolean isBackupEnabled()> (SMS_MMS)
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoListForDomain(int)> (SMS_MMS)
<android.os.BasicShellCommandHandler: int handleDefaultCommands(java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getApexDirectory()> (SMS_MMS)
<android.os.storage.StorageVolume: int getFatVolumeId()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub: android.view.IRemoteAnimationRunner getDefaultImpl()> (SMS_MMS)
<android.os.BatteryStats$Timer: long getCurrentDurationMsLocked(long)> (SMS_MMS)
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getSimCallManagerForUser(int)> (SMS_MMS)
<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)> (SMS_MMS)
<android.text.MeasuredParagraph: char[] getChars()> (SMS_MMS)
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2)> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getBasePackageName()> (SMS_MMS)
<android.app.PictureInPictureParams: float getAspectRatio()> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String getZoneId()> (SMS_MMS)
<android.app.WallpaperInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.app.SearchableInfo: int getVoiceLanguageModeId()> (SMS_MMS)
<android.os.IClientCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryMedia()> (SMS_MMS)
<com.android.internal.os.RpmStats: com.android.internal.os.RpmStats$PowerStateSubsystem getSubsystem(java.lang.String)> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: int hashCode()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.RenderNode: float getPivotX()> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: long getAsLong()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo$ManufactureDate: int describeContents()> (SMS_MMS)
<com.android.internal.os.BackgroundThread: android.os.Handler getHandler()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getForegroundActivityTimer()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getLogo()> (SMS_MMS)
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)> (SMS_MMS)
<android.app.LoadedApk: java.lang.String[] getOverlayDirs()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getScrollDeltaY()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float[] getCornerRadii()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.view.contentcapture.IDataShareWriteAdapter getDefaultImpl()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getDirection()> (SMS_MMS)
<android.net.RouteInfo: int describeContents()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementExitTransition()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: int getUid()> (SMS_MMS)
<android.text.DynamicLayout: int[] getBlockIndices()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int,int,int)> (SMS_MMS)
<android.os.IRecoverySystem$Stub: android.os.IRecoverySystem asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.TaskInfo: android.window.WindowContainerToken getToken()> (SMS_MMS)
<android.media.AudioGain: int defaultValue()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.service.vr.IPersistentVrStateCallbacks asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.V1_0.CdmaSignalStrength: int hashCode()> (SMS_MMS)
<android.app.ActivityOptions: java.lang.String getPackageName()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isAdvancedCallingSettingEnabled()> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager: int parseHistoricalMode(java.lang.String)> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: int describeContents()> (SMS_MMS)
<android.hardware.location.NanoAppState: int describeContents()> (SMS_MMS)
<android.view.ViewDebug$PropertyInfo: android.view.ViewDebug$PropertyInfo forField(java.lang.reflect.Field,java.lang.Class)> (SMS_MMS)
<android.os.IInstalld$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.PrintAttributes$Resolution: int getVerticalDpi()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.provider.FontsContract$FontFamilyResult: android.provider.FontsContract$FontInfo[] getFonts()> (SMS_MMS)
<android.hardware.radio.ProgramSelector$Identifier: long getValue()> (SMS_MMS)
<com.android.internal.os.PowerProfile: int getNumCpuClusters()> (SMS_MMS)
<android.provider.FontsContract$FontInfo: int getWeight()> (SMS_MMS)
<android.telephony.ServiceState: int getCssIndicator()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub: android.hardware.display.IDisplayManagerCallback getDefaultImpl()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getProcessesInErrorState()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.net.wifi.nl80211.IApInterfaceEventCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: int getNextIndexToLoad()> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.String getResourcePackageName(int)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int tune(int,int)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.util.List GetClientInterfaces()> (SMS_MMS)
<android.content.pm.InstallSourceInfo: java.lang.String getInstallingPackageName()> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub: android.hardware.location.IContextHubCallback getDefaultImpl()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long forceSecurityLogs()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int onDeviceOffBody()> (SMS_MMS)
<android.security.keymaster.KeymasterCertificateChain: java.util.List getCertificates()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable$LayerState: int access$202(android.graphics.drawable.LayerDrawable$LayerState,int)> (SMS_MMS)
<android.os.UserManager: boolean isUserAGoat()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Default: java.lang.String getInterfaceName()> (SMS_MMS)
<android.util.XmlPullAttributes: int getStyleAttribute()> (SMS_MMS)
<android.content.Context: java.util.concurrent.Executor getMainExecutor()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$600(int)> (SMS_MMS)
<android.content.ContentResolver: android.content.IContentService getContentService()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: int getStreamMinVolumeInt(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getClassLoaderName()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] getServerParams()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfiguration: android.util.Size getSize()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getCacheQuotaBytes(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()> (SMS_MMS)
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)> (SMS_MMS)
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean,android.net.Uri,android.net.Uri)> (SMS_MMS)
<android.app.trust.ITrustManager$Stub: android.app.trust.ITrustManager getDefaultImpl()> (SMS_MMS)
<android.view.IInputMonitorHost$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IVoldMountCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsCbLocation: int getCid()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: float getCurrentFraction()> (SMS_MMS)
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)> (SMS_MMS)
<com.android.internal.telephony._$$Lambda$SmsApplication$5KAxbm71Dll9xmT5zeXi0i27A10: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: int getCount()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int hashCode()> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.pm.UserInfo getCurrentUser()> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub: com.android.internal.statusbar.IStatusBar getDefaultImpl()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableAod()> (SMS_MMS)
<android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.RemoteCallbackList: java.lang.Object getRegisteredCallbackCookie(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.BaseBundle: long[] getLongArray(java.lang.String)> (SMS_MMS)
<android.app.LoadedApk: java.lang.String[] getSplitPaths(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub: android.app.timedetector.ITimeDetectorService getDefaultImpl()> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.InsetsSource: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getPopulatedNotificationChannelGroupForPackage(java.lang.String,int,java.lang.String,boolean)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int getPasswordType()> (SMS_MMS)
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodListAsUser(int)> (SMS_MMS)
<android.view.Display: int getOwnerUid()> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isCallerApplicationRestrictionsManagingPackage()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()> (SMS_MMS)
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: android.os.UserHandle getUser()> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: long getMessageSize()> (SMS_MMS)
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()> (SMS_MMS)
<android.view.WindowInsets: int getStableInsetLeft()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getDriverVersion()> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.RcsContactUceCapability: android.net.Uri getContactUri()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)> (SMS_MMS)
<android.view.ViewConfiguration: int getJumpTapTimeout()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.util.Date getNotBefore()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)> (SMS_MMS)
<android.os.IMessenger$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: double getElevationUncertaintyInDeg()> (SMS_MMS)
<android.location.GnssStatus: int getSvid(int)> (SMS_MMS)
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableLaunchBoost()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getIdleTimeMillis()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()> (SMS_MMS)
<com.android.internal.view.menu.StandardMenuPopup: android.widget.ListView getListView()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkRequest getDefaultRequest()> (SMS_MMS)
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: int generateKeyPair(java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.content.pm.ProviderInfoList: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo: int getOverrideNetworkType()> (SMS_MMS)
<android.view.View: boolean getFitsSystemWindows()> (SMS_MMS)
<android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)> (SMS_MMS)
<com.android.internal.database.SortCursor: byte[] getBlob(int)> (SMS_MMS)
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> (SMS_MMS)
<android.animation.PathKeyframes: java.lang.Class getType()> (SMS_MMS)
<android.telephony.euicc.DownloadableSubscription: java.lang.String getConfirmationCode()> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.lang.String getCountryIso()> (SMS_MMS)
<android.content.pm.ShortcutManager: long getRateLimitResetTime()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<com.android.internal.telephony.IOns$Default: boolean isEnabled(java.lang.String)> (SMS_MMS)
<android.content.om.OverlayInfo: java.lang.String getTargetPackageName()> (SMS_MMS)
<android.content.pm.ShortcutManager$ShareShortcutInfo: android.content.ComponentName getTargetComponent()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getMaxPower()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)> (SMS_MMS)
<android.content.res.ApkAssets: android.content.om.OverlayableInfo getOverlayableInfo(java.lang.String)> (SMS_MMS)
<android.os.IInstalld$Default: long[] getExternalSize(java.lang.String,int,int,int[])> (SMS_MMS)
<com.android.internal.database.SortCursor: int getCount()> (SMS_MMS)
<android.app.SyncNotedAppOp: java.lang.String getOp()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: boolean isRegistered()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getMaxDrainedPower()> (SMS_MMS)
<android.app.ActivityOptions: int getHeight()> (SMS_MMS)
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)> (SMS_MMS)
<android.media.tv.TvStreamConfig: int access$402(android.media.tv.TvStreamConfig,int)> (SMS_MMS)
<android.widget.LinearLayout: int getShowDividers()> (SMS_MMS)
<android.graphics.drawable.shapes.Shape: float getHeight()> (SMS_MMS)
<android.view.IWindow$Stub: android.view.IWindow getDefaultImpl()> (SMS_MMS)
<android.location.LocationProvider: int getAccuracy()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getRowCount()> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfo: int hashCode()> (SMS_MMS)
<android.widget.Toolbar: int getCurrentContentInsetEnd()> (SMS_MMS)
<android.text.MeasuredParagraph: float getCharWidthAt(int)> (SMS_MMS)
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()> (SMS_MMS)
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()> (SMS_MMS)
<android.app.Activity: android.app.ActionBar getActionBar()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.NotificationManager: int zenModeToInterruptionFilter(int)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: int getBarringType()> (SMS_MMS)
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()> (SMS_MMS)
<android.location.GnssNavigationMessage: int getSvid()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.WebAddress: int getPort()> (SMS_MMS)
<android.telephony.NetworkScanRequest: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel: int hashCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: java.lang.String getProfileName()> (SMS_MMS)
<android.graphics.drawable.RippleBackground$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.content.Intent: int getContentUserHint()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int removeSubInfo(java.lang.String,int)> (SMS_MMS)
<android.os.image.DynamicSystemManager: android.gsi.GsiProgress getInstallationProgress()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int[] access$100()> (SMS_MMS)
<android.view.textclassifier.ConversationAction: java.lang.CharSequence getTextReply()> (SMS_MMS)
<android.content.res.AssetManager: int findCookieForPath(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isIdle()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getLockTaskFeatures(android.content.ComponentName)> (SMS_MMS)
<android.widget.ListView: int getDividerHeight()> (SMS_MMS)
<android.telecom.TelecomAnalytics: java.util.List getCallAnalytics()> (SMS_MMS)
<com.android.telephony.Rlog: int w(java.lang.String,java.lang.Throwable)> (SMS_MMS)
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: android.telephony.SmsCbMessage parseBroadcastSms(java.lang.String,int,int)> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher getDefaultImpl()> (SMS_MMS)
<android.view.textclassifier.TextLanguage: java.lang.String getId()> (SMS_MMS)
<android.view.WindowInsets: int getSystemWindowInsetRight()> (SMS_MMS)
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)> (SMS_MMS)
<android.net.wifi.nl80211.RadioChainInfo: int hashCode()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: byte[] getMetadataById(int,byte[])> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getEffectsSuppressor()> (SMS_MMS)
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: java.util.List getConversation()> (SMS_MMS)
<android.telecom.TelecomManager: int getCallState()> (SMS_MMS)
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock getLinearBlock()> (SMS_MMS)
<android.text.style.CharacterStyle$Passthrough: android.text.style.CharacterStyle getUnderlying()> (SMS_MMS)
<android.media.AudioFocusInfo: int getFlags()> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Rect getBottomBound()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.feature._$$Lambda$RcsFeature$RcsFeatureBinder$Ca_Lrg0AjuEm0MywLfQlW_OLbac: java.lang.Object get()> (SMS_MMS)
<com.android.internal.view.IInputMethod$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.hardware.location.ContextHubClientCallback,java.util.concurrent.Executor)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getEndPadding()> (SMS_MMS)
<android.os.IDumpstateListener$Stub: android.os.IDumpstateListener getDefaultImpl()> (SMS_MMS)
<android.view.KeyboardShortcutGroup: int describeContents()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getSsRsrq()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: int getOpacity()> (SMS_MMS)
<android.net.nsd.NsdManager: com.android.internal.util.AsyncChannel access$000(android.net.nsd.NsdManager)> (SMS_MMS)
<android.print.IPrintManager$Default: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int getWidth()> (SMS_MMS)
<android.media.AudioTrack: int playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getStableInsets()> (SMS_MMS)
<android.database.sqlite.SQLiteConnection: byte[] access$400()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface(java.lang.String)> (SMS_MMS)
<android.telephony.SmsCbMessage: int getMaximumWaitingDuration()> (SMS_MMS)
<android.media.IAudioService$Default: java.util.List getDevicesForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()> (SMS_MMS)
<android.content.ContentResolver: int getUserId()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: int getCallType()> (SMS_MMS)
<android.media.MediaCodecInfo$AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: float getAnimationScale(int)> (SMS_MMS)
<android.graphics.Paint: float getRunAdvance(char[],int,int,int,int,boolean,int)> (SMS_MMS)
<android.view.WindowInsetsAnimation: float getFraction()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalY(int,int)> (SMS_MMS)
<android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$102(com.android.internal.app.MessageSamplingConfig)> (SMS_MMS)
<android.os.Environment: java.io.File getDataDirectory(java.lang.String)> (SMS_MMS)
<android.app.NotificationManager: java.util.List getAllowedAssistantAdjustments()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeDirectories(int,java.lang.String)> (SMS_MMS)
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.drm.DrmManagerClient: int access$400(android.drm.DrmManagerClient,int)> (SMS_MMS)
<android.location.GpsMeasurement: float getCarrierFrequencyInHz()> (SMS_MMS)
<android.ddm.DdmHandleAppName: android.ddm.DdmHandleAppName$Names getNames()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getJobStats()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()> (SMS_MMS)
<android.content.pm.IDataLoader$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.Gravity: int getAbsoluteGravity(int,int)> (SMS_MMS)
<android.telephony.CarrierConfigManager$Ims: android.os.PersistableBundle access$200()> (SMS_MMS)
<android.print.PrintAttributes$Resolution: int getHorizontalDpi()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub: android.content.pm.IPackageInstallerCallback getDefaultImpl()> (SMS_MMS)
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)> (SMS_MMS)
<android.text.FontConfig$Family: java.lang.String getName()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.app.job.JobParameters: android.net.Uri[] getTriggeredContentUris()> (SMS_MMS)
<android.os.IUserManager$Default: long getUserStartRealtime()> (SMS_MMS)
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()> (SMS_MMS)
<android.telephony.UiccSlotInfo: boolean isRemovable()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)> (SMS_MMS)
<android.widget.AbsListView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: int getPreferredSmsSubscription()> (SMS_MMS)
<android.permission.PermissionManager: java.util.Set getAutoRevokeExemptionGrantedPackages()> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int getTimeSeconds()> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Canvas: int getMaximumBitmapHeight()> (SMS_MMS)
<android.app.job.IJobCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.ExifInterface: long getDateTime()> (SMS_MMS)
<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.euicc.EuiccManager: boolean isSupportedCountry(java.lang.String)> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.lang.String peekNextArg()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()> (SMS_MMS)
<android.telecom.TelecomManager: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewRootInsetsControllerHost: int getSystemBarsBehavior()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Bundle: int getSize()> (SMS_MMS)
<android.app.timezone.DistroFormatVersion: int hashCode()> (SMS_MMS)
<android.widget.ListPopupWindow: android.view.View getAnchorView()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.printservice.recommendation.IRecommendationsChangeListener getDefaultImpl()> (SMS_MMS)
<android.view.View: android.view.View getSelfOrParentImportantForA11y()> (SMS_MMS)
<android.app.ActivityManager$RecentTaskInfo: int describeContents()> (SMS_MMS)
<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)> (SMS_MMS)
<android.app.servertransaction.ResumeActivityItem: int getTargetState()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.media.Tokenizer: int access$112(android.media.Tokenizer,int)> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.StatsServiceManager$ServiceRegisterer: android.os.IBinder getOrThrow()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getMcc()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()> (SMS_MMS)
<android.telecom.PhoneAccountHandle: int hashCode()> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List access$1000(android.media.tv.TvInputManager)> (SMS_MMS)
<android.media.VolumeShaper$State: int describeContents()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getAttributes()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getFullPowerWhitelist()> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: long getUidStats(int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.util.SparseBooleanArray: int indexOfValue(boolean)> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub: android.app.IRequestFinishCallback getDefaultImpl()> (SMS_MMS)
<android.view.ViewConfiguration: int getHoverTooltipShowTimeout()> (SMS_MMS)
<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)> (SMS_MMS)
<android.view.View$ForegroundInfo: int access$2600(android.view.View$ForegroundInfo)> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: boolean archiveStoredConversation(java.lang.String,long,boolean)> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.renderscript.Byte4: byte get(int)> (SMS_MMS)
<android.location.ILocationManager$Default: java.util.List getAllProviders()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: int getLocationMode()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.CameraDevice getDevice()> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: int getAlpha()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest()> (SMS_MMS)
<android.print.PrintManager: java.util.List getPrintServices(int)> (SMS_MMS)
<com.android.internal.widget.ScrollBarUtils: int getThumbOffset(int,int,int,int,int)> (SMS_MMS)
<android.net.NetworkTemplate: int getMatchRule()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileCallerIdDisabledForUser(int)> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getTasks(int)> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ActivityOptions: int getRotationAnimationHint()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: boolean isTitleTruncated()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View: int getHeight()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: boolean isInputMethodPickerShown()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: boolean isTerminal()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()> (SMS_MMS)
<android.telephony.UiccCardInfo: int describeContents()> (SMS_MMS)
<android.widget.inline.InlinePresentationSpec: int hashCode()> (SMS_MMS)
<android.print.PrintDocumentInfo: long getDataSize()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfilePackages(android.content.ComponentName)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)> (SMS_MMS)
<android.app.IAlarmManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.app.DirectAction: android.os.IBinder getActivityId()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getTargetSdkVersion()> (SMS_MMS)
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()> (SMS_MMS)
<android.media.AudioManager: java.util.ArrayList access$200(android.media.AudioManager)> (SMS_MMS)
<android.inputmethodservice.InputMethodService: int getBackDisposition()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int unloadSoundModel(android.os.ParcelUuid)> (SMS_MMS)
<android.view.IWindowId$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getTemporaryMetaData()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.ISessionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.backup.BackupManager: java.lang.String getDataManagementLabel(java.lang.String)> (SMS_MMS)
<android.app.admin.PasswordMetrics: int determineComplexity()> (SMS_MMS)
<android.animation.AnimatorSet$SeekState: long getPlayTime()> (SMS_MMS)
<android.app.NotificationManager: java.util.List getNotificationChannelGroups()> (SMS_MMS)
<android.widget.AbsListView: float getTopFadingEdgeStrength()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getCurrentPowerRole()> (SMS_MMS)
<android.content.ContentProvider: android.os.UserHandle getUserHandleFromUri(android.net.Uri)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isMvnoMatched(int,int,java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDataDir(android.content.pm.parsing.ParsingPackageRead,int)> (SMS_MMS)
<android.view.autofill.AutofillValue: int getListValue()> (SMS_MMS)
<android.renderscript.Int4: int length()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getVisibility()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.opengl.GLLogWrapper$PointerInfo: int getStride()> (SMS_MMS)
<android.media.AudioFocusRequest: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.media.tv.TvContentRatingSystemInfo: int describeContents()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()> (SMS_MMS)
<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)> (SMS_MMS)
<android.app.Notification$Action: int getSemanticAction()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean isRequestPinAppWidgetSupported()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerLnbRequest: int describeContents()> (SMS_MMS)
<android.util.SparseBooleanArray: int keyAt(int)> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getMaxTextEms()> (SMS_MMS)
<android.location.GnssMeasurement: long getReceivedSvTimeUncertaintyNanos()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int nextTag()> (SMS_MMS)
<android.hardware.camera2.legacy.BurstHolder: int getRequestId()> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataActivity()> (SMS_MMS)
<android.location.GnssNavigationMessage: int getMessageId()> (SMS_MMS)
<android.os.IThermalEventListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> (SMS_MMS)
<android.os.LocaleList: java.util.Locale getFirstMatchWithEnglishSupported(java.lang.String[])> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient getDefaultImpl()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getDisplayId(android.os.IBinder)> (SMS_MMS)
<android.debug.AdbManager: boolean isAdbWifiQrSupported()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.lang.String getPath()> (SMS_MMS)
<android.hardware.display.BrightnessCorrection: int describeContents()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.media.session.MediaController: android.media.session.MediaController$TransportControls getTransportControls()> (SMS_MMS)
<android.security.KeyStore: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.print.IWriteResultCallback$Stub: android.print.IWriteResultCallback getDefaultImpl()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> (SMS_MMS)
<android.animation.AnimatorSet$3: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.pm.ParceledListSlice getHistoricalProcessExitReasons(java.lang.String,int,int,int)> (SMS_MMS)
<android.content.res.ResourcesKey: int hashCode()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerAppOnCallingUser(java.lang.String)> (SMS_MMS)
<android.graphics.Paint: java.lang.String getFontFeatureSettings()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()> (SMS_MMS)
<android.app.AppOpsManager: android.app.AppOpsManager$PausedNotedAppOpsCollection pauseNotedAppOpsCollection()> (SMS_MMS)
<android.location.Country: int hashCode()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.view.ViewStructure$HtmlInfo getHtmlInfo()> (SMS_MMS)
<android.telephony.TelephonyManager: int changeIccLockPassword(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getFormat()> (SMS_MMS)
<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: boolean isStateful()> (SMS_MMS)
<android.widget.ListPopupWindow: int getSelectedItemPosition()> (SMS_MMS)
<android.os.PowerManager$1: java.lang.Boolean recompute(java.lang.Void)> (SMS_MMS)
<android.app.Notification$WearableExtender: java.util.List getPages()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.Network getActiveNetworkForUid(int,boolean)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getAllowedCapturePolicy()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: int getMaxShortcutCountPerActivity(java.lang.String,int)> (SMS_MMS)
<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo[] newArray(int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isWindowTraceEnabled()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.VerifiedMotionEvent: int hashCode()> (SMS_MMS)
<android.webkit.WebView$PrivateAccess: float getHorizontalScrollFactor()> (SMS_MMS)
<android.view.View: float getElevation()> (SMS_MMS)
<android.telephony._$$Lambda$CbGeoUtils$v_2S4s6H4lfdnoWt9tuWcyrnKkw: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getSignatureAlgorithmJcaSignatureAlgorithm(int)> (SMS_MMS)
<android.view.View: int getScrollBarDefaultDelayBeforeFade()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int checkOperationRaw(int,int,java.lang.String)> (SMS_MMS)
<android.widget.RadioGroup: int access$400(android.widget.RadioGroup)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getIccAuthentication(int,int,java.lang.String)> (SMS_MMS)
<android.media.MediaPlayer$DrmInfo: java.util.UUID[] getSupportedSchemes()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.NetworkStatsHistory: int getIndexBefore(long)> (SMS_MMS)
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.lang.String getSeedAccountType()> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect getSafeInsets()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean disableDataConnectivity()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getRightPadding()> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.net.WifiKey: int describeContents()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)> (SMS_MMS)
<android.os.IIncidentCompanion$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBlockCountRange()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.BoringLayout: int getParagraphDirection(int)> (SMS_MMS)
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getDeviceOwnerName()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalY(int)> (SMS_MMS)
<android.content.pm.VerifierDeviceIdentity: int describeContents()> (SMS_MMS)
<android.os.WorkSource$WorkChain: int describeContents()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub: android.app.IActivityTaskManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub: android.os.IIncidentAuthListener getDefaultImpl()> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getResolution()> (SMS_MMS)
<android.widget.CheckBox: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getInFileDescriptor()> (SMS_MMS)
<android.app.admin.PasswordMetrics: int hashCode()> (SMS_MMS)
<android.app.role.IRoleController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IShortcutService$Default: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)> (SMS_MMS)
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.GridView: int getRequestedHorizontalSpacing()> (SMS_MMS)
<android.net.TrafficStats: long getMobileTcpRxPackets()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int getActivityWindowingMode()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getDataEnabled(int)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int describeContents()> (SMS_MMS)
<android.app.prediction.AppTarget: android.app.prediction.AppTargetId getId()> (SMS_MMS)
<android.os.SystemProperties: int access$200(long,int)> (SMS_MMS)
<android.transition.Transition: java.util.List getTargetIds()> (SMS_MMS)
<android.telephony.UiccSlotInfo$1: void <init>()> (SMS_MMS)
<android.database.CursorWrapper: boolean isClosed()> (SMS_MMS)
<android.hardware.ISerialManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.webkit.WebView: int findAll(java.lang.String)> (SMS_MMS)
<android.telephony.RadioAccessSpecifier: int hashCode()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getCallId()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getSaturationWeight()> (SMS_MMS)
<android.hardware.camera2.utils.SizeAreaComparator: int compare(android.util.Size,android.util.Size)> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: com.android.internal.telephony.euicc.IEuiccCardController getDefaultImpl()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.ColorStateList: int access$000(android.content.res.ColorStateList)> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.incremental.IIncrementalServiceConnector asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub: android.content.IOnPrimaryClipChangedListener getDefaultImpl()> (SMS_MMS)
<com.google.android.mms.pdu.CharacterSets: java.lang.String getMimeName(int)> (SMS_MMS)
<android.telecom.TelecomManager: android.content.ComponentName getDefaultPhoneApp()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int getCondition()> (SMS_MMS)
<android.telephony.SubscriptionManager: void addSubscriptionInfoRecord(java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.app.backup.FullBackupDataOutput: int getTransportFlags()> (SMS_MMS)
<android.app.DirectAction: android.content.LocusId getLocusId()> (SMS_MMS)
<android.os.UserManager: boolean isDemoUser()> (SMS_MMS)
<android.os.Environment: java.io.File getStorageDirectory()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: int describeContents()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)> (SMS_MMS)
<android.os.ParcelableParcel: android.os.Parcel getParcel()> (SMS_MMS)
<android.content.pm.LauncherApps$AppUsageLimit: long getUsageRemaining()> (SMS_MMS)
<android.hardware.display.BrightnessCorrection: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCarrierIdFromMccMnc(java.lang.String)> (SMS_MMS)
<android.widget.Editor: android.graphics.drawable.Drawable getCursorDrawable()> (SMS_MMS)
<android.view.autofill.AutofillValue: int hashCode()> (SMS_MMS)
<android.app.IUidObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getCallingPackage(android.os.IBinder)> (SMS_MMS)
<android.window.WindowContainerTransaction: int describeContents()> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)> (SMS_MMS)
<android.text.HtmlToSpannedConverter$Foreground: int access$1500(android.text.HtmlToSpannedConverter$Foreground)> (SMS_MMS)
<android.location.GpsMeasurementsEvent: java.util.Collection getMeasurements()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isDataConnectivityPossible(int)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getIndeterminateTintMode()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.telephony.BarringInfo$1: void <init>()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: int getSmallerDimensionUpperLimit()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int transact(android.os.Bundle)> (SMS_MMS)
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()> (SMS_MMS)
<android.view.DragEvent: int describeContents()> (SMS_MMS)
<android.app.Activity: java.lang.String getLocalClassName()> (SMS_MMS)
<android.app.PendingIntent: java.lang.String getTargetPackage()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Point getAppTaskThumbnailSize()> (SMS_MMS)
<android.hardware.face.IFaceService$Default: java.util.List getEnrolledFaces(int,java.lang.String)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int getParameter(java.util.UUID,int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isApnMetered(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int lambda$createSubscriptionGroup$7(java.lang.Integer)> (SMS_MMS)
<android.media.AudioFocusRequest: int getFocusGain()> (SMS_MMS)
<android.hardware.display.BrightnessCorrection$ScaleAndTranslateLog: int hashCode()> (SMS_MMS)
<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers(boolean,boolean)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getName()> (SMS_MMS)
<android.content.ContentProvider$Transport: int checkUriPermission(java.lang.String,java.lang.String,android.net.Uri,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getPackagesWithCarrierPrivileges(int)> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View$7: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: boolean getSeparateProfileChallengeEnabled(int)> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> (SMS_MMS)
<android.view.IWindowManager$Default: int getDockedStackSide()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getProfileId()> (SMS_MMS)
<android.view.autofill.AutofillId: int getViewId()> (SMS_MMS)
<android.app.blob.LeaseInfo: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraLooper: android.hardware.Camera getCamera()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getShape()> (SMS_MMS)
<android.media.AudioManager: int getRingerModeInternal()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultDataPhoneId()> (SMS_MMS)
<android.content.ContentProvider: boolean isTemporary()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: int[] signalPoll()> (SMS_MMS)
<android.view.ViewDebug$HardwareCanvasProvider: android.graphics.Canvas getCanvas(android.view.View,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int isMultiSimSupported(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getPackageCodePath()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPermissionPolicy(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.LauncherApps: android.content.pm.LauncherApps$PinItemRequest getPinItemRequest(android.content.Intent)> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int getStreamType()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.view.accessibility.IWindowMagnificationConnection getDefaultImpl()> (SMS_MMS)
<android.location.GeocoderParams: java.util.Locale getLocale()> (SMS_MMS)
<android.app.assist.AssistStructure: int access$202(android.app.assist.AssistStructure,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: android.net.Uri addSubscriptionInfoRecord(java.lang.String,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getPidStats()> (SMS_MMS)
<android.widget.TextView: float getShadowRadius()> (SMS_MMS)
<android.content.res.AssetManager: java.util.Map getOverlayableMap(java.lang.String)> (SMS_MMS)
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: java.util.List getTargetUserProfiles(java.lang.String)> (SMS_MMS)
<android.renderscript.FieldPacker: int subI32()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getContentId()> (SMS_MMS)
<android.webkit.WebView: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getImplicitPermissions()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.app.Person[] getPersons()> (SMS_MMS)
<android.renderscript.Double3: int length()> (SMS_MMS)
<android.app.contentsuggestions.ContentClassification: int describeContents()> (SMS_MMS)
<android.app.AppOpsManager: int strDebugOpToOp(java.lang.String)> (SMS_MMS)
<android.media.AudioAttributes: int getVolumeControlStream()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$200(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationLoaders: java.lang.ClassLoader getSharedLibraryClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)> (SMS_MMS)
<android.app.IStopUserCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.MidiPortImpl: int getPacketType(byte[],int)> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentityLte: int hashCode()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.InputDevice: int getProductId()> (SMS_MMS)
<android.view.animation.BounceInterpolator: float getInterpolation(float)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateBluetoothControllerActivityLocked()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getBytesPerSample()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)> (SMS_MMS)
<android.view.View: int getBottomPaddingOffset()> (SMS_MMS)
<android.media.AudioManager: int getMode()> (SMS_MMS)
<android.filterpacks.videosrc.MediaSource: int access$402(android.filterpacks.videosrc.MediaSource,int)> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int hashCode()> (SMS_MMS)
<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getSpanEndCache()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaFormat$FilteredMappedKeySet: java.util.Iterator iterator()> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.usb.UsbDevice: boolean getHasVideoCapture()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.internal.hidl.safe_union.V1_0.Monostate: int hashCode()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledRunnable asRunnable()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: boolean isHighTextContrastEnabled()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getDeviceOwnerLockScreenInfo()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCallBarringForServiceClass(int,int)> (SMS_MMS)
<android.view.IInputMonitorHost$Stub: android.view.IInputMonitorHost getDefaultImpl()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: android.os.Bundle getExtras()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()> (SMS_MMS)
<android.widget.TextView: java.util.Locale getTextLocale()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getStackedLinks()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback getDefaultImpl()> (SMS_MMS)
<android.widget.TextView: int getBaseline()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()> (SMS_MMS)
<android.app.Service: android.content.ComponentName contentCaptureClientGetComponentName()> (SMS_MMS)
<android.content.om.OverlayableInfo: int hashCode()> (SMS_MMS)
<android.os.ParcelableParcel: int describeContents()> (SMS_MMS)
<android.filterfw.core.SerializedFrame: int[] getInts()> (SMS_MMS)
<android.service.gatekeeper.GateKeeperResponse: int describeContents()> (SMS_MMS)
<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: int getAudioRestriction()> (SMS_MMS)
<android.renderscript.Float3: int length()> (SMS_MMS)
<android.telephony.UiccCardInfo: int hashCode()> (SMS_MMS)
<android.app.IWallpaperManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)> (SMS_MMS)
<com.android.internal.view.InputBindResult: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.os.UserManager getUserManager()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState$1: android.telephony.PreciseDataConnectionState[] newArray(int)> (SMS_MMS)
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()> (SMS_MMS)
<android.content.pm.LauncherApps$AppUsageLimit: long getTotalUsageLimit()> (SMS_MMS)
<android.media.IAudioService$Default: int getVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: boolean isStaged()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectStatusBar()> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.SyncStatusInfo: java.lang.String getEvent(int)> (SMS_MMS)
<android.app.timezone.ICallback$Stub: android.app.timezone.ICallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IWindowManager$Default: int getBaseDisplayDensity(int)> (SMS_MMS)
<android.hardware.Sensor: float getResolution()> (SMS_MMS)
<android.media.session.MediaController: android.media.session.ISessionController getSessionBinder()> (SMS_MMS)
<android.hardware.Sensor: int getMaxDelay()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.Object getTag()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getUarfcn()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getScreenOnCount(int)> (SMS_MMS)
<com.android.internal.app.LocalePicker$LocaleInfo: int compareTo(java.lang.Object)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$702(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.os.health.HealthKeys$Constants: int getIndex(int,int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()> (SMS_MMS)
<android.content.RestrictionEntry: int hashCode()> (SMS_MMS)
<android.view.View$9: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.os.BinderProxy: int getProxyCount()> (SMS_MMS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int describeContents()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo$1: void <init>()> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener getDefaultImpl()> (SMS_MMS)
<android.net.IpPrefix: int describeContents()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.AudioFocusInfo: int describeContents()> (SMS_MMS)
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.hardware.ICameraService$Default: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getAttributionTag()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: java.util.List getPorts()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUid(java.util.UUID,int)> (SMS_MMS)
<android.telephony.SignalStrength: int getEvdoDbm()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.location.GnssClock: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.PackageChangeReceiver: java.lang.String getPackageName(android.content.Intent)> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getShortcutConfigActivities(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.os.IDeviceIdleController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: int getAnimationStyle()> (SMS_MMS)
<android.telephony.CarrierConfigManager$Gps: android.os.PersistableBundle access$100()> (SMS_MMS)
<android.media.MicrophoneInfo: java.util.List getFrequencyResponse()> (SMS_MMS)
<android.widget.ActionMenuView: int getPopupTheme()> (SMS_MMS)
<android.hardware.CameraInfo: int describeContents()> (SMS_MMS)
<android.content.UndoManager: int commitState(android.content.UndoOwner)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getMinimumLightness()> (SMS_MMS)
<android.content.ContentResolver$1: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)> (SMS_MMS)
<android.app.RemoteAction: java.lang.CharSequence getTitle()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getProcessStats()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: int getAttributedOpsCount()> (SMS_MMS)
<android.media.IAudioService$Default: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.content.UndoManager$UndoState: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.hardware.radio.TunerCallbackAdapter: boolean isAntennaConnected()> (SMS_MMS)
<android.os.IUserManager$Default: android.os.PersistableBundle getSeedAccountOptions()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: boolean getOemUnlockEnabled()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.hardware.ICamera$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getDeclaredSharedLibraries(java.lang.String,int)> (SMS_MMS)
<android.text.style.StrikethroughSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.widget.FrameLayout: int getPaddingRightWithForeground()> (SMS_MMS)
<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int available()> (SMS_MMS)
<android.os.Debug$InstructionCount: int globalMethodInvocations()> (SMS_MMS)
<android.app.timezone.DistroRulesVersion: int getRevision()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.media.MicrophoneInfo: android.media.MicrophoneInfo$Coordinate3F getOrientation()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabledForUser(int)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getNumericModifiers()> (SMS_MMS)
<android.net.NetworkInfo: int getType()> (SMS_MMS)
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> (SMS_MMS)
<android.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()> (SMS_MMS)
<android.util.SparseLongArray: long get(int)> (SMS_MMS)
<android.view.View: int getVerticalScrollbarWidth()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getChargeLevelStepTracker()> (SMS_MMS)
<android.graphics.RenderNode: int getBottom()> (SMS_MMS)
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.GnssMeasurement: double getTimeOffsetNanos()> (SMS_MMS)
<android.view.textclassifier.ConversationActions: java.util.List getConversationActions()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.view.View: android.view.View getTooltipView()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isRinging()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.View getView()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getContentCaptureServicePackageName()> (SMS_MMS)
<android.content.ClipData$Item: java.lang.CharSequence getText()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()> (SMS_MMS)
<android.app.IWallpaperManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getDataConnectionLinkProperties()> (SMS_MMS)
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()> (SMS_MMS)
<android.content.AutofillOptions: int describeContents()> (SMS_MMS)
<android.net.NetworkCapabilities: android.net.TransportInfo getTransportInfo()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.content.ComponentName getCurrentTransportComponentForUser(int)> (SMS_MMS)
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.os.StrictMode$ViolationInfo: java.lang.String getStackTrace()> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.NetworkScorerAppData: int hashCode()> (SMS_MMS)
<android.text.style.EasyEditSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataMiscDirectory()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.BackgroundColorSpan: int describeContents()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.view.InputEventCompatProcessor: java.util.List processInputEventForCompatibility(android.view.InputEvent)> (SMS_MMS)
<android.view.ViewConfiguration: int getKeyRepeatDelay()> (SMS_MMS)
<android.app.SystemServiceRegistry$119: java.lang.Object createService()> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.image.DynamicSystemManager: boolean isInUse()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getGradientType()> (SMS_MMS)
<android.view.VerifiedInputEvent: int getSource()> (SMS_MMS)
<android.content.pm.DataLoaderManager: android.content.pm.IDataLoader getDataLoader(int)> (SMS_MMS)
<android.location.GnssMeasurementCorrections: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstantAppAndroidId(java.lang.String,int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.dreams.IDreamManager$Default: android.content.ComponentName[] getDreamComponents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuFreqTimes(int,int)> (SMS_MMS)
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes)> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> (SMS_MMS)
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfoTdscdma: int hashCode()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int getInputPortCount()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalSharedClean()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: byte[] getBinary()> (SMS_MMS)
<android.permission.PermissionManager$SplitPermissionInfo: java.util.List getNewPermissions()> (SMS_MMS)
<android.content.res.Resources: int calcConfigChanges(android.content.res.Configuration)> (SMS_MMS)
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getBoundNetworkForProcess()> (SMS_MMS)
<android.content.SyncAdapterType: int describeContents()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int getTop()> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getDeviceId()> (SMS_MMS)
<android.text.AutoGrowArray$IntArray: int[] getRawArray()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppResolverSettingsComponent()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int getType()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: boolean getSharedElementsUseOverlay()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.hardware.fingerprint.IFingerprintClientActiveCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.lights.LightState: int getColor()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)> (SMS_MMS)
<android.media.MediaRouter2Utils: java.lang.String getProviderId(java.lang.String)> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()> (SMS_MMS)
<android.graphics.Paint: int getOffsetForAdvance(java.lang.CharSequence,int,int,int,int,boolean,float)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService asInterface(android.os.IBinder)> (SMS_MMS)
<android.webkit.MimeTypeMap: java.lang.String remapGenericMimeType(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)> (SMS_MMS)
<android.media.midi.MidiDeviceStatus: int describeContents()> (SMS_MMS)
<android.app.role.RoleManager: java.util.List getRoleHoldersAsUser(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isConcurrentVoiceAndDataAllowed(int)> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: int hashCode()> (SMS_MMS)
<android.widget.RemoteViews$Action: int describeContents()> (SMS_MMS)
<android.os.IProgressListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvTrackInfo: int getAudioChannelCount()> (SMS_MMS)
<android.media.IAudioService$Default: java.util.List getActivePlaybackConfigurations()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$Builder: int access$000(android.view.textclassifier.TextClassifierEvent$Builder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean enableModemForSlot(int,boolean)> (SMS_MMS)
<android.telephony.UiccCardInfo: java.lang.String getIccId()> (SMS_MMS)
<android.content.RestrictionEntry: int describeContents()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getMnc()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int getType()> (SMS_MMS)
<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int,int)> (SMS_MMS)
<android.view.RemoteAnimationDefinition: android.view.RemoteAnimationAdapter getAdapter(int,android.util.ArraySet)> (SMS_MMS)
<android.app.ContextImpl: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: float getPeakMips()> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub: com.android.internal.app.IAppOpsStartedCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getNetworkSecurityConfigRes()> (SMS_MMS)
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.location.Criteria: int getVerticalAccuracy()> (SMS_MMS)
<android.app.WallpaperColors: android.graphics.Color getPrimaryColor()> (SMS_MMS)
<android.net.INetworkScoreService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.VolumePolicy: int hashCode()> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerScanDurationMillis()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()> (SMS_MMS)
<android.os.LocaleList: android.os.LocaleList getDefault()> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: boolean registerService(java.lang.Void)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: byte[] getAttestationChallenge()> (SMS_MMS)
<android.app.usage.UsageStatsManager: int getUsageSource()> (SMS_MMS)
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isScreenBrightnessBoosted()> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: int getEnableAfterTargetSdk()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: int describeContents()> (SMS_MMS)
<com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.util.Map getManuallyEnteredField()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntent(java.lang.String)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int getRegion()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureRequestKeys()> (SMS_MMS)
<android.graphics.RenderNode: float getCameraDistance()> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getQuality()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()> (SMS_MMS)
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)> (SMS_MMS)
<android.widget.RemoteViews: int access$1300(android.widget.RemoteViews)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int access$102(android.net.lowpan.LowpanBeaconInfo,int)> (SMS_MMS)
<android.media.MediaDrm$KeyRequest: byte[] getData()> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse$1: android.telephony.IccOpenLogicalChannelResponse[] newArray(int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: int[] getDisplayIds()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getDeviceType()> (SMS_MMS)
<android.graphics.RenderNode: int getTop()> (SMS_MMS)
<android.text.FontConfig$Font: int getTtcIndex()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)> (SMS_MMS)
<android.app.LoadedApk: android.content.res.Resources getResources()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.Utils$2: int compare(android.util.Range,android.util.Range)> (SMS_MMS)
<android.media.Ringtone: boolean isPlaying()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3)> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)> (SMS_MMS)
<android.net.lowpan.LowpanCredential: byte[] getMasterKey()> (SMS_MMS)
<android.widget.AbsListView: android.view.View getSelectedView()> (SMS_MMS)
<android.view.autofill.AutofillManager: android.service.autofill.UserData getUserData()> (SMS_MMS)
<android.location.ICountryDetector$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)> (SMS_MMS)
<android.service.notification.ZenModeConfig: java.lang.String getConditionSummary(android.content.Context,android.service.notification.ZenModeConfig,int,boolean)> (SMS_MMS)
<android.transition.TransitionManager: java.util.ArrayList access$000()> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsManager: com.android.internal.telephony.ISms access$000()> (SMS_MMS)
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Default: com.android.internal.net.VpnConfig getVpnConfig(int)> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Rect getTopBound()> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.util.MergedConfiguration: android.content.res.Configuration getOverrideConfiguration()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getCallingPackage()> (SMS_MMS)
<android.content.pm.ShortcutInfo$Builder: int access$900(android.content.pm.ShortcutInfo$Builder)> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.CellInfoLte: android.telephony.CellConfigLte getCellConfig()> (SMS_MMS)
<android.telecom.TelecomManager: int getAllPhoneAccountsCount()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)> (SMS_MMS)
<android.os.storage.DiskInfo: java.lang.String getDescription()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.view.View: int getScrollX()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: byte[] readValues(int)> (SMS_MMS)
<android.media.tv.TvStreamConfig: int describeContents()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String getSynchronousMode()> (SMS_MMS)
<android.os.PowerManager$WakeLock: java.lang.String getTag()> (SMS_MMS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder$OnPartialImageListener getOnPartialImageListener()> (SMS_MMS)
<android.os.IIncidentAuthListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float,int)> (SMS_MMS)
<android.os.MemoryFile$MemoryInputStream: int read()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: int getProxyUid(int,int)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.ImeFocusController getImeFocusController()> (SMS_MMS)
<android.media.IPlayer$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.autofill.UserData: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int[] getSplitRevisionCodes()> (SMS_MMS)
<android.media.MediaFormat$PrefixedKeySetWithPrefixRemoved: java.lang.String mapKeyToItem(java.lang.String)> (SMS_MMS)
<android.net.IEthernetServiceListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean handlePinMmi(java.lang.String)> (SMS_MMS)
<android.view.InsetsSourceControl: int describeContents()> (SMS_MMS)
<android.app.KeyguardManager: boolean isKeyguardLocked()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()> (SMS_MMS)
<android.net.NetworkStatsHistory: long getStart()> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo$1: android.telephony.TelephonyDisplayInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.face.FaceManager: boolean isHardwareDetected()> (SMS_MMS)
<android.telecom.PhoneAccountHandle: java.lang.String getId()> (SMS_MMS)
<android.app.Activity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()> (SMS_MMS)
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()> (SMS_MMS)
<android.view.FrameMetricsObserver: android.graphics.HardwareRendererObserver getRendererObserver()> (SMS_MMS)
<android.content.res.TypedArray: float getDimension(int,float)> (SMS_MMS)
<android.view.Window: int getDefaultFeatures(android.content.Context)> (SMS_MMS)
<android.os.IUserManager$Default: java.util.List getUsers(boolean,boolean,boolean)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getMutedColor(int)> (SMS_MMS)
<android.view.IWindowManager$Default: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: java.util.List getUiccAccessRules()> (SMS_MMS)
<android.content.Context: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)> (SMS_MMS)
<android.text.Layout: float getPrimaryHorizontal(int)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: int numPreviewTargets()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getLabelRes()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,android.os.UserHandle)> (SMS_MMS)
<android.app.FragmentState: int describeContents()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getPhoneSubServiceRegisterer()> (SMS_MMS)
<android.os.IServiceCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.PorterDuffColorFilter: android.graphics.PorterDuff$Mode getMode()> (SMS_MMS)
<android.metrics.LogMaker: java.lang.String getPackageName()> (SMS_MMS)
<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(long)> (SMS_MMS)
<android.os.UserManager$CheckedUserOperationException: int getUserOperationResult()> (SMS_MMS)
<android.service.vr.IVrManager$Stub$Proxy: boolean getVrModeState()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Default: android.service.notification.StatusBarNotification get()> (SMS_MMS)
<android.accessibilityservice.AccessibilityShortcutInfo: android.content.pm.ActivityInfo getActivityInfo()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getMobileRadioActiveTime(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean nvWriteCdmaPrl(byte[])> (SMS_MMS)
<android.os.IIncidentCompanion$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> (SMS_MMS)
<android.os.IServiceManager$Default: android.os.IBinder getService(java.lang.String)> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getLevel()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean nvWriteItem(int,java.lang.String)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getWebScheme()> (SMS_MMS)
<android.telecom.Logging.EventManager$EventRecord$EventTiming: java.lang.Object getKey()> (SMS_MMS)
<android.location.Location: double getElapsedRealtimeUncertaintyNanos()> (SMS_MMS)
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage createStorage(java.lang.String,android.os.incremental.IncrementalStorage,int)> (SMS_MMS)
<android.filterfw.geometry.Quad: float getBoundingHeight()> (SMS_MMS)
<android.view.VerifiedInputEvent: long getEventTimeNanos()> (SMS_MMS)
<android.app.PictureInPictureParams: android.util.Rational getAspectRatioRational()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int access$000(android.media.MediaRouter$RouteInfo)> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.app.contentsuggestions.ISelectionsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.keymaster.ExportResult: int describeContents()> (SMS_MMS)
<android.app.SystemServiceRegistry: int access$008()> (SMS_MMS)
<android.telephony.CellIdentityCdma: int getSystemId()> (SMS_MMS)
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)> (SMS_MMS)
<android.net.TestNetworkInterface: java.lang.String getInterfaceName()> (SMS_MMS)
<com.android.internal.policy.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getCurrentPhoneTypeForSlot(int)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getBlockedChannelCount(java.lang.String,int)> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub$Proxy: float[] getFanSpeeds(java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceMessageCount(int)> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()> (SMS_MMS)
<android.app.servertransaction.PauseActivityItem: int hashCode()> (SMS_MMS)
<android.view.MotionEvent: int getAction()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()> (SMS_MMS)
<android.content.Context: java.lang.String getOpPackageName()> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()> (SMS_MMS)
<android.content.Intent: float getFloatExtra(java.lang.String,float)> (SMS_MMS)
<android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowedWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.app.IUiModeManager$Default: int getCurrentModeType()> (SMS_MMS)
<com.android.internal.telephony.SmsAddress: boolean isAlphanumeric()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char,boolean)> (SMS_MMS)
<android.net.ConnectivityManager: boolean isNetworkSupported(int)> (SMS_MMS)
<android.view.RemoteAnimationAdapter: long getDuration()> (SMS_MMS)
<android.util.AtomicFile: byte[] readFully()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Default: java.util.List getSupportedCountries(boolean)> (SMS_MMS)
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getUri()> (SMS_MMS)
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()> (SMS_MMS)
<android.app.KeyguardManager: int getMinLockLength(boolean,int)> (SMS_MMS)
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getMode()> (SMS_MMS)
<android.transition.ChangeTransform$2: android.graphics.PointF get(android.transition.ChangeTransform$PathAnimatorMatrix)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanCredential getLowpanCredential()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: int getSessionId()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(android.net.NetworkTemplate,long,long,int)> (SMS_MMS)
<android.content.IRestrictionsManager$Default: android.content.Intent createLocalApprovalIntent()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.app.assist.AssistStructure$ViewNode getChildAt(int)> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getArfcn()> (SMS_MMS)
<android.content.res.Resources$Theme: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener getDefaultImpl()> (SMS_MMS)
<android.service.notification.NotificationListenerService$RankingMap: android.service.notification.NotificationListenerService$Ranking getRawRankingObject(java.lang.String)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> (SMS_MMS)
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getBadgedIcon(int)> (SMS_MMS)
<android.content.pm.VersionedPackage: int hashCode()> (SMS_MMS)
<android.view.IScrollCaptureController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int getEmergencyServiceCategoryBitmask()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int unregisterCallback(android.hardware.location.ContextHubManager$Callback)> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IPinnedStackListener$Stub: android.view.IPinnedStackListener getDefaultImpl()> (SMS_MMS)
<android.content.pm.ShortcutManager: int injectMyUserId()> (SMS_MMS)
<android.net.StaticIpConfiguration: android.net.LinkAddress getIpAddress()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsClock: double getDriftUncertaintyInNsPerSec()> (SMS_MMS)
<android.security.KeyStore: android.security.KeyStore getInstance()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: java.lang.String getInterfaceName()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: android.content.Intent getDetailsIntent()> (SMS_MMS)
<android.view.View: int combineVisibility(int,int)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.PorterDuff$Mode getTintMode()> (SMS_MMS)
<android.location.Address: java.lang.String getSubLocality()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivationState(int,java.lang.String)> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub: com.android.internal.inputmethod.IIntResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleRight()> (SMS_MMS)
<android.view.WindowMetrics: android.view.WindowInsets getWindowInsets()> (SMS_MMS)
<android.net.ConnectivityManager: int registerNetworkProvider(android.net.NetworkProvider)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getQueriesProviders()> (SMS_MMS)
<android.media.session.ISession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.os.VibrationEffect$Composition$PrimitiveEffect: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> (SMS_MMS)
<android.view.ViewRootImpl: int getTextAlignment()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: long getItemId(int)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: boolean getMute()> (SMS_MMS)
<android.net.Ikev2VpnProfile: android.net.ProxyInfo getProxyInfo()> (SMS_MMS)
<android.os.HandlerThread: android.os.Handler getThreadHandler()> (SMS_MMS)
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int shouldProcessCall(java.lang.String[])> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getInterval()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int getBitmapId(java.lang.String)> (SMS_MMS)
<android.net.NetworkPolicyManager: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)> (SMS_MMS)
<android.text.BoringLayout: float getLineMax(int)> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebViewRenderProcessClient getWebViewRenderProcessClient()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getStateName(int)> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getBaseType()> (SMS_MMS)
<android.net.Uri$OpaqueUri: android.net.Uri$Builder buildUpon()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.service.autofill.FieldClassification: java.util.List getMatches()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Default: android.system.suspend.WakeLockInfo[] getWakeLockStats()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getPreloadsFileCache()> (SMS_MMS)
<android.service.notification.StatusBarNotification: android.metrics.LogMaker getLogMaker()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int resolvePrimaryColor(android.content.Context,int,boolean)> (SMS_MMS)
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getIntent()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: android.graphics.Bitmap getBitmap(java.lang.String)> (SMS_MMS)
<android.content.pm.BaseParceledListSlice: java.lang.String access$100()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.SystemSensorManager: android.content.Context access$300(android.hardware.SystemSensorManager)> (SMS_MMS)
<android.filterfw.core.SimpleFrame: float[] getFloats()> (SMS_MMS)
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)> (SMS_MMS)
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)> (SMS_MMS)
<android.app.Notification: java.lang.String getGroup()> (SMS_MMS)
<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)> (SMS_MMS)
<android.permission.PermissionManager: int checkPackageNamePermission(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.text.Annotation: java.lang.String getKey()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getFilteredTasks(int,boolean)> (SMS_MMS)
<android.graphics.fonts.FontFamily: long getNativePtr()> (SMS_MMS)
<com.android.internal.content.om.OverlayScanner: java.util.Collection getAllParsedInfos()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.view.InputDevice getInputDevice(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$6: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.view.ScrollCaptureTarget: android.view.View getContainingView()> (SMS_MMS)
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)> (SMS_MMS)
<android.telephony.SubscriptionManager: void clearSubscriptionInfo()> (SMS_MMS)
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()> (SMS_MMS)
<android.hardware.radio.ITuner$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.NetworkAgentConfig: int getLegacyType()> (SMS_MMS)
<com.android.internal.telephony.SmsRawData: byte[] getBytes()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaRouter: int getRouteCount()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getCallingAttributionTag()> (SMS_MMS)
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.util.Locale getLocaleObject()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel)> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: android.content.pm.ParceledListSlice getSession2Tokens(int)> (SMS_MMS)
<android.hardware.contexthub.V1_0.ContextHub: int hashCode()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.SelectionEvent toSelectionEvent()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder resetNetworkTypes()> (SMS_MMS)
<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCallBarring(int)> (SMS_MMS)
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getActiveNetworkForUid(int)> (SMS_MMS)
<android.widget.Toolbar: android.widget.ActionMenuPresenter getOuterActionMenuPresenter()> (SMS_MMS)
<android.media.AudioManager: int getStreamMaxVolume(int)> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.jar.StrictJarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.Rational: int intValue()> (SMS_MMS)
<android.app.IServiceConnection$Stub: android.app.IServiceConnection asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaDrm$MediaDrmStateException: int getErrorCode()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int[] getRunningUserIds()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()> (SMS_MMS)
<android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()> (SMS_MMS)
<android.app.AppOpsManager: boolean isOperationActive(int,int,java.lang.String)> (SMS_MMS)
<android.app.WindowConfiguration: android.graphics.Rect getAppBounds()> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub: android.view.IRemoteAnimationFinishedCallback getDefaultImpl()> (SMS_MMS)
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> (SMS_MMS)
<com.android.internal.os.ZygoteInit: java.lang.ClassLoader createPathClassLoader(java.lang.String,int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()> (SMS_MMS)
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: int getStandbyBucket()> (SMS_MMS)
<android.media.AudioFocusInfo: int hashCode()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator$GhostViewListeners: android.view.View getView()> (SMS_MMS)
<android.app.timezone.IRulesManager$Default: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.ICallback)> (SMS_MMS)
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()> (SMS_MMS)
<android.app.compat.ChangeIdStateCache: java.lang.Boolean recompute(android.app.compat.ChangeIdStateQuery)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataEnabledForApn(int,int,java.lang.String)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.content.Intent getConfigurationIntentForUser(int,java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int getProtection()> (SMS_MMS)
<com.android.internal.view.FloatingActionMode: android.view.View getCustomView()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub: android.app.backup.IFullBackupRestoreObserver getDefaultImpl()> (SMS_MMS)
<android.telephony.SmsCbMessage: android.content.ContentValues getContentValues()> (SMS_MMS)
<android.hardware.face.FaceManager: long generateChallenge()> (SMS_MMS)
<android.content.pm.ProviderInfoList: java.util.List getList()> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub: android.print.IPrintJobStateChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getClassName()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getInputFormats()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.Drawable)> (SMS_MMS)
<android.net.TrafficStats: long getMobileRxBytes()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getBlockModes()> (SMS_MMS)
<android.os.Environment: java.io.File getDataAppDirectory(java.lang.String)> (SMS_MMS)
<android.content.Loader: android.content.Context getContext()> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os._$$Lambda$6_ytl6NLMGWt_iQr4_PfakNWUKQ: java.lang.Object get()> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher getDefaultImpl()> (SMS_MMS)
<android.telephony.CellIdentityNr: int getPci()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: android.graphics.drawable.Icon loadIcon()> (SMS_MMS)
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getCancelLabel()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF$MarshalerSizeF: int getNativeSize()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getCameraTurnedOnTimer()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.IContextHubClient createPendingIntentClient(int,android.app.PendingIntent,long)> (SMS_MMS)
<android.hardware.camera2.marshal.Marshaler: android.hardware.camera2.utils.TypeReference getTypeReference()> (SMS_MMS)
<android.hardware.Camera: android.hardware.Camera$Parameters getParametersCopy(android.hardware.Camera$Parameters)> (SMS_MMS)
<android.text.method.ArrowKeyMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: android.hardware.camera2.utils.TypeReference getTypeReference()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.widget.AdapterView: java.lang.Object getSelectedItem()> (SMS_MMS)
<android.os.VibrationEffect$Waveform: long getDuration()> (SMS_MMS)
<android.content.IContentService$Default: java.util.List getCurrentSyncs()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getVideoTurnedOnTimer()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: boolean isTitleOptional()> (SMS_MMS)
<com.android.internal.os.RailStats: long getCellularTotalEnergyUseduWs()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.opengl.EGLObjectHandle: long getNativeHandle()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstantApps()> (SMS_MMS)
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanInterface: java.lang.String getRole()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getState()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getClassAttribute()> (SMS_MMS)
<android.media.RingtoneManager: boolean getStopPreviousRingtone()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalSize(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getQueriesPackages()> (SMS_MMS)
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwner()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getChannelNumber()> (SMS_MMS)
<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getAchievableFrameRatesFor(int,int)> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: int getTvInputState(java.lang.String,int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float getInterpolation(float)> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioTrack: int getPlaybackHeadPosition()> (SMS_MMS)
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultVoicePhoneId()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: int getGlobalAudioRestriction()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)> (SMS_MMS)
<android.telephony.ModemActivityInfo$1: void <init>()> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getCategory()> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest: java.util.List getCapabilitiesToDisable()> (SMS_MMS)
<android.content.pm.Signature: int describeContents()> (SMS_MMS)
<android.renderscript.Double4: int length()> (SMS_MMS)
<android.content.pm.UserInfo: boolean isDemo()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getId(int)> (SMS_MMS)
<android.app.timezone.DistroFormatVersion: int describeContents()> (SMS_MMS)
<android.graphics.Rect: int height()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)> (SMS_MMS)
<android.content.Intent: int getIntExtra(java.lang.String,int)> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Proxy: int hashCode()> (SMS_MMS)
<android.hardware.LegacySensorManager: int getSensors()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int getCpid()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isOrganizationOwnedDeviceWithManagedProfile()> (SMS_MMS)
<android.telephony.SignalStrength: int getCdmaAsuLevel()> (SMS_MMS)
<android.app.UiModeManager: boolean isUiModeLocked()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: java.lang.Class getType()> (SMS_MMS)
<android.graphics.animation.RenderNodeAnimator: long getTotalDuration()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.app.WallpaperInfo getWallpaperInfo()> (SMS_MMS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperationsRegistry: com.android.internal.inputmethod.InputMethodPrivilegedOperations get(android.os.IBinder)> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<com.android.internal.app.AlertController: int getIconAttributeResId(int)> (SMS_MMS)
<android.app.trust.ITrustListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.autofill.AutofillManager: int access$2800(android.view.autofill.AutofillManager)> (SMS_MMS)
<android.util.LongArray: int indexOf(long)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: java.util.List getEnrolledFingerprints()> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowManager$Default: int getPreferredOptionsPanelGravity(int)> (SMS_MMS)
<android.app.LoadedApk: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.Display: int[] getSupportedColorModes()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isSaturationActivated()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.VerifiedMotionEvent: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.blob.BlobStoreManager$Session: boolean isSameSignatureAccessAllowed()> (SMS_MMS)
<android.app.ActivityThread$ProviderKey: int hashCode()> (SMS_MMS)
<android.security.FileIntegrityManager: boolean isApkVeritySupported()> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathStart()> (SMS_MMS)
<android.renderscript.RenderScript: long getMinorID()> (SMS_MMS)
<android.webkit.WebView: boolean getRendererPriorityWaivedWhenNotVisible()> (SMS_MMS)
<android.app.job.JobInfo: long getFlexMillis()> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder path(android.net.Uri$PathPart)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeys()> (SMS_MMS)
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder getParent()> (SMS_MMS)
<android.permission.PermissionManager$PermissionQuery: int hashCode()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: android.content.pm.ActivityInfo$WindowLayout getWindowLayout()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputSizes(int)> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IPinnedStackController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean getDataEnabled(int)> (SMS_MMS)
<android.content.ContextWrapper: android.os.Handler getMainThreadHandler()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()> (SMS_MMS)
<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()> (SMS_MMS)
<android.security.keystore.ArrayUtils: byte[] concat(byte[],byte[])> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.location.ILocationManager$Default: android.location.LocationTime getGnssTimeMillis()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int describeContents()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read()> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.String getResourceTypeName(int)> (SMS_MMS)
<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] following(int)> (SMS_MMS)
<android.os.incremental.IncrementalStorage: byte[] getFileMetadata(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.util.List getAllAccessRules()> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: int getNextAutofillId()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getHorizontalScrollbarTrackDrawable()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)> (SMS_MMS)
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.SystemSensorManager: long access$200(android.hardware.SystemSensorManager)> (SMS_MMS)
<android.metrics.LogMaker: int getCategory()> (SMS_MMS)
<android.transition.Slide$3: float getGoneY(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserDePackageDirectory(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getMetered()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: boolean getBoolean(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPackageAvailable(java.lang.String)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: long getTotalStats(int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,java.lang.String,int,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getUserActivityCount(int,int)> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getProduct()> (SMS_MMS)
<android.location.ICountryDetector$Stub: android.location.ICountryDetector getDefaultImpl()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal getInstance()> (SMS_MMS)
<android.app.NotificationManager: int zenModeFromInterruptionFilter(int,int)> (SMS_MMS)
<android.app.SystemServiceRegistry$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)> (SMS_MMS)
<android.widget.LinearLayout: int getDividerWidth()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getDataConnectionApnTypeBitMask()> (SMS_MMS)
<android.telephony.SmsMessage: boolean shouldAppendPageNumberAsPrefix()> (SMS_MMS)
<android.widget.Toast: int getDuration()> (SMS_MMS)
<android.location.GeocoderParams: int describeContents()> (SMS_MMS)
<android.text.style.AccessibilityClickableSpan: int describeContents()> (SMS_MMS)
<android.media.AudioDeviceInfo: int hashCode()> (SMS_MMS)
<android.telephony.UiccAccessRule: byte[] getCertHash(android.content.pm.Signature,java.lang.String)> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()> (SMS_MMS)
<android.media.session.ISessionManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.usage.StorageStatsManager: boolean isQuotaSupported(java.util.UUID)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2500(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.graphics.Color: int getHtmlColor(java.lang.String)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub: android.net.INetworkPolicyManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String[] getChoiceEntries()> (SMS_MMS)
<android.telephony.CellIdentityNr$1: android.telephony.CellIdentityNr[] newArray(int)> (SMS_MMS)
<android.text.Layout: int getParagraphRight(int)> (SMS_MMS)
<android.hardware.input.InputDeviceIdentifier: int getProductId()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getContaminantProtectionStatus()> (SMS_MMS)
<com.android.internal.util.SyncResultReceiver: java.util.ArrayList getParcelableListResult()> (SMS_MMS)
<android.net.IpConfiguration: android.net.ProxyInfo getHttpProxy()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getBluetoothContactSharingDisabledForUser(int)> (SMS_MMS)
<android.net.ITestNetworkManager$Stub: android.net.ITestNetworkManager getDefaultImpl()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getDomain()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)> (SMS_MMS)
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeUncertaintyInMeters()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera$Parameters access$1102(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.Camera$Parameters)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getCrateDir(java.lang.String)> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentityNr: int hashCode()> (SMS_MMS)
<android.view.Choreographer: android.view.Choreographer getSfInstance()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.DocumentsContract: android.os.Bundle getDocumentMetadata(android.content.ContentResolver,android.net.Uri)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSystemCaptionsServicePackageName()> (SMS_MMS)
<android.graphics.Paint: long getColorLong()> (SMS_MMS)
<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceInfo getDeviceInfo()> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfo$Info: int hashCode()> (SMS_MMS)
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$3: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(android.content.pm.ShortcutInfo)> (SMS_MMS)
<android.media.tv.TvContentRating: java.lang.String getDomain()> (SMS_MMS)
<android.app.IBackupAgent$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isEmergencyAssistanceEnabled()> (SMS_MMS)
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: long getAvailableRestoreTokenForUser(int,java.lang.String)> (SMS_MMS)
<android.security.net.config.Domain: int hashCode()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getImplicitRank()> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroup: int describeContents()> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: int getFitInsetsSides()> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ITaskStackListener$Stub: android.app.ITaskStackListener getDefaultImpl()> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutManager$ShareShortcutInfo: int describeContents()> (SMS_MMS)
<android.widget.PopupWindow: int getInputMethodMode()> (SMS_MMS)
<android.content.ContentResolver: int checkUriPermission(android.net.Uri,int,int)> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub: android.service.vr.IVrStateCallbacks asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.AbsListView: int getSolidColor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeScreenDoze(int)> (SMS_MMS)
<android.transition.TransitionManager: android.util.ArrayMap access$100()> (SMS_MMS)
<android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectTop()> (SMS_MMS)
<android.app.AppOpsManager: android.app.AppOpsManager$NoteOpEvent access$400(android.util.LongSparseArray,int,int,int)> (SMS_MMS)
<android.widget.Spinner: int getGravity()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getRemovedSystemPowerWhitelistApps()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getAllPhoneAccounts()> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: int access$1202(android.location.LocationManager$GnssStatusListenerManager,int)> (SMS_MMS)
<android.app.trust.ITrustManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.Window: android.view.Window$WindowControllerCallback getWindowControllerCallback()> (SMS_MMS)
<android.os.ISystemConfig$Default: java.util.List getDisabledUntilUsedPreinstalledCarrierApps()> (SMS_MMS)
<android.os.IVoldMountCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.URLSpan: int describeContents()> (SMS_MMS)
<android.net.Uri$OpaqueUri: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getSyncStats()> (SMS_MMS)
<android.graphics.drawable.RotateDrawable: float getToDegrees()> (SMS_MMS)
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.AbsListView: android.view.View getAccessibilityFocusedChild(android.view.View)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getPowerSaveModeEnabledCount(int)> (SMS_MMS)
<android.widget.LinearLayout: int getDividerPadding()> (SMS_MMS)
<android.os.IUserManager$Default: java.util.List getUserRestrictionSources(java.lang.String,int)> (SMS_MMS)
<android.security.GateKeeper: android.service.gatekeeper.IGateKeeperService getService()> (SMS_MMS)
<android.app.ActivityManager: int getLauncherLargeIconSize()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)> (SMS_MMS)
<android.hardware.radio.ITuner$Default: android.hardware.radio.RadioManager$BandConfig getConfiguration()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getKeyCode()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: int getEntryCount()> (SMS_MMS)
<android.view.DragEvent: android.content.ClipData getClipData()> (SMS_MMS)
<android.telephony.CbGeoUtils: android.telephony.CbGeoUtils$LatLng parseLatLngFromString(java.lang.String)> (SMS_MMS)
<android.view.DisplayAdjustments: android.view.DisplayAdjustments$FixedRotationAdjustments getFixedRotationAdjustments()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getScanTimeCounter()> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.ColorStateList: int getDefaultColor()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable getIcon()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationManager$Policy getNotificationPolicy(java.lang.String)> (SMS_MMS)
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.blob.BlobHandle: long getExpiryTimeMillis()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Region getTransparentRegion()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getVolumeRecords()> (SMS_MMS)
<android.util.LongSparseArray: int indexOfValueByValue(java.lang.Object)> (SMS_MMS)
<android.telephony.CellInfoTdscdma: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.app.ActivityManager: int staticGetMemoryClass()> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: android.graphics.Bitmap getImage(int)> (SMS_MMS)
<android.webkit.WebHistoryItem: java.lang.Object clone()> (SMS_MMS)
<android.widget.SmartSelectSprite$RectangleWithTextSelectionLayout: android.graphics.RectF getRectangle()> (SMS_MMS)
<android.media.midi.MidiDeviceServer$1: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)> (SMS_MMS)
<android.telephony.NetworkScanRequest: int hashCode()> (SMS_MMS)
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> (SMS_MMS)
<android.media.AudioTrack: int getAudioFormat()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: android.hardware.biometrics.BiometricAuthenticator$Identifier getId()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getGradientCenterX()> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: long getEventTime()> (SMS_MMS)
<android.graphics.ImageDecoder: boolean getAsAlphaMask()> (SMS_MMS)
<com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass valueOf(java.lang.String)> (SMS_MMS)
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(boolean)> (SMS_MMS)
<android.database.AbstractCursor: android.net.Uri getNotificationUri()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getRawVarint64Size(long)> (SMS_MMS)
<android.content.pm.ModuleInfo: int hashCode()> (SMS_MMS)
<android.content.IntentSender: java.lang.String getCreatorPackage()> (SMS_MMS)
<android.view.InsetsSource: int hashCode()> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: java.lang.String getEntityType(android.os.Bundle)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: boolean isAppFreezerSupported()> (SMS_MMS)
<android.graphics.Bitmap: int getDefaultDensity()> (SMS_MMS)
<android.view.autofill.AutofillManager: java.util.List getAvailableFieldClassificationAlgorithms()> (SMS_MMS)
<android.app.Notification$WearableExtender: int getCustomContentHeight()> (SMS_MMS)
<android.os.HardwarePropertiesManager: float[] getFanSpeeds()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCallWaitingStatus(int)> (SMS_MMS)
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.Transition: java.util.List getTargetNames()> (SMS_MMS)
<android.hardware.usb.UsbAccessory: int hashCode()> (SMS_MMS)
<android.view.InputDevice: java.lang.String getDescriptor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getLaunches(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.SyncResultReceiver: android.os.Parcelable getParcelableResult()> (SMS_MMS)
<android.app.ExpandableListActivity: long getSelectedPosition()> (SMS_MMS)
<android.telecom.PhoneAccount: java.lang.String getGroupId()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: com.android.internal.view.IInlineSuggestionsRequestCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getCarrierConfigServiceRegisterer()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String[] getUnsuspendablePackages(java.lang.String[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getFrom()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int describeContents()> (SMS_MMS)
<android.view.View: java.util.ArrayList getFocusables(int)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setMultiSimPolicy(int)> (SMS_MMS)
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: int describeContents()> (SMS_MMS)
<android.view.Choreographer: long getFrameDelay()> (SMS_MMS)
<android.app.ActivityThread: android.os.Looper getLooper()> (SMS_MMS)
<android.view.MotionEvent: int getPointerId(int)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getDisabledUntilUsedPreinstalledCarrierAssociatedApps()> (SMS_MMS)
<android.widget.TextView: int getOffsetForPosition(float,float)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar$Tab getTabAt(int)> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShortRaw()> (SMS_MMS)
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)> (SMS_MMS)
<android.app.assist.AssistStructure: android.content.ComponentName getActivityComponent()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int stopUserWithDelayedLocking(int,boolean,android.app.IStopUserCallback)> (SMS_MMS)
<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()> (SMS_MMS)
<android.service.notification.ZenModeConfig$ZenRule: int describeContents()> (SMS_MMS)
<android.os.IProgressListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.KeyguardManager: boolean isDeviceSecure(int)> (SMS_MMS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()> (SMS_MMS)
<android.net.LinkProperties: android.net.CaptivePortalData getCaptivePortalData()> (SMS_MMS)
<android.os.ICancellationSignal$Stub: android.os.ICancellationSignal getDefaultImpl()> (SMS_MMS)
<android.renderscript.Short2: short length()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int movePrimaryStorage(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityWcdma: java.lang.String getMobileNetworkOperator()> (SMS_MMS)
<android.location.Location: java.lang.String getProvider()> (SMS_MMS)
<android.widget.RemoteViewsAdapter: long getItemId(int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.content.pm.UserInfo: boolean isRestricted()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: int getLastSleepReason()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)> (SMS_MMS)
<android.service.gatekeeper.GateKeeperResponse: boolean getShouldReEnroll()> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.Resources$Theme: android.content.res.Resources$ThemeKey getKey()> (SMS_MMS)
<com.android.server.SystemConfig: java.util.ArrayList getSplitPermissions()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int describeContents()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: boolean isBackupEnabled()> (SMS_MMS)
<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo access$1000(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()> (SMS_MMS)
<android.media.AudioManager: boolean isSpeakerphoneOn()> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: int getCursorCapsMode(int)> (SMS_MMS)
<android.widget.Editor$PositionListener: int getPositionYOnScreen()> (SMS_MMS)
<android.metrics.LogMaker: int getProcessId()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub: android.location.IBatchedLocationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: int getWindowAnimations()> (SMS_MMS)
<android.media.AudioMetadata$AutoGrowByteBuffer: java.nio.ByteBuffer getRawByteBuffer()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)> (SMS_MMS)
<android.os.LocaleList: int getFirstMatchIndexWithEnglishSupported(java.lang.String[])> (SMS_MMS)
<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: int getMaxAttempts()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: int getWidth()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.net.netstats.provider.INetworkStatsProviderCallback getDefaultImpl()> (SMS_MMS)
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: int getHeightMils()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: java.lang.String getProductId()> (SMS_MMS)
<android.graphics.drawable.RippleDrawable$RippleState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setIconTint(int,int)> (SMS_MMS)
<android.view.View: int getLayoutDirection()> (SMS_MMS)
<android.os.Messenger: int hashCode()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getStatusBarColor()> (SMS_MMS)
<android.widget.PopupWindow: int getWidth()> (SMS_MMS)
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)> (SMS_MMS)
<android.media.session.ISessionController$Default: java.lang.String getTag()> (SMS_MMS)
<android.app.FragmentManagerState: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText(int)> (SMS_MMS)
<android.location.LocationManager: android.content.Context access$1100(android.location.LocationManager)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.PersistableBundle getConfigForSubId(int,java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getDataSystemCeDirectory()> (SMS_MMS)
<android.filterfw.core.NativeFrame: float[] getFloats()> (SMS_MMS)
<android.app.backup.RestoreSet: int describeContents()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub: android.content.pm.IShortcutService asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri: java.util.Set getQueryParameterNames()> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.PowerManager: int getLocationPowerSaveMode()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int getFrontendType()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: long getItemId(int)> (SMS_MMS)
<android.os.Vibrator: int getDefaultRingVibrationIntensity()> (SMS_MMS)
<android.app.admin.SystemUpdateInfo: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getConversations(boolean)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: long flush()> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.CellIdentity: int getType()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub: android.content.pm.ILauncherApps asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMsisdn()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: int getKeySize()> (SMS_MMS)
<android.view.DragAndDropPermissions: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean needMobileRadioShutdown()> (SMS_MMS)
<android.app.IActivityManager$Default: int getMemoryTrimLevel()> (SMS_MMS)
<android.graphics.drawable.shapes.Shape: int hashCode()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: int getOctet(int)> (SMS_MMS)
<android.media.AudioTrack: int getTimestampWithStatus(android.media.AudioTimestamp)> (SMS_MMS)
<android.app.timezone.DistroFormatVersion: int getMajorVersion()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.ImsRcsManager: android.telephony.ims.RcsUceAdapter getUceAdapter()> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)> (SMS_MMS)
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()> (SMS_MMS)
<android.widget.TextView: int computeHorizontalScrollRange()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getText()> (SMS_MMS)
<android.os.Temperature: int describeContents()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isEphemeralUser(android.content.ComponentName)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Default: java.util.List getTargetUserProfiles(java.lang.String)> (SMS_MMS)
<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getForegroundAccessCount(int)> (SMS_MMS)
<android.view.View: int getFadingEdgeLength()> (SMS_MMS)
<android.telephony.ModemActivityInfo: long getTimestamp()> (SMS_MMS)
<android.content.Intent: int describeContents()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub: android.service.notification.IStatusBarNotificationHolder getDefaultImpl()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayTarget()> (SMS_MMS)
<android.content.ContextWrapper: int getUserId()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getInverseTransform()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.RoutingSessionInfo: int getVolumeHandling()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.CursorWrapper: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: int getRequestCount()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getDbm()> (SMS_MMS)
<android.widget.PopupWindow: float getElevation()> (SMS_MMS)
<android.util.EventLog$Event: int getThreadId()> (SMS_MMS)
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> (SMS_MMS)
<android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)> (SMS_MMS)
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> (SMS_MMS)
<android.content.IIntentSender$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(java.lang.Object)> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)> (SMS_MMS)
<android.text.StaticLayout: boolean getLineContainsTab(int)> (SMS_MMS)
<android.widget.RemoteViews: int getSequenceNumber()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int computeCurrentCountLocked()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()> (SMS_MMS)
<com.android.internal.content.ReferrerIntent: int hashCode()> (SMS_MMS)
<android.graphics.Canvas: int saveUnclippedLayer(int,int,int,int)> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownHeight()> (SMS_MMS)
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> (SMS_MMS)
<android.print.PrintJobInfo: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getPowerCounter()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getSharedPreferencesPath(java.lang.String)> (SMS_MMS)
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ColorStateList loadColorStateList(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.transition.ChangeBounds$4: android.graphics.PointF get(android.view.View)> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getAttributeNamespace(int)> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: boolean equals(java.lang.Object)> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub: android.content.ISyncStatusObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.component.ComponentParseUtils: java.lang.CharSequence getNonLocalizedLabel(android.content.pm.parsing.component.ParsedComponent)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getRestrictionsProvider(int)> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: int access$300(android.widget.OverScroller$SplineOverScroller)> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int getCid()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: int access$002(android.accessibilityservice.AccessibilityService,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$DualTimer: android.os.BatteryStats$Timer getSubTimer()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.security.keystore.AndroidKeyStorePublicKey: java.lang.String getFormat()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()> (SMS_MMS)
<android.telephony.ServiceState: boolean getDataRoaming()> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: java.lang.String getId()> (SMS_MMS)
<com.android.internal.util.StateMachine: int getLogRecSize()> (SMS_MMS)
<android.hardware.face.FaceManager$AuthenticationResult: int getUserId()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: long getCacheSizeBytes(java.lang.String,int)> (SMS_MMS)
<android.app.UriGrantsManager: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveTime(long,int)> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub: android.view.autofill.IAutofillWindowPresenter asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.BroadcastReceiver: int getResultCode()> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub: android.view.IScrollCaptureClient getDefaultImpl()> (SMS_MMS)
<android.app.role.RoleManager: java.util.List getRoleHolders(java.lang.String)> (SMS_MMS)
<android.app.DownloadManager$CursorTranslator: int getInt(int)> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo$1: void <init>()> (SMS_MMS)
<android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)> (SMS_MMS)
<android.hardware.biometrics.CryptoObject: android.security.identity.IdentityCredential getIdentityCredential()> (SMS_MMS)
<android.app.FragmentController: android.app.LoaderManager getLoaderManager()> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$o3geRfUaRT9tnqKKZbu1EbUxw4Q: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<android.os.StrictMode$InstanceTracker: int getInstanceCount(java.lang.Class)> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()> (SMS_MMS)
<android.util.KeyValueListParser: int size()> (SMS_MMS)
<android.telephony.PhoneCapability: int describeContents()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CallForwardingInfo$1: void <init>()> (SMS_MMS)
<android.drm.DrmInfoRequest: java.lang.String getMimeType()> (SMS_MMS)
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)> (SMS_MMS)
<android.text.style.UnderlineSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.view.SurfaceControlViewHost: android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()> (SMS_MMS)
<android.os.IThermalEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.UserManager: int getUserTypeForStatsd(java.lang.String)> (SMS_MMS)
<android.hardware.SensorPrivacyManager: android.hardware.SensorPrivacyManager getInstance(android.content.Context)> (SMS_MMS)
<android.text.style.AccessibilityURLSpan: int getSpanTypeId()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledMinimumScalingSpan()> (SMS_MMS)
<android.os.SystemConfigManager: java.util.Set getDisabledUntilUsedPreinstalledCarrierApps()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: java.lang.String getName()> (SMS_MMS)
<android.renderscript.Type: int getYuv()> (SMS_MMS)
<android.text.method.WordIterator: int following(int)> (SMS_MMS)
<android.app.SearchableInfo: int getImeOptions()> (SMS_MMS)
<android.hardware.radio.V1_0.SignalStrength: int hashCode()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getLightMutedColor(int)> (SMS_MMS)
<android.os.IIncidentManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.PhoneFallbackEventHandler: android.telephony.TelephonyManager getTelephonyManager()> (SMS_MMS)
<android.text.style.ForegroundColorSpan: int describeContents()> (SMS_MMS)
<android.graphics.ImageDecoder: int getAllocator()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getViewAt(int)> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: int hashCode()> (SMS_MMS)
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_2.CellIdentity)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.style.SpellCheckSpan: int describeContents()> (SMS_MMS)
<android.telephony.SmsManager: void <clinit>()> (SMS_MMS)
<android.renderscript.Int3: int length()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int describeContents()> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getVersion()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)> (SMS_MMS)
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: int getPropertyIndex(java.lang.String)> (SMS_MMS)
<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()> (SMS_MMS)
<android.util.LruCache: int size()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getRssi()> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getDbm()> (SMS_MMS)
<android.companion.AssociationRequest: int describeContents()> (SMS_MMS)
<android.telephony.CallForwardingInfo: int hashCode()> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getCacheBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<android.service.notification.Adjustment: int describeContents()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int putBitmapFromNative(int,byte[])> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierIdListVersion(int)> (SMS_MMS)
<android.content.pm.PackageUserState: java.lang.String[] getOverlayPaths()> (SMS_MMS)
<android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: com.android.internal.telephony.util.HandlerExecutor getHandlerExecutor()> (SMS_MMS)
<android.location.GpsMeasurement: double getCodePhaseInChips()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayColorTemperature()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getTotalSizeKb()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int,int,int)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int hashCode()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.Location: double getLatitude()> (SMS_MMS)
<android.view.View: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.net.wifi.nl80211.ISendMgmtFrameEvent getDefaultImpl()> (SMS_MMS)
<android.transition.Visibility: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.telephony.LteVopsSupportInfo: int getEmcBearerSupport()> (SMS_MMS)
<android.view.MotionEvent: int getToolType(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getPrimaryStorageCandidateVolumes()> (SMS_MMS)
<android.view.View: float getRotationX()> (SMS_MMS)
<android.app.ProfilerInfo: int describeContents()> (SMS_MMS)
<android.database.MatrixCursor: long getLong(int)> (SMS_MMS)
<android.os.Bundle: float[] getFloatArray(java.lang.String)> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfoGsm: int hashCode()> (SMS_MMS)
<android.net.RouteInfo: int getMtu()> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getShortcutInfo(java.lang.String,java.util.List,android.os.UserHandle)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.view.InputBindResult: android.graphics.Matrix getActivityViewToScreenMatrix()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: long flush()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)> (SMS_MMS)
<android.animation.ValueAnimator: java.lang.String getNameForTrace()> (SMS_MMS)
<android.app.backup.IRestoreObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager$1: java.lang.Boolean recompute(android.app.ApplicationPackageManager$HasSystemFeatureQuery)> (SMS_MMS)
<android.os.UserManager: boolean isRestrictedProfile()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String)> (SMS_MMS)
<android.service.autofill.UserData: int getMaxCategoryCount()> (SMS_MMS)
<android.content.IntentFilter: int getVisibilityToInstantApp()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.IntArray: int binarySearch(int)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: android.app.usage.UsageEvents$Event getObfuscatedIfInstantApp()> (SMS_MMS)
<android.media.IMediaRouterClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityLte$1: android.telephony.CellIdentityLte[] newArray(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getRcsProvisioningStatusForCapability(int,int)> (SMS_MMS)
<android.view.View: int getTextDirection()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.util.SparseArray getControls()> (SMS_MMS)
<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub: com.android.internal.policy.IKeyguardDismissCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.IGnssStatusListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getMaxTextEms()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: boolean getSupportsSizeChanges()> (SMS_MMS)
<android.location.GpsClock: long getTimeInNs()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.net.wifi.nl80211.NativeScanResult[] getScanResults()> (SMS_MMS)
<android.view.autofill.AutofillManager: boolean isAutofillSupported()> (SMS_MMS)
<android.transition.ChangeBounds: boolean getResizeClip()> (SMS_MMS)
<android.app.IAppTask$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Proxy: int release()> (SMS_MMS)
<android.content.pm.ShortcutInfo$Builder: int access$500(android.content.pm.ShortcutInfo$Builder)> (SMS_MMS)
<android.telephony.TelephonyManager: int invokeOemRilRequestRaw(byte[],byte[])> (SMS_MMS)
<android.net.WifiKey: int hashCode()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getCodeCacheDir()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)> (SMS_MMS)
<android.os.IVold$Stub: android.os.IVold asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.WindowInsetsAnimation: android.view.animation.Interpolator getInterpolator()> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.telephony.RadioAccessFamily: int getRafFromNetworkType(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getOriginalPackages()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.ITransientNotification$Stub: android.app.ITransientNotification asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int imageFormatToInternal(int)> (SMS_MMS)
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.view.MotionEvent: int getActionButton()> (SMS_MMS)
<android.view.View: int[] getAttributeResolutionStack(int)> (SMS_MMS)
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$9: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.util.MemoryIntArray: int getMaxSize()> (SMS_MMS)
<android.service.autofill.FillEventHistory: int getSessionId()> (SMS_MMS)
<android.widget.TextView: float getTextSize()> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: int getCharacterSet()> (SMS_MMS)
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()> (SMS_MMS)
<android.net.TrafficStats: long getTxBytes(java.lang.String)> (SMS_MMS)
<android.net.LinkProperties: int hashCode()> (SMS_MMS)
<android.app.ActivityManager: java.util.List getBugreportWhitelistedPackages()> (SMS_MMS)
<android.app.IApplicationThread$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: boolean isDefaultSmsApplication(android.content.Context,java.lang.String)> (SMS_MMS)
<android.app.ActivityOptions: int getSplitScreenCreateMode()> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.ICallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdWhitelistExceptIdle()> (SMS_MMS)
<android.net.CaptivePortalData: int hashCode()> (SMS_MMS)
<android.app.timezone.DistroRulesVersion: java.lang.String getRulesVersion()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getForceBackgroundCheck()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.lang.Boolean lambda$areCarrierIdentifiersAllowed$0(java.lang.Boolean)> (SMS_MMS)
<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()> (SMS_MMS)
<android.telephony._$$Lambda$Rj1EhkciYpNb4BkVxAk_tibQjhM: java.lang.Object applyOrThrow(java.lang.Object)> (SMS_MMS)
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()> (SMS_MMS)
<android.webkit.WebBackForwardList: java.lang.Object clone()> (SMS_MMS)
<android.view.ViewConfiguration: int getScrollBarSize()> (SMS_MMS)
<android.telephony.CellIdentityNr$1: void <init>()> (SMS_MMS)
<android.app.DisabledWallpaperManager: int getWallpaperIdForUser(int,int)> (SMS_MMS)
<android.content.pm.PackageManager: java.util.Set getWhitelistedRestrictedPermissions(java.lang.String,int)> (SMS_MMS)
<android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ActivityManager: int getPackageImportance(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)> (SMS_MMS)
<android.telephony.SmsMessage: int getStatusOnIcc()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: android.app.usage.UsageEvents$Event getObfuscatedNotificationEvent()> (SMS_MMS)
<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,int,int)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)> (SMS_MMS)
<android.app.Activity: android.app.Application getApplication()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo$ManufactureDate: int hashCode()> (SMS_MMS)
<android.app.IAlarmManager$Stub$Proxy: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.webkit.FindAddress: java.lang.String findAddress(java.lang.String)> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityConfig$Builder getDefaultBuilder(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.os.INetworkManagementService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.media.WebVttParser$3: android.media.TextTrackRegion parseRegion(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: android.content.res.Resources getResources()> (SMS_MMS)
<android.content.res._$$Lambda$ResourcesImpl$h3PTRX185BeQl8SVC2_w9arp5Og: java.lang.Object get()> (SMS_MMS)
<android.telecom._$$Lambda$qa4s1Fm2YuohEunaJUJcmJXDXG0: java.lang.String getSessionId()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getAllStackInfos()> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: byte[] read()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector access$102(android.hardware.camera2.legacy.GLThreadManager,android.hardware.camera2.legacy.CaptureCollector)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int addRngEntropy(android.security.keystore.IKeystoreResponseCallback,byte[],int)> (SMS_MMS)
<android.widget.SearchView: int getSuggestionCommitIconResId()> (SMS_MMS)
<android.view.IScrollCaptureController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)> (SMS_MMS)
<android.os.MessageQueue: int postSyncBarrier()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub: android.hardware.display.IColorDisplayManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IUserManager$Default: int getUserIconBadgeResId(int)> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()> (SMS_MMS)
<android.app.IAlarmManager$Stub: android.app.IAlarmManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getDoNotAskCredentialsOnBoot()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub: android.hardware.ISensorPrivacyListener getDefaultImpl()> (SMS_MMS)
<android.app.NotificationChannel: java.lang.String getGroup()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperColors getWallpaperColors(int,int,int)> (SMS_MMS)
<android.telephony.SmsCbMessage: boolean isEmergencyMessage()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.window.ITaskOrganizerController$Default: java.util.List getRootTasks(int,int[])> (SMS_MMS)
<android.location.GnssStatus: float getElevationDegrees(int)> (SMS_MMS)
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)> (SMS_MMS)
<android.telephony.CellInfoTdscdma$1: void <init>()> (SMS_MMS)
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumHeight()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean rebootModem(int)> (SMS_MMS)
<android.content.pm.ApplicationInfo: int describeContents()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.util.List getProfiles(int,boolean)> (SMS_MMS)
<android.content.IntentFilter: java.lang.String getCategory(int)> (SMS_MMS)
<android.location.Address: java.lang.String getCountryCode()> (SMS_MMS)
<android.os.FactoryTest: int getMode()> (SMS_MMS)
<android.content.res.TypedArray: int getType(int)> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getCacheForType(int)> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub: com.android.internal.app.IVoiceInteractorCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaDescription: java.lang.String getMediaId()> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getSplitPermissions()> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getDriverVersion()> (SMS_MMS)
<android.app.AppOpsManager: java.util.List getPackagesForOps(int[])> (SMS_MMS)
<android.app.IActivityController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.RecurrenceRule$NonrecurringIterator: android.util.Range next()> (SMS_MMS)
<android.database.MatrixCursor: int getCount()> (SMS_MMS)
<android.app.BackStackRecord: boolean isEmpty()> (SMS_MMS)
<android.animation.AnimatorSet: long getDuration()> (SMS_MMS)
<android.os.health.HealthStats: java.lang.String getDataType()> (SMS_MMS)
<android.telephony.PinResult: android.telephony.PinResult getDefaultFailedResult()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getClusterTimeReaderInstance()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)> (SMS_MMS)
<android.app.role.RoleManager: java.util.List getHeldRolesFromController(java.lang.String)> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub: android.print.IPrintJobStateChangeListener getDefaultImpl()> (SMS_MMS)
<android.widget.CompoundButton: android.graphics.PorterDuff$Mode getButtonTintMode()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getLabelRes()> (SMS_MMS)
<android.widget.Editor: android.os.ParcelableParcel saveInstanceState()> (SMS_MMS)
<android.app.Notification$MessagingStyle: java.lang.CharSequence getConversationTitle()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int addSubInfoRecord(java.lang.String,int)> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)> (SMS_MMS)
<android.os.IIncidentCompanion$Default: java.util.List getIncidentReportList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.LinkProperties: java.util.List getAllAddresses()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int permissionToOpCode(java.lang.String)> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub: android.content.IRestrictionsManager getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.Curve: int describeContents()> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getZOffsetUncertaintyMm()> (SMS_MMS)
<android.app.role.IRoleManager$Stub: android.app.role.IRoleManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectNotificationList()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getTaskForActivity(android.os.IBinder,boolean)> (SMS_MMS)
<android.app.ISearchManager$Stub: android.app.ISearchManager getDefaultImpl()> (SMS_MMS)
<android.app.RemoteInput: int describeContents()> (SMS_MMS)
<android.accounts.Account: java.lang.String getAccessId()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.os.VibrationEffect$OneShot: int getAmplitude()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SignalStrength: int getCdmaEcio()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.ValueAnimator: android.animation.AnimationHandler getAnimationHandler()> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: int describeContents()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener getDefaultImpl()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub: android.hardware.radio.ITunerCallback getDefaultImpl()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.VolumePolicy: int describeContents()> (SMS_MMS)
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: android.content.res.ColorStateList getColorStateList()> (SMS_MMS)
<android.app.IServiceConnection$Stub: android.app.IServiceConnection getDefaultImpl()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()> (SMS_MMS)
<android.app.JobSchedulerImpl: android.app.job.JobInfo getPendingJob(int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)> (SMS_MMS)
<android.media.AudioGain: int maxValue()> (SMS_MMS)
<android.telephony.ModemInfo$1: void <init>()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getTextSize()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsResponse: int hashCode()> (SMS_MMS)
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getDurationMinute()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int[] getContextHubHandles()> (SMS_MMS)
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger$MarshalerNativeByteToInteger: int getNativeSize()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaPrlVersion()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getDeviceOwnerLockScreenInfo()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: int getOpCount()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getAllInterfaceNames()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.media.midi.IMidiDeviceOpenCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getPackageResourcePath()> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: android.util.ArraySet getAllPredefinedSizes()> (SMS_MMS)
<android.view.MotionEvent: float getSize(int)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.BulletSpan: int getLeadingMargin(boolean)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultSubscriptionId()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: byte[] verifyCredential(com.android.internal.widget.LockscreenCredential,long,int)> (SMS_MMS)
<android.app.FragmentManagerImpl: java.util.List getFragments()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: int getAnimationType()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Proxy: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyHistogram$1: android.telephony.TelephonyHistogram createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.renderscript.Type: int getArrayCount()> (SMS_MMS)
<android.widget.TextView: android.text.TextPaint getPaint()> (SMS_MMS)
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()> (SMS_MMS)
<android.util.LongSparseArray: java.lang.Object get(long)> (SMS_MMS)
<android.location.Address: java.lang.String getUrl()> (SMS_MMS)
<android.app.SearchableInfo: int getVoicePromptTextId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int[] getSubId(int)> (SMS_MMS)
<android.view.View: android.graphics.Insets computeOpticalInsets()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Debug: java.lang.String getRuntimeStat(java.lang.String)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getText()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int countExcessivePowers()> (SMS_MMS)
<android.os.StatFs: long getAvailableBlocksLong()> (SMS_MMS)
<android.media.IAudioService$Default: int getStreamVolume(int)> (SMS_MMS)
<android.security.keystore.KeystoreResponse: int describeContents()> (SMS_MMS)
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getOrganizationNameForUser(int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: int hashCode()> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getPassphrase()> (SMS_MMS)
<android.graphics.ImageDecoder$DecodeException: int getError()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVideoCallingEnabled()> (SMS_MMS)
<android.os.Message: int describeContents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getOrganizationNameForUser(int)> (SMS_MMS)
<android.graphics.fonts.Font: android.os.LocaleList getLocaleList()> (SMS_MMS)
<android.net.TrafficStats: int getAndSetThreadStatsTag(int)> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()> (SMS_MMS)
<android.view.DisplayCutout: int hashCode()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: int fdeComplete()> (SMS_MMS)
<android.os.MemoryFile: int readBytes(byte[],int,int,int)> (SMS_MMS)
<android.media.AudioManager: java.util.List getAudioVolumeGroups()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.Window: float getElevation()> (SMS_MMS)
<android.accounts.Account$1: android.accounts.Account[] newArray(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.view.accessibility.AccessibilityWindowInfo getWindow(int)> (SMS_MMS)
<android.view.textclassifier.TextSelection: int getSelectionEndIndex()> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getTvInputList(int)> (SMS_MMS)
<android.os.Debug: int getGlobalGcInvocationCount()> (SMS_MMS)
<android.hardware.ICameraService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionAdd: int mergeBehavior()> (SMS_MMS)
<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams: int access$000(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams)> (SMS_MMS)
<android.widget.ExpandableListView: int getPackedPositionType(long)> (SMS_MMS)
<android.app.IApplicationThread$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.vr.IVrManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule: int hashCode()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentlyCommittedRollbacks()> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.view.ViewGroup: android.view.View getDeepestFocusedChild()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: com.android.ims.internal.IImsFeatureStatusCallback getDefaultImpl()> (SMS_MMS)
<android.net.NetworkScoreManager: java.util.List getAllValidScorers()> (SMS_MMS)
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int,long)> (SMS_MMS)
<android.media.session.MediaController: long getFlags()> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub: android.view.autofill.IAutoFillManagerClient asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getActiveTimeReaderInstance()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: android.view.ViewTreeObserver getViewTreeObserver()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float getMinValue(int)> (SMS_MMS)
<android.os.Parcel: long[] createLongArray()> (SMS_MMS)
<android.app.IWindowToken$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: java.lang.String getCurrentWebViewPackageName()> (SMS_MMS)
<android.animation.AnimationHandler: android.animation.AnimationHandler getInstance()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub: android.view.autofill.IAutoFillManagerClient getDefaultImpl()> (SMS_MMS)
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getTransformCapabilities()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getLogo()> (SMS_MMS)
<android.view.MotionEvent: float getOrientation(int)> (SMS_MMS)
<android.hardware.ISerialManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: int getRestrictBackgroundByCaller()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: android.transition.Transition getExitTransition()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap(boolean)> (SMS_MMS)
<android.app.VoiceInteractor$Request: android.app.Activity getActivity()> (SMS_MMS)
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> (SMS_MMS)
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)> (SMS_MMS)
<android.text.style.AlignmentSpan$Standard: int getSpanTypeId()> (SMS_MMS)
<android.os.health.HealthStats: java.util.Map getMeasurements(int)> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Default: long getSecureUserId(int)> (SMS_MMS)
<android.net.RssiCurve: int describeContents()> (SMS_MMS)
<android.widget.LinearLayout: int measureNullChild(int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.CharSequence getCarrierName()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getInstantAppCookie(java.lang.String,int)> (SMS_MMS)
<android.view.InputDevice: boolean isEnabled()> (SMS_MMS)
<android.view.RemoteAnimationAdapter: long getStatusBarTransitionDelay()> (SMS_MMS)
<android.content.pm.PackageParser$Activity: int describeContents()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getToIndex()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isUp()> (SMS_MMS)
<android.content.pm.VerifierDeviceIdentity: int hashCode()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector$MarshalerRggbChannelVector: int getNativeSize()> (SMS_MMS)
<android.location.GpsSatellite: float getElevation()> (SMS_MMS)
<android.app.SearchableInfo: int getVoiceLanguageId()> (SMS_MMS)
<android.animation.Animator: int getChangingConfigurations()> (SMS_MMS)
<android.location.GpsMeasurement: int getBitNumber()> (SMS_MMS)
<android.provider.DeviceConfig: float getFloat(java.lang.String,java.lang.String,float)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int getOpenFlags()> (SMS_MMS)
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean)> (SMS_MMS)
<android.net.IConnectivityManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)> (SMS_MMS)
<android.app.Notification: int getBadgeIconType()> (SMS_MMS)
<android.app.ActivityThread: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.content.res.TypedArray: int getInteger(int,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultDataSubId()> (SMS_MMS)
<android.net.TrafficStats: long getUidUdpTxBytes(int)> (SMS_MMS)
<android.app.job.JobParameters: android.app.job.IJobCallback getCallback()> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getTargetLightness()> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifySubscriptionInfoChanged()> (SMS_MMS)
<android.view.InputChannel: int describeContents()> (SMS_MMS)
<android.widget.TextView: int getGravity()> (SMS_MMS)
<android.view.SurfaceView: android.view.SurfaceControl getSurfaceControl()> (SMS_MMS)
<android.view.MenuInflater$MenuState: android.view.SubMenu addSubMenuItem()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String,int)> (SMS_MMS)
<android.view.textclassifier.ConversationActions: java.lang.String getId()> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String getTag()> (SMS_MMS)
<android.content.IntentFilter: java.lang.String getDataType(int)> (SMS_MMS)
<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()> (SMS_MMS)
<android.view.IRotationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: android.content.ComponentName getActivityComponent()> (SMS_MMS)
<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale getLocale()> (SMS_MMS)
<android.view.View: java.lang.Object getTag()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map getDabFrequencyTable()> (SMS_MMS)
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()> (SMS_MMS)
<android.content.RestrictionsManager: boolean hasRestrictionsProvider()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.os.LocaleList getLocaleList()> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.AbsSpinner: int getChildWidth(android.view.View)> (SMS_MMS)
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> android.permission.STOP_APP_SWITCHES (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalRss()> (SMS_MMS)
<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer getBinderInterface()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int lambda$getShortcutInputMethodsAndSubtypes$2(android.view.inputmethod.InputMethodInfo)> (SMS_MMS)
<android.app.Activity: android.app.LoaderManager getLoaderManager()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkStatsService$Default: android.net.NetworkStats getDetailedUidStats(java.lang.String[])> (SMS_MMS)
<android.app.blob.BlobStoreManager: long getRemainingLeaseQuotaBytes()> (SMS_MMS)
<android.net.IpPrefix$1: int compare(android.net.IpPrefix,android.net.IpPrefix)> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String[] getNonSystemLocales()> (SMS_MMS)
<android.security.net.config.ManifestConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()> (SMS_MMS)
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)> (SMS_MMS)
<android.view.WindowContentFrameStats: int describeContents()> (SMS_MMS)
<android.text.FontConfig$Alias: java.lang.String getToName()> (SMS_MMS)
<android.view.InsetsController: int getSystemBarsBehavior()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: long getAwakeTimePlugged()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm$1: void <init>()> (SMS_MMS)
<android.app.ResourcesManager: android.app.ResourcesManager getInstance()> (SMS_MMS)
<android.net.Network: int hashCode()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.media.MediaRoute2Info: int getConnectionState()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)> (SMS_MMS)
<android.text.style.LocaleSpan: int getSpanTypeId()> (SMS_MMS)
<android.content.ContextWrapper: android.content.ContentCaptureOptions getContentCaptureOptions()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: int hashCode()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getId()> (SMS_MMS)
<android.hardware.radio.ProgramList$Filter: int describeContents()> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub: android.location.IGnssNavigationMessageListener getDefaultImpl()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()> (SMS_MMS)
<android.security.KeyStore$CertificateChainPromise: java.util.concurrent.CompletableFuture getFuture()> (SMS_MMS)
<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)> (SMS_MMS)
<android.text.style.StrikethroughSpan: int describeContents()> (SMS_MMS)
<android.printservice.recommendation.RecommendationInfo: java.lang.CharSequence getName()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.ViewConfiguration: int getScrollBarFadeDuration()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int hashCode()> (SMS_MMS)
<android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getTransformCapabilities()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int getPriority()> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub: android.app.prediction.IPredictionManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: java.util.List getCallbacks()> (SMS_MMS)
<android.content.pm.InstallSourceInfo: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getSystemTextClassifierPackageName()> (SMS_MMS)
<android.app.Notification$CarExtender: android.graphics.Bitmap getLargeIcon()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()> (SMS_MMS)
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.util.List getCerts()> (SMS_MMS)
<android.database.BulkCursorNative: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.GraphicBuffer: int getHeight()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int access$802(android.window.WindowContainerTransaction$Change,int)> (SMS_MMS)
<android.app.IActivityManager$Default: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)> (SMS_MMS)
<android.os.UserHandle: int getSharedAppGid(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoWiFiRoamingSettingEnabled(int)> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.CompatibilityInfo getCompatibilityInfo()> (SMS_MMS)
<android.media.RoutingSessionInfo: java.util.List getDeselectableRoutes()> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionAdd: int access$1800(android.widget.RemoteViews$ViewGroupActionAdd)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub: android.hardware.input.ITabletModeChangedListener getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer getDefaultImpl()> (SMS_MMS)
<android.security.net.config.ManifestConfigSource$DefaultConfigSource: java.util.Set getPerDomainConfigs()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Timer: int getCountLocked(int)> (SMS_MMS)
<android.webkit.WebViewProviderInfo: int describeContents()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()> (SMS_MMS)
<android.view.textclassifier.ConversationAction: int describeContents()> (SMS_MMS)
<android.hardware.usb.UsbInterface: int describeContents()> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub: android.permission.IOnPermissionsChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.ProgramSelector: int getProgramType()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.ComponentName getDefaultPhoneApp()> (SMS_MMS)
<android.view.IGraphicsStats$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: void toggleRadioOnOff()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: boolean isValid()> (SMS_MMS)
<android.location.GnssMeasurement: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Default: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getScrollY()> (SMS_MMS)
<android.media.AudioManager: boolean isMasterMute()> (SMS_MMS)
<android.telephony.CellInfo: boolean isRegistered()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getWidth()> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: android.graphics.Paint getRipplePaint()> (SMS_MMS)
<android.hardware.usb.UsbManager: java.util.List getPorts()> (SMS_MMS)
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)> (SMS_MMS)
<android.media.MediaDescription: android.net.Uri getIconUri()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.FontRequest: java.lang.String getProviderAuthority()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.filterfw.core.NativeBuffer: int getElementSize()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub: android.hardware.fingerprint.IFingerprintService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: int getRequiredFlags()> (SMS_MMS)
<android.app.RemoteInput: java.util.Set getAllowedDataTypes()> (SMS_MMS)
<android.os.StrictMode$2: java.lang.Object initialValue()> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getId()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure: long getAcquisitionEndTime()> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkStatsService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.BarringInfo: android.telephony.BarringInfo createLocationInfoSanitizedCopy()> (SMS_MMS)
<android.widget.AbsListView: int getCheckedItemCount()> (SMS_MMS)
<android.widget.Spinner$DropdownPopup: java.lang.CharSequence getHintText()> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getAverageTime()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,java.lang.String)> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int resolveSecondaryColor(android.content.Context,int,boolean)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)> (SMS_MMS)
<android.media.AudioPortConfig: int samplingRate()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.content.Intent[] getIntentsNoExtras()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalOrientation(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isManagedKiosk()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.ResourcesKey access$200(android.app.ResourcesManager,android.content.res.ResourcesImpl)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForPackageForUser(long,long,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.NotificationManager: int getImportance()> (SMS_MMS)
<android.os.health.TimerStat: long getTime()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector access$100(android.hardware.camera2.legacy.GLThreadManager)> (SMS_MMS)
<android.transition.Transition: long getDuration()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.UidRange: int count()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.KeySet getSigningKeySet(java.lang.String)> (SMS_MMS)
<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte[] newArray(int)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: java.util.List getPorts()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String getId()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Default: boolean getAvbPublicKey(android.gsi.AvbPublicKey)> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: android.content.ComponentName getActivity()> (SMS_MMS)
<android.inputmethodservice.SoftInputWindow: int getGravity()> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int cancel()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDischargeLevelStepTracker()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.widget.ArrayAdapter: long getItemId(int)> (SMS_MMS)
<android.app.Notification: java.lang.String getChannelId()> (SMS_MMS)
<android.app.ITaskStackListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.PowerManager: boolean isLightDeviceIdleMode()> (SMS_MMS)
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: int getConditionalBarringTimeSeconds()> (SMS_MMS)
<android.content.ContentProvider: android.net.Uri access$000(android.content.ContentProvider,android.net.Uri)> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: boolean isAttachedToWindow()> (SMS_MMS)
<android.content.res.GradientColor: int access$000(android.content.res.GradientColor)> (SMS_MMS)
<android.location.GnssMeasurement: double getFullInterSignalBiasUncertaintyNanos()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: byte[] getInformationElements()> (SMS_MMS)
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)> (SMS_MMS)
<android.app.Fragment: android.app.Activity getActivity()> (SMS_MMS)
<android.media.MediaCas$1: android.hardware.cas.V1_0.IMediaCasService create()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> (SMS_MMS)
<android.database.IContentObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)> (SMS_MMS)
<android.telephony.UiccSlotInfo: boolean getIsActive()> (SMS_MMS)
<android.media.TimedText: android.graphics.Rect getBounds()> (SMS_MMS)
<android.media.session.PlaybackState: long getActiveQueueItemId()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.net.netstats.provider.INetworkStatsProviderCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.PowerManager: int getCurrentThermalStatus()> (SMS_MMS)
<android.net.LinkAddress: int getScope()> (SMS_MMS)
<android.telephony.TelephonyManager: int getImsRegTechnologyForMmTel()> (SMS_MMS)
<android.os.SystemClock$3: long millis()> (SMS_MMS)
<android.media.session.PlaybackState: java.util.List getCustomActions()> (SMS_MMS)
<android.telephony.SignalStrength: int getGsmDbm()> (SMS_MMS)
<android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.LinearLayout: int getVirtualChildCount()> (SMS_MMS)
<android.os.incremental.V4Signature: byte[] getSigningData(long,android.os.incremental.V4Signature$HashingInfo,android.os.incremental.V4Signature$SigningInfo)> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub: android.media.midi.IMidiDeviceListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getItemCount()> (SMS_MMS)
<android.view.View: int computeHorizontalScrollExtent()> (SMS_MMS)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.TotalCaptureResult: int getSessionId()> (SMS_MMS)
<android.telecom.PhoneAccountHandle: int describeContents()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()> (SMS_MMS)
<android.media.AudioRecord: int getAudioSource()> (SMS_MMS)
<android.net.Network$NetworkBoundSocketFactory: java.net.Socket createSocket()> (SMS_MMS)
<android.os.storage.VolumeInfo: int getStateDescription()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Message: android.app.Person getAuthor()> (SMS_MMS)
<android.media.MediaDrm$CertificateRequest: byte[] getData()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: int loadNanoApp(int,android.hardware.location.NanoApp)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$7: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1(int)> (SMS_MMS)
<android.app.AutomaticZenRule: android.service.notification.ZenPolicy getZenPolicy()> (SMS_MMS)
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: int fdeGetPasswordType()> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$grantDefaultRoles$0(android.app.role.IRoleController)> (SMS_MMS)
<android.content.res.TypedArray: boolean getBoolean(int,boolean)> (SMS_MMS)
<android.renderscript.Int2: int elementSum()> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.CameraManager: boolean isHiddenPhysicalCamera(java.lang.String)> (SMS_MMS)
<android.net.MacAddress: int hashCode()> (SMS_MMS)
<com.android.internal.content.PackageMonitor: int isPackageAppearing(java.lang.String)> (SMS_MMS)
<android.filterfw.geometry.Rectangle: float getWidth()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$RecordSource: int getDataSize(boolean)> (SMS_MMS)
<android.app.ActivityManager$StackInfo: int describeContents()> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: android.view.Menu getMenu()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()> (SMS_MMS)
<android.app.ActivityOptions: int getPendingIntentLaunchFlags()> (SMS_MMS)
<android.print.PrinterId: android.content.ComponentName getServiceName()> (SMS_MMS)
<android.widget.ActionMenuPresenter$SavedState: int describeContents()> (SMS_MMS)
<android.service.autofill.UserData: android.util.ArrayMap getFieldClassificationAlgorithms()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.Logging.Session: long getExecutionStartTimeMilliseconds()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getLastBugReportRequestTime()> (SMS_MMS)
<android.widget.EditorTouchState: float getLastDownY()> (SMS_MMS)
<android.location.GnssNavigationMessage: int getStatus()> (SMS_MMS)
<android.media.IMediaRouterClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.RippleForeground$4: java.lang.Float get(android.graphics.drawable.RippleForeground)> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.content.pm.IPackageInstallerSessionFileSystemConnector getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.print.PrintManager$PrintJobStateChangeListenerWrapper: android.print.PrintManager$PrintJobStateChangeListener getListener()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getAutoRevokePermissionsMode()> (SMS_MMS)
<android.text.SpannableStringInternal: int length()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getVibrantColor(int)> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: int getOpacity()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.util.List getPathSegments()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.hardware.location.ContextHubClientCallback)> (SMS_MMS)
<com.android.internal.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean supplyPuk(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.storage.StorageManager: java.lang.String getBestVolumeDescription(android.os.storage.VolumeInfo)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(java.util.UUID,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int abort(android.security.keystore.IKeystoreResponseCallback,android.os.IBinder)> (SMS_MMS)
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()> (SMS_MMS)
<android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiSupplStateTimer(int)> (SMS_MMS)
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> (SMS_MMS)
<android.widget._$$Lambda$etfJkiCJnT2dqM2O4M2TCm9i_oA: java.lang.Object get()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: int describeContents()> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.renderscript.Allocation: android.renderscript.Allocation$MipmapControl getMipmap()> (SMS_MMS)
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)> (SMS_MMS)
<android.view.ViewGroup: android.view.View getTransientView(int)> (SMS_MMS)
<android.widget.TextView$Marquee: float getScroll()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.Utils: java.lang.String getFileDisplayNameFromUri(android.content.Context,android.net.Uri)> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.SparseIntArray: int keyAt(int)> (SMS_MMS)
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane getReflectingPlane()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwnerNameOnAnyUser()> (SMS_MMS)
<android.view.MotionEvent: float getTouchMinor(int)> (SMS_MMS)
<android.view.IInputMonitorHost$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastBugReportRequestTime()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes,int,int)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaFormat: java.lang.Number getNumber(java.lang.String,java.lang.Number)> (SMS_MMS)
<android.os.Build$Partition: java.lang.String getFingerprint()> (SMS_MMS)
<android.renderscript.Long3: long length()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedMainComponent: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxBufferMillis()> (SMS_MMS)
<android.hardware.face.FaceManager: void getFeature(int,int,android.hardware.face.FaceManager$GetFeatureCallback)> (SMS_MMS)
<android.graphics.ParcelableColorSpace: int hashCode()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.VolumeInfo: java.io.File getInternalPath()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getZenMode()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: android.view.contentcapture.ContentCaptureSessionId getParentSessionId()> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: boolean isViewsTransitionComplete()> (SMS_MMS)
<android.hardware.Sensor: int getMinDelay()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$14: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean canManageSubscription(android.content.Context,java.lang.String)> (SMS_MMS)
<android.util.SparseIntArray: int indexOfValue(int)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Default: long[] getAuthenticatorIds()> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Default: int getProperty(int,android.os.BatteryProperty)> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.lowpan.LowpanScanner: int lambda$createScanOptionMap$0(java.lang.Integer)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace(java.lang.String)> (SMS_MMS)
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.location.Address: java.lang.String getCountryName()> (SMS_MMS)
<android.telephony.SignalStrength: int getWcdmaAsuLevel()> (SMS_MMS)
<android.app.job.JobInfo: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastForSubscriber(int,int,int)> (SMS_MMS)
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)> (SMS_MMS)
<android.telephony.SmsCbLocation: boolean isInLocationArea(android.telephony.SmsCbLocation)> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.IHdmiControlService access$100(android.hardware.hdmi.HdmiControlManager)> (SMS_MMS)
<android.media.AudioTrack: int getAudioSessionId()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: android.os.IBinder getWindowToken(int,int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)> (SMS_MMS)
<android.widget.SearchView: int getSuggestionRowLayout()> (SMS_MMS)
<android.graphics.BlendModeColorFilter: android.graphics.BlendMode getMode()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: long[] getUserSize(java.lang.String,int,int,int[])> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)> (SMS_MMS)
<android.net.StaticIpConfiguration: int hashCode()> (SMS_MMS)
<android.filterfw.core.GLEnvironment: int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getEmailFrom()> (SMS_MMS)
<android.os.ParcelableParcel: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getSmsSendCapableForPhone(int,boolean)> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,android.os.UserHandle)> (SMS_MMS)
<android.accounts.IAccountManager$Default: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.Service: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()> (SMS_MMS)
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.TextView: java.lang.Object getServiceManagerForUser(java.lang.String,java.lang.Class)> (SMS_MMS)
<android.util.ExceptionUtils: java.lang.Throwable getRootCause(java.lang.Throwable)> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub: android.security.keystore.IKeystoreResponseCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.contentsuggestions.SelectionsRequest: android.os.Bundle getExtras()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.LocationManager: java.lang.String getExtraLocationControllerPackage()> (SMS_MMS)
<android.os.UserHandle: int getSharedAppGid(int,int)> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.WifiNl80211Manager$SignalPollResult signalPoll(java.lang.String)> (SMS_MMS)
<android.location.Criteria: int access$002(android.location.Criteria,int)> (SMS_MMS)
<com.android.internal.net.VpnProfile: java.util.List getAllowedAlgorithms()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getName()> (SMS_MMS)
<android.hardware.hdmi.HdmiPortInfo: int getId()> (SMS_MMS)
<android.os.Parcel: int readInt()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: boolean getPackageAskScreenCompat(java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)> (SMS_MMS)
<android.view.View: int getMeasuredWidthAndState()> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: int getParentSessionId()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Message: java.time.ZonedDateTime getReferenceTime()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getMaxNumPictureInPictureActions(android.os.IBinder)> (SMS_MMS)
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class,boolean)> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: boolean getAutoPersisting()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()> (SMS_MMS)
<android.os.IThermalStatusListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$302(android.security.keystore.recovery.WrappedApplicationKey,byte[])> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.NetworkCapabilities getNetworkCapabilities()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getCacheDir()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File[] getObbDirs()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataAllowedInVoiceCall()> (SMS_MMS)
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: int hashCode()> (SMS_MMS)
<android.content.pm.BaseParceledListSlice: java.util.List getList()> (SMS_MMS)
<android.net.LinkProperties: java.lang.String getPrivateDnsServerName()> (SMS_MMS)
<android.transition.Transition: android.graphics.Rect getEpicenter()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedInputMethodsForCurrentUser()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext getContentCaptureContext()> (SMS_MMS)
<android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.MediaController: java.util.List getQueue()> (SMS_MMS)
<android.print.PrintAttributes: int hashCode()> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub: android.view.IDisplayWindowRotationCallback getDefaultImpl()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.View: int getBottom()> (SMS_MMS)
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: int getMaxItems()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.VrManager: int getVr2dDisplayId()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.view.Surface getInputSurface()> (SMS_MMS)
<android.content.pm.permission.SplitPermissionInfoParcelable: java.util.List getNewPermissions()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: int getApplicationFlags()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getUuid()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: android.os.ParcelUuid createSubscriptionGroup(int[],java.lang.String)> (SMS_MMS)
<android.app.ExpandableListActivity: long getSelectedId()> (SMS_MMS)
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Default: int getRingerModeExternal()> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getHardwareList()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getActiveNetworkForUid(int,boolean)> (SMS_MMS)
<com.android.internal.app.MessageSamplingConfig: int getSampledOpCode()> (SMS_MMS)
<android.view.View: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: long getRecommendedTimeoutMillis()> (SMS_MMS)
<android.os.IVold$Stub: android.os.IVold getDefaultImpl()> (SMS_MMS)
<android.view.animation.ScaleAnimation: float resolveScale(float,int,int,int,int)> (SMS_MMS)
<com.android.internal.util.FunctionalUtils: java.lang.String getLambdaName(java.lang.Object)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMvnoTypeIntFromString(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean resetRadioConfig()> (SMS_MMS)
<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int,int)> (SMS_MMS)
<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()> (SMS_MMS)
<android.os.IRemoteCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageUserState: int hashCode()> (SMS_MMS)
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()> (SMS_MMS)
<android.media.Tokenizer: int access$100(android.media.Tokenizer)> (SMS_MMS)
<android.telephony.TelephonyManager: android.os.PersistableBundle getCarrierConfig()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.TextLanguage: android.icu.util.ULocale getLocale(int)> (SMS_MMS)
<android.graphics.Color: float[] getComponents(float[])> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int describeContents()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.lang.String getProviderMimeType(android.net.Uri,int)> (SMS_MMS)
<android.appwidget.AppWidgetProviderInfo: int describeContents()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()> (SMS_MMS)
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId getParentAutofillId()> (SMS_MMS)
<android.telephony.CallAttributes: android.telephony.CallQuality getCallQuality()> (SMS_MMS)
<android.media.AudioManager: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getInstantAppIcon(java.lang.String)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: int describeContents()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getRawZigZag32Size(int)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getPrimaries()> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataActivationState()> (SMS_MMS)
<android.transition.Visibility: int getMode()> (SMS_MMS)
<android.net.IpPrefix: java.net.InetAddress getAddress()> (SMS_MMS)
<android.util.TimingsTraceLog: java.util.List getUnfinishedTracesForDebug()> (SMS_MMS)
<android.location.GpsNavigationMessage: byte getPrn()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.RecordingCanvas: int getMaximumBitmapWidth()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: java.util.List getContextHubs()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getCallingFeatureId()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getServiceName()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Default: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCarrierPrivilegeStatus(int)> (SMS_MMS)
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaCodec$OutputFrame getOutputFrame(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getAllPhoneAccountsCount()> (SMS_MMS)
<android.filterfw.core.NativeFrame: int[] getInts()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.os.Bundle getActivityOptions(android.os.IBinder)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String nextText()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.assist.AssistStructure: long getAcquisitionStartTime()> (SMS_MMS)
<android.view.ViewRootInsetsControllerHost: android.view.inputmethod.InputMethodManager getInputMethodManager()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: com.android.internal.telephony.euicc.IGetRulesAuthTableCallback getDefaultImpl()> (SMS_MMS)
<android.text.style.SuggestionSpan: int describeContents()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getReadPermission()> (SMS_MMS)
<android.view.inputmethod.InputConnectionInspector: int getMissingMethodFlags(android.view.inputmethod.InputConnection)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getSkip464Xlat()> (SMS_MMS)
<android.net.IpSecConfig: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getPsc()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getIdPackage()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.system.suspend.WakeLockInfo: int describeContents()> (SMS_MMS)
<android.app.ITaskStackListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityLte: int[] getBands()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: boolean isStateful()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiActiveTime(long,int)> (SMS_MMS)
<android.hardware.radio.V1_4.CellConfigLte: int hashCode()> (SMS_MMS)
<com.android.internal.view.InlineSuggestionsRequestInfo: int hashCode()> (SMS_MMS)
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomStartTime()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ActivityOptions: int getStartX()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.IWriteResultCallback$Stub: android.print.IWriteResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCache getInstance()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)> (SMS_MMS)
<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.MainContentCaptureSession getMainCaptureSession()> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Default: java.util.List getLeasedBlobs(java.lang.String)> (SMS_MMS)
<android.app.ActivityOptions: int getCustomInPlaceResId()> (SMS_MMS)
<android.telephony.ServiceState: int describeContents()> (SMS_MMS)
<android.view.Window: boolean getAllowEnterTransitionOverlap()> (SMS_MMS)
<android.view.ViewOverlay$OverlayViewGroup: boolean isEmpty()> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$1QOdrF5xwHkpZ5lglQiEDxcF7RA: int applyAsInt(java.lang.Object)> (SMS_MMS)
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance(java.util.Locale)> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: int getChangingConfigurations()> (SMS_MMS)
<android.view.ViewGroup$ChildListForAccessibility: android.view.View getChildAt(int)> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: java.lang.String[] getTheme()> (SMS_MMS)
<android.os.BaseBundle: float[] getFloatArray(java.lang.String)> (SMS_MMS)
<android.telephony.UiccCardInfo: int getSlotIndex()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getDataManagementIntentForUser(int,java.lang.String)> (SMS_MMS)
<android.content.om.OverlayManager: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telecom.TelecomManager: boolean isInManagedCall()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int logoutUser(android.content.ComponentName)> (SMS_MMS)
<android.util.EventLog: java.lang.String getTagName(int)> (SMS_MMS)
<android.net.NetworkState: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: int describeContents()> (SMS_MMS)
<android.os.Debug: int getGlobalExternalFreedCount()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView$CharWrapper: int length()> (SMS_MMS)
<android.telephony.CellSignalStrength: int getRscpDbmFromAsu(int)> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub: android.view.IScrollCaptureClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: com.android.internal.policy.DecorView generateDecor(int)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub: android.app.job.IJobScheduler asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()> (SMS_MMS)
<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> (SMS_MMS)
<android.media.MicrophoneInfo: int getGroup()> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()> (SMS_MMS)
<android.content.ClipData$Item: android.net.Uri getUri()> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: int getDeliveryReport()> (SMS_MMS)
<android.hardware.input.InputDeviceIdentifier: java.lang.String getDescriptor()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int checkPermission(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getState()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getDvbDeviceList()> (SMS_MMS)
<android.os.TestLooperManager: java.util.concurrent.LinkedBlockingQueue access$600(android.os.TestLooperManager)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.MatrixCursor: int getType(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitClassLoaderNames()> (SMS_MMS)
<android.transition.ChangeBounds$3: android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds)> (SMS_MMS)
<android.graphics.drawable.TransitionDrawable$TransitionState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()> (SMS_MMS)
<android.telephony.SmsCbLocation: java.lang.String getPlmn()> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()> (SMS_MMS)
<android.app.ISearchManager$Stub: android.app.ISearchManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeInfo[] listUIChanges()> (SMS_MMS)
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)> (SMS_MMS)
<android.text.Layout: int getLineBaseline(int)> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.security.keystore.IKeystoreOperationResultCallback getDefaultImpl()> (SMS_MMS)
<android.content.ContentProvider$1: java.lang.Object doInBackground(java.lang.Object[])> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: int getStartIndex()> (SMS_MMS)
<android.view.contentcapture.ViewNode: android.os.Bundle getExtras()> (SMS_MMS)
<android.view.animation.Transformation: float getAlpha()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)> (SMS_MMS)
<android.app.admin.FreezePeriod: int getEffectiveEndDay()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()> (SMS_MMS)
<com.android.internal.os.KernelSingleUidTimeReader: android.util.SparseArray getLastUidCpuTimeMs()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: int lambda$getSortedOverlays$2(com.android.internal.content.om.OverlayConfig$Configuration)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getForegroundServiceTimer()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getCardId()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getConfigChanges()> (SMS_MMS)
<android.location.GpsMeasurement: double getPseudorangeRateUncertaintyInMetersPerSec()> (SMS_MMS)
<android.location.LocationManager: java.util.List getProviderPackages(java.lang.String)> (SMS_MMS)
<android.graphics.SweepGradient: long createNativeInstance(long)> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Default: android.content.pm.DataLoaderParamsParcel getDataLoaderParams()> (SMS_MMS)
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.util.List getHplmns()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBatteryPropertiesRegistrar asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioTrack: int getState()> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int getLookasideSlotSize()> (SMS_MMS)
<android.os.UserManager: int[] getProfileIds(int,boolean)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: int configureOutputs(android.util.SparseArray)> (SMS_MMS)
<android.view.accessibility.AccessibilityRequestPreparer: android.view.View getView()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.Network getNetworkForType(int)> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: android.view.View getCustomView()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getHint()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getPackageUidAsUser(java.lang.String,int)> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerityRootHash(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo$1: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.textclassifier.TextSelection: int describeContents()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getPackagesForOps(int[])> (SMS_MMS)
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: int getOrientation()> (SMS_MMS)
<android.print.PrintJobInfo: java.lang.CharSequence getStatus(android.content.pm.PackageManager)> (SMS_MMS)
<android.location.LocationRequest: float getSmallestDisplacement()> (SMS_MMS)
<android.renderscript.Type: int getArray(int)> (SMS_MMS)
<android.graphics.Insets: int describeContents()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getFallbackRoute()> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()> (SMS_MMS)
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_5.CellIdentity)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry getNext()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)> (SMS_MMS)
<android.app.Notification$TvExtender: boolean getSuppressShowOverApps()> (SMS_MMS)
<android.net.nsd.NsdManager: java.util.concurrent.CountDownLatch access$100(android.net.nsd.NsdManager)> (SMS_MMS)
<android.app.AppOpsManager: int extractFlagsFromKey(long)> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: int getCurrentPhoneType(int)> (SMS_MMS)
<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture getSurfaceTexture()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int getClirOutgoingState()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: int lastCallbackRequestingState(android.app.servertransaction.ClientTransaction)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceIdAttestationSupported()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: int getWarningType()> (SMS_MMS)
<android.transition.Recolor: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDailyDischargeLevelStepTracker()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getIdAttributeResourceValue(int)> (SMS_MMS)
<android.telephony.UssdResponse$1: android.telephony.UssdResponse createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.View$8: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: android.graphics.Xfermode getXfermode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeLightDoze(int)> (SMS_MMS)
<android.media.RemoteControlClient: int access$800(android.media.RemoteControlClient)> (SMS_MMS)
<android.view.Choreographer$2: android.view.Choreographer initialValue()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String[] getLinkAddresses()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getHint()> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: int getReadReport()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.PrintManager: java.util.List getPrintServiceRecommendations()> (SMS_MMS)
<com.android.internal.os._$$Lambda$RuntimeInit$ep4ioD9YINkHI5Q1wZ0N_7VFAOg: java.lang.Object get()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getPublicExponent()> (SMS_MMS)
<android.app.Activity: int getNextAutofillId()> (SMS_MMS)
<android.view.ViewGroup: int getChildCount()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isMicrophoneMuted()> (SMS_MMS)
<android.security.keymaster.OperationResult: int describeContents()> (SMS_MMS)
<android.content.res.Resources: android.content.res.AssetManager getAssets()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: int getEndIndex()> (SMS_MMS)
<android.content.res.Resources$Theme: int getAppliedStyleResId()> (SMS_MMS)
<android.os.BaseBundle: long getLong(java.lang.String)> (SMS_MMS)
<android.util.SparseArray: int indexOfValueByValue(java.lang.Object)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int getClientId()> (SMS_MMS)
<android.view.animation.Animation: float getScaleFactor()> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: android.content.pm.DataLoaderParams getDataLoaderParams()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: int getTypeLabelResource(int)> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub: android.hardware.location.IContextHubCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCallState()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)> (SMS_MMS)
<android.view.View: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.media.tv.TvInputManager: int getInputState(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionPlan: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.app.INotificationManager$Default: int getBlockedChannelCount(java.lang.String,int)> (SMS_MMS)
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableAnimation()> (SMS_MMS)
<com.android.internal.logging.InstanceId: int describeContents()> (SMS_MMS)
<android.print.PrintAttributes$Resolution: java.lang.String getLabel()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyInfo getProxyForNetwork(android.net.Network)> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager(int)> (SMS_MMS)
<android.telephony.CallQuality: int describeContents()> (SMS_MMS)
<android.net.NetworkInfo: java.lang.String getReason()> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.Map access$900(android.media.tv.TvInputManager)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getTxTimeMillis(int)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: int describeContents()> (SMS_MMS)
<android.telephony.RadioAccessSpecifier$1: void <init>()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] getTransportWhitelist()> (SMS_MMS)
<android.os.AsyncTask: java.util.concurrent.ThreadFactory access$200()> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub: android.print.IPrinterDiscoveryObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VPath$1: android.util.PathParser$PathData get(android.graphics.drawable.VectorDrawable$VPath)> (SMS_MMS)
<android.net.TrafficStats: long getUidRxPackets(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getOverrideApns(android.content.ComponentName)> (SMS_MMS)
<android.util.SparseBooleanArray: int hashCode()> (SMS_MMS)
<android.provider.Settings$Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)> (SMS_MMS)
<android.app.admin.SystemUpdateInfo: int hashCode()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SignalStrength: int getEvdoLevel()> (SMS_MMS)
<android.view.ViewTreeObserver$CopyOnWriteArray: android.view.ViewTreeObserver$CopyOnWriteArray$Access start()> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.content.Context getContext()> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: android.os.Handler access$200(android.net.wifi.nl80211.WifiNl80211Manager)> (SMS_MMS)
<android.location.GnssMeasurement: double getPseudorangeRateUncertaintyMetersPerSecond()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: int registerCallback(android.hardware.location.IContextHubCallback)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.content.Intent getDataManagementIntent(java.lang.String)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String)> (SMS_MMS)
<android.content.pm.PackageManager: java.util.Set getMimeGroup(java.lang.String)> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: int getCount()> (SMS_MMS)
<android.os.PowerManager: android.os.PowerSaveState getPowerSaveState(int)> (SMS_MMS)
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getEnvironmentForState(int)> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCarrierIdListVersion()> (SMS_MMS)
<android.widget.AbsListView: int getTranscriptMode()> (SMS_MMS)
<android.text.style.LeadingMarginSpan$Standard: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubscriptionCarrierId(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getRadioPowerState(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> (SMS_MMS)
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int getMutedColor(int,float)> (SMS_MMS)
<android.content.pm.ShortcutManager: boolean isRateLimitingActive()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.accessibilityservice.AccessibilityGestureEvent: int getGestureId()> (SMS_MMS)
<android.telephony.euicc.DownloadableSubscription: java.lang.String getCarrierName()> (SMS_MMS)
<android.app.EnterTransitionCoordinator: boolean isCrossTask()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()> (SMS_MMS)
<android.os.UserHandle: int getCallingUserId()> (SMS_MMS)
<android.app.AppOpsManager: long access$5100(android.util.LongSparseLongArray,int,int,int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)> (SMS_MMS)
<android.content.pm.PackageUserState$SuspendParams: android.content.pm.PackageUserState$SuspendParams getInstanceOrNull(android.content.pm.SuspendDialogInfo,android.os.PersistableBundle,android.os.PersistableBundle)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.view.autofill.IAugmentedAutofillManagerClient getDefaultImpl()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatterySipper: java.lang.String[] getPackages()> (SMS_MMS)
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getVerticalThumbDrawable()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub: android.view.IRecentsAnimationController asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: float getRightFadingEdgeStrength()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getDefaultRoute()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> (SMS_MMS)
<android.view.AccessibilityInteractionController$PrivateHandler: java.lang.String getMessageName(android.os.Message)> (SMS_MMS)
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProvider getProviderBinder()> (SMS_MMS)
<android.view.View: int getImportantForAccessibility()> (SMS_MMS)
<android.location.LocationRequest: int getQuality()> (SMS_MMS)
<android.app.usage.UsageStats: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,java.lang.String,android.view.accessibility.IAccessibilityInteractionConnection)> (SMS_MMS)
<android.graphics.Canvas: int save()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfiguration: int getUsecaseBitmap()> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray getWindowsOnAllDisplays(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isInEmergencySmsMode()> (SMS_MMS)
<android.widget.PopupWindow: android.graphics.Rect getEpicenterBounds()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.location.GnssReflectingPlane: int describeContents()> (SMS_MMS)
<android.os.IncidentManager$IncidentReport: int describeContents()> (SMS_MMS)
<android.content.ContextWrapper: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: java.util.Map getParameters(java.util.List)> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.app.Fragment: android.content.Context getContext()> (SMS_MMS)
<android.hardware.camera2.params.Capability: android.util.Range getZoomRatioRange()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: int getFormat()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicyConfig: int hashCode()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo$hidl_discriminator: java.lang.String getName(byte)> (SMS_MMS)
<android.view.autofill.ParcelableMap: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSimFullApplication(android.content.Context,boolean)> (SMS_MMS)
<android.drm.DrmRights: java.lang.String getSubscriptionId()> (SMS_MMS)
<android.view.View: java.lang.CharSequence getTooltipText()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray getLifecyclePath(int,int,boolean)> (SMS_MMS)
<android.os.ShellCommand: int handleDefaultCommands(java.lang.String)> (SMS_MMS)
<android.debug.IAdbManager$Stub: android.debug.IAdbManager getDefaultImpl()> (SMS_MMS)
<android.app.timedetector.ManualTimeSuggestion: int hashCode()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener getListener()> (SMS_MMS)
<android.app.Notification$WearableExtender: int getGravity()> (SMS_MMS)
<android.security.KeyStore: byte[] get(java.lang.String,int,boolean)> (SMS_MMS)
<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getLockTaskPackages(android.content.ComponentName)> (SMS_MMS)
<android.os.DropBoxManager$Entry: java.io.InputStream getInputStream()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getResizeMode()> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub: com.android.ims.internal.IImsEcbmListener getDefaultImpl()> (SMS_MMS)
<android.app.servertransaction.PauseActivityItem: int getTargetState()> (SMS_MMS)
<android.view.View: android.os.IBinder getWindowToken()> (SMS_MMS)
<android.os.PowerManager: boolean isPowerSaveMode()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<android.view.Display: int getColorMode()> (SMS_MMS)
<android.app.ActivityThread: android.os.Bundle getCoreSettings()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getAvailableFeatures()> (SMS_MMS)
<android.media.tv.TvInputManager$Session: java.util.List getTracks(int)> (SMS_MMS)
<android.app.Notification$Action: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isWorldPhone(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Bitmap: android.graphics.NinePatch$InsetStruct getNinePatchInsets()> (SMS_MMS)
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int getConnectionOwnerUid(android.net.ConnectionInfo)> (SMS_MMS)
<android.location.ILocationManager$Default: java.util.List getProviderPackages(java.lang.String)> (SMS_MMS)
<android.net.INetworkScoreService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus access$1302(android.location.LocationManager$GnssStatusListenerManager,android.location.GnssStatus)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()> (SMS_MMS)
<android.widget.Spinner$DialogPopup: int getHorizontalOffset()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getSharedLibraries(int)> (SMS_MMS)
<android.content.ContentProvider$Transport: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getColumnNumber()> (SMS_MMS)
<android.hardware.radio.TunerCallbackAdapter: android.hardware.radio.RadioManager$ProgramInfo getCurrentProgramInformation()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.JobInfo: android.os.Bundle getTransientExtras()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getSignaturePaddings()> (SMS_MMS)
<android.view.View: java.util.Map getAttributeSourceResourceMap()> (SMS_MMS)
<android.graphics.animation.RenderNodeAnimator: long getStartDelay()> (SMS_MMS)
<android.media.session.ISessionManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()> (SMS_MMS)
<android.content.res.TypedArray: int getLayoutDimension(int,int)> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo: int describeContents()> (SMS_MMS)
<android.content.Entity: android.content.ContentValues getEntityValues()> (SMS_MMS)
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$PhaseCenterOffset getPhaseCenterOffset()> (SMS_MMS)
<android.media.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwner(int)> (SMS_MMS)
<android.text.style.QuoteSpan: int getGapWidth()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCallWaiting(boolean,int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)> (SMS_MMS)
<android.renderscript.Allocation: int getBytesSize()> (SMS_MMS)
<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)> (SMS_MMS)
<android.hardware.Camera$Parameters: float getExposureCompensationStep()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics$Key: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isRttSupported(int)> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: int hashCode()> (SMS_MMS)
<android.widget.RadioGroup: int getAutofillType()> (SMS_MMS)
<android.media.midi.MidiDeviceServer: android.media.midi.MidiReceiver[] getOutputPortReceivers()> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: int countSynonyms()> (SMS_MMS)
<android.hardware.usb.UsbDevice: boolean getHasVideoPlayback()> (SMS_MMS)
<android.app.IActivityManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.ListPopupWindow: android.graphics.Rect getEpicenterBounds()> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.HdmiHotplugEvent: int describeContents()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub: android.content.pm.IDataLoaderStatusListener getDefaultImpl()> (SMS_MMS)
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()> (SMS_MMS)
<android.content.Context: java.lang.Object getSystemService(java.lang.Class)> (SMS_MMS)
<android.view.MotionEvent: float getY()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.Scroller: int getStartX()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal$1: android.view.DisplayInfo recompute(java.lang.Integer)> (SMS_MMS)
<android.view.InputDevice: android.os.Vibrator getVibrator()> (SMS_MMS)
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.os.Bundle getExtras()> (SMS_MMS)
<android.widget.AdapterView: int getLastVisiblePosition()> (SMS_MMS)
<android.widget.Spinner: int getBaseline()> (SMS_MMS)
<android.os.BaseBundle: double getDouble(java.lang.String,double)> (SMS_MMS)
<android.widget.EdgeEffect: android.graphics.BlendMode getBlendMode()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()> (SMS_MMS)
<android.app.blob.BlobInfo: long getId()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: void enableLocationUpdates()> (SMS_MMS)
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point,boolean)> (SMS_MMS)
<android.widget.ProgressBar: int getSecondaryProgress()> (SMS_MMS)
<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: boolean isPrimaryUser()> (SMS_MMS)
<android.media.PlaybackParams: int describeContents()> (SMS_MMS)
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)> (SMS_MMS)
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)> (SMS_MMS)
<android.media.tv.TvInputManager$TvInputCallbackRecord: android.media.tv.TvInputManager$TvInputCallback getCallback()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderInfo[] getAllWebViewPackages()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkRequest access$1000()> (SMS_MMS)
<android.graphics.drawable.Icon: int describeContents()> (SMS_MMS)
<android.view.VerifiedMotionEvent: int getActionMasked()> (SMS_MMS)
<android.app.ContextImpl: int checkSelfPermission(java.lang.String)> (SMS_MMS)
<android.media.session.MediaController: int getRatingType()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getLac()> (SMS_MMS)
<android.os.VibrationEffect$Composed: int describeContents()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuView getListMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.net.wifi.nl80211.IApInterfaceEventCallback getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4300()> (SMS_MMS)
<android.graphics.ColorSpace: float[] access$1800()> (SMS_MMS)
<android.app.SearchManager: android.content.Intent getAssistIntent(boolean)> (SMS_MMS)
<android.app.JobSchedulerImpl: java.util.List getStartedJobs()> (SMS_MMS)
<android.media.MediaTimestamp: long getAnchorMediaTimeUs()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int describeContents()> (SMS_MMS)
<android.view.Display$HdrCapabilities: float getDesiredMaxLuminance()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()> (SMS_MMS)
<android.app.SharedPreferencesImpl: java.util.Map getAll()> (SMS_MMS)
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub: android.content.pm.IPackageDataObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaCasStateException: int getErrorCode()> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: int size()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.ArraySet$1: int colIndexOfKey(java.lang.Object)> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: java.util.List getShortcutIds()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)> (SMS_MMS)
<android.view.textclassifier.TextClassification: android.content.Intent getIntent()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.hardware.HardwareBuffer getHardwareBuffer()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getTvContentRatingSystemList(int)> (SMS_MMS)
<android.hardware.location.ContextHubTransaction$Response: int getResult()> (SMS_MMS)
<android.graphics.RenderNode: boolean getClipToOutline()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: android.media.soundtrigger_middleware.ModelParameterRange queryModelParameterSupport(int,int)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingBottom()> (SMS_MMS)
<android.view.ViewGroup: java.util.ArrayList buildTouchDispatchChildList()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.StrictMode$1: java.lang.Object initialValue()> (SMS_MMS)
<android.app.IAssistDataReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.graphics.Matrix getTransformation()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub: android.hardware.display.IDisplayManagerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.ArraySet$1: int colIndexOfValue(java.lang.Object)> (SMS_MMS)
<android.os.Bundle: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()> (SMS_MMS)
<android.app.blob.BlobStoreManager$Session: boolean isPublicAccessAllowed()> (SMS_MMS)
<android.renderscript.Float4: int length()> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterfaceNoCreate(android.net.lowpan.ILowpanInterface)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdminsAsUser(int)> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$ConcatRef: boolean equals(java.lang.Object)> (SMS_MMS)
<android.os.BaseBundle: int getInt(java.lang.String,int)> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.service.vr.IPersistentVrStateCallbacks getDefaultImpl()> (SMS_MMS)
<android.os.CoolingDevice: java.lang.String getName()> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.lang.String getUsername()> (SMS_MMS)
<android.widget.RemoteViews$SetDrawableTint: int getActionTag()> (SMS_MMS)
<android.app.ITransientNotification$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.app.PendingIntent,long)> (SMS_MMS)
<android.widget.Magnifier: int getSourceWidth()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int getLac()> (SMS_MMS)
<android.content.pm.ServiceInfo: int describeContents()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.util.List getActivePlaybackConfigurations()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub: android.net.wifi.nl80211.IScanEvent asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> (SMS_MMS)
<android.hardware.location.NanoAppBinary: long getHwHubType()> (SMS_MMS)
<android.os.health.HealthStats: int getMeasurementKeyCount()> (SMS_MMS)
<android.app.ActivityTaskManager: java.lang.String listAllStacks()> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger: int handleException(java.lang.Exception)> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse: int getChannel()> (SMS_MMS)
<android.os.UserManager: boolean isRestrictedProfile(android.os.UserHandle)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()> (SMS_MMS)
<android.view.ViewTreeObserver$CopyOnWriteArray$Access: int size()> (SMS_MMS)
<android.net.CaptivePortalData: android.net.Uri getUserPortalUrl()> (SMS_MMS)
<android.media.soundtrigger_middleware.RecognitionEvent: int describeContents()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getDefaultDialerPackageForUser(int)> (SMS_MMS)
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.hardware.hdmi.HdmiTvClient$3: byte[] getOneTouchRecordSource(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getEventType()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> (SMS_MMS)
<android.telephony.CellIdentity: int inRangeOrUnavailable(int,int,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.util.List getFilteredTasks(int,boolean)> (SMS_MMS)
<android.app.BackStackRecord: int commit()> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SignalStrength: int getLteRsrq()> (SMS_MMS)
<android.net.INetworkScoreService$Stub$Proxy: java.lang.String getActiveScorerPackage()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.os.UserHandle)> (SMS_MMS)
<android.media.SubtitleController: android.media.SubtitleTrack getSelectedTrack()> (SMS_MMS)
<android.view.KeyEvent: int getMaxKeyCode()> (SMS_MMS)
<android.view.SurfaceControlViewHost: android.view.IWindow getWindowToken()> (SMS_MMS)
<android.app.backup.BackupManager: boolean isAppEligibleForBackup(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()> (SMS_MMS)
<android.media.AudioManager: java.util.Map getReportedSurroundFormats()> (SMS_MMS)
<android.os.BaseBundle: boolean isEmpty()> (SMS_MMS)
<android.os.IUserRestrictionsListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String convertAndStrip(java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: int getSmsCapacityOnIccForSubscriber(int)> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: int sendMessage(int,int,android.hardware.location.ContextHubMessage)> (SMS_MMS)
<android.media.tv.TvContentRating: int hashCode()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getMountedObbPath(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCarrierIdListVersion(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List retrieveNetworkLogs(android.content.ComponentName,long)> (SMS_MMS)
<android.renderscript.Double2: int length()> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceActivationState(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: int getUidCount()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.BackupManager: android.content.ComponentName getCurrentTransportComponent()> (SMS_MMS)
<android.net.NetworkStatsHistory: int estimateResizeBuckets(long)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telecom.PhoneAccountHandle: android.os.UserHandle getUserHandle()> (SMS_MMS)
<android.app.AppOpsManager$NoteOpEvent: int describeContents()> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getNetworkTypeBitmask()> (SMS_MMS)
<android.graphics.drawable.ClipDrawable: int getOpacity()> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getDvbDeviceList()> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.view.contentcapture.IDataShareWriteAdapter asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getEndTimeStamp()> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> (SMS_MMS)
<android.view.View: int getRawLayoutDirection()> (SMS_MMS)
<android.service.notification.NotificationListenerService$RankingMap: java.lang.String[] getOrderedKeys()> (SMS_MMS)
<android.view.View: android.graphics.Bitmap getDrawingCache()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: android.net.IpPrefix[] getLinkNetworks()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Default: android.os.Bundle getExtras()> (SMS_MMS)
<android.location.GnssClock: double getElapsedRealtimeUncertaintyNanos()> (SMS_MMS)
<android.app.Fragment: boolean getRetainInstance()> (SMS_MMS)
<android.app.ApplicationPackageManager: byte[] getInstantAppCookie()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2000(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature getDefaultImpl()> (SMS_MMS)
<android.view.contentcapture.DataRemovalRequest$LocusIdRequest: int getFlags()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader,int)> (SMS_MMS)
<android.content.res.AssetManager: long access$1000(long)> (SMS_MMS)
<android.app.SearchManager: java.util.List getGlobalSearchActivities()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso(int)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerGravity(int)> (SMS_MMS)
<android.telecom.PhoneAccount: android.net.Uri getAddress()> (SMS_MMS)
<android.media.AudioManager: boolean isMusicActive()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String getJournalMode()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()> (SMS_MMS)
<com.google.android.mms.util.AbstractCache: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.util.LruCache: int putCount()> (SMS_MMS)
<android.view.KeyEvent: int getModifiers()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$MagnificationController: float getCenterX()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: byte[] getData()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getLastNetworkLogRetrievalTime()> (SMS_MMS)
<android.telephony.CarrierConfigManager: void <clinit>()> (SMS_MMS)
<android.text.FontConfig$Family: java.lang.String getLanguages()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsResponse: java.util.List getInlineSuggestions()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowInDataUsageSave()> (SMS_MMS)
<android.content.om.OverlayInfo: java.lang.String getTargetOverlayableName()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoManager$UndoState getTopUndo(android.content.UndoOwner[])> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiClient getClient(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)> (SMS_MMS)
<android.content.res.AssetManager: long access$600(long)> (SMS_MMS)
<android.location.GnssNavigationMessage: int getType()> (SMS_MMS)
<android.net.IpSecSpiResponse: int describeContents()> (SMS_MMS)
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)> (SMS_MMS)
<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()> (SMS_MMS)
<android.view.textclassifier.TextClassifier$EntityConfig: java.util.Collection getHints()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.ArraySet: int size()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setDefaultCarrierRestriction(int)> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.util.List getVpnLockdownWhitelist(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)> (SMS_MMS)
<android.app.Activity: java.lang.CharSequence onCreateDescription()> (SMS_MMS)
<com.android.internal.policy.DecorContext: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.os.storage.StorageVolume: java.io.File getDirectory()> (SMS_MMS)
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)> (SMS_MMS)
<android.location.LocationTime: long getElapsedRealtimeNanos()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdUserWhitelist()> (SMS_MMS)
<android.security.KeyStore: long getmtime(java.lang.String)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.gsm.GsmCellLocation: int getCid()> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: int getDepth()> (SMS_MMS)
<android.view.IPinnedStackListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo[] newArray(int)> (SMS_MMS)
<android.service.notification.Condition: int hashCode()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getChannelName()> (SMS_MMS)
<android.view.DragEvent: boolean getResult()> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.RippleBackground$1: java.lang.Float get(android.graphics.drawable.RippleBackground)> (SMS_MMS)
<android.app.ActivityManager: boolean isVrModePackageEnabled(android.content.ComponentName)> (SMS_MMS)
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> (SMS_MMS)
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeMeters()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getMaxRealPower()> (SMS_MMS)
<android.net.Network: int getNetId()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataConnectionAllowed()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int getUidProcessState(int,java.lang.String)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.content.Intent getIntent()> (SMS_MMS)
<android.os.IIncidentManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.security.keystore.IKeystoreExportKeyCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.job.JobInfo$TriggerContentUri: int hashCode()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub: android.security.keystore.IKeystoreService asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.inputmethod.SparseRectFArray: int describeContents()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.ICountryListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()> (SMS_MMS)
<android.text.style.StyleSpan: int getSpanTypeId()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub: android.net.INetworkScoreCache getDefaultImpl()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getRetrieveText()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)> (SMS_MMS)
<android.content.UndoManager: android.content.UndoOperation getLastOperation(int)> (SMS_MMS)
<android.transition.ChangeBounds$6: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getBackgroundAccessDuration(int)> (SMS_MMS)
<android.app.Person: java.lang.String resolveToLegacyUri()> (SMS_MMS)
<android.print.PrinterInfo: java.lang.String getName()> (SMS_MMS)
<android.transition.ChangeTransform: boolean getReparentWithOverlay()> (SMS_MMS)
<android.view.View$8: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.ILocationListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.KeyEvent: boolean isSystem()> (SMS_MMS)
<android.view.KeyboardShortcutGroup: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int calculateMarshalSize(android.hardware.camera2.params.ReprocessFormatsMap)> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfoNr: int hashCode()> (SMS_MMS)
<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getReadFd()> (SMS_MMS)
<android.app.job.JobParameters: android.os.Bundle getTransientExtras()> (SMS_MMS)
<android.net.nsd.NsdManager: java.lang.Object access$300(android.net.nsd.NsdManager)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Key: long getVendorId()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager getParentProfileInstance(android.content.ComponentName)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()> (SMS_MMS)
<android.os.INetworkManagementService$Stub: android.os.INetworkManagementService getDefaultImpl()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.os.IVold$Default: int fdeGetPasswordType()> (SMS_MMS)
<android.net.nsd.NsdManager: java.lang.String access$600(android.net.nsd.NsdServiceInfo)> (SMS_MMS)
<android.content.UndoManager: int findPrevState(java.util.ArrayList,android.content.UndoOwner[],int)> (SMS_MMS)
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayPrimaries getDisplayNativePrimaries(android.os.IBinder)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForPackage(java.lang.String,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.content.SyncStatusInfo: int getEventCount()> (SMS_MMS)
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getInstallerPackageName(java.lang.String)> (SMS_MMS)
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: android.media.IRingtonePlayer getRingtonePlayer()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)> (SMS_MMS)
<android.app.WindowConfiguration: int getRotation()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive$MarshalerPrimitive: int getNativeSize()> (SMS_MMS)
<android.app.IUidObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.TextClassificationSessionId: java.lang.String getValue()> (SMS_MMS)
<android.net.IIpSecService$Stub: android.net.IIpSecService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getPackageName()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int size()> (SMS_MMS)
<android.view.Display: android.view.DisplayAddress getAddress()> (SMS_MMS)
<android.app.ContextImpl: android.os.Handler getMainThreadHandler()> (SMS_MMS)
<android.app.assist.AssistContent: android.content.ClipData getClipData()> (SMS_MMS)
<android.media.AudioRecord: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.Settings$GenerationTracker: int getCurrentGeneration()> (SMS_MMS)
<android.telephony.ServiceState: int getVoiceNetworkType()> (SMS_MMS)
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> (SMS_MMS)
<android.hardware.input.InputManager: int[] getInputDeviceIds()> (SMS_MMS)
<android.media.soundtrigger_middleware.SoundModel: int describeContents()> (SMS_MMS)
<android.transition.ArcMotion: float getMinimumVerticalAngle()> (SMS_MMS)
<android.service.notification.INotificationListener$Stub: android.service.notification.INotificationListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuPresenter$Callback getCallback()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getPartitionId()> (SMS_MMS)
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub: android.view.IRemoteAnimationRunner asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager$PackageOps: int getUid()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.Layout: int getLineForVertical(int)> (SMS_MMS)
<android.media.AudioDeviceAttributes: int describeContents()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int write(byte[])> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int computeCurrentCountLocked()> (SMS_MMS)
<android.animation.StateListAnimator$StateListAnimatorConstantState: android.animation.StateListAnimator newInstance()> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: int getRotation()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.concurrent.Executor getExecutor(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: int getVersion()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(int,boolean)> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: int getStateCount()> (SMS_MMS)
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)> (SMS_MMS)
<android.renderscript.BaseObj: int hashCode()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isAutoRevokeWhitelisted()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$000()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.WindowManagerGlobal: android.view.View getWindowView(android.os.IBinder)> (SMS_MMS)
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()> (SMS_MMS)
<android.app.job.IJobCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getEotf()> (SMS_MMS)
<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams)> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getFreeBytes(java.util.UUID)> (SMS_MMS)
<android.location.ILocationListener$Stub: android.location.ILocationListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.service.vr.IVrManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: java.lang.String getName()> (SMS_MMS)
<android.media.MediaDrm: android.media.MediaDrm$CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: long getTransitionBackgroundFadeDuration()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isLogoutEnabled()> (SMS_MMS)
<android.app.ContextImpl: android.content.Context createDeviceProtectedStorageContext()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getContentLocation()> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.SyncAdapterType: int hashCode()> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub: com.android.internal.app.IAppOpsStartedCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNai()> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: int getEventIndex()> (SMS_MMS)
<android.view.InputEvent: int describeContents()> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getProductName()> (SMS_MMS)
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> (SMS_MMS)
<android.animation.PathKeyframes$IntKeyframesBase: java.lang.Class getType()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintServices(int,int)> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAcceptedNames()> (SMS_MMS)
<android.os.UserManager: boolean isEphemeralUser()> (SMS_MMS)
<android.text.style.SubscriptSpan: int getSpanTypeId()> (SMS_MMS)
<android.app.Notification$TemplateBindResult: int getIconMarginEnd()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayAutoMode()> (SMS_MMS)
<android.widget.ProgressBar: int getMaxHeight()> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean isInputMethodPickerShownForTest()> (SMS_MMS)
<android.content.res.AssetManager$AssetInputStream: int getAssetInt()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleObject()> (SMS_MMS)
<android.widget.AbsListView: int getTopPaddingOffset()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.IApInterface createApInterface(java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.IntentSender getShortcutConfigActivityIntent(java.lang.String,android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.print.PrintDocumentInfo: int getPageCount()> (SMS_MMS)
<android.graphics.fonts.SystemFonts: java.util.Set getAvailableFonts()> (SMS_MMS)
<android.security.KeyChain: java.security.KeyPair getKeyPair(android.content.Context,java.lang.String)> (SMS_MMS)
<android.text.Layout$Directions: int getRunCount()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.integrity.AppIntegrityManager: android.content.integrity.RuleSet getCurrentRuleSet()> (SMS_MMS)
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()> (SMS_MMS)
<android.app.role.IRoleManager$Stub$Proxy: java.util.List getHeldRolesFromController(java.lang.String)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setAllowedCarriers(java.util.List)> (SMS_MMS)
<android.net.TestNetworkInterface: int describeContents()> (SMS_MMS)
<android.media.AudioMetadata$1: java.lang.String getName()> (SMS_MMS)
<android.os.DeviceIdleManager: android.os.IDeviceIdleController getService()> (SMS_MMS)
<android.view.ViewDebug: long getViewRootImplCount()> (SMS_MMS)
<android.content.Context: java.lang.String getAttributionTag()> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaMetadataRetriever$BitmapParams: android.graphics.Bitmap$Config getPreferredConfig()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()> (SMS_MMS)
<android.net.LinkProperties: int getMtu()> (SMS_MMS)
<android.database.MatrixCursor: float getFloat(int)> (SMS_MMS)
<android.renderscript.RenderScript: long nFontCreateFromAsset(android.content.res.AssetManager,java.lang.String,float,int)> (SMS_MMS)
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> (SMS_MMS)
<android.hardware.display.Time: int describeContents()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: boolean isMultiparty()> (SMS_MMS)
<android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()> (SMS_MMS)
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager$CaptionStyle getUserStyle()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean getEmergencyCallbackMode(int)> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCallback()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getPlaybackStream()> (SMS_MMS)
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()> (SMS_MMS)
<android.os.Messenger: int describeContents()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.net.netstats.provider.INetworkStatsProvider getDefaultImpl()> (SMS_MMS)
<android.view.Window: boolean getAllowReturnTransitionOverlap()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean iccCloseLogicalChannelBySlot(int,int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsDemoDirectory()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.incremental.IIncrementalServiceConnector getDefaultImpl()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getFocusedStackInfo()> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.app.contentsuggestions.ISelectionsCallback getDefaultImpl()> (SMS_MMS)
<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)> (SMS_MMS)
<android.drm.DrmUtils: byte[] readBytes(java.io.File)> (SMS_MMS)
<android.renderscript.Double2: double get(int)> (SMS_MMS)
<android.telephony.UiccAccessRule: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: int getParentSessionId()> (SMS_MMS)
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()> (SMS_MMS)
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()> (SMS_MMS)
<com.android.internal.widget.DecorCaptionView: int getCaptionHeight()> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getFreeBytes(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwner(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.webkit.WebView: int computeVerticalScrollOffset()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: int getHeightHint(int)> (SMS_MMS)
<android.graphics.ImageDecoder: boolean getMutable()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> (SMS_MMS)
<android.widget.TextView: int getOffsetAtCoordinate(int,float)> (SMS_MMS)
<android.location.Address: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbAccessory getCurrentAccessory()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$EncoderCapabilities getEncoderCapabilities()> (SMS_MMS)
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserBlacklistedApps()> (SMS_MMS)
<android.telecom.TelecomManager: boolean isTtySupported()> (SMS_MMS)
<android.widget.TextView: boolean canRequestAutofill()> (SMS_MMS)
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.view.ViewConfiguration: int getMinimumFlingVelocity()> (SMS_MMS)
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])> (SMS_MMS)
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)> (SMS_MMS)
<android.telephony.CellConfigLte$1: android.telephony.CellConfigLte[] newArray(int)> (SMS_MMS)
<android.graphics.HardwareRenderer: int copySurfaceInto(android.view.Surface,android.graphics.Rect,android.graphics.Bitmap)> (SMS_MMS)
<android.content.pm.ModuleInfo: int describeContents()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalTouchMajor(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.session.ISessionController$Default: long getFlags()> (SMS_MMS)
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getInstantAppCookieMaxSize()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioTrack: int getPositionNotificationPeriod()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()> (SMS_MMS)
<android.app.blob.BlobInfo: long getExpiryTimeMs()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: boolean getSystemAudioMode()> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()> (SMS_MMS)
<android.text.style.TtsSpan: android.os.PersistableBundle getArgs()> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: java.util.List getConnectedDevices()> (SMS_MMS)
<android.telephony.MmsManager: void downloadMultimediaMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long)> (SMS_MMS)
<android.text.PrecomputedText: int getEnd()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getTxPackets()> (SMS_MMS)
<android.view.View: int computeVerticalScrollExtent()> (SMS_MMS)
<android.app.ActivityThread: java.util.Map getActivitiesToBeDestroyed()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: com.android.internal.telephony.euicc.IGetProfileCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)> (SMS_MMS)
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: java.lang.String getUniqueId()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserBadgeColorResId(int)> (SMS_MMS)
<android.net.IpSecManager$IpSecTunnelInterface: java.lang.String getInterfaceName()> (SMS_MMS)
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.gles_jni.EGLContextImpl: int hashCode()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getNeededReadMemBytes()> (SMS_MMS)
<android.os.Debug: int getThreadExternalAllocCount()> (SMS_MMS)
<android.app.DisabledWallpaperManager: boolean isSetWallpaperAllowed()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.MatchAllNetworkSpecifier: int hashCode()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: java.util.List getEnabledInputMethodList(int)> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getDimension(int)> (SMS_MMS)
<android.text.method.TextKeyListener$NullKeyListener: android.text.method.TextKeyListener$NullKeyListener getInstance()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int changeIccLockPassword(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)> (SMS_MMS)
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)> (SMS_MMS)
<android.net.IpPrefix: int hashCode()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppGlobals: float getFloatCoreSetting(java.lang.String,float)> (SMS_MMS)
<android.service.notification.ZenModeConfig$ZenRule: int hashCode()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int access$400(com.android.internal.app.WindowDecorActionBar)> (SMS_MMS)
<android.content.Context: android.view.Display getDisplayNoVerify()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.ProxyInfo getGlobalProxy()> (SMS_MMS)
<android.renderscript.Allocation: android.renderscript.Type getType()> (SMS_MMS)
<android.graphics.Paint: long getShadowLayerColorLong()> (SMS_MMS)
<android.text.FontConfig$Family: int getVariant()> (SMS_MMS)
<android.hardware.camera2.params.Capability: int hashCode()> (SMS_MMS)
<android.location.GpsNavigationMessage: byte[] getData()> (SMS_MMS)
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getEncodedPath()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int decryptStorage(java.lang.String)> (SMS_MMS)
<android.widget.AbsListView: int getFooterViewsCount()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordComplexity(boolean)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.Curve getMinimumBrightnessCurve()> (SMS_MMS)
<android.telephony.CarrierConfigManager: java.lang.String getDefaultCarrierServicePackageName()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: int getMaxSuggestions()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: boolean isTopActivityImmersive()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ActivityManager: long getTotalRam()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int getId()> (SMS_MMS)
<android.content.pm.Signature: byte[] toByteArray()> (SMS_MMS)
<android.hardware.radio.V1_5.ClosedSubscriberGroupInfo: int hashCode()> (SMS_MMS)
<android.app.NotificationChannel: java.lang.String getParentChannelId()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()> (SMS_MMS)
<com.android.internal.widget.LockPatternView$Cell: int getRow()> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.lang.Object refresh(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode()> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.PrecomputedText: android.text.PrecomputedText$Params getParams()> (SMS_MMS)
<android.widget.ListView$FocusSelector: java.lang.Runnable setupFocusIfValid(int)> (SMS_MMS)
<android.hardware.usb.UsbDevice: boolean getHasMidi()> (SMS_MMS)
<android.os.IThermalEventListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.Frame: int decRefCount()> (SMS_MMS)
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> (SMS_MMS)
<android.media.IAudioService$Default: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()> (SMS_MMS)
<android.telephony.PhoneNumberRange$1: android.telephony.PhoneNumberRange[] newArray(int)> (SMS_MMS)
<android.print.PrintAttributes$Margins: int getTopMils()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getWifiMacAddress(android.content.ComponentName)> (SMS_MMS)
<android.security.IFileIntegrityService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: float getHorizontal(android.text.Layout,int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: long getDate()> (SMS_MMS)
<android.location.LocationManager$GnssMeasurementsListenerManager: java.lang.Object merge(java.lang.Object[])> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> (SMS_MMS)
<android.content.pm.permission.SplitPermissionInfoParcelable: java.lang.String getSplitPermission()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getErrFileDescriptor()> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: int getTtff()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.telephony.TelephonyManager: void <init>(android.content.Context,int)> (SMS_MMS)
<android.hardware.radio.ProgramList$Chunk: int describeContents()> (SMS_MMS)
<android.os.BinderProxy$ProxyMap: android.os.BinderProxy get(long)> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.SystemSensorManager: int configureDirectChannelImpl(android.hardware.SensorDirectChannel,android.hardware.Sensor,int)> (SMS_MMS)
<android.os.IServiceCallback$Stub: android.os.IServiceCallback getDefaultImpl()> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int describeContents()> (SMS_MMS)
<android.os.IDumpstate$Stub: android.os.IDumpstate asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.PackageManager: boolean isDeviceUpgrading()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv newServiceStatsLocked()> (SMS_MMS)
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getOverlayFolder()> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network[] getAllNetworks()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getCertainty()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.app.ActivityOptions: android.graphics.GraphicBuffer getThumbnail()> (SMS_MMS)
<android.renderscript.Byte3: byte get(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> (SMS_MMS)
<android.hardware.fingerprint.Fingerprint: int describeContents()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getNotificationChannelGroupForPackage(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.net.IpSecConfig: int getEncapType()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int openStorage(java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Default: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanTime(long,int)> (SMS_MMS)
<android.view.ActionMode: boolean getTitleOptionalHint()> (SMS_MMS)
<android.app.role.RoleControllerManager$1: android.os.Handler getJobHandler()> (SMS_MMS)
<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int ungrant(java.lang.String,int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.media.AudioManager getAudioManager()> (SMS_MMS)
<android.hardware.camera2.CaptureResult$Key: long getVendorId()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: byte[] getSignature()> (SMS_MMS)
<com.android.internal.view.menu.BaseMenuPresenter: int getId()> (SMS_MMS)
<android.widget.RadioGroup: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getAllSessions(java.lang.String)> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub: android.print.ILayoutResultCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getEsn(int)> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb$TransferParameters: int hashCode()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getType()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)> (SMS_MMS)
<android.graphics.fonts.Font: int hashCode()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)> (SMS_MMS)
<android.app.IUiModeManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.Map access$1500(android.media.session.MediaSessionManager)> (SMS_MMS)
<android.view.textclassifier.EntityConfidence: float getConfidenceScore(java.lang.String)> (SMS_MMS)
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.widget.AdapterViewAnimator: int getWindowSize()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.graphics.Paint: float getRunAdvance(java.lang.CharSequence,int,int,int,int,boolean,int)> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: int getEnum(int,int)> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: java.util.List getUnsignedLongs(int)> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.view.FocusFinder: android.view.FocusFinder getInstance()> (SMS_MMS)
<android.hardware.Camera$Parameters: int getPreviewFrameRate()> (SMS_MMS)
<android.view.SurfaceControl: android.graphics.ColorSpace[] getCompositionColorSpaces()> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getNormalizedFsUuid()> (SMS_MMS)
<android.app.PictureInPictureParams: int describeContents()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getAsuLevel()> (SMS_MMS)
<android.content.SyncStatusInfo: int getPeriodicSyncTimesSize()> (SMS_MMS)
<android.media.tv.TvInputInfo: java.lang.String getId()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: int getSoftKeyboardShowMode()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSmsPdu(int,int,java.lang.String,java.lang.String,java.lang.String,long)> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.storage.StorageManager: java.io.File translateSystemToApp(java.io.File,int,int)> (SMS_MMS)
<android.app.timezone.DistroRulesVersion: int describeContents()> (SMS_MMS)
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()> (SMS_MMS)
<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String getBestProvider(android.location.Criteria,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: void dial(java.lang.String)> (SMS_MMS)
<android.app.servertransaction.ResumeActivityItem: int hashCode()> (SMS_MMS)
<android.util.jar.StrictJarManifest: java.util.Map getEntries()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse getDefaultImpl()> (SMS_MMS)
<android.widget.Toast: int getYOffset()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: android.telephony.data.ApnSetting getApnSetting()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getWifiSupplStateCount(int,int)> (SMS_MMS)
<android.content.pm.LauncherApps: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.RadioAccessSpecifier: int describeContents()> (SMS_MMS)
<android.widget.GridView: int getStretchMode()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.util.Map getRpmStats()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte$1: android.telephony.CellSignalStrengthLte createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int getConfiguration(android.hardware.radio.RadioManager$BandConfig[])> (SMS_MMS)
<android.util.jar.StrictJarManifest: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()> (SMS_MMS)
<android.app.ActivityManager$1: android.app.IActivityManager create()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getProcessLimit()> (SMS_MMS)
<android.graphics.ColorSpace: float[] access$1600()> (SMS_MMS)
<android.app.Notification$WearableExtender: int getHintScreenTimeout()> (SMS_MMS)
<android.view.View: android.animation.StateListAnimator getStateListAnimator()> (SMS_MMS)
<android.app.backup.BackupDataInputStream: int read()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2200(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isImsRegistered(int)> (SMS_MMS)
<android.media.session.ISessionController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.Frame: int getCapacity()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getInvocationMethod()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()> (SMS_MMS)
<android.app.DownloadManager$CursorTranslator: long getLong(int)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: char readChar()> (SMS_MMS)
<android.media.MediaPlayer: android.media.AudioDeviceInfo getPreferredDevice()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getOpacity()> (SMS_MMS)
<android.telephony.SmsManager: void getSmsMessagesForFinancialApp(android.os.Bundle,java.util.concurrent.Executor,android.telephony.SmsManager$FinancialSmsCallback)> (SMS_MMS)
<android.filterfw.core.Filter: int getSleepDelay()> (SMS_MMS)
<android.view.Display: long getAppVsyncOffsetNanos()> (SMS_MMS)
<android.view.IWindowSession$Stub: android.view.IWindowSession getDefaultImpl()> (SMS_MMS)
<android.media.AudioDeviceInfo: java.lang.String getAddress()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.PasswordMetrics: int describeContents()> (SMS_MMS)
<android.content.ContentResolver: int resolveUserId(android.net.Uri)> (SMS_MMS)
<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)> (SMS_MMS)
<android.app.Activity: android.os.IBinder getAssistToken()> (SMS_MMS)
<android.net.NetworkQuotaInfo: long getHardLimitBytes()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppResolverComponent()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryMessages()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getProxyPort()> (SMS_MMS)
<android.view.Window: android.view.Window$Callback getCallback()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getIntentVerificationStatus(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.CaptureResult$Key: java.lang.String getName()> (SMS_MMS)
<com.android.internal.graphics.SfVsyncFrameCallbackProvider: long getFrameDelay()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IVoldMountCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.DisplayCutout$ParcelableWrapper: android.view.DisplayCutout get()> (SMS_MMS)
<android.hardware.face.FaceManager: java.util.List getEnrolledFaces(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getLockTaskPackages(android.content.ComponentName)> (SMS_MMS)
<android.widget.Magnifier: int getHeight()> (SMS_MMS)
<android.telephony.LteVopsSupportInfo: int getVopsSupport()> (SMS_MMS)
<android.text.FontConfig$Font: int getWeight()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getOrganizationColor(android.content.ComponentName)> (SMS_MMS)
<android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$AutofillClient access$900(android.view.autofill.AutofillManager)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: int getDataLength()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.util.List getVpnLockdownWhitelist(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()> (SMS_MMS)
<android.telephony.PinResult$1: android.telephony.PinResult[] newArray(int)> (SMS_MMS)
<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub: android.os.IIncidentAuthListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.UserInfo: boolean isManagedProfile()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()> (SMS_MMS)
<android.app.NotificationChannel: int hashCode()> (SMS_MMS)
<android.util.SparseLongArray: long get(int,long)> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()> (SMS_MMS)
<com.android.internal.database.SortCursor: float getFloat(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCallForward(int,java.lang.String)> (SMS_MMS)
<android.os.VibrationAttributes: int getUsageClass()> (SMS_MMS)
<android.telephony.gsm.GsmCellLocation: int getLac()> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.net.wifi.nl80211.IPnoScanEvent getDefaultImpl()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()> (SMS_MMS)
<android.media.Utils$1: int compare(android.util.Range,android.util.Range)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getStrokeWidth()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()> (SMS_MMS)
<android.app.IStopUserCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean enableDataConnectivity()> (SMS_MMS)
<android.os.StrictMode: int getThreadPolicyMask()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: boolean isValid()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getMinTextEms()> (SMS_MMS)
<android.hardware.SystemSensorManager$InjectEventQueue: int injectSensorData(int,float[],int,long)> (SMS_MMS)
<android.graphics.PointF: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub: android.view.IDisplayWindowRotationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.accounts.AccountAuthenticatorResponse: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int getLength()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: int getLineAtCoordinateUnclamped(float)> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()> (SMS_MMS)
<android.net.INetworkScoreService$Default: java.util.List getAllValidScorers()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVoWiFiRoamingSettingEnabled(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandConfig: int describeContents()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getActivityName(android.os.IBinder,android.app.ClientTransactionHandler)> (SMS_MMS)
<android.telephony.SubscriptionPlan: int getDataLimitBehavior()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: float getCarrierFrequencyHz()> (SMS_MMS)
<android.hardware.camera2.utils.SubmitInfo: int describeContents()> (SMS_MMS)
<android.print.PrinterId: int hashCode()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getIncidentReportApproverPackageName()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.os.Bundle getActivityOptions(android.os.IBinder)> (SMS_MMS)
<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$Polygon$Point lambda$new$0$CbGeoUtils$Polygon(android.telephony.CbGeoUtils$LatLng)> (SMS_MMS)
<android.media.session.MediaSession: java.lang.String getCallingPackage()> (SMS_MMS)
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<android.hardware.camera2.params.VendorTagDescriptor: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$5: java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: java.lang.String getField(java.lang.String)> (SMS_MMS)
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebSettings getSettings()> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: android.os.Temperature[] getCurrentTemperatures()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsAppsDirectory()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaCodec$MediaImage: int getFormat()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.app.SearchableInfo: int getHintId()> (SMS_MMS)
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)> (SMS_MMS)
<android.content.ContentProvider$Transport: java.lang.String getType(android.net.Uri)> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getPackageName()> (SMS_MMS)
<android.view.ViewGroup: int getDescendantFocusability()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.webkit.TracingConfig: java.util.List getCustomIncludedCategories()> (SMS_MMS)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback getDefaultImpl()> (SMS_MMS)
<android.media.session.ISessionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsSatellite: float getSnr()> (SMS_MMS)
<android.os.INetworkActivityListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive$MarshalerPrimitive: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.graphics.ColorSpace: long getNativeInstance()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$PortAddrs: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: byte[] parseToDtmf(java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getServices()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimPcscf(int)> (SMS_MMS)
<android.database.CursorWrapper: java.util.List getNotificationUris()> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub: android.app.backup.IBackupManagerMonitor getDefaultImpl()> (SMS_MMS)
<android.net.Network: java.util.List lambda$maybeInitUrlConnectionFactory$0$Network(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry: java.lang.Long getFrameNumber()> (SMS_MMS)
<android.app.Fragment: int getNextAnim()> (SMS_MMS)
<android.telephony.ServiceState: boolean isEmergencyOnly()> (SMS_MMS)
<android.app.Activity: android.net.Uri onProvideReferrer()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getData()> (SMS_MMS)
<android.app.job.JobWorkItem: long getEstimatedNetworkUploadBytes()> (SMS_MMS)
<android.location.GnssMeasurement: int getState()> (SMS_MMS)
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.os.INetworkActivityListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.iris.IIrisService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: int getStandbyReason()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getNightDisplayAutoModeRaw()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserPasswordChanged(int,java.lang.String)> (SMS_MMS)
<android.view.autofill.AutofillValue: int describeContents()> (SMS_MMS)
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int getSystemId()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: boolean isMuted()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getHintsFromListener(android.service.notification.INotificationListener)> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int getConfigSetMask()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLinkSpan: android.view.textclassifier.TextLinks$TextLink getTextLink()> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectBottom()> (SMS_MMS)
<android.os.image.DynamicSystemManager: android.os.image.DynamicSystemManager$Session createPartition(java.lang.String,long,boolean)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: int getBodyTextColor()> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)> (SMS_MMS)
<android.os.Handler: android.os.Looper getLooper()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String getResourcePackageName(int)> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: int getPriority()> (SMS_MMS)
<android.media.PlaybackParams: float getPitch()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: short getChrePatchVersion()> (SMS_MMS)
<android.telephony.CdmaEriInformation$1: android.telephony.CdmaEriInformation createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: int getPackageCount()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub: android.hardware.fingerprint.IFingerprintService getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int getDataSize()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: int getStrongAuthForUser(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: byte[] access$402(android.net.lowpan.LowpanIdentity,byte[])> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub: android.view.autofill.IAutofillWindowPresenter getDefaultImpl()> (SMS_MMS)
<android.view.autofill.AutofillManager$CompatibilityBridge: java.util.List getInstalledAccessibilityServiceList(java.util.List)> (SMS_MMS)
<android.app.role.IRoleManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IVoldTaskListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.Layout: float getLineMax(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getPhoneAccountsForPackage(java.lang.String)> (SMS_MMS)
<android.telephony.ServiceState: int getBetterNRFrequencyRange(int,int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isRotationFrozen()> (SMS_MMS)
<android.view.textclassifier.TextLanguage$Request: java.lang.String getCallingPackageName()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: com.android.internal.telephony.euicc.IEuiccCardController asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub: android.location.IBatchedLocationCallback getDefaultImpl()> (SMS_MMS)
<android.app.IAlarmListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.NotificationManager: java.util.List getNotificationChannels()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getPreferredActivityBackup(int)> (SMS_MMS)
<android.os.Environment: java.io.File getProductDirectory()> (SMS_MMS)
<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Picture: int getHeight()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.content.pm.DataLoaderParamsParcel getDataLoaderParams()> (SMS_MMS)
<android.hardware.Sensor: int getHandle()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int verifyEncryptionPassword(java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannelBySlot(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.SyncRunner: int determinePostRunState()> (SMS_MMS)
<android.os.Parcel: byte[] createByteArray()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalSwappablePss()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransportForUser(int)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int describeContents()> (SMS_MMS)
<android.app.admin.DnsEvent: int getTotalResolvedAddressCount()> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerIdleDurationMillis()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: long getEventTime()> (SMS_MMS)
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()> (SMS_MMS)
<android.os.HidlMemory: android.os.NativeHandle getHandle()> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.DropBoxManager$Entry: java.lang.String getText(int)> (SMS_MMS)
<android.print.PrintJobInfo: long getCreationTime()> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.ImageFormat: int getBitsPerPixel(int)> (SMS_MMS)
<android.net.lowpan.LowpanInterface: java.lang.String[] getSupportedNetworkTypes()> (SMS_MMS)
<android.view.ViewRootImpl: java.util.List getRootSystemGestureExclusionRects()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.app.ActivityManager$StackInfo getFocusedStackInfo()> (SMS_MMS)
<android.hardware.ICameraService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getStackInfo(int,int)> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])> (SMS_MMS)
<android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)> (SMS_MMS)
<android.telephony.TelephonyManager: int isMultiSimSupported()> (SMS_MMS)
<android.os.TestLooperManager: android.os.MessageQueue getQueue()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getDataMiscDeDirectory(int)> (SMS_MMS)
<android.animation.Animator: android.animation.Animator clone()> (SMS_MMS)
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: int hashCode()> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: java.net.InetAddress getProxyAddress()> (SMS_MMS)
<android.content.res.GradientColor: int getDefaultColor()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int getAudioType()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getMnc()> (SMS_MMS)
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()> (SMS_MMS)
<android.view.View: int getVerticalFadingEdgeLength()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getDataOperatorAlphaShort()> (SMS_MMS)
<android.app.trust.ITrustManager$Stub: android.app.trust.ITrustManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.location.GnssAntennaInfo: double getCarrierFrequencyMHz()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: com.android.internal.telephony.euicc.ISetNicknameCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.AlertController$CheckedItemAdapter: long getItemId(int)> (SMS_MMS)
<android.graphics.RenderNode: int getSpotShadowColor()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int hashCode()> (SMS_MMS)
<android.telephony.SignalStrength$1: void <init>()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String[] getIsimImpu(int)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: android.os.Bundle getExtras()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: boolean isEmergencyUserAlert()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: com.android.internal.view.IInlineSuggestionsRequestCallback getDefaultImpl()> (SMS_MMS)
<android.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()> (SMS_MMS)
<android.window.ITaskOrganizer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: android.app.Person getSenderPerson()> (SMS_MMS)
<android.os.VibrationEffect$OneShot: int hashCode()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()> (SMS_MMS)
<android.view.MotionEvent: int getPointerCount()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)> (SMS_MMS)
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getEnabledSubscriptionId(int)> (SMS_MMS)
<android.telephony.UiccSlotInfo: boolean getIsEuicc()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdPackage()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()> (SMS_MMS)
<android.graphics.drawable.RotateDrawable: float getPivotX()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setTitle(java.lang.CharSequence)> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub: android.media.tv.ITvInputClient getDefaultImpl()> (SMS_MMS)
<android.os.health.HealthStats: java.util.Map getTimers(int)> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int hashCode()> (SMS_MMS)
<android.print.PrintAttributes: int getDuplexMode()> (SMS_MMS)
<android.view.animation.Animation: boolean getShowWallpaper()> (SMS_MMS)
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfiguration: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtimeStart()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: int getDesiredHeight()> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$wql9r4zMYyVpqqNWW9Wt35fzC_w: int applyAsInt(java.lang.Object)> (SMS_MMS)
<android.graphics.Path: long mutateNI()> (SMS_MMS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int hashCode()> (SMS_MMS)
<android.view.FocusFinder: long getWeightedDistanceFor(long,long)> (SMS_MMS)
<android.location.Country: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: int getLaunchDisplayId()> (SMS_MMS)
<android.view.IInputMonitorHost$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)> (SMS_MMS)
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int,android.os.IBinder)> (SMS_MMS)
<android.os.PersistableBundle: int describeContents()> (SMS_MMS)
<android.os.Process: int getUidForPid(int)> (SMS_MMS)
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()> (SMS_MMS)
<com.android.internal.statusbar.NotificationVisibility$NotificationLocation: int toMetricsEventEnum()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.app.backup.FullBackupDataOutput: long getQuota()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isRttSupported()> (SMS_MMS)
<android.animation.ValueAnimator: int getCurrentAnimationsCount()> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$mpe0Kh92VEQmEtmo60oqykdvnBE: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> (SMS_MMS)
<android.net.NetworkCapabilities: int[] getCapabilities()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: byte[] getTBSCertificate()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.style.LineHeightSpan$Standard: int getSpanTypeId()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: android.os.Bundle getExtras()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: java.lang.String getContentDigestAlgorithmJcaDigestAlgorithm(int)> (SMS_MMS)
<android.os.IRecoverySystem$Stub: android.os.IRecoverySystem getDefaultImpl()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.security.keystore.recovery.KeyDerivationParams: int getAlgorithm()> (SMS_MMS)
<android.media.IPlayer$Stub: android.media.IPlayer getDefaultImpl()> (SMS_MMS)
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getQuery()> (SMS_MMS)
<android.animation.ValueAnimator: long getStartDelay()> (SMS_MMS)
<android.text.Layout$SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: boolean isAdbWifiQrSupported()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.telephony.ClientRequestStats: long getCompletedRequestsWakelockTime()> (SMS_MMS)
<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub: com.android.ims.internal.IImsUtListener getDefaultImpl()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)> (SMS_MMS)
<android.app.VoiceInteractor$Prompt: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptimeStart()> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: int getMissingMethodFlags()> (SMS_MMS)
<android.media.RoutingSessionInfo: int getVolumeMax()> (SMS_MMS)
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics()> (SMS_MMS)
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])> (SMS_MMS)
<android.view.ViewRootImpl: android.view.Surface getOrCreateBLASTSurface(int,int)> (SMS_MMS)
<android.app.NotificationChannelGroup: java.lang.String getDescription()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: byte[] access$102(android.net.lowpan.LowpanIdentity,byte[])> (SMS_MMS)
<android.location.GnssMeasurementCorrections: double getAltitudeMeters()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()> (SMS_MMS)
<android.content.pm.PackageManager: int deleteStatusToPublicStatus(int)> (SMS_MMS)
<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()> (SMS_MMS)
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)> (SMS_MMS)
<android.graphics.Color: int parseColor(java.lang.String)> (SMS_MMS)
<android.security.keystore.Utils: byte[] cloneIfNotNull(byte[])> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.Object getProperty(java.lang.String)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager$Model: java.util.UUID getVendorUuid()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.filterfw.core.Filter: java.util.Collection getInputPorts()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray getWindows()> (SMS_MMS)
<android.app.Notification: long getTimeout()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUserCached(java.lang.String,int,int)> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: float getLineDescent(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.widget.ToastPresenter: android.view.View getView()> (SMS_MMS)
<android.view.accessibility.CaptioningManager: boolean isEnabled()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: android.hardware.camera2.CaptureRequest getRequest()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: java.util.ArrayList getSmsCbProgramData()> (SMS_MMS)
<android.telecom.PhoneAccount: int getHighlightColor()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.lang.CharSequence getAppLabel()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: android.app.RemoteInput getRemoteInput()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.telephony.ims.aidl.IImsMmTelListener getDefaultImpl()> (SMS_MMS)
<android.app.usage.StorageStats: long getAppBytes()> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isApplicationVisibleForRole$5(java.lang.String,java.lang.String,android.app.role.IRoleController)> (SMS_MMS)
<android.content.ContentCaptureOptions: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: java.util.Set getAdditionalPlmns()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getLocalCallProfile()> (SMS_MMS)
<android.widget.TextView: int viewportToContentVerticalOffset()> (SMS_MMS)
<android.app.INotificationManager$Default: int getBlockedAppCount(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin(int)> (SMS_MMS)
<android.view.ViewRootImpl: int getWidth()> (SMS_MMS)
<android.hardware.display.DisplayedContentSamplingAttributes: int getComponentMask()> (SMS_MMS)
<android.media.SubtitleTrack$CueList$EntryIterator: android.util.Pair next()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int describeContents()> (SMS_MMS)
<android.animation.Keyframe: java.lang.Object clone()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub: com.android.internal.view.IDragAndDropPermissions getDefaultImpl()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int calcSize(int[])> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: java.util.Collection getHolderTargets()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: int getWindowingMode()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.NanoApp: long getAppId()> (SMS_MMS)
<android.location.Address: double getLatitude()> (SMS_MMS)
<com.android.internal.app.LocalePicker: java.lang.String[] getSystemAssetLocales()> (SMS_MMS)
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)> (SMS_MMS)
<android.service.autofill.FillEventHistory: java.util.List getEvents()> (SMS_MMS)
<android.app.NotificationHistory: java.lang.String[] getPooledStringsToWrite()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileCalendarPackagesForUser(int)> (SMS_MMS)
<android.app.ProfilerInfo: int hashCode()> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int restartUserInBackground(int)> (SMS_MMS)
<android.text.style.TypefaceSpan: android.graphics.Typeface getTypeface()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GnssNavigationMessage: int describeContents()> (SMS_MMS)
<android.app.PendingIntent: int getCreatorUid()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.CharSequence getText()> (SMS_MMS)
<android.hardware.ICameraService$Default: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)> (SMS_MMS)
<com.android.internal.policy.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getBubbleIntent()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int hashCode()> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ResourcesManager: android.view.Display getAdjustedDisplay(int,android.content.res.Resources)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMaxConns()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: com.android.ims.internal.IImsFeatureStatusCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnTime(long,int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)> (SMS_MMS)
<android.accessibilityservice.GestureDescription$GestureStep: int describeContents()> (SMS_MMS)
<android.app.IActivityManager$Default: int getLaunchedFromUid(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)> (SMS_MMS)
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.telephony.CellInfoLte: int describeContents()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.Environment: java.io.File getDataMiscCeDirectory(int)> (SMS_MMS)
<android.view.SearchEvent: android.view.InputDevice getInputDevice()> (SMS_MMS)
<android.text.style.TtsSpan: java.lang.String getType()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer getHardwareBuffer()> (SMS_MMS)
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()> (SMS_MMS)
<android.content.pm.PackageInstaller: java.util.List getStagedSessions()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int describeContents()> (SMS_MMS)
<android.net.NetworkInfo: java.lang.String getTypeName()> (SMS_MMS)
<android.content.pm.PathPermission: java.lang.String getReadPermission()> (SMS_MMS)
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getContentTransferEncoding()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getCurrentMode()> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int hashCode()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()> (SMS_MMS)
<android.media.tv.TvInputInfo: int hashCode()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getKernelActiveTimeMillis()> (SMS_MMS)
<android.os.storage.StorageManager: long getCacheSizeBytes(java.util.UUID)> (SMS_MMS)
<android.view.ViewTreeObserver$CopyOnWriteArray$Access: java.lang.Object get(int)> (SMS_MMS)
<android.telephony.RadioAccessFamily$1: android.telephony.RadioAccessFamily[] newArray(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isImsRegistered()> (SMS_MMS)
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()> (SMS_MMS)
<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener getUpdateListener()> (SMS_MMS)
<android.view.ViewConfiguration: int getDoubleTapSlop()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayAutoModeRaw()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.ProxyInfo getProxyForNetwork(android.net.Network)> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.VideoProfile: int getVideoState()> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.view.IAppTransitionAnimationSpecsFuture getDefaultImpl()> (SMS_MMS)
<android.content.ClipDescription: android.os.PersistableBundle getExtras()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserRemoved(int)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getPopulationWeight()> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getCategory()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: long getWALTruncateSize()> (SMS_MMS)
<android.widget.LinearLayout: int getGravity()> (SMS_MMS)
<android.telephony.SignalStrength: int getLevel()> (SMS_MMS)
<android.app.WindowConfiguration: int compareTo(android.app.WindowConfiguration)> (SMS_MMS)
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback getDefaultImpl()> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getTvContentRatingSystemList()> (SMS_MMS)
<android.app.timedetector.NetworkTimeSuggestion: java.util.List getDebugInfo()> (SMS_MMS)
<android.hardware.location.NanoApp: byte[] getAppBinary()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.NetworkScanRequest$1: void <init>()> (SMS_MMS)
<android.app.Activity: android.content.ComponentName autofillClientGetComponentName()> (SMS_MMS)
<android.telephony._$$Lambda$U5dt9Oz29BpLzJ19WIl50whqAGs: java.lang.Object applyOrThrow(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetFraction()> (SMS_MMS)
<com.google.android.mms.util.PduCacheEntry: com.google.android.mms.pdu.GenericPdu getPdu()> (SMS_MMS)
<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int,android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<android.location.LocationManager: void getCurrentLocation(java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: int getFeatureState()> (SMS_MMS)
<android.app.IUiModeManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int getInputMethodWindowVisibleHeight()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: boolean equals(java.lang.Object)> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getAidForAppType(int)> (SMS_MMS)
<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage[] newArray(int)> (SMS_MMS)
<android.app.SystemServiceRegistry$30: android.view.inputmethod.InputMethodManager getService(android.app.ContextImpl)> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: java.lang.String access$200()> (SMS_MMS)
<android.content.res.Resources: float getFraction(int,int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getLastNetworkLogRetrievalTime()> (SMS_MMS)
<android.app.Person: int describeContents()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCallBarringForServiceClass(int,int,java.lang.String[],int)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int getPanid()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)> (SMS_MMS)
<android.app.slice.SliceItem: java.util.List getHints()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)> (SMS_MMS)
<android.view.KeyEvent: int getSource()> (SMS_MMS)
<android.graphics.fonts.FontVariationAxis: float getStyleValue()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setDataUsage(long,long)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)> (SMS_MMS)
<android.printservice.PrintServiceInfo: java.lang.String getId()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorForPhone(int)> (SMS_MMS)
<android.media.MediaPlayer$TrackInfo: int describeContents()> (SMS_MMS)
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getForceEphemeralUsers(android.content.ComponentName)> (SMS_MMS)
<android.os.storage.StorageManager: android.os.Looper access$300(android.os.storage.StorageManager)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.lang.String getMnc()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.net.NetworkPolicyManager: boolean getRestrictBackground()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,int,int)> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()> (SMS_MMS)
<android.widget.GridView: int computeVerticalScrollOffset()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: int describeContents()> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getHintAmbientBigPicture()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationCenterY(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String,int)> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int access$476(android.window.WindowContainerTransaction$Change,int)> (SMS_MMS)
<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer getDeviceServer()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.MergedConfiguration: int describeContents()> (SMS_MMS)
<android.app.Notification: java.util.List getContextualActions()> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal$1: int compare(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int getDisplayId()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IPinnedStackController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.ChildZygoteProcess: int getPid()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getScrollX()> (SMS_MMS)
<android.os.ICancellationSignal$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getUidOps(int,int[])> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: int attachMixes(java.util.List)> (SMS_MMS)
<android.text.style.SuggestionSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: java.lang.String getOwnerInfo(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getUserProvisioningState()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isBackupServiceEnabled(android.content.ComponentName)> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()> (SMS_MMS)
<android.media.IPlayer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.UsageStats: long getTotalTimeForegroundServiceUsed()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSubscriptionId()> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.LocationManager: android.location.ILocationManager access$000(android.location.LocationManager)> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceId()> (SMS_MMS)
<android.media.AudioManager: int getDevicesForStream(int)> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder query(android.net.Uri$Part)> (SMS_MMS)
<com.android.internal.util.BitUtils: long getUint32(java.nio.ByteBuffer,int)> (SMS_MMS)
<android.net.TrafficStats: int getThreadStatsTag()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int,int,int)> (SMS_MMS)
<android.graphics.Paint: float getLetterSpacing()> (SMS_MMS)
<android.media.AudioManager: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)> (SMS_MMS)
<android.os.ProxyFileDescriptorCallback: int onWrite(long,int,byte[])> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.ComponentName getHomeActivities(java.util.List)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)> (SMS_MMS)
<android.text.style.QuoteSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: int getInstallWindowStart()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.util.Map getRecoveryStatus()> (SMS_MMS)
<android.os.WorkSource: int get(int)> (SMS_MMS)
<android.app.AutomaticZenRule: android.content.ComponentName getOwner()> (SMS_MMS)
<android.widget.TextView: int getLineAtCoordinate(float)> (SMS_MMS)
<android.view.textclassifier.TextClassification: int getEntityCount()> (SMS_MMS)
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(android.os.UserHandle)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getBackupAgentName()> (SMS_MMS)
<android.media.AudioSystem: int getDefaultStreamVolume(int)> (SMS_MMS)
<android.location.Location: long getElapsedRealtimeAgeNanos()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.slice.SliceManager: int checkSlicePermission(android.net.Uri,int,int)> (SMS_MMS)
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: int getMaxSupportedInstances()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Typeface getTypeface()> (SMS_MMS)
<android.view.View: int getFocusable()> (SMS_MMS)
<android.media.AudioAttributes: int getContentType()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isMvnoMatched(int,int,java.lang.String)> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: float getLength()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.util.ArrayList getRecommendedStreamConfigurations()> (SMS_MMS)
<android.app.assist.AssistContent: java.lang.String getStructuredData()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.BlendMode getProgressBackgroundTintBlendMode()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: int getStrokeColor()> (SMS_MMS)
<android.graphics.ColorSpace$Model: int getComponentCount()> (SMS_MMS)
<android.content.IContentService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int getMultipathPreference(android.net.Network)> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.media.midi.IMidiDeviceOpenCallback getDefaultImpl()> (SMS_MMS)
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)> (SMS_MMS)
<android.media.session.ISession$Default: android.media.session.ISessionController getController()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub: android.service.vr.IVrStateCallbacks getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int getParameter(android.os.ParcelUuid,int)> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getOpportunisticNetworkServiceRegisterer()> (SMS_MMS)
<android.app.role.IRoleManager$Stub$Proxy: java.util.List getRoleHoldersAsUser(java.lang.String,int)> (SMS_MMS)
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,int[])> (SMS_MMS)
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsManagerServiceRegisterer()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: int getFrequencyMhz()> (SMS_MMS)
<android.view.ImeFocusController: int onProcessImeInputStage(java.lang.Object,android.view.InputEvent,android.view.WindowManager$LayoutParams,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback)> (SMS_MMS)
<android.view.View: java.lang.String getTransitionName()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$Builder: int access$500(android.view.textclassifier.TextClassifierEvent$Builder)> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub: android.security.keystore.ICredstoreTokenCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.Display$Mode: int describeContents()> (SMS_MMS)
<android.widget.AbsListView: android.view.View obtainView(int,boolean[])> (SMS_MMS)
<android.media.RemoteControlClient: int getRccStateFromState(int)> (SMS_MMS)
<android.net.TrafficStats: long getTotalRxPackets()> (SMS_MMS)
<android.media.MediaCas: android.media.MediaCas$Session createFromSessionId(java.util.ArrayList)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getDocumentLaunchMode()> (SMS_MMS)
<android.text.Layout: int getOffsetToRightOf(int)> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.text.style.SuggestionSpan: java.util.Locale getLocaleObject()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSlotIndex()> (SMS_MMS)
<android.telephony.ims.ImsSsData: int getServiceType()> (SMS_MMS)
<android.telephony.CellSignalStrength: int inRangeOrUnavailable(int,int,int)> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getCachedSize()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> (SMS_MMS)
<android.widget.ImageView: android.graphics.BlendMode getImageTintBlendMode()> (SMS_MMS)
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)> (SMS_MMS)
<android.security.IKeyChainService$Stub: android.security.IKeyChainService getDefaultImpl()> (SMS_MMS)
<android.os.IDumpstateListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$PathPart: java.lang.String getEncoded()> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getKeyChainProtectionParams()> (SMS_MMS)
<android.telephony.ServiceState: boolean getRoaming()> (SMS_MMS)
<android.hardware.camera2.CameraMetadata: java.util.ArrayList getKeys(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[],boolean)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: java.lang.String getLockName()> (SMS_MMS)
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceFormat(android.view.Surface)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()> (SMS_MMS)
<android.widget.TextView: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()> (SMS_MMS)
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int toByteArray(byte[],int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int getInstantAppCookieMaxBytes()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: android.view.PointerIcon getPointerIcon()> (SMS_MMS)
<android.view.InsetsAnimationThread: android.view.InsetsAnimationThread get()> (SMS_MMS)
<android.widget.PopupWindow: android.view.View getContentView()> (SMS_MMS)
<android.net.NetworkCapabilities: int describeContents()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.RadioManager: int listModules(java.util.List)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: int hashCode()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$ExternalPlugData: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.webkit.WebView: android.view.textclassifier.TextClassifier getTextClassifier()> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getVoWiFiModeSetting(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int addAuthToken(byte[])> (SMS_MMS)
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()> (SMS_MMS)
<android.graphics.Bitmap: int describeContents()> (SMS_MMS)
<android.content.IntentFilter: int countDataAuthorities()> (SMS_MMS)
<android.widget.CursorAdapter: int getCount()> (SMS_MMS)
<android.app.ActivityManager: int getLauncherLargeIconSizeInner(android.content.Context)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)> (SMS_MMS)
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()> (SMS_MMS)
<android.media.IMediaHTTPService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> (SMS_MMS)
<com.android.internal.os.StatsdHiddenApiUsageLogger: com.android.internal.os.StatsdHiddenApiUsageLogger getInstance()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int checkProvisioningPreCondition(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMax()> (SMS_MMS)
<android.media.IMediaHTTPService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsManager: android.telephony.ims.ImsMmTelManager getImsMmTelManager(int)> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.util.List getAllPackages()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getSeparateProfileChallengeEnabled(int)> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.logging.InstanceId: int hashCode()> (SMS_MMS)
<android.text.style.ScaleXSpan: int getSpanTypeId()> (SMS_MMS)
<android.app.blob.BlobInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.widget.TextView$CharWrapper: int getTextRunCursor(int,int,boolean,int,int,android.graphics.Paint)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.Byte2: byte get(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int getUserId()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getCredentialOwnerProfile(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int getForegroundServiceType(android.content.ComponentName,android.os.IBinder)> (SMS_MMS)
<android.os.FileUtils$MemoryPipe: java.io.FileDescriptor getFD()> (SMS_MMS)
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: java.lang.String getCallingPackageName()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: int getColorModes()> (SMS_MMS)
<android.telephony.ims.ImsConferenceState: int getConnectionStateForStatus(java.lang.String)> (SMS_MMS)
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: android.os.Bundle getExtras()> (SMS_MMS)
<android.content.BroadcastReceiver$PendingResult: int getResultCode()> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getNormalizedUuid()> (SMS_MMS)
<android.net.MatchAllNetworkSpecifier: int describeContents()> (SMS_MMS)
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int,int)> (SMS_MMS)
<android.graphics.Paint: float getTextSkewX()> (SMS_MMS)
<android.widget.TextView: int getHorizontalOffsetForDrawables()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel,int[])> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AbsSpinner: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: com.android.internal.telephony.euicc.IDisableProfileCallback getDefaultImpl()> (SMS_MMS)
<android.app.Activity: boolean isTopOfTask()> (SMS_MMS)
<android.app.role.IRoleController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isCurrentInputMethodSetByOwner()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getComponentEnabledSetting(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringMonthly(java.time.ZonedDateTime)> (SMS_MMS)
<android.location.GpsMeasurementsEvent: android.location.GpsClock getClock()> (SMS_MMS)
<android.security.net.config.CertificatesEntryRef: java.util.Set getTrustAnchors()> (SMS_MMS)
<android.content.ContentResolver: java.util.List getCurrentSyncsAsUser(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int getPlayerInterfaceId()> (SMS_MMS)
<android.app.timezone.ICallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.graphics.Point getAppTaskThumbnailSize()> (SMS_MMS)
<android.net.WebAddress: java.lang.String getAuthInfo()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getCertInstallerPackage(android.content.ComponentName)> (SMS_MMS)
<android.view.DragEvent: float getX()> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityGsm$1: android.telephony.CellIdentityGsm createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.window.WindowContainerTransaction$HierarchyOp: int describeContents()> (SMS_MMS)
<android.provider.FontsContract$FontInfo: int getTtcIndex()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)> (SMS_MMS)
<android.graphics.Bitmap: int getWidth()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getIsimIst()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getAntibanding()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.NetworkScan requestNetworkScan(android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager$Model: byte[] getModelData()> (SMS_MMS)
<android.service.notification.StatusBarNotification: int getId()> (SMS_MMS)
<android.hardware.SensorManager: android.hardware.SensorDirectChannel createDirectChannel(android.os.MemoryFile)> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationErrorReport$ParcelableCrashInfo: int describeContents()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.IPackageInstaller getPackageInstaller()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File,int)> (SMS_MMS)
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeDirectory(int,java.lang.String)> (SMS_MMS)
<android.database.sqlite.SQLiteConnectionPool: java.lang.String getPath()> (SMS_MMS)
<android.os.Parcel: byte[] readBlob()> (SMS_MMS)
<android.view.ScrollCaptureSession: android.graphics.Point getPositionInWindow()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.SystemClock$2: long millis()> (SMS_MMS)
<android.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)> (SMS_MMS)
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.media.AudioDeviceInfo: int getId()> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: int describeContents()> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextClassification: java.lang.String getEntity(int)> (SMS_MMS)
<android.telephony.CellIdentityLte: int getMnc()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$8: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.hardware.camera2.CameraAccessException: java.lang.String getDefaultMessage(int)> (SMS_MMS)
<android.widget.Editor: boolean getFlagInsertionHandleGesturesEnabled()> (SMS_MMS)
<android.telephony.SubscriptionManager: long getLongSubscriptionProperty(int,java.lang.String,long,android.content.Context)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: long getBoundToSpecificSecureUserId()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getCurrentDataRole()> (SMS_MMS)
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)> (SMS_MMS)
<android.hardware.display.DisplayedContentSamplingAttributes: int getPixelFormat()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean getAvbPublicKey(android.gsi.AvbPublicKey)> (SMS_MMS)
<android.os.HidlMemory: long getSize()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub: android.media.IMediaHTTPConnection asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.CharSequence getCategoryTitle(android.content.Context,int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getSoftInputMode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean nvWriteCdmaPrl(byte[])> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: java.lang.String getPublisher()> (SMS_MMS)
<android.os.Bundle: int describeContents()> (SMS_MMS)
<android.location.GpsMeasurement: double getCn0InDbHz()> (SMS_MMS)
<android.telephony.PinResult: int getAttemptsRemaining()> (SMS_MMS)
<android.app.SystemServiceRegistry$80: android.service.persistentdata.PersistentDataBlockManager createService()> (SMS_MMS)
<android.util.MergedConfiguration: int hashCode()> (SMS_MMS)
<android.media.AudioTrack: int getDualMonoMode()> (SMS_MMS)
<android.webkit.WebView: int getContentWidth()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: int getActionTag()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int[] getTextLineBaselines()> (SMS_MMS)
<android.view.InsetsController: android.view.InsetsController$Host getHost()> (SMS_MMS)
<android.graphics.ColorFilter: long createNativeInstance()> (SMS_MMS)
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()> (SMS_MMS)
<android.telephony.SubscriptionPlan: java.lang.CharSequence access$302(android.telephony.SubscriptionPlan,java.lang.CharSequence)> (SMS_MMS)
<android.drm.DrmRights: java.lang.String getAccountId()> (SMS_MMS)
<android.print.IPrintManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub: android.security.IKeyChainAliasCallback getDefaultImpl()> (SMS_MMS)
<android.widget.PopupWindow: android.transition.Transition getEnterTransition()> (SMS_MMS)
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session createSubsession()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getVibratorOnTimer()> (SMS_MMS)
<android.text.InputFilter$LengthFilter: int getMax()> (SMS_MMS)
<android.app.BackStackState: int describeContents()> (SMS_MMS)
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$MagnificationController getMagnificationController(int)> (SMS_MMS)
<android.app.ActivityOptions: int getCallerDisplayId()> (SMS_MMS)
<android.app.StatusBarManager: android.app.StatusBarManager$DisableInfo getDisableInfo()> (SMS_MMS)
<android.app.ITaskStackListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getSsSinr()> (SMS_MMS)
<android.widget.ExpandableListView: long getSelectedPosition()> (SMS_MMS)
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: java.lang.String getCameraId()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnSpan()> (SMS_MMS)
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getNavigationMode()> (SMS_MMS)
<android.os.VibrationEffect$Waveform: int hashCode()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub: android.print.IPrintDocumentAdapter asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVoWiFiSettingEnabled(int)> (SMS_MMS)
<android.graphics.Color: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> (SMS_MMS)
<android.util.Base64$Encoder: int maxOutputSize(int)> (SMS_MMS)
<android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertEffectModeFromLegacy(java.lang.String)> (SMS_MMS)
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor)> (SMS_MMS)
<android.app.WallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int)> (SMS_MMS)
<android.os.IPowerManager$Default: int getLastSleepReason()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub: android.content.pm.IShortcutService getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()> (SMS_MMS)
<android.os.IProgressListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceNetworkType(int)> (SMS_MMS)
<android.os.UserManager: int[] getEnabledProfileIds(int)> (SMS_MMS)
<android.widget.BaseAdapter: int getViewTypeCount()> (SMS_MMS)
<android.content.res.loader.ResourcesLoader: java.util.List getApkAssets()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: float getBrightnessConstraint(int)> (SMS_MMS)
<android.text.style.AbsoluteSizeSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<com.android.internal.view.menu.CascadingMenuPopup: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> (SMS_MMS)
<android.database.CursorWrapper: double getDouble(int)> (SMS_MMS)
<android.content.IntentFilter: int getPriority()> (SMS_MMS)
<android.telephony.RadioAccessFamily: int getRadioAccessFamily()> (SMS_MMS)
<android.location.LocationManager: boolean isExtraLocationControllerPackageEnabled()> (SMS_MMS)
<android.location.GnssMeasurement: double getFullInterSignalBiasNanos()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.UserHandle: int getAppIdFromSharedAppGid(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols(int)> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: int getUserSentiment()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener getDefaultImpl()> (SMS_MMS)
<android.telephony.CellIdentity$1: void <init>()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Default: int notifyStagedSession(int)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String parseAuthority(java.lang.String,int)> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getNotificationChannelGroupForPackage(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: java.lang.String getSerial(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] getSlotsMapping()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$Part$EmptyPart: boolean isEmpty()> (SMS_MMS)
<android.view.IPinnedStackListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: float getLeftFadingEdgeStrength()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderResponse waitForAndGetProvider()> (SMS_MMS)
<android.widget.RemoteViews$ViewPaddingAction: int getActionTag()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: int getCsgIdentity()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkOperation(int,int,java.lang.String)> (SMS_MMS)
<android.net.IIpSecService$Stub$Proxy: android.net.IpSecTunnelInterfaceResponse createTunnelInterface(java.lang.String,java.lang.String,android.net.Network,android.os.IBinder,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.Icon: int getDataOffset()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getAfTriggerId()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub: android.content.pm.dex.IArtManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getEnableAdjustBrightness()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getStagedSessions()> (SMS_MMS)
<android.transition.ChangeImageTransform$2: android.graphics.Matrix get(android.widget.ImageView)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsEcbm getEcbmInterface()> (SMS_MMS)
<android.os.IServiceManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getWindowAttachCount()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: int describeContents()> (SMS_MMS)
<android.view.IWindow$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int getId()> (SMS_MMS)
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)> (SMS_MMS)
<android.telecom.Logging.EventManager$EventRecord$EventTiming: long getTime()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Editor: boolean getFlagCursorDragFromAnywhereEnabled()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy$ValidationFailedException: int getErrorCode()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Default: java.util.List getAssociations(java.lang.String,int)> (SMS_MMS)
<android.content.IRestrictionsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: int getPhysicalAddress()> (SMS_MMS)
<android.telephony.ServiceState: int getVoiceRegState()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstalledModules(int)> (SMS_MMS)
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialTextAfterCursor(int,int)> (SMS_MMS)
<android.telecom.Logging.EventManager: java.util.Map getCallEventRecordMap()> (SMS_MMS)
<android.content.IIntentSender$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalToolMajor(int)> (SMS_MMS)
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)> (SMS_MMS)
<android.media.tv.TvTrackInfo: java.lang.String getEncoding()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int addSubInfo(java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.app.AppOpsManager: int checkAudioOpNoThrow(int,int,int,java.lang.String)> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub: com.android.internal.inputmethod.IInputContentUriToken asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getNumPacketsTx()> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: byte[] getTextString(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> (SMS_MMS)
<android.media.AudioManager: android.media.AudioPortConfig updatePortConfig(android.media.AudioPortConfig,java.util.ArrayList)> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.ShortcutInfo$Builder: int access$700(android.content.pm.ShortcutInfo$Builder)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int isEmpty(int)> (SMS_MMS)
<android.app.IWallpaperManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: java.util.List getEffects()> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioRecord: int getState()> (SMS_MMS)
<android.telephony.CellInfoWcdma: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.ContextHubInfo getContextHubInfo(int)> (SMS_MMS)
<android.app.AppOpsManager$OpEventProxyInfo: int getUid()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub: android.content.pm.ILauncherApps getDefaultImpl()> (SMS_MMS)
<android.database.BulkCursorToCursorAdaptor: int getCount()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setDataRoaming(int,int)> (SMS_MMS)
<android.widget.AdapterViewAnimator: int getBaseline()> (SMS_MMS)
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)> (SMS_MMS)
<android.app.IActivityManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: android.widget.RemoteViewsAdapter$LoadingViewTemplate getLoadingTemplate(android.content.Context)> (SMS_MMS)
<android.widget.RemoteViews$SetRippleDrawableColor: int getActionTag()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean getBooleanSubscriptionProperty(int,java.lang.String,boolean,android.content.Context)> (SMS_MMS)
<android.app.Notification$Builder: int access$2400(android.app.Notification$Builder)> (SMS_MMS)
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)> (SMS_MMS)
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean iccCloseLogicalChannel(int,int)> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] getUnsuspendablePackages(java.lang.String[])> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getDisplayOptions()> (SMS_MMS)
<android.app.usage.AppStandbyInfo: int describeContents()> (SMS_MMS)
<android.location.ILocationManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getUidForSharedUser(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isCaCertApproved(java.lang.String,int)> (SMS_MMS)
<android.media.tv.TvInputManager: android.media.tv.ITvInputManager access$400(android.media.tv.TvInputManager)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Notification: android.app.Notification$BubbleMetadata getBubbleMetadata()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getAccessibilityShortcutTargets(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int checkSignatures(int,int)> (SMS_MMS)
<android.media.MediaDrm: int getMaxSecurityLevel()> (SMS_MMS)
<android.widget.ExpandableListPosition: long getPackedPosition()> (SMS_MMS)
<android.telephony.SubscriptionPlan: long getDataUsageBytes()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int getMaxWidth()> (SMS_MMS)
<android.graphics.ColorSpace: float[] access$1100()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults()> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int checkUidSignatures(int,int)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedByte()> (SMS_MMS)
<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)> (SMS_MMS)
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)> (SMS_MMS)
<android.net.NetworkProvider: java.lang.String getName()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Key: java.lang.String getName()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.legacy.PerfMeasurement: int getCompletedQueryCount()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: int[] getAppIdWhitelist()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService getDefaultImpl()> (SMS_MMS)
<android.media.AudioTrack: int getOffloadDelay()> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub: android.hardware.display.IVirtualDisplayCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.String givePrintableIccid(java.lang.String)> (SMS_MMS)
<android.database.CursorWrapper: int getColumnCount()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.PendingIntent: boolean isBroadcast()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String getMobileProvisioningUrl()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int getBackgroundRequestResourceId()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getSelfManagedPhoneAccounts(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.util.List getEnabledNotificationListeners(int)> (SMS_MMS)
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()> (SMS_MMS)
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.net.INetworkScoreService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int getNativeSize()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getState()> (SMS_MMS)
<android.widget.Editor$PositionListener: int getPositionX()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Proxy: int release()> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfoLte: int hashCode()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getFlags()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getStorageEncryption(android.content.ComponentName,int)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()> (SMS_MMS)
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayInfo getDisplayInfo(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager: java.util.List getPackagesForOps(java.lang.String[])> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)> (SMS_MMS)
<android.app.AsyncNotedAppOp: java.lang.String getMessage()> (SMS_MMS)
<android.app.Activity: boolean isActivityTransitionRunning()> (SMS_MMS)
<android.view.InputDevice: int getControllerNumber()> (SMS_MMS)
<android.graphics.Paint: float getShadowLayerDx()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallStateForSlot(int)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.util.List getTestProviderCurrentRequests(java.lang.String)> (SMS_MMS)
<android.animation.PathKeyframes: java.lang.Object getValue(float)> (SMS_MMS)
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$Callback)> (SMS_MMS)
<android.telephony.SignalStrength: int getLteCqi()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getEarfcn()> (SMS_MMS)
<android.media.tv.TvInputManager$Session: java.lang.String getSelectedTrack(int)> (SMS_MMS)
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getForegroundAccessDuration(int)> (SMS_MMS)
<android.widget.RemoteViews$ViewContentNavigation: int getActionTag()> (SMS_MMS)
<android.location.GpsClock: long getFullBiasInNs()> (SMS_MMS)
<android.media.AudioDeviceAttributes: int hashCode()> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getNextFocusRightId()> (SMS_MMS)
<android.widget.TextView: boolean getLinksClickable()> (SMS_MMS)
<android.net.RouteInfo: int hashCode()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: long getCreatedMillis()> (SMS_MMS)
<android.telephony.ModemInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<android.view.WindowInsetsAnimation: float getAlpha()> (SMS_MMS)
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: android.net.Uri[] getPinnedSlices(java.lang.String)> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int describeContents()> (SMS_MMS)
<android.app.AppOpsManager$NoteOpEvent: long getDuration()> (SMS_MMS)
<android.media.Utils: int divUp(int,int)> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int stopUser(int,boolean,android.app.IStopUserCallback)> (SMS_MMS)
<android.view.autofill.AutofillId: int describeContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getMimeGroups()> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingStart()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isConcurrentVoiceAndDataAllowed(int)> (SMS_MMS)
<android.security.net.config.UserCertificateSource: android.security.net.config.UserCertificateSource getInstance()> (SMS_MMS)
<android.os.UserManager: java.util.List getUserHandles(boolean)> (SMS_MMS)
<android.media.Metadata: long getLong(int)> (SMS_MMS)
<android.media.MediaDescription: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.UiccAccessRule$1: android.telephony.UiccAccessRule createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.session.MediaSession$QueueItem: long getQueueId()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubscriptionSpecificCarrierId(int)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.content.Context: android.app.IApplicationThread getIApplicationThread()> (SMS_MMS)
<android.service.dreams.IDreamManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsCallSession createCallSession(android.telephony.ims.ImsCallProfile)> (SMS_MMS)
<android.app.ActivityOptions: boolean getTaskAlwaysOnTop()> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub: com.android.internal.telephony.IOns asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$8: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int getX()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1400()> (SMS_MMS)
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()> (SMS_MMS)
<android.telephony.AvailableNetworkInfo$1: android.telephony.AvailableNetworkInfo[] newArray(int)> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getHardwareList()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getUserRestrictions(int)> (SMS_MMS)
<android.net.LinkProperties: java.lang.String getInterfaceName()> (SMS_MMS)
<android.view.MotionEvent: float getX(int)> (SMS_MMS)
<android.app.AppOpsManager: void getHistoricalOps(android.app.AppOpsManager$HistoricalOpsRequest,java.util.concurrent.Executor,java.util.function.Consumer)> (SMS_MMS)
<android.media.AudioManager: java.util.List getHwOffloadEncodingFormatsSupportedForA2DP()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: android.media.AudioFormat getCaptureFormat()> (SMS_MMS)
<android.widget.Editor$EasyEditPopupWindow: int clipVertically(int)> (SMS_MMS)
<android.telephony.ims.ImsSsData: int getServiceClass()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledLockingShiftTables()> (SMS_MMS)
<android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)> (SMS_MMS)
<android.net.wifi.nl80211.RadioChainInfo: int describeContents()> (SMS_MMS)
<android.content.ClipData$Item: android.content.Intent getIntent()> (SMS_MMS)
<android.media.session.ISessionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityThread: java.lang.String getProcessName()> (SMS_MMS)
<android.os.SystemProperties: java.lang.String get(java.lang.String)> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: long getGnssCapabilities()> (SMS_MMS)
<android.hardware.radio.TunerCallbackAdapter: java.util.List getLastCompleteList()> (SMS_MMS)
<android.text.style.AccessibilityReplacementSpan: int getSpanTypeId()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager$Model: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getGenericSoundModel()> (SMS_MMS)
<android.view.MotionEvent: int getHistorySize()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: long getStatsPeriod()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getPermissionControllerPackageName()> (SMS_MMS)
<android.widget.GridView: int getHorizontalSpacing()> (SMS_MMS)
<android.telephony.SignalStrength: java.util.List getCellSignalStrengths(java.lang.Class)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getDescription()> (SMS_MMS)
<android.net.EthernetManager: boolean isAvailable(java.lang.String)> (SMS_MMS)
<android.os.incremental.IncrementalNewFileParams: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()> (SMS_MMS)
<android.telephony.TelephonyManager: int getPreferredOpportunisticDataSubscription()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncsAsUser(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()> (SMS_MMS)
<android.telephony.ServiceState: int hashCode()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)> (SMS_MMS)
<android.security.KeyStore: int insert(java.lang.String,byte[],int,int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.contentcapture.DataRemovalRequest: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isEnabled()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimState()> (SMS_MMS)
<android.os.IIncidentDumpCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxUsers()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getPowerSaveModeEnabledTime(long,int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForPackageForUser(long,long,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isMasterMute()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: java.lang.String getGroupName()> (SMS_MMS)
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo[] newArray(int)> (SMS_MMS)
<android.print.PrintJobInfo: float getProgress()> (SMS_MMS)
<android.os.BugreportManager: android.content.Context access$000(android.os.BugreportManager)> (SMS_MMS)
<android.view.AccessibilityIterators$AbstractTextSegmentIterator: int[] getRange(int,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int is_hardware_backed(java.lang.String)> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.Notification$WearableExtender: java.util.List getActions()> (SMS_MMS)
<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerDemuxRequest: int describeContents()> (SMS_MMS)
<android.print.PrintAttributes: int getColorMode()> (SMS_MMS)
<android.net.NetworkStats: int size()> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri addCustomExternalRingtone(android.net.Uri,int)> (SMS_MMS)
<android.net.NetworkIdentity: boolean getMetered()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$600(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.os.storage.StorageManager: java.util.UUID getUuidForPath(java.io.File)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IThermalEventListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SmsManager$4: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int)> (SMS_MMS)
<android.media.audio.common.AudioConfig: int describeContents()> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()> (SMS_MMS)
<android.app.ActivityManager: java.util.List getAppTasks()> (SMS_MMS)
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.CellInfoWcdma: int hashCode()> (SMS_MMS)
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,boolean,int,int)> (SMS_MMS)
<android.view.GestureExclusionTracker: java.util.List computeChangedRects()> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestSelection()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallBarring(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getAllPhoneAccountHandles()> (SMS_MMS)
<android.net.ConnectivityManager: int registerNetworkFactory(android.os.Messenger,java.lang.String)> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityManager: java.util.List getRunningExternalApplications()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getForceEphemeralUsers(android.content.ComponentName)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: float getElevation()> (SMS_MMS)
<android.app.usage.StorageStats: long getCodeBytes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isAvailable(int,int,int)> (SMS_MMS)
<android.view.inputmethod.SparseRectFArray: int getFlags(int,int)> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub: android.hardware.usb.IUsbSerialReader asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.UssdResponse: java.lang.CharSequence getReturnMessage()> (SMS_MMS)
<android.location.GpsMeasurement: double getDopplerShiftUncertaintyInHz()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$ChildDrawable addLayer(android.graphics.drawable.Drawable,int[],int,int,int,int,int)> (SMS_MMS)
<android.animation.Keyframe: float getFraction()> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: int getReadStatus()> (SMS_MMS)
<android.media.MediaRecorder: int getAudioSourceMax()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledPackages(int,int)> (SMS_MMS)
<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialSelectedText(int)> (SMS_MMS)
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigByComponentForSubId(java.lang.String,int)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.String getId()> (SMS_MMS)
<android.app.WallpaperManager: boolean isWallpaperBackupEligible(int)> (SMS_MMS)
<android.renderscript.RenderScript: long nProgramFragmentCreate(java.lang.String,java.lang.String[],long[])> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int describeContents()> (SMS_MMS)
<com.android.internal.app.LocalePicker: android.os.LocaleList getLocales()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub: android.os.storage.IStorageShutdownObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int getPsc()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.util.List getDependentPackages()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean isSMSPromptEnabled()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings build()> (SMS_MMS)
<android.net.ScoredNetwork: int calculateBadge(int)> (SMS_MMS)
<android.content.IClipboard$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.ViewGroup: boolean pointInHoveredChild(android.view.MotionEvent)> (SMS_MMS)
<android.app.LoadedApk$SplitDependencyLoaderImpl: java.lang.ClassLoader getClassLoaderForSplit(java.lang.String)> (SMS_MMS)
<android.view.View: android.view.ViewParent getParent()> (SMS_MMS)
<android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()> (SMS_MMS)
<android.os.WorkSource: int size()> (SMS_MMS)
<android.filterfw.core.InputPort: java.lang.Object getTarget()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<com.android.server.NetworkManagementSocketTagger$1: com.android.server.NetworkManagementSocketTagger$SocketTags initialValue()> (SMS_MMS)
<android.app.Activity: android.net.Uri getReferrer()> (SMS_MMS)
<android.app.servertransaction.PendingTransactionActions: android.os.Bundle getOldState()> (SMS_MMS)
<android.telephony.SignalStrength: long getTimestampMillis()> (SMS_MMS)
<com.android.internal.util.ArrayUtils: byte[] newUnpaddedByteArray(int)> (SMS_MMS)
<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()> (SMS_MMS)
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.net.NetworkRequest: int hashCode()> (SMS_MMS)
<android.telephony.PhoneNumberRange: boolean matches(java.lang.String)> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableVibration()> (SMS_MMS)
<android.os.VibrationEffect$Composed: int hashCode()> (SMS_MMS)
<android.media.AudioPresentation: int getPresentationId()> (SMS_MMS)
<android.service.notification.ZenModeConfig: java.lang.String getDescription(android.content.Context,boolean,android.service.notification.ZenModeConfig,boolean)> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: int describeContents()> (SMS_MMS)
<android.widget.TextView: java.lang.String getFontVariationSettings()> (SMS_MMS)
<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()> (SMS_MMS)
<android.text.DynamicLayout: int getBottomPadding()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)> (SMS_MMS)
<android.telephony.RadioAccessSpecifier$1: android.telephony.RadioAccessSpecifier createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.WindowInsets getWindowInsets(boolean)> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int describeContents()> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getMaxTime()> (SMS_MMS)
<android.os.VibrationEffect: int describeContents()> (SMS_MMS)
<android.media.PlaybackParams: int getAudioFallbackMode()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int getRequestRes()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getTaskRootPackageName()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: long getCentralDirOffset(java.nio.ByteBuffer,long)> (SMS_MMS)
<android.os.IClientCallback$Stub: android.os.IClientCallback getDefaultImpl()> (SMS_MMS)
<android.app.RemoteAction: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.TypedProperties: long getLong(java.lang.String)> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.gles_jni.EGLDisplayImpl: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMeid(int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserCePackageDirectory(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int,boolean)> (SMS_MMS)
<android.view.ViewDebug: long getViewInstanceCount()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.view.ViewGroup: int getNestedScrollAxes()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isImsSmsSupportedForSubscriber(int)> (SMS_MMS)
<android.media.session.PlaybackState$CustomAction: java.lang.CharSequence getName()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getDuration()> (SMS_MMS)
<android.app.slice.SliceSpec: java.lang.String getType()> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: int getPriority()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: float[] getAnimationScales()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getApplicationEnabledSetting(java.lang.String,int)> (SMS_MMS)
<android.database.BulkCursorDescriptor: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxSoundModels()> (SMS_MMS)
<android.app.ActivityThread: java.util.concurrent.Executor getExecutor()> (SMS_MMS)
<android.view.InsetsState: android.graphics.Rect getDisplayFrame()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.app.job.IJobScheduler$Default: android.app.job.JobInfo getPendingJob(int)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.PowerManager: int getLastShutdownReason()> (SMS_MMS)
<android.media.MediaPlayer: android.media.MediaTimestamp getTimestamp()> (SMS_MMS)
<android.content.pm.UserInfo: boolean isSystemOnly()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Default: int queryCapabilityStatus()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()> (SMS_MMS)
<android.hardware.ICameraClient$Stub: android.hardware.ICameraClient getDefaultImpl()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: android.net.Uri getLocalAddress()> (SMS_MMS)
<android.telephony.CellConfigLte: boolean equals(java.lang.Object)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()> (SMS_MMS)
<android.app.usage.StorageStats: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.style.StyleSpan: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstallerPackageName(java.lang.String)> (SMS_MMS)
<android.hardware.Camera: int cameraInitUnspecified(int)> (SMS_MMS)
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.Object getResult()> (SMS_MMS)
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IUiAutomationConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebView: android.webkit.PluginList getPluginList()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot$Builder: int getPixelFormat()> (SMS_MMS)
<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: long getItemId(int)> (SMS_MMS)
<android.app.ActivityOptions: android.view.RemoteAnimationAdapter getRemoteAnimationAdapter()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int getAnimatedImageRes()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getWifiMacAddress(android.content.ComponentName)> (SMS_MMS)
<android.widget.ScrollBarDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.app.prediction.AppPredictionContext: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedFrameNumber()> (SMS_MMS)
<android.view.ImeFocusController: android.view.View getServedView()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: long getNativeTree()> (SMS_MMS)
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (SMS_MMS)
<android.os.PowerManager: int getLastSleepReason()> (SMS_MMS)
<android.view.InsetsState: int getSourcesCount()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getOrganizationColorForUser(int)> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: int getMin6gRssiDbm()> (SMS_MMS)
<android.view.ViewRootImpl: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.app.contentsuggestions.IClassificationsCallback getDefaultImpl()> (SMS_MMS)
<android.app.timezone.IRulesManager$Default: int requestUninstall(byte[],android.app.timezone.ICallback)> (SMS_MMS)
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Default: java.util.List getEnrolledFingerprints(int,java.lang.String)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VPath: android.util.Property getProperty(java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setDisplayNameUsingSrc(java.lang.String,int,int)> (SMS_MMS)
<android.content.res.AssetManager: long access$200(android.content.res.AssetManager)> (SMS_MMS)
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer mutableCopy()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getMinimumSaturation()> (SMS_MMS)
<android.accessibilityservice.AccessibilityShortcutInfo: java.lang.String getSettingsActivityName()> (SMS_MMS)
<android.widget.TextView: int computeVerticalScrollRange()> (SMS_MMS)
<android.hardware.lights.LightsManager: android.hardware.lights.LightState getLightState(android.hardware.lights.Light)> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifierMetadata: java.lang.String getCallingPackageName()> (SMS_MMS)
<android.os.MessageQueue: android.os.Message next()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1700(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.app.ContextImpl: java.lang.String[] databaseList()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int getState(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandConfig: int hashCode()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> (SMS_MMS)
<android.graphics.Rect: int width()> (SMS_MMS)
<android.view.autofill.AutofillId: int getSessionId()> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)> (SMS_MMS)
<android.security.net.config.Pin: int hashCode()> (SMS_MMS)
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)> (SMS_MMS)
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTimeLocked(long,int)> (SMS_MMS)
<android.content.pm.LauncherApps$PinItemRequest: int describeContents()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getVoiceOperatorNumeric()> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.BoringLayout: int getLineDescent(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)> (SMS_MMS)
<android.media.AudioManager: int getFocusRampTimeMs(int,android.media.AudioAttributes)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getOverlayPriority()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSharedSystemSharedLibraryPackageName()> (SMS_MMS)
<android.net.TrafficStats: long getTxPackets(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getActivePhoneTypeForSlot(int)> (SMS_MMS)
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.telephony.SignalStrength: int getEvdoAsuLevel()> (SMS_MMS)
<android.widget.TextView: int getLeftPaddingOffset()> (SMS_MMS)
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference getComponentType()> (SMS_MMS)
<android.content.pm.dex.ArtManager: java.lang.String getCurrentProfilePath(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.os.DropBoxManager$Entry: int getFlags()> (SMS_MMS)
<android.app.INotificationManager$Default: android.service.notification.ZenModeConfig getZenModeConfig()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int[] getSubId(int)> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> (SMS_MMS)
<android.text.StaticLayout: int unpackStartHyphenEdit(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig$Builder: android.hardware.radio.RadioManager$FmBandConfig build()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataEnabled(int)> (SMS_MMS)
<com.google.android.mms.ContentType: java.util.ArrayList getVideoTypes()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.Object getTag()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getManufacturerCode(int)> (SMS_MMS)
<android.media.AudioRoutesInfo: int describeContents()> (SMS_MMS)
<android.net.NetworkWatchlistManager: byte[] getWatchlistConfigHash()> (SMS_MMS)
<android.app.timezone.ICallback$Stub: android.app.timezone.ICallback getDefaultImpl()> (SMS_MMS)
<android.os.IInstalld$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getTvInputList()> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: java.util.List getAvailableMandatoryStreamCombinations()> (SMS_MMS)
<android.media.AudioGain: int rampDurationMinMs()> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IAudioService$Default: int getFocusRampTimeMs(int,android.media.AudioAttributes)> (SMS_MMS)
<android.graphics.ImageDecoder: android.util.Size getSampledSize(int)> (SMS_MMS)
<android.app.role.RoleManager: android.content.Intent createRequestRoleIntent(java.lang.String)> (SMS_MMS)
<android.graphics.RenderNode: float getTranslationY()> (SMS_MMS)
<android.security.net.config.ManifestConfigSource$DefaultConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getNextMinDailyDeadline()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Insets: int hashCode()> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataConnectivityPossible(int)> (SMS_MMS)
<android.view.SurfaceView$2: android.graphics.Rect getSurfaceFrame()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfigParser: java.util.ArrayList getConfigurations(com.android.internal.content.om.OverlayConfigParser$OverlayPartition,com.android.internal.content.om.OverlayScanner)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.StorageManager: java.lang.String getPrimaryStorageUuid()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getFlags()> (SMS_MMS)
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: int getShortcutIconResId(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getRunningExternalApplications()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isNetworkRoaming()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub: com.android.internal.compat.IOverrideValidator getDefaultImpl()> (SMS_MMS)
<android.app.trust.ITrustListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioTrack: int getPlayState()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileContactsSearchDisabledForUser(int)> (SMS_MMS)
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> (SMS_MMS)
<android.app.KeyguardManager: boolean getPrivateNotificationsAllowed()> (SMS_MMS)
<android.media.MediaRouter$RouteGroup: android.media.MediaRouter$RouteInfo getRouteAt(int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getDeviceProtocol()> (SMS_MMS)
<android.media.MediaFormat: java.util.Set getKeys()> (SMS_MMS)
<android.app.ActivityOptions: int getResultCode()> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int access$1000(android.hardware.camera2.impl.CameraDeviceImpl)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getNetworkSelectionMode(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.Map getEmergencyNumberList(int)> (SMS_MMS)
<android.view.View$13: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: double getTotalPower()> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getProfileWithMinimumFailedPasswordsForWipe(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.UserManager: java.lang.String getUserName()> (SMS_MMS)
<android.text.DynamicLayout: android.util.ArraySet getBlocksAlwaysNeedToBeRedrawn()> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub: android.net.lowpan.ILowpanManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)> (SMS_MMS)
<android.view.View: int getWindowVisibility()> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvInputManager: boolean isSingleSessionActive()> (SMS_MMS)
<android.telephony.gsm.GsmCellLocation: int getPsc()> (SMS_MMS)
<android.widget.AbsListView: int reconcileSelectedPosition()> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifierMetadata: int getUserId()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: int access$500(android.widget.OverScroller$SplineOverScroller)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: int getSubsequeceId()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.Bundle getAppWidgetOptions(java.lang.String,int)> (SMS_MMS)
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()> (SMS_MMS)
<android.widget.Toast: android.view.View getView()> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaRouterClientState$RouteInfo: int describeContents()> (SMS_MMS)
<android.net.TrafficStats: long getLoopbackTxPackets()> (SMS_MMS)
<android.media.VolumeProvider: java.lang.String getVolumeControlId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getGlobalPrivateDnsMode(android.content.ComponentName)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputSizes(java.lang.Class)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int encryptStorage(int,java.lang.String)> (SMS_MMS)
<android.app.Fragment: android.app.FragmentManager getFragmentManager()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getEncodedFragment()> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma copy()> (SMS_MMS)
<android.view.DisplayInfo: int getNaturalHeight()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuFreqTimes(int)> (SMS_MMS)
<android.os.health.HealthStats: int getTimerKeyCount()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Phone: int getTypeLabelResource(int)> (SMS_MMS)
<android.content.res.Resources: android.graphics.drawable.DrawableInflater getDrawableInflater()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: android.graphics.drawable.Icon getRawIcon()> (SMS_MMS)
<android.media.AudioSystem: java.util.ArrayList getDevicesForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isCameraSoundForced()> (SMS_MMS)
<android.media.MediaCas: android.os.IHwBinder getBinder()> (SMS_MMS)
<android.app.usage.UsageStats: long getLastTimeForegroundServiceUsed()> (SMS_MMS)
<android.app.NotificationChannel: int getImportance()> (SMS_MMS)
<android.os.Bundle: char getChar(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int checkMobileProvisioning(int)> (SMS_MMS)
<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)> (SMS_MMS)
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int,boolean)> (SMS_MMS)
<android.app.slice.SliceItem: android.os.Bundle getBundle()> (SMS_MMS)
<android.webkit.WebView: java.lang.String getTitle()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.lang.String getNotificationDelegate(java.lang.String)> (SMS_MMS)
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.telephony.CellIdentityLte: int getPci()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstantApps(int)> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOpNoThrow(int,java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getSerial()> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentityTdscdma: int hashCode()> (SMS_MMS)
<android.app.Service: android.app.Application getApplication()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCallState()> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ProgressBar: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait()> (SMS_MMS)
<android.net.TrafficStats: long getMobileTxPackets()> (SMS_MMS)
<android.hardware.SystemSensorManager: int access$500(android.hardware.SystemSensorManager)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getBackgroundRejectCount(int)> (SMS_MMS)
<android.content.Intent: short getShortExtra(java.lang.String,short)> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: android.graphics.drawable.Drawable getCurrent()> (SMS_MMS)
<android.app.Notification: boolean getAllowSystemGeneratedContextualActions()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiTvClient getTvClient()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)> (SMS_MMS)
<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isModemEnabledForSlot(int)> (SMS_MMS)
<android.view.InputMonitor: android.view.InputChannel getInputChannel()> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaFormat getDefaultFormat()> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter(int)> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub: android.app.blob.IBlobCommitCallback getDefaultImpl()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForLegacyStreamType(int)> (SMS_MMS)
<android.location.LocationTime: long getTime()> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.animation.Transformation: android.graphics.Rect getClipRect()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getDefaultDialerPackage()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserBadgeDarkColorResId(int)> (SMS_MMS)
<android.permission.IPermissionController$Stub: android.permission.IPermissionController asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsManager: java.lang.String createAppSpecificSmsToken(android.app.PendingIntent)> (SMS_MMS)
<android.app.Instrumentation: boolean isProfiling()> (SMS_MMS)
<android.app.SystemServiceRegistry$StaticApplicationContextServiceFetcher: java.lang.Object getService(android.app.ContextImpl)> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isRoleVisible$6(java.lang.String,android.app.role.IRoleController)> (SMS_MMS)
<android.content.res.Resources: android.content.res.Configuration[] getSizeConfigurations()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: android.os.Bundle getBundleForUnreadConversation()> (SMS_MMS)
<android.media.IMediaRouterService$Default: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)> (SMS_MMS)
<android.view.accessibility.CaptioningManager: java.lang.String getRawLocale()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getAppPredictionServicePackageName()> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo$1: android.telephony.DataConnectionRealTimeInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getUserLabel()> (SMS_MMS)
<android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback getDefaultImpl()> (SMS_MMS)
<android.os.BatteryStats$LevelStepTracker: long computeTimePerLevel()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: boolean isGrayscaleIcon(android.graphics.Bitmap)> (SMS_MMS)
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub: android.app.IActivityTaskManager getDefaultImpl()> (SMS_MMS)
<android.widget.ActionMenuView: android.view.Menu getMenu()> (SMS_MMS)
<android.app.assist.AssistStructure: int getTaskId()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraLooper: int waitForOpen(int)> (SMS_MMS)
<android.content.LoggingContentInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.app.backup.IRestoreSession$Default: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.app.usage.ExternalStorageStats: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: android.os.Bundle getCarrierConfigValuesForSubscriber(int)> (SMS_MMS)
<android.net.ITestNetworkManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: android.os.Handler$Callback getCallback()> (SMS_MMS)
<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean,boolean)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)> (SMS_MMS)
<android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getTypeAllocationCode(int)> (SMS_MMS)
<android.widget.AbsSpinner: int getChildHeight(android.view.View)> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: int addToDisplayAsUser(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getAllOptionFlags()> (SMS_MMS)
<android.os.IncidentManager$IncidentReport: long getTimestamp()> (SMS_MMS)
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)> (SMS_MMS)
<android.util.SparseArray: java.lang.Object get(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: byte[] getRestrictUpdateHash()> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryEventStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.app.timezone.DistroRulesVersion: int hashCode()> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo: android.telephony.LteVopsSupportInfo getLteVopsSupportInfo()> (SMS_MMS)
<android.view.ViewStub: int getInflatedId()> (SMS_MMS)
<android.os.PowerManager: int getMaximumScreenBrightnessForVrSetting()> (SMS_MMS)
<android.app.timezone.RulesManager: android.app.timezone.RulesState getRulesState()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveDataSubscriptionId()> (SMS_MMS)
<com.android.internal.midi.MidiDispatcher: int getReceiverCount()> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$sQClc4rjc9ydh0nXpY79gr33av4: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: java.lang.String getName()> (SMS_MMS)
<android.widget.FastScroller$4: java.lang.Integer get(android.view.View)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)> (SMS_MMS)
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: long getNativePtr()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.VerifiedInputEvent: int getDisplayId()> (SMS_MMS)
<android.util.RecurrenceRule$RecurringIterator: android.util.Range next()> (SMS_MMS)
<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassificationSession()> (SMS_MMS)
<com.android.internal.widget.VerifyCredentialResponse: int getTimeout()> (SMS_MMS)
<android.service.notification.NotificationRankingUpdate: android.service.notification.NotificationListenerService$RankingMap getRankingMap()> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getId()> (SMS_MMS)
<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int[] getDimensions()> (SMS_MMS)
<android.location.ILocationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants valueOf(java.lang.String)> (SMS_MMS)
<android.content.res.ApkAssets: java.lang.String getAssetPath()> (SMS_MMS)
<android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)> (SMS_MMS)
<com.android.internal.view.menu.MenuPopup: int getId()> (SMS_MMS)
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: byte[] getEncryptedKeyMaterial()> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.app.Notification$InboxStyle: java.util.ArrayList getLines()> (SMS_MMS)
<android.app.KeyguardManager: boolean isKeyguardSecure()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Rect getRect()> (SMS_MMS)
<android.graphics.Paint: float getStrokeMiter()> (SMS_MMS)
<android.net.INetworkStatsService$Default: java.lang.String[] getMobileIfaces()> (SMS_MMS)
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.AutoGrowArray$ByteArray: byte[] getRawArray()> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaCodec$CryptoInfo$Pattern: int getSkipBlocks()> (SMS_MMS)
<android.telecom.Logging.EventManager$EventRecord: java.util.List getEvents()> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale)> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.trust.ITrustListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.graphics.NinePatch: android.graphics.Paint getPaint()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getLteOnCdmaMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.AudioTrack: int write(byte[],int,int,int)> (SMS_MMS)
<android.hardware.camera2.CaptureResult: long getFrameNumber()> (SMS_MMS)
<android.content.res.Resources: java.lang.String getLastResourceResolution()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: android.os.Bundle getProprietaryCallExtras()> (SMS_MMS)
<android.telephony.SmsCbLocation: int getLac()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: android.os.Bundle getCallExtras()> (SMS_MMS)
<android.renderscript.RenderScript: int nFileA3DGetNumIndexEntries(long)> (SMS_MMS)
<android.hardware.location.ContextHubMessage: int getVersion()> (SMS_MMS)
<android.text.Layout: int getIndentAdjust(int,android.text.Layout$Alignment)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getStorageEncryptionStatus(java.lang.String,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getOrganizationName(android.content.ComponentName)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: long getCallDurationMillis()> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int checkPackage(int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean enableModemForSlot(int,boolean)> (SMS_MMS)
<android.net.LocalSocket: java.io.OutputStream getOutputStream()> (SMS_MMS)
<android.service.notification.ZenModeConfig: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getMaximumPasswordLength(int)> (SMS_MMS)
<android.app.ActivityTaskManager: int getMaxRecentTasksStatic()> (SMS_MMS)
<android.view.View: float getTranslationZ()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()> (SMS_MMS)
<android.os.Debug: int getGlobalExternalAllocSize()> (SMS_MMS)
<android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.LocationRequest: int getNumUpdates()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.lang.String getPassword()> (SMS_MMS)
<android.app.WindowContext: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForPackage(long,long,java.lang.String)> (SMS_MMS)
<android.util.Singleton: java.lang.Object get()> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.permission.PermissionManager: java.util.List getSplitPermissions()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getScreenDozeTime(long,int)> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.media.AudioFocusInfo: int getClientUid()> (SMS_MMS)
<android.filterfw.core.NativeBuffer: int count()> (SMS_MMS)
<android.widget.CursorAdapter: long getItemId(int)> (SMS_MMS)
<android.net.ITestNetworkManager$Stub$Proxy: android.net.TestNetworkInterface createTunInterface(android.net.LinkAddress[])> (SMS_MMS)
<android.media.SubtitleTrack: int getTrackType()> (SMS_MMS)
<android.os.UserManager: java.lang.String getUserAccount(int)> (SMS_MMS)
<android.renderscript.Matrix3f: float[] getArray()> (SMS_MMS)
<android.hardware.location.NanoAppFilter: int describeContents()> (SMS_MMS)
<android.view.KeyEvent: int getAction()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.inline.InlinePresentationSpec: int describeContents()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int onUserAdded(int,int)> (SMS_MMS)
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: android.view.SurfaceControl$Transaction getBoundsChangeTransaction()> (SMS_MMS)
<android.net.NetworkStats: long getTotalBytes()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: int[] getContextHubHandles()> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: java.lang.CharSequence getSynonymAt(int)> (SMS_MMS)
<android.text.StaticLayout: int packHyphenEdit(int,int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int getProtectionLevel()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getActivities()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getOpportunisticSubscriptions(java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: int getDigestPrefix()> (SMS_MMS)
<android.hardware.camera2.params.Face: int getScore()> (SMS_MMS)
<android.content.IntentFilter: int countMimeGroups()> (SMS_MMS)
<android.util.KeyValueListParser$LongValue: long getValue()> (SMS_MMS)
<android.view.View: int getMinimumWidth()> (SMS_MMS)
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)> (SMS_MMS)
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoListForTransportType(int)> (SMS_MMS)
<android.telephony.euicc.EuiccInfo: java.lang.String getOsVersion()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityButtonController getAccessibilityButtonController()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache()> (SMS_MMS)
<android.view.textclassifier.TextLinks: java.util.Collection getLinks()> (SMS_MMS)
<android.content.pm.LauncherApps$PinItemRequest: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo(android.content.Context)> (SMS_MMS)
<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(android.hardware.camera2.CaptureResult$Key)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getSimCallManager(int)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: int[] getAppWidgetIds(android.content.ComponentName)> (SMS_MMS)
<android.content.res.Resources: android.view.DisplayAdjustments getDisplayAdjustments()> (SMS_MMS)
<android.graphics.RecordingCanvas: int getMaximumBitmapHeight()> (SMS_MMS)
<android.media.IPlayer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getAvailableSubscriptionInfoList()> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback getDefaultImpl()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: int getUidPolicy(int)> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IServiceManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: java.util.List getSessions(android.content.ComponentName,int)> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.Slide$6: float getGoneY(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])> (SMS_MMS)
<android.renderscript.Matrix2f: float get(int,int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getWindowingMode(int)> (SMS_MMS)
<com.android.internal.policy.DecorView: int getColorViewLeftInset(int,int)> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOp(int,java.lang.String)> (SMS_MMS)
<android.app.job.JobInfo: long getIntervalMillis()> (SMS_MMS)
<android.app.Instrumentation$ActivityMonitor: android.app.Activity getLastActivity()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getLocalFeaturesPrivate()> (SMS_MMS)
<com.android.internal.policy.DecorContext: boolean isUiContext()> (SMS_MMS)
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)> (SMS_MMS)
<android.media.MediaRoute2Info: int getVolumeHandling()> (SMS_MMS)
<android.content.pm.ApplicationInfo: int getHiddenApiEnforcementPolicy()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: com.android.internal.view.IInlineSuggestionsResponseCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.CharSequence getBackgroundPermissionOptionLabel()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.blob.LeaseInfo: int getDescriptionResId()> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)> (SMS_MMS)
<android.app.WallpaperManager: boolean isWallpaperSupported()> (SMS_MMS)
<android.app.UiAutomation: int getFlags()> (SMS_MMS)
<android.app.SystemServiceRegistry$CachedServiceFetcher: java.lang.Object getService(android.app.ContextImpl)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: java.lang.String getConnectionService()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.slice.SliceItem: int getInt()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Path getPath()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getBlockedRatings(int)> (SMS_MMS)
<android.telephony.PreciseCallState: int getForegroundCallState()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable$BitmapState: int getChangingConfigurations()> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getSystemWindowInsets()> (SMS_MMS)
<android.app.IWindowToken$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.AssetManager createAssetManager(android.content.res.ResourcesKey)> (SMS_MMS)
<android.widget.PopupWindow: android.transition.Transition getExitTransition()> (SMS_MMS)
<android.telephony.CellInfoCdma$1: void <init>()> (SMS_MMS)
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyRcsMessageServiceRegisterer()> (SMS_MMS)
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable,android.os.UserHandle)> (SMS_MMS)
<android.app.ApplicationLoaders: java.lang.ClassLoader getCachedNonBootclasspathSystemLib(java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)> (SMS_MMS)
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getNavigationBarColor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getDeviceOwnerUserId()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getPermission()> (SMS_MMS)
<android.hardware.SensorManager: boolean isDynamicSensorDiscoverySupported()> (SMS_MMS)
<com.android.internal.statusbar.RegisterStatusBarResult: int describeContents()> (SMS_MMS)
<android.hardware.radio.ProgramList$Filter: java.util.Set getIdentifiers()> (SMS_MMS)
<android.view.ViewRootImpl$UnhandledKeyManager: boolean dispatch(android.view.View,android.view.KeyEvent)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getDisabledMessageResName()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub: android.app.IUiAutomationConnection getDefaultImpl()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.graphics.Bitmap: int getScaledHeight(int)> (SMS_MMS)
<android.app.NotificationChannel: int getUserLockedFields()> (SMS_MMS)
<com.android.internal.net.VpnProfile: byte[] encode()> (SMS_MMS)
<android.app.INotificationManager$Default: int getDeletedChannelCount(java.lang.String,int)> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.UiccCardInfo$1: void <init>()> (SMS_MMS)
<android.app.VoiceInteractor$Prompt: java.lang.CharSequence getVisualPrompt()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)> (SMS_MMS)
<android.telephony.euicc.EuiccInfo: int describeContents()> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: int hashCode()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.view.DisplayInfo getDisplayInfo(int)> (SMS_MMS)
<android.hardware.camera2.CameraMetadata: long getNativeMetadataPtr()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int hashCode()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isReplyPathPresent()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: java.lang.CharSequence getDataManagementLabelForUser(int,java.lang.String)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int describeContents()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.autofill.AutofillValue: long getDateValue()> (SMS_MMS)
<android.accounts.IAccountManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: int getSignalStrength()> (SMS_MMS)
<android.os.Environment: java.io.File getOdmDirectory()> (SMS_MMS)
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int[] getDigestPrefixSecure()> (SMS_MMS)
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.app.LoadedApk)> (SMS_MMS)
<android.app.ActivityManager: int checkUidPermission(java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwner()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: float getAdjustBrightnessFactor()> (SMS_MMS)
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getSimSlotIndex()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: java.lang.String getCallingPackageName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.telephony.TelephonyManager: int getNetworkSelectionMode()> (SMS_MMS)
<android.hardware.Camera$Parameters: int getPreviewFormat()> (SMS_MMS)
<android.widget.GridView: int getRequestedColumnWidth()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: int describeContents()> (SMS_MMS)
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppResolverComponent()> (SMS_MMS)
<android.net.LocalSocketAddress: java.lang.String getName()> (SMS_MMS)
<android.media.MediaTimestamp: long getAnchorSytemNanoTime()> (SMS_MMS)
<android.media.tv.TvInputManager$Session: android.media.tv.TvTrackInfo getVideoTrackToNotify()> (SMS_MMS)
<android.app.INotificationManager$Default: int getAppsBypassingDndCount(int)> (SMS_MMS)
<android.debug.IAdbManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.Paint: int getColor()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.PeriodicSync: int describeContents()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getSmsReceiveCapableForPhone(int,boolean)> (SMS_MMS)
<android.view.InsetsController$InternalAnimationControlListener$1: android.animation.AnimationHandler initialValue()> (SMS_MMS)
<android.widget.ProgressBar$1: java.lang.Float get(android.widget.ProgressBar)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: boolean isConditionallyBarred()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.RadioMetadata getMetadata()> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getNightDisplayAutoMode()> (SMS_MMS)
<android.telephony.SubscriptionManager: int[] getSubscriptionIds(int)> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: int getLastAudibleStreamVolume(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: boolean canDisablePhysicalSubscription()> (SMS_MMS)
<android.view.accessibility.CaptioningManager: int getRawUserStyle()> (SMS_MMS)
<android.view.View: int getAccessibilitySelectionEnd()> (SMS_MMS)
<android.widget.ExpandableListView: int getPackedPositionChild(long)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.feature.ImsFeature$Capabilities: int hashCode()> (SMS_MMS)
<android.print.PrintAttributes$Margins: int getLeftMils()> (SMS_MMS)
<android.database.AbstractCursor: int getPosition()> (SMS_MMS)
<android.database.CursorWrapper: short getShort(int)> (SMS_MMS)
<android.telephony.CellInfo$1: void <init>()> (SMS_MMS)
<android.os.storage.VolumeInfo$1: int compare(android.os.storage.VolumeInfo,android.os.storage.VolumeInfo)> (SMS_MMS)
<android.widget.TextView: int getAutoSizeStepGranularity()> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: java.lang.String getVolumeControlId()> (SMS_MMS)
<android.net.LinkProperties: int describeContents()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig getDefaultInstance()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureContext getContentCaptureContext()> (SMS_MMS)
<android.telephony.CallAttributes: int getNetworkType()> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int encode(int,int)> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder authority(android.net.Uri$Part)> (SMS_MMS)
<android.media.IPlayer$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.Signature,java.lang.String)> (SMS_MMS)
<android.content.BroadcastReceiver: int getSendingUserId()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2700(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.content.pm.ModuleInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()> (SMS_MMS)
<android.media.IAudioService$Default: int getStreamMinVolume(int)> (SMS_MMS)
<android.view.View: int getAccessibilityWindowId()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int getMultipathPreference(android.net.Network)> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String,int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.View getStatusBarBackgroundView()> (SMS_MMS)
<android.media.AudioManager: java.util.Map getSurroundFormats()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> (SMS_MMS)
<android.telephony.UiccAccessRule: int describeContents()> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)> (SMS_MMS)
<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)> (SMS_MMS)
<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.util.Date getCreationDate(java.lang.String)> (SMS_MMS)
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getInputType()> (SMS_MMS)
<android.app.PendingIntent: boolean isForegroundService()> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: int getLastAudibleStreamVolume(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: int getParameter(int,int)> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus$Callback convertKey(java.lang.Object)> (SMS_MMS)
<android.os.WorkSource: int getAttributionUid()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int getClientPortId()> (SMS_MMS)
<android.util.LauncherIcons$ShadowDrawable$MyConstantState: int getChangingConfigurations()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int,android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector$Identifier getPhysicallyTunedTo()> (SMS_MMS)
<android.media.AudioManager: int getStreamMinVolume(int)> (SMS_MMS)
<android.widget.ListView: int getFooterViewsCount()> (SMS_MMS)
<android.os.DeviceIdleManager: java.lang.String[] getSystemPowerWhitelistExceptIdle()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaCodec$QueueRequest getQueueRequest(int)> (SMS_MMS)
<android.app.VrManager: boolean isPersistentVrModeEnabled()> (SMS_MMS)
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()> (SMS_MMS)
<android.net.UidRange: int getEndUser()> (SMS_MMS)
<android.text.StaticLayout: int getBottomPadding()> (SMS_MMS)
<android.net.ConnectivityThread$Singleton: android.net.ConnectivityThread access$100()> (SMS_MMS)
<android.app.job.JobInfo: int describeContents()> (SMS_MMS)
<android.text.Layout: int getOffsetToLeftOf(int)> (SMS_MMS)
<android.os.IVoldListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.DecorContext: android.content.ContentCaptureOptions getContentCaptureOptions()> (SMS_MMS)
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier[] getAllIds(int)> (SMS_MMS)
<android.os.UserManager: int getUserBadgeDarkColor(int)> (SMS_MMS)
<android.media.midi.MidiManager: android.media.midi.IMidiManager access$100(android.media.midi.MidiManager)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List retrieveSecurityLogs(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHistory: android.os.Parcel getNextParcel(android.os.BatteryStats$HistoryItem)> (SMS_MMS)
<android.view.animation.CycleInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.app.ActivityManager: boolean isInLockTaskMode()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub$Proxy: android.window.ITaskOrganizerController getTaskOrganizerController()> (SMS_MMS)
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.app.ActivityManager: java.util.List getRunningServices(int)> (SMS_MMS)
<android.telephony.TelephonyHistogram: int[] getBucketCounters()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)> (SMS_MMS)
<android.location.GpsStatus: int getMaxSatellites()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getRequiresSmallestWidthDp()> (SMS_MMS)
<android.util.Size: int getWidth()> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure: int access$102(android.app.assist.AssistStructure,int)> (SMS_MMS)
<android.inputmethodservice.InlineSuggestionSession: boolean isCallbackInvoked()> (SMS_MMS)
<android.webkit.WebResourceResponse: int getStatusCode()> (SMS_MMS)
<android.util.EventLog$Event: java.lang.Exception getLastError()> (SMS_MMS)
<android.webkit.WebView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.app.backup.IRestoreSession$Default: int restorePackages(long,android.app.backup.IRestoreObserver,java.lang.String[],android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.hardware.camera2.params.VendorTagDescriptorCache: int describeContents()> (SMS_MMS)
<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperInfo getWallpaperInfo(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.slice.Slice: java.util.List getItems()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer getIPlayer()> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub: android.view.IWindowSessionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.widget.TextView: int getImeOptions()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Default: java.util.List queryBlobsForUser(int)> (SMS_MMS)
<android.hardware.camera2.params.BlackLevelPattern: int getOffsetForIndex(int,int)> (SMS_MMS)
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: float getLineWidth(int)> (SMS_MMS)
<android.text.Layout: float getLineLeft(int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: float getDefaultTabStop()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getReqFeatures()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicyConfig: int describeContents()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperManager$ColorManagementProxy getColorManagementProxy()> (SMS_MMS)
<android.view.ViewConfiguration: long getZoomControlsTimeout()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.location.GpsMeasurement: double getCarrierPhaseUncertainty()> (SMS_MMS)
<android.os.BaseBundle: float getFloat(java.lang.String)> (SMS_MMS)
<android.app.IAlarmListener$Stub: android.app.IAlarmListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getBluetoothScanTime(long,int)> (SMS_MMS)
<android.media.tv.DvbDeviceInfo: int getDeviceId()> (SMS_MMS)
<android.os.BaseBundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int findIndexByLayerId(int)> (SMS_MMS)
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: boolean isAccessibilityVolumeStreamActive()> (SMS_MMS)
<android.graphics.drawable.RippleForeground$3: java.lang.Float get(android.graphics.drawable.RippleForeground)> (SMS_MMS)
<android.os.BaseBundle: long getLong(java.lang.String,long)> (SMS_MMS)
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)> (SMS_MMS)
<android.media.tv.TvTrackInfo: byte getVideoActiveFormatDescription()> (SMS_MMS)
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)> (SMS_MMS)
<android.app.timedetector.TelephonyTimeSuggestion: int getSlotIndex()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: int getPolicyType()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$13: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)> (SMS_MMS)
<android.os.UserManager: android.os.PersistableBundle getSeedAccountOptions()> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.ims.ImsManager lambda$registerServiceWrappers$5(android.content.Context)> (SMS_MMS)
<android.telephony.data.ApnSetting: android.net.Uri getMmsc()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int getDetectionMethod()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: float getScaledTextSize()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.FingerprintGestureController getFingerprintGestureController()> (SMS_MMS)
<android.net.ConnectivityManager: int untether(java.lang.String)> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)> (SMS_MMS)
<android.os.IDeviceIdleController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager: android.hardware.radio.RadioTuner openTuner(int,android.hardware.radio.RadioManager$BandConfig,boolean,android.hardware.radio.RadioTuner$Callback,android.os.Handler)> (SMS_MMS)
<android.media.AudioGainConfig: int rampDurationMs()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$SoftKeyboardController: int getShowMode()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo getDefaultImpl()> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo: int describeContents()> (SMS_MMS)
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevicesStatic(int)> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getIsimPcscf()> (SMS_MMS)
<android.service.vr.IVrManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()> (SMS_MMS)
<android.telephony.CdmaEriInformation$1: void <init>()> (SMS_MMS)
<android.os.Parcel: java.io.FileDescriptor[] createRawFileDescriptorArray()> (SMS_MMS)
<android.telephony.PhoneCapability: int hashCode()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getAllocateAggressive()> (SMS_MMS)
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: int getViewTypeCount()> (SMS_MMS)
<android.os.Debug: int getGlobalExternalFreedSize()> (SMS_MMS)
<android.os.IPowerManager$Stub: android.os.IPowerManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneDataConnectionTimer(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMmsProxyPort()> (SMS_MMS)
<android.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()> (SMS_MMS)
<android.content.ContextWrapper: boolean isCredentialProtectedStorage()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: boolean isValid()> (SMS_MMS)
<android.telephony.CellInfo: int describeContents()> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.animation.ValueAnimator: float getDurationScale()> (SMS_MMS)
<android.app.AppOpsManager: android.util.LongSparseArray access$5400(android.util.LongSparseLongArray,android.util.LongSparseArray)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getGroupId()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getMulticastWakelockStats()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getManagedProfileMaximumTimeOff(android.content.ComponentName)> (SMS_MMS)
<android.view.MotionEvent$PointerCoords: float getAxisValue(int)> (SMS_MMS)
<android.net.IEthernetManager$Stub: android.net.IEthernetManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.WindowInsetsAnimation: float getInterpolatedFraction()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getWidth()> (SMS_MMS)
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()> (SMS_MMS)
<com.android.internal.database.SortCursor: int getType(int)> (SMS_MMS)
<android.widget.Editor$HandleView: float getIdealVerticalOffset()> (SMS_MMS)
<android.app.contentsuggestions.ContentClassification: android.os.Bundle getExtras()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastBackgroundProxyInfo(int)> (SMS_MMS)
<android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$TrackedViews access$1000(android.view.autofill.AutofillManager)> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int stopRecognitionForService(android.os.ParcelUuid)> (SMS_MMS)
<android.app.Activity: android.view.WindowManager getWindowManager()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetRight(int)> (SMS_MMS)
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)> (SMS_MMS)
<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Integer)> (SMS_MMS)
<android.os.IDumpstateListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()> (SMS_MMS)
<android.os.Parcel: int readCallingWorkSourceUid()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4100()> (SMS_MMS)
<android.security.IFileIntegrityService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$3: com.android.internal.os.BatteryStatsImpl$DualTimer instantiateObject()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getOrganizationName(android.content.ComponentName)> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.widget._$$Lambda$aOGBsMC_jnvTDjezYLRtz35nAPI: java.lang.Object get()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: android.net.MacAddress getBssid()> (SMS_MMS)
<android.hardware.display.VirtualDisplay: android.view.Surface getSurface()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getClassName()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int getDataBlockSize()> (SMS_MMS)
<android.content.pm.InstallSourceInfo: android.content.pm.SigningInfo getInitiatingPackageSigningInfo()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int noteProxyOperation(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int hashCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)> (SMS_MMS)
<android.renderscript.Long2: long length()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Default: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo$1: void <init>()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()> (SMS_MMS)
<android.hardware.biometrics.BiometricSourceType: int describeContents()> (SMS_MMS)
<android.location.GnssMeasurement: double getSnrInDb()> (SMS_MMS)
<android.app.AsyncNotedAppOp: java.lang.String getOp()> (SMS_MMS)
<android.media.AudioManager: boolean isBluetoothScoOn()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: int[] getInputDeviceIds()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: int getType()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: float getShadowDy()> (SMS_MMS)
<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int)> (SMS_MMS)
<android.telephony.euicc.EuiccManager: int getOtaStatus()> (SMS_MMS)
<android.os.IPowerManager$Default: android.os.PowerSaveState getPowerSaveState(int)> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy$InstallationOption: int getType()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: android.app.AppOpsManager$HistoricalPackageOps getPackageOpsAt(int)> (SMS_MMS)
<android.content.res.TypedArray: int getThemeAttributeId(int,int)> (SMS_MMS)
<android.net.Ikev2VpnProfile: byte[] getPresharedKey()> (SMS_MMS)
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isTetheringApnRequired(int)> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getTimeSinceBootMillis()> (SMS_MMS)
<android.content.ContentValues: java.lang.Object get(java.lang.String)> (SMS_MMS)
<android.media.session.MediaController: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.IMediaRouterService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultMmsApplication(android.content.Context,boolean)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperator()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int[] getActiveSubIdList(boolean)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$4: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.view.View$MeasureSpec: int adjust(int,int)> (SMS_MMS)
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: android.net.Uri getDataUri()> (SMS_MMS)
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)> (SMS_MMS)
<android.app.Activity: android.transition.Scene getContentScene()> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.os.WorkSource: int getUid(int)> (SMS_MMS)
<android.app.admin.FactoryResetProtectionPolicy: java.util.List getFactoryResetProtectionAccounts()> (SMS_MMS)
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()> (SMS_MMS)
<android.view.ContextThemeWrapper: int getThemeResId()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager$CapabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()> (SMS_MMS)
<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()> (SMS_MMS)
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isApplicationOnUicc(int,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: int[] getContextHubHandles()> (SMS_MMS)
<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getScreenBrightnessTimer(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.CellInfoLte: android.telephony.CellInfoLte createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.widget.Editor$PositionListener: int getPositionY()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isAdvancedCallingSettingEnabled(int)> (SMS_MMS)
<android.media.session.ISessionController$Default: android.content.pm.ParceledListSlice getQueue()> (SMS_MMS)
<android.os.health.HealthStats: java.util.Map getStats(int)> (SMS_MMS)
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_0.CellInfo)> (SMS_MMS)
<android.media.IAudioService$Default: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$b_92_3ZijRrdEa9yLyFA5xu19OM: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)> (SMS_MMS)
<android.provider.FontRequest: java.lang.String getQuery()> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int describeContents()> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.telephony.euicc.EuiccRulesAuthTable: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVtSettingEnabled(int)> (SMS_MMS)
<android.text.method.BaseKeyListener: int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean)> (SMS_MMS)
<android.graphics.fonts.Font: java.io.File getFile()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()> (SMS_MMS)
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.SingleScanSettings: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)> (SMS_MMS)
<android.view.KeyCharacterMap: int get(int,int)> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.fingerprint.Fingerprint: int getGroupId()> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.JobInfo: long getInitialBackoffMillis()> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager getTrustManager()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()> (SMS_MMS)
<android.location.Address: java.lang.String getSubAdminArea()> (SMS_MMS)
<android.view.IGraphicsStats$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)> (SMS_MMS)
<android.widget.GridView: int computeVerticalScrollRange()> (SMS_MMS)
<android.hardware.radio.RadioTuner: java.util.Map getParameters(java.util.List)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHistoryTagPoolUid(int)> (SMS_MMS)
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.telephony.CallQuality$1: android.telephony.CallQuality createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> (SMS_MMS)
<android.view.InsetsController$InternalAnimationControlListener: long getDurationMs()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.webkit.WebView: android.content.pm.PackageInfo getCurrentWebViewPackage()> (SMS_MMS)
<android.app.AppOpsManager: int extractUidStateFromKey(long)> (SMS_MMS)
<android.util.KeyValueListParser: int getInt(java.lang.String,int)> (SMS_MMS)
<android.view.ViewGroup$1: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.app.Notification$Style: android.app.Notification build()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getRuntimePermissionsVersion(int)> (SMS_MMS)
<android.view.ViewRootImpl$ViewRootHandler: java.lang.String getMessageName(android.os.Message)> (SMS_MMS)
<android.widget.TextView: android.graphics.Typeface getTypeface()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int[] getSupportedSensors()> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.InputDevice$MotionRange: int getSource()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)> (SMS_MMS)
<android.app.WallpaperManager: boolean isSetWallpaperAllowed()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,java.lang.String)> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: int[] getDisableFlags(android.os.IBinder,int)> (SMS_MMS)
<android.security.keymaster.KeymasterArgument: int describeContents()> (SMS_MMS)
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> (SMS_MMS)
<android.graphics.ColorSpace: int getId()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub: android.hardware.iris.IIrisService asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.MotionEvent: float getOrientation()> (SMS_MMS)
<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()> (SMS_MMS)
<android.view.ViewConfiguration: int getDoubleTapTimeout()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()> (SMS_MMS)
<android.net.IpSecConfig: int getNattKeepaliveInterval()> (SMS_MMS)
<android.location.GpsMeasurement: long getReceivedGpsTowUncertaintyInNs()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerAppOnAnyUser(java.lang.String)> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)> (SMS_MMS)
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()> (SMS_MMS)
<android.telephony.CellIdentityCdma$1: void <init>()> (SMS_MMS)
<android.app.ActivityOptions: android.os.ResultReceiver getResultReceiver()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)> (SMS_MMS)
<android.renderscript.RenderScript: long nScriptCCreate(java.lang.String,java.lang.String,byte[],int)> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String access$200()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()> (SMS_MMS)
<android.util.ArrayMap$1: java.util.Map colGetMap()> (SMS_MMS)
<android.app.NotificationChannelGroup: int getUserLockedFields()> (SMS_MMS)
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)> (SMS_MMS)
<android.service.notification.IConditionProvider$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellInfoWcdma$1: void <init>()> (SMS_MMS)
<android.media.MediaCodecInfo$AudioCapabilities: int getMaxInputChannelCount()> (SMS_MMS)
<android.location.Location: double getLongitude()> (SMS_MMS)
<android.media.AudioTrack: android.media.AudioDeviceInfo getPreferredDevice()> (SMS_MMS)
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getOutputs(int)> (SMS_MMS)
<android.app.INotificationManager$Default: boolean getPrivateNotificationsAllowed()> (SMS_MMS)
<android.os.storage.StorageManager: int access$200(android.os.storage.StorageManager)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getNumBytesRx()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.metrics.LogMaker: java.lang.String getCounterName()> (SMS_MMS)
<android.graphics.ColorSpace: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getVoWiFiRoamingModeSetting(int)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: byte[] getContentType()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getSharedPreferencesPath(java.lang.String)> (SMS_MMS)
<android.os.IIncidentCompanion$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.filterfw.core.Filter: android.filterfw.core.Frame pullInput(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getBsic()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub: android.app.IUriGrantsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: java.util.List getEmergencyUrns()> (SMS_MMS)
<android.media.SubtitleData: long getDurationUs()> (SMS_MMS)
<android.telephony.CbGeoUtils$Polygon: java.util.List getVertices()> (SMS_MMS)
<android.os.IVoldMountCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.provider.DocumentsContract$Path: int describeContents()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.content.res.ColorStateList: int getChangingConfigurations()> (SMS_MMS)
<android.app.Activity: android.app.ActivityOptions getActivityOptions()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub: com.android.internal.policy.IShortcutService getDefaultImpl()> (SMS_MMS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: java.lang.String createStubVolume(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager: int opToDefaultMode(java.lang.String)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: int stopRecognition(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimSpecificCarrierId()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getActiveDataSubscriptionId()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRadioApWakeupCount(int)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: java.util.List GetClientInterfaces()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()> (SMS_MMS)
<android.app.role.IRoleManager$Default: java.util.List getHeldRolesFromController(java.lang.String)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String getDisplayName()> (SMS_MMS)
<android.net.IEthernetManager$Stub$Proxy: android.net.IpConfiguration getConfiguration(java.lang.String)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getNumBytesRx()> (SMS_MMS)
<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray getBandwidthEntries()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int)> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub$Proxy: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.ICallback)> (SMS_MMS)
<android.text.Layout$Directions: int getRunLength(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getStyleAttribute()> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.TelecomAnalytics dumpAnalytics()> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getBugreportWhitelistedPackages()> (SMS_MMS)
<android.app.AppOpsManager: int unsafeCheckOpRaw(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getResourceEntryName(java.lang.String)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: int getWindowIdForLeashToken(android.os.IBinder)> (SMS_MMS)
<android.view.autofill.Helper: java.lang.String getRedacted(java.lang.CharSequence)> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int describeContents()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getEncryptionPaddings()> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getInputMethodMode()> (SMS_MMS)
<android.metrics.LogMaker: int getSubtype()> (SMS_MMS)
<android.text.Layout: int getLineVisibleEnd(int)> (SMS_MMS)
<android.net.TrafficStats: long getLoopbackRxPackets()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProcess: int describeContents()> (SMS_MMS)
<android.debug.IAdbManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.animation.StateListAnimator: int getChangingConfigurations()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int getNativeSize()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioTrack: int getLatency()> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$countPermissionApps$17(java.util.List,int,android.permission.IPermissionController)> (SMS_MMS)
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getEsn()> (SMS_MMS)
<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource: int toByteArray(byte[],int)> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.Resources getResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getLevel()> (SMS_MMS)
<android.security.IKeyChainService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Binder: android.os.UserHandle getCallingUserHandle()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int stopRecognitionForService(android.os.ParcelUuid)> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: com.android.internal.inputmethod.IExtractedTextResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getNextMaxDailyDeadline()> (SMS_MMS)
<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.display.DisplayManager: boolean isMinimalPostProcessingRequested(int)> (SMS_MMS)
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)> (SMS_MMS)
<android.app.blob.LeaseInfo: int describeContents()> (SMS_MMS)
<android.app.IUiAutomationConnection$Default: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int removeSubInfo(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextClassification: java.lang.String getId()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String,int)> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.telephony.PreciseCallState: int getPreciseDisconnectCause()> (SMS_MMS)
<android.net.Uri: android.net.Uri getCanonicalUri()> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: int getImportance()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getLac()> (SMS_MMS)
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdEntry()> (SMS_MMS)
<android.security.net.config.PinSet: java.util.Set getPinAlgorithms()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: android.location.LocationTime getGnssTimeMillis()> (SMS_MMS)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: float getGainFactor(int,int,int)> (SMS_MMS)
<android.text.method.DialerKeyListener: int getInputType()> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: byte[] getTextString()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean enableModemForSlot(int,boolean)> (SMS_MMS)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getBaseline()> (SMS_MMS)
<android.widget.Scroller: float getCurrVelocity()> (SMS_MMS)
<com.android.internal.infra.RemoteStream: java.lang.Void lambda$sendBytes$1(byte[],java.io.OutputStream)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.AppFuseMount: int describeContents()> (SMS_MMS)
<android.view.autofill.AutofillValue: boolean getToggleValue()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.util.List getWhitelistedRuleProviders()> (SMS_MMS)
<android.app.NotificationManager: android.content.ComponentName getEffectsSuppressor()> (SMS_MMS)
<android.content.ContentProvider: android.app.AppOpsManager getAppOpsManager()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()> (SMS_MMS)
<android.renderscript.Sampler: float getAnisotropy()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isBluetoothA2dpOn()> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse: int describeContents()> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean isGroupDisabled()> (SMS_MMS)
<android.net.LinkAddress: int getNetworkPrefixLength()> (SMS_MMS)
<android.view.KeyCharacterMap: char getNumber(int)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.content.ComponentName getCurrentTransportComponentForUser(int)> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getEvdoAsuLevel()> (SMS_MMS)
<android.app.slice.SliceSpec: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivityForSubId(int)> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getCacheBytes(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: android.content.Context getApplicationContext()> (SMS_MMS)
<android.app.ContextImpl: android.content.res.Resources createWindowContextResources()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: int getPreferredSmsSubscription()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isIccLockEnabled()> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.hardware.fingerprint.IFingerprintServiceReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.Notification$Builder: android.app.Notification$Style getStyle()> (SMS_MMS)
<android.media.midi.MidiPortImpl: int getDataSize(byte[],int)> (SMS_MMS)
<android.net.IEthernetManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean isActivityStartAllowedOnDisplay(int,android.content.Intent,java.lang.String,int)> (SMS_MMS)
<android.content.ContentProvider$Transport: android.net.Uri canonicalize(java.lang.String,java.lang.String,android.net.Uri)> (SMS_MMS)
<android.telephony.CellInfoTdscdma$1: android.telephony.CellInfoTdscdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.location.GpsClock: int describeContents()> (SMS_MMS)
<android.os.IThermalStatusListener$Stub: android.os.IThermalStatusListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoFpsRanges()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int getRssi()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: int getAccessibilityViewId()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTextColor()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.Ikev2VpnProfile: int hashCode()> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub: com.android.internal.app.IAppOpsNotedCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getWifiMacAddress(android.content.ComponentName)> (SMS_MMS)
<android.telephony.CdmaEriInformation$1: android.telephony.CdmaEriInformation[] newArray(int)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaRouterClientState: int describeContents()> (SMS_MMS)
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getQueryActionMsg()> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String)> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getIconResource()> (SMS_MMS)
<android.text.StaticLayout: int getLineStart(int)> (SMS_MMS)
<android.telephony.ModemInfo$1: android.telephony.ModemInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getLightnessWeight()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getInstallLocation()> (SMS_MMS)
<android.os.Parcel: int[] createIntArray()> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()> (SMS_MMS)
<android.app.Application: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getSelectedNavigationIndex()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getRxPackets()> (SMS_MMS)
<android.os.Parcel: java.lang.String[] createString16Array()> (SMS_MMS)
<android.view.IWindowId$Stub: android.view.IWindowId asInterface(android.os.IBinder)> (SMS_MMS)
<android.os._$$Lambda$Binder$aNRcHb8WfLrWjcSlV42Wu5psFwU: java.lang.Object get()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$1: void <init>()> (SMS_MMS)
<com.android.internal.os.PowerProfile: int getNumCoresInCpuCluster(int)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidthsFor(int)> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerityRootHash(java.lang.String)> (SMS_MMS)
<android.content.IntentFilter: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimCardState()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.slice.ISliceManager$Default: byte[] getBackupPayload(int)> (SMS_MMS)
<android.widget.Spinner$DialogPopup: int getVerticalOffset()> (SMS_MMS)
<android.view.View: int getHorizontalScrollbarHeight()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int createInputStream(int,int,int)> (SMS_MMS)
<android.security.IKeyChainService$Default: int generateKeyPair(java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec)> (SMS_MMS)
<android.app.ContextImpl: int getUserId()> (SMS_MMS)
<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getApnTypeBitmask()> (SMS_MMS)
<android.database.AbstractCursor: java.lang.String getColumnName(int)> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String printFullSessionTree()> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])> (SMS_MMS)
<android.view.Window: long getTransitionBackgroundFadeDuration()> (SMS_MMS)
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String[] getOpStrs()> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo$ManufactureDate: java.lang.Integer getWeek()> (SMS_MMS)
<android.content.pm.IShortcutService$Default: int getMaxShortcutCountPerActivity(java.lang.String,int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuView getIconMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback)> (SMS_MMS)
<android.os.BaseBundle: char[] getCharArray(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$1: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock instantiateObject()> (SMS_MMS)
<android.media.MediaMetadataEditor: int[] getEditableKeys()> (SMS_MMS)
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)> (SMS_MMS)
<android.widget.TextView: float getShadowDx()> (SMS_MMS)
<android.text.style.LocaleSpan: android.os.LocaleList getLocales()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ClipData: int describeContents()> (SMS_MMS)
<android.widget.RemoteViews$SetEmptyView: int getActionTag()> (SMS_MMS)
<android.os.PooledStringReader: int getStringCount()> (SMS_MMS)
<android.renderscript.Byte4: byte length()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub$Proxy: android.content.pm.ParceledListSlice getAvailableRollbacks()> (SMS_MMS)
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: java.util.List getLocusIds()> (SMS_MMS)
<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()> (SMS_MMS)
<android.util.apk.ZipUtils: android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile)> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: android.content.Context getContext()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1000()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getEnergyConsumedMaMillis()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getBaseDisplayDensity(int)> (SMS_MMS)
<android.app.role.IRoleController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)> (SMS_MMS)
<android.telephony.SignalStrength: int getWcdmaRscp()> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.blob.BlobHandle: java.lang.CharSequence getLabel()> (SMS_MMS)
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: com.android.internal.telephony.IOnSubscriptionsChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getIccAuthentication(int,int,int,java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getConnectionId()> (SMS_MMS)
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()> (SMS_MMS)
<android.media.MediaCodecInfo: java.lang.String getCanonicalName()> (SMS_MMS)
<android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.os.IServiceCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IRingtonePlayer$Default: java.lang.String getTitle(android.net.Uri)> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()> (SMS_MMS)
<android.app.timezone.RulesManager: int requestUninstall(byte[],android.app.timezone.Callback)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int transact(android.os.Bundle)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: int allocateAppWidgetId(java.lang.String,int)> (SMS_MMS)
<android.telephony.CdmaEriInformation: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: com.android.internal.telephony.ISetOpportunisticDataCallback getDefaultImpl()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> (SMS_MMS)
<android.content.pm.UserInfo: boolean isGuest()> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: java.lang.String getTraceName()> (SMS_MMS)
<android.net.LocalSocketImpl: int access$200(android.net.LocalSocketImpl,java.io.FileDescriptor)> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getHeight()> (SMS_MMS)
<android.content.Context: android.content.ContentCaptureOptions getContentCaptureOptions()> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getRxTimeMillis()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation getAnimation()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.ConversationAction: android.app.RemoteAction getAction()> (SMS_MMS)
<com.android.internal.net.LegacyVpnInfo: int describeContents()> (SMS_MMS)
<android.permission.IPermissionManager$Stub: android.permission.IPermissionManager getDefaultImpl()> (SMS_MMS)
<android.widget.Scroller$ViscousFluidInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.os.Process: int getParentPid(int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: byte[] getNetworkWatchlistConfigHash()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int getLastTetherError(java.lang.String)> (SMS_MMS)
<android.widget.ScrollBarDrawable: int getAlpha()> (SMS_MMS)
<android.location.ILocationManager$Default: int getGnssYearOfHardware()> (SMS_MMS)
<android.widget.TextView: int getMinHeight()> (SMS_MMS)
<android.app.ApplicationPackageManager: int movePrimaryStorage(android.os.storage.VolumeInfo)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getRelativeValidityPeriod(int)> (SMS_MMS)
<android.os.WorkSource: int describeContents()> (SMS_MMS)
<com.android.internal.util.StatLogger: long getTime()> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getSampleCount()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaRoamingMode(int)> (SMS_MMS)
<android.content.IClipboard$Stub$Proxy: android.content.ClipDescription getPrimaryClipDescription(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)> (SMS_MMS)
<android.hardware.SensorManager: float getAltitude(float,float)> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.PersistableBundle getTransferOwnershipBundle()> (SMS_MMS)
<android.webkit.WebView: java.lang.ClassLoader getWebViewClassLoader()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTextBackgroundColor()> (SMS_MMS)
<android.media.session.ISession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.SurfaceControl getBoundsLayer()> (SMS_MMS)
<android.media.IMediaRouter2$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.Double3: double get(int)> (SMS_MMS)
<android.os.IIncidentManager$Stub: android.os.IIncidentManager getDefaultImpl()> (SMS_MMS)
<android.os.IPowerManager$Default: int getPowerSaveModeTrigger()> (SMS_MMS)
<android.content.Context: java.lang.String getFeatureId()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: int access$000(com.android.internal.view.menu.ListMenuPresenter)> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createStream(android.hardware.camera2.params.OutputConfiguration)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.nsd.INsdManager$Stub: android.net.nsd.INsdManager getDefaultImpl()> (SMS_MMS)
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)> (SMS_MMS)
<com.android.internal.policy.DecorView: int getAccessibilityViewId()> (SMS_MMS)
<android.telephony.SignalStrength: int getLteRssnr()> (SMS_MMS)
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOp(int,java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.timedetector.ManualTimeSuggestion: java.util.List getDebugInfo()> (SMS_MMS)
<android.view.View$7: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.os.IncidentManager: java.util.List getPendingReports()> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getAppPermissions$13(java.lang.String,android.permission.IPermissionController)> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4200()> (SMS_MMS)
<android.content.IContentService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: boolean isCallScreeningModeSupported()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub: android.app.usage.IStorageStatsManager getDefaultImpl()> (SMS_MMS)
<android.os.IServiceManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings: int describeContents()> (SMS_MMS)
<android.content.IntentFilter: int countCategories()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiRoamingSettingEnabled()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)> (SMS_MMS)
<android.app.IAlarmManager$Default: long currentNetworkTimeMillis()> (SMS_MMS)
<android.widget.AdapterView: int getCount()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getIncidentReportApproverPackageName()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.ConnectivityManager getInstanceOrNull()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,java.lang.String,long)> (SMS_MMS)
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getQuery()> (SMS_MMS)
<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])> (SMS_MMS)
<android.content.res.Resources: java.util.List getLoaders()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int describeContents()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule: int getTargetMixType()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getCrateDir(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: android.content.res.ColorStateList getColor()> (SMS_MMS)
<android.media.ExifInterface$1: int readAt(long,byte[],int,int)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastBackgroundProxyInfo(int)> (SMS_MMS)
<com.google.android.mms.util.AbstractCache: int size()> (SMS_MMS)
<android.app.NotificationChannel: android.net.Uri getSound()> (SMS_MMS)
<android.accessibilityservice.GestureDescription: int getMaxStrokeCount()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.ModemInfo: int hashCode()> (SMS_MMS)
<android.location.ICountryListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntentForUser(int,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: android.content.Intent getBatteryBroadcast()> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getVersionName()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.ImageDecoder$InputStreamSource: int getDensity()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub: com.android.internal.net.INetworkWatchlistManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int insert(java.lang.String,byte[],int,int)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isUpgrade()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: java.util.List getSystemActions()> (SMS_MMS)
<android.os.UserManager: int getUserSwitchability()> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.TextClassification: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.MediaCodec$MediaImage: int getWidth()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataConnectivityPossible()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean handlePinMmiForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.app.VoiceInteractor$Prompt: int countVoicePrompts()> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)> (SMS_MMS)
<android.media.AudioTrack: int getChannelConfiguration()> (SMS_MMS)
<android.view.contentcapture.ChildContentCaptureSession: boolean isContentCaptureEnabled()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: float[] getTimes()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IUserManager$Default: java.lang.String getSeedAccountType()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int startActivityFromRecents(int,android.os.Bundle)> (SMS_MMS)
<android.app.INotificationManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()> (SMS_MMS)
<android.transition.Transition$ArrayListManager: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaRoamingIndicator()> (SMS_MMS)
<android.media.tv.TvInputInfo: int getTunerCount()> (SMS_MMS)
<android.content.pm.KeySet: int hashCode()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageUserState: android.util.Pair getOverrideLabelIconForComponent(android.content.ComponentName)> (SMS_MMS)
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<com.android.internal.view.AppearanceRegion: int describeContents()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$2: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: char gsmExtendedToChar(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int checkCarrierPrivilegesForPackage(int,java.lang.String)> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingBottom()> (SMS_MMS)
<android.telephony.SmsMessage: boolean hasEmsSupport()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub: android.os.IIncidentReportStatusListener getDefaultImpl()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbConfiguration getConfiguration(int)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getNumBytesTx()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: boolean getAutoPersisting()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()> (SMS_MMS)
<android.os.Bundle: char[] getCharArray(java.lang.String)> (SMS_MMS)
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)> (SMS_MMS)
<android.telephony.CarrierConfigManager$Wifi: android.os.PersistableBundle access$300()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getPrefix()> (SMS_MMS)
<android.app.admin.FactoryResetProtectionPolicy: int describeContents()> (SMS_MMS)
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)> (SMS_MMS)
<android.view.InsetsState: int describeContents()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int getSpacing()> (SMS_MMS)
<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)> (SMS_MMS)
<android.content.ContentResolver$MimeTypeInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.media.IVolumeController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.SubscriptionManager: void invalidateActiveDataSubIdCaches()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: java.lang.String getMimeType()> (SMS_MMS)
<android.widget.ActionMenuPresenter$ActionMenuPopupCallback: com.android.internal.view.menu.ShowableListMenu getPopup()> (SMS_MMS)
<android.security.IKeyChainService$Default: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Default: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)> (SMS_MMS)
<android.app._$$Lambda$AppOpsManager$HistoricalOp$DkVcBvqB32SMHlxw0sWQPh3GL1A: java.lang.Object get()> (SMS_MMS)
<android.content.Intent: java.lang.String getAction()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SmsMessage: boolean isMWIClearMessage()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.SearchableInfo$ActionKeyInfo: int getKeyCode()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.ImageDecoder$AssetInputStreamSource: int getDensity()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getBroadcastForEnvironment(java.lang.String)> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int resolveViewAutofillFlags(android.content.Context,int)> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.net.lowpan.ILowpanNetScanCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig$1: int compare(android.security.net.config.CertificatesEntryRef,android.security.net.config.CertificatesEntryRef)> (SMS_MMS)
<android.app.job.JobParameters: int getJobId()> (SMS_MMS)
<android.content.Context: android.view.Display getDisplay()> (SMS_MMS)
<android.hardware.location.ContextHubManager: java.util.List getContextHubs()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean hasIccCard()> (SMS_MMS)
<android.media.AudioManager$BlockingFocusResultReceiver: int requestResult()> (SMS_MMS)
<android.graphics.RenderNode: boolean getUseCompositingLayer()> (SMS_MMS)
<android.util.SparseBooleanArray: boolean get(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int setIccLockEnabled(int,boolean,java.lang.String)> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: int getOrder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isLteCdmaEvdoGsmWcdmaEnabled()> (SMS_MMS)
<android.media.session.MediaSessionLegacyHelper: android.os.Bundle getOldMetadata(android.media.MediaMetadata,int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Notification$BubbleMetadata: boolean getAutoExpandBubble()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String,boolean)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.jar.StrictJarManifest: java.util.jar.Attributes getMainAttributes()> (SMS_MMS)
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()> (SMS_MMS)
<android.telephony.ServiceState: int getNrState()> (SMS_MMS)
<android.media.AudioTrack: int attachAuxEffect(int)> (SMS_MMS)
<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri,boolean)> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getLocalCallProfile()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isDataRoamingEnabled(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)> (SMS_MMS)
<android.telephony.SmsCbMessage: int getDataCodingScheme()> (SMS_MMS)
<android.os.StrictMode$ViolationInfo: int hashCode()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] getActiveRequests()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub: android.media.IMediaRouter2Manager getDefaultImpl()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$1102(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.os.IVibratorService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowId$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsExternalCallStateListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: boolean isVisibleToUserForAutofill(int)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)> (SMS_MMS)
<com.android.internal.widget.LockPatternView$Cell: int getColumn()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: int[] getRelevantUids()> (SMS_MMS)
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()> (SMS_MMS)
<android.app.AppOpsManager: int leftCircularDistance(int,int,int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getDeviceList()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.view.InsetsController$InternalAnimationControlListener: android.view.animation.Interpolator getAlphaInterpolator()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()> (SMS_MMS)
<android.text.style.BulletSpan: int getColor()> (SMS_MMS)
<android.telecom.TelecomManager: android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)> (SMS_MMS)
<android.os.IUserManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellInfo: int getCellConnectionStatus()> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: boolean isComplete()> (SMS_MMS)
<android.view.View: int getPaddingTop()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback getDefaultImpl()> (SMS_MMS)
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassificationConstants getSettings(android.content.Context)> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)> (SMS_MMS)
<android.view.animation.Animation: long getDuration()> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: java.util.Collection getProjectionGreylist()> (SMS_MMS)
<android.os.ThreadLocalWorkSource: int getUid()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: int[] getRelevantUids()> (SMS_MMS)
<android.content.IntentSender: java.lang.String getTargetPackage()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.MotionEvent: int getFlags()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getNavigationBarColor()> (SMS_MMS)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioTrack: float getAudioDescriptionMixLeveldB()> (SMS_MMS)
<android.app.contentsuggestions.ContentSelection: int describeContents()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.media.soundtrigger_middleware.ISoundTriggerModule getDefaultImpl()> (SMS_MMS)
<android.app.trust.TrustManager: android.os.Handler access$000(android.app.trust.TrustManager)> (SMS_MMS)
<android.content.IContentService$Default: boolean getMasterSyncAutomaticallyAsUser(int)> (SMS_MMS)
<android.location.GnssStatus: float getBasebandCn0DbHz(int)> (SMS_MMS)
<android.media.AudioMetadata$BaseMap: int hashCode()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getProtocol()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackage(int)> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: android.view.AppTransitionAnimationSpec[] getAnimSpecs()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: boolean isUp()> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatterySipper: int compareTo(com.android.internal.os.BatterySipper)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub: android.content.pm.IPackageDeleteObserver getDefaultImpl()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getAutoTimeEnabled(android.content.ComponentName)> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.Address: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstalledPackages(int,int)> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.HdmiTvClient: java.util.List getDeviceList()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.PersistableBundle getConfigForSubId(int,java.lang.String)> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub: android.system.suspend.ISuspendCallback getDefaultImpl()> (SMS_MMS)
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace$RenderIntent getRenderIntent()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: byte[] getMetadataById(int,byte[])> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: int getUserId()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getEmergencyNumberDbVersion(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getAccessCount(int,int,int)> (SMS_MMS)
<android.media.AudioAttributes: int hashCode()> (SMS_MMS)
<android.location.GnssStatus: int getSatelliteCount()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()> (SMS_MMS)
<android.telephony.TelephonyManager: int getActiveModemCount()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getMaximumCurvePoints()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()> (SMS_MMS)
<android.view.MotionEvent: int getId()> (SMS_MMS)
<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)> (SMS_MMS)
<android.net.NetworkIdentity: boolean getDefaultNetwork()> (SMS_MMS)
<android.view.DisplayAdjustments: android.view.DisplayCutout getDisplayCutout(android.view.DisplayCutout)> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub$Proxy: boolean isSameSignatureAccessAllowed()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IUiModeManager$Default: long getCustomNightModeStart()> (SMS_MMS)
<android.content.pm.PackageUserState: java.util.Map getSharedLibraryOverlayPaths()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.media.session.MediaSession: android.media.session.MediaController getController()> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hideLargeIcon(boolean)> (SMS_MMS)
<android.media.MediaMetadata: int size()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)> (SMS_MMS)
<android.widget.Scroller: int getFinalY()> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$Identifier: long getDeviceId()> (SMS_MMS)
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.ViewGroup: android.view.View findViewTraversal(int)> (SMS_MMS)
<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()> (SMS_MMS)
<android.telephony.TelephonyManager: int[] supplyPinReportResult(java.lang.String)> (SMS_MMS)
<android.os.IDumpstateListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyRequestMapper: int filterSupportedCaptureIntent(int)> (SMS_MMS)
<android.media.ExifInterface$ExifAttribute: int size()> (SMS_MMS)
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ResourceClientProfile: java.lang.String getTvInputSessionId()> (SMS_MMS)
<android.view.View: int getVisibility()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()> (SMS_MMS)
<android.os.PowerManager: float getThermalHeadroom(int)> (SMS_MMS)
<android.os.ISystemConfig$Stub$Proxy: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.app.WallpaperManager$FastBitmapDrawable: int getOpacity()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getSystemCaptionsServicePackageName()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: int isInTabletMode()> (SMS_MMS)
<android.os.BaseBundle: short getShort(java.lang.String,short)> (SMS_MMS)
<android.net.NetworkInfo: int describeContents()> (SMS_MMS)
<android.telephony.SmsManager: java.lang.String getImsSmsFormat()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryJavaHeapRss()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean getPackageAskScreenCompat(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isCurrentInputMethodSetByOwner()> (SMS_MMS)
<android.os.IThermalEventListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowId$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.JobSchedulerImpl: java.util.List getAllPendingJobs()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getFreeBytes(java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.Throwable)> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.CharSequence getDataManagementLabelForUser(int,java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getRequestedVrComponent()> (SMS_MMS)
<android.location.GnssReflectingPlane: double getLongitudeDegrees()> (SMS_MMS)
<android.text.Layout: float getSecondaryHorizontal(int)> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$502(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)> (SMS_MMS)
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int getEncryptionState()> (SMS_MMS)
<android.widget.FastScroller$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.widget.ExpandableListView: long getExpandableListPosition(int)> (SMS_MMS)
<android.hardware.location.ContextHubInfo: android.hardware.location.MemoryRegion[] getMemoryRegions()> (SMS_MMS)
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$202(android.security.keystore.recovery.WrappedApplicationKey,byte[])> (SMS_MMS)
<android.media.AudioDeviceInfo: java.lang.CharSequence getProductName()> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub: android.service.notification.IConditionProvider getDefaultImpl()> (SMS_MMS)
<android.telecom.PhoneAccount: int describeContents()> (SMS_MMS)
<android.location.IGnssStatusListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int scan(int,boolean)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String getExtraLocationControllerPackage()> (SMS_MMS)
<android.os.storage.StorageManager: boolean isCacheBehaviorGroup(java.io.File)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: float getElevation()> (SMS_MMS)
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics(int,android.view.DisplayAdjustments)> (SMS_MMS)
<android.media.midi.IMidiManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.NotificationManager: boolean isNotificationPolicyAccessGrantedForPackage(java.lang.String)> (SMS_MMS)
<android.text.style.TtsSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.CallForwardingInfo getCallForwarding(int,int)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.GLFrame: int getFboId()> (SMS_MMS)
<android.permission.IPermissionManager$Default: int getPermissionFlags(java.lang.String,java.lang.String,int)> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getRawZigZag64Size(long)> (SMS_MMS)
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: java.lang.String getAttributionTag()> (SMS_MMS)
<android.view.View: int getSystemUiVisibility()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: int getUid()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int hashCode()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: float getCurrentAlpha()> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.print.IPrintManager$Stub: android.print.IPrintManager getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int describeContents()> (SMS_MMS)
<android.content.pm.ResolveInfo: int resolveIconResId()> (SMS_MMS)
<com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreLoadStoreParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getHost()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: int getVersion()> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: int getDeliveryReport()> (SMS_MMS)
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()> (SMS_MMS)
<android.renderscript.RenderScript: int nScriptGetVarI(long,int)> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()> (SMS_MMS)
<android.app.Notification$MessagingStyle: java.util.List getHistoricMessages()> (SMS_MMS)
<android.media.AudioTrack: android.media.AudioFormat getFormat()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: int access$502(android.telephony.CarrierRestrictionRules,int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)> (SMS_MMS)
<android.graphics.fonts.FontStyle: int getSlant()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.MapCollections$ValuesCollection: int size()> (SMS_MMS)
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)> (SMS_MMS)
<android.view.textclassifier.TextLanguage: int getLocaleHypothesisCount()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.IIntentReceiver$Stub: android.content.IIntentReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.timezone.IRulesManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.LeadingMarginSpan$Standard: int getLeadingMargin(boolean)> (SMS_MMS)
<android.telephony.ims.ImsReasonInfo: int getExtraCode()> (SMS_MMS)
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub: android.content.om.IOverlayManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$17: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.location.GpsClock: double getTimeUncertaintyInNs()> (SMS_MMS)
<android.view.View: int getMeasuredHeightAndState()> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)> (SMS_MMS)
<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo makeGlobalRoute(android.media.MediaRouterClientState$RouteInfo)> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()> (SMS_MMS)
<android.content.UndoManager: boolean isInUndo()> (SMS_MMS)
<android.widget.TextView: int getCurrentTextColor()> (SMS_MMS)
<android.widget.ImageView: android.graphics.PorterDuff$Mode getImageTintMode()> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()> (SMS_MMS)
<android.util.SparseIntArray: int indexOfKey(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getOriginalText()> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,android.os.UserHandle)> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Notification$Builder: android.os.Bundle getExtras()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: long getWhat()> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()> (SMS_MMS)
<android.widget.ToastPresenter: android.view.View getTextToastView(android.content.Context,java.lang.CharSequence)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getDeviceOwnerOrganizationName()> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getHintShowBackgroundOnly()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()> (SMS_MMS)
<android.widget.Scroller: int getCurrX()> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.ZygoteConnection: boolean isClosedByPeer()> (SMS_MMS)
<android.view.PointerIcon$1: android.view.PointerIcon createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.renderscript.Type: int getZ()> (SMS_MMS)
<android.telephony.CallQuality: int getNumRtpPacketsTransmittedLost()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getWifiStateCount(int,int)> (SMS_MMS)
<android.telephony.CbGeoUtils$Polygon$Point: android.telephony.CbGeoUtils$Polygon$Point subtract(android.telephony.CbGeoUtils$Polygon$Point)> (SMS_MMS)
<android.net.TrafficStats: long getLoopbackRxBytes()> (SMS_MMS)
<android.telephony.ModemActivityInfo: int getIdleTimeMillis()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getOverlayables()> (SMS_MMS)
<android.util.apk.ZipUtils: long getZipEocdCentralDirectoryOffset(java.nio.ByteBuffer)> (SMS_MMS)
<android.media.AudioManager$ServiceEventHandlerDelegate: android.os.Handler getHandler()> (SMS_MMS)
<android.widget.ExpandableListConnector: int getViewTypeCount()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: byte[] getMacAddress()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int getNumTuners()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: int describeContents()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: int removeRoutesFromLocalNetwork(java.util.List)> (SMS_MMS)
<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: int[] getLayout()> (SMS_MMS)
<android.os.ParcelFileDescriptor: int getFd()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getAccessibleSubscriptionInfoList()> (SMS_MMS)
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> (SMS_MMS)
<android.media.ExifInterface: long getGpsDateTime()> (SMS_MMS)
<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()> (SMS_MMS)
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isDeviceProvisioned()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)> (SMS_MMS)
<android.view.Display: int getHeight()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: int getSingleSatelliteCorrectionFlags()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViews$SetPendingIntentTemplate: int getActionTag()> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMinExposureCompensation()> (SMS_MMS)
<android.content.Intent$FilterComparison: int hashCode()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.Parcel: int dataPosition()> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.view.View: float getVerticalScrollFactor()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getSystemSharedLibraryNames()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getScreenCaptureDisabled(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.os.BaseBundle: java.lang.Object get(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.params.RecommendedStreamConfigurationMap getRecommendedStreamConfigurationMap(int)> (SMS_MMS)
<android.content.UndoManager: int undo(android.content.UndoOwner[],int)> (SMS_MMS)
<android.animation.IntKeyframeSet: int getIntValue(float)> (SMS_MMS)
<android.app.DirectAction: int describeContents()> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int getNeutralButtonAction()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.UiModeManager: boolean isNightModeLocked()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsUt getUtInterface()> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: android.os.Bundle getExtras()> (SMS_MMS)
<android.text.Annotation: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveUnknownCount(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int stopUser(android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$102(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.widget.TextView: int getImeActionId()> (SMS_MMS)
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int hashCode()> (SMS_MMS)
<android.media.RemoteControlClient: int getRccControlFlagsFromActions(long)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getImsRegTechnologyForMmTel(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.KeySet: int describeContents()> (SMS_MMS)
<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()> (SMS_MMS)
<android.view.KeyEvent: int getId()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getEmergencyServiceCategories()> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.style.ForegroundColorSpan: int getForegroundColor()> (SMS_MMS)
<android.telephony.CellInfoLte: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.telephony.SmsManager: java.lang.String createAppSpecificSmsTokenWithPackageInfo(java.lang.String,android.app.PendingIntent)> (SMS_MMS)
<android.telecom.TelecomAnalytics$SessionTiming: long getTime()> (SMS_MMS)
<android.media.MediaTimestamp: float getMediaClockRate()> (SMS_MMS)
<android.drm.DrmInfo: int getInfoType()> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig: java.util.Set getTrustAnchors()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: int getSamplingStrategy()> (SMS_MMS)
<android.widget.RadioButton: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: android.content.LocusId getLocusId()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isLayerTracing()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData[] newArray(int)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Default: android.view.AppTransitionAnimationSpec[] get()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getCategory()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeSuggestedWordEndIndex()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$SipAddress: int getTypeLabelResource(int)> (SMS_MMS)
<android.media.AudioRecord: android.media.AudioDeviceInfo getPreferredDevice()> (SMS_MMS)
<android.service.vr.IVrManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int getLac()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getTitleResId()> (SMS_MMS)
<android.view.RemoteAnimationAdapter: int getCallingUid()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.SignalStrength getSignalStrength(int)> (SMS_MMS)
<android.net.UidRange: int getStartUser()> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String getFullMethodPath(boolean)> (SMS_MMS)
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()> (SMS_MMS)
<android.os.IVold$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.storage.StorageManager: long getCacheQuotaBytes(java.util.UUID)> (SMS_MMS)
<android.net.IpPrefix: byte[] getRawAddress()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.view.Surface getInputSurface()> (SMS_MMS)
<android.database.AbstractWindowedCursor: int getType(int)> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: boolean getHidden()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()> (SMS_MMS)
<android.util.SparseIntArray: int valueAt(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VPath: android.util.PathParser$PathData getPathData()> (SMS_MMS)
<android.text.method.WordIterator: int nextBoundary(int)> (SMS_MMS)
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()> (SMS_MMS)
<android.os.VibrationAttributes: int getUsage()> (SMS_MMS)
<android.view.textclassifier.TextClassificationContext: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: android.graphics.Matrix getAnimationMatrix()> (SMS_MMS)
<android.database.AbstractWindowedCursor: long getLong(int)> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getFullWifiLockTime(long,int)> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.telephony.data.ApnSetting: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextClassificationContext: java.lang.String getWidgetVersion()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int getPlatformVersion()> (SMS_MMS)
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getContentType()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: android.service.carrier.CarrierIdentifier getCarrierIdentifier()> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.NetworkCapabilities: java.util.Set getUids()> (SMS_MMS)
<android.telephony.CellIdentityLte$1: android.telephony.CellIdentityLte createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.InsetsController: int getSystemBarsAppearance()> (SMS_MMS)
<android.view.SurfaceView: int getImportantForAccessibility()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getAutofillType()> (SMS_MMS)
<android.net.NetworkStatsHistory: long getBucketDuration()> (SMS_MMS)
<android.content.pm.LauncherApps: int getShortcutIconResId(android.content.pm.ShortcutInfo)> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultSmsSubscriptionInfo()> (SMS_MMS)
<android.os.IProgressListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ServiceState: boolean isUsingCarrierAggregation()> (SMS_MMS)
<android.app.IActivityController$Default: int systemNotResponding(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,int)> (SMS_MMS)
<android.telephony.SmsCbMessage: int getSerialNumber()> (SMS_MMS)
<com.android.internal.util.BitUtils: int getUint16(java.nio.ByteBuffer,int)> (SMS_MMS)
<android.view.DisplayAddress$Physical: long getPhysicalDisplayId()> (SMS_MMS)
<android.webkit.WebSettings: int getForceDark()> (SMS_MMS)
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.TypedValue: float getFloat()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getCertInstallerPackage(android.content.ComponentName)> (SMS_MMS)
<android.security.AttestedKeyPair: java.util.List getAttestationRecord()> (SMS_MMS)
<android.app.IAppTask$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession getDefaultImpl()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: int getHeaderVersion()> (SMS_MMS)
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()> (SMS_MMS)
<android.os.IIncidentManager$Default: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.AudioManager: boolean isMicrophoneMute()> (SMS_MMS)
<android.hardware.usb.UsbPort: int getSupportedContaminantProtectionModes()> (SMS_MMS)
<android.util.SizeF: float getHeight()> (SMS_MMS)
<com.android.internal.os.PowerProfile: int getNumElements(java.lang.String)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.Parcel: char[] createCharArray()> (SMS_MMS)
<android.transition.Slide$5: float getGoneX(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.app.IBackupAgent$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_4.CellIdentityNr: int hashCode()> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.ContextWrapper: android.os.Looper getMainLooper()> (SMS_MMS)
<android.content.res.Resources: int getAttributeSetSourceResId(android.util.AttributeSet)> (SMS_MMS)
<android.net.INetworkStatsSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getTaskForActivity(android.os.IBinder,boolean)> (SMS_MMS)
<android.media.AudioPort: int id()> (SMS_MMS)
<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.GnssRequest merge(android.location.GnssRequest[])> (SMS_MMS)
<android.print.IPrintManager$Default: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId,int)> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.AssetManager getSystem()> (SMS_MMS)
<android.os.PowerSaveState: int describeContents()> (SMS_MMS)
<android.net.ConnectivityManager: int tether(java.lang.String)> (SMS_MMS)
<android.widget.TextView: int getAccessibilitySelectionEnd()> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int describeContents()> (SMS_MMS)
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.graphics.Region getRegionAt(int)> (SMS_MMS)
<android.app.slice.SliceItem: android.app.RemoteInput getRemoteInput()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getPermissionControllerPackageName()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int getPasswordType()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getInstallReason(java.lang.String,int)> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> (SMS_MMS)
<android.hardware.face.FaceManager$AuthenticationResult: android.hardware.face.Face getFace()> (SMS_MMS)
<android.os.connectivity.GpsBatteryStats: long[] getTimeInGpsSignalQualityLevel()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)> (SMS_MMS)
<android.location.GpsMeasurement: double getCodePhaseUncertaintyInChips()> (SMS_MMS)
<android.telephony.PreciseCallState$1: void <init>()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: boolean isOnBatteryLocked()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowIndex()> (SMS_MMS)
<android.graphics.Paint: float getTextSize()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.euicc.EuiccManager: java.lang.String getEid()> (SMS_MMS)
<android.telephony.TelephonyManager: long getAllowedNetworkTypes()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: byte[][] getDigestBytes()> (SMS_MMS)
<android.app.ActivityManager: int getMemoryClass()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSystemTextClassifierPackageName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isMmTelCapabilityProvisionedInCache(int,int,int)> (SMS_MMS)
<android.media.AudioPort: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn(int)> (SMS_MMS)
<android.hardware.usb.UsbPort: int getSupportedModes()> (SMS_MMS)
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyUrns()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getObbDir()> (SMS_MMS)
<android.view.ViewGroup: int getTransientViewIndex(int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getLauncherActivities(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig$Builder: java.util.List getCertificatesEntryRefs()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTop()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: char[] getTextCharacters(int[])> (SMS_MMS)
<android.util.KeyValueListParser$FloatValue: java.lang.String getKey()> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.media.session.IOnVolumeKeyLongPressListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.security.keystore.IKeystoreKeyCharacteristicsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: int getUid()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: java.time.LocalTime getNightDisplayCustomStartTime()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getForegroundRejectCount(int)> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()> (SMS_MMS)
<android.app.RemoteInput: boolean getAllowFreeFormInput()> (SMS_MMS)
<android.view.View: float getZ()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)> (SMS_MMS)
<android.telephony.ModemInfo: int describeContents()> (SMS_MMS)
<android.net.INetworkScoreCache$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int[] getTextLineCharOffsets()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringWeekly(java.time.ZonedDateTime)> (SMS_MMS)
<android.view.textservice.TextInfo: int getSequence()> (SMS_MMS)
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int checkUidPermission(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$9: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ScoredNetwork: int describeContents()> (SMS_MMS)
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> (SMS_MMS)
<android.widget.TextView: float getTextScaleX()> (SMS_MMS)
<android.app.NotificationChannelGroup: int hashCode()> (SMS_MMS)
<android.os.ICancellationSignal$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedInputMethods(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.app.MessageSamplingConfig: int describeContents()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1000(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: android.media.IPlayer getIPlayer()> (SMS_MMS)
<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()> (SMS_MMS)
<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()> (SMS_MMS)
<android.content.pm.PackageInfo: long getLongVersionCode()> (SMS_MMS)
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<android.media.IVolumeController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getPreferredDataSubscriptionId()> (SMS_MMS)
<android.view.ViewConfiguration: int getKeyRepeatTimeout()> (SMS_MMS)
<android.view.textclassifier.TextClassification: android.graphics.drawable.Drawable getIcon()> (SMS_MMS)
<android.os.IServiceCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.nsd.INsdManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.LowpanCredential: int access$102(android.net.lowpan.LowpanCredential,int)> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IUserManager$Default: int getProfileParentId(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationScale(int)> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledConsumer asConsumer()> (SMS_MMS)
<android.app.Activity: android.content.Intent getIntent()> (SMS_MMS)
<android.app.IApplicationThread$Stub: android.app.IApplicationThread asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityManager$Default: int getLockTaskModeState()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()> (SMS_MMS)
<android.view.ViewGroup: void getScrollIndicatorBounds(android.graphics.Rect)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Default: int readAt(long,int)> (SMS_MMS)
<android.content.pm.PackageStats: int hashCode()> (SMS_MMS)
<android.os.BinderProxy: android.os.IInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.content.pm.VersionedPackage: long getLongVersionCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub: android.hardware.radio.ITuner asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)> (SMS_MMS)
<android.view.WindowInsets$Type: int ime()> (SMS_MMS)
<android.app.IServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroupsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.telephony.SubscriptionInfo$1: void <init>()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$1: void <init>()> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.loader.ResourcesLoader[] access$402(android.content.res.AssetManager,android.content.res.loader.ResourcesLoader[])> (SMS_MMS)
<android.renderscript.Allocation: int getUsage()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()> (SMS_MMS)
<android.view.View: boolean getHasOverlappingRendering()> (SMS_MMS)
<android.net.wifi.nl80211.NativeWifiClient: android.net.MacAddress getMacAddress()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.BoringLayout: boolean getLineContainsTab(int)> (SMS_MMS)
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)> (SMS_MMS)
<android.hardware.input.IInputManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.SparseIntArray: int[] copyKeys()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName lambda$replacePreferredActivity$1(android.content.pm.ResolveInfo)> (SMS_MMS)
<android.telephony.ServiceState: int getDataRegState()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int access$502(android.net.lowpan.LowpanIdentity,int)> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: int getCount()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub: android.os.ISystemUpdateManager getDefaultImpl()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getTaskForActivity(android.os.IBinder,boolean)> (SMS_MMS)
<android.app.IAlarmListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.IPrintManager$Stub$Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo$1: android.telephony.DataConnectionRealTimeInfo[] newArray(int)> (SMS_MMS)
<android.telephony.NetworkScanRequest: int getScanType()> (SMS_MMS)
<android.app.IBackupAgent$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IClipboard$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ITransientNotification$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.IOns$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.StrictMode$ViolationInfo: int describeContents()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeDirectory(int,java.lang.String)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: int getPurposes()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.SurfaceTextureRenderer access$000(android.hardware.camera2.legacy.GLThreadManager)> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub: android.hardware.location.IContextHubTransactionCallback getDefaultImpl()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getStagedSessionErrorMessage()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: long getTime()> (SMS_MMS)
<android.webkit.WebView: int getRendererRequestedPriority()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getTelephonyHistograms()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()> (SMS_MMS)
<android.app.AppOpsManager: int noteOp(int)> (SMS_MMS)
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub: com.android.internal.app.IVoiceInteractorRequest asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.slice.SliceManager: android.net.Uri mapIntentToUri(android.content.Intent)> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm copy()> (SMS_MMS)
<android.metrics.LogMaker: int getUid()> (SMS_MMS)
<android.webkit.WebView: android.view.View getZoomControls()> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.SystemProperties$Handle: java.lang.String get()> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$CryptoObject: android.security.identity.IdentityCredential getIdentityCredential()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean matchesCurrentSimOperator(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()> (SMS_MMS)
<android.media.Image: boolean isAttachable()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageId()> (SMS_MMS)
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint$FontMetrics)> (SMS_MMS)
<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isAllow3rdPartyOnInternal(android.content.Context)> (SMS_MMS)
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSession: int getId()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPermissions()> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$402(android.security.keystore.recovery.KeyChainSnapshot,byte[])> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getHintHideIcon()> (SMS_MMS)
<android.app.ITaskStackListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)> (SMS_MMS)
<android.util.LruCache: int maxSize()> (SMS_MMS)
<android.provider.FontsContract: android.graphics.Typeface getFontSync(android.provider.FontRequest)> (SMS_MMS)
<android.widget.ListPopupWindow: boolean isShowing()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: int getGlobalAudioRestriction()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementEnterTransition()> (SMS_MMS)
<android.content.res.Configuration: int describeContents()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)> (SMS_MMS)
<android.filterpacks.videosrc.MediaSource: int access$200(android.filterpacks.videosrc.MediaSource)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.SignalStrength getSignalStrength()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)> (SMS_MMS)
<android.debug.AdbManager: boolean isAdbWifiSupported()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.lang.String getNextArgRequired()> (SMS_MMS)
<android.os.UserManager: android.os.Bundle getUserRestrictions()> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: java.lang.String getType()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int getClassId()> (SMS_MMS)
<android.util.SparseIntArray: int size()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: long getLeashedParentNodeId()> (SMS_MMS)
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategorySystem()> (SMS_MMS)
<android.hardware.camera2.params.ColorSpaceTransform: android.util.Rational getElement(int,int)> (SMS_MMS)
<android.app.timedetector.TelephonyTimeSuggestion: int hashCode()> (SMS_MMS)
<android.app.VoiceInteractor$ConfirmationRequest: java.lang.String getRequestTypeName()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()> (SMS_MMS)
<android.drm.DrmEvent: java.lang.String getMessage()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()> (SMS_MMS)
<android.view.ViewGroup$ViewLocationHolder: int compareTo(java.lang.Object)> (SMS_MMS)
<android.accounts.Account: int describeContents()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: int[] getUidsWithPolicy(int)> (SMS_MMS)
<android.os.BaseBundle: double getDouble(java.lang.String)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo$1: void <init>()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.os.UserHandle)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.location.NanoAppBinary: int getFlags()> (SMS_MMS)
<android.content.res.CompatResources: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.app.IActivityManager$Default: android.os.ParcelFileDescriptor getLifeMonitor()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.euicc.EuiccCardManager lambda$registerServiceWrappers$4(android.content.Context)> (SMS_MMS)
<android.inputmethodservice.InputMethodService: int access$1100(android.inputmethodservice.InputMethodService)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: long getLatestTimestamp()> (SMS_MMS)
<android.os.IUserManager$Default: java.lang.String getUserAccount(int)> (SMS_MMS)
<com.android.internal.net.VpnConfig: int describeContents()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int[] getOutputEvents()> (SMS_MMS)
<android.net.Proxy: int getDefaultPort()> (SMS_MMS)
<android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats$Bucket)> (SMS_MMS)
<android.location.GnssMeasurementsEvent: android.location.GnssClock getClock()> (SMS_MMS)
<android.service.notification.INotificationListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getAccessibilityTraversalBefore()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,int,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: boolean isMultiPackage()> (SMS_MMS)
<android.graphics.drawable.Icon: int getDataLength()> (SMS_MMS)
<android.telephony.CellIdentityNr$1: android.telephony.CellIdentityNr createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: android.app.AlarmManager access$300(android.net.wifi.nl80211.WifiNl80211Manager)> (SMS_MMS)
<android.hardware.camera2.params.TonemapCurve: int hashCode()> (SMS_MMS)
<android.media.midi.MidiInputPort: int getPortNumber()> (SMS_MMS)
<android.app.IWallpaperManager$Default: java.lang.String getName()> (SMS_MMS)
<android.database.CursorWindow: java.lang.String getName()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$AudioCapabilities getAudioCapabilities()> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getMessageBody()> (SMS_MMS)
<android.media.Metadata: java.util.Date getDate(int)> (SMS_MMS)
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsdServiceRegisterer()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: int getOp()> (SMS_MMS)
<android.debug.IAdbManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.SurfaceView: android.os.IBinder getHostToken()> (SMS_MMS)
<android.app.NotificationHistory: int getHistoryCount()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.blob.BlobStoreManager: java.util.List getLeasedBlobs()> (SMS_MMS)
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig$Configuration getConfiguration(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()> (SMS_MMS)
<android.media.session.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getScheme()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$1: android.telephony.NetworkRegistrationInfo[] newArray(int)> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int getType()> (SMS_MMS)
<android.net.EthernetManager: boolean isAvailable()> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails()> (SMS_MMS)
<android.os.Debug: int getLoadedClassCount()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector$Identifier getLogicallyTunedTo()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()> (SMS_MMS)
<android.os.Debug: int getThreadAllocCount()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()> (SMS_MMS)
<android.content.ClipboardManager: android.os.Handler access$000(android.content.ClipboardManager)> (SMS_MMS)
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)> (SMS_MMS)
<android.database.AbstractWindowedCursor: byte[] getBlob(int)> (SMS_MMS)
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub: android.hardware.lights.ILightsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: int getCurrentVolume()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getLengthPrefixedSlice(java.nio.ByteBuffer)> (SMS_MMS)
<android.content.pm.dex.IArtManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.InterfaceConfiguration: int describeContents()> (SMS_MMS)
<android.app.blob.BlobInfo: java.util.List getLeases()> (SMS_MMS)
<android.graphics.Paint: long getNativeInstance()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodListAsUser(int)> (SMS_MMS)
<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.inputmethod.CorrectionInfo: int describeContents()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: com.android.internal.policy.PhoneWindow$PanelFeatureState getPanelState(int,boolean)> (SMS_MMS)
<android.view.inputmethod.EditorInfo$InitialSurroundingText: int describeContents()> (SMS_MMS)
<android.os.IThermalService$Default: android.os.Temperature[] getCurrentTemperaturesWithType(int)> (SMS_MMS)
<android.os.Parcel: java.lang.Object getClassCookie(java.lang.Class)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: long getDurationSincePreviousEvent()> (SMS_MMS)
<android.widget.AbsListView: int getCheckedItemPosition()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isMWISetMessage()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: byte[] getData()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getCi()> (SMS_MMS)
<android.widget.HorizontalScrollView: int getRightEdgeEffectColor()> (SMS_MMS)
<android.telephony.TelephonyHistogram$1: void <init>()> (SMS_MMS)
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.content.Intent,java.util.Set)> (SMS_MMS)
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getNavigationItemCount()> (SMS_MMS)
<android.app.timezone.ICallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IMediaRouter2$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.PermissionInfo: int getProtection()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDozeSinceCharge()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: java.util.List getRootTasks(int,int[])> (SMS_MMS)
<android.view.View: int getLeftPaddingOffset()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int myUserId()> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: int getWidthMils()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int trackRecorder(android.os.IBinder)> (SMS_MMS)
<android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTextSelectionEnd()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo$hidl_discriminator: java.lang.String getName(byte)> (SMS_MMS)
<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: long getReportTimestamp()> (SMS_MMS)
<android.net.IpSecConfig: int getXfrmInterfaceId()> (SMS_MMS)
<android.util.LruCache: int missCount()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserRestrictionSource(java.lang.String,int)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.lang.String getPackageForToken(android.os.IBinder)> (SMS_MMS)
<android.content.res.TypedArray: int length()> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()> (SMS_MMS)
<android.print.IPrintManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioRecord: java.util.List getActiveMicrophones()> (SMS_MMS)
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Default: android.content.pm.ParceledListSlice getRecentlyCommittedRollbacks()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: long getUnsignedInt(int,long)> (SMS_MMS)
<android.service.dreams.IDreamManager$Default: android.content.ComponentName[] getDreamComponentsForUser(int)> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.media.IAudioService$Default: int getMode()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: java.util.List getSystemActions()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getDataConnectionNetworkType()> (SMS_MMS)
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)> (SMS_MMS)
<android.view.DisplayAddress$Physical: byte getPort()> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.util.List getSplitPermissions()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.AsyncTask: java.util.concurrent.LinkedBlockingQueue access$100()> (SMS_MMS)
<android.content.UndoManager$UndoState: int countOperations()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.os.ParcelUuid createSubscriptionGroup(java.util.List)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getCompileSdkVersionCodeName()> (SMS_MMS)
<android.print.IPrintManager$Default: java.util.List getPrintServiceRecommendations(int)> (SMS_MMS)
<android.widget.TextView: int getLineCount()> (SMS_MMS)
<android.app.Activity: android.view.Window getWindow()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()> (SMS_MMS)
<android.view.View$9: java.lang.Float get(android.view.View)> (SMS_MMS)
<android.hardware.radio.V1_0.LteSignalStrength: int hashCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isUnattendedManagedKiosk()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTag(int,java.lang.String,long,long,int,int)> (SMS_MMS)
<android.telephony.CbGeoUtils$Circle: boolean equals(java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.IOns$Default: int getPreferredDataSubscriptionId(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State valueOf(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: int checkSelfPermission(java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getSharedUserId()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: float getExcessPathLengthUncertaintyMeters()> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub: android.view.IGraphicsStatsCallback getDefaultImpl()> (SMS_MMS)
<android.transition.ArcMotion: float getMaximumAngle()> (SMS_MMS)
<android.app.NotificationChannel: long[] getVibrationPattern()> (SMS_MMS)
<android.os.INetworkManagementService$Default: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)> (SMS_MMS)
<android.location.GnssMeasurement: float getCarrierFrequencyHz()> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.UiccSlotInfo: int hashCode()> (SMS_MMS)
<android.accessibilityservice.GestureDescription: long getMaxGestureDuration()> (SMS_MMS)
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyFocusStateMapper access$1700(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getRoamingType()> (SMS_MMS)
<android.media.midi.MidiDeviceServer$OutputPortClient: android.media.midi.MidiInputPort getInputPort()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub: android.media.tv.ITvInputManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: boolean isDreaming()> (SMS_MMS)
<android.database.CursorWindow: int describeContents()> (SMS_MMS)
<android.media.RoutingSessionInfo: java.util.List getSelectableRoutes()> (SMS_MMS)
<android.telephony.CallQuality: boolean isOutgoingSilenceDetectedAtCallSetup()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedAccessibilityServicesForUser(int)> (SMS_MMS)
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramResults: int describeContents()> (SMS_MMS)
<android.app.NotificationHistory: android.app.NotificationHistory$HistoricalNotification getNextNotification()> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo$1: android.telephony.DataSpecificRegistrationInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.input.InputManager: int isMicMuted()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetLeft(int)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfoWcdma: int hashCode()> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandDescriptor: int describeContents()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getCallType()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ChangedPackages getChangedPackages(int,int)> (SMS_MMS)
<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()> (SMS_MMS)
<android.view.InsetsSourceConsumer: int requestShow(boolean)> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebViewClient getWebViewClient()> (SMS_MMS)
<android.service.notification.INotificationListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SignalStrength: int getTdScdmaAsuLevel()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getAppPackageName()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.Throwable access$100(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub: android.hardware.location.IContextHubClientCallback getDefaultImpl()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.view.contentcapture.IContentCaptureDirectManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo$1: void <init>()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.WindowInsetsAnimation: int getTypeMask()> (SMS_MMS)
<android.graphics.fonts.FontFamily: android.graphics.fonts.Font getFont(int)> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List getDebugInfo()> (SMS_MMS)
<android.net.Uri$PathSegments: int size()> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: long getAvailableRestoreTokenForUser(int,java.lang.String)> (SMS_MMS)
<android.view.WindowId: android.view.IWindowId getTarget()> (SMS_MMS)
<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager getDefaultImpl()> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ResolveInfo: int getIconResource()> (SMS_MMS)
<android.util.Rational: int getDenominator()> (SMS_MMS)
<android.net.INetworkStatsService$Default: long getUidStats(int,int)> (SMS_MMS)
<android.widget.RemoteViews$LayoutParamAction: int getActionTag()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.app.servertransaction.StopActivityItem: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()> (SMS_MMS)
<android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)> (SMS_MMS)
<android.view.ViewConfiguration: int getHoverTooltipHideTimeout()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getWifiScanBackgroundTimer()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$800(int)> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub: android.service.textclassifier.ITextClassifierService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.Set getWhitelistedRestrictedPermissions(java.lang.String,int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher,int)> (SMS_MMS)
<android.content.ContentProviderNative: android.content.IContentProvider asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.View: boolean getRevealOnFocusHint()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: int hashCode()> (SMS_MMS)
<android.app.LoadedApk: java.io.File getDeviceProtectedDataDirFile()> (SMS_MMS)
<android.widget.RemoteViews: java.lang.String getPackage()> (SMS_MMS)
<android.view.IWindowManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IIncidentManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.PendingIntent: boolean isTargetedToPackage()> (SMS_MMS)
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getWhitePoint()> (SMS_MMS)
<android.view.ViewTreeObserver$InternalInsetsInfo: int hashCode()> (SMS_MMS)
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> (SMS_MMS)
<android.app.ITaskStackListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECPoint getW()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.ImageView: int getImageAlpha()> (SMS_MMS)
<android.app.ActivityOptions: int getCustomExitResId()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getKey(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getPackage()> (SMS_MMS)
<android.media.MediaCodecInfo$AudioCapabilities: int[] getSupportedSampleRates()> (SMS_MMS)
<android.security.keystore.recovery.RecoveryCertPath: java.security.cert.CertPath getCertPath()> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String getKey()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)> (SMS_MMS)
<android.view.Window: int getFeatures()> (SMS_MMS)
<android.graphics.ImageDecoder$ImageInfo: android.util.Size getSize()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.ComponentName getInstantAppInstallerComponent()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getQuery()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityMessageSenders()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String,java.lang.String,int,boolean)> (SMS_MMS)
<android.os.Parcel: double[] createDoubleArray()> (SMS_MMS)
<android.os.VibrationEffect$Waveform: int[] getAmplitudes()> (SMS_MMS)
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)> (SMS_MMS)
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()> (SMS_MMS)
<android.view.VelocityTracker: float getYVelocity()> (SMS_MMS)
<android.media.projection.MediaProjection: android.media.projection.IMediaProjection getProjection()> (SMS_MMS)
<android.media.session.MediaSession: android.media.session.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()> (SMS_MMS)
<android.graphics.Paint: int getHinting()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()> (SMS_MMS)
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)> (SMS_MMS)
<android.telephony.CellIdentityCdma: int getBasestationId()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getUserPowerWhitelist()> (SMS_MMS)
<android.view.View: android.view.ViewOverlay getOverlay()> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult: java.util.List getOperators()> (SMS_MMS)
<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Default: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)> (SMS_MMS)
<android.os.INetworkActivityListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.service.notification.NotificationListenerService: boolean isBound()> (SMS_MMS)
<android.hardware.HardwareBuffer: int getWidth()> (SMS_MMS)
<android.view.InsetsSource: android.graphics.Rect getFrame()> (SMS_MMS)
<android.location.GnssClock: double getBiasUncertaintyNanos()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: java.io.File[] getObbDirs()> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List getInstalledModules(int)> (SMS_MMS)
<android.widget.RemoteViews$RemoteViewsContextWrapper: java.lang.String getPackageName()> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.ims.ImsReasonInfo: int getCode()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getTextIdEntry()> (SMS_MMS)
<android.app.VoiceInteractor$AbortVoiceRequest: java.lang.String getRequestTypeName()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getConversationsForPackage(java.lang.String,int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getProcessName()> (SMS_MMS)
<android.net.LinkAddress: java.net.InetAddress getAddress()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getTag()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: java.lang.String getName()> (SMS_MMS)
<android.content.pm.LauncherApps$AppUsageLimit: int describeContents()> (SMS_MMS)
<android.media.AudioAttributes: int getSystemUsage()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getAllSubscriptionInfoCount()> (SMS_MMS)
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.String,java.lang.Throwable)> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub: android.service.textclassifier.ITextClassifierService getDefaultImpl()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: boolean isEmergencyEnabled()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.util.List getAllProviders()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setSummary(java.lang.CharSequence)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoFpsRangesFor(android.util.Size)> (SMS_MMS)
<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()> (SMS_MMS)
<android.location.GnssMeasurement: double getCn0DbHz()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> (SMS_MMS)
<android.media.ExifInterface: long[] getAttributeRange(java.lang.String)> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.InputStream getRawInputStream()> (SMS_MMS)
<android.hardware.camera2.CaptureFailure: int getSequenceId()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getAllowedNotificationAssistantForUser(int)> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.ILocationListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: java.lang.Integer getModelYear()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getAccessDuration(int,int,int)> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: boolean getSystemAudioMode()> (SMS_MMS)
<android.app.IInstrumentationWatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: double getCarrierPhase()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getMinTime()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: boolean getEa()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller getPackageInstaller()> (SMS_MMS)
<android.app.KeyguardManager: boolean isDeviceLocked()> (SMS_MMS)
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsEcbm getEcbmInterface()> (SMS_MMS)
<android.app.ContextImpl: java.lang.String[] fileList()> (SMS_MMS)
<com.android.internal.content.PackageMonitor: int isPackageDisappearing(java.lang.String)> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getChannelNumber()> (SMS_MMS)
<android.os.BaseBundle: byte[] getByteArray(java.lang.String)> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getIconRes()> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hideReplyIcon(boolean)> (SMS_MMS)
<android.view.View: int getAccessibilityTraversalAfter()> (SMS_MMS)
<android.security.IKeyChainService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getCompatibleWidthLimitDp()> (SMS_MMS)
<android.hardware.location.MemoryRegion: int getFreeCapacityBytes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int[] supplyPinReportResultForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap getServiceStats()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getBugreportWhitelistedPackages()> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isImsRegistered(int)> (SMS_MMS)
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.os.UserHandle getDeviceOwnerUser()> (SMS_MMS)
<android.location.LocationManager$GetCurrentLocationTransport: java.lang.String getListenerId()> (SMS_MMS)
<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig retainNonConfig()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.content.pm.PackageInfo getCurrentWebViewPackage()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: java.lang.String getAudioAddress()> (SMS_MMS)
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()> (SMS_MMS)
<android.filterfw.core.SerializedFrame: float[] getFloats()> (SMS_MMS)
<android.renderscript.Element: android.renderscript.Element getSubElement(int)> (SMS_MMS)
<android.webkit.WebView: android.graphics.Bitmap getFavicon()> (SMS_MMS)
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: long getMaximumDataBlockSize()> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: android.os.CoolingDevice[] getCurrentCoolingDevices()> (SMS_MMS)
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMtu()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Person: java.lang.CharSequence getName()> (SMS_MMS)
<android.widget.AbsListView$InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: android.os.ParcelUuid createSubscriptionGroup(int[],java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isIccLockEnabled(int)> (SMS_MMS)
<android.hardware.ISerialManager$Stub: android.hardware.ISerialManager getDefaultImpl()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Long3: long get(int)> (SMS_MMS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.ActivityManager$MemoryInfo: int describeContents()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()> (SMS_MMS)
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(int)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()> (SMS_MMS)
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityWindowInfo getWindow(int)> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IInstalld$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.prediction.AppTarget: android.os.UserHandle getUser()> (SMS_MMS)
<android.view.textclassifier.EntityConfidence: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.hardware.soundtrigger.IRecognitionStatusCallback getDefaultImpl()> (SMS_MMS)
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)> (SMS_MMS)
<android.app.timezone.RulesState: android.app.timezone.DistroRulesVersion getStagedDistroRulesVersion()> (SMS_MMS)
<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getDataConnectionFailCause()> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int getAddedFlags()> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getAllPackageInstallerSessions()> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)> (SMS_MMS)
<android.widget.FrameLayout: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getUiSoundsStreamType()> (SMS_MMS)
<android.app.usage.UsageEvents: int describeContents()> (SMS_MMS)
<android.os.UserManager: int getUserRestrictionSource(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getVideoBytes()> (SMS_MMS)
<android.widget.Editor$PinnedPopupWindow: boolean isShowing()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.app.PendingIntent getLaunchPendingIntent()> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandDescriptor: int hashCode()> (SMS_MMS)
<android.hardware.camera2.params.OisSample: int hashCode()> (SMS_MMS)
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: int getSubtypeId()> (SMS_MMS)
<android.os.IVold$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()> (SMS_MMS)
<android.os.storage.StorageVolume: java.io.File getPathFile()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> (SMS_MMS)
<android.app.servertransaction.ActivityResultItem: int hashCode()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getStagedSessionErrorCode()> (SMS_MMS)
<android.view.InputDevice: int getKeyboardType()> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String getUidStateName(int)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.util.List getTasks(int)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.hardware.biometrics.IBiometricServiceReceiverInternal asInterface(android.os.IBinder)> (SMS_MMS)
<android.provider.DeviceConfig: java.util.List getPublicNamespaces()> (SMS_MMS)
<android.animation.ValueAnimator: long getCurrentPlayTime()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub: com.android.internal.os.IDropBoxManagerService getDefaultImpl()> (SMS_MMS)
<android.text.style.SpellCheckSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern$MarshalerBlackLevelPattern: int getNativeSize()> (SMS_MMS)
<android.view.View: float getTranslationX()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()> (SMS_MMS)
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()> (SMS_MMS)
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()> (SMS_MMS)
<android.net.wifi.nl80211.SingleScanSettings: int describeContents()> (SMS_MMS)
<android.media.MediaDrm$CryptoSession: byte[] decrypt(byte[],byte[],byte[])> (SMS_MMS)
<android.hardware.location.ContextHubInfo: java.lang.String getVendor()> (SMS_MMS)
<android.app.Notification$Builder: int access$4000(android.app.Notification$Builder,android.app.Notification$StandardTemplateParams)> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()> (SMS_MMS)
<android.telephony.RadioAccessSpecifier: int[] getBands()> (SMS_MMS)
<android.view.WindowInsets$Type: int captionBar()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: int[] getSupportedTypes()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)> (SMS_MMS)
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,int)> (SMS_MMS)
<android.view.GestureExclusionTracker$GestureExclusionViewInfo: android.view.View getView()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getNavigationBarDividerColor()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])> (SMS_MMS)
<android.os.IThermalEventListener$Stub: android.os.IThermalEventListener getDefaultImpl()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()> (SMS_MMS)
<android.telephony.UiccSlotInfo$1: android.telephony.UiccSlotInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)> (SMS_MMS)
<android.telephony.SignalStrength: int getTdScdmaDbm()> (SMS_MMS)
<android.media.AudioRecord: int getChannelConfiguration()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProcess: java.util.Set getDeniedPermissions()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isSeparateProfileChallengeAllowed(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality(int)> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: android.media.PlayerProxy getPlayerProxy()> (SMS_MMS)
<android.permission.PermissionControllerManager: void getPermissionUsages(boolean,long,java.util.concurrent.Executor,android.permission.PermissionControllerManager$OnPermissionUsageResultCallback)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.health.HealthStats: android.os.health.TimerStat getTimer(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: android.view.textclassifier.TextClassificationSessionId getSessionId()> (SMS_MMS)
<android.widget.Magnifier: int getWidth()> (SMS_MMS)
<android.os.StatFs: long getBlockSizeLong()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: android.net.Uri getDataUri()> (SMS_MMS)
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: long getItemId(int)> (SMS_MMS)
<android.app.Notification$MessagingStyle: android.app.Person getUser()> (SMS_MMS)
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstalledPackagesAsUser(int,int)> (SMS_MMS)
<android.app.timezone.RulesManager: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.Callback)> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getDataManagementIntent(java.lang.String)> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub: android.os.IUserRestrictionsListener getDefaultImpl()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: int getStatus()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: java.lang.String getGroup()> (SMS_MMS)
<android.util.jar.StrictJarManifestReader: int getEndOfMainSection()> (SMS_MMS)
<android.os.WorkSource: int hashCode()> (SMS_MMS)
<android.media.Metadata: boolean getBoolean(int)> (SMS_MMS)
<android.widget.Magnifier: android.graphics.Bitmap getContent()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService asInterface(android.os.IBinder)> (SMS_MMS)
<android.permission.PermissionManager: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.app.Fragment: android.app.SharedElementCallback getEnterTransitionCallback()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeDirectories(int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsVirtualPreload()> (SMS_MMS)
<android.view.textclassifier.TextClassification: java.lang.String getText()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ITransientNotification$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setUiccApplicationsEnabled(boolean,int)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: long getCacheSizeBytes(java.lang.String,int)> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: byte[] verifyTiedProfileChallenge(com.android.internal.widget.LockscreenCredential,long,int)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: java.util.List getUidOps(int,int[])> (SMS_MMS)
<android.telephony.CellIdentityLte: java.util.Set getAdditionalPlmns()> (SMS_MMS)
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Scene getContentScene()> (SMS_MMS)
<android.media.ExifInterface: byte[] getAttributeBytes(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getMaxDurationMsLocked(long)> (SMS_MMS)
<android.view.ViewGroup$1: android.view.MenuInflater getMenuInflater()> (SMS_MMS)
<android.location.GnssRequest: int hashCode()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$AttributedHistoricalOps getAttributedOpsAt(int)> (SMS_MMS)
<android.provider.DeviceConfig: android.provider.DeviceConfig$Properties getProperties(java.lang.String,java.lang.String[])> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Editor: int access$6800(android.widget.Editor,int)> (SMS_MMS)
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_2.CellInfo)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)> (SMS_MMS)
<android.media.AudioRecord: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int getStreamId()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.Rating: float getStarRating()> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.util.Map getChangedFields()> (SMS_MMS)
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getAppFolder()> (SMS_MMS)
<android.widget.ScrollView: float getTopFadingEdgeStrength()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getWakelockStats()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getCornerRadius()> (SMS_MMS)
<android.view.textclassifier.TextClassifier$EntityConfig: int describeContents()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAppDataIsolationWhitelistedApps()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(android.net.NetworkTemplate,long,long,int,int,int)> (SMS_MMS)
<android.media.AudioFocusRequest: android.os.Handler getOnAudioFocusChangeListenerHandler()> (SMS_MMS)
<android.os.IThermalService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IpConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()> (SMS_MMS)
<android.widget.OverScroller: int getStartX()> (SMS_MMS)
<android.app.Notification$Action: android.app.RemoteInput[] getRemoteInputs()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTextColor()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.IPrintManager$Default: java.util.List getPrintServices(int,int)> (SMS_MMS)
<android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isCapable(int,int,int)> (SMS_MMS)
<android.os.TimestampedValue: long getReferenceTimeMillis()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.lang.String getName()> (SMS_MMS)
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: void <clinit>()> (SMS_MMS)
<android.view.MotionEvent: int getClassification()> (SMS_MMS)
<android.graphics.RenderNode: int getLeft()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int describeContents()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: android.hardware.fingerprint.Fingerprint getFingerprint()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: int getIconMaxDimensions(java.lang.String,int)> (SMS_MMS)
<android.print.PrinterInfo: int getStatus()> (SMS_MMS)
<android.content.pm.DataLoaderParams: java.lang.String getArguments()> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IIncidentManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPinForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.os.Process: long getStartElapsedRealtime()> (SMS_MMS)
<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] following(int)> (SMS_MMS)
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)> (SMS_MMS)
<android.print.PrintAttributes$Margins: int hashCode()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Xfermode getXfermode()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForDevice(int,java.lang.String,long,long)> (SMS_MMS)
<android.media.VolumeShaper$Operation: int describeContents()> (SMS_MMS)
<android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor: int describeContents()> (SMS_MMS)
<android.security.keystore.ArrayUtils: byte[] subarray(byte[],int,int)> (SMS_MMS)
<android.content.pm.LauncherApps$PinItemRequest: int getRequestType()> (SMS_MMS)
<android.transition.ArcMotion: float getMinimumHorizontalAngle()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastNetworkLogRetrievalTime()> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String getNextChildId()> (SMS_MMS)
<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo findGlobalRoute(java.lang.String)> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandle()> (SMS_MMS)
<android.content.ISyncStatusObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)> (SMS_MMS)
<android.media.AudioTrack: int write(byte[],int,int)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence[] getAutofillOptions()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int exist(java.lang.String,int)> (SMS_MMS)
<android.widget.Editor: android.view.ActionMode getTextActionMode()> (SMS_MMS)
<android.widget.ScrollView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.animation.StateListAnimator$StateListAnimatorConstantState: int getChangingConfigurations()> (SMS_MMS)
<android.os.HwBinder: android.os.IHwBinder getService(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IpSecAlgorithm: int getTruncationLengthBits()> (SMS_MMS)
<android.app.job.JobInfo: long getTriggerContentMaxDelay()> (SMS_MMS)
<android.content.UndoOwner: java.lang.Object getData()> (SMS_MMS)
<android.view.View: int getFadeHeight(boolean)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.AndroidKeyStorePublicKey: byte[] getEncoded()> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.SystemServiceRegistry$96: android.view.contentcapture.ContentCaptureManager createService(android.app.ContextImpl)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()> (SMS_MMS)
<android.app.Notification$Builder: java.lang.CharSequence getHeadsUpStatusBarText(boolean)> (SMS_MMS)
<android.widget.CompoundButton: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.text.style.TypefaceSpan: int getSpanTypeId()> (SMS_MMS)
<android.os.Environment: java.lang.String getExternalStorageState()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Rect: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneSignalStrengthTimer(int)> (SMS_MMS)
<android.content.Intent: android.content.Intent getIntent(java.lang.String)> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int charToGsmExtended(char)> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCaches()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileCalendarPackagesForUser(int)> (SMS_MMS)
<android.net.ConnectivityManager: void getLatestTetheringEntitlementResult(int,boolean,java.util.concurrent.Executor,android.net.ConnectivityManager$OnTetheringEntitlementResultListener)> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getAppsBypassingDndCount(int)> (SMS_MMS)
<android.net.NetworkStats: int findIndex(java.lang.String,int,int,int,int,int,int)> (SMS_MMS)
<android.net.INetworkStatsService$Default: long getTotalStats(int)> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength(int)> (SMS_MMS)
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.view.KeyEvent: java.lang.String getCharacters()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: android.os.ParcelFileDescriptor getControlFd(long)> (SMS_MMS)
<android.drm.DrmInfoRequest: int getInfoType()> (SMS_MMS)
<android.media.MediaMetadataEditor: long getLong(int,long)> (SMS_MMS)
<android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int getModelParameter(int,int)> (SMS_MMS)
<android.content.ContextWrapper: android.os.IBinder getActivityToken()> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int hashCode()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.TextView: float getLineSpacingExtra()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: byte[] access$302(android.net.lowpan.LowpanBeaconInfo,byte[])> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.telephony.ims.aidl.IImsCallSessionListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.SmartSelectSprite$RectangleList: int access$600(android.widget.SmartSelectSprite$RectangleList)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int addSubInfoRecord(java.lang.String,int)> (SMS_MMS)
<android.os.INetworkActivityListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String)> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getConnectionManager()> (SMS_MMS)
<android.media.SyncParams: float getFrameRate()> (SMS_MMS)
<android.os.storage.VolumeRecord: java.lang.String getNormalizedFsUuid()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.ImageDecoder$ResourceSource: int getDensity()> (SMS_MMS)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri: android.net.Uri normalizeScheme()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getAddress()> (SMS_MMS)
<android.os.Environment: java.io.File getExternalStorageDirectory()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getScreenDozeCount(int)> (SMS_MMS)
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()> (SMS_MMS)
<android.companion.CompanionDeviceManager: java.util.List getAssociations()> (SMS_MMS)
<android.net.EthernetManager: android.os.Handler access$100(android.net.EthernetManager)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub$Proxy: android.os.Bundle getExtras()> (SMS_MMS)
<android.content.pm.InstallSourceInfo: java.lang.String getOriginatingPackageName()> (SMS_MMS)
<android.widget.ExpandableListView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<com.android.internal.util.AsyncService: android.os.Handler getHandler()> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()> (SMS_MMS)
<android.app.admin.PasswordMetrics$ComplexityBucket$2: int getMinimumLength(boolean)> (SMS_MMS)
<android.content.ContextWrapper: int getThemeResId()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr$1: android.telephony.CellSignalStrengthNr[] newArray(int)> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.ColorStateList: int getColorForState(int[],int)> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int getMaxSuggestionCount()> (SMS_MMS)
<android.hardware.camera2.CameraManager: java.util.Set getConcurrentCameraIds()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)> (SMS_MMS)
<android.widget.PopupWindow: android.view.View getAnchor()> (SMS_MMS)
<android.view.contentcapture.DataShareRequest: int describeContents()> (SMS_MMS)
<android.telephony.ims.RcsUceAdapter: boolean isUceSettingEnabled()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: boolean getLoggingOnly()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)> (SMS_MMS)
<android.view.View: int getAccessibilityViewId()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.IntentSender getShortcutConfigActivityIntent(java.lang.String,android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.hardware.usb.UsbManager: android.hardware.usb.UsbPortStatus getPortStatus(android.hardware.usb.UsbPort)> (SMS_MMS)
<android.media.tv.TvInputManager: java.util.List getBlockedRatings()> (SMS_MMS)
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.DiskInfo findDiskById(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: void updateServiceLocation()> (SMS_MMS)
<android.content.ContentProvider$Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: android.hardware.display.Time getNightDisplayCustomStartTime()> (SMS_MMS)
<android.content.SyncRequest: android.accounts.Account getAccount()> (SMS_MMS)
<android.content.res.GradientColor: android.content.res.ConstantState getConstantState()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getRequestDowngrade()> (SMS_MMS)
<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()> (SMS_MMS)
<android.telephony.CallQuality: boolean isRtpInactivityDetected()> (SMS_MMS)
<android.telecom.TelecomManager: boolean endCall()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)> (SMS_MMS)
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getFolder()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Default: int[] getChildSessionIds()> (SMS_MMS)
<android.content.pm.InstallSourceInfo: java.lang.String getInitiatingPackageName()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getShownStateInsets()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Magnifier: float getElevation()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: android.telephony.data.ApnSetting build()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$7: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getLastBugReportRequestTime()> (SMS_MMS)
<android.content.pm.PermissionInfo: int getProtectionFlags()> (SMS_MMS)
<android.filterfw.core.FilterPort: java.lang.String getName()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationValidityDurationSeconds()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getSnoozedNotifications()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getCid()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)> (SMS_MMS)
<android.telephony.CellIdentityWcdma$1: android.telephony.CellIdentityWcdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: java.lang.String getName()> (SMS_MMS)
<android.text.style.SubscriptSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getOpacity()> (SMS_MMS)
<android.app.admin.NetworkEvent: long getTimestamp()> (SMS_MMS)
<android.hardware.usb.UsbDevice: java.lang.String getManufacturerName()> (SMS_MMS)
<android.app.NotificationManager: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule)> (SMS_MMS)
<android.text.style.BulletSpan: int getSpanTypeId()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()> (SMS_MMS)
<android.database.CursorWindow: int getType(int,int)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()> (SMS_MMS)
<android.view.IWindowSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimCount()> (SMS_MMS)
<com.google.android.mms.pdu.CharacterSets: int getMibEnumValue(java.lang.String)> (SMS_MMS)
<android.os.FileUtils$MemoryPipe: java.io.FileDescriptor getInternalFD()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2300(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFamilyFilesResourceEntry: android.content.res.FontResourcesParser$FontFileResourceEntry[] getEntries()> (SMS_MMS)
<android.view.HandlerActionQueue: int size()> (SMS_MMS)
<android.os.Debug: int getThreadExternalAllocSize()> (SMS_MMS)
<android.telecom.PhoneAccount: java.lang.CharSequence getShortDescription()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int getLookasideSlotCount()> (SMS_MMS)
<com.android.net.IProxyService$Stub: com.android.net.IProxyService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ActivityTaskManager: int getMaxAppRecentsLimitStatic()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.NetworkScanRequest: int getSearchPeriodicity()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ViewNode getViewNode()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()> (SMS_MMS)
<android.media.session.MediaSessionManager: android.media.session.ISession createSession(android.media.session.MediaSession$CallbackStub,java.lang.String,android.os.Bundle)> (SMS_MMS)
<android.widget.FastScroller$3: java.lang.Integer get(android.view.View)> (SMS_MMS)
<android.view.Window: int getColorMode()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int changeEncryptionPassword(int,java.lang.String)> (SMS_MMS)
<android.net.NetworkCapabilities: android.net.NetworkSpecifier getNetworkSpecifier()> (SMS_MMS)
<android.media.MediaRouter$Static: android.view.Display[] getAllPresentationDisplays()> (SMS_MMS)
<android.widget.RemoteViews$OverrideTextColorsAction: int getActionTag()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int)> (SMS_MMS)
<android.content.pm.permission.SplitPermissionInfoParcelable: int hashCode()> (SMS_MMS)
<android.hardware.face.IFaceService$Default: long getAuthenticatorId(int)> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: int getStartLineHyphenEdit(int)> (SMS_MMS)
<android.app.admin.DnsEvent: java.lang.String getHostname()> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfoCdma: int hashCode()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int[] getNeededSensors()> (SMS_MMS)
<android.content.ClipboardManager: java.lang.CharSequence getText()> (SMS_MMS)
<android.widget.Editor$SuggestionHelper$SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.filterfw.core.GLFrame: int[] getInts()> (SMS_MMS)
<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.os.Bundle getSessionInfo()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getTextSelectionStart()> (SMS_MMS)
<com.android.internal.database.SortCursor: int access$002(com.android.internal.database.SortCursor,int)> (SMS_MMS)
<android.widget.Editor$HandleView: int getCursorHorizontalPosition(android.text.Layout,int)> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()> (SMS_MMS)
<android.accounts.IAccountManager$Default: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)> (SMS_MMS)
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveUnknownTime(int)> (SMS_MMS)
<android.widget.ArrayAdapter: int getCount()> (SMS_MMS)
<android.media.MediaDrm: byte[] access$300(android.media.MediaDrm,byte[],byte[],byte[],byte[])> (SMS_MMS)
<android.media.MicrophoneInfo: java.lang.String getDescription()> (SMS_MMS)
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setOpportunistic(boolean,int,java.lang.String)> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IRotationWatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Rect: int centerY()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getColorMode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.lang.String getStartPlatformVersion()> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub: android.content.pm.IPackageDeleteObserver2 asInterface(android.os.IBinder)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.util.List getSystemActions()> (SMS_MMS)
<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()> (SMS_MMS)
<android.util.EventLog$Event: int getProcessId()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: android.os.storage.CrateMetadata[] getAppCrates(java.lang.String,java.lang.String[],int)> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub$Proxy: int requestUninstall(byte[],android.app.timezone.ICallback)> (SMS_MMS)
<android.telephony.SignalStrength: int getDbm()> (SMS_MMS)
<android.telephony.UiccSlotInfo: int getCardStateInfo()> (SMS_MMS)
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeRequired()> (SMS_MMS)
<android.app.ActivityManager: java.util.Collection getSupportedLocales()> (SMS_MMS)
<android.os.UserManager: int getUserBadgeColor(int)> (SMS_MMS)
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int[] getChildSessionIds()> (SMS_MMS)
<android.text.Layout: int getOffsetForHorizontal(int,float,boolean)> (SMS_MMS)
<android.net.Uri: java.lang.String access$300()> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingLeft()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getTelephonyHistograms()> (SMS_MMS)
<android.widget.RemoteViews$AsyncApplyTask: android.widget.RemoteViews$ViewTree doInBackground(java.lang.Void[])> (SMS_MMS)
<android.service.notification.NotificationStats: int getDismissalSentiment()> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getCurrentCursorOffset()> (SMS_MMS)
<android.app.FragmentController: java.util.List retainNonConfig()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)> (SMS_MMS)
<android.location.GnssClock: double getTimeUncertaintyNanos()> (SMS_MMS)
<android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()> (SMS_MMS)
<android.view.View: float getLeftFadingEdgeStrength()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getStatusCode()> (SMS_MMS)
<android.app.NotificationChannel: int getLightColor()> (SMS_MMS)
<android.telephony.PhoneCapability$1: android.telephony.PhoneCapability[] newArray(int)> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioPresentation: int getMasteringIndication()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeRequired()> (SMS_MMS)
<android.content.pm.dex.ArtManager: boolean isRuntimeProfilingEnabled(int)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub$Proxy: long[] getAuthenticatorIds()> (SMS_MMS)
<android.net.NetworkCapabilities: java.lang.String getRequestorPackageName()> (SMS_MMS)
<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: int getUserId()> (SMS_MMS)
<android.widget.AbsListView: long[] getCheckedItemIds()> (SMS_MMS)
<android.hardware.ISerialManager$Stub: android.hardware.ISerialManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.server.SystemConfig: int[] getGlobalGids()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: int size()> (SMS_MMS)
<android.location.ICountryListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: long getChrePlatformId()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.ZygoteProcess: int getZygotePid(java.lang.String)> (SMS_MMS)
<android.view.MotionEvent: int getPointerIdBits()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getTop()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.autofill.AutofillManager: android.content.ComponentName getAutofillServiceComponentName()> (SMS_MMS)
<android.content.res.CompatResources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.ParcelFileDescriptor getStatisticsStream()> (SMS_MMS)
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: java.lang.CharSequence getText()> (SMS_MMS)
<android.view.View: int getWindowSystemUiVisibility()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getMnc()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiMulticastTime(long,int)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getUri()> (SMS_MMS)
<android.media.IRingtonePlayer$Stub$Proxy: android.os.ParcelFileDescriptor openRingtone(android.net.Uri)> (SMS_MMS)
<android.net.lowpan.LowpanCredential: byte[] access$002(android.net.lowpan.LowpanCredential,byte[])> (SMS_MMS)
<android.telecom.Logging._$$Lambda$L5F_SL2jOCUETYvgdB36aGwY50E: int get()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isNightDisplayActivated()> (SMS_MMS)
<android.net.NetworkUtils: int getImplicitNetmask(java.net.Inet4Address)> (SMS_MMS)
<android.database.sqlite.SQLiteCompatibilityWalFlags: java.lang.String getWALSyncMode()> (SMS_MMS)
<android.view.Window: android.content.res.TypedArray getWindowStyle()> (SMS_MMS)
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan build()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCarrierPrivilegeStatus(int)> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitCodePaths()> (SMS_MMS)
<android.content.IIntentReceiver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.lang.String getNextArg()> (SMS_MMS)
<android.widget.FastScroller: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: long getLastChangedTimestamp()> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration getInputConfiguration()> (SMS_MMS)
<android.content.res.Configuration: int hashCode()> (SMS_MMS)
<android.location.GpsNavigationMessageEvent: android.location.GpsNavigationMessage getNavigationMessage()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: int describeContents()> (SMS_MMS)
<android.content.pm.PackageParser$PermissionGroup: int describeContents()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: java.util.List getIds()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkPackage(int,java.lang.String)> (SMS_MMS)
<android.media.AudioManager: android.media.MicrophoneInfo microphoneInfoFromAudioDeviceInfo(android.media.AudioDeviceInfo)> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getCacheQuotaBytes(java.lang.String,int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: int getUsageSource()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCOLP()> (SMS_MMS)
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)> (SMS_MMS)
<android.view.DisplayCutout: int getSafeInsetRight()> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GnssMeasurement: int getMultipathIndicator()> (SMS_MMS)
<android.media.AudioTrack: int playerSetAuxEffectSendLevel(boolean,float)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.UiccCardInfo: android.telephony.UiccCardInfo getUnprivileged()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()> (SMS_MMS)
<android.app.WallpaperManager: int getWallpaperId(int)> (SMS_MMS)
<android.media.IMediaRouterClient$Stub: android.media.IMediaRouterClient getDefaultImpl()> (SMS_MMS)
<android.widget.AbsListView: float getBottomFadingEdgeStrength()> (SMS_MMS)
<android.content.pm.ResolveInfo: int describeContents()> (SMS_MMS)
<android.app.FragmentManagerImpl: android.app.Fragment getPrimaryNavigationFragment()> (SMS_MMS)
<android.media.Image: android.hardware.HardwareBuffer getHardwareBuffer()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean lambda$getActiveSubscriptionInfoList$1$SubscriptionManager(android.telephony.SubscriptionInfo)> (SMS_MMS)
<android.util.proto.EncodedBuffer: byte[] getBytes(int)> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo$1: void <init>()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringDaily(java.time.ZonedDateTime)> (SMS_MMS)
<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isApnMetered(int,int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: android.view.autofill.AutofillId getId()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$16: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getAveragePowerForCpuCore(int,int)> (SMS_MMS)
<android.security.AttestedKeyPair: java.security.KeyPair getKeyPair()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerLnbRequest: int getClientId()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getConversations(boolean)> (SMS_MMS)
<android.hardware.usb.UsbManager: long usbFunctionsFromString(java.lang.String)> (SMS_MMS)
<android.os.LocaleList: int getFirstMatchIndex(java.lang.String[])> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: boolean[] getKeyUsage()> (SMS_MMS)
<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.telecom.Logging.Session$Info: android.telecom.Logging.Session$Info getInfo(android.telecom.Logging.Session)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long,java.lang.String)> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub: android.app.backup.ISelectBackupTransportCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IVibratorService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getShortActivityName(android.os.IBinder,android.app.ClientTransactionHandler)> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub: android.window.IWindowContainerTransactionCallback getDefaultImpl()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub: android.companion.ICompanionDeviceManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.WindowInsets$Type: int displayCutout()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getDeletedChannelCount(java.lang.String,int)> (SMS_MMS)
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()> (SMS_MMS)
<android.location.GpsStatus: int getTimeToFirstFix()> (SMS_MMS)
<android.text.PrecomputedText: android.text.MeasuredParagraph getMeasuredParagraph(int)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub: android.view.contentcapture.IContentCaptureManager getDefaultImpl()> (SMS_MMS)
<android.print.PrinterDiscoverySession: java.util.List getPrinters()> (SMS_MMS)
<android.view.Display: int getPixelFormat()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char,boolean)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle getAdditionalInfo()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int shouldProcessCall(java.lang.String[])> (SMS_MMS)
<android.app.Notification$Style: java.lang.CharSequence getHeadsUpStatusBarText()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.inputmethodservice.ExtractEditText: boolean isFocused()> (SMS_MMS)
<android.os.Environment: java.io.File getExpandDirectory()> (SMS_MMS)
<android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener getDefaultImpl()> (SMS_MMS)
<android.media.AudioPortConfig: int format()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: long getNanoAppId()> (SMS_MMS)
<android.database.CursorWrapper: android.os.Bundle getExtras()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] access$400(android.security.keystore.recovery.KeyChainProtectionParams)> (SMS_MMS)
<android.app.trust.ITrustListener$Stub: android.app.trust.ITrustListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.trust.ITrustManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsDirectory()> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()> (SMS_MMS)
<android.app.IWallpaperManager$Default: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Builder$1: com.android.internal.graphics.palette.Palette doInBackground(android.graphics.Bitmap[])> (SMS_MMS)
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int getStatus()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Default: int getFeatureState()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub: android.telephony.ims.aidl.IImsRegistration asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: android.os.Bundle getCarrierConfigValuesForSubscriber(int)> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.ClipDescription: java.lang.String getMimeType(int)> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub: android.view.IDisplayWindowInsetsController asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$ExternalSourceDecorator: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getTargetSaturation()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getTxTimeMillis()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.os.Bundle getAssistContextExtras(int)> (SMS_MMS)
<android.os.UserManager: int getUserHandle(int)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: byte[] getXpanid()> (SMS_MMS)
<android.graphics.HardwareRenderer: int access$500(long)> (SMS_MMS)
<android.permission.PermissionManager: int checkPermission(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.ims.ImsRcsManager$AvailabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()> (SMS_MMS)
<android.net.NetworkQuotaInfo: long getEstimatedBytes()> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.SparseSetArray: android.util.ArraySet get(int)> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: int createInputStream(int,int,int)> (SMS_MMS)
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo: int hashCode()> (SMS_MMS)
<android.media.AudioManager: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.style.LineBackgroundSpan$Standard: int getSpanTypeId()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: android.view.View getRootView()> (SMS_MMS)
<android.os.Handler: java.lang.String getMessageName(android.os.Message)> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo$1: android.telephony.ImsiEncryptionInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.window.WindowContainerToken: int describeContents()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)> (SMS_MMS)
<android.view.View: boolean getFilterTouchesWhenObscured()> (SMS_MMS)
<android.security.KeyStore: byte[] get(java.lang.String,boolean)> (SMS_MMS)
<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform$MarshalerColorSpaceTransform: int getNativeSize()> (SMS_MMS)
<android.app.DirectAction: java.lang.String getId()> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()> (SMS_MMS)
<android.os.storage.DiskInfo: java.lang.String getShortDescription()> (SMS_MMS)
<android.hardware.camera2.params.ColorSpaceTransform: int hashCode()> (SMS_MMS)
<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()> (SMS_MMS)
<android.graphics.Paint: int breakText(char[],int,int,float,float[])> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$EventTiming: int getName()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: int getCurrentCursorOffset()> (SMS_MMS)
<android.os.RemoteCallbackList: int beginBroadcast()> (SMS_MMS)
<android.media.SyncParams: int getAudioAdjustMode()> (SMS_MMS)
<android.app.ContextImpl: android.os.UserHandle getUser()> (SMS_MMS)
<android.hardware.face.IFaceService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.DecorContext: android.content.res.AssetManager getAssets()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub: android.content.pm.IPackageStatsObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.telephony.ims.aidl.IRcsFeatureListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)> (SMS_MMS)
<android.os.BatteryStats$1: int compare(android.os.BatteryStats$TimerEntry,android.os.BatteryStats$TimerEntry)> (SMS_MMS)
<android.net.TrafficStats: long getMobileTxBytes()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()> (SMS_MMS)
<android.telephony.SignalStrength: int hashCode()> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: byte[] getByteArray()> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: java.lang.Object getOrThrow()> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: int getOpacity()> (SMS_MMS)
<android.security.net.config.XmlConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()> (SMS_MMS)
<android.location.GnssAntennaInfo: int describeContents()> (SMS_MMS)
<android.graphics.BlendModeColorFilter: int hashCode()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.Layout$Ellipsizer: int length()> (SMS_MMS)
<android.print.PrintJobId: int describeContents()> (SMS_MMS)
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)> (SMS_MMS)
<android.telephony.ServiceState: boolean getIsManualSelection()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: android.view.View getCustomView()> (SMS_MMS)
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getLastResumedActivityUserId()> (SMS_MMS)
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getFilename()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: android.os.LocaleList getDefaultLocales()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: android.view.WindowManager$LayoutParams getDecorViewLayoutParams()> (SMS_MMS)
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getSystemDialerPackage()> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)> (SMS_MMS)
<android.app.NotificationChannel: java.lang.CharSequence getName()> (SMS_MMS)
<android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: long lastMaintenance()> (SMS_MMS)
<android.os.IUserManager$Default: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getNumCrashes(int)> (SMS_MMS)
<android.widget.ListView: int findMotionRow(int)> (SMS_MMS)
<android.provider.Settings$Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IVoldListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<android.media.IVolumeController$Stub: android.media.IVolumeController asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getSerial()> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()> (SMS_MMS)
<android.app.prediction.AppTarget: int getRank()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$MagnificationController: float getCenterY()> (SMS_MMS)
<android.widget.RemoteViews$RemoteResponse: android.util.Pair getLaunchOptions(android.view.View)> (SMS_MMS)
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)> (SMS_MMS)
<android.os.UserManager: boolean isProfile()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesStaticLibraries()> (SMS_MMS)
<android.graphics.ImageDecoder: boolean getRequireUnpremultiplied()> (SMS_MMS)
<android.view.Display$Mode: int getPhysicalWidth()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onAddRoleHolder$1(java.lang.String,java.lang.String,int,android.app.role.IRoleController)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget._$$Lambda$GgAIoNUUH8pNRbtcqGeR1oLuEXw: java.lang.Object get()> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.view.accessibility.IAccessibilityEmbeddedConnection asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.ILocationManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.Announcement: int getType()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.media.MediaMetadata getMetadata()> (SMS_MMS)
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiSwitchClient getSwitchClient()> (SMS_MMS)
<android.text.method.CharacterPickerDialog$OptionsAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.app.Activity: int getMaxNumPictureInPictureActions()> (SMS_MMS)
<android.location.GnssReflectingPlane: double getAltitudeMeters()> (SMS_MMS)
<android.graphics.Bitmap: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.telephony.ims.RcsContactUceCapability: java.util.List getCapableExtensionTags()> (SMS_MMS)
<android.app.WallpaperColors: android.graphics.Color getSecondaryColor()> (SMS_MMS)
<android.permission.PermissionControllerManager: void getRuntimePermissionBackup(android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationListCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getUidForSharedUser(java.lang.String)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()> (SMS_MMS)
<android.os.storage.DiskInfo: int describeContents()> (SMS_MMS)
<android.view.ViewGroup: android.view.View getFocusedChild()> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getId()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: long getDurationMillis()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int,int)> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.om.IOverlayManager$Default: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconIndex(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityCdma: int getNetworkId()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: long getUserStartRealtime()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: java.lang.String getCurrentWebViewPackageName()> (SMS_MMS)
<android.content.res.TypedArray: int getInt(int,int)> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)> (SMS_MMS)
<android.app.ActivityOptions: android.window.WindowContainerToken getLaunchTaskDisplayArea()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.view.DisplayInfo getDisplayInfo(int)> (SMS_MMS)
<com.android.internal.os.Zygote: java.io.FileDescriptor getUsapPoolEventFD()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager getDefaultImpl()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: java.util.List getAmbientBrightnessStats()> (SMS_MMS)
<android.location.GpsNavigationMessage: int describeContents()> (SMS_MMS)
<android.view.View: android.view.View$ListenerInfo getListenerInfo()> (SMS_MMS)
<android.os.IUserManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.Loader: int getId()> (SMS_MMS)
<android.content.res.Resources: android.graphics.Movie getMovie(int)> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keystore.recovery.RecoveryCertPath: int describeContents()> (SMS_MMS)
<android.view.IDisplayWindowListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: int getTextSelectionStart()> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementReenterTransition()> (SMS_MMS)
<android.text.StaticLayout: int getLineForVertical(int)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: int getTextSizeUnit()> (SMS_MMS)
<android.telecom.Logging.EventManager: long lambda$dumpEventsTimeline$0(android.util.Pair)> (SMS_MMS)
<android.os.UserHandle: int getUid(int,int)> (SMS_MMS)
<android.media.AudioTrack: android.media.PlaybackParams getPlaybackParams()> (SMS_MMS)
<android.security.net.config.ResourceCertificateSource: java.util.Set getCertificates()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: int getGainFactorCount()> (SMS_MMS)
<android.widget.TextView: int getLastBaselineToBottomHeight()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> (SMS_MMS)
<android.view.KeyboardShortcutGroup: java.util.List getItems()> (SMS_MMS)
<android.text.method.CharacterPickerDialog$OptionsAdapter: long getItemId(int)> (SMS_MMS)
<android.media.RingtoneManager: android.database.Cursor getCursor()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.UndoManager: int getUpdateNestingLevel()> (SMS_MMS)
<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: long getAllowedNetworkTypes(int)> (SMS_MMS)
<android.location.Geofence: int describeContents()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: android.telephony.VoiceSpecificRegistrationInfo getVoiceSpecificInfo()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.DisplayAdjustments: int hashCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr$1: void <init>()> (SMS_MMS)
<android.os.SharedMemory: android.os.ParcelFileDescriptor getFdDup()> (SMS_MMS)
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: int getBasicConstraints()> (SMS_MMS)
<android.animation.StateListAnimator: android.animation.Animator getRunningAnimator()> (SMS_MMS)
<android.view.IWindowId$Stub$Proxy: boolean isFocused()> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: long getSecureUserId(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: float getMaxAspectRatio()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRequiredAccountType()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.Context: android.content.res.ColorStateList getColorStateList(int)> (SMS_MMS)
<com.android.net.IProxyService$Stub: com.android.net.IProxyService getDefaultImpl()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getProtocolIntFromString(java.lang.String)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getDisplayId(android.os.IBinder)> (SMS_MMS)
<android.permission.IPermissionManager$Stub: android.permission.IPermissionManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: int getTitleTextColor()> (SMS_MMS)
<android.net.NetworkStats$Entry: int hashCode()> (SMS_MMS)
<android.os.BaseBundle: java.lang.String getPairValue()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: android.hardware.biometrics.CryptoObject getCryptoObject()> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getMatchType()> (SMS_MMS)
<android.os.WorkSource$WorkChain: java.lang.String[] getTags()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.media.AudioManager: boolean isSilentMode()> (SMS_MMS)
<android.net.NetworkScorerAppData: android.content.ComponentName getEnableUseOpenWifiActivity()> (SMS_MMS)
<android.app.role.RoleManager: boolean isRoleHeld(java.lang.String)> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AbsListView: int getRightPaddingOffset()> (SMS_MMS)
<android.net.ITestNetworkManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds()> (SMS_MMS)
<android.view._$$Lambda$Y3lG3v_J32_xL0IjMGgNorZjESw: java.lang.Object get()> (SMS_MMS)
<com.android.internal.view.menu.ExpandedMenuView: int getWindowAnimations()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getMaxTextLength()> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: int hashCode()> (SMS_MMS)
<android.content.integrity.AppIntegrityManager: java.util.List getWhitelistedRuleProviders()> (SMS_MMS)
<android.provider.Settings: java.lang.String getPackageNameForUid(android.content.Context,int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.Bitmap: int getHeight()> (SMS_MMS)
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub$Proxy: android.os.Bundle retrieveSystemUpdateInfo()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.animation.AnimationHandler: long getFrameDelay()> (SMS_MMS)
<android.animation.Keyframe$IntKeyframe: android.animation.Keyframe$IntKeyframe clone()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int getDeviceId()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.view.contentcapture.ViewNode getNode()> (SMS_MMS)
<android.os.UserManager: java.util.List getProfiles(int)> (SMS_MMS)
<android.os.ISystemConfig$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.Window: java.util.List getSystemGestureExclusionRects()> (SMS_MMS)
<android.app.Activity: int getVolumeControlStream()> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams forceDefaultColor()> (SMS_MMS)
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> (SMS_MMS)
<android.net.IEthernetManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: int getAttributes()> (SMS_MMS)
<android.app.FragmentHostCallback: android.os.Handler getHandler()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)> (SMS_MMS)
<android.widget.ProgressBar: int getMinHeight()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getTac()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()> (SMS_MMS)
<android.widget.PopupWindow: boolean getOverlapAnchor()> (SMS_MMS)
<android.os.WorkSource$WorkChain: java.lang.String getAttributionTag()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getPreloadsFileCache()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()> (SMS_MMS)
<android.app.ActivityManager$ProcessErrorStateInfo: int describeContents()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)> (SMS_MMS)
<android.view.MotionEvent: float getPressure()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityConversationSenders()> (SMS_MMS)
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$2: com.android.internal.os.BatteryStatsImpl$DualTimer instantiateObject()> (SMS_MMS)
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier createTextClassificationSession(android.view.textclassifier.TextClassificationContext)> (SMS_MMS)
<android.view.IDisplayFoldListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getAllowedAssociations()> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: int getPartsNum()> (SMS_MMS)
<android.security.KeyStore: int attestKey(java.lang.String,android.security.keymaster.KeymasterArguments,android.security.keymaster.KeymasterCertificateChain)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: long getCacheQuotaBytes(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.telephony.euicc.EuiccManager: void getDownloadableSubscriptionMetadata(android.telephony.euicc.DownloadableSubscription,android.app.PendingIntent)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: android.os.Bundle getMetaData()> (SMS_MMS)
<android.content.res.AssetManager: java.util.List getLoaders()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.Choreographer$1: android.view.Choreographer initialValue()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: com.android.internal.telephony.euicc.IResetMemoryCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()> (SMS_MMS)
<android.service.vr.IVrManager$Stub: android.service.vr.IVrManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String[] getGrantedRuntimePermissions()> (SMS_MMS)
<android.graphics.drawable.RippleDrawable$RippleState: int getChangingConfigurations()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()> (SMS_MMS)
<android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: java.util.List getEnrolledFingerprints(int)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.content.pm.dex.ISnapshotRuntimeProfileCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.SubscriptionManager: void invalidateDefaultSubIdCaches()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: int findItemIndex(int)> (SMS_MMS)
<android.text.MeasuredParagraph: float getWidth(int,int)> (SMS_MMS)
<com.google.android.mms.util.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.UiccCardInfo: java.lang.String getEid()> (SMS_MMS)
<android.util.MapCollections$EntrySet: int size()> (SMS_MMS)
<android.content.IntentFilter: java.lang.String getDataScheme(int)> (SMS_MMS)
<android.os.BaseBundle: java.lang.Object deepCopyValue(java.lang.Object)> (SMS_MMS)
<android.net.TestNetworkManager: android.net.TestNetworkInterface createTapInterface()> (SMS_MMS)
<android.net.IpSecConfig: int getMarkValue()> (SMS_MMS)
<android.net.WebAddress: java.lang.String getScheme()> (SMS_MMS)
<android.telecom.PhoneAccount: int hashCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)> (SMS_MMS)
<android.media.IMediaHTTPService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isManualNetworkSelectionAllowed(int)> (SMS_MMS)
<android.animation.KeyframeSet: java.util.List getKeyframes()> (SMS_MMS)
<android.content.pm.LauncherApps: android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)> (SMS_MMS)
<android.app.ContextImpl: android.content.res.Resources getResources()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: android.app.Notification$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> (SMS_MMS)
<android.util.LauncherIcons$ShadowDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: android.os.Handler access$400(android.hardware.fingerprint.FingerprintManager)> (SMS_MMS)
<android.security.net.config.SystemCertificateSource: java.util.Set getCertificates()> (SMS_MMS)
<android.telecom.Logging.Session: android.telecom.Logging.Session$Info getExternalInfo(java.lang.String)> (SMS_MMS)
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.assist.AssistContent: android.content.Intent getIntent()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getFastDrawable()> (SMS_MMS)
<android.app.SystemServiceRegistry$81: android.service.oemlock.OemLockManager createService()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getFeatureGroups()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties getLinkProperties()> (SMS_MMS)
<android.widget.TextView: android.view.textservice.TextServicesManager getTextServicesManagerForUser()> (SMS_MMS)
<android.media.IAudioService$Default: java.util.List getAudioVolumeGroups()> (SMS_MMS)
<android.os.INetworkManagementService$Default: boolean getIpForwardingEnabled()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)> (SMS_MMS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int createInputStream(int,int,int)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: boolean isRecognitionActive(java.util.UUID)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserBadgeNoBackgroundResId(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getRunningAppProcesses()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getTasks(int)> (SMS_MMS)
<android.telephony.SubscriptionPlan: long getDataUsageTime()> (SMS_MMS)
<android.net.Uri$Part: java.lang.String getEncoded()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isHearingAidCompatibilitySupported()> (SMS_MMS)
<com.android.internal.net.VpnProfile: int hashCode()> (SMS_MMS)
<android.media.AudioManager: java.util.List getAudioProductStrategies()> (SMS_MMS)
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (SMS_MMS)
<android.media.session.MediaController: java.lang.String getPackageName()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()> (SMS_MMS)
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPart(int)> (SMS_MMS)
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance(java.util.Locale)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getEnergyConsumedMaMillis()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordQuality(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub: android.media.tv.ITvInputManagerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.connectivity.GpsBatteryStats: int describeContents()> (SMS_MMS)
<android.print.IWriteResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getUiOptions()> (SMS_MMS)
<android.graphics.Bitmap: int getGenerationId()> (SMS_MMS)
<android.net.IEthernetManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.LocusId: int describeContents()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeDeepDoze(int)> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int getStatus()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()> (SMS_MMS)
<android.telephony.ModemActivityInfo: int[] getTransmitTimeMillis()> (SMS_MMS)
<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)> (SMS_MMS)
<android.renderscript.Double4: double get(int)> (SMS_MMS)
<android.content.IIntentSender$Stub: android.content.IIntentSender getDefaultImpl()> (SMS_MMS)
<android.util.EventLog$Event: int hashCode()> (SMS_MMS)
<android.media.MediaHTTPConnection: int readAt(long,int)> (SMS_MMS)
<android.hardware.camera2.params.Capability: android.util.Size getMaxStreamingSize()> (SMS_MMS)
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()> (SMS_MMS)
<android.media.WebVttRenderingWidget$CueLayout: android.media.TextTrackCue getCue()> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int getMaxPacketLengthBytes()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getRawFixed32At(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallBarringForServiceClass(int,int)> (SMS_MMS)
<android.filterfw.core.Scheduler: boolean finished()> (SMS_MMS)
<android.app.Activity: int getRequestedOrientation()> (SMS_MMS)
<android.view.accessibility.CaptioningManager$CaptionStyle: android.view.accessibility.CaptioningManager$CaptionStyle getCustomStyle(android.content.ContentResolver)> (SMS_MMS)
<android.os.IUserManager$Default: java.util.List getProfiles(int,boolean)> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCOLP(boolean)> (SMS_MMS)
<android.media.AudioDeviceInfo: int getType()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ISearchManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.LinkProperties: java.util.List getDnsServers()> (SMS_MMS)
<android.os.UserManager: boolean isLinkedUser()> (SMS_MMS)
<android.app.Notification$MessagingStyle: java.util.List getMessages()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner,int)> (SMS_MMS)
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSave()> (SMS_MMS)
<android.graphics.text.LineBreaker: int access$700(long,int)> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.content.Intent getConfigurationIntent(java.lang.String)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)> (SMS_MMS)
<android.hardware.SensorManager: int getSensors()> (SMS_MMS)
<android.net.StaticIpConfiguration: java.lang.String getDomains()> (SMS_MMS)
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)> (SMS_MMS)
<android.net.EthernetManager: android.net.IpConfiguration getConfiguration(java.lang.String)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getCurrentTtyMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.gles_jni.EGLSurfaceImpl: int hashCode()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getDontKillApp()> (SMS_MMS)
<android.animation.PathKeyframes$1: float getFloatValue(float)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaDrm$ListenerArgs: int access$1400(android.media.MediaDrm$ListenerArgs)> (SMS_MMS)
<android.graphics.Paint: float getShadowLayerDy()> (SMS_MMS)
<android.widget.TextView$Marquee: float getGhostOffset()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int loadNanoApp(int,android.hardware.location.NanoApp)> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: int[] getChildSessionIds()> (SMS_MMS)
<android.util.LruCache: int createCount()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName(int)> (SMS_MMS)
<android.net.INetworkStatsService$Default: long getIfaceStats(java.lang.String,int)> (SMS_MMS)
<android.text.method.ArrowKeyMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)> (SMS_MMS)
<android.app.EnterTransitionCoordinator: android.transition.Transition getViewsTransition()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getCid()> (SMS_MMS)
<android.app.Notification: android.content.LocusId getLocusId()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int onUserPasswordChanged(int,java.lang.String)> (SMS_MMS)
<android.hardware.input.InputManager: int isInTabletMode()> (SMS_MMS)
<android.app.job.JobParameters: int describeContents()> (SMS_MMS)
<android.telephony.NetworkScanRequest: int getMaxSearchTime()> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)> (SMS_MMS)
<android.app.admin.FreezePeriod: java.time.MonthDay getEnd()> (SMS_MMS)
<android.telephony.SubscriptionManager: void invalidateSlotIndexCaches()> (SMS_MMS)
<com.android.internal.compat.OverrideAllowedState: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()> (SMS_MMS)
<android.hardware.lights.Light: int describeContents()> (SMS_MMS)
<android.widget.RemoteViews: int getLayoutId()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: int access$900(android.graphics.text.LineBreaker$ParagraphConstraints)> (SMS_MMS)
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> (SMS_MMS)
<android.app.role.IRoleManager$Default: java.util.List getRoleHoldersAsUser(java.lang.String,int)> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: float getSpectrumBandwidth()> (SMS_MMS)
<android.view.View: android.view.ViewRootImpl getViewRootImpl()> (SMS_MMS)
<android.hardware.display.DisplayManager: java.util.List getAmbientBrightnessStats()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: void parseMessageBody()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Default: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: java.lang.String getModelName(android.os.Bundle)> (SMS_MMS)
<android.drm.DrmUtils$ExtendedMetadataParser: java.lang.String get(java.lang.String)> (SMS_MMS)
<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidDataDirs()> (SMS_MMS)
<android.filterpacks.videosrc.MediaSource: int access$502(android.filterpacks.videosrc.MediaSource,int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: int getTag()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getWaitTime()> (SMS_MMS)
<android.view.textclassifier.TextClassificationSession: int getMaxGenerateLinksTextLength()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: java.lang.CharSequence getQueueTitle()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getAutoRevokeExemptionGrantedPackages(int)> (SMS_MMS)
<android.renderscript.Short2: short get(int)> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int hashCode()> (SMS_MMS)
<android.security.keymaster.KeymasterDefs: int getTagType(int)> (SMS_MMS)
<android.widget.Toast: int getGravity()> (SMS_MMS)
<android.graphics.Interpolator: int getKeyFrameCount()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()> (SMS_MMS)
<android.view.WindowlessWindowManager: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)> (SMS_MMS)
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$JCR0O3j9NxyNcNRXO181IWLmsto: float getInterpolation(float)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.Intent createAdminSupportIntent(java.lang.String)> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.view.InsetsController$InternalAnimationControlListener: android.view.animation.Interpolator getInterpolator()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int del(java.lang.String,int)> (SMS_MMS)
<com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String[] getAppOpPermissionPackages(java.lang.String)> (SMS_MMS)
<android.view.SurfaceView$2: android.graphics.Canvas lockHardwareCanvas()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getExtraError()> (SMS_MMS)
<android.widget.Scroller: int timePassed()> (SMS_MMS)
<android.telephony.ims.ImsSsData: java.util.List getCallForwardInfo()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getTransform(float[])> (SMS_MMS)
<android.view.VerifiedKeyEvent: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,java.lang.String)> (SMS_MMS)
<android.database.AbstractCursor: byte[] getBlob(int)> (SMS_MMS)
<android.text.Layout: float getDesiredWidthWithLimit(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic,float)> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isWifiCallingAvailable()> (SMS_MMS)
<android.graphics.fonts.Font: android.graphics.fonts.FontVariationAxis[] getAxes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isUserDataEnabled(int)> (SMS_MMS)
<android.view.ViewGroup$1: android.view.Menu getMenu()> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName)> (SMS_MMS)
<android.content.ContentValues: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Default: byte[] getBackupPayload(int)> (SMS_MMS)
<android.telephony.PinResult: int hashCode()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.net.wifi.nl80211.IInterfaceEventCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolBytes()> (SMS_MMS)
<android.view.IWindowManager$Default: int getRemoveContentMode(int)> (SMS_MMS)
<android.view.ViewGroup: java.util.ArrayList buildOrderedChildList()> (SMS_MMS)
<com.android.internal.statusbar.NotificationVisibility: int hashCode()> (SMS_MMS)
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$SoftKeyboardController getSoftKeyboardController()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcutConfigActivities(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.app.IUriGrantsManager$Stub: android.app.IUriGrantsManager getDefaultImpl()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int getId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getDevicePolicyOverrideApns(android.content.Context)> (SMS_MMS)
<android.app.contentsuggestions.ContentSelection: java.lang.String getId()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.app.role.IRoleManager$Default: java.lang.String getDefaultSmsPackage(int)> (SMS_MMS)
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub$Proxy: java.util.List getPendingReports()> (SMS_MMS)
<android.content.res.ResourcesImpl: void getValueForDensity(int,int,android.util.TypedValue,boolean)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: byte[] getBackupPayload(int)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable getIconDrawable()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: float getWidth()> (SMS_MMS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int getMaxNumberRxSpatialStreams()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Activity: android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()> (SMS_MMS)
<android.view.InsetsAnimationThreadControlRunner: android.view.WindowInsetsAnimation getAnimation()> (SMS_MMS)
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfiguration: int getHeight()> (SMS_MMS)
<android.view.IPinnedStackController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()> (SMS_MMS)
<android.animation.LayoutTransition: long getStartDelay(int)> (SMS_MMS)
<android.webkit.WebView$HitTestResult: java.lang.String getExtra()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.window.IWindowOrganizerController getWindowOrganizerController()> (SMS_MMS)
<android.app.Fragment: int getTargetRequestCode()> (SMS_MMS)
<android.filterfw.core.Filter: java.lang.String getFilterClassName()> (SMS_MMS)
<com.android.internal.app.AlertController: android.widget.ListView getListView()> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getFuzz()> (SMS_MMS)
<android.location.Geofence: float getRadius()> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.security.PrivateKey getRsaPrivateKey()> (SMS_MMS)
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.graphics.PathMeasure: float getLength()> (SMS_MMS)
<android.text.Layout: int getLineAscent(int)> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: int getMin5gRssiDbm()> (SMS_MMS)
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)> (SMS_MMS)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo findCurrentGuestUser()> (SMS_MMS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int getWidth()> (SMS_MMS)
<android.hardware.radio.RadioMetadata$Clock: int getTimezoneOffsetMinutes()> (SMS_MMS)
<android.widget.TextView: boolean getIncludeFontPadding()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAllSubInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCallStateForSlot(int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getInputEncoding()> (SMS_MMS)
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)> (SMS_MMS)
<android.text.PrecomputedText: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.security.keystore.IKeystoreCertificateChainCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getRequestedOrientation(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> (SMS_MMS)
<android.os.IInstalld$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDumpstate$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.params.InputConfiguration: int getHeight()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewGroup: android.graphics.Insets computeOpticalInsets()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion(int)> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getPackageCodePath()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: java.lang.CharSequence getHint()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int putIntFromNative(int,int)> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentProvider$Transport: android.net.Uri insert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfoWcdma: int hashCode()> (SMS_MMS)
<android.window.ITaskOrganizer$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher getDefaultImpl()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Default: int getOtaStatus(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getTranslateX()> (SMS_MMS)
<android.media.AudioFormat: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Stub: android.app.INotificationManager getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.net.lowpan.ILowpanEnergyScanCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getDefaultDataSubId()> (SMS_MMS)
<android.app.Activity: java.lang.String getCallingPackage()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.Network getNetwork()> (SMS_MMS)
<android.app.PendingIntent: android.content.Intent getIntent()> (SMS_MMS)
<android.os.Environment: java.io.File getUserSystemDirectory(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)> (SMS_MMS)
<android.app.job.JobInfo: long getEstimatedNetworkDownloadBytes()> (SMS_MMS)
<android.content.ComponentName: int hashCode()> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(int)> (SMS_MMS)
<android.view.RemoteAnimationAdapter: int getCallingPid()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int unloadSoundModel(java.util.UUID)> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getAggregatedPartialWakelockTimer()> (SMS_MMS)
<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub: android.service.voice.IVoiceInteractionSession getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int mapUid(int)> (SMS_MMS)
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityLte: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()> (SMS_MMS)
<android.text.DynamicLayout: int getLineExtra(int)> (SMS_MMS)
<android.net.RouteInfo: android.net.RouteInfo$RouteKey getRouteKey()> (SMS_MMS)
<android.media.midi.MidiInputPort: android.os.IBinder getToken()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerWidth(int)> (SMS_MMS)
<android.telephony.ModemActivityInfo: boolean isValid()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$5: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.location.ICountryDetector$Default: android.location.Country detectCountry()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> (SMS_MMS)
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getAppOpPermissionPackages(java.lang.String)> (SMS_MMS)
<android.view.InsetsState: int hashCode()> (SMS_MMS)
<android.view.autofill.AutofillManager: boolean isEnabled()> (SMS_MMS)
<android.os.SystemClock$1: long millis()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.usage.UsageStatsManager: java.util.Map getAppStandbyBuckets()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getEnableRollback()> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioAttributes: int getAllFlags()> (SMS_MMS)
<android.view.View: android.view.View getRootView()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Default: java.util.List getLights()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.AlertController: int access$800(com.android.internal.app.AlertController)> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub: android.app.IAssistDataReceiver getDefaultImpl()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getRoundIconRes()> (SMS_MMS)
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()> (SMS_MMS)
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getAllPhoneAccounts()> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Insets getInsets(android.graphics.Insets[],int)> (SMS_MMS)
<android.text.style.RelativeSizeSpan: int describeContents()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: java.lang.String[] getTransportWhitelist()> (SMS_MMS)
<android.ddm.DdmHandleAppName$Names: java.lang.String getAppName()> (SMS_MMS)
<android.app.slice.ISliceManager$Default: android.net.Uri[] getPinnedSlices(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: com.android.internal.telephony.euicc.IDeleteProfileCallback getDefaultImpl()> (SMS_MMS)
<android.location.ICountryDetector$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.Intent: android.net.Uri getData()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.widget.OverScroller: int getCurrX()> (SMS_MMS)
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)> (SMS_MMS)
<android.view.Display: java.lang.String getOwnerPackageName()> (SMS_MMS)
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()> (SMS_MMS)
<android.provider.FontRequest: java.util.List getCertificates()> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)> (SMS_MMS)
<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.PduHeaders getPduHeaders()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getFragment()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedInstrumentation: java.lang.String getTargetProcesses()> (SMS_MMS)
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeIdManager: android.view.accessibility.AccessibilityNodeIdManager getInstance()> (SMS_MMS)
<android.app.Notification$WearableExtender: int getContentAction()> (SMS_MMS)
<android.app.ActivityManager: boolean isUserRunning(int)> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.view.animation.GridLayoutAnimationController: int getDirection()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile getMediaProfile()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.timezone.RulesState: int getStagedOperationType()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstalledApplications(int,int)> (SMS_MMS)
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getHorizontalThumbDrawable()> (SMS_MMS)
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)> (SMS_MMS)
<android.app.servertransaction.PendingTransactionActions: android.app.servertransaction.PendingTransactionActions$StopInfo getStopInfo()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModules()> (SMS_MMS)
<android.view.View: int computeHorizontalScrollRange()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.ContentValues: int size()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub: android.print.IPrintServicesChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IGraphicsStats$Stub: android.view.IGraphicsStats asInterface(android.os.IBinder)> (SMS_MMS)
<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()> (SMS_MMS)
<android.os.IDumpstateListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiBatchedScanTime(int,long,int)> (SMS_MMS)
<android.content.pm.ResolveInfo: int getIconResourceInternal()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IRecoverySystem$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: java.util.List getStartedJobs()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int checkPermission(java.lang.String,int,int)> (SMS_MMS)
<android.content.pm.PackageParser$Component: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: int getSubId()> (SMS_MMS)
<android.telephony.CarrierConfigManager: boolean isConfigForIdentifiedCarrier(android.os.PersistableBundle)> (SMS_MMS)
<com.android.internal.view.menu.StandardMenuPopup: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub: android.telephony.ims.aidl.IImsRegistration getDefaultImpl()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: int access$200(android.view.inputmethod.InputMethodManager,android.view.View,int)> (SMS_MMS)
<android.graphics.Paint: int getOffsetForAdvance(char[],int,int,int,int,boolean,float)> (SMS_MMS)
<android.util.LongSparseLongArray: int indexOfKey(long)> (SMS_MMS)
<android.app.admin.FreezePeriod: java.time.MonthDay getStart()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ServiceState getServiceStateForSubscriber(int)> (SMS_MMS)
<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub: android.content.pm.IShortcutChangeCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.CellInfoGsm: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowManager$Default: float getAnimationScale(int)> (SMS_MMS)
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> (SMS_MMS)
<android.app.AppOpsManager: android.os.IBinder getClientId()> (SMS_MMS)
<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> (SMS_MMS)
<android.net.NetworkScoreManager: java.lang.String getActiveScorerPackage()> (SMS_MMS)
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getUriShortcutIconFd(android.content.pm.ShortcutInfo)> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.textclassifier.TextLanguage$Request: java.lang.CharSequence getText()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getRawVarint32Size(int)> (SMS_MMS)
<android.os.LocaleList: android.os.LocaleList getEmptyLocaleList()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub: android.companion.IFindDeviceCallback getDefaultImpl()> (SMS_MMS)
<android.text.Layout: int getHeight(boolean)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMaxZoom()> (SMS_MMS)
<android.graphics.drawable.Drawable: int getMinimumWidth()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: android.media.projection.MediaProjection getMediaProjection()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration$MarshalerHighSpeedVideoConfiguration: int getNativeSize()> (SMS_MMS)
<android.hardware.radio.ProgramSelector: long[] getVendorIds()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SmsCbMessage: android.telephony.SmsCbMessage createFromCursor(android.database.Cursor)> (SMS_MMS)
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub: android.hardware.IConsumerIrService getDefaultImpl()> (SMS_MMS)
<android.hardware.biometrics.BiometricManager: long[] getAuthenticatorIds()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: int getRscp()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma$1: android.telephony.CellIdentityTdscdma[] newArray(int)> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.SearchableInfo: int getSearchButtonText()> (SMS_MMS)
<android.app.AppOpsManager$NoteOpEvent: long getNoteTime()> (SMS_MMS)
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getImportantForAutofill()> (SMS_MMS)
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.telephony.RadioAccessFamily: int singleRafTypeFromString(java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int getChannel()> (SMS_MMS)
<android.location.Address: java.lang.String getThoroughfare()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getRsrq()> (SMS_MMS)
<android.graphics.Bitmap: int getAllocationByteCount()> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)> (SMS_MMS)
<android.telephony.TelephonyManager: void notifyUserActivity()> (SMS_MMS)
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getSleepTimeCounter()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()> (SMS_MMS)
<com.android.internal.infra.RemoteStream$1: java.io.Closeable createStream(android.os.ParcelFileDescriptor)> (SMS_MMS)
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean,android.content.pm.PackageParser$SigningDetails,int)> (SMS_MMS)
<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: java.lang.String getIncomingCommunicationBarringNumber()> (SMS_MMS)
<android.text.Layout: android.text.Layout$Alignment getAlignment()> (SMS_MMS)
<android.telephony.ClientRequestStats: int describeContents()> (SMS_MMS)
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)> (SMS_MMS)
<android.os.INetworkManagementService$Default: java.lang.String[] getDnsForwarders()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.util.List getUserRestrictionSources(java.lang.String,int)> (SMS_MMS)
<android.media.IMediaRouterClient$Stub: android.media.IMediaRouterClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.LocationManager: java.lang.String[] getBackgroundThrottlingWhitelist()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: boolean isNightModeLocked()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getTaskRootClassName()> (SMS_MMS)
<android.net.IpConfiguration: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: java.util.ArrayList getSharedElementNames()> (SMS_MMS)
<android.media.MediaCodec: java.lang.String getName()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: java.util.List getOverlayInfosForTarget(java.lang.String,int)> (SMS_MMS)
<android.view.View: android.os.Handler getHandler()> (SMS_MMS)
<android.content.pm.LauncherApps$PinItemRequest: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.content.IContentService$Default: android.content.SyncAdapterType[] getSyncAdapterTypes()> (SMS_MMS)
<android.net.nsd.INsdManager$Stub: android.net.nsd.INsdManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsRcsManager: boolean isCapable(int,int)> (SMS_MMS)
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: int getSignatureAlgorithmContentDigestAlgorithm(int)> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String[] getAllApkPaths()> (SMS_MMS)
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isOrganizationOwnedDeviceWithManagedProfile()> (SMS_MMS)
<android.hardware.camera2.utils.ConcurrentCameraIdCombination: int describeContents()> (SMS_MMS)
<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.PackageInfo)> (SMS_MMS)
<android.graphics.ImageDecoder$ImageInfo: java.lang.String getMimeType()> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.health.HealthKeys$Constants: java.lang.String getDataType()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] preceding(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getAttributions()> (SMS_MMS)
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.ILayoutResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.IFileIntegrityService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: int getIntentVerificationStatusAsUser(java.lang.String,int)> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.DisabledWallpaperManager: boolean isWallpaperSupported()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()> (SMS_MMS)
<android.view.SurfaceControl: android.os.IBinder getInternalDisplayToken()> (SMS_MMS)
<android.content.pm.PackageParser$Package: long getLatestPackageUseTimeInMills()> (SMS_MMS)
<android.media.tv.TvContentRatingSystemInfo: android.net.Uri getXmlUri()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub: com.android.ims.internal.IImsVideoCallCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean rebootRadio()> (SMS_MMS)
<android.telephony.ModemActivityInfo$TransmitPower: android.util.Range getPowerRangeInDbm()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: java.lang.String getHomeNodebName()> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.TypedValue: float getFraction(float,float)> (SMS_MMS)
<android.location.Criteria: int getPowerRequirement()> (SMS_MMS)
<android.animation.Keyframe$FloatKeyframe: float getFloatValue()> (SMS_MMS)
<android.util.proto.ProtoInputStream: int getFieldNumber()> (SMS_MMS)
<android.media.AudioMetadata$1: int hashCode()> (SMS_MMS)
<android.service.autofill.UserData: int getMinValueLength()> (SMS_MMS)
<com.android.internal.widget.BackgroundFallback: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<android.view.View$DragShadowBuilder: android.view.View getView()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: java.util.List getAudioProductStrategies()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getMemoryTrimLevel()> (SMS_MMS)
<android.telephony.NeighboringCellInfo$1: void <init>()> (SMS_MMS)
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$OwnSource: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Stub: com.android.internal.telephony.IBooleanConsumer getDefaultImpl()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setClientPrefix(java.lang.String)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getTxBytes()> (SMS_MMS)
<android.hardware.ICameraService$Default: android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds()> (SMS_MMS)
<android.widget.Editor$HandleView: int getPreferredWidth()> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentityGsm: int hashCode()> (SMS_MMS)
<android.telecom.TelecomManager: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network getNetwork()> (SMS_MMS)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: com.android.internal.telephony.euicc.IListNotificationsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.MotionEvent: float getAxisValue(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.WindowId: int describeContents()> (SMS_MMS)
<android.view.autofill.IAutoFillManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: int getLineHeight()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger: java.lang.String getCurrentOpPackageName()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.ComponentName getEffectsSuppressor()> (SMS_MMS)
<android.location.GnssClock: long getTimeNanos()> (SMS_MMS)
<android.os.health.HealthStats: long getTimerTime(int)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: int[] getPacketCounters()> (SMS_MMS)
<android.renderscript.Type: int getX()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataCapable()> (SMS_MMS)
<android.text.util.Linkify$4: int compare(android.text.util.LinkSpec,android.text.util.LinkSpec)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: java.security.cert.CertPath getTrustedHardwareCertPath()> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub: android.media.projection.IMediaProjectionCallback getDefaultImpl()> (SMS_MMS)
<android.view.View: android.view.WindowInsets getRootWindowInsets()> (SMS_MMS)
<android.telephony.RadioAccessFamily: int getNetworkTypeFromRaf(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)> (SMS_MMS)
<android.net.Uri$OpaqueUri: int getPort()> (SMS_MMS)
<android.os.Environment: java.io.File getDownloadCacheDirectory()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)> (SMS_MMS)
<android.security.keystore.ParcelableKeyGenParameterSpec: int describeContents()> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.inputmethod.EditorInfo$InitialSurroundingText: int access$100(android.view.inputmethod.EditorInfo$InitialSurroundingText)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: int postEnroll(android.os.IBinder)> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$MLDtRnX1dj1RKFdjgIsOvcQxhA0: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<android.app.servertransaction.ClientTransactionItem: int describeContents()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub: android.media.IMediaRouter2Manager asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.Debug: java.lang.String getCaller()> (SMS_MMS)
<android.view.inputmethod.InputBinding: int describeContents()> (SMS_MMS)
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()> (SMS_MMS)
<android.telephony.BarringInfo: int describeContents()> (SMS_MMS)
<android.opengl.EGLObjectHandle: int getHandle()> (SMS_MMS)
<android.text.style.BackgroundColorSpan: int getBackgroundColor()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoModeRaw()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getDefaultVrComponents()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getZygotePreloadName()> (SMS_MMS)
<android.media.MediaDrm$ListenerArgs: byte[] access$1200(android.media.MediaDrm$ListenerArgs)> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: int getDisplayIdToMirror()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: int getPropertyIndex(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.os.Environment: java.util.Collection getInternalMediaDirectories()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForUid(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: int getIndex()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getChildCount()> (SMS_MMS)
<android.text.PackedIntVector: int width()> (SMS_MMS)
<android.app.Activity: android.view.SearchEvent getSearchEvent()> (SMS_MMS)
<android.view.FrameMetrics: long getMetric(int)> (SMS_MMS)
<android.text.Layout: float getSpacingMultiplier()> (SMS_MMS)
<android.widget.TextView: android.view.textclassifier.TextClassificationManager getTextClassificationManagerForUser()> (SMS_MMS)
<android.util.KeyValueListParser$StringValue: java.lang.String getKey()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int nextToken()> (SMS_MMS)
<android.app.ActivityOptions: android.os.IRemoteCallback getAnimationFinishedListener()> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.FileSystemControlParcel: int describeContents()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getLightMutedSwatch()> (SMS_MMS)
<android.location.LocationManager: int getGnssBatchSize()> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub: android.app.IAssistDataReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellInfo: void <clinit>()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroupsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.hardware.radio.V1_0.EvdoSignalStrength: int hashCode()> (SMS_MMS)
<android.app.LoadedApk$SplitDependencyLoaderImpl: java.lang.String[] getSplitPathsForSplit(java.lang.String)> (SMS_MMS)
<android.app.SystemServiceRegistry$27: android.hardware.input.InputManager createService()> (SMS_MMS)
<android.os.PowerManager: boolean isDeviceIdleMode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanActualTime(long)> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: int getPolicyRules()> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: java.util.Map getPairedDevices()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getCaptivePortalServerUrl()> (SMS_MMS)
<android.content.pm.parsing.component.ComponentParseUtils: int getIcon(android.content.pm.parsing.component.ParsedComponent)> (SMS_MMS)
<android.media.session.PlaybackState$CustomAction: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalPss()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)> (SMS_MMS)
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getMaximumLightness()> (SMS_MMS)
<android.telephony.TelephonyManager: int[] supplyPukReportResult(java.lang.String,java.lang.String)> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.text.TextDirectionHeuristics$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)> (SMS_MMS)
<android.media.AudioManager: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(android.media.audiopolicy.AudioProductStrategy)> (SMS_MMS)
<android.provider.FontsContract$FontInfo: android.net.Uri getUri()> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int getToA()> (SMS_MMS)
<android.service.notification.Adjustment: android.os.UserHandle getUserHandle()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub: com.android.internal.net.INetworkWatchlistManager getDefaultImpl()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] getEncryptedRecoveryKeyBlob()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.KeyStore$ExportKeyPromise: java.util.concurrent.CompletableFuture getFuture()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.IConnectivityManager access$400(android.net.ConnectivityManager)> (SMS_MMS)
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()> (SMS_MMS)
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()> (SMS_MMS)
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.filterfw.geometry.Quad: float getBoundingWidth()> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)> (SMS_MMS)
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)> (SMS_MMS)
<android.widget.Toolbar: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.view.ViewRootImpl$EarlyPostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice getAppStandbyBuckets(java.lang.String,int)> (SMS_MMS)
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()> (SMS_MMS)
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementTransition()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$18: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getCurrentAudioFocus()> (SMS_MMS)
<android.transition.Transition: java.lang.String getName()> (SMS_MMS)
<android.os.IDumpstateListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int hashCode()> (SMS_MMS)
<android.app.backup.BackupManager: java.lang.CharSequence getDataManagementIntentLabel(java.lang.String)> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.WifiDisplay: int describeContents()> (SMS_MMS)
<android.telephony.ClientRequestStats: java.util.List getRequestHistograms()> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()> (SMS_MMS)
<android.media.PlayerBase$PlayerIdCard: int describeContents()> (SMS_MMS)
<android.hardware.input.TouchCalibration: float[] getAffineTransform()> (SMS_MMS)
<android.view.Display: float[] getSupportedRefreshRates()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int getRssi()> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: int hashCode()> (SMS_MMS)
<android.media.MicrophoneInfo: float getSensitivity()> (SMS_MMS)
<android.hardware.input.InputManager: android.view.InputMonitor monitorGestureInput(java.lang.String,int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String)> (SMS_MMS)
<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass[] values()> (SMS_MMS)
<android.graphics.BitmapFactory$Options: long nativeInBitmap(android.graphics.BitmapFactory$Options)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: long getStartTimeMillis()> (SMS_MMS)
<android.os.storage.VolumeRecord: int getType()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int getSupportedRoleCombinations()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getForeground()> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: int getContinuedStrokeId()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.display.Curve: float[] getY()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getAidForAppType(int,int)> (SMS_MMS)
<android.util.SparseSetArray: int keyAt(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$6: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable peekDrawable()> (SMS_MMS)
<android.view.View: java.util.List getSystemGestureExclusionRects()> (SMS_MMS)
<android.telephony.SmsCbMessage$1: void <init>()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()> (SMS_MMS)
<android.widget.RtlSpacingHelper: int getStart()> (SMS_MMS)
<android.app.AlertDialog: android.widget.Button getButton(int)> (SMS_MMS)
<com.android.server.SystemConfig: java.util.Set getWhitelistedStagedInstallers()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForUser(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.Notification$BubbleMetadata: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.content.res.CompatResources: int getColor(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getProviders()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getSecondaryUsers(android.content.ComponentName)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getHandle()> (SMS_MMS)
<android.os.StatFs: long getFreeBlocksLong()> (SMS_MMS)
<android.app.ApplicationPackageManager: int installExistingPackageAsUser(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getFragment()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String[] getAutofillHints()> (SMS_MMS)
<android.database.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.MotionEvent: int getActionMasked()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: byte[] getData()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isCapable(int,int,int)> (SMS_MMS)
<android.app.backup.BackupManager: android.os.UserHandle getUserForAncestralSerialNumber(long)> (SMS_MMS)
<android.content.IClipboard$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IInputMonitorHost$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.contentcapture.ViewNode: int[] getTextLineBaselines()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1300(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub: com.android.internal.app.IVoiceInteractorRequest getDefaultImpl()> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub$Proxy: java.util.List listModules()> (SMS_MMS)
<android.os.ShellCallback: int describeContents()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getSessionId()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse getDefaultImpl()> (SMS_MMS)
<android.drm.DrmManagerClient: int removeAllRights()> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)> (SMS_MMS)
<android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)> (SMS_MMS)
<android.os.WorkSource: java.lang.String getPackageName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: byte[] getPreferredActivityBackup(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.WallpaperInfo: android.content.ComponentName getComponent()> (SMS_MMS)
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()> (SMS_MMS)
<android.location.GpsMeasurement: byte getPrn()> (SMS_MMS)
<android.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDefaultDreamComponentForUser(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: void updateGlobalCellId()> (SMS_MMS)
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()> (SMS_MMS)
<android.view.ViewRootImpl$TrackballAxis: float collect(float,long,java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)> (SMS_MMS)
<android.content.IRestrictionsManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.TextClassificationContext: java.lang.String getPackageName()> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getSampleRates()> (SMS_MMS)
<android.graphics.RadialGradient: long createNativeInstance(long)> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: boolean isFirewallEnabled()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getColumnCount()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()> (SMS_MMS)
<android.widget.ImageView: boolean getCropToPadding()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getAutoRevokePermissions()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.Intent: java.lang.Object getExtra(java.lang.String)> (SMS_MMS)
<android.telephony.ims.feature._$$Lambda$45UAFJHVNK8x4IbCIjJCvNdDYHU: java.lang.Object get()> (SMS_MMS)
<android.content.pm.PackageParser$Service: int describeContents()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getCodeCacheDir()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: java.util.Map getProjectionMap()> (SMS_MMS)
<android.text.PackedIntVector: int size()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub: android.content.pm.IPinItemRequest asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getUiOptions()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathOffset()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect getBoundsInScreen()> (SMS_MMS)
<android.os.BaseBundle: short getShort(java.lang.String)> (SMS_MMS)
<android.content.res.CompatibilityInfo: int hashCode()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ModelParameterRange: int describeContents()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)> (SMS_MMS)
<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub: android.os.IIncidentReportStatusListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int getIconResId()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int access$000()> (SMS_MMS)
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)> (SMS_MMS)
<android.content.SyncRequest: android.os.Bundle getBundle()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSessionId: int hashCode()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getValidatedPrivateDnsServers()> (SMS_MMS)
<android.app.Notification$WearableExtender: boolean getHintContentIntentLaunchesActivity()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int getRestoreDefaultNetworkDelay(int)> (SMS_MMS)
<android.location.AbstractListenerManager$Registration: java.lang.Object getRequest()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int findSplitPoint()> (SMS_MMS)
<android.app.ExitTransitionCoordinator: android.transition.Transition getViewsTransition()> (SMS_MMS)
<android.view.WindowManagerImpl: android.graphics.Region getCurrentImeTouchRegion()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: android.os.Handler getHandler()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: java.util.Map getDeviceSpecificSettings()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ListView: android.view.View findViewWithTagInHeadersOrFooters(java.util.ArrayList,java.lang.Object)> (SMS_MMS)
<android.os.Debug: int getGlobalExternalAllocCount()> (SMS_MMS)
<android.content.res.Resources: android.graphics.Typeface getFont(android.util.TypedValue,int)> (SMS_MMS)
<android.view.WindowInsets$Type: int all()> (SMS_MMS)
<android.media.MediaMetadata: int describeContents()> (SMS_MMS)
<android.app.NotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications()> (SMS_MMS)
<android.view.VerifiedMotionEvent: int getButtonState()> (SMS_MMS)
<android.content.res.ConfigurationBoundResourceCache: java.lang.Object get(long,android.content.res.Resources$Theme)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getVolumeMax()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)> (SMS_MMS)
<android.view.IWindow$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.session.ISessionManager$Default: int getSessionPolicies(android.media.session.MediaSession$Token)> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()> (SMS_MMS)
<android.hardware.ISerialManager$Default: java.lang.String[] getSerialPorts()> (SMS_MMS)
<android.net.LocalSocketAddress$Namespace: int getId()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionPlan: int access$502(android.telephony.SubscriptionPlan,int)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: java.lang.String getWidgetVersion()> (SMS_MMS)
<android.animation.PropertyValuesHolder$1: java.lang.Object getValueAtFraction(float)> (SMS_MMS)
<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.lang.String getCallingPackage(android.os.IBinder)> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.app.role.IOnRoleHoldersChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()> (SMS_MMS)
<android.view.Window: android.view.WindowInsetsController getInsetsController()> (SMS_MMS)
<android.telephony.ims.ImsSuppServiceNotification: int describeContents()> (SMS_MMS)
<android.widget.RemoteViews: android.widget.RemoteViews getDarkTextViews()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeScreenOff(int)> (SMS_MMS)
<android.app.IProcessObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Vibrator: int getDefaultHapticFeedbackIntensity()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSessionId: int getValue()> (SMS_MMS)
<android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()> (SMS_MMS)
<android.os.Environment: java.io.File getDataPreloadsFileCacheDirectory(java.lang.String)> (SMS_MMS)
<android.content.ClipData$Item: java.lang.String getHtmlText()> (SMS_MMS)
<android.app.SearchDialog: android.os.Bundle onSaveInstanceState()> (SMS_MMS)
<android.view.IWindowId$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CellIdentityNr: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeByUuid(java.lang.String)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)> (SMS_MMS)
<android.transition.Slide$4: float getGoneX(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedService: int describeContents()> (SMS_MMS)
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> (SMS_MMS)
<com.android.internal.database.SortCursor: double getDouble(int)> (SMS_MMS)
<android.app.INotificationManager$Default: int getZenMode()> (SMS_MMS)
<android.view.Window: android.transition.Transition getReenterTransition()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.Surface: long getNextFrameNumber()> (SMS_MMS)
<android.media.MediaDrm$ListenerArgs: byte[] access$800(android.media.MediaDrm$ListenerArgs)> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: int getColumnCount()> (SMS_MMS)
<android.telephony.RadioAccessFamily$1: void <init>()> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Void)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getCurrentIndex()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: boolean getBoolean(java.lang.String,boolean,int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRcsFeature getImsRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: int getFeatureState()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isManualNetworkSelectionAllowed()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getMcc()> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.FrameStats: long getStartTimeNano()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: long getNativeInstance()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceMessageCount()> (SMS_MMS)
<android.os.health.TimerStat: int getCount()> (SMS_MMS)
<android.view.animation.Animation: float resolveSize(int,float,int,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)> (SMS_MMS)
<android.os.incremental.V4Signature: byte[] access$000(java.nio.ByteBuffer)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: java.lang.String getEntityType()> (SMS_MMS)
<android.telephony.ServiceState: android.telephony.ServiceState mergeServiceStates(android.telephony.ServiceState,android.telephony.ServiceState)> (SMS_MMS)
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IMediaRouterService$Stub: android.media.IMediaRouterService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isAnyRadioPoweredOn()> (SMS_MMS)
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.io.File,int)> (SMS_MMS)
<android.graphics.drawable.RippleForeground$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.slice.Slice: int describeContents()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getQuery()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getDeviceList()> (SMS_MMS)
<android.content.om.IOverlayManager$Default: java.util.List getOverlayInfosForTarget(java.lang.String,int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub$Proxy: java.lang.String[] getInterfaceList()> (SMS_MMS)
<android.media.session.MediaSessionManager$RemoteUserInfo: int getPid()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.SensorManager: java.util.List getSensorList(int)> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackage(java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: int access$202(android.net.lowpan.LowpanBeaconInfo,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDailyChargeLevelStepTracker()> (SMS_MMS)
<android.hardware.radio.RadioMetadata$Clock: int describeContents()> (SMS_MMS)
<android.app.PendingIntent: android.os.IBinder getWhitelistToken()> (SMS_MMS)
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedZslStillFrameNumber()> (SMS_MMS)
<android.widget.TextView: int getMinWidth()> (SMS_MMS)
<android.view.IWindowId$Stub: android.view.IWindowId getDefaultImpl()> (SMS_MMS)
<android.hardware.radio.TunerAdapter: int getProgramInformation(android.hardware.radio.RadioManager$ProgramInfo[])> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getNightDisplayColorTemperature()> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.UserManager: android.os.UserHandle createProfile(java.lang.String,java.lang.String,java.util.Set)> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponents()> (SMS_MMS)
<android.os.IncidentManager$DumpCallback: int access$100(android.os.IncidentManager$DumpCallback)> (SMS_MMS)
<android.permission.IPermissionManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()> (SMS_MMS)
<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetStartWithNavigation()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: android.content.Context getThemedContext()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: java.security.PublicKey getPublicKey()> (SMS_MMS)
<android.os.BugreportParams: int getMode()> (SMS_MMS)
<android.filterfw.core.Filter: int getNumberOfOutputs()> (SMS_MMS)
<android.media.projection.MediaProjectionInfo: android.os.UserHandle getUserHandle()> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.content.pm.dex.ISnapshotRuntimeProfileCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.WallpaperManager: int getDesiredMinimumHeight()> (SMS_MMS)
<android.os.Debug: java.lang.String[] getVmFeatureList()> (SMS_MMS)
<android.app.Notification$TvExtender: java.lang.String getChannel()> (SMS_MMS)
<android.view.View: int getDrawingCacheBackgroundColor()> (SMS_MMS)
<android.util.TimeUtils: java.util.List getTimeZoneIdsForCountryCode(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.media.AudioFocusInfo: java.lang.String getClientId()> (SMS_MMS)
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)> (SMS_MMS)
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.location.AbstractListenerManager: java.lang.Object convertKey(java.lang.Object)> (SMS_MMS)
<android.media.SubtitleData: byte[] getData()> (SMS_MMS)
<android.text.style.AccessibilityURLSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandDescriptor: int describeContents()> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getGpsSignalQualityTime(int,long,int)> (SMS_MMS)
<android.hardware.radio.ITuner$Default: java.util.Map getParameters(java.util.List)> (SMS_MMS)
<android.media.IMediaRouterService$Default: android.media.RoutingSessionInfo getSystemSessionInfo()> (SMS_MMS)
<android.media.MediaDrm: android.media.MediaDrm$CertificateRequest getCertificateRequest(int,java.lang.String)> (SMS_MMS)
<android.media.soundtrigger_middleware.ConfidenceLevel: int describeContents()> (SMS_MMS)
<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentityWcdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.app.ContextImpl: android.content.AutofillOptions getAutofillOptions()> (SMS_MMS)
<android.graphics.GraphicBuffer: int describeContents()> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsClock: double getDriftInNsPerSec()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getMergedSubscriberIds()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(int,java.lang.String)> (SMS_MMS)
<android.content.ContentResolver$1: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.util.Map getFieldsClassification()> (SMS_MMS)
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub: android.app.backup.IBackupCallback getDefaultImpl()> (SMS_MMS)
<android.media.VolumeProvider: int getMaxVolume()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()> (SMS_MMS)
<android.app.IUiModeManager$Stub: android.app.IUiModeManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource: int extraParamToByteArray(byte[],int)> (SMS_MMS)
<android.widget.Editor: float getLastUpPositionX()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: byte getChreApiMajorVersion()> (SMS_MMS)
<android.app.AlarmManager$AlarmClockInfo: int describeContents()> (SMS_MMS)
<android.util.apk.MemoryMappedFileDataSource: long size()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: boolean isTetheringStarted()> (SMS_MMS)
<android.graphics.RenderNode: float getScaleX()> (SMS_MMS)
<android.view.View: int getFadeTop(boolean)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherPss(int)> (SMS_MMS)
<android.app.Notification: java.lang.Class getNotificationStyle()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)> (SMS_MMS)
<android.content.Entity: java.util.ArrayList getSubValues()> (SMS_MMS)
<android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getAbsoluteStart()> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCorks()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int registerNetworkFactory(android.os.Messenger,java.lang.String)> (SMS_MMS)
<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)> (SMS_MMS)
<android.app.NotificationChannel: int describeContents()> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> (SMS_MMS)
<android.widget.AdapterView: int getFirstVisiblePosition()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)> (SMS_MMS)
<android.os.CoolingDevice: int hashCode()> (SMS_MMS)
<android.location.IGnssStatusListener$Stub: android.location.IGnssStatusListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.RcsContactUceCapability: android.net.Uri getServiceUri(long)> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)> (SMS_MMS)
<android.app.job.JobWorkItem: android.content.Intent getIntent()> (SMS_MMS)
<android.security.keystore.recovery.KeyDerivationParams: byte[] getSalt()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: int getInitOrder()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementReturnTransition()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isEmail()> (SMS_MMS)
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telecom.VideoProfile$CameraCapabilities: int getWidth()> (SMS_MMS)
<android.view.SurfaceView$2: android.graphics.Canvas lockCanvas()> (SMS_MMS)
<android.media.MediaCas$Session: byte[] getSessionId()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int decryptStorage(java.lang.String)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: int getProtectionFlags()> (SMS_MMS)
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> (SMS_MMS)
<android.view.View: android.content.res.ColorStateList getForegroundTintList()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: float getAlpha()> (SMS_MMS)
<android.hardware.location.NanoAppMessage: byte[] getMessageBody()> (SMS_MMS)
<android.net.WebAddress: java.lang.String getHost()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getMeasuredState()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)> (SMS_MMS)
<android.telecom.Logging.SessionManager: long lambda$new$1$SessionManager()> (SMS_MMS)
<android.widget.TextView: int getCompoundDrawablePadding()> (SMS_MMS)
<android.view.SurfaceControl: android.os.IBinder getPhysicalDisplayToken(long)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()> (SMS_MMS)
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()> (SMS_MMS)
<android.media.MediaRoute2Info: int getType()> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: int queryCapabilityStatus()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub: android.net.lowpan.ILowpanManagerListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioRecord: int getChannelCount()> (SMS_MMS)
<android.telephony.CallAttributes$1: void <init>()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()> (SMS_MMS)
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<android.media.MediaFormat: java.lang.Number getNumber(java.lang.String)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: int getReportAllowed()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.util.Collection getTargets()> (SMS_MMS)
<android.app.IActivityController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub: android.hardware.radio.IRadioService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IVoldListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.os.IBinder startOrGetTestNetworkService()> (SMS_MMS)
<android.media.tv.DvbDeviceInfo: int describeContents()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setAllCarriersAllowed()> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: long getChangedSince()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: android.util.Size getMinSize(android.util.Size,android.util.Size)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)> (SMS_MMS)
<android.service.notification.NotificationListenerService: java.util.List getNotificationChannels(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.app.SystemServiceRegistry$118: java.lang.Object createService()> (SMS_MMS)
<android.graphics.Paint: float getUnderlineThickness()> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse$1: android.telephony.IccOpenLogicalChannelResponse createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)> (SMS_MMS)
<android.service.notification.IConditionProvider$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.animation.BaseInterpolator: int getChangingConfiguration()> (SMS_MMS)
<android.widget.Button: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getAuthType()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4500()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.lang.String[] getBackgroundThrottlingWhitelist()> (SMS_MMS)
<com.android.internal.view.FloatingActionMode: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.graphics.fonts.FontStyle: int hashCode()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: android.graphics.Typeface getTypeface()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.LauncherApps: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.os.ISystemConfig$Stub$Proxy: java.util.List getDisabledUntilUsedPreinstalledCarrierApps()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub$Proxy: int revokeChallenge(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedMainComponent: int getOrder()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()> (SMS_MMS)
<android.location.GnssRequest: int describeContents()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: int getClosestPreExecutionState(android.app.ActivityThread$ActivityClientRecord,int)> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getResponseType()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: int getEnd()> (SMS_MMS)
<android.hardware.iris.IIrisService$Stub: android.hardware.iris.IIrisService getDefaultImpl()> (SMS_MMS)
<android.net.NetworkProvider: int getProviderId()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub: android.webkit.IWebViewUpdateService getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)> (SMS_MMS)
<android.view.GhostView: android.view.GhostView getGhost(android.view.View)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationHistory getNotificationHistory(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: int hashCode()> (SMS_MMS)
<android.widget.LinearLayout: int getLocationOffset(android.view.View)> (SMS_MMS)
<android.text.MeasuredParagraph: float getWholeWidth()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)> (SMS_MMS)
<android.hardware.ICamera$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isManagedKiosk()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Ikev2VpnProfile: int getMaxMtu()> (SMS_MMS)
<com.android.internal.infra.AndroidFuture: int describeContents()> (SMS_MMS)
<android.location.GpsNavigationMessageEvent: int describeContents()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: java.lang.String getSubscriptionPlansOwner(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)> (SMS_MMS)
<android.content.ClipData: android.graphics.Bitmap getIcon()> (SMS_MMS)
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int loadModel(android.media.soundtrigger_middleware.SoundModel)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.PowerManager: boolean isScreenOn()> (SMS_MMS)
<android.content.res.AssetManager$AssetInputStream: int read()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastForegroundProxyInfo(int)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Organization: int getTypeLabelResource(int)> (SMS_MMS)
<android.webkit.WebView: android.webkit.WebChromeClient getWebChromeClient()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getAlpha()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)> (SMS_MMS)
<android.media.AudioManager: boolean isAudioServerRunning()> (SMS_MMS)
<android.content.pm.Signature: android.content.pm.Signature[] getChainSignatures()> (SMS_MMS)
<android.telephony._$$Lambda$CarrierRestrictionRules$LmZXhiwgp1w_MAHEuZsMgdCVMiU: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.view.MotionEvent: float getSize()> (SMS_MMS)
<com.android.internal.widget.ScrollBarUtils: int getThumbLength(int,int,int,int)> (SMS_MMS)
<android.view.accessibility.CaptioningManager$CaptionStyle: android.graphics.Typeface getTypeface()> (SMS_MMS)
<android.media.MediaTimestamp: long getAnchorSystemNanoTime()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: boolean isSaturationActivated()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Proxy: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: void resetCarrierKeysForImsiEncryption()> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.app.timezonedetector.ITimeZoneDetectorService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.NotificationManager: boolean isNotificationPolicyAccessGranted()> (SMS_MMS)
<android.app.timezone.RulesState: int getDistroStatus()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: int getCarrierId()> (SMS_MMS)
<android.app.slice.SliceManager: java.util.Set getPinnedSpecs(android.net.Uri)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: float getPixelSize()> (SMS_MMS)
<android.os.IDumpstate$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub: android.hardware.location.IContextHubTransactionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.SubscriptionPlan: int[] getNetworkTypes()> (SMS_MMS)
<android.view.LayoutInflater: android.content.Context getContext()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getReadPermission()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> (SMS_MMS)
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowedByUser()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.CursorWrapper: boolean isBeforeFirst()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.RadioAccessFamily: int getPhoneId()> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: java.lang.String getDataMimeType()> (SMS_MMS)
<android.net.LocalSocketImpl$SocketInputStream: int available()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: int hashCode()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: long getmtime(java.lang.String,int)> (SMS_MMS)
<com.android.internal.os.Zygote: int getUsapPoolCount()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: float getStoppedPowerDrawMw()> (SMS_MMS)
<android.net.ITestNetworkManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getHardwareList()> (SMS_MMS)
<android.media.session.PlaybackState: android.os.Bundle getExtras()> (SMS_MMS)
<android.text.style.TypefaceSpan: java.lang.String getFamily()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getCurrentFailedPasswordAttempts(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> (SMS_MMS)
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String getCaptivePortalServerUrl()> (SMS_MMS)
<android.view.View: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub: com.android.internal.policy.IShortcutService asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: android.os.LocaleList getDefaultLocales()> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()> (SMS_MMS)
<android.location.ILocationManager$Default: java.util.List getTestProviderCurrentRequests(java.lang.String)> (SMS_MMS)
<android.renderscript.RenderScript: android.content.Context getApplicationContext()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: int getCallTechnologies()> (SMS_MMS)
<android.content.res.AssetManager: int access$800(long,byte[],int,int)> (SMS_MMS)
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsg()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.permission.PermissionManager: int access$100(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isApnMetered(int,int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int describeContents()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isManualNetworkSelectionAllowed(int)> (SMS_MMS)
<android.net.IpSecConfig: int getEncapSocketResourceId()> (SMS_MMS)
<android.location.LocationManager: java.lang.String getGnssHardwareModelName()> (SMS_MMS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry: android.hardware.camera2.legacy.BurstHolder getBurstHolder()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()> (SMS_MMS)
<android.app.ActivityThread: android.app.servertransaction.TransactionExecutor getTransactionExecutor()> (SMS_MMS)
<android.transition.ChangeTransform$PathAnimatorMatrix: android.graphics.Matrix getMatrix()> (SMS_MMS)
<android.os.DropBoxManager$Entry: java.lang.String getTag()> (SMS_MMS)
<android.app.WallpaperInfo: java.lang.String getServiceName()> (SMS_MMS)
<android.content.pm.ShortcutManager: int getMaxShortcutCountForActivity()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean nvWriteItem(int,java.lang.String)> (SMS_MMS)
<android.os.Binder: int getCallingUidOrThrow()> (SMS_MMS)
<android.hardware.HardwareBuffer: long getUsage()> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: javax.security.auth.x500.X500Principal getCertificateSubject()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)> (SMS_MMS)
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)> (SMS_MMS)
<android.app.UiModeManager: int getCurrentModeType()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.graphics.Rect getTaskBounds(int)> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.Magnifier: android.graphics.Bitmap getOriginalContent()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub: android.os.IVibratorStateListener getDefaultImpl()> (SMS_MMS)
<android.app.IActivityController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.WindowManagerGlobal: java.lang.String[] getViewRootNames()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback getDefaultImpl()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub: android.companion.IFindDeviceCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.IInstalld$Stub: android.os.IInstalld getDefaultImpl()> (SMS_MMS)
<android.view.ImeFocusController: android.view.View getNextServedView()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: int describeContents()> (SMS_MMS)
<android.util.KeyValueListParser$IntValue: int getValue()> (SMS_MMS)
<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub: android.hardware.IConsumerIrService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: int getId()> (SMS_MMS)
<android.os.PowerManager: boolean isRebootingUserspaceSupported()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectAmbient()> (SMS_MMS)
<android.hardware.radio.V1_5.OptionalCsgInfo: int hashCode()> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getListSelection()> (SMS_MMS)
<android.app.WindowConfiguration: int compareTo(java.lang.Object)> (SMS_MMS)
<android.text.Layout$SpannedEllipsizer: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityTransitionState: int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator)> (SMS_MMS)
<android.view.Window: int getForcedWindowFlags()> (SMS_MMS)
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getPsc()> (SMS_MMS)
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> (SMS_MMS)
<android.app.NotificationManager: android.service.notification.ZenModeConfig getZenModeConfig()> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub: com.android.ims.internal.IImsVideoCallCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IWindowSessionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.print.PrinterInfo: int describeContents()> (SMS_MMS)
<android.view.textclassifier.ConversationAction: java.lang.String getType()> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.IProcessObserver$Stub: android.app.IProcessObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.Environment: java.io.File getSystemExtDirectory()> (SMS_MMS)
<android.renderscript.Element: java.lang.String getSubElementName(int)> (SMS_MMS)
<android.location.IGnssStatusListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SignalStrength: int getGsmAsuLevel()> (SMS_MMS)
<android.widget.AbsListView: boolean isVerticalScrollBarHidden()> (SMS_MMS)
<android.net.ConnectivityManager: int checkMobileProvisioning(int)> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getFreeSizeKb()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean,int)> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsInstantApp(boolean)> (SMS_MMS)
<android.view.View: float getTransitionAlpha()> (SMS_MMS)
<android.util.SparseLongArray: int indexOfValue(long)> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentityTdscdma: int hashCode()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.telephony.ims.aidl.IImsSmsListener getDefaultImpl()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isPackageSuspended(java.lang.String)> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.ProgramSelector$Identifier: int getType()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getTasks(int)> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: boolean isShowing()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> (SMS_MMS)
<android.permission.IPermissionController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String[] getSerialPorts()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageClass()> (SMS_MMS)
<android.telephony.CellIdentityNr: int getChannelNumber()> (SMS_MMS)
<android.content.pm.Signature: int getFlags()> (SMS_MMS)
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Im: int getTypeLabelResource(int)> (SMS_MMS)
<android.telephony.CellIdentityTdscdma$1: android.telephony.CellIdentityTdscdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: int getTvInputState(java.lang.String,int)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewRootImpl: int getLastTouchSource()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int)> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getUrgency()> (SMS_MMS)
<android.graphics.drawable.TransitionDrawable$TransitionState: int getChangingConfigurations()> (SMS_MMS)
<android.app.UriGrantsManager: android.app.IUriGrantsManager getService()> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityController$Default: int appEarlyNotResponding(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Proxy: int hashCode()> (SMS_MMS)
<android.view.VelocityTracker: float getXVelocity()> (SMS_MMS)
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> (SMS_MMS)
<android.view.View: float getTopFadingEdgeStrength()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.telephony.ims.aidl.IRcsUceControllerCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.media.SyncParams: int getSyncSource()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()> (SMS_MMS)
<android.app.Notification$Action: android.app.Notification$Action clone()> (SMS_MMS)
<android.location.Criteria: int access$102(android.location.Criteria,int)> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub: android.os.IIncidentDumpCallback getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: boolean isConnected()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: int describeContents()> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener getDefaultImpl()> (SMS_MMS)
<android.text.AutoGrowArray$ByteArray: int size()> (SMS_MMS)
<android.app.trust.ITrustManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AsyncNotedAppOp: int getNotingUid()> (SMS_MMS)
<android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager$RemoteUserInfo)> (SMS_MMS)
<android.app.job.JobParameters: int[] getJobStopReasonCodes()> (SMS_MMS)
<android.app.job.JobInfo: android.content.ComponentName getService()> (SMS_MMS)
<android.widget.AbsListView: int getChoiceMode()> (SMS_MMS)
<android.text.Layout: int getEndHyphenEdit(int)> (SMS_MMS)
<android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource: int getDataSize()> (SMS_MMS)
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()> (SMS_MMS)
<android.view.IInputMonitorHost$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IUriGrantsManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.VoiceSpecificRegistrationInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$7: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.hardware.ICameraService$Default: java.lang.String getLegacyParameters(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getBluetoothContactSharingDisabledForUser(int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String[] setDistractingPackageRestrictions(java.lang.String[],int)> (SMS_MMS)
<android.telephony.SmsMessage: long getTimestampMillis()> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.InputStream getBufferedInputStream()> (SMS_MMS)
<android.os.IThermalService$Stub: android.os.IThermalService asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.result.ParseTypeImpl: int getErrorCode()> (SMS_MMS)
<android.view.MotionEvent: float getTouchMajor()> (SMS_MMS)
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$Callback,android.os.Handler)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getAudioTurnedOnTimer()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioManager: java.util.List getActiveRecordingConfigurations()> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma$1: void <init>()> (SMS_MMS)
<android.content.pm.PackageParser: int getActivityConfigChanges(int,int)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getNumPacketsRx()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: android.app.AppOpsManager$HistoricalPackageOps getPackageOps(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDoze()> (SMS_MMS)
<android.media.IAudioService$Default: int[] getSupportedSystemUsages()> (SMS_MMS)
<android.widget.RemoteViews$ReflectionAction: java.lang.String getUniqueKey()> (SMS_MMS)
<android.os.SystemUpdateManager: android.os.Bundle retrieveSystemUpdateInfo()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.SyncNotedAppOp: int hashCode()> (SMS_MMS)
<android.text.StaticLayout: int getParagraphDirection(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getServicesSystemSharedLibraryPackageName()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getAttentionServicePackageName()> (SMS_MMS)
<android.app.usage.StorageStatsManager: boolean isReservedSupported(java.util.UUID)> (SMS_MMS)
<android.widget.TextView: int getFirstBaselineToTopHeight()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getEventType()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledProvidersForProfile(int,int,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: int getSessionType()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getTransform()> (SMS_MMS)
<android.os.IUserManager$Default: java.lang.String getSeedAccountName()> (SMS_MMS)
<android.text.DynamicLayout: int getParagraphDirection(int)> (SMS_MMS)
<android.content.res.Resources$Theme: android.content.res.Resources getResources()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)> (SMS_MMS)
<android.media.AudioTrack: int write(float[],int,int,int)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener getDefaultImpl()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.Notification$Action$WearableExtender: boolean getHintLaunchesActivity()> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfoLte: int hashCode()> (SMS_MMS)
<android.os.IncidentManager$PendingReport: android.net.Uri getUri()> (SMS_MMS)
<com.android.internal.util.StateMachine$SmHandler: int access$2200(com.android.internal.util.StateMachine$SmHandler)> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()> (SMS_MMS)
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace getSource()> (SMS_MMS)
<android.os.BatteryProperty: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxKeyphrases()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: void <clinit>()> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<android.graphics.text.MeasuredText: int getMemoryUsage()> (SMS_MMS)
<android.text.DynamicLayout: int getLineDescent(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)> (SMS_MMS)
<android.app.slice.SliceItem: long getTimestamp()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice getAppStandbyBuckets(java.lang.String,int)> (SMS_MMS)
<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)> (SMS_MMS)
<android.os.Vibrator: int getDefaultNotificationVibrationIntensity()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: int numJpegTargets()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int getRestoreDefaultNetworkDelay(int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int hashCode()> (SMS_MMS)
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.Sensor: int getMaxLengthValuesArray(android.hardware.Sensor,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getEnabledSubscriptionId(int)> (SMS_MMS)
<android.app.TaskInfo: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(boolean)> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.ParcelFileDescriptor: int detachFd()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()> (SMS_MMS)
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()> (SMS_MMS)
<android.telephony.SignalStrength: int getLteLevel()> (SMS_MMS)
<android.telephony.SignalStrength$1: android.telephony.SignalStrength[] newArray(int)> (SMS_MMS)
<android.media.ExifInterface: byte[] getThumbnailBytes()> (SMS_MMS)
<android.view.View: int getImportantForContentCapture()> (SMS_MMS)
<android.view.InputEventReceiver: android.os.IBinder getToken()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getSystemPowerWhitelist()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAllStackInfosOnDisplay(int)> (SMS_MMS)
<android.location.Country: java.lang.String getCountryIso()> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getSmsApplicationData(java.lang.String,android.content.Context)> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub: com.android.ims.internal.IImsEcbm asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo1Callback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.PointerIcon: int describeContents()> (SMS_MMS)
<android.widget.AbsListView: int getVerticalScrollbarWidth()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.content.UndoManager: java.lang.CharSequence getRedoLabel(android.content.UndoOwner[])> (SMS_MMS)
<android.widget.AbsListView: int getBottomPaddingOffset()> (SMS_MMS)
<android.app.PendingIntent: java.lang.String getTag(java.lang.String)> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: java.util.Date getDate(int)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBitrateRange()> (SMS_MMS)
<android.metrics.LogMaker: android.util.SparseArray getEntries()> (SMS_MMS)
<android.media.AudioFormat: int getSampleRate()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int getFeatureState()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CallForwardingInfo getCallForwarding(int,int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isApplicationOnUicc(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: android.media.RoutingSessionInfo getSystemSessionInfo()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int getLowerLimit()> (SMS_MMS)
<android.app.Notification$Style: android.widget.RemoteViews makeBigContentView()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)> (SMS_MMS)
<android.view.ThreadedRenderer: int getWidth()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.graphics.ColorSpace getPreferredWideGamutColorSpace()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtypeArray: int getCount()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowed(java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()> (SMS_MMS)
<android.telephony._$$Lambda$Vaai8Sbs2IpNs9Mr8tx6u3YoWp4: java.lang.Object applyOrThrow(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.os.VibrationEffect: android.os.VibrationEffect get(int)> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: int describeContents()> (SMS_MMS)
<android.content.IntentFilter: int countStaticDataTypes()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub: com.android.internal.app.IAppOpsCallback getDefaultImpl()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.om.OverlayInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.location.Location: float getSpeed()> (SMS_MMS)
<android.os.RecoverySystem$1: int read(byte[],int,int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmapAsUser(int,boolean)> (SMS_MMS)
<android.net.IEthernetServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.SubscriptionManager: void removeSubscriptionInfoRecord(java.lang.String,int)> (SMS_MMS)
<android.media.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VPath: java.lang.String getPathName()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getCodePath()> (SMS_MMS)
<android.graphics.drawable.Drawable: int getChangingConfigurations()> (SMS_MMS)
<android.view.KeyCharacterMap: char getMatch(int,char[],int)> (SMS_MMS)
<com.android.internal.os.RpmStats: com.android.internal.os.RpmStats$PowerStatePlatformSleepState getAndUpdatePlatformState(java.lang.String,long,int)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$302(android.hardware.camera2.legacy.LegacyFocusStateMapper,int)> (SMS_MMS)
<android.telephony.CellInfoTdscdma: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.telephony.CellConfigLte$1: void <init>()> (SMS_MMS)
<android.app.IWindowToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.Display$HdrCapabilities: int[] getSupportedHdrTypes()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: com.android.internal.app.IVoiceInteractionSessionShowCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfoCdma: int hashCode()> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getYOffsetMm()> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceState: int access$100(android.hardware.camera2.legacy.CameraDeviceState)> (SMS_MMS)
<android.app.Notification$BubbleMetadata: java.lang.String getShortcutId()> (SMS_MMS)
<android.view.accessibility.AccessibilityCache: android.util.SparseArray getWindowsOnAllDisplays()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.StorageManager$ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int)> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: android.graphics.Rect getEnterPipBounds()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getPackageScreenCompatMode(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getSecondaryUsers(android.content.ComponentName)> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioTrack: int write(short[],int,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getInt(java.lang.String)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: boolean isInEmergencyCall()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getScheme()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub: android.os.IIncidentCompanion getDefaultImpl()> (SMS_MMS)
<android.content.res.AssetManager$AssetInputStream: long getNativeAsset()> (SMS_MMS)
<android.media.AudioManager: int[] getSupportedSystemUsages()> (SMS_MMS)
<android.net.NetworkCapabilities: int[] getUnwantedCapabilities()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub$Proxy: java.util.List getLights()> (SMS_MMS)
<android.util.KeyValueListParser$FloatValue: float getDefaultValue()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: boolean getSystemAudioMode()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection getDefaultImpl()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int getLegacyStreamTypeForStrategyWithAudioAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.net.NetworkAgentConfig: java.lang.String getLegacyExtraInfo()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: boolean isValid()> (SMS_MMS)
<android.view.ViewGroup: int getLayoutMode()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: float getTextSize()> (SMS_MMS)
<android.view.MotionEvent: float getToolMajor(int)> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo,android.os.storage.StorageManager,android.content.pm.IPackageManager)> (SMS_MMS)
<android.media.audiopolicy.AudioMix: int getMixType()> (SMS_MMS)
<com.android.internal.util.AsyncService: android.os.IBinder onBind(android.content.Intent)> (SMS_MMS)
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForPackage(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.media.ExifInterface: boolean getLatLong(float[])> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.utils.SubmitInfo: int getRequestId()> (SMS_MMS)
<android.service.notification.ZenModeConfig: android.content.ComponentName getEventConditionProvider()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IAssistDataReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.marshal.Marshaler: int getNativeType()> (SMS_MMS)
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: android.net.wifi.nl80211.IWifiScannerImpl getWifiScannerImpl()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUser(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.content.ContentResolver$UriResultListener: android.net.Uri getResultFromBundle(android.os.Bundle)> (SMS_MMS)
<android.view.Window: android.transition.Transition getEnterTransition()> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getMin()> (SMS_MMS)
<android.hardware.SensorManager: android.hardware.SensorDirectChannel createDirectChannel(android.hardware.HardwareBuffer)> (SMS_MMS)
<com.android.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()> (SMS_MMS)
<android.hardware.radio.TunerAdapter: android.graphics.Bitmap getMetadataImage(int)> (SMS_MMS)
<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: android.util.SparseArray getAllUidCpuFreqTimeMs()> (SMS_MMS)
<android.os.health.HealthStats: int getMeasurementKeyAt(int)> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.animation.LayoutAnimationController: int getOrder()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getFullPowerWhitelist()> (SMS_MMS)
<android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.view.View$12: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.graphics.Paint: int getBidiFlags()> (SMS_MMS)
<android.content.pm.PackageUserState: java.lang.String[] getAllOverlayPaths()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.Spinner: int getDropDownVerticalOffset()> (SMS_MMS)
<android.net.wifi.nl80211.ChannelSettings: int hashCode()> (SMS_MMS)
<android.media.MediaCodecInfo$EncoderCapabilities: android.util.Range getQualityRange()> (SMS_MMS)
<android.net.TelephonyNetworkSpecifier: int getSubscriptionId()> (SMS_MMS)
<android.app.prediction.AppTargetId: int hashCode()> (SMS_MMS)
<com.android.internal.app.AlertController: android.widget.Button getButton(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getImsProvisioningInt(int,int)> (SMS_MMS)
<android.security.net.config.WfaCertificateSource: java.util.Set getCertificates()> (SMS_MMS)
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> (SMS_MMS)
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)> (SMS_MMS)
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)> (SMS_MMS)
<android.filterfw.core.Frame: long getTimestamp()> (SMS_MMS)
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int queryCapabilityStatus()> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub$Proxy: int[] getCarrierFrequencies()> (SMS_MMS)
<android.os.UserManager: android.graphics.Bitmap getUserIcon()> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: int getFirstWidthLineCount()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int describeContents()> (SMS_MMS)
<android.location.GnssClock: double getBiasNanos()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getDepth()> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: android.view.contentcapture.DataShareWriteAdapter getAdapter(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object getPhysicalCameraKey(android.hardware.camera2.CaptureRequest$Key,java.lang.String)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Default: int enableTargetSdkChanges(java.lang.String,int)> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: java.lang.String getHostPackageName()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)> (SMS_MMS)
<android.graphics.drawable.AnimationDrawable: int getDuration(int)> (SMS_MMS)
<android.content.res.ResourcesImpl: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> (SMS_MMS)
<android.media.session.PlaybackState: long getPosition()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String)> (SMS_MMS)
<android.window.IWindowContainerToken$Stub: android.window.IWindowContainerToken getDefaultImpl()> (SMS_MMS)
<android.os.Environment: java.io.File getProductServicesDirectory()> (SMS_MMS)
<android.view.SurfaceControl: int getActiveConfig(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)> (SMS_MMS)
<android.view.IWindow$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.SubtitleData: int getTrackIndex()> (SMS_MMS)
<android.os.Bundle: android.util.Size getSize(java.lang.String)> (SMS_MMS)
<android.media.AudioRecord: int getNotificationMarkerPosition()> (SMS_MMS)
<android.os.IRemoteCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getOriginatingUid()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()> (SMS_MMS)
<android.webkit.WebView: android.os.Looper getWebViewLooper()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getTime()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHolder: int getRequestId()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)> (SMS_MMS)
<android.hardware.camera2.CameraCaptureSession: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: int[] getRecoverySecretTypes()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)> (SMS_MMS)
<android.telephony.SmsMessage: int getIndexOnSim()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.security.GateKeeper: long getSecureUserId()> (SMS_MMS)
<android.os.CoolingDevice: long getValue()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int attestDeviceIds(android.security.keystore.IKeystoreCertificateChainCallback,android.security.keymaster.KeymasterArguments)> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: java.util.List getSurfaces()> (SMS_MMS)
<android.view.WindowAnimationFrameStats: int describeContents()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getFullBackupContent()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()> (SMS_MMS)
<android.widget.Magnifier: int getSourceHeight()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getLocusId()> (SMS_MMS)
<android.app.ActionBar: float getElevation()> (SMS_MMS)
<android.text.PrecomputedText: int findParaIndex(int)> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> (SMS_MMS)
<android.widget.TextView: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.view.KeyCharacterMap: char getMatch(int,char[])> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub getDefaultImpl()> (SMS_MMS)
<android.telephony.CellSignalStrength: int getEcNoDbFromAsu(int)> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub$Proxy: android.net.NetworkStats getTetherStats(int)> (SMS_MMS)
<android.os.UserManager: java.util.List getAllProfiles()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer: java.util.List getQuantizedColors()> (SMS_MMS)
<android.media.midi.MidiInputPort: java.io.FileDescriptor claimFileDescriptor()> (SMS_MMS)
<android.os.MemoryFile: java.io.InputStream getInputStream()> (SMS_MMS)
<android.app.DirectAction: int hashCode()> (SMS_MMS)
<android.widget.TextView: float getLineSpacingMultiplier()> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.health.HealthStats: int getTimersKeyCount()> (SMS_MMS)
<android.graphics.drawable.Icon: java.lang.String getResPackage()> (SMS_MMS)
<android.media.RemoteControlClient: int access$600(android.media.RemoteControlClient)> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.LongSparseLongArray: long get(long,long)> (SMS_MMS)
<android.telephony._$$Lambda$0NbX5ZB4Wdogc_DUyrSlzFoDHvU: java.lang.Object applyOrThrow(java.lang.Object)> (SMS_MMS)
<android.telephony._$$Lambda$NetworkRegistrationInfo$1JuZmO5PoYGZY8bHhZYwvmqwOB0: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.content.res.AssetManager: int addAssetPath(java.lang.String)> (SMS_MMS)
<android.media.MediaDescription: int describeContents()> (SMS_MMS)
<android.hardware.location.ContextHubTransaction: int getType()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHistory: int getHistoryUsedSize()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int isEmpty(int)> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)> (SMS_MMS)
<android.view.animation.Animation: boolean getDetachWallpaper()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getDefaultTextClassifierPackageName()> (SMS_MMS)
<android.media.MediaPlayer: android.media.MediaPlayer$DrmInfo getDrmInfo()> (SMS_MMS)
<com.android.internal.view.menu.MenuPopup: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)> (SMS_MMS)
<android.app.admin.DnsEvent: int describeContents()> (SMS_MMS)
<android.util.proto.ProtoInputStream: byte[] readBytes(long)> (SMS_MMS)
<android.view.Surface: int getGenerationId()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: java.lang.String getPrimaryStorageUuid()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: int describeContents()> (SMS_MMS)
<android.service.autofill.UserData: java.lang.String getFieldClassificationAlgorithmForCategory(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: int getReprocessableSessionId()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: int getDataBlockSize()> (SMS_MMS)
<android.os.UserManager: int getUserBadgeResId(int)> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Color: android.graphics.ColorSpace$Model getModel()> (SMS_MMS)
<android.text.style.SuggestionSpan: int getFlags()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.Resources$ThemeKey: android.content.res.Resources$ThemeKey clone()> (SMS_MMS)
<android.app.Dialog: android.content.Context getContext()> (SMS_MMS)
<android.widget.TextView: int getSelectionEnd()> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentId(java.lang.String)> (SMS_MMS)
<android.os.storage.DiskInfo: int hashCode()> (SMS_MMS)
<android.content.IIntentReceiver$Stub: android.content.IIntentReceiver getDefaultImpl()> (SMS_MMS)
<android.text.method.DateTimeKeyListener: int getInputType()> (SMS_MMS)
<android.media.MediaPlayer$TrackInfo: int getTrackType()> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(android.content.Context,int,java.lang.String)> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: int getLayoutDirection()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderResponse waitForAndGetProvider()> (SMS_MMS)
<android.media.WebVttParser: int parseIntPercentage(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo2Callback asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$3: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<com.android.internal.policy.DecorView: int getCaptionInsetsHeight()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback getDefaultImpl()> (SMS_MMS)
<android.widget.ArrayAdapter: android.content.Context getContext()> (SMS_MMS)
<android.hardware.display.WifiDisplaySessionInfo: int getSessionId()> (SMS_MMS)
<android.view.View: android.os.IBinder getApplicationWindowToken()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.location.LocationManager: android.location.Location getLastLocation()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubInfo getContextHubInfo(int)> (SMS_MMS)
<android.app.blob.BlobStoreManager$Session: long getSize()> (SMS_MMS)
<android.os.UserManager: long getUserStartRealtime()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getAllIntentFilters(java.lang.String)> (SMS_MMS)
<android.widget.ScrollView: int computeVerticalScrollOffset()> (SMS_MMS)
<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)> (SMS_MMS)
<android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)> (SMS_MMS)
<android.os.UserManager: boolean isUserNameSet()> (SMS_MMS)
<android.net.EthernetManager: java.util.ArrayList access$000(android.net.EthernetManager)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getLargestWidthLimitDp()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.EditorTouchState: float getLastUpX()> (SMS_MMS)
<android.graphics.PointF: int hashCode()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.IOverrideValidator getOverrideValidator()> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IRcsFeatureListener getListener()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()> (SMS_MMS)
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])> (SMS_MMS)
<android.content.Intent: java.lang.String getIdentifier()> (SMS_MMS)
<android.content.pm.parsing.result.ParseInput$DeferredError: int getTargetSdkForChange(long)> (SMS_MMS)
<android.net.IpSecManager$UdpEncapsulationSocket: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.util.ContainerHelpers: int binarySearch(long[],int,long)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int lambda$static$0(android.content.pm.parsing.component.ParsedMainComponent,android.content.pm.parsing.component.ParsedMainComponent)> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getLength()> (SMS_MMS)
<android.view.AppTransitionAnimationSpec: int describeContents()> (SMS_MMS)
<android.os.ParcelUuid: int describeContents()> (SMS_MMS)
<android.os.UserManager$EnforcingUser: android.os.UserHandle getUserHandle()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean handlePinMmiForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.filterfw.core.Frame: int getBindingType()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Stub: com.android.internal.os.IDropBoxManagerService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)> (SMS_MMS)
<android.os.Message: long getWhen()> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator: int compare(android.util.Size,android.util.Size)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayColorTemperature()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: int getWidth()> (SMS_MMS)
<android.content.pm.LauncherApps$PinItemRequest: android.os.Bundle getExtras()> (SMS_MMS)
<android.graphics.HardwareRenderer: int syncAndDrawFrame(android.graphics.FrameInfo)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.widget.GridView: int findMotionRow(int)> (SMS_MMS)
<android.renderscript.Int2: int length()> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentityTdscdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.media.tv.TvInputInfo: int getHdmiConnectionRelativePosition()> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: int hashCode()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()> (SMS_MMS)
<android.graphics.BlendModeColorFilter: long createNativeInstance()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.media.session.MediaController$PlaybackInfo getVolumeAttributes()> (SMS_MMS)
<android.text.util.Linkify$4: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.net.TrafficStats: int getThreadStatsUid()> (SMS_MMS)
<android.widget.TextView: int getExtendedPaddingBottom()> (SMS_MMS)
<android.graphics.drawable.Icon: int getType()> (SMS_MMS)
<android.util.StateSet: int[] get(int)> (SMS_MMS)
<android.media.MediaCodecList: int getCodecCount()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int)> (SMS_MMS)
<android.view.ViewConfiguration: int getFadingEdgeLength()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo$PortInfo: int getPortNumber()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings getDefaultImpl()> (SMS_MMS)
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)> (SMS_MMS)
<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.TextClassificationContext getEventContext()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.telephony.SignalStrength: int getCdmaLevel()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()> (SMS_MMS)
<android.drm.DrmManagerClient: int removeRights(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.InputConfiguration: int hashCode()> (SMS_MMS)
<android.media.session.PlaybackState: long getBufferedPosition()> (SMS_MMS)
<com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCallSenders()> (SMS_MMS)
<android.widget.RadioGroup: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummarySystem()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()> (SMS_MMS)
<android.os.UserManager: boolean isManagedProfile()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getName()> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.RadioAccessSpecifier$1: android.telephony.RadioAccessSpecifier[] newArray(int)> (SMS_MMS)
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()> (SMS_MMS)
<android.os.IncidentManager$PendingReport: java.lang.String getRequestingPackage()> (SMS_MMS)
<android.os.IDumpstateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.PackageStats: int describeContents()> (SMS_MMS)
<android.app.NotificationManager: int getCurrentInterruptionFilter()> (SMS_MMS)
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceInfo[] getDevices()> (SMS_MMS)
<android.media.AudioRecord: int getTimestamp(android.media.AudioTimestamp,int)> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.database.IContentObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectFullScreenIntent()> (SMS_MMS)
<android.location.IBatchedLocationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.filterfw.core.Frame: android.filterfw.core.Frame retain()> (SMS_MMS)
<android.app.ActivityOptions: int getCustomEnterResId()> (SMS_MMS)
<android.text.PrecomputedText: float getWidth(int,int)> (SMS_MMS)
<android.os.image.DynamicSystemManager: android.os.image.IDynamicSystemService access$000(android.os.image.DynamicSystemManager)> (SMS_MMS)
<android.media.session.ISessionManager$Default: java.util.List getSessions(android.content.ComponentName,int)> (SMS_MMS)
<android.graphics.Paint: float getFontSpacing()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getVersion()> (SMS_MMS)
<android.view.View: boolean getNotifiedContentCaptureAppeared()> (SMS_MMS)
<android.os.FileUtils$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)> (SMS_MMS)
<android.net.nsd.INsdManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.StatFs: long getAvailableBytes()> (SMS_MMS)
<android.graphics.text.LineBreaker$Result: int getLineCount()> (SMS_MMS)
<android.security.keystore.ArrayUtils: byte[] concat(byte[],int,int,byte[],int,int)> (SMS_MMS)
<android.media.ExifInterface: byte[] getThumbnail()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsMmTelFeature getImsMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()> (SMS_MMS)
<android.content.UndoManager: int countUndos(android.content.UndoOwner[])> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: int getId()> (SMS_MMS)
<android.os.IDumpstate$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.PhoneNumberRange$1: void <init>()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastRejectForegroundTime(int)> (SMS_MMS)
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()> (SMS_MMS)
<android.hardware.location.NanoAppBinary: byte getTargetChreApiMinorVersion()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getOpacity()> (SMS_MMS)
<android.os.Parcel: int getExceptionCode(java.lang.Throwable)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannelBySlot(int,int)> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Default: java.util.List getWhitelistedRuleProviders()> (SMS_MMS)
<android.renderscript.Element: int getSubElementArraySize(int)> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getScaleY()> (SMS_MMS)
<android.security.KeyStore: int importWrappedKey(java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long,int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallForward(int,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Proxy: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: void call(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()> (SMS_MMS)
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4)> (SMS_MMS)
<android.net.shared.Inet4AddressUtils: int getImplicitNetmask(java.net.Inet4Address)> (SMS_MMS)
<android.telephony.CellIdentityGsm$1: android.telephony.CellIdentityGsm[] newArray(int)> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo: long getTime()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isSafeMode()> (SMS_MMS)
<android.provider.ContactsContract$StatusUpdates: int getPresencePrecedence(int)> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.GraphicBuffer: int getWidth()> (SMS_MMS)
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session createSubsession(boolean)> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.SnoozeCriterion: java.lang.CharSequence getConfirmation()> (SMS_MMS)
<android.security.KeyStore: int[] listUidsOfAuthBoundKeys()> (SMS_MMS)
<android.content.pm.PackageParser: int lambda$parseBaseApplication$0(android.content.pm.PackageParser$Activity,android.content.pm.PackageParser$Activity)> (SMS_MMS)
<android.view.View: long getDrawingTime()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManagerForSubscription(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isMultiSimEnabled()> (SMS_MMS)
<android.filterfw.core.VertexFrame: int getVboId()> (SMS_MMS)
<android.net.NetworkCapabilities: int getSignalStrength()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: boolean isInLockTaskMode()> (SMS_MMS)
<android.text.MeasuredParagraph: int breakText(int,boolean,float)> (SMS_MMS)
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.String getErrorMessage()> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)> (SMS_MMS)
<android.net.ScoredNetwork: int hashCode()> (SMS_MMS)
<android.os.StatFs: long getBlockCountLong()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: int describeContents()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: int getCallState()> (SMS_MMS)
<android.net.INetworkScoreService$Stub: android.net.INetworkScoreService asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.LowpanEnergyScanResult: int getChannel()> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String[] getSupportedNetworkTypes()> (SMS_MMS)
<android.graphics.Paint: int getEndHyphenEdit()> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isFirstBoot()> (SMS_MMS)
<android.media.MediaHTTPConnection: long getSize()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothScanBackgroundTimer()> (SMS_MMS)
<android.text.PrecomputedText: android.text.PrecomputedText$ParagraphInfo[] getParagraphInfo()> (SMS_MMS)
<android.content.res.Resources: java.lang.CharSequence getText(int)> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.lang.String[] getCameraIdList()> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.ProgressBar: int getMaxWidth()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int getCableConnectionStatus()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getMetaState()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.NetworkScan requestNetworkScan(android.telephony.NetworkScanRequest,android.telephony.TelephonyScanManager$NetworkScanCallback)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getFocusAreas()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLongRaw()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.app.Notification$Action: boolean getAllowGeneratedReplies()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: com.android.internal.util.ContrastColorUtil getInstance(android.content.Context)> (SMS_MMS)
<android.graphics.Canvas: int getDensity()> (SMS_MMS)
<android.accessibilityservice.GestureDescription$MotionEventGenerator: java.util.List getGestureStepsFromGestureDescription(android.accessibilityservice.GestureDescription,int)> (SMS_MMS)
<android.location.Location: double getAltitude()> (SMS_MMS)
<android.widget.RemoteViews$MethodKey: int hashCode()> (SMS_MMS)
<android.view.View: float getX()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegisteredPlmn(java.lang.String)> (SMS_MMS)
<android.media.Metadata: byte[] getByteArray(int)> (SMS_MMS)
<android.widget.TextView: android.text.Layout getLayout()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: int getFlashLockState()> (SMS_MMS)
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String getParticipant()> (SMS_MMS)
<android.telephony.ServiceState: int getBitmaskFromString(java.lang.String)> (SMS_MMS)
<android.net.ConnectivityManager: java.util.HashMap access$800()> (SMS_MMS)
<android.view.Display$HdrCapabilities: int hashCode()> (SMS_MMS)
<android.print.IPrintManager$Stub: android.print.IPrintManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.View getNavigationBarBackgroundView()> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean areUiccApplicationsEnabled()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.os.HidlMemory: java.lang.String getName()> (SMS_MMS)
<android.text.Layout: int getLineBottom(int)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: long getDuration()> (SMS_MMS)
<android.animation.AnimatorSet: boolean isInitialized()> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: int getOpacity()> (SMS_MMS)
<android.graphics.RenderNode: float getRotationY()> (SMS_MMS)
<android.util.SparseLongArray: int indexOfKey(int)> (SMS_MMS)
<android.service.autofill.FieldClassification$Match: java.lang.String getCategoryId()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)> (SMS_MMS)
<android.hardware.hdmi.HdmiSwitchClient: java.util.List getPortInfo()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getFocusMode()> (SMS_MMS)
<android.os.storage.DiskInfo: java.lang.String getId()> (SMS_MMS)
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.media.tv.TvStreamConfig: int access$302(android.media.tv.TvStreamConfig,int)> (SMS_MMS)
<android.webkit.WebViewFactory: java.lang.Class getWebViewProviderClass(java.lang.ClassLoader)> (SMS_MMS)
<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(android.util.Range)> (SMS_MMS)
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdListNoLazy()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: int getNumAudioSources()> (SMS_MMS)
<android.telephony.SmsCbMessage: int getMessageFormat()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerName()> (SMS_MMS)
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.view.View getDefaultView()> (SMS_MMS)
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: int getFocusDuckingBehavior()> (SMS_MMS)
<android.os.Debug: int getGlobalClassInitTime()> (SMS_MMS)
<android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()> (SMS_MMS)
<android.widget.EditText: android.text.Editable getText()> (SMS_MMS)
<android.app.Notification$WearableExtender: java.lang.String getDismissalId()> (SMS_MMS)
<android.hardware.display.Time: java.time.LocalTime getLocalTime()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getPackageName()> (SMS_MMS)
<android.view.View: int getDefaultSize(int,int)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: android.os.Bundle getAppWidgetOptions(java.lang.String,int)> (SMS_MMS)
<android.filterfw.core.Frame: long getBindingId()> (SMS_MMS)
<android.media.AudioManager: int generateAudioSessionId()> (SMS_MMS)
<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)> (SMS_MMS)
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)> (SMS_MMS)
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastForegroundProxyInfo(int)> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ListView: android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,java.util.function.Predicate,android.view.View)> (SMS_MMS)
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)> (SMS_MMS)
<android.telephony.NetworkScanRequest$1: android.telephony.NetworkScanRequest[] newArray(int)> (SMS_MMS)
<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()> (SMS_MMS)
<android.view.Display$Mode: float getRefreshRate()> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: int getProfileClass()> (SMS_MMS)
<android.media.AudioSystem: int getPlatformType(android.content.Context)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub: android.telephony.ims.aidl.IImsConfig getDefaultImpl()> (SMS_MMS)
<android.hardware.IConsumerIrService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getWriteIndex()> (SMS_MMS)
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> (SMS_MMS)
<android.app.prediction.AppTargetId: java.lang.String getId()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: com.android.internal.telephony.euicc.IGetAllProfilesCallback getDefaultImpl()> (SMS_MMS)
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyScanManager: android.util.SparseArray access$000(android.telephony.TelephonyScanManager)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()> (SMS_MMS)
<android.media.AudioTrack: int getNotificationMarkerPosition()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: java.lang.Float get(android.graphics.drawable.VectorDrawable$VectorDrawableState)> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getTotalBytes()> (SMS_MMS)
<android.view.ViewDebug$PropertyInfo: android.view.ViewDebug$PropertyInfo forMethod(java.lang.reflect.Method,java.lang.Class)> (SMS_MMS)
<android.widget.SmartSelectSprite$RectangleWithTextSelectionLayout: int getTextSelectionLayout()> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.CrossProfileApps: java.util.List getTargetUserProfiles()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: int access$400(android.widget.OverScroller$SplineOverScroller)> (SMS_MMS)
<android.view.DisplayAdjustments$FixedRotationAdjustments: int hashCode()> (SMS_MMS)
<android.view.WindowInsets$Type: int tappableElement()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCardIdForDefaultEuicc(int,java.lang.String)> (SMS_MMS)
<android.location.IBatchedLocationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: float getShortTermModelUpperLuxMultiplier()> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.AutoText: int getSize(android.view.View)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean hasIccCard()> (SMS_MMS)
<android.hardware.Sensor: java.lang.String getName()> (SMS_MMS)
<android.media.MediaDrm$Certificate: byte[] getContent()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: java.util.List getKeys()> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: long getCustomNightModeEnd()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.text.DynamicLayout: int getBlockIndex(int)> (SMS_MMS)
<android.widget.CheckedTextView: android.graphics.BlendMode getCheckMarkTintBlendMode()> (SMS_MMS)
<android.hardware.camera2.params.OutputConfiguration: int getSurfaceGroupId()> (SMS_MMS)
<com.android.internal.view.menu.IconMenuPresenter: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] preceding(int)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration$MarshalerStreamConfiguration: int getNativeSize()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.TelephonyManager: long getBitMaskForNetworkType(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean disableDataConnectivity()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryStorageVolume()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.hardware.display.Time getNightDisplayCustomEndTime()> (SMS_MMS)
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setDataLimit(long,int)> (SMS_MMS)
<android.location.LocationProvider: java.lang.String getName()> (SMS_MMS)
<android.app.prediction.AppTargetEvent: int getAction()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioAttributes: android.os.Bundle getBundle()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub: android.hardware.face.IFaceService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getAffiliationIds(android.content.ComponentName)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: int getMultiSimPolicy()> (SMS_MMS)
<android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: com.android.internal.telephony.euicc.IGetEuiccChallengeCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> (SMS_MMS)
<android.app.Activity: android.app.Activity getParent()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ITestNetworkManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.session.ISession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics$Key: long getVendorId()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.media.Image: java.lang.Object getOwner()> (SMS_MMS)
<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherRss(int)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getUserInfo(int)> (SMS_MMS)
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()> (SMS_MMS)
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)> (SMS_MMS)
<android.app.WallpaperInfo: android.net.Uri getSettingsSliceUri()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAlwaysOnVpnLockdownEnabled()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int checkOperation(int,int,java.lang.String)> (SMS_MMS)
<android.os.ICancellationSignal$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.TestNetworkManager: android.net.TestNetworkInterface createTunInterface(android.net.LinkAddress[])> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub: android.hardware.usb.IUsbSerialReader getDefaultImpl()> (SMS_MMS)
<android.media.session.ISession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context)> (SMS_MMS)
<android.hardware.input.InputManager: boolean isInputDeviceEnabled(int)> (SMS_MMS)
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getPrivAppFolder()> (SMS_MMS)
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()> (SMS_MMS)
<android.app.Notification: java.lang.String getSortKey()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.LinkProperties: java.util.List getRoutes()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: int getMnc()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.util.List getActiveRecordingConfigurations()> (SMS_MMS)
<android.content.IIntentSender$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.service.notification.Condition: int describeContents()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getFrontActivityScreenCompatMode()> (SMS_MMS)
<android.view.textservice.TextInfo: int getCookie()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getProfileOwnerName(int)> (SMS_MMS)
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getScrollDeltaX()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getAlwaysOnVpnPackageForUser(int)> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.ViewRootImpl$ImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1500()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()> (SMS_MMS)
<android.app.usage.StorageStats: long getCacheBytes()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager$Model: java.util.UUID getModelUuid()> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.UserHandle: int getCallingAppId()> (SMS_MMS)
<android.media.MediaPlayer: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.Map)> (SMS_MMS)
<android.hardware.SystemSensorManager: boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub: com.android.internal.compat.IPlatformCompat asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getLastCauseCode()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.IClientInterface createClientInterface(java.lang.String)> (SMS_MMS)
<android.os.RemoteCallbackList: android.os.IInterface getRegisteredCallbackItem(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean switchSlots(int[])> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$900()> (SMS_MMS)
<android.telephony.PinResult$1: void <init>()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(int)> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getSerialForPackage(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: int getVolumeControl()> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.params.LensShadingMap: android.hardware.camera2.params.RggbChannelVector getGainFactorVector(int,int)> (SMS_MMS)
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getAllSessions(int)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlias()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessForegroundTime(int)> (SMS_MMS)
<android.view.IScrollCaptureController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()> (SMS_MMS)
<android.content.IIntentReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.fonts.SystemFonts: android.text.FontConfig$Alias[] getAliases()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int loadPhraseModel(android.media.soundtrigger_middleware.PhraseSoundModel)> (SMS_MMS)
<android.view.ViewConfiguration: int getMultiPressTimeout()> (SMS_MMS)
<android.app.VoiceInteractor$Request: java.lang.String getName()> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: java.lang.String getPackage()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: android.os.PatternMatcher[] getUriPermissionPatterns()> (SMS_MMS)
<android.telephony.SmsCbMessage: boolean needGeoFencingCheck()> (SMS_MMS)
<com.android.internal.view.IDragAndDropPermissions$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getLaunchTimeToNowLocked(long)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])> (SMS_MMS)
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()> (SMS_MMS)
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma[] newArray(int)> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyScanManager: void <init>()> (SMS_MMS)
<android.media.MediaFormat: java.util.Map getMap()> (SMS_MMS)
<android.content.pm.PackageParser$SplitNameComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.util.Locale getLocale()> (SMS_MMS)
<android.app.AppOpsManager: boolean isOpActive(java.lang.String,int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isVideoTelephonyAvailable(int)> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()> (SMS_MMS)
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.graphics.ImageDecoder$ResourceSource: android.content.res.Resources getResources()> (SMS_MMS)
<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.Spinner: android.content.Context getPopupContext()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.String getGroupOwner()> (SMS_MMS)
<android.view.View: float getScaleY()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)> (SMS_MMS)
<android.webkit.TracingConfig: int getTracingMode()> (SMS_MMS)
<android.widget.ListPopupWindow: int getWidth()> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.CaptivePortalData: android.net.Uri getVenueInfoUrl()> (SMS_MMS)
<android.app.IActivityManager$Default: android.app.ActivityManager$StackInfo getFocusedStackInfo()> (SMS_MMS)
<android.renderscript.Element: android.renderscript.Element$DataType getDataType()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean needsOtaServiceProvisioning()> (SMS_MMS)
<android.telephony.TelephonyManager: long getPreferredNetworkTypeBitmask()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: int getPort()> (SMS_MMS)
<android.app.Fragment: android.app.Fragment getParentFragment()> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getError()> (SMS_MMS)
<android.webkit.WebView$PrivateAccess: int getHorizontalScrollbarHeight()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager getParentProfileInstance(android.content.pm.UserInfo)> (SMS_MMS)
<android.media.tv.TvInputManager: android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int,android.media.tv.TvInputInfo,java.lang.String,int,java.util.concurrent.Executor,android.media.tv.TvInputManager$HardwareCallback)> (SMS_MMS)
<android.app.Activity: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getSystemCpuTimeUs(int)> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: int getDisplayId()> (SMS_MMS)
<android.transition.TransitionManager: android.transition.Transition getDefaultTransition()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: com.android.internal.textservice.ISpellCheckerSessionListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: void resetSettings()> (SMS_MMS)
<android.app.AutomaticZenRule: long getCreationTime()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()> (SMS_MMS)
<android.transition.Scene: android.view.ViewGroup getSceneRoot()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int describeContents()> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)> (SMS_MMS)
<android.media.IMediaHTTPService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: boolean isGsmSeptets(char)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioAccessFamily(int,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isSecurityLoggingEnabled(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isSmsCapable()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectForegroundTime(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.location.LocationManager: android.util.ArrayMap access$800(android.location.LocationManager)> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: int unloadNanoApp(int)> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IUserManager$Default: android.content.pm.UserInfo getPrimaryUser()> (SMS_MMS)
<android.view.DisplayInfo: float[] getDefaultRefreshRates()> (SMS_MMS)
<com.android.internal.policy.DecorView: int getColorViewBottomInset(int,int)> (SMS_MMS)
<android.widget.ExpandableListConnector: int getCount()> (SMS_MMS)
<android.media.AudioManager: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.hardware.camera2.TotalCaptureResult: java.util.Map getPhysicalCameraResults()> (SMS_MMS)
<android.os.BasicShellCommandHandler: int getRemainingArgsCount()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.database.CursorWrapper: long getLong(int)> (SMS_MMS)
<android.telephony.CellIdentityGsm: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean enableDataConnectivity()> (SMS_MMS)
<android.content.res.Resources: int getDimensionPixelSize(int)> (SMS_MMS)
<android.view.textclassifier.TextSelection: float getConfidenceScore(java.lang.String)> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse$1: void <init>()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionPlan: java.lang.CharSequence access$202(android.telephony.SubscriptionPlan,java.lang.CharSequence)> (SMS_MMS)
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()> (SMS_MMS)
<android.location.LocationRequest: int describeContents()> (SMS_MMS)
<android.widget.TextView: android.text.InputFilter[] getFilters()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.KeyguardManager: android.content.Context access$000(android.app.KeyguardManager)> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int getServiceClass()> (SMS_MMS)
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub: android.companion.ICompanionDeviceManager getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: int access$702(android.net.lowpan.LowpanIdentity,int)> (SMS_MMS)
<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: byte[] getBackupPayload(int)> (SMS_MMS)
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor,java.lang.String[])> (SMS_MMS)
<android.graphics.Canvas: int getHeight()> (SMS_MMS)
<android.content.pm.ModuleInfo: java.lang.CharSequence getName()> (SMS_MMS)
<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager getSplitAssetManager(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermission: android.content.pm.parsing.component.ParsedPermissionGroup getParsedPermissionGroup()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: int access$100(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: int getDefaultCarrierRestriction()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getDisks()> (SMS_MMS)
<android.location.ICountryDetector$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getPcscfAddress(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataRoamingEnabled(int)> (SMS_MMS)
<android.widget.ExpandableListConnector: int getItemViewType(int)> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.MeasuredParagraph: int getTextLength()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber(int)> (SMS_MMS)
<com.android.internal.os.ZygoteServer: java.io.FileDescriptor getZygoteSocketFileDescriptor()> (SMS_MMS)
<android.os.SynchronousResultReceiver: java.lang.String getName()> (SMS_MMS)
<android.location.AbstractListenerManager: java.lang.Object merge(java.lang.Object[])> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getServerRootCaCert()> (SMS_MMS)
<android.util.ArraySet$1: java.util.Map colGetMap()> (SMS_MMS)
<android.print.IWriteResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.AppOpsManager$OnOpNotedCallback: java.util.concurrent.Executor getAsyncNotedExecutor()> (SMS_MMS)
<android.view.GestureExclusionTracker: java.util.List getRootSystemGestureExclusionRects()> (SMS_MMS)
<android.text.style.AccessibilityReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.os.health.HealthKeys$Constants: int[] getKeys(int)> (SMS_MMS)
<android.view.DisplayAdjustments$FixedRotationAdjustments: int describeContents()> (SMS_MMS)
<android.app.IWindowToken$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.CellInfoNr: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean putIntAtIndex(android.content.ContentResolver,java.lang.String,int,int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.content.LocusId getLocusId()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub: android.app.timezone.IRulesManager getDefaultImpl()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: int isMicMuted()> (SMS_MMS)
<android.widget.TextView: int getAutoSizeMinTextSize()> (SMS_MMS)
<android.animation.AnimationHandler: int getAnimationCount()> (SMS_MMS)
<android.hardware.radio.V1_5.OptionalCsgInfo: byte getDiscriminator()> (SMS_MMS)
<android.media.ExifInterface: byte[] access$300()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: boolean isEmailAddress(java.lang.String)> (SMS_MMS)
<android.widget.ExpandableListView: int getPackedPositionGroup(long)> (SMS_MMS)
<android.app.NotificationManager: boolean isNotificationListenerAccessGranted(android.content.ComponentName)> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.net.Uri)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()> (SMS_MMS)
<android.transition.Scene: android.transition.Scene getCurrentScene(android.view.ViewGroup)> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()> (SMS_MMS)
<android.telephony.SmsMessage: byte[] getPdu()> (SMS_MMS)
<android.print.PrintJobInfo: java.lang.String getPrinterName()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: int getUserId()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub: android.view.IDisplayWindowRotationController getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()> (SMS_MMS)
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)> (SMS_MMS)
<android.app.ActivityOptions: android.app.ActivityOptions forTargetActivity()> (SMS_MMS)
<android.content.pm.PackageParser$ApkLite: long getLongVersionCode()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanIdentity getLowpanIdentity()> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> (SMS_MMS)
<android.os.IDeviceIdleController$Default: java.lang.String[] getSystemPowerWhitelist()> (SMS_MMS)
<android.net.NetworkInfo: java.lang.String getExtraInfo()> (SMS_MMS)
<android.content.IContentService$Default: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()> (SMS_MMS)
<android.util.jar.StrictJarFile$JarFileInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalTouchMinor(int)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()> (SMS_MMS)
<android.widget.TextView: android.text.method.KeyListener getKeyListener()> (SMS_MMS)
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: int getAuthenticationType()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getEocd(java.io.RandomAccessFile)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()> (SMS_MMS)
<android.telephony.ServiceState: boolean getDataRoamingFromRegistration()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.graphics.Rect getTempRect()> (SMS_MMS)
<android.hardware.input.KeyboardLayout: android.os.LocaleList getLocales()> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaCodec$CodecException: int getErrorCode()> (SMS_MMS)
<android.util.jar.StrictJarFile$ZipInflaterInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.os.ParcelFileDescriptor$1: int onFileDescriptorEvents(java.io.FileDescriptor,int)> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandDescriptor: int hashCode()> (SMS_MMS)
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingStart()> (SMS_MMS)
<android.os.UserManager: android.os.Bundle getDefaultGuestRestrictions()> (SMS_MMS)
<android.widget.AbsListView: int computeVerticalScrollRange()> (SMS_MMS)
<android.media.AudioRecord: int getPortId()> (SMS_MMS)
<android.window.IWindowOrganizerController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()> (SMS_MMS)
<android.widget.OverScroller: int getFinalY()> (SMS_MMS)
<android.net.NetworkCapabilities: int getOwnerUid()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isSMSPromptEnabled()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getQueriesIntents()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeWordEndIndex()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: float getShadowRadius()> (SMS_MMS)
<android.media.midi.MidiManager: android.media.midi.MidiDeviceInfo[] getDevices()> (SMS_MMS)
<android.util.jar.StrictJarFile$ZipInflaterInputStream: int available()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Point getUpperLeftPoint()> (SMS_MMS)
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> (SMS_MMS)
<android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAccessNetworkTechnology(int)> (SMS_MMS)
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub: android.content.pm.IDexModuleRegisterCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.CallForwardingInfo getCallForwarding(int)> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: byte[] getExtendedAddress()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: long getPageSize()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.Rating: float getPercentRating()> (SMS_MMS)
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,android.net.Uri,android.net.Uri)> (SMS_MMS)
<android.view.SurfaceControl$DesiredDisplayConfigSpecs: int hashCode()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)> (SMS_MMS)
<android.app.ActivityOptions: int getWidth()> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.ListPopupWindow: int getInputMethodMode()> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.DirectoryCertificateSource: java.util.Set getCertificates()> (SMS_MMS)
<android.content.Intent: byte getByteExtra(java.lang.String,byte)> (SMS_MMS)
<android.text.style.SubscriptSpan: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoWiFiRoamingModeSetting(int)> (SMS_MMS)
<android.view.animation.Animation: boolean getFillAfter()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getPreferredNetworkType(int)> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getId()> (SMS_MMS)
<android.view.View: float getAlpha()> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: boolean isBarred()> (SMS_MMS)
<android.view.textclassifier.TextClassificationContext: int describeContents()> (SMS_MMS)
<android.location.LocationRequest: long getInterval()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getHint()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)> (SMS_MMS)
<android.view.View$AttachInfo: com.android.internal.view.ScrollCaptureInternal getScrollCaptureInternal()> (SMS_MMS)
<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList()> (SMS_MMS)
<android.telephony.euicc.DownloadableSubscription: java.lang.String getEncodedActivationCode()> (SMS_MMS)
<android.os.UserManager: boolean isUserUnlocked()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getRingerModeExternal()> (SMS_MMS)
<android.content.RestrictionEntry: boolean getSelectedState()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: com.android.internal.telephony.euicc.IGetSmdsAddressCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfTransition(int,int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsFullApp(boolean)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getWindows(int)> (SMS_MMS)
<android.app.WallpaperInfo: int describeContents()> (SMS_MMS)
<android.util.KeyValueListParser$LongValue: java.lang.String getKey()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.drm.DrmEvent: int getUniqueId()> (SMS_MMS)
<android.location.LocationManager$GnssMeasurementsListenerManager: boolean registerService(android.location.GnssRequest)> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int,int)> (SMS_MMS)
<android.telecom.VideoProfile$CameraCapabilities: float getMaxZoom()> (SMS_MMS)
<android.service.textclassifier.TextClassifierService: android.os.Parcelable getResponse(android.os.Bundle)> (SMS_MMS)
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getLoadingView()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()> (SMS_MMS)
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)> (SMS_MMS)
<android.app.admin.ConnectEvent: java.net.InetAddress getInetAddress()> (SMS_MMS)
<android.os.health.TimerStat: int describeContents()> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.media.session.IOnVolumeKeyLongPressListener getDefaultImpl()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub$Proxy: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForAudioAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.view.ViewGroup: int[] onCreateDrawableState(int)> (SMS_MMS)
<android.telephony._$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw: int applyAsInt(java.lang.Object)> (SMS_MMS)
<android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getSubscriptionPlansOwner(int)> (SMS_MMS)
<com.android.internal.graphics.palette.Target: float getMaximumSaturation()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableArray$MarshalerArray: int getNativeSize()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: java.lang.Integer getCaptureSession()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getText()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getDeviceOwnerComponentOnAnyUser()> (SMS_MMS)
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: android.net.wifi.nl80211.IWifiScannerImpl getWifiScannerImpl()> (SMS_MMS)
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: int[] getAttributeResolutionStack(int,int,int)> (SMS_MMS)
<android.view.KeyCharacterMap: char getDisplayLabel(int)> (SMS_MMS)
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinderOrThrow()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)> (SMS_MMS)
<android.hardware.location.NanoAppBinary: byte getTargetChreApiMajorVersion()> (SMS_MMS)
<android.media.AudioFormat: int getChannelIndexMask()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub: android.os.image.IDynamicSystemService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ServiceState: int rilRadioTechnologyToAccessNetworkType(int)> (SMS_MMS)
<android.os.BaseBundle: byte getByte(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getDeviceOwnerComponent(boolean)> (SMS_MMS)
<android.content.IClipboard$Stub: android.content.IClipboard asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.animation.TypeConverter: java.lang.Class getTargetType()> (SMS_MMS)
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()> (SMS_MMS)
<android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()> (SMS_MMS)
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String,java.lang.String,int,boolean)> (SMS_MMS)
<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()> (SMS_MMS)
<android.telephony.PinResult: int describeContents()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.TrafficStats: long getTotalTxBytes()> (SMS_MMS)
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()> (SMS_MMS)
<android.location.GnssClock: int getHardwareClockDiscontinuityCount()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: android.telephony.euicc.EuiccInfo getEuiccInfo(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()> (SMS_MMS)
<android.text.style.AbsoluteSizeSpan: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.util.List getAllowedAlgorithms()> (SMS_MMS)
<android.webkit.WebView: int computeHorizontalScrollOffset()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getRunningExternalApplications()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getIconUri()> (SMS_MMS)
<android.hardware.radio.V1_0.GsmSignalStrength: int hashCode()> (SMS_MMS)
<android.widget.Toolbar: int getTitleMarginEnd()> (SMS_MMS)
<android.app.IUiModeManager$Default: int getNightMode()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.telephony.SmsManager: boolean isSMSPromptEnabled()> (SMS_MMS)
<android.security.keystore.ArrayUtils: byte[] cloneIfNotEmpty(byte[])> (SMS_MMS)
<android.renderscript.Short3: short get(int)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()> (SMS_MMS)
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeType(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getVoiceActivationState(int,java.lang.String)> (SMS_MMS)
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeById(java.lang.String)> (SMS_MMS)
<android.text.method.TextKeyListener: int getInputType()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getOpportunisticSubscriptions(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.MotionEvent: long getEventTimeNano()> (SMS_MMS)
<android.media.midi.MidiManager: android.os.IBinder access$200(android.media.midi.MidiManager)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getJobCompletionStats()> (SMS_MMS)
<android.telephony.TelephonyManager: long getSupportedRadioAccessFamily()> (SMS_MMS)
<android.accounts.IAccountManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IMessenger$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IThermalService$Default: float getThermalHeadroom(int)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getNumPacketsTx()> (SMS_MMS)
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: boolean isCallerCurrentAlwaysOnVpnApp()> (SMS_MMS)
<android.telephony.SmsMessage: byte[] getSubmitPduEncodedMessage(boolean,java.lang.String,java.lang.String,int,int,int,int,int,int)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getTargetSandboxVersion()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()> (SMS_MMS)
<android.hardware.usb.UsbAccessory$1: java.lang.String getSerial(java.lang.String)> (SMS_MMS)
<android.content.IRestrictionsManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.location.MemoryRegion: int describeContents()> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: java.util.Map getParameters(java.util.List)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.util.List getUsers(boolean,boolean,boolean)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Counter getBluetoothScanResultBgCounter()> (SMS_MMS)
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.location.Location: long getElapsedRealtimeNanos()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getResourceTypeAndEntryName(java.lang.String)> (SMS_MMS)
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.transition.Transition: java.util.List getTargetViewNames()> (SMS_MMS)
<android.content.ContentProviderOperation: int getType()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.os.IBinder getOverlayWindowToken(int)> (SMS_MMS)
<android.view.accessibility.WeakSparseArray: java.lang.Object get(int)> (SMS_MMS)
<android.text.style.URLSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.widget.EdgeEffect: int getMaxHeight()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean canConnectTo5GInDsdsMode()> (SMS_MMS)
<android.app.role.IRoleController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: void resetOtaEmergencyNumberDbFilePath()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2600(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier(int)> (SMS_MMS)
<android.app.contentsuggestions.SelectionsRequest: int getTaskId()> (SMS_MMS)
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()> (SMS_MMS)
<android.view.Window: android.transition.Transition getExitTransition()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter[] getTxTimeCounters()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: android.hardware.display.DeviceProductInfo$ManufactureDate getManufactureDate()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean isImsSmsSupportedForSubscriber(int)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.CarrierConfigManager lambda$registerServiceWrappers$2(android.content.Context)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getResourceTypeName(java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl: int getAttributeSetSourceResId(android.util.AttributeSet)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.SurfaceControl$Transaction getBLASTSyncTransaction()> (SMS_MMS)
<android.widget.AbsListView: int findClosestMotionRow(int)> (SMS_MMS)
<android.app.job.JobInfo: int getFlags()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.Configuration: android.os.LocaleList getLocales()> (SMS_MMS)
<android.telephony.SignalStrength: int getWcdmaDbm()> (SMS_MMS)
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.animation.ValueAnimator: float getAnimatedFraction()> (SMS_MMS)
<android.view.ActionMode: java.lang.Object getTag()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: com.android.internal.view.menu.ShowableListMenu getPopup()> (SMS_MMS)
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()> (SMS_MMS)
<android.telephony.ims.RcsContactUceCapability: int describeContents()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getRepeatCount()> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getScrollY()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.SystemSensorManager: java.util.HashMap access$400(android.hardware.SystemSensorManager)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getProfileOwnerName(int)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)> (SMS_MMS)
<android.media.MediaRecorder: android.media.AudioDeviceInfo getPreferredDevice()> (SMS_MMS)
<android.provider.ContactsContract$StatusUpdates: int getPresenceIconResourceId(int)> (SMS_MMS)
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryCode()> (SMS_MMS)
<android.view.Display$HdrCapabilities: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getPartitionId()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int[] getCompatArray(int)> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()> (SMS_MMS)
<android.webkit.WebSettings$ZoomDensity: int getValue()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getTextWatcherDepth()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.AudioGainConfig: int mode()> (SMS_MMS)
<android.app.blob.BlobInfo: long getSizeBytes()> (SMS_MMS)
<android.app.BackStackRecord: int getId()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub: android.net.wifi.nl80211.IClientInterface getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)> (SMS_MMS)
<android.os.SimpleClock$1: long millis()> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getGroupLogTag()> (SMS_MMS)
<android.view.View: int getPaddingEnd()> (SMS_MMS)
<android.telecom.TelecomManager: java.util.List getSelfManagedPhoneAccounts()> (SMS_MMS)
<android.database.BulkCursorProxy: android.os.Bundle getExtras()> (SMS_MMS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()> (SMS_MMS)
<android.widget.CompoundButton: int getAutofillType()> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getActivityList(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.widget.AdapterView: boolean isInFilterMode()> (SMS_MMS)
<android.content.pm.PathPermission: java.lang.String getWritePermission()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: java.util.List getAudioProductStrategies()> (SMS_MMS)
<android.net.RouteInfo: int getType()> (SMS_MMS)
<android.telephony.CallQuality: int getDownlinkCallQualityLevel()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: com.android.internal.widget.ILockSettings getLockSettings()> (SMS_MMS)
<android.os.UserManager: int getCredentialOwnerProfile(int)> (SMS_MMS)
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: int getSequenceId()> (SMS_MMS)
<android.hardware.hdmi.HdmiPortInfo: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int hashCode()> (SMS_MMS)
<android.net.StringNetworkSpecifier: int hashCode()> (SMS_MMS)
<android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()> (SMS_MMS)
<android.hardware.SystemSensorManager$BaseEventQueue: int injectSensorDataBase(int,float[],int,long)> (SMS_MMS)
<android.app.Notification: int describeContents()> (SMS_MMS)
<android.app.Instrumentation: java.lang.String getProcessName()> (SMS_MMS)
<android.hardware.SensorManager: java.util.List getDynamicSensorList(int)> (SMS_MMS)
<android.content.UndoManager: int findNextState(java.util.ArrayList,android.content.UndoOwner[],int)> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.om.IOverlayManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.storage.VolumeRecord: java.lang.String getNickname()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.hardware.Sensor: float getPower()> (SMS_MMS)
<android.media.AudioPatch: int id()> (SMS_MMS)
<android.transition.TransitionValues: int hashCode()> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioFocusRequest: int getFlags()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getMinLearnedBatteryCapacity()> (SMS_MMS)
<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.DisplayCutout$Bounds: int hashCode()> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getFragment()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$MagnificationController: android.graphics.Region getMagnificationRegion()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$8: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.app.Fragment: int getStateAfterAnimating()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$15: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)> (SMS_MMS)
<android.app._$$Lambda$AppOpsManager$HistoricalOp$Vs6pDL0wjOBTquwNnreWVbPQrn4: java.lang.Object get()> (SMS_MMS)
<android.util.SparseBooleanArray: boolean get(int,boolean)> (SMS_MMS)
<android.widget.ScrollView: int getBottomEdgeEffectColor()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray getWindows()> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey getKey()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)> (SMS_MMS)
<android.widget.Toolbar: java.lang.CharSequence getLogoDescription()> (SMS_MMS)
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()> (SMS_MMS)
<android.app.ActivityThread: float getFloatCoreSetting(java.lang.String,float)> (SMS_MMS)
<android.widget.ListView: int lookForSelectablePositionAfter(int,int,boolean)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.IntentSender createAppWidgetConfigIntentSender(java.lang.String,int,int)> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(int,java.lang.String,long,long,int)> (SMS_MMS)
<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(int,int,java.lang.String)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub: android.app.usage.IUsageStatsManager getDefaultImpl()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: long getLong(java.lang.String,long,int)> (SMS_MMS)
<android.view.KeyEvent: int getUnicodeChar(int)> (SMS_MMS)
<android.graphics.Region: android.graphics.Path getBoundaryPath()> (SMS_MMS)
<android.text.style.QuoteSpan: int describeContents()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GnssStatus: float getAzimuthDegrees(int)> (SMS_MMS)
<android.net.lowpan.LowpanCommissioningSession: android.net.lowpan.LowpanBeaconInfo getBeaconInfo()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()> (SMS_MMS)
<android.app.LoadedApk: java.lang.String[] getSplitResDirs()> (SMS_MMS)
<android.util.apk.ApkSignatureVerifier: int getMinimumSignatureSchemeVersionForTargetSdk(int)> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getNetworkForType(int)> (SMS_MMS)
<android.media.IMediaHTTPService$Stub: android.media.IMediaHTTPService asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void listenForSubscriber(int,java.lang.String,java.lang.String,android.telephony.PhoneStateListener,int,boolean)> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int startRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (SMS_MMS)
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getVolumeControlStream()> (SMS_MMS)
<android.hardware.camera2.marshal.MarshalHelpers: int getPrimitiveTypeSize(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char)> (SMS_MMS)
<android.app.LoadedApk$ServiceDispatcher: int getFlags()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getRadioHalVersion()> (SMS_MMS)
<android.view.RemoteAnimationDefinition$RemoteAnimationAdapterEntry: android.os.Parcelable$Creator access$000()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: java.lang.String[] createImmutableFrameworkIdmapsInZygote()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: long getAuthenticatorId(int)> (SMS_MMS)
<android.webkit.WebViewDelegate: int getPackageId(android.content.res.Resources,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean nvResetConfig(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.KeySet getSigningKeySet(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.statusbar.NotificationVisibility: int describeContents()> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.util.List getDependencies()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int addAuthToken(byte[])> (SMS_MMS)
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getDockedStackSide()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalUss()> (SMS_MMS)
<android.widget.FastScroller$6: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub: android.service.textclassifier.ITextClassifierCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: int getCallType()> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: long getLongInteger(int)> (SMS_MMS)
<android.os.UserManager: long[] getSerialNumbersOfUsers(boolean)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: boolean isRestricted()> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub: android.hardware.face.IFaceServiceReceiver getDefaultImpl()> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int hashCode()> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.AssetManager: int[] getResourceIntArray(int)> (SMS_MMS)
<android.util.KeyValueListParser$IntValue: int getDefaultValue()> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestPackage()> (SMS_MMS)
<android.view.View: android.view.IWindow getWindow()> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getEnableQuickDoze()> (SMS_MMS)
<android.content.IntentFilter: int countActions()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()> (SMS_MMS)
<android.view.ViewGroup: android.view.View findFocus()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)> (SMS_MMS)
<android.telephony.BarringInfo: int hashCode()> (SMS_MMS)
<android.hardware.cas.V1_0.HidlCasPluginDescriptor: int hashCode()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: long getTimeStamp()> (SMS_MMS)
<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()> (SMS_MMS)
<android.media.MediaMetadata: int hashCode()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)> (SMS_MMS)
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)> (SMS_MMS)
<android.widget.AbsSpinner: int pointToPosition(int,int)> (SMS_MMS)
<android.content.res.AssetFileDescriptor: long getLength()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isNightDisplayActivated()> (SMS_MMS)
<android.telephony.ClientRequestStats: long getPendingRequestsWakelockTime()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isTetheringApnRequiredForSubscriber(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityGestureEvent: int getDisplayId()> (SMS_MMS)
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()> (SMS_MMS)
<android.hardware.usb.UsbConfiguration: android.hardware.usb.UsbInterface getInterface(int)> (SMS_MMS)
<android.view.Display$HdrCapabilities: float getDesiredMaxAverageLuminance()> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int stopUser(android.content.ComponentName,android.os.UserHandle)> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getBasePackageName()> (SMS_MMS)
<android.media.MediaRoute2Info: java.util.List getFeatures()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(java.lang.Object)> (SMS_MMS)
<android.media.MediaPlayer: int playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)> (SMS_MMS)
<android.content.res.ResourcesImpl: android.util.DisplayMetrics getDisplayMetrics()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: android.os.BatteryStats getStats()> (SMS_MMS)
<android.graphics.drawable.Icon: android.content.res.Resources getResources()> (SMS_MMS)
<android.net.ITestNetworkManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub: android.location.IGnssAntennaInfoListener getDefaultImpl()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int getInteractiveUiTimeoutMillis()> (SMS_MMS)
<android.hardware.radio.V1_2.WcdmaSignalStrength: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getEmergencyNumberDbVersion(int)> (SMS_MMS)
<android.widget.LinearLayout: int getBaseline()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastAccessForegroundTime(int)> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: int describeContents()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getNavBarPosition(int)> (SMS_MMS)
<android.content.pm.BaseParceledListSlice: java.util.List access$200(android.content.pm.BaseParceledListSlice)> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getHeight()> (SMS_MMS)
<android.os.image.DynamicSystemManager$Session: boolean getAvbPublicKey(android.gsi.AvbPublicKey)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getUserControlDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getNumConnectivityChange(int)> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String[] getHandledQueryArguments(android.os.Bundle)> (SMS_MMS)
<android.view.textservice.TextInfo: int describeContents()> (SMS_MMS)
<android.app.backup.BackupAgent: android.os.Handler getHandler()> (SMS_MMS)
<android.security.net.config.UserCertificateSource: java.util.Set getCertificates()> (SMS_MMS)
<android.net.IpSecConfig: int getMode()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getWebDomain()> (SMS_MMS)
<android.widget.GridView: int computeVerticalScrollExtent()> (SMS_MMS)
<android.telephony.SubscriptionManager: int lambda$removeSubscriptionsFromGroup$9(java.lang.Integer)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolSize()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: boolean isEnabled(int)> (SMS_MMS)
<android.os.IMessenger$Stub: android.os.IMessenger asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioManager: int dispatchAudioFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.AudioPolicy)> (SMS_MMS)
<android.content.LocusId: int hashCode()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int describeContents()> (SMS_MMS)
<android.media.Metadata: double getDouble(int)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Toolbar: int getCurrentContentInsetRight()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getCompleteActiveSubscriptionInfoList()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: int describeContents()> (SMS_MMS)
<android.os.ProxyFileDescriptorCallback: int onRead(long,int,byte[])> (SMS_MMS)
<android.app.AppGlobals: android.app.Application getInitialApplication()> (SMS_MMS)
<android.view.ViewGroup: boolean getClipChildren()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: int getAppStandbyBucket(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.service.vr.IVrManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.SparseLongArray: int keyAt(int)> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int openStorage(java.lang.String)> (SMS_MMS)
<android.app.ActivityManager: android.app.IActivityManager getService()> (SMS_MMS)
<android.app.BackStackRecord: int getTransition()> (SMS_MMS)
<android.os.GraphicsEnvironment: android.os.GraphicsEnvironment getInstance()> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromNativeSmsSubmitPdu(byte[],boolean)> (SMS_MMS)
<android.view.View: int getSuggestedMinimumWidth()> (SMS_MMS)
<android.content.ContentResolver: int getTargetSdkVersion()> (SMS_MMS)
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.view.View$6: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1800(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isOnlyCoreApps()> (SMS_MMS)
<android.animation.Animator$AnimatorConstantState: int getChangingConfigurations()> (SMS_MMS)
<android.service.notification.NotificationListenerService: java.util.List getNotificationChannelGroups(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub: android.app.IUserSwitchObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)> (SMS_MMS)
<android.drm.ProcessedData: byte[] getData()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.view.accessibility.IWindowMagnificationConnectionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.Notification$Builder: android.app.Notification getNotification()> (SMS_MMS)
<android.location.GpsNavigationMessage: short getStatus()> (SMS_MMS)
<android.util.MapCollections: java.util.Set getKeySet()> (SMS_MMS)
<android.content.IContentService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.IConnectivityDiagnosticsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)> (SMS_MMS)
<android.os.IThermalStatusListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfilePackages(android.content.ComponentName)> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager getDefaultImpl()> (SMS_MMS)
<android.location.Location: long getElapsedRealtimeAgeNanos(long)> (SMS_MMS)
<android.hardware.radio.V1_4.NrSignalStrength: int hashCode()> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.animation.PathKeyframes$IntKeyframesBase: java.lang.Object getValue(float)> (SMS_MMS)
<android.app.IStopUserCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Default: byte[] getWatchlistConfigHash()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.telephony.ims.feature._$$Lambda$RcsFeature$RcsFeatureBinder$M_Xsfh7yLPmebDSvMzAvEPPUmE0: java.lang.Object get()> (SMS_MMS)
<android.content.res.GradientColor: android.graphics.Shader getShader()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getWellbeingPackageName()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AbsSpinner: int getAutofillType()> (SMS_MMS)
<android.graphics.Paint: int getTextRunCursor(char[],int,int,boolean,int,int)> (SMS_MMS)
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.view.ViewConfiguration: int getLongPressTimeout()> (SMS_MMS)
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()> (SMS_MMS)
<android.os.IRemoteCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ServiceState: int getRadioTechnology()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getAllSubscriptionInfoList()> (SMS_MMS)
<android.net.IIpSecService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.UserManager: int getUserCount()> (SMS_MMS)
<android.app.WindowConfiguration: int getActivityType()> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getMax()> (SMS_MMS)
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()> (SMS_MMS)
<android.app.admin.PasswordMetrics$ComplexityBucket$3: int getMinimumLength(boolean)> (SMS_MMS)
<android.net.lowpan.LowpanScanner: java.util.Collection getChannelMask()> (SMS_MMS)
<android.view.View: android.view.contentcapture.ContentCaptureSession getContentCaptureSession()> (SMS_MMS)
<android.media.tv.TvInputInfo: java.lang.String getParentId()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreProvider: java.security.KeyStore getKeyStoreForUid(int)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub: android.net.wifi.nl80211.IApInterface getDefaultImpl()> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue[] getTo()> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserHandle(int)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.util.Comparator getDescriptionComparator()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getMaximumFailedPasswordsForWipe(int)> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: int getClosestOfStates(android.app.ActivityThread$ActivityClientRecord,int[])> (SMS_MMS)
<android.net.NetworkStats: int describeContents()> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.DisplayCutout: java.util.List getBoundingRects()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.UiccCardInfo: boolean isRemovable()> (SMS_MMS)
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()> (SMS_MMS)
<android.view.VerifiedMotionEvent: float getRawY()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.NetworkPolicy: int compareTo(java.lang.Object)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: android.icu.util.ULocale getLocale()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePublicKey getAndroidKeyStorePublicKey(java.lang.String,int,java.lang.String,byte[])> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getMaxRecents()> (SMS_MMS)
<android.content.om.IOverlayManager$Default: java.lang.String[] getDefaultOverlayPackages()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getLongestDeviceIdleModeTime(int)> (SMS_MMS)
<android.window.ITaskOrganizerController$Default: android.window.WindowContainerToken getImeTarget(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int hashCode()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicyConfig: java.lang.String getRegistration()> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getWidth()> (SMS_MMS)
<com.android.server.SystemConfig: java.util.Map getNamedActors()> (SMS_MMS)
<android.hardware.SystemSensorManager: android.hardware.SensorDirectChannel createDirectChannelImpl(android.os.MemoryFile,android.hardware.HardwareBuffer)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiSignalStrengthTime(int,long,int)> (SMS_MMS)
<android.os.UserManager: int getUserSerialNumber(int)> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.media.Metadata: int firstCustomId()> (SMS_MMS)
<android.content.IClipboard$Stub$Proxy: android.content.ClipData getPrimaryClip(java.lang.String,int)> (SMS_MMS)
<android.util.Half: int getExponent(short)> (SMS_MMS)
<android.widget.Magnifier: float getCornerRadius()> (SMS_MMS)
<android.view.textclassifier.TextClassification: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.widget.Spinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)> (SMS_MMS)
<android.app.backup.BackupAgent: int access$200(android.app.backup.BackupAgent)> (SMS_MMS)
<android.telephony.CellIdentityNr: void updateGlobalCellId()> (SMS_MMS)
<android.text.style.StyleSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.view.IWindowManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IInputMonitorHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> (SMS_MMS)
<android.renderscript.Float2: int length()> (SMS_MMS)
<android.widget.SelectionActionModeHelper$TextClassificationHelper: int getTimeoutDuration()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.ComponentInfo: int getIconResource()> (SMS_MMS)
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getPackage()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserBadgeLabelResId(int)> (SMS_MMS)
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean endCall()> (SMS_MMS)
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.webkit.WebView$HitTestResult: int getType()> (SMS_MMS)
<android.graphics.Color: int hashCode()> (SMS_MMS)
<android.os.IInstalld$Default: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.IpPrefix[] getLinkNetworks()> (SMS_MMS)
<com.android.internal.view.TooltipPopup: android.view.View getContentView()> (SMS_MMS)
<android.view.View: int getMinimumHeight()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwnerAsUser(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)> (SMS_MMS)
<android.telephony.BarringInfo$BarringServiceInfo: int getConditionalBarringFactor()> (SMS_MMS)
<android.renderscript.Long4: long get(int)> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub: android.hardware.radio.ICloseHandle asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.SystemProperties$Handle: long getLong(long)> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$vEkhQSELvddUPjZ7BQuik8uCACE: int callMethod(com.android.internal.telephony.ISub)> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.view.animation.AnimationSet: long getStartTime()> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getSystemServiceName(java.lang.Class)> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getScanCode()> (SMS_MMS)
<android.view.ViewGroup$ViewLocationHolder: int compareTo(android.view.ViewGroup$ViewLocationHolder)> (SMS_MMS)
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)> (SMS_MMS)
<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()> (SMS_MMS)
<android.view.InsetsController: int getAnimationType(int)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.hardware.ICameraService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.content.pm.InstallationFileParcel: int describeContents()> (SMS_MMS)
<android.accounts.Account$1: android.accounts.Account createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()> (SMS_MMS)
<android.view.ViewRootImpl$ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.view.View: int getAccessibilityLiveRegion()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: float getScore(android.os.Bundle)> (SMS_MMS)
<android.app.AppOpsManager: android.util.LongSparseLongArray access$5000(android.os.Parcel)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAdminActiveAsUser(android.content.ComponentName,int)> (SMS_MMS)
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)> (SMS_MMS)
<android.telecom.Logging.Session: android.telecom.Logging.Session getParentSession()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int checkCarrierPrivilegesForPackage(int,java.lang.String)> (SMS_MMS)
<android.view.textclassifier.TextLinks: java.lang.CharSequence getText()> (SMS_MMS)
<android.app.LoadedApk: java.lang.String getLibDir()> (SMS_MMS)
<android.net.UidRange: int describeContents()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)> (SMS_MMS)
<android.os.Looper: android.os.MessageQueue getQueue()> (SMS_MMS)
<android.window.WindowContainerTransaction$HierarchyOp: boolean getToTop()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$1200(int)> (SMS_MMS)
<android.transition.ChangeScroll: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ITransientNotificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ActivityOptions: boolean getTaskOverlay()> (SMS_MMS)
<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.SurfaceControl getRenderSurfaceControl()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: int describeContents()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> (SMS_MMS)
<android.text.style.UnderlineSpan: int describeContents()> (SMS_MMS)
<android.security.keymaster.KeymasterCertificateChain: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()> (SMS_MMS)
<android.app.IProcessObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.View: int getHorizontalFadingEdgeLength()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.TransitionManager getTransitionManager()> (SMS_MMS)
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$SphericalCorrections getSignalGainCorrections()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: long getTsf()> (SMS_MMS)
<android.view.View$ForegroundInfo: int access$2602(android.view.View$ForegroundInfo,int)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()> (SMS_MMS)
<android.media.AudioTrack: int getPerformanceMode()> (SMS_MMS)
<android.content.pm.ShortcutManager: int getIconMaxWidth()> (SMS_MMS)
<android.media.AudioFocusInfo: int getGainRequest()> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getUidProcessState(int,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int hashCode()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.app.WallpaperColors getWallpaperColors(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCOLR()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getDbm()> (SMS_MMS)
<android.window.ITaskOrganizerController$Default: java.util.List getChildTasks(android.window.WindowContainerToken,int[])> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.CharSequence getDisplayName()> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.DropBoxManager$Entry: int describeContents()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.util.IntArray: int indexOf(int)> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.media.MediaFormat$FilteredMappedKeySet: int size()> (SMS_MMS)
<android.net.CaptivePortalData: long getByteLimit()> (SMS_MMS)
<android.text.StaticLayout: int getLineDescent(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()> (SMS_MMS)
<android.telephony.CellIdentity: java.lang.String getPlmn()> (SMS_MMS)
<android.content.ClipDescription: int getMimeTypeCount()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.ParcelableException: int describeContents()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: android.graphics.Rect getBoundsChangeSurfaceBounds()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccCardController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.ArrayMap$1: int colGetSize()> (SMS_MMS)
<android.os.IVoldListener$Stub: android.os.IVoldListener getDefaultImpl()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SmsManager: int getSubscriptionId()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4700()> (SMS_MMS)
<android.webkit.WebViewDelegate: boolean isMultiProcessEnabled()> (SMS_MMS)
<android.media.WebVttRenderingWidget: int access$400(int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.view.SurfaceControl$Transaction: int describeContents()> (SMS_MMS)
<android.os.health.HealthStats: int getStatsKeyCount()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getImplementor()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.permission.PermissionManager: java.util.Set getAutoRevokeExemptionRequestedPackages()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: android.os.Bundle getExtras()> (SMS_MMS)
<android.widget.TextView: int viewportToContentHorizontalOffset()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int getNativeSize()> (SMS_MMS)
<android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: int getState()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getStagedSessions()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRecords: com.android.internal.util.StateMachine$LogRec get(int)> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()> (SMS_MMS)
<android.media.Metadata: int getInt(int)> (SMS_MMS)
<android.os.VibrationEffect$Waveform: int getRepeatIndex()> (SMS_MMS)
<android.telephony.CallQuality: int getAverageRoundTripTime()> (SMS_MMS)
<android.view.Choreographer: long getFrameIntervalNanos()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar$Tab getTabAt(int)> (SMS_MMS)
<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.Resources getResources()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)> (SMS_MMS)
<android.telephony.SmsCbMessage: int getGeographicalScope()> (SMS_MMS)
<android.content.pm.PackageParser: int lambda$parseBaseApplication$2(android.content.pm.PackageParser$Service,android.content.pm.PackageParser$Service)> (SMS_MMS)
<android.window.ITaskOrganizer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: int getNetworkType()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIsoForPhone(int)> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.IInputManager access$400(android.hardware.input.InputManager)> (SMS_MMS)
<android.telephony.ServiceState: int getVoiceRoamingType()> (SMS_MMS)
<android.telephony.CellIdentityGsm: int getMcc()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityGsm: int hashCode()> (SMS_MMS)
<android.app.NotificationManager$Policy: int describeContents()> (SMS_MMS)
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<android.view.IWindowId$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.DataFailCause: int getFailCause(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: java.lang.String getPackageName()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()> (SMS_MMS)
<android.location.Geofence: int hashCode()> (SMS_MMS)
<android.os.StatFs: int getFreeBlocks()> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: android.content.pm.StringParceledListSlice getSystemCaAliases()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: android.graphics.Region getCurrentImeTouchRegion()> (SMS_MMS)
<android.media.session.ISessionController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.IntKeyframeSet: java.lang.Class getType()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: boolean getStereo()> (SMS_MMS)
<com.android.internal.util.BitUtils: int getUint8(java.nio.ByteBuffer,int)> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: int getOpacity()> (SMS_MMS)
<android.app.admin.DnsEvent: java.util.List getInetAddresses()> (SMS_MMS)
<android.content.pm.DataLoaderParams: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.view.IWindowSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: int hashCode()> (SMS_MMS)
<android.os.IPowerManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.util.MergedConfiguration: android.content.res.Configuration getGlobalConfiguration()> (SMS_MMS)
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.app.AppOpsManager: int unsafeCheckOp(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.util.LongSparseArray: int access$000(android.util.LongSparseArray)> (SMS_MMS)
<android.location.GpsMeasurement: double getAzimuthUncertaintyInDeg()> (SMS_MMS)
<com.android.internal.view.InlineSuggestionsRequestInfo: android.os.Bundle getUiExtras()> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.String getResourceName(int)> (SMS_MMS)
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub: android.app.IUiAutomationConnection asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1100(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)> (SMS_MMS)
<android.app.IUidObserver$Stub: android.app.IUidObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getRscp()> (SMS_MMS)
<android.app.prediction.AppTargetId: int describeContents()> (SMS_MMS)
<android.net.INetworkStatsService$Default: android.net.NetworkStats getDataLayerSnapshotForUid(int)> (SMS_MMS)
<android.view.WindowInsets$Side: int all()> (SMS_MMS)
<android.text.StaticLayout: int getEllipsizedWidth()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: byte[] getWatchlistConfigHash()> (SMS_MMS)
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] following(int)> (SMS_MMS)
<android.service.autofill.FieldClassification$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getRemoveContentMode(int)> (SMS_MMS)
<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)> (SMS_MMS)
<android.media.tv.TvInputManager: int access$500(android.media.tv.TvInputManager)> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IDumpstate$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IPinnedStackController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()> (SMS_MMS)
<android.hardware.location.ContextHubMessage: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: int getAnimationType()> (SMS_MMS)
<android.media.IAudioService$Default: int removePreferredDeviceForStrategy(int)> (SMS_MMS)
<android.app.job.IJobCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.Editor$InsertionPointCursorController: android.widget.Editor$InsertionHandleView getHandle()> (SMS_MMS)
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()> (SMS_MMS)
<android.util.Base64: byte[] decode(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataStateForSubId(int)> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.PlaybackState: long getActions()> (SMS_MMS)
<android.app.job.JobParameters: java.lang.String getReasonCodeDescription(int)> (SMS_MMS)
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)> (SMS_MMS)
<com.android.net.IProxyService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.os.CoolingDevice: int describeContents()> (SMS_MMS)
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()> (SMS_MMS)
<android.net.NetworkInfo: int getSubtype()> (SMS_MMS)
<android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getUserControlDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int describeContents()> (SMS_MMS)
<android.content.pm.ShortcutInfo$Builder: int access$1400(android.content.pm.ShortcutInfo$Builder)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.job.JobInfo: int getConstraintFlags()> (SMS_MMS)
<android.hardware.location.NanoAppState: long getNanoAppId()> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)> (SMS_MMS)
<com.android.internal.widget.DecorCaptionView: android.view.View getCaption()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: int getMixState()> (SMS_MMS)
<android.graphics.text.MeasuredText: float getCharWidthAt(int)> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationCenterY(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: boolean canDisablePhysicalSubscription()> (SMS_MMS)
<android.view.WindowInsets$Type: int indexOf(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isEmergencyNumber(java.lang.String,boolean)> (SMS_MMS)
<android.content.pm.IShortcutService$Default: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,int,int)> (SMS_MMS)
<android.os.Temperature: int getType()> (SMS_MMS)
<android.app.ActivityTaskManager$1: android.app.IActivityTaskManager create()> (SMS_MMS)
<android.content.pm.ParceledListSlice: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int getType()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getRssi()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isMmTelCapabilityProvisionedInCache(int,int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.IntentFilter: java.lang.String getMimeGroup(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BaseBundle: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: int getFeatureState()> (SMS_MMS)
<android.view.contentcapture.DataShareRequest: int hashCode()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onRemoveRoleHolder$2(java.lang.String,java.lang.String,int,android.app.role.IRoleController)> (SMS_MMS)
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()> (SMS_MMS)
<android.widget.LinearLayout: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub: android.content.pm.ICrossProfileApps getDefaultImpl()> (SMS_MMS)
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreProvider: long getKeyStoreOperationHandle(java.lang.Object)> (SMS_MMS)
<android.util.PackageUtils: byte[] computeSha256DigestBytes(byte[])> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.widget.HorizontalScrollView: int getMaxScrollAmount()> (SMS_MMS)
<android.net.IConnectivityManager$Default: java.lang.String[] getTetheringErroredIfaces()> (SMS_MMS)
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isTtyModeSupported()> (SMS_MMS)
<android.app.usage.UsageStatsManager: int getAppStandbyBucket(java.lang.String)> (SMS_MMS)
<android.app.WallpaperManager: int getWallpaperIdForUser(int,int)> (SMS_MMS)
<android.content.res.ColorStateList: android.content.res.ConstantState getConstantState()> (SMS_MMS)
<android.text.StaticLayout: int getStartHyphenEdit(int)> (SMS_MMS)
<android.database.MatrixCursor: java.lang.String[] getColumnNames()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isSafeModeEnabled()> (SMS_MMS)
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: int getEventCategory()> (SMS_MMS)
<android.renderscript.Long4: long length()> (SMS_MMS)
<android.text.DynamicLayout: int getStartHyphenEdit(int)> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: java.lang.CharSequence getText()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isWifiCallingAvailable(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeIdManager: android.view.View findView(int)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.os.Parcelable saveAllState()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)> (SMS_MMS)
<android.content.om.OverlayManager: java.util.List getOverlayInfosForTarget(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.text.AutoGrowArray$FloatArray: float get(int)> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isPasswordSufficientAfterProfileUnification(int,int)> (SMS_MMS)
<android.printservice.recommendation.RecommendationInfo: java.util.List getDiscoveredPrinters()> (SMS_MMS)
<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder getOrThrow()> (SMS_MMS)
<android.widget.SearchView: int getImeOptions()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: float getTextSizeInPx()> (SMS_MMS)
<android.content.IContentService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellInfoCdma: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getAutofillType()> (SMS_MMS)
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)> (SMS_MMS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()> (SMS_MMS)
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()> (SMS_MMS)
<android.content.ComponentName: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.CursorWrapper: float getFloat(int)> (SMS_MMS)
<android.telephony.CellInfo$1: android.telephony.CellInfo[] newArray(int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.os.Debug$MemoryInfo: java.lang.String getMemoryStat(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: boolean isOnBatteryScreenOffLocked()> (SMS_MMS)
<android.app.timedetector.NetworkTimeSuggestion: int hashCode()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)> (SMS_MMS)
<android.renderscript.Allocation: android.view.Surface getSurface()> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.util.LongSparseLongArray: int size()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(android.net.Uri)> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.NetworkTemplate: java.lang.String getSubscriberId()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Default: float[] getDeviceTemperatures(java.lang.String,int,int)> (SMS_MMS)
<android.graphics.Paint: float getWordSpacing()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getRemovedSystemPowerWhitelistApps()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: boolean continueWhenFinished()> (SMS_MMS)
<android.content.res.TypedArray: float getFraction(int,int,int,float)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: long getCacheQuotaBytes(java.lang.String,int)> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getNotificationChannelForPackage(java.lang.String,int,java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: java.util.List getPackagesForOps(int[])> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getCursorHorizontalPosition(android.text.Layout,int)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getWriteBufIndex()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()> (SMS_MMS)
<android.os.IIncidentManager$Stub$Proxy: java.util.List getIncidentReportList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()> (SMS_MMS)
<android.window.WindowMetricsHelper: android.graphics.Rect getBoundsExcludingNavigationBarAndCutout(android.view.WindowMetrics)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getLaunchMode()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$6: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub: android.hardware.radio.ITuner getDefaultImpl()> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getItalic()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getColorEffect()> (SMS_MMS)
<android.view.View$2: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getCallCapablePhoneAccounts(boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.View: android.graphics.drawable.Drawable getHorizontalScrollbarThumbDrawable()> (SMS_MMS)
<android.os.SharedMemory: int getFd()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setExcludedCarriers(java.util.List)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.lang.String getFileTimestamps(java.lang.String)> (SMS_MMS)
<android.telephony.AvailableNetworkInfo$1: void <init>()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int addSubInfo(java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.PrintJobId: int hashCode()> (SMS_MMS)
<android.app.IActivityManager$Default: int startActivityFromRecents(int,android.os.Bundle)> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getGroup()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCLIR()> (SMS_MMS)
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted()> (SMS_MMS)
<android.location.LocationManager$BatchedLocationCallbackManager: boolean registerService(java.lang.Void)> (SMS_MMS)
<android.content.res.Resources$Theme: int[] getAllAttributes()> (SMS_MMS)
<android.content.ClipDescription: long getTimestamp()> (SMS_MMS)
<android.media.MediaHTTPConnection: java.lang.String getMIMEType()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()> (SMS_MMS)
<android.app.IActivityManager$Default: java.util.List getServices(int,int)> (SMS_MMS)
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getImsRegTechnologyForMmTel(int)> (SMS_MMS)
<android.location.LocationManager$LocationListenerTransport: android.location.LocationListener getKey()> (SMS_MMS)
<android.location.Location: int access$1102(android.location.Location,int)> (SMS_MMS)
<com.android.internal.net.VpnConfig: java.lang.CharSequence getVpnLabel(android.content.Context,java.lang.String)> (SMS_MMS)
<android.app.IWallpaperManager$Default: int getWallpaperIdForUser(int,int)> (SMS_MMS)
<android.net.LinkAddress: long getExpirationTime()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean getBlockUninstallForUser(java.lang.String,int)> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List getExcludedCarriers()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isDeviceUpgrading()> (SMS_MMS)
<android.view.DragEvent: android.content.ClipDescription getClipDescription()> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.autofill.AutofillManager: int getRequestIdFromAuthenticationId(int)> (SMS_MMS)
<android.view.ViewRootInsetsControllerHost: int getSystemBarsAppearance()> (SMS_MMS)
<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int getMeteringWeight()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: java.lang.String[] getNames()> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int getAudioQuality()> (SMS_MMS)
<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: java.lang.String getState()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getUpgradeKeySets()> (SMS_MMS)
<android.media.IAudioService$Default: int trackPlayer(android.media.PlayerBase$PlayerIdCard)> (SMS_MMS)
<android.widget.ListPopupWindow: int getPromptPosition()> (SMS_MMS)
<android.net.NetworkStats: long getTotalPackets()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: android.widget.RemoteViews getViewAt(int)> (SMS_MMS)
<android.content.IContentService$Default: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)> (SMS_MMS)
<android.hardware.location.ContextHubTransaction$Response: java.lang.Object getContents()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)> (SMS_MMS)
<android.media.session.ISession$Stub: android.media.session.ISession asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getScreenOffCpuFreqTimes(int,int)> (SMS_MMS)
<android.telecom.TelecomManager: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic)> (SMS_MMS)
<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgeDrawable(int,int)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getText()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSubscriberId(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: android.view.Surface getInputSurface()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()> (SMS_MMS)
<android.media.midi.MidiOutputPort: int getPortNumber()> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptetsUsingTables(java.lang.CharSequence,boolean,int,int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.IAlarmManager$Stub$Proxy: long currentNetworkTimeMillis()> (SMS_MMS)
<android.permission.IPermissionManager$Default: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)> (SMS_MMS)
<android.telecom.VideoProfile: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int[] getActiveSubIdList(boolean)> (SMS_MMS)
<android.telephony.CellInfoWcdma: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.view.SurfaceControlViewHost: android.view.View getView()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: int[] getChildSessionIds()> (SMS_MMS)
<com.android.internal.content.PackageMonitor: int getChangingUserId()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: int getTaskId()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int getClientUid()> (SMS_MMS)
<android.security.keystore.recovery.KeyDerivationParams: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuClusterTimes()> (SMS_MMS)
<android.hardware.hdmi.HdmiPlaybackClient: int getDeviceType()> (SMS_MMS)
<android.permission.PermissionControllerManager$1: android.os.Handler getJobHandler()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette$Swatch: float[] getHsl()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.Sensor: int getFifoReservedEventCount()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.List)> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.FontConfig: android.text.FontConfig$Alias[] getAliases()> (SMS_MMS)
<android.app.FragmentHostCallback: android.content.Context getContext()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: int getDesiredHeightResId()> (SMS_MMS)
<android.graphics.Rect: int describeContents()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: int getNonInteractiveUiTimeoutMillis()> (SMS_MMS)
<android.location.LocationManager: java.lang.String[] getIgnoreSettingsWhitelist()> (SMS_MMS)
<android.app.ActivityOptions: android.os.IRemoteCallback getAnimationStartedListener()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getEnd()> (SMS_MMS)
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace getDestination()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.Paint: float getShadowLayerRadius()> (SMS_MMS)
<android.transition.ChangeBounds$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.graphics.drawable.Drawable: int getLayoutDirection()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: java.util.List getInputMethodList(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getEmergencyNumberDbVersion()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Default: android.content.pm.IDataLoader getDataLoader(int)> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable6gChannels()> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.hardware.hdmi.IHdmiDeviceEventListener getDefaultImpl()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub: android.os.storage.IStorageShutdownObserver getDefaultImpl()> (SMS_MMS)
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor)> (SMS_MMS)
<com.android.internal.content.om.OverlayScanner: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo getParsedInfo(java.lang.String)> (SMS_MMS)
<android.database.CursorWindow: byte[] getBlob(int,int)> (SMS_MMS)
<android.media.MediaRouter: int getWifiDisplayStatusCode(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.os.Bundle getSessionInfo()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()> (SMS_MMS)
<android.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()> (SMS_MMS)
<android.os.Bundle: short[] getShortArray(java.lang.String)> (SMS_MMS)
<android.text.FontConfig$Family: android.text.FontConfig$Font[] getFonts()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.util.UUID getUuid()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int invokeOemRilRequestRaw(byte[],byte[])> (SMS_MMS)
<android.view.ViewGroup: android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View)> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: android.hardware.display.BrightnessCorrection getCorrectionByCategory(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int describeContents()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean isTopActivityImmersive()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: int getReadReport()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()> (SMS_MMS)
<android.os.PowerManager: boolean isInteractive()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getName()> (SMS_MMS)
<android.graphics.Bitmap: byte[] getNinePatchChunk()> (SMS_MMS)
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()> (SMS_MMS)
<android.os.ISystemConfig$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> (SMS_MMS)
<android.hardware.Camera$Parameters: int getExposureCompensation()> (SMS_MMS)
<android.app.DirectAction: int getTaskId()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnCount(int)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: int describeContents()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub: com.android.internal.view.IInputSessionCallback getDefaultImpl()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: java.lang.String getMountedObbPath(java.lang.String)> (SMS_MMS)
<android.hardware.Sensor: int getFifoMaxEventCount()> (SMS_MMS)
<android.os.IUserManager$Default: android.os.Bundle getApplicationRestrictions(java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getMinSdkVersion()> (SMS_MMS)
<android.os.UserManager: long getUserCreationTime(android.os.UserHandle)> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: char next()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: long getFirstInstallTime()> (SMS_MMS)
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()> (SMS_MMS)
<android.app.ActivityManager: boolean isUserAMonkey()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calcUnicodeEncodingDetails(java.lang.CharSequence)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getLevel()> (SMS_MMS)
<android.content.IClipboard$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.VerifiedKeyEvent: long getDownTimeNanos()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.session.ISessionController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo$1: android.telephony.ClosedSubscriberGroupInfo[] newArray(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int[] getSubId(int)> (SMS_MMS)
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)> (SMS_MMS)
<android.media.VolumeShaper$Operation: int hashCode()> (SMS_MMS)
<android.hardware.camera2.params.RggbChannelVector: float getRed()> (SMS_MMS)
<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfoService()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledMinScrollbarTouchTarget()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.content.Context getRemoteContext()> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.renderscript.FieldPacker: byte[] getData()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getDeviceIdlingTime(int,long,int)> (SMS_MMS)
<android.view.MotionEvent: float getRawY()> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.Class getKeyClass()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telecom.Logging.Session$Info: android.telecom.Logging.Session$Info getExternalInfo(android.telecom.Logging.Session,java.lang.String)> (SMS_MMS)
<android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.res.Resources$Theme: long getNativeTheme()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)> (SMS_MMS)
<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keymaster.KeymasterCertificateChain getCertificateChain()> (SMS_MMS)
<android.telephony.LteVopsSupportInfo: int hashCode()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getDescriptionRes()> (SMS_MMS)
<android.text.BoringLayout: int getBottomPadding()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemCategory()> (SMS_MMS)
<android.telephony.ims.ImsManager: android.telephony.ims.ImsRcsManager getImsRcsManager(int)> (SMS_MMS)
<android.text.style.SuggestionSpan: int getSpanTypeId()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getRestrictCause()> (SMS_MMS)
<android.app.IUriGrantsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.radio.V1_4.SignalStrength: int hashCode()> (SMS_MMS)
<android.os.BatteryManager: long getLongProperty(int)> (SMS_MMS)
<android.view.Window: android.media.session.MediaController getMediaController()> (SMS_MMS)
<android.widget.FastScroller: int getWidth()> (SMS_MMS)
<com.android.internal.policy.DecorView: int getCaptionHeight()> (SMS_MMS)
<android.view.View: android.graphics.BlendMode getForegroundTintBlendMode()> (SMS_MMS)
<android.app.AutomaticZenRule: int getInterruptionFilter()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.IContextHubClient createClient(int,android.hardware.location.IContextHubClientCallback)> (SMS_MMS)
<android.content.pm.ConfigurationInfo: int describeContents()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.util.Pair getRadioHalVersion()> (SMS_MMS)
<android.net.IIpSecService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.SystemProperties$Handle: int getInt(int)> (SMS_MMS)
<android.transition.Transition: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.os.VibrationEffect$Waveform: long[] getTimings()> (SMS_MMS)
<android.content.Context: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: int deleteBindMount(int,java.lang.String)> (SMS_MMS)
<android.app.backup.BackupManager: android.content.Intent getConfigurationIntent(java.lang.String)> (SMS_MMS)
<com.android.internal.util.VirtualRefBasePtr: long get()> (SMS_MMS)
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] following(int)> (SMS_MMS)
<android.net.Ikev2VpnProfile: java.lang.String getServerAddr()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: com.android.internal.telephony.IUpdateAvailableNetworksCallback getDefaultImpl()> (SMS_MMS)
<android.animation.PathKeyframes$2: float getFloatValue(float)> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub: android.net.lowpan.ILowpanManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: int describeContents()> (SMS_MMS)
<android.app.IBackupAgent$Stub: android.app.IBackupAgent asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.widget.CheckedTextView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)> (SMS_MMS)
<android.location.GnssSingleSatCorrection: int describeContents()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub: android.hardware.ISensorPrivacyManager getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: int getSmsCapacityOnIccForSubscriber(int)> (SMS_MMS)
<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()> (SMS_MMS)
<android.app.backup.BackupDataInputStream: java.lang.String getKey()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.UriGrantsManager$1: android.app.IUriGrantsManager create()> (SMS_MMS)
<com.android.internal.infra.RemoteStream$2: java.io.Closeable createStream(android.os.ParcelFileDescriptor)> (SMS_MMS)
<android.app.IUiAutomationConnection$Default: android.view.WindowContentFrameStats getWindowContentFrameStats(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeZoneEnabled(android.content.ComponentName)> (SMS_MMS)
<android.telephony.CellInfoGsm: int describeContents()> (SMS_MMS)
<android.location.LocationProvider: int getPowerRequirement()> (SMS_MMS)
<android.view.DragEvent: int getAction()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean resetModemConfig(int)> (SMS_MMS)
<android.drm.DrmEvent: int getType()> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getEncapsulationModes()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeNamespace(int)> (SMS_MMS)
<android.app.Notification$Action$Builder: android.os.Bundle getExtras()> (SMS_MMS)
<android.view.View: int computeVerticalScrollOffset()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: byte[] access$300(android.net.lowpan.LowpanBeaconInfo)> (SMS_MMS)
<android.app.usage.UsageStats: long getLastTimeStamp()> (SMS_MMS)
<android.companion.AssociationRequest: int hashCode()> (SMS_MMS)
<com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int describeContents()> (SMS_MMS)
<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)> (SMS_MMS)
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> (SMS_MMS)
<android.app.Notification$WearableExtender: int getContentIcon()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVideoTelephonyAvailable()> (SMS_MMS)
<android.app.ITaskStackListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int restartUserInBackground(int)> (SMS_MMS)
<android.location.GnssMeasurementCorrections: double getLatitudeDegrees()> (SMS_MMS)
<android.util.jar.StrictJarFile$JarFileInputStream: int available()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.InsetsState: android.view.InsetsSource getSource(int)> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: float[] getTabStops()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getPhoneId(int)> (SMS_MMS)
<android.content.ClipDescription: int describeContents()> (SMS_MMS)
<android.app.job.JobInfo: long getTriggerContentUpdateDelay()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: int getConstellationType()> (SMS_MMS)
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()> (SMS_MMS)
<android.media.MediaRouter$UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()> (SMS_MMS)
<android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream getSocketOutputStream()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.ParcelableColorSpace: float getMinValue(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getSimStateForSlotIndex(int)> (SMS_MMS)
<android.media.MediaFormat: int getInteger(java.lang.String)> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.CellInfoNr: int hashCode()> (SMS_MMS)
<android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()> (SMS_MMS)
<android.hardware.ICameraClient$Stub: android.hardware.ICameraClient asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.http.SslCertificate$DName: java.lang.String getDName()> (SMS_MMS)
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub: android.media.tv.ITvInputHardwareCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager: com.android.internal.app.IAppOpsService access$300()> (SMS_MMS)
<android.service.notification.StatusBarNotification: int getUserId()> (SMS_MMS)
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getKernelActiveTimeMillis()> (SMS_MMS)
<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> (SMS_MMS)
<android.location.GpsMeasurement: short getTimeFromLastBitInMs()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getScheme()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$PortAddrs: boolean equals(java.lang.Object)> (SMS_MMS)
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()> (SMS_MMS)
<android.net.NetworkTemplate: byte[] getBytesForBackup()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)> (SMS_MMS)
<android.filterfw.core.NativeFrame: int getCapacity()> (SMS_MMS)
<android.app.usage.StorageStatsManager: boolean isQuotaSupported(java.lang.String)> (SMS_MMS)
<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig getConfigForHostname(java.lang.String)> (SMS_MMS)
<android.view.WindowManagerImpl: android.view.WindowMetrics getMaximumWindowMetrics()> (SMS_MMS)
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Stub: android.system.suspend.ISuspendCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int putStringFromNative(int,java.lang.String)> (SMS_MMS)
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getFreqTimeReaderInstance()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAffiliatedUser()> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.io.File getPathForUser(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int getProcessLimit()> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getLoopCount(int)> (SMS_MMS)
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: com.android.internal.telephony.euicc.ICancelSessionCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.app.NotificationManager: java.lang.String getNotificationDelegate()> (SMS_MMS)
<android.view.ViewRootImpl$InputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)> (SMS_MMS)
<android.hardware.ICamera$Stub: android.hardware.ICamera asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.MapCollections$EntrySet: int hashCode()> (SMS_MMS)
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.ListPopupWindow: int getVerticalOffset()> (SMS_MMS)
<android.text.Layout$Directions: int getRunStart(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean getSyntheticAppDetailsActivityEnabled(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.EncodedStringValue getFrom()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int unlock(int,java.lang.String)> (SMS_MMS)
<android.media.MediaDrm$CryptoSession: byte[] sign(byte[],byte[])> (SMS_MMS)
<android.transition.Transition$1: android.graphics.Path getPath(float,float,float,float)> (SMS_MMS)
<android.app.prediction.IPredictionManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: int describeContents()> (SMS_MMS)
<android.os.incremental.V4Signature: byte[] toByteArray()> (SMS_MMS)
<android.media.Tokenizer: int access$102(android.media.Tokenizer,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getWifiScanTimer()> (SMS_MMS)
<android.hardware.HardwareBuffer: int getLayers()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)> (SMS_MMS)
<android.view.AbsSavedState: android.os.Parcelable getSuperState()> (SMS_MMS)
<android.service.textclassifier.TextClassifierService: android.content.ComponentName getServiceComponentName(android.content.Context,java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char)> (SMS_MMS)
<android.service.gatekeeper.GateKeeperResponse: int getTimeout()> (SMS_MMS)
<android.os.Environment: java.io.File getVendorDirectory()> (SMS_MMS)
<android.content.res.ColorStateList: int describeContents()> (SMS_MMS)
<android.view.View: int getSourceLayoutResId()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri,boolean)> (SMS_MMS)
<android.view.WindowInsets: int hashCode()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: long getId()> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioVolumeGroups()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.ConnectivityManager: java.util.List getVpnLockdownWhitelist(int)> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String parsePath(java.lang.String,int)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.util.List queryBlobsForUser(int)> (SMS_MMS)
<android.animation.StateListAnimator: android.view.View getTarget()> (SMS_MMS)
<android.telephony.ServiceState$1: android.telephony.ServiceState createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.location.ILocationManager$Default: boolean getCurrentLocation(android.location.LocationRequest,android.os.ICancellationSignal,android.location.ILocationListener,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.View: int getLayerType()> (SMS_MMS)
<android.media.Ringtone: float getVolume()> (SMS_MMS)
<android.widget.Editor$EasyEditPopupWindow: int getVerticalLocalPosition(int)> (SMS_MMS)
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getPartialResultCount()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$2100(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.graphics.ImageDecoder$Source: int computeDstDensity()> (SMS_MMS)
<android.animation.AnimationHandler$MyFrameCallbackProvider: long getFrameDelay()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<android.text.style.StrikethroughSpan: int getSpanTypeId()> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionAdd: int getActionTag()> (SMS_MMS)
<android.util.LongSparseArray: int indexOfKey(long)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$100(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)> (SMS_MMS)
<android.view.MotionEvent: float getRawY(int)> (SMS_MMS)
<android.media.session.MediaController: android.media.session.MediaSession$Token getSessionToken()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.utils.SubmitInfo submitCaptureRequests(android.hardware.camera2.CaptureRequest[],boolean)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.ViewConfiguration: float getScaledAmbiguousGestureMultiplier()> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String getDescription()> (SMS_MMS)
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(android.hardware.Camera$Size,android.hardware.Camera$Size)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: int getTransformCapabilities()> (SMS_MMS)
<android.view.MotionEvent: long getEventTime()> (SMS_MMS)
<android.app.admin.ConnectEvent: int describeContents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.telephony.SubscriptionManager: int[] getCompleteActiveSubscriptionIdList()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub: android.window.IDisplayAreaOrganizer asInterface(android.os.IBinder)> (SMS_MMS)
<android.webkit.WebViewFactory: java.lang.String getWebViewLibrary(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.content.ContentProvider: int checkUriPermission(android.net.Uri,int,int)> (SMS_MMS)
<android.net.IpSecAlgorithm: int describeContents()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List areCarrierIdentifiersAllowed(java.util.List)> (SMS_MMS)
<android.media.session.MediaSessionManager$Session2TokensChangedWrapper: android.media.session.ISession2TokensListener$Stub getStub()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.style.ScaleXSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.PduBody getBody()> (SMS_MMS)
<android.telephony.SmsMessage: int getSubId()> (SMS_MMS)
<android.os.Temperature: java.lang.String getName()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: int getLockScreenUiFormat()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getId()> (SMS_MMS)
<android.hardware.camera2.params.OisSample: float getYshift()> (SMS_MMS)
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.timezonedetector.ManualTimeZoneSuggestion: java.lang.String getZoneId()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.backup.BackupManager: java.lang.String getCurrentTransport()> (SMS_MMS)
<android.widget.AbsListView: int computeVerticalScrollExtent()> (SMS_MMS)
<android.media.AudioRecord: android.media.AudioDeviceInfo getRoutedDevice()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric(int)> (SMS_MMS)
<android.content.Intent: android.os.Bundle getExtras()> (SMS_MMS)
<android.hardware.radio.V1_2.SignalStrength: int hashCode()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getFlags()> (SMS_MMS)
<com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling get(java.lang.Class)> (SMS_MMS)
<android.content.res.TypedArray: android.graphics.Typeface getFont(int)> (SMS_MMS)
<android.text.Editable$Factory: android.text.Editable$Factory getInstance()> (SMS_MMS)
<android.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAccessibleSubscriptionInfoList(java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanCredential: int hashCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPermissionPolicy(android.content.ComponentName)> (SMS_MMS)
<android.app.SearchManager: boolean isVisible()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GnssReflectingPlane: double getAzimuthDegrees()> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()> (SMS_MMS)
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getLibraryNames()> (SMS_MMS)
<android.net.INetworkScoreService$Stub$Proxy: android.net.NetworkScorerAppData getActiveScorer()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: java.util.List getStartedJobs()> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: int hashCode()> (SMS_MMS)
<android.view.InputDevice: java.util.List getMotionRanges()> (SMS_MMS)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getAppScanRequestCount()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.os.IIncidentCompanion$Default: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)> (SMS_MMS)
<android.app.admin.NetworkEvent: java.lang.String getPackageName()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)> (SMS_MMS)
<android.graphics.fonts.FontVariationAxis: int getOpenTypeTagValue()> (SMS_MMS)
<android.hardware.ICameraService$Default: int getNumberOfCameras(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getWifiSignalStrengthCount(int,int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: boolean getAllowDowngrade()> (SMS_MMS)
<android.text.style.AccessibilityReplacementSpan: int describeContents()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getState()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()> (SMS_MMS)
<android.widget.Editor: int access$4900(android.widget.Editor)> (SMS_MMS)
<android.hardware.camera2.CaptureFailure: java.lang.String getPhysicalCameraId()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<com.android.internal.os.PowerProfile$CpuClusterKey: int access$100(com.android.internal.os.PowerProfile$CpuClusterKey)> (SMS_MMS)
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo: byte getDiscriminator()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getLastResumedActivityUserId()> (SMS_MMS)
<android.graphics.RenderNode: float getElevation()> (SMS_MMS)
<com.android.internal.telephony.IPhoneStateListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener getDefaultImpl()> (SMS_MMS)
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)> (SMS_MMS)
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage getStorage(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityStart()> (SMS_MMS)
<com.android.internal.midi.MidiDispatcher: android.media.midi.MidiSender getSender()> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> (SMS_MMS)
<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Email: int getTypeLabelResource(int)> (SMS_MMS)
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()> (SMS_MMS)
<android.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.media.tv.tunerresourcemanager.ITunerResourceManager getDefaultImpl()> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: long getIntervalMillis()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertSceneModeFromLegacy(java.lang.String)> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroup: int getId()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: float getSleepPowerDrawMw()> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getReturnTransition()> (SMS_MMS)
<android.net.IpSecConfig: java.lang.String getDestinationAddress()> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.provider.ContactsContract$RawContacts: java.lang.String getLocalAccountName(android.content.Context)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isInternationalNumber(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.health.HealthStats: int getTimersKeyAt(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getDeviceOwnerName()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getRadioAccessFamily(int,java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityNr: java.util.Set getAdditionalPlmns()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.app.role.IOnRoleHoldersChangedListener getDefaultImpl()> (SMS_MMS)
<android.graphics.ImageDecoder: boolean getDecodeAsAlphaMask()> (SMS_MMS)
<android.view.textclassifier.TextSelection: int getSelectionStartIndex()> (SMS_MMS)
<android.widget.ImageView: int getMaxWidth()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getDefaultDisplayRotation()> (SMS_MMS)
<android.view.View: int getScrollCaptureHint()> (SMS_MMS)
<com.android.internal.policy.IShortcutService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View$11: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: int hashCode()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: android.app.admin.PasswordMetrics getRequestedPasswordMetrics(int)> (SMS_MMS)
<android.media.MediaCodecList: android.media.MediaCodecInfo getInfoFor(java.lang.String)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: byte[] getTransactionId()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: byte[] getContentDisposition()> (SMS_MMS)
<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()> (SMS_MMS)
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumWidth()> (SMS_MMS)
<android.app.ActivityManager: java.util.List getHistoricalProcessExitReasons(java.lang.String,int,int)> (SMS_MMS)
<android.app.ServiceStartArgs: int describeContents()> (SMS_MMS)
<android.app.ActivityOptions: android.view.IAppTransitionAnimationSpecsFuture getSpecsFuture()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int onUserRemoved(int)> (SMS_MMS)
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int,int,int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getEventIndex()> (SMS_MMS)
<android.view.MotionEvent: int getEdgeFlags()> (SMS_MMS)
<android.net.NetworkTemplate: java.lang.String getNetworkId()> (SMS_MMS)
<android.print.PrintJob: android.print.PrintJobId getId()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: int getVoWiFiModeSetting()> (SMS_MMS)
<android.widget.TextView: int getShadowColor()> (SMS_MMS)
<android.security.KeyStore: int abort(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.LowpanScanner: int getTxPower()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma$1: void <init>()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: android.os.Bundle getExtras()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo()> (SMS_MMS)
<android.net.RouteInfo: android.net.LinkAddress getDestinationLinkAddress()> (SMS_MMS)
<android.telephony.DataConnectionRealTimeInfo: int getDcPowerState()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.util.Set getCategories()> (SMS_MMS)
<android.util.KeyValueListParser$StringValue: java.lang.String getDefaultValue()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)> (SMS_MMS)
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] preceding(int)> (SMS_MMS)
<android.text.CharSequenceCharacterIterator: int getIndex()> (SMS_MMS)
<android.permission.PermissionManager$SplitPermissionInfo: int getTargetSdk()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForUid(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.widget.TextView: java.util.Locale getSpellCheckerLocale()> (SMS_MMS)
<android.app.IBackupAgent$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int access$6100(long)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getLeft()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)> (SMS_MMS)
<android.location.GpsMeasurementsEvent: int describeContents()> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub: android.app.backup.IBackupCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.ILocationManager$Default: long getGnssCapabilities()> (SMS_MMS)
<android.app.RemoteInput: int getResultsSource(android.content.Intent)> (SMS_MMS)
<android.telephony.CbGeoUtils$LatLng: double distance(android.telephony.CbGeoUtils$LatLng)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getDeviceOwnerLockScreenInfo()> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()> (SMS_MMS)
<android.media.MediaSyncEvent: int getType()> (SMS_MMS)
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_0.CellIdentity)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: java.util.List analyticsEvents()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCLIP()> (SMS_MMS)
<android.os.Environment: java.io.File getDataMiscCeDirectory()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getOptionFlags()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.sqlite.SQLiteDatabase$CursorFactory getCursorFactory()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: int describeContents()> (SMS_MMS)
<com.android.internal.view.InlineSuggestionsRequestInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.os.UserManager: boolean isSystemUser()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub: android.telephony.ims.aidl.IImsConfig asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String getHintIdEntry()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileContactsSearchDisabledForUser(int)> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getMvnoMatchData()> (SMS_MMS)
<android.app.prediction.AppPredictionContext: int describeContents()> (SMS_MMS)
<android.telephony.SignalStrength$1: android.telephony.SignalStrength createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isPackageAllowedToAccessCalendar(java.lang.String)> (SMS_MMS)
<android.provider.DeviceConfig$Properties: java.lang.String getNamespace()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: int getOffsetAtCoordinate(android.text.Layout,int,float)> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)> (SMS_MMS)
<android.net.NetworkStatsHistory: long getTotalBytes()> (SMS_MMS)
<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.DatabaseErrorHandler getErrorHandler()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayColorTemperature()> (SMS_MMS)
<android.util.RecurrenceRule: int describeContents()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: android.content.pm.ParceledListSlice getAllPendingJobs()> (SMS_MMS)
<android.media.session.ISessionController$Default: java.lang.String getPackageName()> (SMS_MMS)
<android.media.MediaCodec$MediaImage: long getTimestamp()> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.lang.String[] getCameraIdListNoLazy()> (SMS_MMS)
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int calculateMarshalSize(android.util.Pair)> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String getShortMethodName()> (SMS_MMS)
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForPackage(java.lang.String,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: byte[] getBeaconAddress()> (SMS_MMS)
<android.view.VerifiedMotionEvent: int getFlags()> (SMS_MMS)
<android.telephony.SubscriptionManager: void lambda$addOnSubscriptionsChangedListener$0(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)> (SMS_MMS)
<android.app.Dialog: int getVolumeControlStream()> (SMS_MMS)
<android.app.ContextImpl: java.util.concurrent.Executor getMainExecutor()> (SMS_MMS)
<android.view.textclassifier.ConversationAction: android.os.Bundle getExtras()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceManaged()> (SMS_MMS)
<android.view.InputDevice: java.lang.String getName()> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Stub: com.android.internal.telephony.IBooleanConsumer asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.res.AssetManager: int access$700(long)> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$applyStagedRuntimePermissionBackup$10(java.lang.String,android.os.UserHandle,android.permission.IPermissionController)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setPackageName(java.lang.String)> (SMS_MMS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: java.util.List getOpsForPackage(int,java.lang.String,int[])> (SMS_MMS)
<android.app.SystemServiceRegistry$70: android.app.trust.TrustManager createService()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isResetPasswordTokenActive(android.content.ComponentName)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getInputDevices()> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: android.hardware.ICameraService getCameraService()> (SMS_MMS)
<com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass[] values()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean supplyPinForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: int getAppliedStyleResId()> (SMS_MMS)
<android.os.IVoldListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.WebVttTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: java.util.concurrent.atomic.AtomicBoolean access$100(android.net.wifi.nl80211.WifiNl80211Manager)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState$1: void <init>()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoSizes()> (SMS_MMS)
<android.media.IMediaRouter2$Stub: android.media.IMediaRouter2 asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.IGnssStatusListener$Stub: android.location.IGnssStatusListener getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.legacy.ParameterUtils: int getClosestAvailableZoomCrop(android.hardware.Camera$Parameters,android.graphics.Rect,android.util.Size,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)> (SMS_MMS)
<android.os.IServiceCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.google.android.mms.util.DrmConvertSession: int close(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long getAnimatorNativePtr()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub: android.content.pm.IOnAppsChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int clearSubInfo()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)> (SMS_MMS)
<android.transition.Transition: android.util.ArrayMap getNameOverrides()> (SMS_MMS)
<android.view.MotionEvent: float getTouchMajor(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List retrievePreRebootSecurityLogs(android.content.ComponentName)> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataNetworkType()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.Intent createManageBlockedNumbersIntent()> (SMS_MMS)
<android.content.pm.ServiceInfo: int getForegroundServiceType()> (SMS_MMS)
<android.os.IUserManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.Uri: int compareTo(java.lang.Object)> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getCacheForType(int,int)> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub: android.os.IRecoverySystemProgressListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeNameResource(int)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getRxBytes()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getPrecaptureTriggerId()> (SMS_MMS)
<android.view.View: int getScrollBarFadeDuration()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] supplyPinReportResultForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.media.session.ISessionCallback$Stub: android.media.session.ISessionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.IAudioService$Default: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)> (SMS_MMS)
<android.content.Context: android.os.IBinder getActivityToken()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: java.lang.String[] listAllTransports()> (SMS_MMS)
<android.app.assist.AssistStructure$HtmlInfoNode: java.lang.String getTag()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfig$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: java.lang.String getNickname()> (SMS_MMS)
<android.os.storage.StorageManager: long getAllocatableBytes(java.util.UUID,int)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.lang.String getDefaultBrowser(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioningConfigApplied()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.View: float getPivotX()> (SMS_MMS)
<com.android.internal.database.SortCursor: short getShort(int)> (SMS_MMS)
<android.widget.Scroller: int getDuration()> (SMS_MMS)
<android.webkit.WebStorage$Origin: long getQuota()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getAutoTimeZoneEnabled(android.content.ComponentName)> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String,int)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: com.android.internal.telephony.euicc.IListNotificationsCallback getDefaultImpl()> (SMS_MMS)
<android.view.InputDevice: int[] getDeviceIds()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceType()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAvailableServices(java.util.List)> (SMS_MMS)
<android.app.ISearchManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub: com.android.internal.telephony.euicc.IEuiccController asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.GnssClock: long getElapsedRealtimeNanos()> (SMS_MMS)
<android.media.AudioManager: android.media.AudioManager$AudioServerStateCallback access$1700(android.media.AudioManager)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String)> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityTdscdma: int hashCode()> (SMS_MMS)
<android.content.res.GradientColor$GradientColorFactory: int getChangingConfigurations()> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(int,java.lang.String,long,long,int,int,int)> (SMS_MMS)
<android.view.KeyboardShortcutInfo: int describeContents()> (SMS_MMS)
<android.text.InputFilter$AllCaps$CharSequenceWrapper: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CallQuality: int getMaxRelativeJitter()> (SMS_MMS)
<android.app.assist.AssistStructure: int access$200(android.app.assist.AssistStructure)> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.LinkAddress: boolean isIPv6()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setDisplayNumber(java.lang.String,int)> (SMS_MMS)
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int,int,int)> (SMS_MMS)
<android.media.RouteDiscoveryPreference: android.os.Bundle getExtras()> (SMS_MMS)
<android.os.Parcel$2: java.lang.Class resolveClass(java.io.ObjectStreamClass)> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.hardware.hdmi.IHdmiInputChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.display.DeviceProductInfo$ManufactureDate: java.lang.Integer getYear()> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry getDefaultImpl()> (SMS_MMS)
<android.animation.PathKeyframes$SimpleKeyframes: android.animation.Keyframes clone()> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: android.view.IWindowId getWindowId(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String,int)> (SMS_MMS)
<android.animation.Keyframe: java.lang.Class getType()> (SMS_MMS)
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String[] getParticipants()> (SMS_MMS)
<android.os.BatteryStats$LevelStepTracker: long getDurationAt(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getVendorUuid()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: com.android.internal.telephony.euicc.ISwitchToProfileCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ProgressBar: int getProgress()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int hashCode()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)> (SMS_MMS)
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.content.Context: int getThemeResId()> (SMS_MMS)
<android.os.Environment: java.io.File getRootDirectory()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.String getClientPackageName()> (SMS_MMS)
<android.telephony.UiccAccessRule: java.lang.String getPackageName()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getRejectCount(int,int,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getTelephonyHistograms()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryNativeHeapRss()> (SMS_MMS)
<android.media.IPlayer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IMediaRouterService$Stub: android.media.IMediaRouterService getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub: android.content.pm.IPinItemRequest getDefaultImpl()> (SMS_MMS)
<android.telephony.CellIdentity: long inRangeOrUnavailable(long,long,long)> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getAppVersion()> (SMS_MMS)
<android.database.sqlite._$$Lambda$RBWjWVyGrOTsQrLCYzJ_G8Uk25Q: java.lang.Object get()> (SMS_MMS)
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)> (SMS_MMS)
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.Log: java.lang.String getPackageAbbreviation(android.content.ComponentName)> (SMS_MMS)
<android.os.VibrationAttributes: int hashCode()> (SMS_MMS)
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()> (SMS_MMS)
<android.view.Display$HdrCapabilities: float getDesiredMinLuminance()> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int readRawFixed32()> (SMS_MMS)
<android.view.animation.Animation: int getZAdjustment()> (SMS_MMS)
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)> (SMS_MMS)
<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isProfileActivePasswordSufficientForParent(int)> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()> (SMS_MMS)
<android.app.NotificationManager$Policy: int allowConversationsFrom()> (SMS_MMS)
<android.telephony.CellIdentityTdscdma: int describeContents()> (SMS_MMS)
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimApplicationState(int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getTitleResName()> (SMS_MMS)
<android.location.GpsMeasurement: byte getMultipathIndicator()> (SMS_MMS)
<android.media.session.ISessionController$Default: java.lang.CharSequence getQueueTitle()> (SMS_MMS)
<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)> (SMS_MMS)
<android.view.MotionEvent: long getHistoricalEventTime(int)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()> (SMS_MMS)
<android.app.IAlarmManager$Default: long getNextWakeFromIdleTime()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.content.ComponentName getCallingActivity(android.os.IBinder)> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String getOwnerInfo()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: long getShortTermModelTimeoutMillis()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiScanBackgroundCount(int)> (SMS_MMS)
<android.net.ConnectionInfo: int describeContents()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.widget.ListView: android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int)> (SMS_MMS)
<android.graphics.drawable.RippleForeground$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.telephony.CellIdentityNr: int getTac()> (SMS_MMS)
<android.os.IPowerManager$Default: int getLastShutdownReason()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> (SMS_MMS)
<android.text.method.TimeKeyListener: char[] getAcceptedChars()> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioTrack: int getStreamType()> (SMS_MMS)
<android.hardware.radio.ProgramList: java.util.List toList()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> (SMS_MMS)
<android.renderscript.Element: int getSubElementOffsetBytes(int)> (SMS_MMS)
<android.content.res.TypedArray: float getFloat(int,float)> (SMS_MMS)
<android.content.IIntentReceiver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()> (SMS_MMS)
<android.database.CursorWrapper: int getType(int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: float getProgress()> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getOpPackageName()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Shader getShader()> (SMS_MMS)
<android.app.job.JobParameters: android.net.Network getNetwork()> (SMS_MMS)
<android.content.pm.IDataLoaderStatusListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Stub: com.android.ims.internal.IImsEcbmListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ResourceClientProfile: int describeContents()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: char getShortcut()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()> (SMS_MMS)
<android.view.WindowInsets$Type: int mandatorySystemGestures()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: int getHeadersCount()> (SMS_MMS)
<android.telephony.BarringInfo$1: android.telephony.BarringInfo[] newArray(int)> (SMS_MMS)
<android.os.NativeHandle: java.io.FileDescriptor getFileDescriptor()> (SMS_MMS)
<android.app.backup.IBackupObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.SyncRequest: long getSyncFlexTime()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: com.android.internal.telephony.euicc.IGetAllProfilesCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: int describeContents()> (SMS_MMS)
<android.os.IThermalEventListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledScrollFactor()> (SMS_MMS)
<android.app.ResourcesManager$ApkKey: int hashCode()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String[] getTetheredDhcpRanges()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: int getStatsType()> (SMS_MMS)
<android.opengl.EGLObjectHandle: int hashCode()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()> (SMS_MMS)
<android.widget.GridView: int getNumColumns()> (SMS_MMS)
<android.app.ListFragment: android.widget.ListView getListView()> (SMS_MMS)
<android.animation.Animator: boolean isInitialized()> (SMS_MMS)
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: java.lang.String getCameraId()> (SMS_MMS)
<android.hardware.radio.V1_5.BarringInfo: int hashCode()> (SMS_MMS)
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: java.lang.String getPassword()> (SMS_MMS)
<android.content.res.loader.ResourcesLoader: java.util.List getProviders()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()> (SMS_MMS)
<android.hardware.camera2.params.SessionConfiguration: java.util.List getOutputConfigurations()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCLIP(boolean)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList getDailyPackageChanges()> (SMS_MMS)
<android.telephony.SubscriptionManager: java.util.List getSubscriptionPlans(int)> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: int getSessionId()> (SMS_MMS)
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)> (SMS_MMS)
<android.location.Geofence: double getLatitude()> (SMS_MMS)
<android.view.IWindowManager$Default: int getWindowingMode(int)> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.Configuration[] getSizeConfigurations()> (SMS_MMS)
<android.os.Debug: java.lang.String getCallers(int,int)> (SMS_MMS)
<android.app.IWallpaperManager$Stub$Proxy: int getWidthHint(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] getUsesStaticLibrariesCertDigests()> (SMS_MMS)
<android.os.SystemProperties: int getInt(java.lang.String,int)> (SMS_MMS)
<android.net.INetworkScoreCache$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioPresentation: java.util.Locale getLocale()> (SMS_MMS)
<android.security.net.config.ConfigNetworkSecurityPolicy: boolean isCleartextTrafficPermitted()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getId()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: boolean getAllowEnterTransitionOverlap()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.IPackageInstaller getPackageInstaller()> (SMS_MMS)
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getUiccCardsInfo()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.dex.ArtManager: java.io.File getProfileSnapshotFileForName(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getTopPadding()> (SMS_MMS)
<android.app.backup.IBackupCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getIdleTimeMillis()> (SMS_MMS)
<android.app.backup.BackupProgress: int describeContents()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetEnd(int)> (SMS_MMS)
<android.telephony.SignalStrength: int getLteAsuLevel()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: boolean isTracing()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.ConnectivityManager: boolean isTetheringSupported()> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getCursorOffset()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$ConcatRef: int hashCode()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getNumNotificationChannelsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.view.DisplayInfo: int getNaturalWidth()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.util.List getSupportedCountries(boolean)> (SMS_MMS)
<android.net.ProxyInfo: java.lang.String[] getExclusionList()> (SMS_MMS)
<android.media.AudioFocusInfo: android.media.AudioAttributes getAttributes()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: boolean isStreamMute(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isConcurrentVoiceAndDataSupported()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isCommonCriteriaModeEnabled(android.content.ComponentName)> (SMS_MMS)
<android.view.IRemoteAnimationFinishedCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub: com.android.internal.view.IInputSessionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getEuiccCardControllerServiceRegisterer()> (SMS_MMS)
<android.app.VoiceInteractor$Prompt: java.lang.CharSequence getVoicePromptAt(int)> (SMS_MMS)
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getAllStackInfos()> (SMS_MMS)
<android.graphics.drawable.shapes.RoundRectShape: int hashCode()> (SMS_MMS)
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)> (SMS_MMS)
<android.app.WindowConfiguration: android.graphics.Rect getBounds()> (SMS_MMS)
<com.android.internal.telephony.util.TelephonyUtils: android.content.pm.ComponentInfo getComponentInfo(android.content.pm.ResolveInfo)> (SMS_MMS)
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.widget.inline.InlinePresentationSpec: android.os.Bundle getStyle()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getWindowId()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getTimeInRatMicros(int)> (SMS_MMS)
<android.media.tv.TvInputManager: int getClientPid(java.lang.String)> (SMS_MMS)
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.CameraDevice: int getCameraAudioRestriction()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: byte[] get(java.lang.String,int)> (SMS_MMS)
<android.telephony.CbGeoUtils: java.util.List parseGeometriesFromString(java.lang.String)> (SMS_MMS)
<android.transition.ChangeImageTransform$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int describeContents()> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: byte[] getSsid()> (SMS_MMS)
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()> (SMS_MMS)
<android.app.PictureInPictureParams: android.graphics.Rect getSourceRectHint()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)> (SMS_MMS)
<android.hardware.usb.UsbInterface: java.lang.String getName()> (SMS_MMS)
<android.content.pm.ChangedPackages: int describeContents()> (SMS_MMS)
<android.util.KeyValueListParser: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.widget.Spinner: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: int getColor()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()> (SMS_MMS)
<android.location.GpsMeasurement: double getAzimuthInDeg()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.wifi.nl80211.NativeWifiClient: int hashCode()> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String getLastResourceResolution()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getNotificationChannelId()> (SMS_MMS)
<android.hardware.location.NanoAppMessage: int describeContents()> (SMS_MMS)
<android.util.ArrayMap: int hashCode()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String getResourceName(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric(int)> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int getVideoQuality()> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.role.RoleManager: java.lang.String getDefaultSmsPackage(int)> (SMS_MMS)
<android.view.ViewRootImpl: android.view.SurfaceControl getSurfaceControl()> (SMS_MMS)
<android.app.UiModeManager: int getNightMode()> (SMS_MMS)
<android.net.MacAddress: byte[] toByteArray()> (SMS_MMS)
<android.media.PlaybackParams: int getAudioStretchMode()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalOrientation(int,int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getContentCaptureServicePackageName()> (SMS_MMS)
<android.app.Notification: java.lang.String getShortcutId()> (SMS_MMS)
<android.util.LongSparseLongArray: int access$000(android.util.LongSparseLongArray)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getSmartEnd()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getColorMode()> (SMS_MMS)
<android.net.INetworkScoreService$Stub: android.net.INetworkScoreService getDefaultImpl()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])> (SMS_MMS)
<android.location.GnssMeasurement: double getAutomaticGainControlLevelDb()> (SMS_MMS)
<com.android.internal.view.IInputSessionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getPackageUid(java.lang.String,int,int)> (SMS_MMS)
<android.view.SurfaceControl: long[] getPhysicalDisplayIds()> (SMS_MMS)
<android.content.ContentResolver: java.util.List getCurrentSyncs()> (SMS_MMS)
<android.animation.StateListAnimator: android.animation.StateListAnimator clone()> (SMS_MMS)
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()> (SMS_MMS)
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.WindowInsetsController getInsetsController()> (SMS_MMS)
<android.view.ViewGroup$1: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.content.BroadcastReceiver: java.lang.String getResultData()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getBitErrorRate()> (SMS_MMS)
<android.os.NativeHandle: int[] getInts()> (SMS_MMS)
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)> (SMS_MMS)
<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeIdInternal()> (SMS_MMS)
<android.content.ContentResolver: java.util.List getOutgoingUriPermissions()> (SMS_MMS)
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IActivityManager$Stub: android.app.IActivityManager getDefaultImpl()> (SMS_MMS)
<android.widget.Magnifier: android.graphics.drawable.Drawable getOverlay()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: int getMappedViewType(int)> (SMS_MMS)
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int movePackage(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: long getCurrentFunctions()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getClientFormat()> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int getNeutralButtonTextResId()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int hashCode()> (SMS_MMS)
<android.app.INotificationManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.GnssClock: double getReferenceCarrierFrequencyHzForIsb()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int,int)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: com.android.internal.telephony.euicc.IPrepareDownloadCallback getDefaultImpl()> (SMS_MMS)
<android.text.PrecomputedText: float getCharWidthAt(int)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: int getType()> (SMS_MMS)
<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()> (SMS_MMS)
<android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()> (SMS_MMS)
<android.util.MemoryIntArray: int describeContents()> (SMS_MMS)
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub: android.app.backup.IRestoreObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifyCallStateChanged(int,int,int,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)> (SMS_MMS)
<android.telephony.CellIdentityNr: int hashCode()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeName(int)> (SMS_MMS)
<android.hardware.radio.TunerAdapter: java.util.List getProgramList(java.util.Map)> (SMS_MMS)
<android.app.RemoteInput: android.os.Bundle getExtras()> (SMS_MMS)
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()> (SMS_MMS)
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getActiveStagedSession()> (SMS_MMS)
<android.telephony._$$Lambda$VoWbarPy40APZWYZ2AqZZxi_Jm8: java.lang.Object applyOrThrow(java.lang.Object)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuPresenter: int getNumActualItemsShown()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int getY()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.util.Size getLayoutSize()> (SMS_MMS)
<android.view.View: int getTopPaddingOffset()> (SMS_MMS)
<android.view.WindowlessWindowManager: android.view.IWindowId getWindowId(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.CharSequence getSimCarrierIdName()> (SMS_MMS)
<android.os.UserManager$2: java.lang.Boolean recompute(java.lang.Integer)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.view.ImeFocusController access$300(android.view.inputmethod.InputMethodManager)> (SMS_MMS)
<android.view.KeyEvent: int getUnicodeChar()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.os.Handler access$100(android.hardware.location.ContextHubManager)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.os.ConditionVariable access$400(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)> (SMS_MMS)
<android.view.WindowInsets: int getStableInsetBottom()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getAttributeCount()> (SMS_MMS)
<android.media.AudioRecord: int read(byte[],int,int,int)> (SMS_MMS)
<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> (SMS_MMS)
<android.hardware.camera2.params.OisSample: long getTimestamp()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrength: int getRssiDbmFromAsu(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> (SMS_MMS)
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()> (SMS_MMS)
<android.print.PrintJob: android.print.PrintJobInfo getInfo()> (SMS_MMS)
<android.animation.LayoutTransition: java.util.List getTransitionListeners()> (SMS_MMS)
<android.telephony.TelephonyManager: com.android.internal.telephony.ISms getSmsService()> (SMS_MMS)
<android.view.IWindowSession$Default: android.view.IWindowId getWindowId(android.os.IBinder)> (SMS_MMS)
<android.content.pm.ShortcutQueryWrapper: int getQueryFlags()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotWallpaper()> (SMS_MMS)
<android.provider.DeviceConfig$Properties: boolean getBoolean(java.lang.String,boolean)> (SMS_MMS)
<android.app.Person: android.net.Uri getIconUri()> (SMS_MMS)
<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)> (SMS_MMS)
<android.os.UserManager: boolean isUserOfType(java.lang.String)> (SMS_MMS)
<android.app.Dialog: android.view.Window getWindow()> (SMS_MMS)
<android.app.ApplicationPackageManager: void getPackageSizeInfoAsUser(java.lang.String,int,android.content.pm.IPackageStatsObserver)> (SMS_MMS)
<android.text.Layout: int getLineForOffset(int)> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest: java.util.List getCapabilitiesToEnable()> (SMS_MMS)
<android.graphics.Canvas: android.graphics.Rect getClipBounds()> (SMS_MMS)
<android.net.IEthernetManager$Default: java.lang.String[] getAvailableInterfaces()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: java.lang.String access$200(android.hardware.camera2.legacy.GLThreadManager)> (SMS_MMS)
<android.content.pm.PackageParser$Instrumentation: int describeContents()> (SMS_MMS)
<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String describeCurrentOperation()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getVolumes()> (SMS_MMS)
<android.app.prediction.AppTargetEvent: android.app.prediction.AppTarget getTarget()> (SMS_MMS)
<android.hardware.hdmi.HdmiSwitchClient: int getDeviceType()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: int getRatingType()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getGradientCenterY()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean switchSlots(int[])> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getComponentEnabledSetting(android.content.ComponentName,int)> (SMS_MMS)
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)> (SMS_MMS)
<android.hardware.radio.ProgramSelector: int describeContents()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int createLinkedStorage(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: int getGroupId()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: java.time.ZonedDateTime getReferenceTime()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getAllCellInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.IWallpaperManager$Default: int getHeightHint(int)> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int describeContents()> (SMS_MMS)
<android.text.style.QuoteSpan: int getSpanTypeId()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: java.lang.String getIconResourcePackage()> (SMS_MMS)
<android.net.LinkProperties: java.net.Inet4Address getDhcpServerAddress()> (SMS_MMS)
<android.os.health.HealthStatsParceler: int describeContents()> (SMS_MMS)
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)> (SMS_MMS)
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents$Event)> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledHoverSlop()> (SMS_MMS)
<android.content.LoggingContentInterface: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.hardware.hdmi.IHdmiVendorCommandListener getDefaultImpl()> (SMS_MMS)
<android.os.Parcel: int readExceptionCode()> (SMS_MMS)
<android.print.PrintManager: android.print.PrintManager getGlobalPrintManagerForUser(int)> (SMS_MMS)
<com.android.internal.telephony.IBooleanConsumer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioManager: int getRouting(int)> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long forceSecurityLogs()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getMergedImsisFromGroup()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothScanTimer()> (SMS_MMS)
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()> (SMS_MMS)
<android.media.AudioFormat: int getEncoding()> (SMS_MMS)
<android.location.GnssMeasurement: double getSatelliteInterSignalBiasNanos()> (SMS_MMS)
<android.media.AudioTrack: int getMinBufferSize(int,int,int)> (SMS_MMS)
<android.util.Range: int hashCode()> (SMS_MMS)
<android.media.MediaPlayer: byte[] provideKeyResponse(byte[],byte[])> (SMS_MMS)
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession getDefaultImpl()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: int getMaximumColorTemperature(android.content.Context)> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()> (SMS_MMS)
<android.text.style.ForegroundColorSpan: int getSpanTypeId()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int LABToColor(double,double,double)> (SMS_MMS)
<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo)> (SMS_MMS)
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.media.session.ISessionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Paint: int getAlpha()> (SMS_MMS)
<android.location.LocationRequest: java.lang.String getProvider()> (SMS_MMS)
<android.content.Intent: char getCharExtra(java.lang.String,char)> (SMS_MMS)
<android.net.IEthernetManager$Stub$Proxy: java.lang.String[] getAvailableInterfaces()> (SMS_MMS)
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getGravity()> (SMS_MMS)
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)> (SMS_MMS)
<com.android.internal.os.ZygoteServer: java.lang.Runnable fillUsapPool(int[],boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()> (SMS_MMS)
<android.telephony.CellIdentity$1: android.telephony.CellIdentity createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectRight()> (SMS_MMS)
<android.content.res.ResourcesImpl: void getValue(int,android.util.TypedValue,boolean)> (SMS_MMS)
<android.app.ContextImpl: android.content.Context getOuterContext()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.lang.String getEntryName()> (SMS_MMS)
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> (SMS_MMS)
<android.app.AppOpsManager: void getHistoricalOpsFromDiskRaw(android.app.AppOpsManager$HistoricalOpsRequest,java.util.concurrent.Executor,java.util.function.Consumer)> (SMS_MMS)
<android.view.DisplayInfo: android.view.Display$Mode getMode()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)> (SMS_MMS)
<android.widget.RemoteViews: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isIccLockEnabled(int)> (SMS_MMS)
<android.view.ScrollCaptureTarget: android.graphics.Point getPositionInWindow()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getTitle(android.net.Uri)> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int getIndex()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)> (SMS_MMS)
<android.net.IpSecTunnelInterfaceResponse: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkSpecifier()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.SignalStrength getSignalStrength(int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub: android.media.tv.ITvInputHardwareCallback getDefaultImpl()> (SMS_MMS)
<android.content.ContentProviderResult: int describeContents()> (SMS_MMS)
<android.app.WaitResult: int describeContents()> (SMS_MMS)
<android.security.net.config.SystemCertificateSource: android.security.net.config.SystemCertificateSource getInstance()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String getAlwaysOnVpnPackageForUser(int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.Bitmap: android.graphics.Color getColor(int,int)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getAlphabeticModifiers()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getSize()> (SMS_MMS)
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.Exception getException()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: android.media.soundtrigger_middleware.ModelParameterRange queryModelParameterSupport(int,int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.LocaleList: android.os.LocaleList getAdjustedDefault()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<android.app.ActivityManager: java.util.List getProcessesInErrorState()> (SMS_MMS)
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.widget.CompoundButton: int getCompoundPaddingRight()> (SMS_MMS)
<android.renderscript.RenderScript: int nMeshGetVertexBufferCount(long)> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getWritePos()> (SMS_MMS)
<android.media.MediaCodecInfo$CodecProfileLevel: int hashCode()> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentityLte: int hashCode()> (SMS_MMS)
<android.content.IIntentReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerDemuxRequest: int getClientId()> (SMS_MMS)
<android.view._$$Lambda$FocusFinder$Pgx6IETuqCkrhJYdiBes48tolG4: android.view.View get(android.view.View,android.view.View)> (SMS_MMS)
<android.net.PlatformVpnProfile: int getType()> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,android.text.method.DigitsKeyListener)> (SMS_MMS)
<android.provider.FontsContract$FontFamilyResult: int getStatusCode()> (SMS_MMS)
<android.widget.TextView: int getMaxEms()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,boolean,int,int,android.graphics.Paint)> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)> (SMS_MMS)
<android.view.MotionEvent: float getY(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int describeContents()> (SMS_MMS)
<android.widget.TextView: int getPaintFlags()> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getPermissionUsages$20(boolean,long,android.permission.IPermissionController)> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)> (SMS_MMS)
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()> (SMS_MMS)
<android.telephony.CellIdentityLte: java.lang.String getMobileNetworkOperator()> (SMS_MMS)
<android.print.IPrintManager$Default: java.util.List getPrintJobInfos(int,int)> (SMS_MMS)
<android.net.wifi.nl80211.ChannelSettings: int describeContents()> (SMS_MMS)
<android.graphics.RecordingCanvas: long finishRecording()> (SMS_MMS)
<android.view.animation.Transformation: int getTransformationType()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.ContextWrapper: java.lang.String getAttributionTag()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: long getAllowedNetworkTypes(int)> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub$Proxy: boolean isPublicAccessAllowed()> (SMS_MMS)
<com.android.telephony.Rlog: boolean isLoggable(java.lang.String,int)> (SMS_MMS)
<android.view.MotionEvent: float getRawX(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: android.content.ComponentName getServiceComponentName()> (SMS_MMS)
<com.android.internal.policy.PhoneLayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)> (SMS_MMS)
<android.view.ViewGroup: android.view.View dispatchUnhandledKeyEvent(android.view.KeyEvent)> (SMS_MMS)
<android.view.DisplayCutout: int getSafeInsetBottom()> (SMS_MMS)
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)> (SMS_MMS)
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()> (SMS_MMS)
<android.window.ITaskOrganizer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int del(java.lang.String,int)> (SMS_MMS)
<android.graphics.drawable.ColorDrawable: int getAlpha()> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.TypedArray obtainStyledAttributes(android.content.res.Resources$Theme,android.util.AttributeSet,int[],int,int)> (SMS_MMS)
<android.location.Address: java.lang.String getAdminArea()> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: int getType()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: int getStaticSwVersion()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma$1: android.telephony.CellSignalStrengthWcdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.MenuInflater: android.content.Context getContext()> (SMS_MMS)
<android.widget.ArrayAdapter: android.content.res.Resources$Theme getDropDownViewTheme()> (SMS_MMS)
<android.app.timedetector.NetworkTimeSuggestion: int describeContents()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int permissionToOpCode(java.lang.String)> (SMS_MMS)
<android.os.IVibratorService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.sqlite.SQLiteQueryBuilder: android.database.sqlite.SQLiteDatabase$CursorFactory getCursorFactory()> (SMS_MMS)
<android.app.NotificationManager: java.util.List getEnabledNotificationListenerPackages()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioGain: int mode()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SmsMessage: int getIndexOnIcc()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: java.lang.String getRegistration()> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.String getOwnerPackageName()> (SMS_MMS)
<android.telecom.Logging.EventManager: java.util.Map access$000(android.telecom.Logging.EventManager)> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub: com.android.internal.infra.IAndroidFuture asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.CaptureResult: java.lang.Class getKeyClass()> (SMS_MMS)
<android.content.pm.InstrumentationInfo: int describeContents()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: android.media.AudioRecord createAudioRecordSink(android.media.audiopolicy.AudioMix)> (SMS_MMS)
<android.media.MediaRecorder: int getPortId()> (SMS_MMS)
<android.view.IWindowFocusObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue getSubject()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getOverrideApns(android.content.ComponentName)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setOriginatingNumbers(java.util.List)> (SMS_MMS)
<android.view.View: int getVerticalScrollbarPosition()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex(java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.PopupWindow: int getHeight()> (SMS_MMS)
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.PowerManager: int getMinimumScreenBrightnessForVrSetting()> (SMS_MMS)
<android.net.shared.Inet4AddressUtils: java.net.Inet4Address getPrefixMaskAsInet4Address(int)> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getEncodings()> (SMS_MMS)
<android.widget.RemoteViews$BitmapReflectionAction: int getActionTag()> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub: com.android.ims.internal.IImsEcbm getDefaultImpl()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: int getCount()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> (SMS_MMS)
<android.os.Debug$InstructionCount: int globalTotal()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getInstalledAccessibilityServiceList(int)> (SMS_MMS)
<android.hardware.ICamera$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean isFingerprintGestureDetectionAvailable()> (SMS_MMS)
<android.view.animation.Animation: long getStartTime()> (SMS_MMS)
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.ConnectivityManager: android.net.SocketKeepalive createSocketKeepalive(android.net.Network,java.net.Socket,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)> (SMS_MMS)
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: android.content.pm.ParceledListSlice getAmbientBrightnessStats()> (SMS_MMS)
<android.widget.TextView: int getMinLines()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getBottomPadding()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int setSubscriptionProperty(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.os.Zygote: java.lang.String getWrapProperty(java.lang.String)> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo: int getRan()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: android.view.View$OnLongClickListener getOnLongClickListener()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int access$176(android.window.WindowContainerTransaction$Change,int)> (SMS_MMS)
<android.drm.DrmManagerClient: java.util.Collection getAvailableDrmSupportInfo()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.Location: long getTime()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getKeepUninstalledPackages(android.content.ComponentName)> (SMS_MMS)
<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)> (SMS_MMS)
<android.os.IMessenger$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.textclassifier.TextSelection: java.lang.String getId()> (SMS_MMS)
<android.telephony.TelephonyFrameworkInitializer: android.telephony.SubscriptionManager lambda$registerServiceWrappers$1(android.content.Context)> (SMS_MMS)
<android.companion.CompanionDeviceManager: boolean isDeviceAssociatedForWifiConnection(java.lang.String,android.net.MacAddress,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ComponentName: java.lang.String getShortClassName()> (SMS_MMS)
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage createStorage(java.lang.String,android.content.pm.DataLoaderParams,int,boolean,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)> (SMS_MMS)
<android.util.MemoryIntArray: int hashCode()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] getBands()> (SMS_MMS)
<android.content.ContextWrapper: boolean isRestricted()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)> (SMS_MMS)
<android.media.AudioDeviceInfo: int[] getChannelIndexMasks()> (SMS_MMS)
<android.print.PrintDocumentInfo: int hashCode()> (SMS_MMS)
<android.app.AppOpsManager$PackageOps: java.util.List getOps()> (SMS_MMS)
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: long getLongVersion()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getSelectionMode()> (SMS_MMS)
<android.view.IScrollCaptureClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaPlayer$DrmInfo: java.util.Map getPssh()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: int[] getPacketCounters()> (SMS_MMS)
<com.android.internal.os.Zygote: int[] getUsapPipeFDs()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.policy.DecorView: android.view.View getStatusBarBackgroundView()> (SMS_MMS)
<android.widget.EditText: boolean getFreezesText()> (SMS_MMS)
<android.webkit.WebSyncManager: java.lang.Object clone()> (SMS_MMS)
<android.view.InputMonitor: android.view.IInputMonitorHost getHost()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.res.ColorStateList: int[][] getStates()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4000()> (SMS_MMS)
<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)> (SMS_MMS)
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()> (SMS_MMS)
<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: com.android.internal.app.IVoiceInteractionSessionShowCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IUriGrantsManager$Default: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: int getAdbWirelessPort()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Notification: android.graphics.drawable.Icon getLargeIcon()> (SMS_MMS)
<android.os.storage.IStorageManager$Default: int getEncryptionState()> (SMS_MMS)
<android.view.KeyEvent: char getNumber()> (SMS_MMS)
<android.net.NetworkTemplate: int[] getAllCollapsedRatTypes()> (SMS_MMS)
<android.media.AudioManager: boolean isAudioFocusExclusive()> (SMS_MMS)
<android.text.style.LineHeightSpan$Standard: int describeContents()> (SMS_MMS)
<android.os.IRecoverySystem$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.blob.LeaseInfo: long getExpiryTimeMillis()> (SMS_MMS)
<android.os.UserManager: long getUserUnlockRealtime()> (SMS_MMS)
<android.app.prediction.AppPredictionSessionId: int getUserId()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: android.media.AudioDeviceInfo getAudioDevice()> (SMS_MMS)
<android.view.View: android.graphics.Matrix getMatrix()> (SMS_MMS)
<android.print.PrintJobInfo: android.print.PageRange[] getPages()> (SMS_MMS)
<android.os.UserManager: java.util.List getEnabledProfiles(int)> (SMS_MMS)
<android.security.IKeyChainAliasCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.SyncNotedAppOp: int describeContents()> (SMS_MMS)
<android.widget.TextView: boolean getFreezesText()> (SMS_MMS)
<android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants[] values()> (SMS_MMS)
<android.view.inputmethod.InputBinding: int getPid()> (SMS_MMS)
<android.security.net.config.ApplicationConfig: javax.net.ssl.X509TrustManager getTrustManager()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub$Proxy: java.util.List getEnrolledFaces(int,java.lang.String)> (SMS_MMS)
<android.service.notification.NotificationStats: int hashCode()> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfo: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.os.Bundle getSuspendedPackageAppExtras(java.lang.String,int)> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifyOpportunisticSubscriptionInfoChanged()> (SMS_MMS)
<android.telephony.TelephonyManager: int setIccLockEnabled(boolean,java.lang.String)> (SMS_MMS)
<android.content.om.OverlayInfo: int getUserId()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: java.lang.String getName()> (SMS_MMS)
<android.os.IRecoverySystem$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getOrganizationColor(android.content.ComponentName)> (SMS_MMS)
<android.filterfw.core.Filter: int getNumberOfInputs()> (SMS_MMS)
<android.hardware.ConsumerIrManager$CarrierFrequencyRange: int getMinFrequency()> (SMS_MMS)
<android.location.IGnssStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.session.IOnVolumeKeyLongPressListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)> (SMS_MMS)
<android.app.blob.IBlobCommitCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String,java.lang.String)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.os.BatteryStats$LevelStepTracker: int getModModeAt(int)> (SMS_MMS)
<android.view.InputDevice: int getSources()> (SMS_MMS)
<android.view.ViewConfiguration: float getScrollFriction()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean isInLockTaskMode()> (SMS_MMS)
<android.app.Activity: boolean isTaskRoot()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow$2: android.os.IBinder getWindowToken()> (SMS_MMS)
<android.text.SpannableString: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<android.net.StringNetworkSpecifier: int describeContents()> (SMS_MMS)
<android.location.GnssStatus: float getCarrierFrequencyHz(int)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest$Key: int hashCode()> (SMS_MMS)
<android.view.InputDevice: int describeContents()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: float getMinAspectRatio()> (SMS_MMS)
<com.android.internal.util.SyncResultReceiver: java.lang.String[] getStringArrayResult()> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioDeviceInfo: android.media.AudioDevicePort getPort()> (SMS_MMS)
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> (SMS_MMS)
<android.widget.AbsListView: int getSelectionModeForAccessibility()> (SMS_MMS)
<android.media.RouteDiscoveryPreference: int hashCode()> (SMS_MMS)
<android.content.res.Resources: boolean getBoolean(int)> (SMS_MMS)
<android.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()> (SMS_MMS)
<android.os.WorkSource: java.lang.String getName(int)> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isAmbientDisplayAvailable()> (SMS_MMS)
<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.widget.FastScroller$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.content.UndoManager: int redo(android.content.UndoOwner[],int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: java.util.List getUsageList()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.filterfw.geometry.Rectangle: float getHeight()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCallBarringWithPassword(int,int,java.lang.String[],int,java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> (SMS_MMS)
<android.app.LoaderManager: android.app.FragmentHostCallback getFragmentHostCallback()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getAndClearPackageToUserTypeBlacklist()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo$1: android.telephony.ClosedSubscriberGroupInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECParameterSpec getParams()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getDefaultNetworkStatus()> (SMS_MMS)
<android.telephony.CellIdentityCdma: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.webkit.WebViewFactory: android.content.pm.PackageInfo getLoadedPackageInfo()> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int describeContents()> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()> (SMS_MMS)
<android.os.DropBoxManager$Entry: long getTimeMillis()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getDecorCaptionShade()> (SMS_MMS)
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)> (SMS_MMS)
<android.telephony.ModemActivityInfo: int getSleepTimeMillis()> (SMS_MMS)
<android.net.CaptivePortalData: long getRefreshTimeMillis()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$BatchTimer: int computeCurrentCountLocked()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.lang.Class getKeyClass()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: android.net.lowpan.LowpanChannelInfo getChannelInfoForIeee802154Page0(int)> (SMS_MMS)
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPersonalAppsSuspendedReasons(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getProcessName()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeBindMount(int,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.content.pm.ApplicationInfo: int getGwpAsanMode()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] getSecret()> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()> (SMS_MMS)
<android.app.backup.RestoreSession: int restorePackages(long,android.app.backup.RestoreObserver,java.util.Set)> (SMS_MMS)
<android.os.storage.StorageManager: long benchmark(java.lang.String)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: int access$2102(android.location.GpsMeasurement,int)> (SMS_MMS)
<android.view.ViewRootInsetsControllerHost: java.lang.String getRootViewTitle()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.dex.IArtManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ActivityManager: boolean isLowRamDevice()> (SMS_MMS)
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: java.lang.String getUserName()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.cas.V1_2.ICas$Proxy: int hashCode()> (SMS_MMS)
<android.telephony.SubscriptionPlan: java.lang.CharSequence getSummary()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: java.util.ArrayList getImmutableFrameworkOverlayIdmapInvocations()> (SMS_MMS)
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> (SMS_MMS)
<android.telephony.CellInfo: void <init>()> (SMS_MMS)
<android.view.ViewRootImpl: android.os.IBinder getInputToken()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getTextStyle()> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub: android.media.IRemoteVolumeObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.SmsCbMessage: long getReceivedTime()> (SMS_MMS)
<android.media.MediaCodec$MediaImage$MediaPlane: int getPixelStride()> (SMS_MMS)
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceDataspace(android.view.Surface)> (SMS_MMS)
<android.media.MediaRouter$RouteGroup: int getRouteCount()> (SMS_MMS)
<android.net.LinkAddress: int hashCode()> (SMS_MMS)
<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()> (SMS_MMS)
<android.location.GnssMeasurementCorrections: java.util.List getSingleSatelliteCorrectionList()> (SMS_MMS)
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()> (SMS_MMS)
<android.graphics.RenderNode: int getWidth()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: long getMaximumDataBlockSize()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getMutedSwatch()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: boolean getRds()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: boolean getUseLevel()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo: java.lang.String getKeyIdentifier()> (SMS_MMS)
<android.media.AudioTrack: int getBufferCapacityInFrames()> (SMS_MMS)
<android.security.net.config.RootTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.lang.String[] getAppOpPermissionPackages(java.lang.String)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.DynamicLayout: int getEndHyphenEdit(int)> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: long getSize()> (SMS_MMS)
<android.media.session.ISession$Stub: android.media.session.ISession getDefaultImpl()> (SMS_MMS)
<android.net.NetworkIdentity: boolean getRoaming()> (SMS_MMS)
<android.content.om.IOverlayManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: java.lang.String getPackageName()> (SMS_MMS)
<android.hardware.display.Curve: float[] getX()> (SMS_MMS)
<android.app.timezone.RulesState: int hashCode()> (SMS_MMS)
<android.hardware.radio.V1_2.CellInfoGsm: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.View: int getRawTextDirection()> (SMS_MMS)
<android.net.TrafficStats: long getRxBytes(java.lang.String)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: int getVersion()> (SMS_MMS)
<android.media.tv.TvTrackInfo: java.lang.CharSequence getDescription()> (SMS_MMS)
<android.os.UserManager: boolean isGuestUser()> (SMS_MMS)
<android.app.ISearchManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.widget.VerifyCredentialResponse: int describeContents()> (SMS_MMS)
<android.os.strictmode.InstanceCountViolation: long getNumberOfInstances()> (SMS_MMS)
<android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.location.LocationManager$GnssAntennaInfoListenerManager: boolean registerService(java.lang.Void)> (SMS_MMS)
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)> (SMS_MMS)
<android.widget.ProgressBar: boolean getMirrorForRtl()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IServiceManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.CursorEntityIterator: android.content.Entity next()> (SMS_MMS)
<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<android.telephony.SignalStrength: int getEvdoSnr()> (SMS_MMS)
<android.net.IEthernetManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.permission.IPermissionManager$Default: java.util.List getAutoRevokeExemptionGrantedPackages(int)> (SMS_MMS)
<android.renderscript.Matrix2f: float[] getArray()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: android.os.LocaleList getTextLocales()> (SMS_MMS)
<android.graphics.Canvas: int save(int)> (SMS_MMS)
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)> (SMS_MMS)
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int)> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableSessionKeys()> (SMS_MMS)
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)> (SMS_MMS)
<android.app.VoiceInteractor$CompleteVoiceRequest: java.lang.String getRequestTypeName()> (SMS_MMS)
<android.app.SearchableInfo: int getVoiceMaxResults()> (SMS_MMS)
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)> (SMS_MMS)
<android.view.autofill.AutofillManager$CompatibilityBridge: int getRelevantEventTypes(int)> (SMS_MMS)
<android.content.pm.ProviderInfo: int describeContents()> (SMS_MMS)
<android.animation.ObjectAnimator: java.lang.Object getTarget()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getNeededWriteMemBytes()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeights()> (SMS_MMS)
<android.content.ContentResolver$StringResultListener: java.lang.Object getResultFromBundle(android.os.Bundle)> (SMS_MMS)
<android.hardware.hdmi.HdmiPortInfo: int getType()> (SMS_MMS)
<android.view.Display: int getType()> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitResourcePaths()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getMcc()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IClientCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.text.Layout: int getWidth()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: int getFlags()> (SMS_MMS)
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()> (SMS_MMS)
<android.media.AudioFormat: int getChannelMask()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener getDefaultImpl()> (SMS_MMS)
<android.media.AudioGainConfig: int channelMask()> (SMS_MMS)
<android.os.IIncidentCompanion$Default: java.util.List getPendingReports()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)> (SMS_MMS)
<android.animation.Animator: java.util.ArrayList getListeners()> (SMS_MMS)
<android.telephony.SignalStrength: int getAsuLevel()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getIconResName()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)> (SMS_MMS)
<android.text.style.SuggestionRangeSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentity: int hashCode()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSmsServiceRegisterer()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getStartCount()> (SMS_MMS)
<android.telephony.SmsManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByName(java.lang.String)> (SMS_MMS)
<android.telephony.ServiceState: boolean equals(java.lang.Object)> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFileResourceEntry: java.lang.String getFileName()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isNetworkRoaming(int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()> (SMS_MMS)
<android.graphics.NinePatch: int getWidth()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int getMaxTransmitPower()> (SMS_MMS)
<android.app.usage.UsageStats: int getAppLaunchCount()> (SMS_MMS)
<android.view.ViewGroup: boolean isLayoutModeOptical()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.util.Set getCriticalExtensionOIDs()> (SMS_MMS)
<android.view.View: android.view.ThreadedRenderer getThreadedRenderer()> (SMS_MMS)
<android.os.IUserManager$Default: android.os.ParcelFileDescriptor getUserIcon(int)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(android.net.Network)> (SMS_MMS)
<android.media.session.ISessionControllerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProvider$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)> (SMS_MMS)
<android.app.Notification$Builder: int getSecondaryTextColor()> (SMS_MMS)
<android.app.Activity: android.media.session.MediaController getMediaController()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: int getStrongAuthForUser(int)> (SMS_MMS)
<android.app.NotificationManager: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentity: int getChannelNumber()> (SMS_MMS)
<android.os.IUserManager$Default: int getCredentialOwnerProfile(int)> (SMS_MMS)
<android.widget.PopupWindow: int getSoftInputMode()> (SMS_MMS)
<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation[] newArray(int)> (SMS_MMS)
<android.widget.inline.InlinePresentationSpec: android.util.Size getMaxSize()> (SMS_MMS)
<android.location.LocationManager: android.location.GnssCapabilities getGnssCapabilities()> (SMS_MMS)
<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()> (SMS_MMS)
<android.os.WorkSource: java.util.List getWorkChains()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.Icon: int getResId()> (SMS_MMS)
<android.os.BatteryManager: long computeChargeTimeRemaining()> (SMS_MMS)
<android.media.AudioGain: int channelMask()> (SMS_MMS)
<android.window.IWindowOrganizerController$Default: android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController()> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: int access$702(android.window.WindowContainerTransaction$Change,int)> (SMS_MMS)
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)> (SMS_MMS)
<android.os.IUserManager$Default: long getUserCreationTime(int)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: int[] getRecoverySecretTypes()> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.net.lowpan.ILowpanInterfaceListener getDefaultImpl()> (SMS_MMS)
<android.app.IActivityManager$Default: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getIconResourceId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)> (SMS_MMS)
<android.net.LocalSocket: java.io.InputStream getInputStream()> (SMS_MMS)
<android.animation.LayoutTransition: long getStagger(int)> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Message: android.os.Bundle getExtras()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.Intent getCarLaunchIntentForPackage(java.lang.String)> (SMS_MMS)
<android.app.slice.ISliceManager$Default: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])> (SMS_MMS)
<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList$Filter)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: int getCurrentTtyMode(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.inputmethod.CompletionInfo: int describeContents()> (SMS_MMS)
<android.telephony.SignalStrength: int getGsmSignalStrength()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int loadModel(android.media.soundtrigger_middleware.SoundModel)> (SMS_MMS)
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)> (SMS_MMS)
<android.content.Intent: int getFlags()> (SMS_MMS)
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()> (SMS_MMS)
<android.service.oemlock.OemLockManager: java.lang.String getLockName()> (SMS_MMS)
<android.net.ConnectivityManager: boolean isAlwaysOnVpnPackageSupportedForUser(int,java.lang.String)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.window.IWindowOrganizerController getWindowOrganizerController()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub: android.net.lowpan.ILowpanManagerListener getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastReprocessFrameNumber()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionRemove: int mergeBehavior()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isUserDataEnabled(int)> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid,int)> (SMS_MMS)
<android.content.pm.PackageParser$SigningDetails: int describeContents()> (SMS_MMS)
<android.os.HidlSupport: int lambda$deepHashCode$2(java.lang.Object)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.LocationManager: java.util.List getTestProviderCurrentRequests(java.lang.String)> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> (SMS_MMS)
<android.widget.TextView: int getAccessibilitySelectionStart()> (SMS_MMS)
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()> (SMS_MMS)
<android.app.IWindowToken$Stub: android.app.IWindowToken asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.TelephonyHistogram: int getBucketCount()> (SMS_MMS)
<android.media.AudioAttributes: int getUsage()> (SMS_MMS)
<android.telephony.UiccSlotInfo$1: android.telephony.UiccSlotInfo[] newArray(int)> (SMS_MMS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View getView(android.view.MenuItem,int,android.view.View)> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaNetworkId()> (SMS_MMS)
<android.telephony.AccessNetworkUtils: int getDuplexModeForEutranBand(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: long getBackgroundAccessCount(int)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar$Tab getSelectedTab()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getNetworkInfo(int)> (SMS_MMS)
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation(int)> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: android.app.servertransaction.ActivityLifecycleItem getLifecycleStateRequest()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.os.Bundle getExtras()> (SMS_MMS)
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()> (SMS_MMS)
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()> android.permission.STOP_APP_SWITCHES (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int invokeOemRilRequestRaw(byte[],byte[])> (SMS_MMS)
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)> (SMS_MMS)
<android.app.job.IJobCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.StatFs: long getFreeBytes()> (SMS_MMS)
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getGroupId()> (SMS_MMS)
<android.location.GnssMeasurement: double getSatelliteInterSignalBiasUncertaintyNanos()> (SMS_MMS)
<android.app.IActivityController$Stub: android.app.IActivityController getDefaultImpl()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.transition.ChangeBounds$5: android.graphics.PointF get(android.view.View)> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: int getAudioRestriction()> (SMS_MMS)
<android.telephony.SmsCbLocation: int hashCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Rect getTaskBounds(int)> (SMS_MMS)
<android.window.WindowContainerTransaction$Change: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.os.IPowerManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.Sensor: int getVersion()> (SMS_MMS)
<android.location.Address: int getMaxAddressLineIndex()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getRequestedOrientation(android.os.IBinder)> (SMS_MMS)
<android.util.jar.StrictJarManifest: int getMainAttributesEnd()> (SMS_MMS)
<com.android.internal.telephony.IOns$Stub$Proxy: boolean isEnabled(java.lang.String)> (SMS_MMS)
<android.os.IRecoverySystem$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionPlan$1: android.telephony.SubscriptionPlan createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.os.ZygoteProcess: java.util.List access$000(java.io.BufferedWriter,java.io.DataInputStream)> (SMS_MMS)
<android.view.contentcapture.DataShareRequest: java.lang.String getMimeType()> (SMS_MMS)
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()> (SMS_MMS)
<android.os.Message: android.os.Handler getTarget()> (SMS_MMS)
<android.view.animation.Animation: long computeDurationHint()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.util.ArrayList getAllVendorKeys(java.lang.Class)> (SMS_MMS)
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)> android.permission.ACCESS_FINE_LOCATION (SMS_MMS)
<android.content.res.TypedArray: android.content.res.ComplexColor getComplexColor(int)> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getNotProgammedError()> (SMS_MMS)
<android.graphics.Color: int getComponentCount()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)> (SMS_MMS)
<android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()> (SMS_MMS)
<android.net.INetworkStatsService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: int describeContents()> (SMS_MMS)
<android.hardware.location.IContextHubService$Stub$Proxy: int unloadNanoApp(int)> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.BatteryStats$HistoryTag: int hashCode()> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub: com.android.internal.app.IAppOpsActiveCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: java.lang.String[] getMobileIfaces()> (SMS_MMS)
<android.app.job.JobParameters: int getStopReason()> (SMS_MMS)
<android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub: android.service.oemlock.IOemLockService asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.RemoteViewsAdapter: int getCount()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getRejectCause()> (SMS_MMS)
<android.animation.StateListAnimator$Tuple: int[] getSpecs()> (SMS_MMS)
<android.os.VibrationEffect$Prebaked: int hashCode()> (SMS_MMS)
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()> (SMS_MMS)
<android.renderscript.Allocation: long getTimeStamp()> (SMS_MMS)
<android.view.IPinnedStackController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony._$$Lambda$MLKtmRGKP3e0WU7x_KyS5_Vg8q4: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ExpandableListConnector: boolean isEmpty()> (SMS_MMS)
<android.location.GnssMeasurement: double getCarrierPhase()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getSystemAvailableFeatures()> (SMS_MMS)
<android.app.RemoteInput: java.lang.String getResultKey()> (SMS_MMS)
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)> (SMS_MMS)
<android.media.MediaRoute2Info: int getVolume()> (SMS_MMS)
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)> (SMS_MMS)
<android.media.session.ISessionController$Stub: android.media.session.ISessionController getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanProvision: android.net.lowpan.LowpanCredential getLowpanCredential()> (SMS_MMS)
<android.telephony.ServiceState: boolean isSearching()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.CallQuality: int getNumRtpPacketsTransmitted()> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getEmailBody()> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int)> (SMS_MMS)
<android.util.SparseLongArray: int size()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()> (SMS_MMS)
<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.media.audio.common.AudioOffloadInfo: int describeContents()> (SMS_MMS)
<android.net.TrafficStats: long getUidTcpTxSegments(int)> (SMS_MMS)
<android.service.notification.ZenModeConfig: java.lang.CharSequence getFormattedTime(android.content.Context,long,boolean,int)> (SMS_MMS)
<android.net.NetworkIdentity: java.lang.String getSubscriberId()> (SMS_MMS)
<android.view.textclassifier.TextSelection: android.os.Bundle getExtras()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: int describeContents()> (SMS_MMS)
<android.media.AudioManager: boolean isHapticPlaybackSupported()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: java.lang.String getSmsFormat()> (SMS_MMS)
<android.app.EnterTransitionCoordinator: android.transition.Transition getEnterViewsTransition()> (SMS_MMS)
<android.media.Image: android.graphics.Rect getCropRect()> (SMS_MMS)
<android.os.IThermalStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.LinkAddress: int getFlags()> (SMS_MMS)
<android.telecom.PhoneAccount: int getCapabilities()> (SMS_MMS)
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()> (SMS_MMS)
<android.media.SubtitleData: long getStartTimeUs()> (SMS_MMS)
<android.location.Address: java.lang.String getPhone()> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: android.view.View getContentView()> (SMS_MMS)
<android.content.pm.PackageParser$SigningDetails: int hashCode()> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getBatchSizeMax()> (SMS_MMS)
<android.app.ISearchManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.PendingIntent: android.content.IIntentSender getTarget()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getIntentFilterVerificationBackup(int)> (SMS_MMS)
<android.window.ITaskOrganizer$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)> (SMS_MMS)
<android.webkit.WebSettings: boolean getUseDoubleTree()> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaEriIconMode()> (SMS_MMS)
<android.app.Activity: int getTaskId()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()> (SMS_MMS)
<android.view.Display: int getMaximumSizeDimension()> (SMS_MMS)
<android.media.tv.TvInputInfo$TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: int getMaxVolume()> (SMS_MMS)
<android.util.Pools$SimplePool: java.lang.Object acquire()> (SMS_MMS)
<android.media.MediaRecorder: android.os.PersistableBundle getMetrics()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getStaticSharedLibName()> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Rect[] getBoundingRectsAll()> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Default: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)> (SMS_MMS)
<android.net.DataUsageRequest: int describeContents()> (SMS_MMS)
<android.database.CursorWrapper: boolean isFirst()> (SMS_MMS)
<android.util.LongSparseLongArray: int indexOfValue(long)> (SMS_MMS)
<android.webkit.Plugin: java.lang.String getName()> (SMS_MMS)
<android.net.NetworkAgentConfig: java.lang.String getSubscriberId()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.euicc.EuiccManager: android.telephony.euicc.EuiccInfo getEuiccInfo()> (SMS_MMS)
<android.hardware.input.InputDeviceIdentifier: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()> (SMS_MMS)
<android.provider.DeviceConfig$Properties: float getFloat(java.lang.String,float)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMaxAspectRatio()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getProfileParentId(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowSpan()> (SMS_MMS)
<android.os.Debug: java.lang.String getCallers(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)> (SMS_MMS)
<android.text.method.WordIterator: int getPrevWordBeginningOnTwoWordsBoundary(int)> (SMS_MMS)
<android.app.TaskInfo: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.renderscript.Byte2: byte length()> (SMS_MMS)
<android.telephony.AvailableNetworkInfo$1: android.telephony.AvailableNetworkInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode(int)> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int,int,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1200()> (SMS_MMS)
<android.widget.OverScroller$SplineOverScroller: int access$700(android.widget.OverScroller$SplineOverScroller)> (SMS_MMS)
<android.telephony.CellInfo: boolean equals(java.lang.Object)> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int hashCode()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getAdopterId()> (SMS_MMS)
<android.graphics.Paint: int getFlags()> (SMS_MMS)
<android.app.UiAutomation: int getConnectionId()> (SMS_MMS)
<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteConnection createNewConnection(android.net.LocalSocket,java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.LongArray: int size()> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceActivationState()> (SMS_MMS)
<android.widget.ListView: long[] getCheckItemIds()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getFlagsForUid(int)> (SMS_MMS)
<android.app.ActionBar: android.content.Context getThemedContext()> (SMS_MMS)
<android.app.IStopUserCallback$Stub: android.app.IStopUserCallback getDefaultImpl()> (SMS_MMS)
<android.app.ActivityManager: int getCurrentUser()> (SMS_MMS)
<android.content.UndoManager: int forgetRedos(android.content.UndoOwner[],int)> (SMS_MMS)
<android.hardware.display.ColorDisplayManager: boolean isDisplayWhiteBalanceEnabled()> (SMS_MMS)
<android.security.keymaster.KeymasterArguments: java.util.Date getDate(int,java.util.Date)> (SMS_MMS)
<android.os.incremental.IncrementalStorage: int getId()> (SMS_MMS)
<android.view.WindowlessWindowManager: android.os.IBinder performDrag(android.view.IWindow,int,android.view.SurfaceControl,int,float,float,float,float,android.content.ClipData)> (SMS_MMS)
<android.telephony.PhoneCapability$1: android.telephony.PhoneCapability createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup getGroup()> (SMS_MMS)
<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map getVendorInfo()> (SMS_MMS)
<android.media.session.MediaController: android.os.Bundle getSessionInfo()> (SMS_MMS)
<android.database.sqlite.SQLiteProgram: int getUniqueId()> (SMS_MMS)
<android.text.Layout$SpannedEllipsizer: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.media.session.MediaSessionManager: boolean isGlobalPriorityActive()> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks getCallbacks()> (SMS_MMS)
<android.net.LinkAddress: long getDeprecationTime()> (SMS_MMS)
<android.webkit.PluginList: java.util.List getList()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getFilesDir()> (SMS_MMS)
<android.telephony.SubscriptionInfo: android.graphics.Bitmap createIconBitmap(android.content.Context)> (SMS_MMS)
<android.hardware.usb.UsbManager: long getCurrentFunctions()> (SMS_MMS)
<android.os.IVibratorStateListener$Stub: android.os.IVibratorStateListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.HardwareRenderer$FrameRenderRequest: int syncAndDraw()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)> (SMS_MMS)
<android.view.IScrollCaptureController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IClientCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int getState(int)> (SMS_MMS)
<android.view.ViewRootInsetsControllerHost: android.os.Handler getHandler()> (SMS_MMS)
<android.provider.FontsContract$FontInfo: int getResultCode()> (SMS_MMS)
<android.telephony.ImsiEncryptionInfo$1: android.telephony.ImsiEncryptionInfo[] newArray(int)> (SMS_MMS)
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.String getHintIdEntry()> (SMS_MMS)
<android.app.KeyguardManager: boolean isDeviceLocked(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager$ApplicationInfoQuery: int hashCode()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getPersistentApplications(int)> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: int getPrimaryColor()> (SMS_MMS)
<android.app.DownloadManager$Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)> (SMS_MMS)
<android.graphics.drawable.shapes.Shape: float getWidth()> (SMS_MMS)
<android.renderscript.RenderScript: long nElementCreate2(long[],java.lang.String[],int[])> (SMS_MMS)
<android.net.TrafficStats: long getUidRxBytes(int)> (SMS_MMS)
<android.media.AudioManager: java.util.HashMap access$600(android.media.AudioManager)> (SMS_MMS)
<android.telephony.ims.ImsSsInfo: int describeContents()> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityLte: int hashCode()> (SMS_MMS)
<android.util.jar.StrictJarManifest: java.util.jar.Attributes getAttributes(java.lang.String)> (SMS_MMS)
<android.app.LoadedApk: java.lang.String getResDir()> (SMS_MMS)
<android.os.IIncidentDumpCallback$Stub: android.os.IIncidentDumpCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getBlockedRatings(int)> (SMS_MMS)
<android.telephony.LteVopsSupportInfo$1: android.telephony.LteVopsSupportInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.util.RecurrenceRule: int hashCode()> (SMS_MMS)
<android.os.Parcel: byte[] marshall()> (SMS_MMS)
<android.util.KeyValueListParser: long getLong(java.lang.String,long)> (SMS_MMS)
<android.widget.RemoteViews$Action: int mergeBehavior()> (SMS_MMS)
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)> (SMS_MMS)
<android.widget.Spinner$DialogPopup: java.lang.CharSequence getHintText()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()> (SMS_MMS)
<android.view.Display: android.view.Display$Mode[] getSupportedModes()> (SMS_MMS)
<android.os.PatternMatcher: int describeContents()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount(java.lang.String)> (SMS_MMS)
<android.view.View: android.view.WindowInsetsController getWindowInsetsController()> (SMS_MMS)
<android.view.VerifiedKeyEvent: int getAction()> (SMS_MMS)
<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks(int)> (SMS_MMS)
<android.widget.ListView: boolean getItemsCanFocus()> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest$Option: android.os.Bundle getExtras()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: com.android.ims.internal.IImsVideoCallProvider asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()> (SMS_MMS)
<android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)> (SMS_MMS)
<android.app.slice.SliceItem: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.net.ProxyInfo: java.net.InetSocketAddress getSocketAddress()> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()> (SMS_MMS)
<android.util.MapCollections$KeySet: int size()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getFadingEdge()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String[] getAppOpPermissionPackages(java.lang.String)> (SMS_MMS)
<android.app.Activity: android.app.Dialog onCreateDialog(int)> (SMS_MMS)
<android.app.prediction.IPredictionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getBaseRevisionCode()> (SMS_MMS)
<android.net.TrafficStats: long getUidTxPackets(int)> (SMS_MMS)
<android.telephony.SignalStrength: java.util.List getCellSignalStrengths()> (SMS_MMS)
<android.os.Build$Partition: int hashCode()> (SMS_MMS)
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)> (SMS_MMS)
<android.media.MediaDescription: java.lang.CharSequence getTitle()> (SMS_MMS)
<com.android.internal.content.om._$$Lambda$TnMimLdK_xwmEZLrRzFg7LG1Yfg: java.lang.Object get()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getConfigurationCount()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$5: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: int getFormat()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readUTF()> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Default: android.net.lowpan.ILowpanInterface getInterface(java.lang.String)> (SMS_MMS)
<android.view.ViewConfiguration: int getHoverTooltipHideShortTimeout()> (SMS_MMS)
<android.util.proto.EncodedBuffer: int getReadableSize()> (SMS_MMS)
<android.graphics.ColorSpace: float[] access$1000()> (SMS_MMS)
<android.media.session.MediaSessionManager$RemoteUserInfo: int getUid()> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: java.util.function.BiPredicate negate()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.PinResult supplyPukReportPinResult(java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.VolumeShaper$State: float getXOffset()> (SMS_MMS)
<android.security.IFileIntegrityService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getOrganizationColor(android.content.ComponentName)> (SMS_MMS)
<android.app.IProcessObserver$Stub: android.app.IProcessObserver getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.IDropBoxManagerService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ContextThemeWrapper: android.content.res.Configuration getOverrideConfiguration()> (SMS_MMS)
<android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()> (SMS_MMS)
<android.view.FrameStats: long getEndTimeNano()> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub: android.media.projection.IMediaProjectionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$TaskDescription getTaskDescription(int)> (SMS_MMS)
<android.os.StrictMode$8: android.os.StrictMode$ThreadSpanState initialValue()> (SMS_MMS)
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.SyncRequest$Builder: int access$600(android.content.SyncRequest$Builder)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IShortcutService$Default: long getRateLimitResetTime(java.lang.String,int)> (SMS_MMS)
<android.app.AppOpsManager: java.lang.String getFlagName(int)> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String getMobileProvisioningUrl()> (SMS_MMS)
<android.text.method.TimeKeyListener: int getInputType()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: boolean isValid()> (SMS_MMS)
<android.os.IMessenger$Stub: android.os.IMessenger getDefaultImpl()> (SMS_MMS)
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowIgnoreLocationSettings()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getPivotX()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IRingtonePlayer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String)> (SMS_MMS)
<android.media.AudioFormat: int getFrameSizeInBytes()> (SMS_MMS)
<android.view.IDisplayWindowRotationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String[] getApkPaths()> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isCommissioned()> (SMS_MMS)
<android.os.SimpleClock: java.time.Instant instant()> (SMS_MMS)
<android.text.Layout$SpannedEllipsizer: int getSpanEnd(java.lang.Object)> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getIncidentReportApproverPackageName()> (SMS_MMS)
<com.android.internal.policy.DecorView: android.content.res.Resources getResources()> (SMS_MMS)
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)> (SMS_MMS)
<android.os.health.HealthStats: int getMeasurementsKeyCount()> (SMS_MMS)
<android.telephony.euicc.EuiccManager: java.util.List getUnsupportedCountries()> (SMS_MMS)
<android.text.SpannedString: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma: android.telephony.CellSignalStrength copy()> (SMS_MMS)
<android.app.IStopUserCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long forceNetworkLogs()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ITaskStackListener$Stub: android.app.ITaskStackListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.AudioRecord: int getMinBufferSize(int,int,int)> (SMS_MMS)
<android.app.admin.NetworkEvent: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityLte$1: void <init>()> (SMS_MMS)
<android.util.ArrayMap$1: int colIndexOfKey(java.lang.Object)> (SMS_MMS)
<android.location.Address: java.lang.String getSubThoroughfare()> (SMS_MMS)
<android.media.tv.TvInputInfo$TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri getOriginatingUri()> (SMS_MMS)
<android.database.CursorWindow: int getStartPosition()> (SMS_MMS)
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,long)> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeImpl()> (SMS_MMS)
<android.app.servertransaction.ClientTransaction: int describeContents()> (SMS_MMS)
<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getBlockedAppCount(int)> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int describeContents()> (SMS_MMS)
<com.android.net.IProxyService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getDisabledMessageResourceId()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Default: java.lang.String[] getNames()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getTextFontWeight()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPermissionPolicy(android.content.ComponentName)> (SMS_MMS)
<android.database.CursorWrapper: java.lang.String getColumnName(int)> (SMS_MMS)
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()> (SMS_MMS)
<android.hardware.Sensor: int getId()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.Binder: int handleShellCommand(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,java.lang.String[])> (SMS_MMS)
<com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)> (SMS_MMS)
<android.view.Display: float getRefreshRate()> (SMS_MMS)
<android.content.res.TypedArray: int getSourceResourceId(int,int)> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> (SMS_MMS)
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryStackRss()> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.BoringLayout: int getLineTop(int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: int getDesiredMinimumWidth()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getDoNotAskCredentialsOnBoot()> (SMS_MMS)
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)> (SMS_MMS)
<android.telephony.CallForwardingInfo$1: android.telephony.CallForwardingInfo[] newArray(int)> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.lang.String getNextOption()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getOverrideApns(android.content.ComponentName)> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.view.menu.MenuPopupHelper: int getGravity()> (SMS_MMS)
<android.hardware.display.DisplayedContentSample: long getNumFrames()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.app.WallpaperManager$ColorManagementProxy: java.util.Set getSupportedColorSpaces()> (SMS_MMS)
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getField(java.lang.String)> (SMS_MMS)
<android.app.backup.IBackupManagerMonitor$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.VoiceInteractor$PickOptionRequest: java.lang.String getRequestTypeName()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: java.lang.String getOpStr()> (SMS_MMS)
<android.app.assist.AssistStructure: int describeContents()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)> (SMS_MMS)
<android.widget.OverScroller: int getDuration()> (SMS_MMS)
<android.os.WorkSource$WorkChain: int getAttributionUid()> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub: android.os.IUserRestrictionsListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForDevice(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.content.BroadcastReceiver: android.os.UserHandle getSendingUser()> (SMS_MMS)
<android.telephony.PreciseCallState: int getBackgroundCallState()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isAdvancedCallingSettingEnabled(int)> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.Configuration[] getSizeConfigurations()> (SMS_MMS)
<android.animation.ObjectAnimator: java.lang.String getPropertyName()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: boolean isAborting()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getOrganizationNameForUser(int)> (SMS_MMS)
<android.os.StrictMode$9: android.view.IWindowManager create()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRejectCause(int)> (SMS_MMS)
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledConsumer recycleOnUse()> (SMS_MMS)
<android.location.LocationManager: java.util.List getAllProviders()> (SMS_MMS)
<android.app.WallpaperInfo: boolean getShowMetadataInPreview()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.os.ShellCommand: android.os.ResultReceiver adoptResultReceiver()> (SMS_MMS)
<android.widget.AdapterView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: int getWidthAlignment()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String[] getLinkAddresses()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getAsuLevel()> (SMS_MMS)
<android.app.ActivityOptions: int getLaunchActivityType()> (SMS_MMS)
<android.os.AsyncTask: java.lang.Object get()> (SMS_MMS)
<android.view.FocusFinder$UserSpecifiedFocusComparator: int compare(android.view.View,android.view.View)> (SMS_MMS)
<android.location.Location: float getBearing()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)> (SMS_MMS)
<android.util.SparseArray: int keyAt(int)> (SMS_MMS)
<android.view.View$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<com.android.internal.ml.clustering.KMeans$Mean: float[] getCentroid()> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: java.util.Set getIgnoredDatasetIds()> (SMS_MMS)
<android.content.res.Resources$Theme: int[] getAttributeResolutionStack(int,int,int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getMobileRadioActiveCount(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureSessionId: int describeContents()> (SMS_MMS)
<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String getLabel()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.app.usage.UsageEvents$Event: java.lang.String getShortcutId()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getAllSubInfoCount(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.vr.IVrManager$Stub$Proxy: boolean getPersistentVrModeEnabled()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityShortcutListAsUser(android.content.Context,int)> (SMS_MMS)
<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.Set getAllCrossProfilePackages()> (SMS_MMS)
<android.security.net.config.Pin: int getDigestLength(java.lang.String)> (SMS_MMS)
<android.print.PrintJobInfo: int getCopies()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()> (SMS_MMS)
<android.graphics.ImageDecoder$ImageInfo: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomEndTime()> (SMS_MMS)
<android.content.ContentProvider$Transport: int bulkInsert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues[])> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String[] getIgnoreSettingsWhitelist()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.companion.CompanionDeviceManager: java.lang.String access$200(android.companion.CompanionDeviceManager)> (SMS_MMS)
<android.os.Message: android.os.Bundle getData()> (SMS_MMS)
<android.location.ICountryListener$Stub: android.location.ICountryListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Default: int getUcePublishState(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: boolean deleteStoredMessage(java.lang.String,android.net.Uri)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> (SMS_MMS)
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.String getLastResourceResolution()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.RequestQueue access$800(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()> (SMS_MMS)
<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler handler()> (SMS_MMS)
<android.media.MediaRouter$Static: boolean isPlaybackActive()> (SMS_MMS)
<android.app.slice.SliceItem: java.lang.CharSequence getText()> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.location.ICountryDetector$Stub: android.location.ICountryDetector asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaCodecInfo: java.lang.String getName()> (SMS_MMS)
<android.app.Notification$Builder: java.lang.String loadHeaderAppName()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.view.DisplayAdjustments getDisplayAdjustments()> (SMS_MMS)
<android.util.ArrayMap: int indexOfNull()> (SMS_MMS)
<android.location.LocationManager: boolean isLocationEnabled()> (SMS_MMS)
<android.app.Notification: int access$902(android.app.Notification,int)> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.INetworkPolicyManager$Stub: android.net.INetworkPolicyManager getDefaultImpl()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getThickness()> (SMS_MMS)
<android.view.textclassifier.TextLanguage$Request: android.os.Bundle getExtras()> (SMS_MMS)
<android.net.Proxy: int getPort(android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)> (SMS_MMS)
<android.text.Layout: java.lang.CharSequence getText()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getHeight()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getCacheDir()> (SMS_MMS)
<android.telephony.CellInfoLte$1: void <init>()> (SMS_MMS)
<android.os.HardwarePropertiesManager: float[] getDeviceTemperatures(int,int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityShortcutInfo: int getAnimatedImageRes()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransport()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$4: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.app.job.IJobCallback$Stub: android.app.job.IJobCallback getDefaultImpl()> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.Map access$1200(android.media.session.MediaSessionManager)> (SMS_MMS)
<android.content.rollback.RollbackManager: java.util.List getRecentlyCommittedRollbacks()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Proxy: int release()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getProcessStateTime(int,long,int)> (SMS_MMS)
<android.media.IAudioService$Default: int getAllowedCapturePolicy()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: java.util.List getBrightnessEvents(java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionInfo: boolean isOpportunistic()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getSystemDialerPackage()> (SMS_MMS)
<android.app.servertransaction.TransactionExecutorHelper: android.app.servertransaction.ActivityLifecycleItem getLifecycleRequestForCurrentState(android.app.ActivityThread$ActivityClientRecord)> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: boolean getCsgIndicator()> (SMS_MMS)
<android.webkit.WebViewZygote: java.lang.String getPackageName()> (SMS_MMS)
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: long lastMaintenance()> (SMS_MMS)
<android.view.KeyEvent: boolean isWakeKey()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener getDefaultImpl()> (SMS_MMS)
<android.net.LocalSocket: int getReceiveBufferSize()> (SMS_MMS)
<android.view.inputmethod.InlineSuggestionsRequest: android.os.LocaleList getSupportedLocales()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: int getMaxWidth()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.style.ScaleXSpan: float getScaleX()> (SMS_MMS)
<android.app.IWindowToken$Stub: android.app.IWindowToken getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app._$$Lambda$AppOpsManager$HistoricalOp$HUOLFYs8TiaQIOXcrq6JzjxA6gs: java.lang.Object get()> (SMS_MMS)
<android.content.RestrictionsManager: java.util.List getManifestRestrictions(java.lang.String)> (SMS_MMS)
<android.telephony.CarrierConfigManager$Apn: android.os.PersistableBundle access$000()> (SMS_MMS)
<android.util.KeyValueListParser: int[] getIntArray(java.lang.String,int[])> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue[] getCc()> (SMS_MMS)
<android.widget.RemoteViewsListAdapter: int getViewTypeCount()> (SMS_MMS)
<android.view.WindowlessWindowManager: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)> (SMS_MMS)
<android.content.IContentService$Default: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)> (SMS_MMS)
<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.database.MatrixCursor: short getShort(int)> (SMS_MMS)
<android.app.prediction.AppPredictionContext: java.lang.String getPackageName()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.media.session.MediaSessionManager: android.media.session.MediaSession$Token access$1402(android.media.session.MediaSessionManager,android.media.session.MediaSession$Token)> (SMS_MMS)
<android.service.autofill.UserData: android.os.Bundle getDefaultFieldClassificationArgs()> (SMS_MMS)
<android.app.ActivityManager: int processStateAmToProto(int)> (SMS_MMS)
<android.media.MicrophoneInfo: int getInternalDeviceType()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityNr: android.telephony.CellIdentityNr createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getNetworkActivityPackets(int,int)> (SMS_MMS)
<android.app.trust.ITrustListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.util.List getRequestPreparersForAccessibilityId(int)> (SMS_MMS)
<android.print.PrintAttributes$Resolution: int hashCode()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)> (SMS_MMS)
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)> (SMS_MMS)
<android.os.IVoldListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue[] getEncodedStringValues(int)> (SMS_MMS)
<android.os.image.DynamicSystemManager: boolean isInstalled()> (SMS_MMS)
<android.location.GpsMeasurement: double getDopplerShiftInHz()> (SMS_MMS)
<android.net.StaticIpConfiguration: java.net.InetAddress getGateway()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getActiveDataSubscriptionId()> (SMS_MMS)
<android.app.ApplicationPackageManager: int getMoveStatus(int)> (SMS_MMS)
<android.view.View: android.view.WindowId getWindowId()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int checkSignatures(java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.lang.String getKeystoreAlias()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isWorldPhone()> (SMS_MMS)
<android.widget.AdapterView: android.view.View getEmptyView()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.util.List getEhplmns()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getFrontActivityScreenCompatMode()> (SMS_MMS)
<android.content.res.ResourcesImpl$ThemeImpl: long getNativeTheme()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getPermissionControllerPackageName()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getLeft()> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()> (SMS_MMS)
<android.permission.IPermissionManager$Default: int checkPermission(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.view.Display: int getState()> (SMS_MMS)
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.net.TrafficStats: long getUidTxBytes(int)> (SMS_MMS)
<android.view.View: java.lang.CharSequence getStateDescription()> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$3xL3VvVeihgpLYlVgAuAtdlfmlo: int callMethod(com.android.internal.telephony.ISub)> (SMS_MMS)
<android.app.Fragment: boolean isPostponed()> (SMS_MMS)
<android.inputmethodservice.InlineSuggestionSession: com.android.internal.view.InlineSuggestionsRequestInfo getRequestInfo()> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.ThemedResourceCache: java.lang.Object get(long,android.content.res.Resources$Theme)> (SMS_MMS)
<android.media.tv.TvInputManager: android.util.SparseArray access$300(android.media.tv.TvInputManager)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SignalStrength: int getCdmaDbm()> (SMS_MMS)
<android.view.animation.AnimationSet: long computeDurationHint()> (SMS_MMS)
<android.view.ViewPropertyAnimator: long getStartDelay()> (SMS_MMS)
<android.content.IRestrictionsManager$Default: android.os.Bundle getApplicationRestrictions(java.lang.String)> (SMS_MMS)
<android.os.BaseBundle: java.io.Serializable getSerializable(java.lang.String)> (SMS_MMS)
<android.transition.Transition: long getStartDelay()> (SMS_MMS)
<android.hardware.lights.LightState: int describeContents()> (SMS_MMS)
<android.view.ViewTreeObserver: java.util.ArrayList captureFrameCommitCallbacks()> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRecords: int count()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: java.lang.Object access$900(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getDefaultSmsSubId()> (SMS_MMS)
<android.filterfw.core.Filter: java.lang.String getName()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getPrivateFlagsForUid(int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getBasebandVersionForPhone(int)> (SMS_MMS)
<com.android.internal.os.ZygoteServer: java.lang.Runnable setUsapPoolStatus(boolean,android.net.LocalSocket)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int noteProxyOperation(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)> (SMS_MMS)
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> (SMS_MMS)
<android.widget.AdapterView: int getPositionForView(android.view.View)> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: int getAction()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()> (SMS_MMS)
<android.view.InputEvent: int getSequenceNumber()> (SMS_MMS)
<android.net.IpSecManager$IpSecTunnelInterface: int getResourceId()> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getDigests()> (SMS_MMS)
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] following(int)> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.print.PrintAttributes$MediaSize: int hashCode()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: int[] getAppIdTempWhitelist()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[],int)> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkOperationRaw(int,int,java.lang.String)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: boolean isRoaming()> (SMS_MMS)
<android.view.ViewGroup: android.view.View findViewWithTagTraversal(java.lang.Object)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureHelper: int getDefaultLoggingLevel()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getUserCpuTimeUs(int)> (SMS_MMS)
<android.view.PendingInsetsController: int getSystemBarsBehavior()> (SMS_MMS)
<android.telephony.ServiceState: int getDataRoamingType()> (SMS_MMS)
<android.print.IWriteResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioRecordingConfiguration: int describeContents()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getTargetActivity()> (SMS_MMS)
<android.app.blob.BlobStoreManager: long createSession(android.app.blob.BlobHandle)> (SMS_MMS)
<android.widget.AdapterViewAnimator: int getNumActiveViews()> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onClearRoleHolders$3(java.lang.String,int,android.app.role.IRoleController)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getTotalDurationMsLocked(long)> (SMS_MMS)
<android.content.LoggingContentInterface: java.lang.String getType(android.net.Uri)> (SMS_MMS)
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getTtcIndex()> (SMS_MMS)
<android.os.IUserManager$Default: android.content.pm.UserInfo getUserInfo(int)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.util.LongSparseArray: int size()> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)> (SMS_MMS)
<android.content.UndoManager: boolean matchOwners(android.content.UndoManager$UndoState,android.content.UndoOwner[])> (SMS_MMS)
<android.view.KeyEvent: int access$076(android.view.KeyEvent,int)> (SMS_MMS)
<android.app.IAppTask$Stub$Proxy: android.app.ActivityManager$RecentTaskInfo getTaskInfo()> (SMS_MMS)
<android.telephony.SmsMessage: boolean isReplace()> (SMS_MMS)
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance(java.util.Locale)> (SMS_MMS)
<android.util.LongArray: long get(int)> (SMS_MMS)
<android.widget.AbsSpinner: android.view.autofill.AutofillValue getAutofillValue()> (SMS_MMS)
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SmsCbMessage: int getSlotIndex()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.MapCollections: java.util.Collection getValues()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getIntProp()> (SMS_MMS)
<android.telephony.CellInfoGsm: int hashCode()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.util.List getAllStackInfosOnDisplay(int)> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getProductId()> (SMS_MMS)
<android.media.MediaFormat: int getValueTypeForKey(java.lang.String)> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: java.lang.String[] getDefaultOverlayPackages()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.TelephonyManager$MultiSimVariants getMultiSimConfiguration()> (SMS_MMS)
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewGroup: boolean getClipToPadding()> (SMS_MMS)
<android.content.ContentResolver: android.os.Bundle getCache(android.net.Uri)> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String getName()> (SMS_MMS)
<android.telecom.TelecomAnalytics$SessionTiming: java.lang.Integer getKey()> (SMS_MMS)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getStorageVolumes()> (SMS_MMS)
<android.hardware.ICameraClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.TypedArray: int getResourceId(int,int)> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.RemoteViews$SetIntTagAction: int getActionTag()> (SMS_MMS)
<android.telecom.VideoProfile$CameraCapabilities: int getHeight()> (SMS_MMS)
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: com.android.internal.telephony.euicc.IResetMemoryCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.CellIdentityGsm: java.lang.String getMobileNetworkOperator()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()> (SMS_MMS)
<android.hardware.usb.UsbPort: java.lang.String getId()> (SMS_MMS)
<android.view.MotionEvent: float getYPrecision()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getDeviceIdleModeTime(int,long,int)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getSceneMode()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.util.List getMimeGroup(java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: java.util.List getGlobalSearchActivities()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: int getRecommendedUseCase()> (SMS_MMS)
<android.hardware.radio.ProgramSelector: long getFirstId(int)> (SMS_MMS)
<android.os.VibrationAttributes: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.hardware.location.ContextHubInfo: float getPeakPowerDrawMw()> (SMS_MMS)
<android.telephony.ModemActivityInfo$1: android.telephony.ModemActivityInfo[] newArray(int)> (SMS_MMS)
<android.media.MediaRouter2Utils: java.lang.String getOriginalId(java.lang.String)> (SMS_MMS)
<android.content.pm.ActivityInfo: int getRealConfigChanged()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyRequest access$1000(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub$Proxy: int canAuthenticate(java.lang.String,int,int)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: int isMicMuted()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int describeContents()> (SMS_MMS)
<android.text.FontConfig$Font: android.net.Uri getUri()> (SMS_MMS)
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isApplicationQualifiedForRole$4(java.lang.String,java.lang.String,android.app.role.IRoleController)> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar: int getDisplayOptions()> (SMS_MMS)
<android.media.AudioManager: boolean isBluetoothA2dpOn()> (SMS_MMS)
<android.hardware.camera2.CameraMetadata: java.util.List getKeys()> (SMS_MMS)
<android.app.job.JobInfo: int getId()> (SMS_MMS)
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Activity: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.MotionEvent: float getPressure(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] getCountsLocked(int)> (SMS_MMS)
<android.view.View: android.view.IWindowSession getWindowSession()> (SMS_MMS)
<android.app.slice.SliceItem: int describeContents()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getDescriptionRes()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isWirelessConsentModeEnabled()> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub: android.view.IGraphicsStatsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowedByCarrier()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getProfileParent(int)> (SMS_MMS)
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)> (SMS_MMS)
<android.util.TypedValue: int getComplexUnit()> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ListView$ArrowScrollFocusResult: int getSelectedPosition()> (SMS_MMS)
<android.app.NotificationManager: java.util.List getEnabledNotificationListeners(int)> (SMS_MMS)
<android.hardware.location.NanoApp: int[] getOutputEvents()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int resolveDefaultColor(android.content.Context,int,boolean)> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int getAudioDirection()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ComplexColor loadComplexColor(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.service.notification.ZenModeConfig$ScheduleInfo: int hashCode()> (SMS_MMS)
<android.widget.RemoteViewsAdapter: int getViewTypeCount()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.IIncidentManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()> (SMS_MMS)
<android.view.textclassifier.TextClassification: android.view.View$OnClickListener getOnClickListener()> (SMS_MMS)
<android.view.View: int getScrollIndicators()> (SMS_MMS)
<android.view.ViewRootImpl: int getHostVisibility()> (SMS_MMS)
<android.os.IVibratorService$Stub$Proxy: boolean isVibrating()> (SMS_MMS)
<android.media.MicrophoneInfo: int getId()> (SMS_MMS)
<android.hardware.display.VirtualDisplayConfig: android.view.Surface getSurface()> (SMS_MMS)
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.ScrollCaptureClient getScrollCaptureClient()> (SMS_MMS)
<android.widget.TextView: int getHyphenationFrequency()> (SMS_MMS)
<android.service.autofill.UserData: java.lang.String getId()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int getHandle()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getGradientRadius()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getInMemoryIcon()> (SMS_MMS)
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> (SMS_MMS)
<android.hardware.input.IInputManager$Default: int isInTabletMode()> (SMS_MMS)
<android.media.MediaRoute2Info: java.lang.String getProviderId()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean setSmscAddressOnIccEfForSubscriber(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.hardware.input.InputDeviceIdentifier: int describeContents()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCOLR(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByFileName(java.lang.String)> (SMS_MMS)
<android.os.Handler: android.os.Handler getMain()> (SMS_MMS)
<android.service.notification.SnoozeCriterion: java.lang.String getId()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: java.util.List getUnsignedLongs(int)> (SMS_MMS)
<android.graphics.fonts.Font: long getNativePtr()> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingEnd()> (SMS_MMS)
<android.os.PowerManager: boolean isAmbientDisplaySuppressed()> (SMS_MMS)
<android.webkit.CookieManager: java.lang.Object clone()> (SMS_MMS)
<android.view.MotionEvent: int getSource()> (SMS_MMS)
<android.debug.IAdbManager$Default: java.util.Map getPairedDevices()> (SMS_MMS)
<android.hardware.display.WifiDisplay: int hashCode()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviderPackages(java.lang.String)> (SMS_MMS)
<android.telephony.euicc.DownloadableSubscription: java.util.List getAccessRules()> (SMS_MMS)
<android.view.Choreographer: long getLastFrameTimeNanos()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getSharedSystemSharedLibraryPackageName()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int describeContents()> (SMS_MMS)
<android.telephony.TelephonyRegistryManager: void notifyPreciseDataConnectionFailed(int,int,int,java.lang.String,int)> (SMS_MMS)
<android.net.IpSecConfig: java.lang.String getSourceAddress()> (SMS_MMS)
<android.permission.IPermissionManager$Default: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)> (SMS_MMS)
<android.widget.RemoteViews$TextViewDrawableAction: int getActionTag()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,int)> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfiguration()> (SMS_MMS)
<android.text.PrecomputedText: int getMemoryUsage()> (SMS_MMS)
<android.location.ILocationManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getDefaultTextClassifierImplementation(android.content.Context)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForPhoneAccountHandle(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.net.wifi.nl80211.RadioChainInfo: int getChainId()> (SMS_MMS)
<android.media.VolumeProvider: int getCurrentVolume()> (SMS_MMS)
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)> (SMS_MMS)
<android.net.LinkAddress: int describeContents()> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getTransformed()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int getInnerRadius()> (SMS_MMS)
<android.location.ICountryListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)> (SMS_MMS)
<android.media.MediaRoute2Info: int getVolumeMax()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getAppPredictionServicePackageName()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: boolean[] getSubjectUniqueID()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.ParceledListSlice getAllPermissionGroups(int)> (SMS_MMS)
<android.net.lowpan.LowpanInterface: boolean isEnabled()> (SMS_MMS)
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> (SMS_MMS)
<android.view.ViewConfiguration: long getDefaultActionModeHideDuration()> (SMS_MMS)
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSubId()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)> (SMS_MMS)
<android.app.IApplicationThread$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)> (SMS_MMS)
<android.os.incremental.IStorageHealthListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.ISystemConfig$Stub: android.os.ISystemConfig asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.Layout: int getOffsetForHorizontal(int,float)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidths()> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.util.List getAppTasks(java.lang.String)> (SMS_MMS)
<android.view.Window: boolean getSharedElementsUseOverlay()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getSetupWizardPackageName()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getLockTaskFeatures(android.content.ComponentName)> (SMS_MMS)
<android.media.tv.DvbDeviceInfo: int getAdapterId()> (SMS_MMS)
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getSubscriptionId()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getDefaultImpl()> (SMS_MMS)
<android.app.VoiceInteractor$Request: java.lang.String getRequestTypeName()> (SMS_MMS)
<android.security.IKeyChainService$Default: int attestKey(java.lang.String,byte[],int[],android.security.keymaster.KeymasterCertificateChain)> (SMS_MMS)
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.INetworkPolicyListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.BoringLayout: float getLineWidth(int)> (SMS_MMS)
<android.media.AudioPort: int role()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierPrivilegeStatusForUid(int,int)> (SMS_MMS)
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)> (SMS_MMS)
<android.view.IPinnedStackListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.content.res.ColorStateList getTint()> (SMS_MMS)
<android.text.style.URLSpan: java.lang.String getURL()> (SMS_MMS)
<android.media.audiopolicy.AudioMix: int getRouteFlags()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int ungrant(java.lang.String,int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int describeContents()> (SMS_MMS)
<android.media.IMediaHTTPService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.SensorManager: float[] getOrientation(float[],float[])> (SMS_MMS)
<android.content.ClipData: android.content.ClipDescription getDescription()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VObject: boolean isTreeValid()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getGlobalProxyAdmin(int)> (SMS_MMS)
<android.accessibilityservice.GestureDescription$TouchPoint: int describeContents()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getSimStateForSlotIndex(int)> (SMS_MMS)
<android.net.IpSecManager$SpiUnavailableException: int getSpi()> (SMS_MMS)
<android.permission.IPermissionManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: java.lang.Integer lambda$queryCapabilityStatus$0$RcsFeature$RcsFeatureBinder()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()> (SMS_MMS)
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()> (SMS_MMS)
<android.location.Criteria: int getAccuracy()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean handlePinMmi(java.lang.String)> (SMS_MMS)
<android.webkit.TracingConfig: int getPredefinedCategories()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: byte[] getCaCertificates(java.lang.String)> (SMS_MMS)
<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()> (SMS_MMS)
<android.app.IActivityManager$Default: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: int getMaxNumberOfSimultaneouslyActiveSims()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOn(java.lang.String)> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: int getTotalDuration()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isVolteAvailable()> (SMS_MMS)
<android.graphics.ImageDecoder$Source: int getDensity()> (SMS_MMS)
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)> (SMS_MMS)
<android.permission.IOnPermissionsChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.WallpaperManager: java.lang.String access$000()> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getSplitName()> (SMS_MMS)
<android.media.MediaCas$PluginDescriptor: int getSystemId()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: int describeContents()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.telephony.ims.aidl.IRcsFeatureListener getDefaultImpl()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getInterfaceCount()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.UserIcons: android.graphics.drawable.Drawable getDefaultUserIcon(android.content.res.Resources,int,boolean)> (SMS_MMS)
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.MediaRouter$Static: boolean isBluetoothA2dpOn()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.service.notification.ZenModeConfig getZenModeConfig()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.view.Surface getInputSurface()> (SMS_MMS)
<android.webkit.WebView: int computeHorizontalScrollRange()> (SMS_MMS)
<android.content.res.Resources: int getColor(int)> (SMS_MMS)
<android.webkit.WebView: int getVisibleTitleHeight()> (SMS_MMS)
<android.location.GnssAntennaInfo$SphericalCorrections: double getDeltaPhi()> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.content.pm.IPackageInstallerSessionFileSystemConnector asInterface(android.os.IBinder)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: int getCallTerminationCode()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int clear_uid(long)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.ProxyInfo getProxyForNetwork(android.net.Network)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getBackupTransportWhitelist()> (SMS_MMS)
<android.media.session.MediaSessionManager: java.lang.String access$1302(android.media.session.MediaSessionManager,java.lang.String)> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String getResourceEntryName(int)> (SMS_MMS)
<android.telephony.LteVopsSupportInfo: int describeContents()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppDenyPermissions(java.lang.String)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.transition.Transition getExitTransition()> (SMS_MMS)
<android.net.NetworkKey: int describeContents()> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)> (SMS_MMS)
<android.webkit.JsResult: boolean getResult()> (SMS_MMS)
<android.media.VolumeProvider: int getVolumeControl()> (SMS_MMS)
<android.graphics.BitmapShader: long createNativeInstance(long)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeightsFor(int)> (SMS_MMS)
<android.media.IRingtonePlayer$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.window.ITaskOrganizer$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String getRootId(android.net.Uri)> (SMS_MMS)
<android.net.IpSecConfig: int getMarkMask()> (SMS_MMS)
<android.hardware.radio.V1_2.CellIdentityCdma: int hashCode()> (SMS_MMS)
<android.app.ContextImpl: int checkCallingPermission(java.lang.String)> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getEndpointCount()> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.LocalePicker$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: java.util.List getSupportedPerformancePoints()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createRestrictedProfileWithThrow(java.lang.String,int)> (SMS_MMS)
<android.text.style.BulletSpan: int getBulletRadius()> (SMS_MMS)
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeInMeters()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: android.service.notification.StatusBarNotification get()> (SMS_MMS)
<android.telephony.CellInfoNr$1: android.telephony.CellInfoNr createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub: android.print.IPrintDocumentAdapterObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> (SMS_MMS)
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Size getSize()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()> (SMS_MMS)
<android.media.MediaRecorder: android.media.AudioDeviceInfo getRoutedDevice()> (SMS_MMS)
<android.media.AudioPortConfig: int channelMask()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.SearchView: int getInputType()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkState[] getAllNetworkState()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: int getInterpolatorType()> (SMS_MMS)
<android.os.IVibratorStateListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()> (SMS_MMS)
<android.app.prediction.AppTarget: int describeContents()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.hardware.soundtrigger.IRecognitionStatusCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int getEmergencyServiceCategoryBitmaskInternalDial()> (SMS_MMS)
<android.net.NetworkIdentity: java.lang.String getNetworkId()> (SMS_MMS)
<android.os.VibrationEffect$Prebaked: int getId()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List extractAsyncOps(java.lang.String)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)> (SMS_MMS)
<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.GraphicBuffer getGraphicBuffer()> (SMS_MMS)
<android.location.GnssAntennaInfo$SphericalCorrections: double[][] getCorrectionsArray()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getActiveNetworkInfo()> (SMS_MMS)
<android.view.WindowlessWindowManager: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InsetsState)> (SMS_MMS)
<android.location.GnssMeasurementsEvent: java.util.Collection getMeasurements()> (SMS_MMS)
<android.content.IClipboard$Default: android.content.ClipDescription getPrimaryClipDescription(java.lang.String,int)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub: android.hardware.biometrics.IAuthService asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination: java.util.List getStreamsInformation()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: int changeEncryptionPassword(int,java.lang.String)> (SMS_MMS)
<android.app.Notification$Builder: int getPrimaryTextColor()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoMode()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: long getUserUnlockRealtime()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureContext: android.os.Bundle getExtras()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int getFlashLockState()> (SMS_MMS)
<com.android.internal.os.FuseAppLoop: int getMountPointId()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getCallProfile()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$400(android.security.keystore.recovery.KeyChainSnapshot)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isApplicationOnUicc(int,int)> (SMS_MMS)
<android.app.INotificationManager$Default: int getBubblePreferenceForPackage(java.lang.String,int)> (SMS_MMS)
<android.text.MeasuredParagraph: int getParagraphDir()> (SMS_MMS)
<android.widget.TextView: int getBaselineOffset()> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.BackgroundColorSpan: int getSpanTypeId()> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: int getStackState()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: int hashCode()> (SMS_MMS)
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()> (SMS_MMS)
<com.android.internal.policy.DecorView: int getColorViewRightInset(int,int)> (SMS_MMS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getMetaData()> (SMS_MMS)
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getViewTypeCount()> (SMS_MMS)
<android.location.GnssStatus: int hashCode()> (SMS_MMS)
<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: android.hardware.location.ContextHubInfo getContextHubInfo(int)> (SMS_MMS)
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> (SMS_MMS)
<android.app.Fragment: int hashCode()> (SMS_MMS)
<android.media.AudioPort: android.media.AudioGain gain(int)> (SMS_MMS)
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])> (SMS_MMS)
<android.graphics.drawable.RippleForeground$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.telephony.RadioAccessFamily$1: android.telephony.RadioAccessFamily createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.security.keystore.KeyGenParameterSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub: android.media.tv.ITvInputManager getDefaultImpl()> (SMS_MMS)
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()> (SMS_MMS)
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getXOffsetMm()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int describeContents()> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo$1: android.telephony.DataSpecificRegistrationInfo[] newArray(int)> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()> (SMS_MMS)
<android.media.MediaPlayer: android.media.AudioDeviceInfo getRoutedDevice()> (SMS_MMS)
<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()> (SMS_MMS)
<android.view.animation.Animation: android.view.animation.Animation clone()> (SMS_MMS)
<android.view.SurfaceControl: int getWidth()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserBadgeNoBackgroundResId(int)> (SMS_MMS)
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.CharSequence ttsSpanAsPhoneNumber(java.lang.CharSequence)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: int getTabCount()> (SMS_MMS)
<android.net.lowpan.LowpanCredential: int getMasterKeyIndex()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.graphics.Bitmap: int getScaledWidth(int)> (SMS_MMS)
<android.telephony.UiccCardInfo$1: android.telephony.UiccCardInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.location.GnssSingleSatCorrection: float getProbabilityLineOfSight()> (SMS_MMS)
<android.net.NetworkAgentConfig: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplicationAsUser(android.content.Context,boolean,int)> (SMS_MMS)
<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)> (SMS_MMS)
<android.view.ViewGroup: int getNumChildrenForAccessibility()> (SMS_MMS)
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.NetworkScorerAppData: java.lang.String getRecommendationServiceLabel()> (SMS_MMS)
<android.service.vr.IVrStateCallbacks$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: java.lang.String getProxyPackageName()> (SMS_MMS)
<android.media.MediaCodec: android.media.Image getInputImage(int)> (SMS_MMS)
<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int getValue()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getSensorStats()> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getTvInputList(int)> (SMS_MMS)
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: boolean isVideoCall()> (SMS_MMS)
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.media.session.MediaController getMediaController()> (SMS_MMS)
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)> (SMS_MMS)
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)> (SMS_MMS)
<android.widget.ActionMenuPresenter$OverflowMenuButton$1: com.android.internal.view.menu.ShowableListMenu getPopup()> (SMS_MMS)
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$3Kis6wL1IbLustWe9A2o4_2YpGo: java.lang.Object createService(android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getChannelId()> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int getRadioTech()> (SMS_MMS)
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted(java.lang.String)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.os.IBinder getOverlayWindowToken(int)> (SMS_MMS)
<android.view.WindowInsets: int getStableInsetRight()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getBitmapPath()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalPressure(int)> (SMS_MMS)
<android.media.PlayerBase: boolean isRestricted_sync()> (SMS_MMS)
<android.permission.IPermissionController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.View: android.view.View findKeyboardNavigationCluster()> (SMS_MMS)
<android.telephony.ServiceState: int getBitmaskForTech(int)> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telecom.Logging.EventManager$EventRecord: java.util.List extractEventTimings()> (SMS_MMS)
<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()> (SMS_MMS)
<android.os.Parcel: java.util.ArrayList createStringArrayList()> (SMS_MMS)
<android.media.AudioHandle: int hashCode()> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getImageBytes()> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.AndroidKeyStorePublicKey: int hashCode()> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: android.app.NotificationChannel getChannel()> (SMS_MMS)
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String)> (SMS_MMS)
<android.permission.PermissionManager$SplitPermissionInfo: int hashCode()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()> (SMS_MMS)
<android.net.INetworkStatsService$Stub$Proxy: long getIfaceStats(java.lang.String,int)> (SMS_MMS)
<android.app.NotificationManager: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: int getNeededExecMemBytes()> (SMS_MMS)
<android.text.PrecomputedText: int getStart()> (SMS_MMS)
<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsetsAsRect()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.SocketKeepalive createNattKeepalive(android.net.Network,android.os.ParcelFileDescriptor,java.net.InetAddress,java.net.InetAddress,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)> (SMS_MMS)
<android.app.timedetector.TelephonyTimeSuggestion: java.util.List getDebugInfo()> (SMS_MMS)
<android.os.IVold$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.CompatibilityInfo$Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getProgressTintMode()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.PinResult supplyPinReportPinResult(java.lang.String)> (SMS_MMS)
<android.text.style.BulletSpan: int getGapWidth()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.lang.CharSequence getImportanceExplanation()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.Half: int getSignificand(short)> (SMS_MMS)
<android.animation.PathKeyframes: java.util.ArrayList getKeyframes()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)> (SMS_MMS)
<android.net.NetworkStatsHistory: int size()> (SMS_MMS)
<android.security.KeyStore: boolean isEmpty()> (SMS_MMS)
<android.os.StrictMode$ViolationInfo: java.lang.String getViolationDetails()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: long computeBatteryTimeRemaining()> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: java.lang.CharSequence getText()> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallWaiting()> (SMS_MMS)
<android.provider.FontsContract: android.provider.FontsContract$FontInfo[] getFontFromProvider(android.content.Context,android.provider.FontRequest,java.lang.String,android.os.CancellationSignal)> (SMS_MMS)
<android.media.AudioHandle: int id()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setCellIdentity(android.telephony.CellIdentity)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.util.List getLeasedBlobs(java.lang.String)> (SMS_MMS)
<android.net.INetworkScoreService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getMessageClass()> (SMS_MMS)
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.webkit.WebView$PrivateAccess: float getVerticalScrollFactor()> (SMS_MMS)
<android.os.DeviceIdleManager: java.lang.String[] getSystemPowerWhitelist()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.TrustedCertificateStoreAdapter: java.lang.String getCertificateAlias(java.security.cert.Certificate)> (SMS_MMS)
<android.app.timezone.ICallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IDataLoader$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.assist.AssistStructure: android.app.assist.AssistStructure$WindowNode getWindowNodeAt(int)> (SMS_MMS)
<android.widget.Magnifier$SurfaceInfo: int access$1700(android.widget.Magnifier$SurfaceInfo)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getAspectRatioRange(boolean)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalPackageOps: int hashCode()> (SMS_MMS)
<android.security.keystore.KeystoreResponse: int getErrorCode()> (SMS_MMS)
<android.app.Person: java.lang.String getUri()> (SMS_MMS)
<android.service.vr.IVrManager$Stub: android.service.vr.IVrManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfiguration: int getFormat()> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo: int describeContents()> (SMS_MMS)
<android.view.ViewConfiguration: int getHoverTapTimeout()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getConfigPreferences()> (SMS_MMS)
<android.app.contentsuggestions.ContentSuggestionsManager: boolean isEnabled()> (SMS_MMS)
<android.telephony.CellInfoTdscdma: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getDisableOptionalSensors()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.backup.IFullBackupRestoreObserver$Stub: android.app.backup.IFullBackupRestoreObserver asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)> (SMS_MMS)
<android.print.PrinterInfo: android.print.PrinterId getId()> (SMS_MMS)
<android.net.INetworkScoreService$Default: android.net.NetworkScorerAppData getActiveScorer()> (SMS_MMS)
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getMediaInfo()> (SMS_MMS)
<android.net.NetworkTemplate: int getCollapsedRatType(int)> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.LocalSocketImpl: int access$300(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)> (SMS_MMS)
<android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback getDefaultImpl()> (SMS_MMS)
<android.net.Uri$PathPart: android.net.Uri$PathPart appendDecodedSegment(android.net.Uri$PathPart,java.lang.String)> (SMS_MMS)
<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<android.os.HandlerThread: int getThreadId()> (SMS_MMS)
<android.media.tv.ITvInputManagerCallback$Stub: android.media.tv.ITvInputManagerCallback getDefaultImpl()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.StorageManager: java.util.List getWritablePrivateVolumes()> (SMS_MMS)
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int hashCode()> (SMS_MMS)
<android.os.connectivity.GpsBatteryStats: long getLoggingDurationMs()> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: int getInstallLocation()> (SMS_MMS)
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()> (SMS_MMS)
<android.view.VerifiedInputEvent: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: java.lang.String[] getEntityTypes()> (SMS_MMS)
<android.widget.ExpandableListConnector$GroupMetadata: int describeContents()> (SMS_MMS)
<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()> (SMS_MMS)
<android.content.IntentFilter: int countDataSchemes()> (SMS_MMS)
<android.net.wifi.nl80211.PnoSettings: int getMin2gRssiDbm()> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfoTdscdma: int hashCode()> (SMS_MMS)
<android.os.UserHandle: int describeContents()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.text.SpannableStringBuilder: int hashCode()> (SMS_MMS)
<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaLong()> (SMS_MMS)
<android.text.TextUtils$StringWithRemovedChars: int codePointAt(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimCountryIsoForPhone(int)> (SMS_MMS)
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int,android.os.IBinder)> (SMS_MMS)
<android.widget.AbsSpinner: android.view.View getSelectedView()> (SMS_MMS)
<android.os.ShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)> (SMS_MMS)
<android.app.EnterTransitionCoordinator: java.util.ArrayList getPendingExitSharedElementNames()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getBatteryCapacity()> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InsetsState)> (SMS_MMS)
<android.view.IPinnedStackController$Stub: android.view.IPinnedStackController asInterface(android.os.IBinder)> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(java.lang.Object)> (SMS_MMS)
<android.app.timedetector.ManualTimeSuggestion: android.os.TimestampedValue getUtcTime()> (SMS_MMS)
<android.graphics.NinePatch: java.lang.String getName()> (SMS_MMS)
<android.app.IAlarmManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: long getVendorId()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService getDefaultImpl()> (SMS_MMS)
<android.app.trust.ITrustListener$Stub: android.app.trust.ITrustListener getDefaultImpl()> (SMS_MMS)
<android.net.NetworkRequest: int getRequestorUid()> (SMS_MMS)
<android.telephony.CellInfoTdscdma$1: android.telephony.CellInfoTdscdma[] newArray(int)> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.database.MatrixCursor: double getDouble(int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,java.lang.String,int,android.os.UserHandle)> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: android.net.lowpan.LowpanIdentity getLowpanIdentity()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: android.content.pm.PathPermission[] getPathPermissions()> (SMS_MMS)
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)> (SMS_MMS)
<android.app.IProcessObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int getModelState(java.util.UUID)> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int writeSelfToParcel(android.os.Parcel,android.os.PooledStringWriter,boolean,float[])> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getPermission()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int[] getSupportedSystemUsages()> (SMS_MMS)
<android.hardware.radio.V1_2.TdscdmaSignalStrength: int hashCode()> (SMS_MMS)
<android.text.method.WordIterator: int prevBoundary(int)> (SMS_MMS)
<android.view.View$AttachInfo: android.view.contentcapture.ContentCaptureManager getContentCaptureManager(android.content.Context)> (SMS_MMS)
<android.view.View: float getBottomFadingEdgeStrength()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.HandlerActionQueue getRunQueue()> (SMS_MMS)
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getIP()> (SMS_MMS)
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)> (SMS_MMS)
<android.app.IWallpaperManager$Stub: android.app.IWallpaperManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.provider.FontRequest: java.lang.String getIdentifier()> (SMS_MMS)
<android.app.Notification$Builder: int access$3100(android.app.Notification$Builder)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$Builder: int access$100(android.view.textclassifier.TextClassifierEvent$Builder)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.os.Bundle getAssistContextExtras(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos(android.content.Context)> (SMS_MMS)
<android.util.LongSparseArray: int access$002(android.util.LongSparseArray,int)> (SMS_MMS)
<android.text.PrecomputedText: int getParagraphCount()> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.os.Bundle)> (SMS_MMS)
<android.media.AudioRecordingMonitorImpl: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()> (SMS_MMS)
<android.app.KeyguardManager: boolean isDeviceSecure()> (SMS_MMS)
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)> (SMS_MMS)
<android.media.MediaRouter: int getRouteCountStatic()> (SMS_MMS)
<android.telecom.PhoneAccount: int getSupportedAudioRoutes()> (SMS_MMS)
<android.app.Fragment: android.transition.Transition getReenterTransition()> (SMS_MMS)
<android.media.IMediaHTTPService$Default: android.media.IMediaHTTPConnection makeHTTPConnection()> (SMS_MMS)
<android.app.BackStackRecord: java.lang.String getName()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub: android.hardware.input.ITabletModeChangedListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getParentActivityName()> (SMS_MMS)
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)> (SMS_MMS)
<android.filterfw.core.NativeBuffer: int size()> (SMS_MMS)
<android.app.admin.PasswordMetrics$ComplexityBucket$4: int getMinimumLength(boolean)> (SMS_MMS)
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.StaticLayout: int getLineCount()> (SMS_MMS)
<android.widget.ExpandableListConnector: int findGroupPosition(long,int)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getMIMEType()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeRecord findRecordByUuid(java.lang.String)> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentityCdma: int hashCode()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int decodeArgCount(int)> (SMS_MMS)
<android.media.AudioMetadata$1: java.lang.Class getValueClass()> (SMS_MMS)
<android.net.ITetheringStatsProvider$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: int getRepeatCount()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getNetworkForType(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)> (SMS_MMS)
<android.hardware.location.NanoAppMessage: long getNanoAppId()> (SMS_MMS)
<android.widget.AdapterViewAnimator: int getDisplayedChild()> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver2$Stub: android.content.pm.IPackageDeleteObserver2 getDefaultImpl()> (SMS_MMS)
<android.service.notification.NotificationStats: int describeContents()> (SMS_MMS)
<android.app.ITransientNotification$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getTimeInRxSignalStrengthLevelMicros(int)> (SMS_MMS)
<android.media.TimedMetaData: byte[] getMetaData()> (SMS_MMS)
<android.widget.ListView$ArrowScrollFocusResult: int getAmountToScroll()> (SMS_MMS)
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getDefaultTextClassifierPackageName()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IServiceManager$Stub$Proxy: android.os.IBinder getService(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()> (SMS_MMS)
<android.media.Utils: int parseIntSafely(java.lang.Object,int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isAudioServerRunning()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)> (SMS_MMS)
<android.view.DisplayAddress: int describeContents()> (SMS_MMS)
<android.view.IScrollCaptureClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: java.util.List getEventTimings()> (SMS_MMS)
<android.content.Intent: double getDoubleExtra(java.lang.String,double)> (SMS_MMS)
<android.text.HtmlToSpannedConverter: android.text.Spanned convert()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getLockTaskFeatures(android.content.ComponentName)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: int getMode()> (SMS_MMS)
<android.service.notification.StatusBarNotification: int getUid()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub: android.content.pm.IPackageStatsObserver getDefaultImpl()> (SMS_MMS)
<android.view.ViewGroup: android.view.View getChildAt(int)> (SMS_MMS)
<android.view.Window: android.view.View getStatusBarBackgroundView()> (SMS_MMS)
<android.location.GpsClock: short getLeapSecond()> (SMS_MMS)
<android.view.IRotationWatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.infra.RemoteStream: byte[] readAll(java.io.InputStream)> (SMS_MMS)
<android.app.timezone.DistroFormatVersion: int getMinorVersion()> (SMS_MMS)
<android.location.ILocationManager$Default: java.util.List getProviders(android.location.Criteria,boolean)> (SMS_MMS)
<android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)> (SMS_MMS)
<android.text.TextPaint: float getUnderlineThickness()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm$1: android.telephony.CellSignalStrengthGsm[] newArray(int)> (SMS_MMS)
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])> (SMS_MMS)
<android.app.Notification$Action$WearableExtender: boolean getHintDisplayActionInline()> (SMS_MMS)
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()> (SMS_MMS)
<android.printservice.recommendation.RecommendationInfo: int describeContents()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isOffhook()> (SMS_MMS)
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()> (SMS_MMS)
<android.os.TestLooperManager: android.os.Message next()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Default: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> (SMS_MMS)
<com.android.internal.app.IAppOpsStartedCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.nsd.INsdManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataVendorDeDirectory(int)> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.Object getProtected(java.lang.Object)> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: int hashCode()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean supplyPin(java.lang.String)> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isAvailable(int,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long forceSecurityLogs()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: int getHighlightColor()> (SMS_MMS)
<android.content.pm.PackageManager: int installStatusToPublicStatus(int)> (SMS_MMS)
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.app.NotificationChannel: java.lang.String getConversationId()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int getOpacity()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.SensorDirectChannel: int getNativeHandle()> (SMS_MMS)
<android.view.inputmethod.InputConnectionInspector: int getMissingMethodFlagsInternal(java.lang.Class)> (SMS_MMS)
<android.graphics.Shader: android.graphics.ColorSpace colorSpace()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: int[] getColors()> (SMS_MMS)
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getActiveTimeReaderInstance()> (SMS_MMS)
<android.content.pm.PackageManager: boolean isPackageSuspended()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.appwidget.AppWidgetManager: boolean isRequestPinAppWidgetSupported()> (SMS_MMS)
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)> (SMS_MMS)
<android.webkit.WebViewLibraryLoader: int prepareNativeLibraries(android.content.pm.PackageInfo)> (SMS_MMS)
<android.os.INetworkManagementService$Default: int removeRoutesFromLocalNetwork(java.util.List)> (SMS_MMS)
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_4.CellInfo,long)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanCredential getLowpanCredential()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getEstimatedBatteryCapacity()> (SMS_MMS)
<android.util.KeyValueListParser$StringValue: java.lang.String getValue()> (SMS_MMS)
<android.graphics.Paint: java.lang.String getFontVariationSettings()> (SMS_MMS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanIdentity getLowpanIdentity()> (SMS_MMS)
<android.hardware.Camera$Parameters: float getFocalLength()> (SMS_MMS)
<android.hardware.location.NanoAppInstanceInfo: long getAppId()> (SMS_MMS)
<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuPopup getPopup()> (SMS_MMS)
<android.content.Intent: int filterHashCode()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterfaceEventCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: com.android.internal.telephony.euicc.ISwitchToProfileCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Short4: short get(int)> (SMS_MMS)
<android.media.AudioManager: float getStreamVolumeDb(int,int,int)> (SMS_MMS)
<android.app.NotificationManager$Policy: int hashCode()> (SMS_MMS)
<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig getConfig()> (SMS_MMS)
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)> (SMS_MMS)
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext()> (SMS_MMS)
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getRssnr()> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.Class getType()> (SMS_MMS)
<android.view.inputmethod.CompletionInfo: long getId()> (SMS_MMS)
<android.os.UserManager: boolean isSameProfileGroup(int,int)> (SMS_MMS)
<android.view.animation.AnimationSet: android.view.animation.Animation clone()> (SMS_MMS)
<android.transition.ChangeBounds$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.service.notification.INotificationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.UidRange: int hashCode()> (SMS_MMS)
<com.android.internal.os.BatterySipper: int getUid()> (SMS_MMS)
<android.view.ViewConfiguration: int getTapTimeout()> (SMS_MMS)
<android.os.BatteryManager: int getIntProperty(int)> (SMS_MMS)
<android.os.IThermalService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.Uri$PathPart: android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: boolean isViewServerRunning()> (SMS_MMS)
<android.view.View: android.view.TouchDelegate getTouchDelegate()> (SMS_MMS)
<android.content.UndoManager: int getHistorySize()> (SMS_MMS)
<android.app.AppGlobals: java.lang.String getInitialPackage()> (SMS_MMS)
<android.media.AudioPlaybackConfiguration: int getPlayerType()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int logoutUser(android.content.ComponentName)> (SMS_MMS)
<android.database.CursorWindow: int getInt(int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()> (SMS_MMS)
<android.hardware.radio.ProgramList$Filter: java.util.Set getIdentifierTypes()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: java.lang.Object stopObject(java.lang.String)> (SMS_MMS)
<android.location.GpsNavigationMessage: short getMessageId()> (SMS_MMS)
<android.accessibilityservice.GestureDescription: int getStrokeCount()> (SMS_MMS)
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)> (SMS_MMS)
<android.telephony.TelephonyScanManager$NetworkScanInfo: java.util.concurrent.Executor access$200(android.telephony.TelephonyScanManager$NetworkScanInfo)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: java.util.Date getNotAfter()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTetheringApnRequiredForSubscriber(int)> (SMS_MMS)
<android.media.IRemoteVolumeObserver$Stub: android.media.IRemoteVolumeObserver getDefaultImpl()> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: int[] getChannelsMhzForBand(int)> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Interpolator: int getValueCount()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$7: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()> (SMS_MMS)
<android.media.session.MediaSession$QueueItem: android.media.MediaDescription getDescription()> (SMS_MMS)
<com.android.internal.infra.ServiceConnector$Impl: long getRequestTimeoutMs()> (SMS_MMS)
<android.graphics.text.MeasuredText: float getWidth(int,int)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBar$Stub: com.android.internal.statusbar.IStatusBar asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.os.StrictMode$ViolationInfo: java.lang.Class getViolationClass()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.View getCurrentFocus()> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback getDefaultImpl()> (SMS_MMS)
<android.widget.ImageView: int getMaxHeight()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerDescramblerRequest: int getClientId()> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: java.lang.String getOp()> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])> (SMS_MMS)
<android.app.contentsuggestions.ClassificationsRequest: android.os.Bundle getExtras()> (SMS_MMS)
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String[] getIsimPcscf(int)> (SMS_MMS)
<android.renderscript.RenderScript: long safeID(android.renderscript.BaseObj)> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationListCallback getDefaultImpl()> (SMS_MMS)
<android.app.ContextImpl: android.view.DisplayAdjustments getDisplayAdjustments(int)> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: int[] getUidsWithPolicy(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: int describeContents()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int hashCode()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: int getMmsVersion()> (SMS_MMS)
<android.print.PrinterInfo: int hashCode()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsUt getUtInterface()> (SMS_MMS)
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableArray$MarshalerArray: int calculateMarshalSize(java.lang.Object)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: boolean[] getIssuerUniqueID()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getCarrierPrivilegedPackagesForAllActiveSubscriptions()> (SMS_MMS)
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentityWcdma copy()> (SMS_MMS)
<android.view.inputmethod.ExtractedTextRequest: int describeContents()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.KeyEvent: char getDisplayLabel()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$10: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.database.sqlite.SQLiteCompatibilityWalFlags: long getTruncateSize()> (SMS_MMS)
<android.text.FontConfig$Font: android.graphics.fonts.FontVariationAxis[] getAxes()> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()> (SMS_MMS)
<android.database.AbstractCursor: android.database.CursorWindow getWindow()> (SMS_MMS)
<android.service.notification.NotificationStats: int getDismissalSurface()> (SMS_MMS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDeviceColorManaged()> (SMS_MMS)
<android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.Object getProtected(android.hardware.camera2.CaptureRequest$Key)> (SMS_MMS)
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> (SMS_MMS)
<android.app.RemoteInputHistoryItem: android.net.Uri getUri()> (SMS_MMS)
<android.telephony.BarringInfo: android.telephony.BarringInfo$BarringServiceInfo getBarringServiceInfo(int)> (SMS_MMS)
<android.view.View: float getRotation()> (SMS_MMS)
<android.location.GnssMeasurementCorrections: float getEnvironmentBearingDegrees()> (SMS_MMS)
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.animation.LinearInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.view.View: int getScrollY()> (SMS_MMS)
<android.content.res.TypedArray: int getIndex(int)> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.PopupWindow: int getWindowLayoutType()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)> (SMS_MMS)
<android.telephony.CellInfoCdma: int describeContents()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getDataRoaming()> (SMS_MMS)
<android.hardware.location.NanoApp: int getNeededExecMemBytes()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getPath()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureResultExtras: int getErrorStreamId()> (SMS_MMS)
<android.content.IIntentReceiver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.RootTrustManager: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.WallpaperColors: int getColorHints()> (SMS_MMS)
<android.media.IVolumeController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IAudioService$Default: java.util.List getAudioProductStrategies()> (SMS_MMS)
<android.content.IContentService$Default: boolean getMasterSyncAutomatically()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedInputMethodsForCurrentUser()> (SMS_MMS)
<android.app.job.JobInfo$TriggerContentUri: int getFlags()> (SMS_MMS)
<android.os.storage.StorageManager: boolean isCacheBehaviorTombstone(java.io.File)> (SMS_MMS)
<android.media.midi.IMidiDeviceServer$Stub$Proxy: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean hasIccCardUsingSlotIndex(int)> (SMS_MMS)
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[])> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()> (SMS_MMS)
<android.media.Utils: int gcd(int,int)> (SMS_MMS)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getRestrictionsProvider(int)> (SMS_MMS)
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> (SMS_MMS)
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getRuntimePermissionsVersion(int)> (SMS_MMS)
<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: java.util.List getAvailableMandatoryConcurrentStreamCombinations()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getClusterTimeReaderInstance()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$MagnificationController: float getScale()> (SMS_MMS)
<android.permission.PermissionManager$PackageNamePermissionQuery: int hashCode()> (SMS_MMS)
<android.text.style.EasyEditSpan: int describeContents()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLink: int getEntityCount()> (SMS_MMS)
<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: long[] getProcessPss(int[])> (SMS_MMS)
<android.app.SearchableInfo: int describeContents()> (SMS_MMS)
<android.media.AudioTrack: int getChannelCount()> (SMS_MMS)
<android.content.res.ObbInfo: int describeContents()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getCurrentDailyStartTime()> (SMS_MMS)
<android.net.IpSecTransformResponse: int describeContents()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: android.media.AudioFormat getCaptureAudioFormat()> (SMS_MMS)
<android.widget.Editor: int access$7100(android.widget.Editor,int,boolean)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)> (SMS_MMS)
<android.text.MeasuredParagraph: android.graphics.text.MeasuredText getMeasuredText()> (SMS_MMS)
<android.app.LoadedApk: int getTargetSdkVersion()> (SMS_MMS)
<android.hardware.face.Face: int describeContents()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getDataDir()> (SMS_MMS)
<android.text.style.ClickableSpan: int getId()> (SMS_MMS)
<android.text.style.QuoteSpan: int getColor()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: int getTag(java.lang.String)> (SMS_MMS)
<android.app.Activity: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.telecom.TelecomManager: android.content.Intent createManageBlockedNumbersIntent()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: java.util.List getSurfaceIds(java.util.Collection)> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLanguageTag()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()> (SMS_MMS)
<android.telephony.TelephonyManager: int getDataActivationState(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: android.content.Intent createManageBlockedNumbersIntent()> (SMS_MMS)
<android.net.http.SslCertificate$DName: java.lang.String getUName()> (SMS_MMS)
<android.service.autofill.UserData: int getMaxValueLength()> (SMS_MMS)
<android.print.PrintJobInfo: int getState()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastSecurityLogRetrievalTime()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.telephony.ims.ImsStreamMediaProfile: int getVideoDirection()> (SMS_MMS)
<android.print.IPrintJobStateChangeListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()> (SMS_MMS)
<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.KeyValueListParser$IntValue: java.lang.String getKey()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int[] getUsers()> (SMS_MMS)
<android.app.Notification$TvExtender: android.app.PendingIntent getContentIntent()> (SMS_MMS)
<android.view.InputDevice: int getId()> (SMS_MMS)
<android.app.UiModeManager: java.time.LocalTime getCustomNightModeEnd()> (SMS_MMS)
<android.media.AudioTrack: int write(short[],int,int,int)> (SMS_MMS)
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)> (SMS_MMS)
<android.telephony.gsm.GsmCellLocation: int hashCode()> (SMS_MMS)
<android.widget.CompoundButton: int getHorizontalOffsetForDrawables()> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()> (SMS_MMS)
<android.view.FrameStats: int getFrameCount()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: int getSnapshotVersion()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$302(android.app.usage.NetworkStats$Bucket,int)> (SMS_MMS)
<android.view.accessibility.CaptioningManager: java.lang.Runnable access$300(android.view.accessibility.CaptioningManager)> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: long getProcessForegroundTimeMs(android.os.BatteryStats$Uid,int)> (SMS_MMS)
<android.view.IWindowManager$Default: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: java.util.List getSurfaceIds(android.util.SparseArray)> (SMS_MMS)
<android.media.ExifInterface: long getDateTimeOriginal()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (SMS_MMS)
<android.hardware.location.NanoApp: int[] getNeededSensors()> (SMS_MMS)
<android.permission.PermissionManager$SplitPermissionInfo: java.lang.String getSplitPermission()> (SMS_MMS)
<android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String getCallbackName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.dex.IArtManager getArtManager()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledTouchSlop()> (SMS_MMS)
<android.location.ICountryDetector$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntent(android.content.Intent)> (SMS_MMS)
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.print.PrinterInfo: android.app.PendingIntent getInfoIntent()> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)> (SMS_MMS)
<android.location.Address: int access$102(android.location.Address,int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.IGraphicsStatsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: java.lang.String getSignatureAlgorithmJcaKeyAlgorithm(int)> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.os.Bundle getUserRestrictions(android.content.ComponentName)> (SMS_MMS)
<android.view.View: java.lang.String[] getAutofillHints()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdWhitelist()> (SMS_MMS)
<android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCarrierIdFromSimMccMnc()> (SMS_MMS)
<android.app.blob.BlobHandle: int hashCode()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap getAppIcon()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.lang.String getNumber()> (SMS_MMS)
<android.view._$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc: java.lang.Object get()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)> (SMS_MMS)
<android.security.IKeyChainService$Default: byte[] getEncodedCaCertificate(java.lang.String,boolean)> (SMS_MMS)
<android.media.PlayerBase: int getStartDelayMs()> (SMS_MMS)
<android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)> (SMS_MMS)
<android.view.MotionEvent: float getTouchMinor()> (SMS_MMS)
<android.os.INetworkActivityListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()> (SMS_MMS)
<android.hardware.ISensorPrivacyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.Utils$2: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: int getSize()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)> (SMS_MMS)
<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription[] newArray(int)> (SMS_MMS)
<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getFontMetrics()> (SMS_MMS)
<android.service.notification.ZenModeConfig: int getZenPolicySenders(int)> (SMS_MMS)
<android.content.Context: java.io.File getSharedPrefsFile(java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: int hashCode()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()> (SMS_MMS)
<android.net.IConnectivityManager$Default: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)> (SMS_MMS)
<android.text.FontConfig: android.text.FontConfig$Family[] getFamilies()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalPressure(int,int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String)> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderInfo[] getAllWebViewPackages()> (SMS_MMS)
<android.view.textclassifier.TextClassificationSessionId: android.os.IBinder getToken()> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: byte[] parseVerityDigestAndVerifySourceLength(byte[],long,android.util.apk.SignatureInfo)> (SMS_MMS)
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> (SMS_MMS)
<android.view.IDisplayFoldListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: int describeContents()> (SMS_MMS)
<android.os.IProgressListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidObbDirs()> (SMS_MMS)
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()> (SMS_MMS)
<android.os.Parcel: java.util.ArrayList createBinderArrayList()> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getVideoStateFromCallType(int)> (SMS_MMS)
<android.view.InputDevice$MotionRange: float getRange()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserBadgeResId(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: int hashCode()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub: android.app.usage.IStorageStatsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.UsageStatsManager: java.util.List queryEventStats(int,long,long)> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()> (SMS_MMS)
<android.view.ViewConfiguration: int getLongPressTooltipHideTimeout()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getChannelNumber()> (SMS_MMS)
<android.net.ConnectivityManager: java.lang.String getCaptivePortalServerUrl()> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.graphics.Region getMagnificationRegion(int)> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceActivationState(int,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.service.notification.SnoozeCriterion: int hashCode()> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.RemoteViews$ReflectionAction: int mergeBehavior()> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.CursorWrapper: byte[] getBlob(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int getFeatureState()> (SMS_MMS)
<android.hardware.hdmi.HdmiPortInfo: int hashCode()> (SMS_MMS)
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)> (SMS_MMS)
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()> (SMS_MMS)
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int,int)> (SMS_MMS)
<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GpsMeasurement: double getPseudorangeInMeters()> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.input.IInputManager$Default: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)> (SMS_MMS)
<android.debug.IAdbManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: int getNumericModifiers()> (SMS_MMS)
<android.view.HandlerActionQueue: long getDelay(int)> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub: android.service.gatekeeper.IGateKeeperService asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.biometrics.BiometricManager: int canAuthenticate()> (SMS_MMS)
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()> (SMS_MMS)
<android.webkit.WebViewDelegate: android.app.Application getApplication()> (SMS_MMS)
<android.os.ISystemConfig$Stub: android.os.ISystemConfig getDefaultImpl()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View getCustomView()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: int queryCapabilityStatus()> (SMS_MMS)
<android.webkit.WebView: int computeVerticalScrollExtent()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getCarrierId()> (SMS_MMS)
<android.net.INetworkPolicyManager$Default: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)> (SMS_MMS)
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()> (SMS_MMS)
<android.debug.IAdbManager$Default: int getAdbWirelessPort()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isDataRoamingEnabled()> (SMS_MMS)
<android.app.IActivityManager$Default: java.lang.String getLaunchedFromPackage(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForPackage(long,long,java.lang.String)> (SMS_MMS)
<android.net.TrafficStats: long getUidTcpTxBytes(int)> (SMS_MMS)
<android.widget.TextView: int getMaxWidth()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMsisdn(int)> (SMS_MMS)
<android.view.FrameStats: long getFramePresentedTimeNano(int)> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: java.lang.String getName()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.graphics.Region: long ni()> (SMS_MMS)
<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()> (SMS_MMS)
<android.database.CursorWindow: short getShort(int,int)> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> (SMS_MMS)
<android.os.IVoldMountCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.tv.TvInputManager: java.lang.Object access$800(android.media.tv.TvInputManager)> (SMS_MMS)
<android.view.MotionEvent: float getToolMinor(int)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalPrivateClean()> (SMS_MMS)
<android.os.Build: java.lang.String getSerial()> (SMS_MMS)
<android.media.midi.MidiReceiver: int getMaxMessageSize()> (SMS_MMS)
<android.webkit.WebView$PrivateAccess: int super_getScrollBarStyle()> (SMS_MMS)
<android.util.apk.ApkSignatureVerifier: byte[] getVerityRootHash(java.lang.String)> (SMS_MMS)
<android.net.Network: int getNetIdForResolv()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.drawable.Icon: byte[] getDataBytes()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getVoiceOperatorAlphaLong()> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: int getTag(java.lang.String,long)> (SMS_MMS)
<android.app.ActivityManager$RunningTaskInfo: int describeContents()> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: android.content.pm.StringParceledListSlice getUserCaAliases()> (SMS_MMS)
<android.app.ActivityManager: boolean isBackgroundRestricted()> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: int getSequence()> (SMS_MMS)
<android.hardware.SystemSensorManager: java.util.List getFullDynamicSensorList()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub: android.hardware.camera2.ICameraOfflineSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager: boolean access$000()> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: long getCustomNightModeStart()> (SMS_MMS)
<android.telephony.CbGeoUtils$LatLng: android.telephony.CbGeoUtils$LatLng subtract(android.telephony.CbGeoUtils$LatLng)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPreferredActivityFilters()> (SMS_MMS)
<android.text.PrecomputedText: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: java.util.List getSwatches()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.media.tv.tunerresourcemanager.ITunerResourceManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.print.PrinterInfo: java.lang.String getDescription()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: java.util.concurrent.Executor getExecutor()> (SMS_MMS)
<android.widget.LinearLayout: int getOrientation()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)> (SMS_MMS)
<android.view.inputmethod.InputBinding: int getUid()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getNcpVersion()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.String getDeviceAddress()> (SMS_MMS)
<android.app.Activity: int getTitleColor()> (SMS_MMS)
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int getUid()> (SMS_MMS)
<android.net.IpSecTransform: int getResourceId()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getSlotIndex(int)> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager getDefaultImpl()> (SMS_MMS)
<android.media.AudioTrack: int access$902(android.media.AudioTrack,int)> (SMS_MMS)
<android.print.PrintJobInfo: int getAdvancedIntOption(java.lang.String)> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: int getInt(java.lang.String)> (SMS_MMS)
<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)> (SMS_MMS)
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()> (SMS_MMS)
<android.content.pm.PermissionInfo: int describeContents()> (SMS_MMS)
<android.text.Layout: float getLineWidth(int)> (SMS_MMS)
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getPopulatedNotificationChannelGroupForPackage(java.lang.String,int,java.lang.String,boolean)> (SMS_MMS)
<android.app.ContextImpl: android.os.Looper getMainLooper()> (SMS_MMS)
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiSignalStrengthTimer(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.util.List getInstalledModules(int)> (SMS_MMS)
<android.media.Metadata: int lastType()> (SMS_MMS)
<android.os.ICancellationSignal$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.trust.ITrustManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()> (SMS_MMS)
<android.app.LoadedApk$ReceiverDispatcher$Args: java.lang.Runnable getRunnable()> (SMS_MMS)
<android.app.AppOpsManager$NoteOpEvent: android.app.AppOpsManager$OpEventProxyInfo getProxy()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)> (SMS_MMS)
<android.widget.TextView: int getFadeHeight(boolean)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyNumberSources()> (SMS_MMS)
<android.app.NotificationManager: boolean isNotificationAssistantAccessGranted(android.content.ComponentName)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isEmergencyNumber(java.lang.String)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getRssi()> (SMS_MMS)
<android.net.IConnectivityManager$Default: int registerNetworkFactory(android.os.Messenger,java.lang.String)> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$VideoEvent: int getVideoState()> (SMS_MMS)
<android.renderscript.Allocation: java.nio.ByteBuffer getByteBuffer()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getCardIdForDefaultEuicc()> (SMS_MMS)
<com.android.net.IProxyService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)> (SMS_MMS)
<android.net.lowpan.LowpanManager: java.util.Map access$000(android.net.lowpan.LowpanManager)> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager: int opToSwitch(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)> (SMS_MMS)
<android.window.IDisplayAreaOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.Layout: int getLineBottomWithoutSpacing(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)> (SMS_MMS)
<android.telecom.Logging.SessionManager: java.lang.String printActiveSessions()> (SMS_MMS)
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Event: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()> (SMS_MMS)
<android.app.trust.ITrustManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.TvInputInfo: int getType()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityManager$TaskDescription: boolean getEnsureNavigationBarContrastWhenTransparent()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkAudioOperation(int,int,int,java.lang.String)> (SMS_MMS)
<android.media.MediaDrm$MediaDrmStateException: java.lang.String getDiagnosticInfo()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()> (SMS_MMS)
<android.text.style.SuggestionRangeSpan: int describeContents()> (SMS_MMS)
<android.app.prediction.AppTargetEvent: java.lang.String getLaunchLocation()> (SMS_MMS)
<android.content.res.AssetManager: int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.autofill.AutofillManager: android.content.Context access$700(android.view.autofill.AutofillManager)> (SMS_MMS)
<android.location.Criteria: int getSpeedAccuracy()> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub: android.hardware.biometrics.IAuthService getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub: com.android.internal.app.IVoiceInteractorCallback getDefaultImpl()> (SMS_MMS)
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()> (SMS_MMS)
<android.location.GnssClock: double getDriftUncertaintyNanosPerSecond()> (SMS_MMS)
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMin()> (SMS_MMS)
<android.view.View: java.lang.Object getTag(int)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: java.lang.CharSequence getSender()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IActivityManager$Default: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()> (SMS_MMS)
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.IAccessibilityServiceConnection getDefaultImpl()> (SMS_MMS)
<android.app.Notification$Builder: int resolveNeutralColor()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ActivityManager: int getLauncherLargeIconDensity()> (SMS_MMS)
<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()> (SMS_MMS)
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm: int getLevel()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getTarget()> (SMS_MMS)
<android.telephony.SignalStrength: int getLteRsrp()> (SMS_MMS)
<android.os.BaseBundle: boolean getBoolean(java.lang.String)> (SMS_MMS)
<android.animation.ValueAnimator: int getRepeatMode()> (SMS_MMS)
<android.location.LocationRequest: long getFastestInterval()> (SMS_MMS)
<android.view.InputChannel: java.lang.String getName()> (SMS_MMS)
<android.provider.FontsContract: int lambda$static$13(byte[],byte[])> (SMS_MMS)
<android.telephony.SmsCbCmasInfo: int getSeverity()> (SMS_MMS)
<android.view.InsetsSourceConsumer: int getType()> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: java.util.List getMccMncs()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData getMetaDataAt(int)> (SMS_MMS)
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.telephony.ims.aidl.IRcsUceControllerCallback getDefaultImpl()> (SMS_MMS)
<android.app.Service: int getForegroundServiceType()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController asInterface(android.os.IBinder)> (SMS_MMS)
<android.transition.Transition: java.util.List getTargets()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub: android.window.IWindowContainerTransactionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.autofill.IAugmentedAutofillManagerClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.service.notification.Adjustment: android.os.Bundle getSignals()> (SMS_MMS)
<android.os.ParcelUuid: java.util.UUID getUuid()> (SMS_MMS)
<android.app.IActivityManager$Default: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: java.util.List getIntents()> (SMS_MMS)
<android.telephony.PackageChangeReceiver: void <clinit>()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)> (SMS_MMS)
<android.widget.CheckedTextView: android.graphics.PorterDuff$Mode getCheckMarkTintMode()> (SMS_MMS)
<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()> (SMS_MMS)
<android.app.Notification: java.lang.Class getNotificationStyleClass(java.lang.String)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: android.accessibilityservice.AccessibilityServiceInfo getInstalledServiceInfoWithComponentName(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedComponent: int getBanner()> (SMS_MMS)
<android.media.IMediaRouter2$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$5: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.String getOriginalId()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)> (SMS_MMS)
<android.app.IActivityManager$Default: int[] getRunningUserIds()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isUsableSubscriptionId(int)> (SMS_MMS)
<android.graphics.fonts.FontFamily: int getSize()> (SMS_MMS)
<android.app.BackStackRecord: int commitInternal(boolean)> (SMS_MMS)
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)> (SMS_MMS)
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.transition.ChangeBounds$1: android.graphics.PointF get(android.graphics.drawable.Drawable)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTriggerModule: int getModelState(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getVersion()> (SMS_MMS)
<android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest,android.media.audiopolicy.AudioPolicy)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean hasUserSetupCompleted()> (SMS_MMS)
<android.app.usage.UsageStats: long getTotalTimeVisible()> (SMS_MMS)
<android.media.IMediaRouter2$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ListFragment: int getSelectedItemPosition()> (SMS_MMS)
<android.filterfw.core.SyncRunner: java.lang.Exception getError()> (SMS_MMS)
<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)> (SMS_MMS)
<android.net.NetworkQuotaInfo: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)> (SMS_MMS)
<android.media.session.ISession$Stub$Proxy: android.media.session.ISessionController getController()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SubscriptionInfo: int describeContents()> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub: android.print.IPrintDocumentAdapterObserver getDefaultImpl()> (SMS_MMS)
<android.text.Layout$HorizontalMeasurementProvider: float get(int)> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub: android.view.IDisplayWindowInsetsController getDefaultImpl()> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: com.android.ims.internal.IImsMultiEndpoint asInterface(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: int getAlpha()> (SMS_MMS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int getMaxNumberTxSpatialStreams()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: java.util.List getFreezePeriods()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()> (SMS_MMS)
<android.media.projection.IMediaProjection$Default: int applyVirtualDisplayFlags(int)> (SMS_MMS)
<android.net.nsd.NsdManager: android.util.SparseArray access$400(android.net.nsd.NsdManager)> (SMS_MMS)
<android.telephony.TelephonyManager: int getPhoneType()> (SMS_MMS)
<android.os.BinderProxy: android.os.BinderProxy$InterfaceCount[] getSortedInterfaceCounts(int)> (SMS_MMS)
<android.app.NotificationHistory$HistoricalNotification: int hashCode()> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.graphics.Color: boolean isWideGamut()> (SMS_MMS)
<android.os.Binder: int lambda$static$1(int)> (SMS_MMS)
<android.database.CursorWindow: long getLong(int,int)> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)> (SMS_MMS)
<android.renderscript.Element: int getBytesSize()> (SMS_MMS)
<android.hardware.usb.UsbDevice: int getDeviceSubclass()> (SMS_MMS)
<android.telephony.TelephonyManager: void enableServiceHandleCaching()> (SMS_MMS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub: android.app.backup.IRestoreObserver getDefaultImpl()> (SMS_MMS)
<android.media.MediaCodec: android.media.Image getOutputImage(int)> (SMS_MMS)
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)> (SMS_MMS)
<android.security.KeyStore: android.content.Context getApplicationContext()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getWritePermission()> (SMS_MMS)
<com.android.internal.util.State: java.lang.String getName()> (SMS_MMS)
<android.location.GpsMeasurement: double getTimeOffsetInNs()> (SMS_MMS)
<android.content.ContentProviderOperation$Builder: int access$000(android.content.ContentProviderOperation$Builder)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(android.os.UserHandle)> (SMS_MMS)
<android.net.NetworkStatsHistory: int getIndexAfter(long)> (SMS_MMS)
<android.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<android.permission.IPermissionController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ServiceState: java.lang.String getDataOperatorNumeric()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: java.lang.String getModelName()> (SMS_MMS)
<android.telephony.ClientRequestStats: long getCompletedRequestsCount()> (SMS_MMS)
<android.database.AbstractCursor: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.Tokenizer$DataTokenizer: android.media.Tokenizer$TokenizerPhase start()> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()> (SMS_MMS)
<android.drm.DrmRights: byte[] getData()> (SMS_MMS)
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: int getPremiumSmsPermission(java.lang.String)> (SMS_MMS)
<android.hardware.ICameraServiceListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViewsAdapter$RemoteViewsCacheKey: int hashCode()> (SMS_MMS)
<android.view.View: android.content.Context getContext()> (SMS_MMS)
<android.widget.ImageView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: com.android.internal.inputmethod.IExtractedTextResultCallback getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageInstallerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.assist.AssistStructure$HtmlInfoNode: int describeContents()> (SMS_MMS)
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultBanner(android.content.pm.PackageManager)> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.health.HealthStats: int getTimerCount(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.media.AudioManager: java.lang.Object access$100(android.media.AudioManager)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub: android.service.oemlock.IOemLockService getDefaultImpl()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)> (SMS_MMS)
<android.location.Geofence: int getType()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication$SmsApplicationData: int access$700(com.android.internal.telephony.SmsApplication$SmsApplicationData)> (SMS_MMS)
<com.android.internal.widget.ScrollingTabContainerView$TabView: android.app.ActionBar$Tab getTab()> (SMS_MMS)
<android.util.jar.StrictJarFile$FDStream: int read(byte[],int,int)> (SMS_MMS)
<android.os.BasicShellCommandHandler: android.os.Binder getTarget()> (SMS_MMS)
<android.permission.IPermissionManager$Default: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppDenyPermissions(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer getDefaultImpl()> (SMS_MMS)
<android.view.DragEvent: java.lang.Object getLocalState()> (SMS_MMS)
<android.view.IGraphicsStats$Stub: android.view.IGraphicsStats getDefaultImpl()> (SMS_MMS)
<android.hardware.lights.ILightsManager$Stub: android.hardware.lights.ILightsManager getDefaultImpl()> (SMS_MMS)
<android.content.pm.CrossProfileApps: java.lang.CharSequence getProfileSwitchingLabel(android.os.UserHandle)> (SMS_MMS)
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier getPrimaryId()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)> (SMS_MMS)
<android.content.pm.FallbackCategoryProvider: int getFallbackCategory(java.lang.String)> (SMS_MMS)
<android.os.Environment: java.io.File getDataSystemDirectory()> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getSharedUserLabel()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimCarrierId()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getWellbeingPackageName()> (SMS_MMS)
<com.android.internal.view.InlineSuggestionsRequestInfo: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getRequiredStrongAuthTimeout(android.content.ComponentName,int)> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub: android.content.pm.IOnAppsChangedListener getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.hardware.hdmi.IHdmiVendorCommandListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.IRequestFinishCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()> (SMS_MMS)
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiSettingEnabled()> (SMS_MMS)
<android.hardware.radio.RadioManager$AmBandConfig: boolean getStereo()> (SMS_MMS)
<android.hardware.radio.RadioManager$FmBandConfig: boolean getTa()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVideoTelephonyAvailable(int)> (SMS_MMS)
<android.util.LauncherIcons$ShadowDrawable$MyConstantState: android.graphics.drawable.Drawable newDrawable()> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.job.JobInfo: android.content.ClipData getClipData()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailableDFSChannels()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo$1: android.telephony.NetworkRegistrationInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> (SMS_MMS)
<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNameForPhone(int)> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getCallerNumberVerificationStatus()> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.Camera$Parameters: int getZoom()> (SMS_MMS)
<android.view.KeyEvent: int getRepeatCount()> (SMS_MMS)
<android.hardware.display.DisplayedContentSample: long[] getSampleComponent(android.hardware.display.DisplayedContentSample$ColorComponent)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowed()> (SMS_MMS)
<android.os.IRecoverySystemProgressListener$Stub: android.os.IRecoverySystemProgressListener getDefaultImpl()> (SMS_MMS)
<android.view.WindowlessWindowManager: android.view.SurfaceControl getSurfaceControl(android.view.View)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager getDefaultImpl()> (SMS_MMS)
<android.view.contentcapture.ViewNode: java.lang.CharSequence[] getAutofillOptions()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.ResourceClientProfile: int getUseCase()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub$Proxy: android.net.lowpan.ILowpanInterface getInterface(java.lang.String)> (SMS_MMS)
<android.media.IAudioService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean needsOtaServiceProvisioning()> (SMS_MMS)
<android.graphics.Rect: int centerX()> (SMS_MMS)
<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.VelocityTracker$Estimator: float getYCoeff(int)> (SMS_MMS)
<android.os.IVoldTaskListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.opengl.GLLogWrapper$PointerInfo: int sizeof(int)> (SMS_MMS)
<android.hardware.display.IVirtualDisplayCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: java.lang.String access$100(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub: android.content.pm.IShortcutChangeCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.text.style.LineBackgroundSpan$Standard: int getSpanTypeIdInternal()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int access$502(android.media.tv.TvStreamConfig,int)> (SMS_MMS)
<android.widget.RtlSpacingHelper: int getRight()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: int getStatusBarColor()> (SMS_MMS)
<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] preceding(int)> (SMS_MMS)
<android.graphics.ComposeShader: long createNativeInstance(long)> (SMS_MMS)
<android.provider.Telephony$Mms$Part: android.net.Uri getPartUriForMessage(java.lang.String)> (SMS_MMS)
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)> (SMS_MMS)
<android.content.pm.PackageInstaller: java.util.List getActiveStagedSessions()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.MemoryFile$MemoryInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> (SMS_MMS)
<android.database.IContentObserver$Stub: android.database.IContentObserver asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)> (SMS_MMS)
<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)> (SMS_MMS)
<android.telephony.PreciseCallState$1: android.telephony.PreciseCallState createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: long getStartTimeStamp()> (SMS_MMS)
<android.content.UndoManager: java.lang.CharSequence getUndoLabel(android.content.UndoOwner[])> (SMS_MMS)
<android.media.midi.IMidiDeviceListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: int getViewTypeCount()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: long getCacheQuotaBytes(java.lang.String,int)> (SMS_MMS)
<android.app.KeyguardManager: android.content.Intent createConfirmFactoryResetCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)> (SMS_MMS)
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)> (SMS_MMS)
<android.view.View$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher getDefaultImpl()> (SMS_MMS)
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)> (SMS_MMS)
<android.app.assist.AssistContent: android.net.Uri getWebUri()> (SMS_MMS)
<android.content.pm.PermissionInfo: int calculateFootprint()> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)> (SMS_MMS)
<android.view.IWindowSession$Stub$Proxy: boolean getInTouchMode()> (SMS_MMS)
<android.media.MediaPlayer$2$1: android.os.Looper getSubtitleLooper()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getColorCount()> (SMS_MMS)
<android.text.style.BulletSpan: int describeContents()> (SMS_MMS)
<android.permission.IPermissionManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getCredentialProtectedDataDir(android.content.pm.parsing.ParsingPackageRead,int)> (SMS_MMS)
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDefaultCrossProfilePackages()> (SMS_MMS)
<android.system.suspend.ISuspendControlService$Stub$Proxy: android.system.suspend.WakeLockInfo[] getWakeLockStats()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: long getAllocatableBytes(java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.text.style.ImageSpan: java.lang.String getSource()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.AnimatorSet$AnimationEvent: long getTime()> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.AnimatorSet$SeekState: boolean isActive()> (SMS_MMS)
<android.print.IPrintServicesChangeListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.NetworkRequest getDefaultRequest()> (SMS_MMS)
<android.view.Choreographer: android.view.Choreographer getInstance()> (SMS_MMS)
<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioPlaybackCaptureConfiguration: int[] getMatchingUids()> (SMS_MMS)
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.media.AudioTrack: int getOffloadPadding()> (SMS_MMS)
<android.app.IActivityController$Stub: android.app.IActivityController asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean enableCellBroadcastForSubscriber(int,int,int)> (SMS_MMS)
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.text.method.DateKeyListener: char[] getAcceptedChars()> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)> (SMS_MMS)
<android.media.session.MediaController: android.media.session.MediaController$PlaybackInfo getPlaybackInfo()> (SMS_MMS)
<android.content.pm.PackageParser$PackageLite: java.util.List getAllCodePaths()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getUserProvisioningState()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics: int getCallSource()> (SMS_MMS)
<android.hardware.face.FaceManager: int revokeChallenge()> (SMS_MMS)
<android.app.AlarmManager: android.app.IAlarmManager access$000(android.app.AlarmManager)> (SMS_MMS)
<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.NotificationManager: java.util.Map getAutomaticZenRules()> (SMS_MMS)
<android.service.autofill.FieldClassification$Match: float getScore()> (SMS_MMS)
<android.webkit.WebViewDelegate: java.lang.String getDataDirectorySuffix()> (SMS_MMS)
<android.os.ISystemUpdateManager$Default: android.os.Bundle retrieveSystemUpdateInfo()> (SMS_MMS)
<android.widget.ScrollBarDrawable: int getOpacity()> (SMS_MMS)
<android.renderscript.RenderScript: long nScriptGroup2Create(java.lang.String,java.lang.String,long[])> (SMS_MMS)
<android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupSchemeForTest(android.content.Context)> (SMS_MMS)
<android.os.ProxyFileDescriptorCallback: long onGetSize()> (SMS_MMS)
<android.net.StaticIpConfiguration: java.util.List getRoutes(java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)> (SMS_MMS)
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)> (SMS_MMS)
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: int getAccessibilityWindowId(android.os.IBinder)> (SMS_MMS)
<android.os.connectivity.WifiBatteryStats: long getMonitoredRailChargeConsumedMaMillis()> (SMS_MMS)
<android.graphics.BLASTBufferQueue: android.view.Surface getSurface()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera access$1302(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.Camera)> (SMS_MMS)
<android.telephony.CellIdentityNr: int getNrarfcn()> (SMS_MMS)
<android.app.NotificationChannelGroup: java.util.List getChannels()> (SMS_MMS)
<android.net.Network: javax.net.SocketFactory getSocketFactory()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getLockTaskModeState()> (SMS_MMS)
<android.telephony.data.ApnSetting: boolean getPermanentFailed()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)> (SMS_MMS)
<android.net.nsd.INsdManager$Default: android.os.Messenger getMessenger()> (SMS_MMS)
<android.content.pm.PackageInstaller$Session: java.lang.String[] getNames()> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub: android.service.gatekeeper.IGateKeeperService getDefaultImpl()> (SMS_MMS)
<android.widget.Toolbar: java.lang.CharSequence getTitle()> (SMS_MMS)
<android.media.session.ISessionController$Stub: android.media.session.ISessionController asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Default: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)> (SMS_MMS)
<android.media.IAudioServerStateDispatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentity: byte getDiscriminator()> (SMS_MMS)
<android.app.role.IRoleManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AutomaticZenRule: int hashCode()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: int hashCode()> (SMS_MMS)
<android.os.Parcel: android.util.SparseIntArray readSparseIntArray()> (SMS_MMS)
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)> (SMS_MMS)
<android.print.ILayoutResultCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.lang.String getLaunchedFromPackage(android.os.IBinder)> (SMS_MMS)
<android.net.INetworkManagementEventObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.graphics.Point getStableDisplaySize()> (SMS_MMS)
<android.app.WallpaperManager: android.content.ComponentName getDefaultWallpaperComponent(android.content.Context)> (SMS_MMS)
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()> (SMS_MMS)
<android.content.pm.IShortcutChangeCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)> (SMS_MMS)
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)> (SMS_MMS)
<android.widget.Spinner$DialogPopup: boolean isShowing()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: boolean isConvertibleToFBE()> (SMS_MMS)
<android.view.Window: int getLocalFeatures()> (SMS_MMS)
<android.view.View: boolean getClipToOutline()> (SMS_MMS)
<android.database.IContentObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.RemoteInputHistoryItem: int describeContents()> (SMS_MMS)
<android.view.inputmethod.EditorInfo: int describeContents()> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)> (SMS_MMS)
<android.telephony.TelephonyHistogram: int describeContents()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid,int)> (SMS_MMS)
<android.app.DexLoadReporter: android.app.DexLoadReporter getInstance()> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.Intent: android.graphics.Rect getSourceBounds()> (SMS_MMS)
<android.accessibilityservice.AccessibilityButtonController: boolean isAccessibilityButtonAvailable()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration$Builder: int getMaxCorrectionsByCategory()> (SMS_MMS)
<android.graphics.BlendModeColorFilter: int getColor()> (SMS_MMS)
<android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener getDefaultImpl()> (SMS_MMS)
<android.view.IOnKeyguardExitResult$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.res.TypedArray: int getChangingConfigurations()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.ImsSsData: int getTeleserviceType()> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.lang.Object maybeCheckConsistency(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.text.BoringLayout: int getTopPadding()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccController$Stub: com.android.internal.telephony.euicc.IEuiccController getDefaultImpl()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: int getShortcutIconResId(java.lang.String,java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: java.lang.String getRegisteredPlmn()> (SMS_MMS)
<android.net.IpPrefix: int getPrefixLength()> (SMS_MMS)
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.security.keystore.IKeystoreKeyCharacteristicsCallback getDefaultImpl()> (SMS_MMS)
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: android.graphics.Matrix access$702(android.view.inputmethod.InputMethodManager,android.graphics.Matrix)> (SMS_MMS)
<android.view.CutoutSpecification: int access$700()> (SMS_MMS)
<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()> (SMS_MMS)
<android.util.jar.StrictJarVerifier: boolean isSignedJar()> (SMS_MMS)
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> (SMS_MMS)
<android.widget.GridView: int getGravity()> (SMS_MMS)
<android.os.Looper: java.lang.Thread getThread()> (SMS_MMS)
<android.view.PendingInsetsController: android.view.InsetsState getState()> (SMS_MMS)
<android.provider.Settings$Config: java.util.Map getStrings(android.content.ContentResolver,java.lang.String,java.util.List)> (SMS_MMS)
<android.app.backup.BackupManager: android.content.Intent getDataManagementIntent(java.lang.String)> (SMS_MMS)
<com.android.internal.app.IAppOpsNotedCallback$Stub: com.android.internal.app.IAppOpsNotedCallback getDefaultImpl()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)> (SMS_MMS)
<android.widget.Editor$SuggestionHelper$SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)> (SMS_MMS)
<android.view.KeyboardShortcutInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.util.jar.StrictJarFile$FDStream: int available()> (SMS_MMS)
<android.webkit.Plugin: java.lang.String getDescription()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getActiveSubInfoCount(java.lang.String,java.lang.String)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean isAccessibilityButtonAvailable()> (SMS_MMS)
<android.view.WindowlessWindowManager: android.os.IBinder asBinder()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()> (SMS_MMS)
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()> (SMS_MMS)
<android.renderscript.BaseObj: java.lang.String getName()> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)> (SMS_MMS)
<android.net.INetworkScoreCache$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String)> (SMS_MMS)
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,java.util.concurrent.Executor,int)> (SMS_MMS)
<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()> (SMS_MMS)
<android.location.Criteria: int getHorizontalAccuracy()> (SMS_MMS)
<android.media.AudioRecord: int getBufferSizeInFrames()> (SMS_MMS)
<android.widget.RemoteViews$SetRemoteInputsAction: int getActionTag()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: java.lang.CharSequence getText()> (SMS_MMS)
<android.hardware.input.ITabletModeChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()> (SMS_MMS)
<android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String,int)> (SMS_MMS)
<android.os.TimestampedValue: java.lang.Object getValue()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int onDeviceOffBody()> (SMS_MMS)
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()> (SMS_MMS)
<android.net.lowpan.LowpanIdentity: byte[] getRawName()> (SMS_MMS)
<android.os.UserHandle: int getUserGid(int)> (SMS_MMS)
<android.print.IWriteResultCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveSubInfoCountMax()> (SMS_MMS)
<android.media.IMediaRouter2$Stub: android.media.IMediaRouter2 getDefaultImpl()> (SMS_MMS)
<android.os.storage.VolumeInfo: int describeContents()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getPackageForToken(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getDisplays()> (SMS_MMS)
<android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)> (SMS_MMS)
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> (SMS_MMS)
<android.telephony.SmsCbEtwsInfo: boolean isPopupAlert()> (SMS_MMS)
<android.content.IIntentSender$Stub: android.content.IIntentSender asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.MediaDrm$Certificate: byte[] getWrappedPrivateKey()> (SMS_MMS)
<android.graphics.Typeface: int getWeight()> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: com.android.internal.telephony.ISetOpportunisticDataCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.View: int getAutofillType()> (SMS_MMS)
<android.print.PageRange: int getStart()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: int hashCode()> (SMS_MMS)
<android.view.ViewRootImpl$TrackballAxis: int generate()> (SMS_MMS)
<android.content.IntentSender: int hashCode()> (SMS_MMS)
<android.app.admin.FreezePeriod: int getLength()> (SMS_MMS)
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowed()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IProcessObserver$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getFsUuid()> (SMS_MMS)
<android.content.res.Resources$ThemeKey: int hashCode()> (SMS_MMS)
<android.content.pm.permission.SplitPermissionInfoParcelable: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.hardware.hdmi.IHdmiInputChangeListener getDefaultImpl()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: int getLastShutdownReason()> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: java.util.List getSearchablesInGlobalSearch()> (SMS_MMS)
<android.telephony.SubscriptionManager: void invalidateDefaultDataSubIdCaches()> (SMS_MMS)
<android.database.AbstractWindowedCursor: float getFloat(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int[] getAllNetworkTypes()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getShortLabelResourceId()> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.WifiNl80211Manager$TxPacketCounters getTxPacketCounters(java.lang.String)> (SMS_MMS)
<android.service.notification.ZenPolicy: int describeContents()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$802(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IPinnedStackListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.ChangeTransform$2: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.os.IRemoteCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getAllPhoneAccounts()> (SMS_MMS)
<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)> (SMS_MMS)
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> (SMS_MMS)
<android.app.Activity: android.content.Intent getParentActivityIntent()> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentityWcdma: int hashCode()> (SMS_MMS)
<android.service.persistentdata.IPersistentDataBlockService$Default: byte[] read()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRect$MarshalerRect: int getNativeSize()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: int getInputMethodWindowVisibleHeight()> (SMS_MMS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.view.Surface getInputSurface()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelMemoryTimerLocked(long)> (SMS_MMS)
<android.os.UserManager: java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence,android.os.UserHandle)> (SMS_MMS)
<android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)> (SMS_MMS)
<android.app.IActivityManager$Default: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)> (SMS_MMS)
<android.text.style.UnderlineSpan: int getSpanTypeId()> (SMS_MMS)
<android.os.IIncidentAuthListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)> (SMS_MMS)
<android.media.ExifInterface: long[] getThumbnailRange()> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: int getPlaybackType()> (SMS_MMS)
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaEriIconIndex()> (SMS_MMS)
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> (SMS_MMS)
<android.accessibilityservice.util.AccessibilityUtils: java.lang.String getFilteredHtmlText(java.lang.String)> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: int getNightMode()> (SMS_MMS)
<android.printservice.PrintServiceInfo: int describeContents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isFactoryResetProtectionPolicySupported()> (SMS_MMS)
<android.media.AudioManager: int updateAudioPortCache(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<android.util.apk.ByteBufferDataSource: long size()> (SMS_MMS)
<android.permission.PermissionControllerManager$1: long getRequestTimeoutMs()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.DataLoaderParams: android.content.pm.DataLoaderParamsParcel getData()> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: int checkSmsShortCodeDestination(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()> (SMS_MMS)
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> (SMS_MMS)
<android.text.HtmlToSpannedConverter$Newline: int access$900(android.text.HtmlToSpannedConverter$Newline)> (SMS_MMS)
<android.content.pm.ShortcutInfo: java.lang.String getResourcePackageName(java.lang.String)> (SMS_MMS)
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)> (SMS_MMS)
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerEnergyUsedMicroJoules()> (SMS_MMS)
<com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollection(android.content.Context)> (SMS_MMS)
<android.telephony.BarringInfo: android.telephony.BarringInfo create(android.hardware.radio.V1_5.CellIdentity,java.util.List)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: long getAccessibilityIdForRegion(android.graphics.Region)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> (SMS_MMS)
<android.view.IWindowSession$Default: boolean getInTouchMode()> (SMS_MMS)
<android.media.IMediaRouter2Manager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)> (SMS_MMS)
<android.telephony.euicc.EuiccManager: java.util.List getSupportedCountries()> (SMS_MMS)
<android.telephony.UiccCardInfo: int getCardId()> (SMS_MMS)
<android.media.AudioDeviceAttributes: int getRole()> (SMS_MMS)
<android.media.MediaCas$PluginDescriptor: java.lang.String getName()> (SMS_MMS)
<android.media.AudioFocusInfo: long getGen()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getAuthority()> (SMS_MMS)
<android.content.pm.ShortcutManager$ShareShortcutInfo: android.content.pm.ShortcutInfo getShortcutInfo()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)> (SMS_MMS)
<android.content.IContentService$Default: java.util.List getCurrentSyncsAsUser(int)> (SMS_MMS)
<android.view.SurfaceControl: java.lang.Throwable getReleaseStack()> (SMS_MMS)
<android.app.admin.SystemUpdateInfo: int getSecurityPatchState()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewGroup: int getTransientViewCount()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: boolean isAllCarriersAllowed()> (SMS_MMS)
<android.text.method.WordIterator: int getNextWordEndOnTwoWordBoundary(int)> (SMS_MMS)
<android.widget.Toolbar: int getPopupTheme()> (SMS_MMS)
<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)> (SMS_MMS)
<android.print.PrintAttributes$Margins: int getBottomMils()> (SMS_MMS)
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)> (SMS_MMS)
<android.view.DragEvent: float getY()> (SMS_MMS)
<android.os.Message: java.lang.Runnable getCallback()> (SMS_MMS)
<android.app.SystemServiceRegistry$15: android.os.IBinder createService()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)> (SMS_MMS)
<android.widget.FastScroller$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.service.autofill.UserData: java.lang.String[] getValues()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: java.lang.StringBuilder appendTo(java.lang.StringBuilder)> (SMS_MMS)
<android.widget.ProgressBar$1: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: java.util.List getHints()> (SMS_MMS)
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()> (SMS_MMS)
<android.location.GpsMeasurement: double getElevationInDeg()> (SMS_MMS)
<android.graphics.ImageDecoder: android.graphics.PostProcessor getPostProcessor()> (SMS_MMS)
<android.hardware.radio.RadioManager$BandDescriptor: int getType()> (SMS_MMS)
<android.app.job.JobInfo: long getEstimatedNetworkUploadBytes()> (SMS_MMS)
<android.app.IActivityController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.ComponentName getAllowedNotificationAssistant()> (SMS_MMS)
<android.service.vr.IVrManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.UserManager: boolean isAdminUser()> (SMS_MMS)
<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: com.android.internal.view.menu.MenuBuilder getAdapterMenu()> (SMS_MMS)
<android.content.ComponentName: java.lang.String getClassName()> (SMS_MMS)
<android.os.IThermalService$Default: android.os.Temperature[] getCurrentTemperatures()> (SMS_MMS)
<android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)> (SMS_MMS)
<android.view.IPinnedStackController$Stub: android.view.IPinnedStackController getDefaultImpl()> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface(android.net.lowpan.ILowpanInterface)> (SMS_MMS)
<android.hardware.radio.V1_0.CellInfoWcdma: int hashCode()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isTtyOverVolteEnabled(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.os.PersistableBundle getTransferOwnershipBundle()> (SMS_MMS)
<android.media.MediaDrm$CryptoSession: byte[] encrypt(byte[],byte[],byte[])> (SMS_MMS)
<android.widget.TextView: int getTotalPaddingTop()> (SMS_MMS)
<android.telephony.LteVopsSupportInfo$1: android.telephony.LteVopsSupportInfo[] newArray(int)> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()> (SMS_MMS)
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubTransaction queryNanoApps(android.hardware.location.ContextHubInfo)> (SMS_MMS)
<android.app.IBackupAgent$Stub: android.app.IBackupAgent getDefaultImpl()> (SMS_MMS)
<android.text.BidiFormatter$DirectionalityEstimator: int getExitDir()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryEvents()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: long getLastSecurityLogRetrievalTime()> (SMS_MMS)
<android.telephony.UiccAccessRule$1: void <init>()> (SMS_MMS)
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo$Conditional: int hashCode()> (SMS_MMS)
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getBackgroundFallback()> (SMS_MMS)
<android.hardware.camera2.impl.CaptureCallback: java.util.concurrent.Executor getExecutor()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getHeight()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean setOperatorBrandOverride(int,java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getDeviceOwnerUserId()> (SMS_MMS)
<android.os.ISystemConfig$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.metrics.LogMaker: java.lang.Object getTaggedData(int)> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> (SMS_MMS)
<android.app.AsyncNotedAppOp: int hashCode()> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.media.AudioManager: java.util.concurrent.Executor access$1600(android.media.AudioManager)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getSlotIndex(int)> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: int getVolume()> (SMS_MMS)
<com.android.internal.statusbar.IStatusBarService$Default: int[] getDisableFlags(android.os.IBinder,int)> (SMS_MMS)
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()> (SMS_MMS)
<android.security.keystore.ICredstoreTokenCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()> (SMS_MMS)
<android.view.ViewGroup$ChildListForAccessibility: int getChildCount()> (SMS_MMS)
<android.hardware.input.IInputDevicesChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastFrameNumber()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getShadowColor()> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: boolean deleteStoredConversation(java.lang.String,long)> (SMS_MMS)
<android.filterfw.core.SimpleFrame: int[] getInts()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getStackInfoOnDisplay(int,int,int)> (SMS_MMS)
<android.content.res.Resources$Theme: int getChangingConfigurations()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.JobSchedulerImpl: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.text.style.StyleSpan: int getStyle()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo preCreateUser(java.lang.String)> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig getSystemInstance()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getUidForIntentSender(android.content.IIntentSender)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getOrganizationColorForUser(int)> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.security.keystore.IKeystoreCertificateChainCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub: com.android.internal.inputmethod.IIntResultCallback getDefaultImpl()> (SMS_MMS)
<android.media.AudioFocusInfo: int getLossReceived()> (SMS_MMS)
<android.hardware.camera2.CaptureRequest: java.lang.String getLogicalCameraId()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: int getChangingConfigurations()> (SMS_MMS)
<android.os.health.HealthStats: long getMeasurement(int)> (SMS_MMS)
<android.content.UndoManager: int forgetUndos(android.content.UndoOwner[],int)> (SMS_MMS)
<android.media.session.ISessionManager$Default: android.content.pm.ParceledListSlice getSession2Tokens(int)> (SMS_MMS)
<com.android.internal.view.menu.IconMenuView: int getNumActualItemsShown()> (SMS_MMS)
<android.graphics.RenderNode: float getTranslationZ()> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: java.lang.CharSequence getText()> (SMS_MMS)
<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getSummaryAggregate()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.hardware.camera2.utils.TypeReference: int hashCode()> (SMS_MMS)
<android.widget.Toolbar: int getContentInsetStart()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: float getElevation()> (SMS_MMS)
<android.media.AudioPresentation: int hashCode()> (SMS_MMS)
<android.animation.KeyframeSet: java.lang.Object getValue(float)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getApplicationEnabledSetting(java.lang.String,int)> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getCurrent()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()> (SMS_MMS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(byte[])> (SMS_MMS)
<android.app.PendingIntent: int hashCode()> (SMS_MMS)
<android.telephony.SmsManager$2: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,int,boolean,int)> (SMS_MMS)
<android.view.VerifiedKeyEvent: java.lang.Boolean getFlag(int)> (SMS_MMS)
<android.view.View$3: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: boolean isWifiCallingAvailable(int)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int insert(java.lang.String,byte[],int,int)> (SMS_MMS)
<android.media.Ringtone: int getStreamType()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getRemoteCallProfile()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getCount()> (SMS_MMS)
<android.view.IRemoteAnimationRunner$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.String getResourceEntryName(int)> (SMS_MMS)
<android.media.AudioManager: int registerAudioPolicy(android.media.audiopolicy.AudioPolicy)> (SMS_MMS)
<android.graphics.Typeface: int access$200(android.graphics.Typeface)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getImei(int)> (SMS_MMS)
<android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.PackageParser$SigningDetails getSigningDetails(android.content.pm.parsing.ParsingPackageRead,boolean)> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.app.usage.IStorageStatsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app._$$Lambda$SystemServiceRegistry$16$s6mZ42tuGUunhKa_5iwjLY5FGdM: java.lang.Object get()> (SMS_MMS)
<android.app.timezone.RulesState: int describeContents()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: java.lang.CharSequence getHint()> (SMS_MMS)
<android.window.WindowContainerTransaction$HierarchyOp: android.os.IBinder getNewParent()> (SMS_MMS)
<android.service.vr.IVrManager$Default: boolean getVrModeState()> (SMS_MMS)
<android.media.MediaCodecList: java.util.Map getGlobalSettings()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBlocksPerSecondRange()> (SMS_MMS)
<android.telephony.PreciseCallState: int getRingingCallState()> (SMS_MMS)
<android.hardware.location.MemoryRegion: int getCapacityBytes()> (SMS_MMS)
<android.app.Notification$BigPictureStyle: android.graphics.Bitmap getBigPicture()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getPreferredNetworkType(int)> (SMS_MMS)
<android.view.WindowlessWindowManager: int addToDisplayAsUser(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])> (SMS_MMS)
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier[] getSecondaryIds()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCarrierPrivilegeStatusForUid(int,int)> (SMS_MMS)
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)> (SMS_MMS)
<android.net.IEthernetManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.IIpSecService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()> (SMS_MMS)
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.net.lowpan.ILowpanEnergyScanCallback asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTtyModeSupported()> (SMS_MMS)
<android.os.PowerManager: float getBrightnessConstraint(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> (SMS_MMS)
<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)> (SMS_MMS)
<android.app.NotificationHistory: java.util.List getNotificationsToWrite()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub$Proxy: int applyVirtualDisplayFlags(int)> (SMS_MMS)
<android.media.AudioTrack: int getBufferSizeInFrames()> (SMS_MMS)
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$SoundModel: byte[] getData()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()> (SMS_MMS)
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getThicknessRatio()> (SMS_MMS)
<android.graphics.Bitmap: android.hardware.HardwareBuffer getHardwareBuffer()> (SMS_MMS)
<android.view.autofill.AutofillManager: android.view.autofill.AutofillId getNextAutofillId()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: long[] getExternalSize(java.lang.String,int,int,int[])> (SMS_MMS)
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.hardware.hdmi.IHdmiDeviceEventListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.ICameraService$Default: android.hardware.CameraInfo getCameraInfo(int)> (SMS_MMS)
<android.net.lowpan.ILowpanManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentity: int describeContents()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getNoBackupFilesDir()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getLinkAddresses()> (SMS_MMS)
<android.view.textclassifier.ExtrasUtils: android.content.Intent getActionIntent(android.os.Bundle)> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isDisplayWhiteBalanceEnabled()> (SMS_MMS)
<android.app.backup.IBackupObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Point: int hashCode()> (SMS_MMS)
<android.util.Rational: long longValue()> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getNameForUid(int)> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: com.android.ims.internal.IImsVideoCallProvider getDefaultImpl()> (SMS_MMS)
<android.view.inputmethod.InputConnectionWrapper: android.os.Handler getHandler()> (SMS_MMS)
<com.android.internal.telephony.INumberVerificationCallback$Stub: com.android.internal.telephony.INumberVerificationCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()> (SMS_MMS)
<android.hardware.location.IContextHubClientCallback$Stub: android.hardware.location.IContextHubClientCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getInitialDisplayDensity(int)> (SMS_MMS)
<android.content.Intent: java.lang.String getType()> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.media.TextTrackCue: int hashCode()> (SMS_MMS)
<android.app.LoadedApk: java.io.File getCredentialProtectedDataDirFile()> (SMS_MMS)
<android.app.Notification$CarExtender: int getColor()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int getIntentVerificationStatus(java.lang.String,int)> (SMS_MMS)
<android.text.style.LocaleSpan: int describeContents()> (SMS_MMS)
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)> (SMS_MMS)
<android.net.NetworkStatsHistory: int describeContents()> (SMS_MMS)
<android.app.IProcessObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownAnchor()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> (SMS_MMS)
<android.hardware.ICamera$Stub: android.hardware.ICamera getDefaultImpl()> (SMS_MMS)
<com.android.internal.util.SizedInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$1500(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest getManifest()> (SMS_MMS)
<android.widget.Editor$InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)> (SMS_MMS)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.IWindowManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.rollback.IRollbackManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IWallpaperManager$Default: android.app.WallpaperColors getWallpaperColors(int,int,int)> (SMS_MMS)
<android.telephony.CdmaEriInformation: int getEriIconIndex()> (SMS_MMS)
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus getGnssStatus()> (SMS_MMS)
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()> (SMS_MMS)
<android.app.job.IJobScheduler$Default: android.content.pm.ParceledListSlice getAllPendingJobs()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.lang.String access$400(android.telephony.VisualVoicemailSmsFilterSettings$Builder)> (SMS_MMS)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.view.contentcapture.IContentCaptureDirectManager getDefaultImpl()> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int getNativeSize()> (SMS_MMS)
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)> (SMS_MMS)
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.widget.AutoCompleteTextView: int getDropDownWidth()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getComponentsEnabledStates(java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstantApps(int)> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property getProperty(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.euicc.IDisableProfileCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContextWrapper: java.io.File getExternalCacheDir()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: android.view.Display getPresentationDisplay()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isEmergencyNumber(java.lang.String,boolean)> (SMS_MMS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: com.android.ims.internal.IImsMultiEndpoint getDefaultImpl()> (SMS_MMS)
<android.app.Activity: android.os.IBinder getActivityToken()> (SMS_MMS)
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedReprocessFrameNumber()> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: byte[] getEncoded()> (SMS_MMS)
<android.media.soundtrigger_middleware.PhraseSoundModel: int describeContents()> (SMS_MMS)
<android.widget.EdgeEffect: int getColor()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getEnabledSubscriptionId(int)> (SMS_MMS)
<android.widget.AbsListView: int getCacheColorHint()> (SMS_MMS)
<android.telephony.CellIdentityCdma: int hashCode()> (SMS_MMS)
<android.net.RouteInfo: java.net.InetAddress getGateway()> (SMS_MMS)
<android.view.MotionEvent: float getHistoricalX(int)> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub$Proxy: boolean isSensorPrivacyEnabled()> (SMS_MMS)
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)> (SMS_MMS)
<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle getMetaData()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityManager$Default: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)> (SMS_MMS)
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.view.WindowlessWindowManager: boolean getInTouchMode()> (SMS_MMS)
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int getCapability()> (SMS_MMS)
<android.telephony.data.ApnSetting$Builder: int access$900(android.telephony.data.ApnSetting$Builder)> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()> (SMS_MMS)
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()> (SMS_MMS)
<android.os.INetworkManagementService$Default: java.lang.String[] listInterfaces()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.telephony.SmsMessageBase: void extractEmailAddressFromMessageBody()> (SMS_MMS)
<android.graphics.ColorSpace: int getComponentCount()> (SMS_MMS)
<android.location.IGnssMeasurementsListener$Stub: android.location.IGnssMeasurementsListener getDefaultImpl()> (SMS_MMS)
<android.util.LruCache: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.telephony.TelephonyManager: int addDevicePolicyOverrideApn(android.content.Context,android.telephony.data.ApnSetting)> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOn(java.lang.String)> (SMS_MMS)
<android.net.lowpan.LowpanInterface: android.net.LinkAddress[] getLinkAddresses()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()> (SMS_MMS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.view.accessibility.IAccessibilityEmbeddedConnection getDefaultImpl()> (SMS_MMS)
<android.widget.EditText: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController getDefaultImpl()> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getDiskId()> (SMS_MMS)
<android.text.StaticLayout: int getLineExtra(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getInteractiveTime(long,int)> (SMS_MMS)
<android.os.MemoryFile: java.io.OutputStream getOutputStream()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerHeight(int)> (SMS_MMS)
<android.text.method.WordIterator: int getPunctuationBeginning(int)> (SMS_MMS)
<android.app.IWallpaperManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.transition.Transition: android.transition.Transition$EpicenterCallback getEpicenterCallback()> (SMS_MMS)
<android.graphics.text.LineBreaker$ParagraphConstraints: float getFirstWidth()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.location.GpsMeasurement: int access$002(android.location.GpsMeasurement,int)> (SMS_MMS)
<android.net.ConnectivityManager: byte[] getNetworkWatchlistConfigHash()> (SMS_MMS)
<android.telephony.CellInfoGsm: android.telephony.CellInfoGsm createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.print.IPrinterDiscoveryObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.IConnectivityManager$Default: int getConnectionOwnerUid(android.net.ConnectionInfo)> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkPropertiesForType(int)> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.location.IContextHubCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeImpl()> (SMS_MMS)
<android.content.res.Resources: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.view.animation.Animation: boolean getFillBefore()> (SMS_MMS)
<android.view.WindowInsets$Type: int systemBars()> (SMS_MMS)
<android.telephony.CallAttributes$1: android.telephony.CallAttributes[] newArray(int)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.IAccessibilityServiceConnection asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getPhoneId(int)> (SMS_MMS)
<android.util.proto.ProtoOutputStream: byte[] getBytes()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest getDefaultRequest()> (SMS_MMS)
<com.android.ims.internal.IImsEcbmListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)> (SMS_MMS)
<android.location.IGnssStatusListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.session.MediaSessionManager: java.util.List getSession2Tokens()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUserCached(java.lang.String,int,int)> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: long createAppDataBatched(java.lang.String[],java.lang.String[],int,int,int[],java.lang.String[],int[])> (SMS_MMS)
<android.view.ViewGroup: int indexOfChild(android.view.View)> (SMS_MMS)
<android.renderscript.Float4: float get(int)> (SMS_MMS)
<android.content.pm.ShortcutManager: java.util.List getShortcuts(int)> (SMS_MMS)
<android.net.NetworkTemplate: int hashCode()> (SMS_MMS)
<android.view.ViewConfiguration: int getPressedStateDuration()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()> (SMS_MMS)
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)> (SMS_MMS)
<android.service.notification.NotificationListenerService$RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService$Ranking)> (SMS_MMS)
<android.hardware.IConsumerIrService$Default: int[] getCarrierFrequencies()> (SMS_MMS)
<android.hardware.camera2.ICameraOfflineSession$Stub: android.hardware.camera2.ICameraOfflineSession getDefaultImpl()> (SMS_MMS)
<android.telephony.CellIdentity: int hashCode()> (SMS_MMS)
<android.widget.Editor: int access$5700(android.widget.Editor)> (SMS_MMS)
<android.net.IIpSecService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.widget.Toast: int getXOffset()> (SMS_MMS)
<android.os.storage.VolumeInfo$1: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: int[] getDisplayIds()> (SMS_MMS)
<android.webkit.WebSettings: java.lang.String getPluginsPath()> (SMS_MMS)
<com.android.internal.os.IResultReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network getActiveNetworkForUid(int,boolean)> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.content.pm.IPackageInstallerSession$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)> (SMS_MMS)
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastBackgroundDuration(int)> (SMS_MMS)
<android.telephony.CellSignalStrength: int getAsuFromRssiDbm(int)> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.content.pm.ParceledListSlice getQueue()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getBasebandVersion()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebResourceResponse: java.lang.String getEncoding()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)> (SMS_MMS)
<android.media.IVolumeController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentFilter: int countDataSchemeSpecificParts()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)> (SMS_MMS)
<android.drm.DrmManagerClient: int access$000(android.drm.DrmManagerClient)> (SMS_MMS)
<android.widget.EditorTouchState: float getLastDownX()> (SMS_MMS)
<android.view.contentcapture.ContentCaptureEvent: long getEventTime()> (SMS_MMS)
<android.text.BoringLayout: int getLineCount()> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List getDeclaredSharedLibraries(java.lang.String,int)> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: int checkSmsShortCodeDestination(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isPowerSaveMode()> (SMS_MMS)
<android.content.IRestrictionsManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.AbsListView: int getListPaddingTop()> (SMS_MMS)
<android.view.textclassifier.TextClassificationConstants: int getGenerateLinksMaxTextLength()> (SMS_MMS)
<android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)> (SMS_MMS)
<android.telephony.ModemInfo$1: android.telephony.ModemInfo[] newArray(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo)> (SMS_MMS)
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)> (SMS_MMS)
<android.media.session.MediaSessionManager$RemoteUserInfo: int hashCode()> (SMS_MMS)
<android.media.AudioSystem: java.lang.String getInputDeviceName(int)> (SMS_MMS)
<android.media.IAudioFocusDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.MediaMetadata: java.lang.String getKeyFromMetadataEditorKey(int)> (SMS_MMS)
<android.media.AudioPresentation: java.util.Map getLabels()> (SMS_MMS)
<android.view.SurfaceControlViewHost$SurfacePackage: android.view.SurfaceControl getSurfaceControl()> (SMS_MMS)
<android.widget.ProgressBar: int getMin()> (SMS_MMS)
<android.text.SpannedString: int hashCode()> (SMS_MMS)
<android.net.ConnectivityManager: boolean isVpnLockdownEnabled(int)> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.util.Size: int getHeight()> (SMS_MMS)
<android.location.Country: long getTimestamp()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakelockTimerLocked(com.android.internal.os.BatteryStatsImpl$Uid$Wakelock,int)> (SMS_MMS)
<android.telephony.SmsManager$5: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.util.List getAccessRules()> (SMS_MMS)
<android.filterfw.core.FrameFormat: int getHeight()> (SMS_MMS)
<android.media.PlayerBase: int baseSetAuxEffectSendLevel(float)> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorBackgroundTime()> (SMS_MMS)
<android.os.BatteryStatsManager: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.PlaybackParams: float getSpeed()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isRadioOn()> (SMS_MMS)
<android.view.HandlerActionQueue: java.lang.Runnable getRunnable(int)> (SMS_MMS)
<android.graphics.Canvas: int getSaveCount()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long[] getCpuFreqs()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)> (SMS_MMS)
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfig()> (SMS_MMS)
<android.hardware.display.IDisplayManagerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.Resources: int getDimensionPixelOffset(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.DisplayInfo: android.view.Display$Mode getDefaultMode()> (SMS_MMS)
<android.graphics.Typeface: int getStyle()> (SMS_MMS)
<android.telephony.CallForwardingInfo$1: android.telephony.CallForwardingInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.telephony.CellIdentityLte: void updateGlobalCellId()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean resetModemConfig(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,int,java.lang.String)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()> (SMS_MMS)
<android.app.ActivityTaskManager: int getDefaultAppRecentsLimitStatic()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()> (SMS_MMS)
<android.app.AppOpsManager: int strOpToOp(java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityGsm$1: void <init>()> (SMS_MMS)
<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets getApkAssets()> (SMS_MMS)
<android.content.pm.PackageInfo: int describeContents()> (SMS_MMS)
<android.app.FragmentHostCallback: boolean getRetainLoaders()> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub: android.service.voice.IVoiceInteractionSession asInterface(android.os.IBinder)> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: int getWindowIdForLeashToken(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: com.android.internal.telephony.IUpdateAvailableNetworksCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> (SMS_MMS)
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()> (SMS_MMS)
<android.app.role.IOnRoleHoldersChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String)> (SMS_MMS)
<android.util.jar.StrictJarFile: java.security.cert.Certificate[][] getCertificateChains(java.util.zip.ZipEntry)> (SMS_MMS)
<android.app.Fragment: android.content.res.Resources getResources()> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int access$102(android.net.lowpan.LowpanChannelInfo,int)> (SMS_MMS)
<com.android.internal.telephony.CellNetworkScanResult$1: void <init>()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> (SMS_MMS)
<android.text.StaticLayout: int unpackEndHyphenEdit(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> (SMS_MMS)
<android.app.ActivityThread: android.os.Handler getHandler()> (SMS_MMS)
<android.content.pm.IPackageStatsObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastRegularFrameNumber()> (SMS_MMS)
<android.print.IPrintDocumentAdapter$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.PrecomputedText$Params: int getHyphenationFrequency()> (SMS_MMS)
<android.os.Handler: android.os.IMessenger getIMessenger()> (SMS_MMS)
<android.telephony.SmsCbLocation: int describeContents()> (SMS_MMS)
<android.media.AudioPlaybackCaptureConfiguration: int[] getMatchingUsages()> (SMS_MMS)
<android.app.Activity: int getChangingConfigurations()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)> (SMS_MMS)
<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()> (SMS_MMS)
<android.view.WindowInsets$Type: int navigationBars()> (SMS_MMS)
<android.telephony.UiccSlotInfo: int describeContents()> (SMS_MMS)
<android.os.UserManager: android.os.IUserManager access$000(android.os.UserManager)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForUser(long,long,int,java.lang.String)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)> (SMS_MMS)
<android.app.ApplicationPackageManager: int getPackageUidAsUser(java.lang.String,int,int)> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMvnoType()> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: int getHistoryTotalSize()> (SMS_MMS)
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainPosition(long)> (SMS_MMS)
<android.net.lowpan.LowpanChannelInfo: int hashCode()> (SMS_MMS)
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)> (SMS_MMS)
<android.view.View: android.view.Display getDisplay()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getFrontendType()> (SMS_MMS)
<android.os.IClientCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()> (SMS_MMS)
<android.view.Choreographer: android.view.Choreographer getMainThreadInstance()> (SMS_MMS)
<android.content.IntentFilter: java.util.ArrayList getHostsList()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: int movePrimaryStorage(java.lang.String)> (SMS_MMS)
<android.app.NotificationHistory: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)> (SMS_MMS)
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> (SMS_MMS)
<android.os.health.HealthStatsParceler: android.os.health.HealthStats getHealthStats()> (SMS_MMS)
<android.hardware.location.ContextHubMessage: int getMsgType()> (SMS_MMS)
<android.media.AudioMetadata$ObjectPackage: android.util.Pair unpack(java.nio.ByteBuffer)> (SMS_MMS)
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: com.android.internal.telephony.euicc.IDeleteProfileCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findEmulatedForPrivate(android.os.storage.VolumeInfo)> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()> (SMS_MMS)
<android.media.TimedMetaData: long getTimestamp()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()> (SMS_MMS)
<android.view.InsetsSourceControl: android.graphics.Point getSurfacePosition()> (SMS_MMS)
<android.view.InsetsAnimationControlImpl: int getTypes()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.GpsMeasurement: byte getLossOfLock()> (SMS_MMS)
<android.net.EthernetManager: java.lang.String[] getAvailableInterfaces()> (SMS_MMS)
<android.app.ActivityOptions: int getStartY()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getMediaStoreVolumeName()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: java.lang.String getPackageName()> (SMS_MMS)
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> (SMS_MMS)
<android.widget.Toolbar: int getTitleMarginBottom()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.textclassifier.TextLinks$TextLinkSpan: java.lang.String getUrl()> (SMS_MMS)
<android.os.ISystemUpdateManager$Stub: android.os.ISystemUpdateManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.Criteria: int describeContents()> (SMS_MMS)
<android.telephony.SmsManager$1: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,long)> (SMS_MMS)
<android.text.style.AbsoluteSizeSpan: boolean getDip()> (SMS_MMS)
<android.widget.RemoteViews$ViewContentNavigation: int mergeBehavior()> (SMS_MMS)
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)> (SMS_MMS)
<android.media.AudioTrack$TunerConfiguration: int getSyncId()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDefaultCrossProfilePackages()> (SMS_MMS)
<android.app.backup.FullBackup$BackupScheme: java.lang.String tokenToDirectoryPath(java.lang.String)> (SMS_MMS)
<android.app.ContextImpl: android.content.Context createCredentialProtectedStorageContext()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMin()> (SMS_MMS)
<com.android.internal.infra.IAndroidFuture$Stub: com.android.internal.infra.IAndroidFuture getDefaultImpl()> (SMS_MMS)
<android.renderscript.Matrix3f: float get(int,int)> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isSubscriptionVisible(android.telephony.SubscriptionInfo)> (SMS_MMS)
<android.security.net.config.ApplicationConfig: boolean isCleartextTrafficPermitted()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: boolean isConfirmationPromptSupported()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTtyOverVolteEnabled(int)> (SMS_MMS)
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()> (SMS_MMS)
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)> (SMS_MMS)
<android.content.ContentProviderOperation: android.net.Uri getUri()> (SMS_MMS)
<android.webkit.WebView: int computeVerticalScrollRange()> (SMS_MMS)
<android.media.audiofx.AudioEffect$Descriptor: int hashCode()> (SMS_MMS)
<android.widget.AbsListView: int getHeightForPosition(int)> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Bitmap: long getNativeInstance()> (SMS_MMS)
<android.app.IActivityManager$Default: java.lang.String getProviderMimeType(android.net.Uri,int)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: int describeContents()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppPermissions(java.lang.String)> (SMS_MMS)
<android.debug.IAdbManager$Stub$Proxy: boolean isAdbWifiSupported()> (SMS_MMS)
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] getVerityRootHash(java.lang.String)> (SMS_MMS)
<android.content.res.ResourcesImpl: android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue,int,int,android.content.res.Resources$Theme)> (SMS_MMS)
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()> (SMS_MMS)
<android.widget.RemoteViews$ViewGroupActionRemove: int access$2100(android.widget.RemoteViews$ViewGroupActionRemove)> (SMS_MMS)
<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()> (SMS_MMS)
<android.app.ActivityManager: int staticGetLargeMemoryClass()> (SMS_MMS)
<android.hardware.radio.Announcement: java.util.Map getVendorInfo()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.util.List access$200(android.telephony.VisualVoicemailSmsFilterSettings$Builder)> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout$5: java.lang.Integer get(com.android.internal.widget.ActionBarOverlayLayout)> (SMS_MMS)
<android.app.contentsuggestions.ISelectionsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.PooledStringWriter: int getStringCount()> (SMS_MMS)
<android.hardware.radio.ITunerCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.prediction.AppTarget: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.view.IInputMethodClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraMetadataNative$Key: java.lang.String getName()> (SMS_MMS)
<android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: int getSeq()> (SMS_MMS)
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getAuthority()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppPermissions(java.lang.String)> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String,int)> (SMS_MMS)
<android.media.AudioFocusInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.app.ISearchManager$Default: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean nvWriteItem(int,java.lang.String)> (SMS_MMS)
<android.text.SpannableStringBuilder: int length()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroupsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getSupportedModelArch()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.ComponentName getHomeActivities(java.util.List)> (SMS_MMS)
<android.app.admin.SystemUpdateInfo: long getReceivedTime()> (SMS_MMS)
<android.os.ParcelUuid: int hashCode()> (SMS_MMS)
<android.net.Proxy: java.lang.String getHost(android.content.Context)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getAttentionServicePackageName()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.content.res.ResourcesImpl$ThemeImpl newThemeImpl(android.content.res.Resources$ThemeKey)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.content.res.TypedArray: android.content.res.Resources getResources()> (SMS_MMS)
<android.telephony.CellInfoWcdma: android.telephony.CellInfoWcdma createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.hardware.location.IContextHubTransactionCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.FloatingActionMode: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.os.IServiceCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getSystemTextClassifierPackageName()> (SMS_MMS)
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: int getContentHeight()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: float getShadowDx()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultDataSubscriptionInfo()> (SMS_MMS)
<android.media.RingtoneManager: boolean getIncludeDrm()> (SMS_MMS)
<android.telephony.TelephonyScanManager: android.telephony.NetworkScan requestNetworkScan(int,android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback,java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.storage.IStorageEventListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.incremental.IncrementalStorage: byte[] getFileMetadata(java.util.UUID)> (SMS_MMS)
<android.graphics.PorterDuffColorFilter: int hashCode()> (SMS_MMS)
<android.app.IAlarmCompleteListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOps(int)> (SMS_MMS)
<android.hardware.location.NanoApp: int getNeededWriteMemBytes()> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getPreferredDataSubscriptionId()> (SMS_MMS)
<android.widget.SuggestionsAdapter: int getQueryRefinement()> (SMS_MMS)
<android.telephony.CallQuality: int getNumRtpPacketsReceived()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()> (SMS_MMS)
<android.os.VibrationEffect$Prebaked: int getEffectStrength()> (SMS_MMS)
<android.app.Fragment: android.app.LoaderManager getLoaderManager()> (SMS_MMS)
<android.location.LocationRequest: android.os.WorkSource getWorkSource()> (SMS_MMS)
<android.graphics.BitmapRegionDecoder: int getHeight()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.Map getLogicalToPhysicalSlotMapping()> (SMS_MMS)
<android.media.AudioMetadata$AutoGrowByteBuffer: java.nio.ByteOrder order()> (SMS_MMS)
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> (SMS_MMS)
<android.graphics.ImageDecoder$InputStreamSource: android.content.res.Resources getResources()> (SMS_MMS)
<android.text.SpannableString: int getSpanFlags(java.lang.Object)> (SMS_MMS)
<android.telecom.PhoneAccount: java.util.List getSupportedUriSchemes()> (SMS_MMS)
<android.accounts.IAccountManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.net.NetworkStats: int internalSize()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.animation.AnimatorSet: long getCurrentPlayTime()> (SMS_MMS)
<android.renderscript.Type: int getCount()> (SMS_MMS)
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()> (SMS_MMS)
<android.view.IGraphicsStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.euicc.DownloadableSubscription: int describeContents()> (SMS_MMS)
<android.media.session.ISessionManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso(int)> (SMS_MMS)
<android.app.Fragment: android.app.Fragment getTargetFragment()> (SMS_MMS)
<android.view.View$10: java.lang.Float get(android.view.View)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataStateForSubId(int)> (SMS_MMS)
<android.app.job.JobWorkItem: int describeContents()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.util.UUID,android.os.UserHandle)> (SMS_MMS)
<android.view.AbsSavedState: int describeContents()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int hashCode()> (SMS_MMS)
<android.view.GestureExclusionTracker$GestureExclusionViewInfo: int update()> (SMS_MMS)
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: java.lang.String convertAfModeToLegacy(int,java.util.List)> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: byte[] getOneTouchRecordSource(int)> (SMS_MMS)
<android.os.IUserManager$Default: android.os.Bundle getUserRestrictions(int)> (SMS_MMS)
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.net.wifi.nl80211.IInterfaceEventCallback getDefaultImpl()> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Default: byte[] getOneTouchRecordSource(int)> (SMS_MMS)
<android.printservice.PrintServiceInfo: int hashCode()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int onKeyguardVisibilityChanged(boolean,int)> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: int getAbsoluteEnd()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getNamesForUids(int[])> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordComplexity(boolean)> (SMS_MMS)
<android.view.View: android.view.ViewParent getParentForAccessibility()> (SMS_MMS)
<android.drm.DrmManagerClient: int access$300(android.drm.DrmManagerClient,int)> (SMS_MMS)
<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()> (SMS_MMS)
<android.content.Intent: long getLongExtra(java.lang.String,long)> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: long getCounterId()> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: long getDate()> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hasProgress(boolean)> (SMS_MMS)
<android.util.MapCollections$MapIterator: int hashCode()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getDevicePowerStatus()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean allDefaultsSelected()> (SMS_MMS)
<android.view.WindowInsets$Type: int statusBars()> (SMS_MMS)
<android.telephony.CellInfoWcdma$1: android.telephony.CellInfoWcdma createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.radio.IAnnouncementListener$Stub: android.hardware.radio.IAnnouncementListener getDefaultImpl()> (SMS_MMS)
<android.os.IIncidentReportStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)> (SMS_MMS)
<android.view.ViewConfiguration: long getDeviceGlobalActionKeyTimeout()> (SMS_MMS)
<android.telephony.CellIdentityCdma: int getLatitude()> (SMS_MMS)
<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: java.lang.String getPath()> (SMS_MMS)
<android.telecom.TelecomManager: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)> (SMS_MMS)
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)> (SMS_MMS)
<android.media.projection.IMediaProjectionCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.DrawableWrapper: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiScanCount(int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: boolean isActiveSubId(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager$AppOpsCollector: java.util.concurrent.Executor getAsyncNotedExecutor()> (SMS_MMS)
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()> (SMS_MMS)
<android.app.blob.BlobStoreManager: java.util.List queryBlobsForUser(android.os.UserHandle)> (SMS_MMS)
<android.widget.HeaderViewListAdapter: int getViewTypeCount()> (SMS_MMS)
<android.telephony.UiccAccessRule: android.telephony.UiccAccessRule[] decodeRules(byte[])> (SMS_MMS)
<com.android.internal.telephony.EncodeException: int getError()> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> (SMS_MMS)
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: boolean getIpForwardingEnabled()> (SMS_MMS)
<android.content.pm.ChangedPackages: int getSequenceNumber()> (SMS_MMS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: int getStrongAuthForUser(int)> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.res.AssetManager: long access$900(long,long,int)> (SMS_MMS)
<android.view.autofill.AutofillPopupWindow: android.graphics.drawable.Drawable getBackground()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.OutputStream getRawErrorStream()> (SMS_MMS)
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: byte[] getMessageClass()> (SMS_MMS)
<android.media.midi.IMidiDeviceOpenCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.GnssNavigationMessage: byte[] getData()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: boolean isClientActive()> (SMS_MMS)
<android.content.UndoManager: int countRedos(android.content.UndoOwner[])> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getAnimatorCache()> (SMS_MMS)
<com.android.internal.inputmethod.IInputContentUriToken$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.View: int getLeft()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)> (SMS_MMS)
<android.print.IWriteResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AlertDialog: android.widget.ListView getListView()> (SMS_MMS)
<android.app.usage.UsageEvents$Event: int getAppStandbyBucket()> (SMS_MMS)
<android.content.pm.ShortcutInfo: int getTextResId()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.transition.Transition$ArrayListManager: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)> (SMS_MMS)
<android.view.Window: android.view.Window getContainer()> (SMS_MMS)
<android.net.Uri$Builder: android.net.Uri$Builder fragment(android.net.Uri$Part)> (SMS_MMS)
<android.os.UserManager: int getMaxSupportedUsers()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IThermalService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.net.NetworkKey: int hashCode()> (SMS_MMS)
<android.media.IAudioRoutesObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String)> (SMS_MMS)
<android.widget.TextView: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.app.Instrumentation: android.content.Context getTargetContext()> (SMS_MMS)
<android.view.ViewConfiguration: int getTouchSlop()> (SMS_MMS)
<android.net.TrafficStats: long getUidUdpRxBytes(int)> (SMS_MMS)
<android.content.pm.IPackageDeleteObserver$Stub: android.content.pm.IPackageDeleteObserver asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.IWallpaperManager$Default: android.app.WallpaperInfo getWallpaperInfo(int)> (SMS_MMS)
<android.view.WindowInsets: int getSystemWindowInsetTop()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CameraDeviceState access$300(android.hardware.camera2.legacy.GLThreadManager)> (SMS_MMS)
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> (SMS_MMS)
<android.os.IThermalStatusListener$Stub: android.os.IThermalStatusListener getDefaultImpl()> (SMS_MMS)
<android.os.IUserManager$Default: int getUserBadgeColorResId(int)> (SMS_MMS)
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForUid(java.util.UUID,int)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserIconBadgeResId(int)> (SMS_MMS)
<android.app.RuntimeAppOpAccessMessage: java.lang.String getMessage()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: int getInstallWindowEnd()> (SMS_MMS)
<android.widget.CursorAdapter: android.widget.Filter getFilter()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)> (SMS_MMS)
<android.content.pm.PackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.RouteDiscoveryPreference: int describeContents()> (SMS_MMS)
<android.content.rollback.IRollbackManager$Stub$Proxy: int notifyStagedSession(int)> (SMS_MMS)
<android.os.Bundle: byte[] getByteArray(java.lang.String)> (SMS_MMS)
<android.view.KeyboardShortcutInfo: android.graphics.drawable.Icon getIcon()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastDuration(int)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getRequestedPermissions()> (SMS_MMS)
<android.view.autofill.AutofillManager: java.lang.String getUserDataId()> (SMS_MMS)
<android.net.NetworkStatsHistory: long getEnd()> (SMS_MMS)
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)> (SMS_MMS)
<android.media.MediaDrm$SessionException: int getErrorCode()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockHardwareCanvas()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastBackgroundDuration(int)> (SMS_MMS)
<android.media.MediaDrm$KeyRequest: int getRequestType()> (SMS_MMS)
<android.net.VpnManager: android.content.Intent provisionVpnProfile(android.net.PlatformVpnProfile)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup: float getRotation()> (SMS_MMS)
<android.content.IntentFilter: int getOrder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.text.MeasuredText: long getNativePtr()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)> (SMS_MMS)
<android.app.blob.BlobStoreManager: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle)> (SMS_MMS)
<android.telephony.SubscriptionPlan: long access$702(android.telephony.SubscriptionPlan,long)> (SMS_MMS)
<android.telephony.CellSignalStrengthTdscdma$1: android.telephony.CellSignalStrengthTdscdma[] newArray(int)> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.view.accessibility.IWindowMagnificationConnectionCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)> (SMS_MMS)
<android.os.PowerManager: boolean isAmbientDisplaySuppressedForToken(java.lang.String)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()> (SMS_MMS)
<android.widget.Toolbar: android.view.Menu getMenu()> (SMS_MMS)
<android.app.Person: java.lang.String getKey()> (SMS_MMS)
<android.widget.Spinner: int getDropDownWidth()> (SMS_MMS)
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder previewProduced()> (SMS_MMS)
<android.os.Debug: int getGlobalFreedCount()> (SMS_MMS)
<android.printservice.recommendation.IRecommendationsChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.window.WindowContainerToken: int hashCode()> (SMS_MMS)
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.os.Bundle captureSharedElementState()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.net.wifi.nl80211.NativeScanResult[] getScanResults()> (SMS_MMS)
<android.app.slice.ISliceManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.storage.StorageManager: java.io.File findPathForUuid(java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsServiceFeatureCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.drm.DrmRights: java.lang.String getMimeType()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: int getRegionCount()> (SMS_MMS)
<android.security.keystore.AndroidKeyStoreKey: int hashCode()> (SMS_MMS)
<android.os.IDumpstateListener$Stub: android.os.IDumpstateListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Byte3: byte length()> (SMS_MMS)
<android.widget.BaseAdapter: java.lang.CharSequence[] getAutofillOptions()> (SMS_MMS)
<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider getAssetsProvider()> (SMS_MMS)
<android.app.ApplicationPackageManager: int movePackage(java.lang.String,android.os.storage.VolumeInfo)> (SMS_MMS)
<android.content.om.OverlayInfo: java.lang.String getCategory()> (SMS_MMS)
<android.widget.PopupWindow: android.graphics.Rect getTransitionEpicenter()> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: int hashCode()> (SMS_MMS)
<android.telephony.SmsMessage: int getStatusOnSim()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: long getRemainingLeaseQuotaBytes(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getStatus()> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telecom.Logging.Session: int hashCode()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)> (SMS_MMS)
<android.graphics.drawable.Drawable: int getMinimumHeight()> (SMS_MMS)
<android.os.UserManager: int getUserBadgeNoBackgroundResId(int)> (SMS_MMS)
<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.V1_5.CellInfoGsm: int hashCode()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> (SMS_MMS)
<android.text.style.EasyEditSpan: android.app.PendingIntent getPendingIntent()> (SMS_MMS)
<android.content.pm.IOnAppsChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.WallpaperManager$Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean,int,int,boolean,android.app.WallpaperManager$ColorManagementProxy)> (SMS_MMS)
<android.net.INetworkScoreService$Default: java.lang.String getActiveScorerPackage()> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: int getPowerSaveModeTrigger()> (SMS_MMS)
<android.hardware.radio.ProgramList: android.hardware.radio.RadioManager$ProgramInfo get(android.hardware.radio.ProgramSelector$Identifier)> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()> (SMS_MMS)
<android.os.PowerWhitelistManager: int[] getWhitelistedAppIds(boolean)> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.window.IWindowContainerToken$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.http.SslError: java.lang.String getUrl()> (SMS_MMS)
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(java.lang.String)> (SMS_MMS)
<android.hardware.IConsumerIrService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder)> (SMS_MMS)
<android.content.pm.VersionedPackage: int getVersionCode()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: int postEnroll()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.SpanSet: int getNextTransition(int,int)> (SMS_MMS)
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean hasIccCardUsingSlotIndex(int)> (SMS_MMS)
<android.security.KeyStore$OperationPromise: java.util.concurrent.CompletableFuture getFuture()> (SMS_MMS)
<android.media.audiopolicy.AudioProductStrategy: android.media.audiopolicy.AudioProductStrategy getAudioProductStrategyWithId(int)> (SMS_MMS)
<android.content.pm.ICrossProfileApps$Stub: android.content.pm.ICrossProfileApps asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.text.MeasuredParagraph: int getMemoryUsage()> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()> (SMS_MMS)
<android.text.SpannedString: int getSpanStart(java.lang.Object)> (SMS_MMS)
<android.hardware.radio.V1_5.CellIdentity: int hashCode()> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getPrimaryStorageUuid()> (SMS_MMS)
<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()> (SMS_MMS)
<android.location.GnssClock: int getLeapSecond()> (SMS_MMS)
<android.media.AudioRecordingMonitorImpl: android.media.AudioRecordingConfiguration getMyConfig(java.util.List)> (SMS_MMS)
<com.android.internal.os.ZygoteConnection: java.lang.Runnable processOneCommand(com.android.internal.os.ZygoteServer)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: int hashCode()> (SMS_MMS)
<android.hardware.cas.V1_0.ICasListener$Stub: android.os.IHwBinder asBinder()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$102(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Default: android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModules()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)> (SMS_MMS)
<android.net.LinkProperties: android.net.Uri getCaptivePortalApiUrl()> (SMS_MMS)
<android.media.AudioTrack: int access$500(android.media.AudioTrack)> (SMS_MMS)
<android.app.usage.StorageStats: long getDataBytes()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK getDeviceStateCallback()> (SMS_MMS)
<android.view.MenuInflater$MenuState: android.view.MenuItem addItem()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: int getEventName()> (SMS_MMS)
<android.media.tv.ITvInputHardware$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: long getMaxNumberVerificationTimeoutMillis()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getCsiSinr()> (SMS_MMS)
<android.widget.AbsListView: int getTopEdgeEffectColor()> (SMS_MMS)
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> (SMS_MMS)
<android.media.MediaCodecInfo: android.media.MediaCodecInfo makeRegular()> (SMS_MMS)
<android.animation.PathKeyframes$FloatKeyframesBase: java.lang.Object getValue(float)> (SMS_MMS)
<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()> (SMS_MMS)
<com.android.internal.os.RailStats: long getWifiTotalEnergyUseduWs()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getEnableNightMode()> (SMS_MMS)
<android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)> (SMS_MMS)
<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.hardware.fingerprint.IFingerprintServiceReceiver getDefaultImpl()> (SMS_MMS)
<android.view.IWallpaperVisibilityListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.IVoldTaskListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getAllPackages()> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IVibratorService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()> (SMS_MMS)
<android.widget.TextView: float getLetterSpacing()> (SMS_MMS)
<android.media.session.ISessionController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Stub$Proxy: boolean isSubscriptionEnabled(int)> (SMS_MMS)
<android.media.MediaCodec$CodecException: java.lang.String getDiagnosticInfo()> (SMS_MMS)
<android.net.wifi.nl80211.IScanEvent$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.LinkProperties getLinkPropertiesForType(int)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: int getUsageSource()> (SMS_MMS)
<android.provider.ContactsContract$RawContacts: java.lang.String getLocalAccountType(android.content.Context)> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: int getId()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationManager$Policy getNotificationPolicy(java.lang.String)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getRuleInstanceCount(android.content.ComponentName)> (SMS_MMS)
<android.location.GpsNavigationMessage: short getSubmessageId()> (SMS_MMS)
<android.telecom.Logging.Session: java.lang.String getSessionId()> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getSecondaryProgressTintMode()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()> (SMS_MMS)
<android.content.pm.IPackageDataObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.IRemoteViewsFactory$Default: android.widget.RemoteViews getLoadingView()> (SMS_MMS)
<android.view.DisplayCutout: android.graphics.Insets getWaterfallInsets()> (SMS_MMS)
<android.hardware.display.DeviceProductInfo: java.lang.String getManufacturerPnpId()> (SMS_MMS)
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: android.hardware.radio.RadioManager$BandConfig getConfiguration()> (SMS_MMS)
<android.app.ContextImpl: android.view.Display getDisplayNoVerify()> (SMS_MMS)
<android.os.IIncidentManager$Default: java.util.List getIncidentReportList(java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)> (SMS_MMS)
<android.view.FrameStats: long getRefreshPeriodNano()> (SMS_MMS)
<android.content.ClipData: int getItemCount()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)> (SMS_MMS)
<android.hardware.biometrics.CryptoObject: javax.crypto.Cipher getCipher()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.util.KeyValueListParser$LongValue: long getDefaultValue()> (SMS_MMS)
<android.app.backup.IBackupManager$Stub$Proxy: android.os.UserHandle getUserForAncestralSerialNumber(long)> (SMS_MMS)
<android.util.MapCollections$MapIterator: java.lang.Object getValue()> (SMS_MMS)
<android.view.FocusFinder$FocusSorter: int lambda$new$1$FocusFinder$FocusSorter(android.view.View,android.view.View)> (SMS_MMS)
<android.text.style.URLSpan: int getSpanTypeId()> (SMS_MMS)
<android.view.ViewRootImpl$UnhandledKeyManager: boolean preViewDispatch(android.view.KeyEvent)> (SMS_MMS)
<android.hardware.location.NanoApp: int describeContents()> (SMS_MMS)
<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: byte[] getMessageId()> (SMS_MMS)
<com.android.internal.content.PackageMonitor: java.lang.String getPackageName(android.content.Intent)> (SMS_MMS)
<android.app.INotificationManager$Default: java.lang.String getNotificationDelegate(java.lang.String)> (SMS_MMS)
<android.telephony.CallQuality$1: android.telephony.CallQuality[] newArray(int)> (SMS_MMS)
<android.net.NetworkScoreManager: boolean isCallerActiveScorer(int)> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.Network[] getAllNetworks()> (SMS_MMS)
<android.text.method.DigitsKeyListener: int getInputType()> (SMS_MMS)
<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set getConcurrentCameraIdCombination()> (SMS_MMS)
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)> (SMS_MMS)
<android.widget.ProgressBar: android.graphics.BlendMode getProgressTintBlendMode()> (SMS_MMS)
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getOwnerInstalledCaCerts(android.os.UserHandle)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo findCurrentGuestUser()> (SMS_MMS)
<android.graphics.Canvas: long getNativeCanvasWrapper()> (SMS_MMS)
<android.media.projection.IMediaProjection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.NotificationChannel: java.lang.String getId()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypes()> (SMS_MMS)
<android.view.IWindow$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.SuperscriptSpan: int describeContents()> (SMS_MMS)
<android.media.MicrophoneInfo: java.util.List getChannelMapping()> (SMS_MMS)
<android.os.IVoldListener$Stub: android.os.IVoldListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient getDefaultImpl()> (SMS_MMS)
<android.view.View: int getImportantForAutofill()> (SMS_MMS)
<android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> (SMS_MMS)
<android.view.View: int getNextFocusForwardId()> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()> (SMS_MMS)
<android.telephony.ims.ImsExternalCallState: int getCallState()> (SMS_MMS)
<android.view.animation.Animation: long getStartOffset()> (SMS_MMS)
<android.media.RoutingSessionInfo: int describeContents()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getPackagesForUid(int)> (SMS_MMS)
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.face.IFaceService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> (SMS_MMS)
<android.telephony.CellIdentity: boolean isSameCell(android.telephony.CellIdentity)> (SMS_MMS)
<android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver getDefaultImpl()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long getReportTimestamp()> (SMS_MMS)
<android.transition.ChangeBounds$6: android.graphics.PointF get(android.view.View)> (SMS_MMS)
<android.hardware.camera2.CaptureResult$Key: int hashCode()> (SMS_MMS)
<android.net.IIpSecService$Stub$Proxy: android.net.IpSecTransformResponse createTransform(android.net.IpSecConfig,android.os.IBinder,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()> android.permission.STOP_APP_SWITCHES (SMS_MMS)
<android.util.jar.StrictJarFile$JarFileInputStream: int read()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int[] getPackageGids(java.lang.String,int,int)> (SMS_MMS)
<android.net.NetworkTemplate: int describeContents()> (SMS_MMS)
<android.os.StatsServiceManager$ServiceRegisterer: android.os.IBinder get()> (SMS_MMS)
<com.android.internal.view.FloatingActionMode: android.view.Menu getMenu()> (SMS_MMS)
<android.net.NetworkPolicy: byte[] getBytesForBackup()> (SMS_MMS)
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int lock(int)> (SMS_MMS)
<android.service.notification.ZenPolicy: int getVisualEffectPeek()> (SMS_MMS)
<android.service.vr.IVrManager$Default: int getVr2dDisplayId()> (SMS_MMS)
<com.android.internal.content.om.OverlayConfig: int getPriority(java.lang.String)> (SMS_MMS)
<android.accounts.AuthenticatorDescription: int describeContents()> (SMS_MMS)
<android.hardware.Sensor: float getMaximumRange()> (SMS_MMS)
<android.graphics.Matrix: int hashCode()> (SMS_MMS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IInputMethodPrivilegedOperations asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.tv.ITvInputManager$Default: java.util.List getDvbDeviceList()> (SMS_MMS)
<android.location.LocationManager: int getGnssYearOfHardware()> (SMS_MMS)
<android.service.textclassifier.ITextClassifierCallback$Stub: android.service.textclassifier.ITextClassifierCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.backup.BackupDataInputStream: int read(byte[])> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> (SMS_MMS)
<android.view.VerifiedMotionEvent: java.lang.Boolean getFlag(int)> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.CarrierRestrictionRules getCarrierRestrictionRules()> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Stub: android.net.wifi.nl80211.IApInterface asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.net.http.SslCertificate$DName: java.lang.String getOName()> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperManager$Globals access$100()> (SMS_MMS)
<android.service.notification.StatusBarNotification: int describeContents()> (SMS_MMS)
<android.opengl.GLLogWrapper: int glGetError()> (SMS_MMS)
<android.view.WindowInsets$Type: int systemGestures()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getTheme()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: int getInstallLocation()> (SMS_MMS)
<android.net.wifi.nl80211.NativeWifiClient: int describeContents()> (SMS_MMS)
<android.text.PrecomputedText$Params: int getBreakStrategy()> (SMS_MMS)
<android.os.IncidentManager: android.os.IncidentManager$IncidentReport getIncidentReport(android.net.Uri)> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getRole()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma: int getLevel()> (SMS_MMS)
<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager getWindowlessWM()> (SMS_MMS)
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getEnabledAccessibilityServiceList(int,int)> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: int describeContents()> (SMS_MMS)
<android.os.connectivity.CellularBatteryStats: long getLoggingDurationMillis()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()> (SMS_MMS)
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)> (SMS_MMS)
<android.accessibilityservice.AccessibilityShortcutInfo: int hashCode()> (SMS_MMS)
<android.util.SparseIntArray: int get(int)> (SMS_MMS)
<android.telephony.PreciseCallState: int getDisconnectCause()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedProvider: int describeContents()> (SMS_MMS)
<android.net.NetworkAgentConfig: java.lang.String getLegacyTypeName()> (SMS_MMS)
<android.app.WallpaperColors: int hashCode()> (SMS_MMS)
<android.app.PendingIntent: java.lang.String getCreatorPackage()> (SMS_MMS)
<android.app.contentsuggestions.SelectionsRequest: int describeContents()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()> (SMS_MMS)
<android.app.slice.ISliceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()> (SMS_MMS)
<android.media.PlayerBase$PlayerIdCard: int hashCode()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getCompileSdkVersion()> (SMS_MMS)
<android.graphics.fonts.FontVariationAxis: int hashCode()> (SMS_MMS)
<android.graphics.drawable.Drawable: int getAlpha()> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getYOffsetUncertaintyMm()> (SMS_MMS)
<android.hardware.camera2.utils.SizeAreaComparator: int compare(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceClassName(java.lang.String)> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForUser(long,long,int,java.lang.String)> (SMS_MMS)
<android.util.Range: java.lang.Comparable getUpper()> (SMS_MMS)
<android.widget.TextView: android.text.Editable getEditableText()> (SMS_MMS)
<android.content.res.AssetFileDescriptor: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener getListener()> (SMS_MMS)
<android.security.FileIntegrityManager: boolean isAppSourceCertificateTrusted(java.security.cert.X509Certificate)> (SMS_MMS)
<android.os.VibrationEffect$OneShot: long getDuration()> (SMS_MMS)
<android.telephony.ClientRequestStats$1: android.telephony.ClientRequestStats createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int hashCode()> (SMS_MMS)
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> (SMS_MMS)
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getDataDir()> (SMS_MMS)
<android.view.View$10: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: com.android.internal.telephony.euicc.IPrepareDownloadCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: int getDefaultFlags(android.content.Context)> (SMS_MMS)
<com.android.internal.policy.DecorView: android.view.WindowInsetsController getWindowInsetsController()> (SMS_MMS)
<android.app.FragmentHostCallback: android.app.Activity getActivity()> (SMS_MMS)
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()> (SMS_MMS)
<android.view.IWindowManager$Default: float[] getAnimationScales()> (SMS_MMS)
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()> (SMS_MMS)
<android.net.IpSecUdpEncapResponse: int describeContents()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.graphics.palette.VariationalKMeansQuantizer: java.util.List getQuantizedColors()> (SMS_MMS)
<android.os.IPowerManager$Stub$Proxy: boolean isLightDeviceIdleMode()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppDenyPermissions(java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getInputDevices()> (SMS_MMS)
<android.os.UserManager: boolean isUserRunning(int)> (SMS_MMS)
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()> (SMS_MMS)
<android.app.AsyncNotedAppOp: java.lang.String getAttributionTag()> (SMS_MMS)
<android.app.IAlarmListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: android.graphics.Insets getOpticalInsets()> (SMS_MMS)
<android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorRequest$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: byte[] getPasswordHistoryHashFactor(com.android.internal.widget.LockscreenCredential,int)> (SMS_MMS)
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)> (SMS_MMS)
<android.util.proto.ProtoStream: int getDepthFromToken(long)> (SMS_MMS)
<android.net.http.SslCertificate$DName: java.lang.String getCName()> (SMS_MMS)
<android.media.soundtrigger.SoundTriggerManager: int stopRecognition(java.util.UUID)> (SMS_MMS)
<android.filterfw.core.FrameFormat: int hashCode()> (SMS_MMS)
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(java.lang.String,int)> (SMS_MMS)
<android.view.Display: int getDisplayId()> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: int describeContents()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getAccessibilityShortcutTargets(int)> (SMS_MMS)
<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)> (SMS_MMS)
<android.net.TrafficStats: long getMobileTcpTxPackets()> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyServiceCategories()> (SMS_MMS)
<android.os.IMessenger$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getWifiMulticastWakelockTime(long,int)> (SMS_MMS)
<android.graphics.RecordingCanvas: int getHeight()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String[] getForbiddenPlmns(int,int)> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getInternalPath()> (SMS_MMS)
<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo getInfo()> (SMS_MMS)
<android.telecom.Logging.Session: java.util.ArrayList getChildSessions()> (SMS_MMS)
<com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)> (SMS_MMS)
<android.view.SurfaceControl: int describeContents()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()> (SMS_MMS)
<android.os.storage.CrateMetadata: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioPowerState(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()> (SMS_MMS)
<com.android.internal.telephony.IMms$Default: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)> (SMS_MMS)
<com.android.internal.compat.CompatibilityChangeInfo: boolean getDisabled()> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getDefaultGuestRestrictions()> (SMS_MMS)
<android.telephony.CellSignalStrengthNr: int getSsRsrp()> (SMS_MMS)
<android.os.storage.StorageManager$ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()> (SMS_MMS)
<android.app.admin.SystemUpdatePolicy: android.util.Pair getCurrentFreezePeriod(java.time.LocalDate)> (SMS_MMS)
<android.media.session.ISessionController$Default: android.media.MediaMetadata getMetadata()> (SMS_MMS)
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoList()> (SMS_MMS)
<android.media.IMediaRouterService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.DataUsageRequest: int hashCode()> (SMS_MMS)
<android.telephony.CellSignalStrengthGsm$1: android.telephony.CellSignalStrengthGsm createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.telephony.euicc.EuiccNotification: int getEvent()> (SMS_MMS)
<android.location.GpsMeasurement: long getReceivedGpsTowInNs()> (SMS_MMS)
<android.media.session.ISession2TokensListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub: android.window.IDisplayAreaOrganizer getDefaultImpl()> (SMS_MMS)
<android.app.job.JobParameters: int getClipGrantFlags()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)> (SMS_MMS)
<android.util.EventLog$Event: int getUid()> (SMS_MMS)
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)> (SMS_MMS)
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getServiceType()> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: int getCharset()> (SMS_MMS)
<android.hardware.location.ContextHubClient: android.hardware.location.ContextHubInfo getAttachedHub()> (SMS_MMS)
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCountMax()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isActiveSubId(int)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)> (SMS_MMS)
<android.app.Instrumentation$ActivityMonitor: int getHits()> (SMS_MMS)
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener getDefaultImpl()> (SMS_MMS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.Context)> (SMS_MMS)
<android.app.UiAutomation: android.util.SparseArray getWindowsOnAllDisplays()> (SMS_MMS)
<android.hardware.SerialPort: int read(java.nio.ByteBuffer)> (SMS_MMS)
<android.util.apk.WrappedX509Certificate: byte[] getExtensionValue(java.lang.String)> (SMS_MMS)
<android.app.IAppTask$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()> (SMS_MMS)
<android.view.VerifiedMotionEvent: int getMetaState()> (SMS_MMS)
<com.android.internal.logging.InstanceId: int getId()> (SMS_MMS)
<android.app.NotificationChannel: java.lang.String getDescription()> (SMS_MMS)
<android.app.Instrumentation$ActivityMonitor: android.content.IntentFilter getFilter()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: java.lang.String[] getAutofillHints()> (SMS_MMS)
<android.app.Activity: boolean isOverlayWithDecorCaptionEnabled()> (SMS_MMS)
<android.view.contentcapture.DataRemovalRequest: java.util.List getLocusIdRequests()> (SMS_MMS)
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getLongestColorDimension()> (SMS_MMS)
<android.app.UiModeManager: java.time.LocalTime getCustomNightModeStart()> (SMS_MMS)
<android.app.blob.IBlobStoreManager$Stub$Proxy: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: int size()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOps: long getEndTimeMillis()> (SMS_MMS)
<android.net.NetworkPolicyManager$1: android.util.Pair next()> (SMS_MMS)
<com.google.android.mms.util.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (SMS_MMS)
<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction getTimeoutAction()> (SMS_MMS)
<android.telephony.TelephonyManager: int getLteOnCdmaMode(int)> (SMS_MMS)
<android.telephony.TelephonyManager: void access$200()> (SMS_MMS)
<android.view.ViewRootImpl: android.view.ViewRootImpl$GfxInfo getGfxInfo()> (SMS_MMS)
<android.media.MicrophoneInfo: int getIndexInTheGroup()> (SMS_MMS)
<android.media.MediaRouter: int getCategoryCount()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ContentProviderHolder: int describeContents()> (SMS_MMS)
<android.transition.ChangeBounds$3: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()> (SMS_MMS)
<android.app.Fragment: boolean isStateSaved()> (SMS_MMS)
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getFreqTimeReaderInstance()> (SMS_MMS)
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int available()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)> (SMS_MMS)
<android.text.method.WordIterator: int getBeginning(int)> (SMS_MMS)
<android.content.pm.PackageManager: android.os.Bundle getSuspendedPackageAppExtras()> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)> (SMS_MMS)
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> (SMS_MMS)
<android.content.IntentSender: int getCreatorUid()> (SMS_MMS)
<android.app.IActivityManager$Default: android.content.pm.ParceledListSlice getHistoricalProcessExitReasons(java.lang.String,int,int,int)> (SMS_MMS)
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplaySessionInfo getSessionInfo()> (SMS_MMS)
<android.app.trust.TrustManager: boolean isTrustUsuallyManaged(int)> (SMS_MMS)
<android.os.ZygoteProcess$ZygoteState: android.net.LocalSocket getUsapSessionSocket()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityButtonController getAccessibilityButtonController(int)> (SMS_MMS)
<android.accessibilityservice.AccessibilityServiceInfo: android.content.ComponentName getComponentName()> (SMS_MMS)
<android.graphics.drawable.RotateDrawable: float getFromDegrees()> (SMS_MMS)
<android.view.IRecentsAnimationRunner$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String getDescription()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getGlobalPrivateDnsMode(android.content.ComponentName)> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub: android.os.image.IDynamicSystemService getDefaultImpl()> (SMS_MMS)
<com.android.ims.internal.IImsUtListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$200(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)> (SMS_MMS)
<android.media.WebVttRenderingWidget$CueLayout: int access$000(android.media.WebVttRenderingWidget$CueLayout)> (SMS_MMS)
<android.widget.TextView: java.lang.String getFontFeatureSettings()> (SMS_MMS)
<android.app.usage.IUsageStatsManager$Stub: android.app.usage.IUsageStatsManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.INetworkScoreService$Stub$Proxy: java.util.List getAllValidScorers()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality(int)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int describeContents()> (SMS_MMS)
<android.media.AudioRecord: android.media.AudioFormat getFormat()> (SMS_MMS)
<android.hardware.location.NanoApp: int getAppVersion()> (SMS_MMS)
<android.graphics.PorterDuffColorFilter: int getColor()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)> (SMS_MMS)
<android.os.Parcel: int dataSize()> (SMS_MMS)
<android.location.LocationRequest: long getExpireIn()> (SMS_MMS)
<android.graphics.Picture: int getWidth()> (SMS_MMS)
<android.content.IClipboard$Stub: android.content.IClipboard getDefaultImpl()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: int getUserProvisioningState()> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getTotalBytes(java.lang.String)> (SMS_MMS)
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()> (SMS_MMS)
<android.os.UserManager: boolean isUserSwitcherEnabled()> (SMS_MMS)
<android.hardware.camera2.params.MandatoryStreamCombination: int hashCode()> (SMS_MMS)
<android.telephony.data.ApnSetting: java.util.List getApnTypes()> (SMS_MMS)
<android.os.VibrationAttributes: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVtSettingEnabled(int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: com.android.internal.telephony.euicc.IGetSmdsAddressCallback getDefaultImpl()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoOwner restoreOwner(android.os.Parcel)> (SMS_MMS)
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()> (SMS_MMS)
<android.view.KeyboardShortcutInfo: char getBaseCharacter()> (SMS_MMS)
<android.util.MapCollections$KeySet: int hashCode()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$8: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)> (SMS_MMS)
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()> (SMS_MMS)
<android.view.autofill.AutofillManager: android.service.autofill.FillEventHistory getFillEventHistory()> (SMS_MMS)
<android.app.backup.IBackupCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub$Proxy: android.app.timezone.RulesState getRulesState()> (SMS_MMS)
<android.app.IApplicationThread$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ApplicationPackageManager: boolean isAutoRevokeWhitelisted(java.lang.String)> (SMS_MMS)
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.timezone.IRulesManager$Stub: android.app.timezone.IRulesManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)> (SMS_MMS)
<com.android.internal.telephony.SmsHeader$MiscElt: boolean equals(java.lang.Object)> (SMS_MMS)
<android.hardware.HardwareBuffer: int describeContents()> (SMS_MMS)
<android.media.VolumeShaper$Configuration: float[] getVolumes()> (SMS_MMS)
<android.media.ExifInterface: double getAltitude(double)> (SMS_MMS)
<android.transition.ChangeTransform: boolean getReparent()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: int describeContents()> (SMS_MMS)
<android.net.wifi.nl80211.IWificond$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getSimOperator(int)> (SMS_MMS)
<android.app.LocalActivityManager: java.lang.String getCurrentId()> (SMS_MMS)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: com.android.internal.textservice.ISpellCheckerSessionListener getDefaultImpl()> (SMS_MMS)
<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()> (SMS_MMS)
<android.media.AudioGain: int stepValue()> (SMS_MMS)
<android.view.View: android.graphics.Matrix getInverseMatrix()> (SMS_MMS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.lang.String interfaceDescriptor()> (SMS_MMS)
<android.widget.Editor$SelectionHandleView: int getMagnifierHandleTrigger()> (SMS_MMS)
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> (SMS_MMS)
<android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)> (SMS_MMS)
<android.net.lowpan.LowpanCredential: int describeContents()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int getSourceResId()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: int getBubblePreferenceForPackage(java.lang.String,int)> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String[] getBackgroundThrottlingWhitelist()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.view.autofill.AutofillId getAutofillId()> (SMS_MMS)
<android.app.contentsuggestions.ClassificationsRequest: int describeContents()> (SMS_MMS)
<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()> (SMS_MMS)
<android.telephony.NetworkScanRequest$1: android.telephony.NetworkScanRequest createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.os.IPowerManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.IJobCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String convertToEmergencyNumber(android.content.Context,java.lang.String)> (SMS_MMS)
<android.os.image.DynamicSystemManager: boolean isEnabled()> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub: com.android.internal.app.IAppOpsActiveCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getScreenCaptureDisabled(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.os.BaseBundle: int size()> (SMS_MMS)
<com.android.internal.telephony.SmsAddress: boolean isNetworkSpecific()> (SMS_MMS)
<android.os.UserHandle: int getUserId(int)> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.pm.IDexModuleRegisterCallback$Stub: android.content.pm.IDexModuleRegisterCallback getDefaultImpl()> (SMS_MMS)
<android.app.PropertyInvalidatedCache: java.lang.String cacheName()> (SMS_MMS)
<android.app.Fragment: java.lang.CharSequence getText(int)> (SMS_MMS)
<android.hardware.cas.V1_1.ICasListener$Stub: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.telephony.CellIdentityGsm: java.util.Set getAdditionalPlmns()> (SMS_MMS)
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: java.util.List getRadioChainInfos()> (SMS_MMS)
<android.app.Activity: android.app.ActivityThread getActivityThread()> (SMS_MMS)
<android.service.carrier.CarrierIdentifier: java.lang.String getMcc()> (SMS_MMS)
<android.os.BatterySaverPolicyConfig: boolean getForceAllAppsStandby()> (SMS_MMS)
<android.app.Notification$BubbleMetadata: int getFlags()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)> (SMS_MMS)
<android.util.AtomicFile: java.io.File getBaseFile()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isTetheringApnRequired()> (SMS_MMS)
<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()> (SMS_MMS)
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.PendingInsetsController: int getSystemBarsAppearance()> (SMS_MMS)
<com.android.internal.os.RuntimeInit: int access$200(java.lang.String,java.lang.String,java.lang.Throwable)> (SMS_MMS)
<android.os.CpuUsageInfo: long getTotal()> (SMS_MMS)
<android.os.IUserManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()> (SMS_MMS)
<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()> (SMS_MMS)
<com.android.internal.util.MimeIconUtils: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)> (SMS_MMS)
<android.media.AudioManager: java.lang.Object access$800(android.media.AudioManager)> (SMS_MMS)
<android.media.tv.tunerresourcemanager.CasSessionRequest: int getClientId()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: java.lang.String getInfo()> (SMS_MMS)
<android.graphics.RenderNode: int getRight()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getForceEphemeralUsers(android.content.ComponentName)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState: int describeContents()> (SMS_MMS)
<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)> (SMS_MMS)
<android.view.ViewGroup: int getChildDrawingOrder(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.telephony.ims.aidl.IImsCallSessionListener getDefaultImpl()> (SMS_MMS)
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()> (SMS_MMS)
<android.view.IDisplayWindowRotationController$Stub: android.view.IDisplayWindowRotationController asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSubscriptionServiceRegisterer()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.face.FaceManager: java.util.List getEnrolledFaces()> (SMS_MMS)
<android.provider.DeviceConfig$Properties: int getInt(java.lang.String,int)> (SMS_MMS)
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.telephony.SubscriptionInfo: int getCarrierId()> (SMS_MMS)
<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()> (SMS_MMS)
<android.media.Tokenizer$TagTokenizer: android.media.Tokenizer$TokenizerPhase start()> (SMS_MMS)
<android.widget.RemoteViews: android.graphics.Rect getSourceBounds(android.view.View)> (SMS_MMS)
<android.app.blob.LeaseInfo: java.lang.String getPackageName()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: int getNameResId()> (SMS_MMS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (SMS_MMS)
<android.hardware.radio.IRadioService$Default: java.util.List listModules()> (SMS_MMS)
<android.text.DynamicLayout: int getEllipsisStart(int)> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getCredentialTypeForUser(int)> (SMS_MMS)
<android.telephony.AvailableNetworkInfo: int describeContents()> (SMS_MMS)
<android.location.GnssSingleSatCorrection: int getSatelliteId()> (SMS_MMS)
<android.widget.TextView: android.text.style.URLSpan[] getUrls()> (SMS_MMS)
<android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)> (SMS_MMS)
<android.os.Environment: java.io.File getDataDirectory()> (SMS_MMS)
<android.hardware.ICameraService$Stub: android.hardware.ICameraService asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.slice.SliceSpec: int getRevision()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.IpSecConfig: android.net.Network getNetwork()> (SMS_MMS)
<android.view.IWindowSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.fingerprint.FingerprintManager: long preEnroll()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: int getPackageProcessState(java.lang.String,java.lang.String)> (SMS_MMS)
<android.widget.Toolbar: com.android.internal.widget.DecorToolbar getWrapper()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmiForSubscriber(int,java.lang.String)> (SMS_MMS)
<android.content.res.AssetManager: java.lang.CharSequence getPooledStringForCookie(int,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.LocationManager$LocationListenerTransport: java.lang.String getListenerId()> (SMS_MMS)
<android.system.suspend.ISuspendCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int describeContents()> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetBottom(int)> (SMS_MMS)
<android.hardware.face.IFaceService$Stub$Proxy: long getAuthenticatorId(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()> (SMS_MMS)
<android.view.accessibility.IWindowMagnificationConnection$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.INotificationManager$Default: java.util.List getEnabledNotificationListeners(int)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: int getReportAllowed()> (SMS_MMS)
<android.service.vr.IPersistentVrStateCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: int[] getAppWidgetIdsForHost(java.lang.String,int)> (SMS_MMS)
<android.view.KeyEvent: char getMatch(char[],int)> (SMS_MMS)
<android.widget.TextView: android.os.LocaleList getTextLocales()> (SMS_MMS)
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getReceivers()> (SMS_MMS)
<android.widget.Spinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> (SMS_MMS)
<android.hardware.radio.V1_4.CellInfo$Info$hidl_discriminator: java.lang.String getName(byte)> (SMS_MMS)
<com.android.internal.view.menu.CascadingMenuPopup: android.widget.ListView getListView()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.Country: int getSource()> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()> (SMS_MMS)
<android.os.UserManager: java.util.List getUsers(boolean,boolean,boolean)> (SMS_MMS)
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)> (SMS_MMS)
<android.service.notification.ZenPolicy: int hashCode()> (SMS_MMS)
<android.hardware.radio.ProgramSelector: int hashCode()> (SMS_MMS)
<android.widget.Toast: float getHorizontalMargin()> (SMS_MMS)
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.CameraCharacteristics access$1200(android.hardware.camera2.legacy.RequestThreadManager)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration$MarshalerStreamConfigurationDuration: int getNativeSize()> (SMS_MMS)
<android.view.ViewConfiguration: int getScaledScrollBarSize()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCallBarring(int,int,java.lang.String[])> (SMS_MMS)
<android.media.MediaRoute2Info: android.net.Uri getIconUri()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.dex.ArtManager getArtManager()> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: boolean getPosForTime(long,float[])> (SMS_MMS)
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)> (SMS_MMS)
<com.android.internal.view.menu.MenuAdapter: boolean getForceShowIcon()> (SMS_MMS)
<android.view.View: int computeHorizontalScrollOffset()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()> (SMS_MMS)
<android.net.ITestNetworkManager$Default: android.net.TestNetworkInterface createTapInterface()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.os.PersistableBundle getStallDetails()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getSystemPowerWhitelistExceptIdle()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)> (SMS_MMS)
<android.view.SurfaceControl: android.hardware.display.DisplayedContentSamplingAttributes getDisplayedContentSamplingAttributes(android.os.IBinder)> (SMS_MMS)
<android.graphics.drawable.LayerDrawable: int getLayerInsetTop(int)> (SMS_MMS)
<android.app.IUiModeManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.camera2.params.OisSample: float getXshift()> (SMS_MMS)
<android.app.IServiceConnection$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.Size: int hashCode()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.app.Service: java.lang.String getClassName()> (SMS_MMS)
<android.telephony.ims.ImsCallProfile: int getEmergencyCallRouting()> (SMS_MMS)
<android.os.storage.StorageVolume: java.lang.String getState()> (SMS_MMS)
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getOriginalState()> (SMS_MMS)
<android.hardware.ICameraClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getDescription()> (SMS_MMS)
<android.location.LocationManager: boolean isLocationEnabledForUser(android.os.UserHandle)> (SMS_MMS)
<android.view.textclassifier.TextLinks: int describeContents()> (SMS_MMS)
<android.media.RoutingSessionInfo: int hashCode()> (SMS_MMS)
<android.widget.Editor: int getCurrentLineAdjustedForSlop(android.text.Layout,int,float)> (SMS_MMS)
<android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.os.BasicShellCommandHandler: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[])> (SMS_MMS)
<android.graphics.Region: int describeContents()> (SMS_MMS)
<android.net.IpConfiguration: int hashCode()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.AudioAttributes: int describeContents()> (SMS_MMS)
<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.RenderNode: float getTranslationX()> (SMS_MMS)
<android.app.ActivityOptions: boolean getAvoidMoveToFront()> (SMS_MMS)
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()> (SMS_MMS)
<com.android.internal.app.IBatteryStats$Default: byte[] getStatistics()> (SMS_MMS)
<android.graphics.SurfaceTexture: long getTimestamp()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent: int getEventType()> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isActiveSubscriptionId(int)> (SMS_MMS)
<android.widget.TextView: int getMaxHeight()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IUserManager$Default: android.content.pm.UserInfo findCurrentGuestUser()> (SMS_MMS)
<android.telephony.SubscriptionPlan$1: android.telephony.SubscriptionPlan[] newArray(int)> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.os.IncidentManager$PendingReport: long getTimestamp()> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getRule()> (SMS_MMS)
<android.hardware.usb.UsbEndpoint: int describeContents()> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.view.View getCustomView()> (SMS_MMS)
<android.telephony.CellIdentityLte: int getBandwidth()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isEnabled()> (SMS_MMS)
<android.telephony.ClientRequestStats$1: void <init>()> (SMS_MMS)
<android.view.InputDevice$MotionRange: int getAxis()> (SMS_MMS)
<android.content.Intent$FilterComparison: android.content.Intent getIntent()> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: java.util.List getAllStackInfos()> (SMS_MMS)
<android.content.pm.IDataLoaderManager$Stub$Proxy: android.content.pm.IDataLoader getDataLoader(int)> (SMS_MMS)
<android.text.StaticLayout: int getIndentAdjust(int,android.text.Layout$Alignment)> (SMS_MMS)
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> (SMS_MMS)
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeUidSnapshot(int)> (SMS_MMS)
<android.app.usage.UsageStats: java.lang.String getPackageName()> (SMS_MMS)
<android.media.session.PlaybackState: long getLastPositionUpdateTime()> (SMS_MMS)
<android.os.incremental.IncrementalManager: byte[] unsafeGetFileSignature(java.lang.String)> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getEcNo()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean doesSwitchMultiSimConfigTriggerReboot()> (SMS_MMS)
<android.app.FragmentManagerImpl: int getBackStackEntryCount()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int)> (SMS_MMS)
<android.media.MediaDrm$KeyStatus: int getStatusCode()> (SMS_MMS)
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeByQualifiedUuid(java.lang.String)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isLogoutEnabled()> (SMS_MMS)
<android.hardware.location.IContextHubClient$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma$1: android.telephony.CellSignalStrengthWcdma[] newArray(int)> (SMS_MMS)
<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId getSessionId()> (SMS_MMS)
<android.media.tv.TvInputManager$Session: android.os.IBinder getToken()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)> (SMS_MMS)
<android.service.oemlock.IOemLockService$Default: java.lang.String getLockName()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getBitErrorRate()> (SMS_MMS)
<android.app.Instrumentation: android.os.Bundle getAllocCounts()> (SMS_MMS)
<android.app.slice.SliceItem: java.lang.String getSubType()> (SMS_MMS)
<android.accounts.Account: int hashCode()> (SMS_MMS)
<android.transition.Slide$CalculateSlideHorizontal: float getGoneY(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)> (SMS_MMS)
<android.media.session.ISessionManager$Stub$Proxy: boolean isGlobalPriorityActive()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.Paint: android.graphics.BlendMode getBlendMode()> (SMS_MMS)
<android.hardware.display.IDisplayManager$Default: android.hardware.display.Curve getMinimumBrightnessCurve()> (SMS_MMS)
<android.telephony.TelephonyManager: int getCdmaRoamingMode()> (SMS_MMS)
<android.app.job.IJobCallback$Stub: android.app.job.IJobCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.window.IWindowContainerTransactionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.media.MediaFormat: int getInteger(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.util.DrmConvertSession: byte[] convert(byte[],int)> (SMS_MMS)
<android.app.IAppTask$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: java.lang.String getNamespacePrefix(int)> (SMS_MMS)
<android.util.ArrayMap: int size()> (SMS_MMS)
<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()> (SMS_MMS)
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.PinSet getPins()> (SMS_MMS)
<android.location.GnssClock: int getReferenceConstellationTypeForIsb()> (SMS_MMS)
<android.widget.RemoteViews$RemoteViewsContextWrapper: android.content.res.Resources getResources()> (SMS_MMS)
<android.media.MediaHTTPConnection: java.lang.String getUri()> (SMS_MMS)
<android.hardware.usb.UsbDevice: boolean getHasAudioCapture()> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()> (SMS_MMS)
<android.app.ContextImpl: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)> (SMS_MMS)
<android.app.ITransientNotification$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.TextView: int getCompoundPaddingRight()> (SMS_MMS)
<android.window.IWindowContainerToken$Stub: android.window.IWindowContainerToken asInterface(android.os.IBinder)> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$EventTiming: long getTime()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getStackInfo(int,int)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.lang.String getId()> (SMS_MMS)
<android.os.IInstalld$Stub$Proxy: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)> (SMS_MMS)
<android.media.soundtrigger_middleware.PhraseRecognitionExtra: int describeContents()> (SMS_MMS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayAutoModeRaw()> (SMS_MMS)
<android.text.style.AccessibilityClickableSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: com.android.internal.telephony.euicc.ICancelSessionCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo access$000(java.lang.String,int,int)> (SMS_MMS)
<android.hardware.display.IDisplayManager$Stub$Proxy: int getPreferredWideGamutColorSpaceId()> (SMS_MMS)
<android.hardware.ISensorPrivacyManager$Stub: android.hardware.ISensorPrivacyManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textclassifier.TextClassification$Request: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.AudioManager: long getMaxAdditionalOutputDeviceDelay(android.media.AudioDeviceInfo)> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.ViewRootImpl: int getHeight()> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.textclassifier.TextLanguage: int describeContents()> (SMS_MMS)
<android.hardware.usb.ParcelableUsbPort: android.hardware.usb.UsbPort getUsbPort(android.hardware.usb.UsbManager)> (SMS_MMS)
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.View: int getTop()> (SMS_MMS)
<android.app.WallpaperColors: int describeContents()> (SMS_MMS)
<android.provider.DeviceConfig$Properties: long getLong(java.lang.String,long)> (SMS_MMS)
<android.app.role.IRoleController$Stub: android.app.role.IRoleController asInterface(android.os.IBinder)> (SMS_MMS)
<android.security.KeyStore$KeystoreResultPromise: java.util.concurrent.CompletableFuture getFuture()> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: int getLockTaskModeState()> (SMS_MMS)
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size getLargestSupportedJpegSizeByArea(android.hardware.Camera$Parameters)> (SMS_MMS)
<android.permission.IPermissionManager$Default: int checkUidPermission(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCdmaRoamingMode(int)> (SMS_MMS)
<android.app.IUidObserver$Stub: android.app.IUidObserver getDefaultImpl()> (SMS_MMS)
<android.location.Location: android.os.Bundle getExtras()> (SMS_MMS)
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype get(int)> (SMS_MMS)
<android.content.res.Resources: float getDimension(int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)> (SMS_MMS)
<android.net.ProxyInfo: int getPort()> (SMS_MMS)
<android.os.PatternMatcher: java.lang.String getPath()> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: int getDataBlockSize()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: boolean isActiveNetworkMetered()> (SMS_MMS)
<android.view.View$13: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.view.ViewOverlay: boolean isEmpty()> (SMS_MMS)
<com.android.internal.telephony.IMms$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.hdmi.IHdmiControlService$Default: int getPhysicalAddress()> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.media.session.MediaController$PlaybackInfo getVolumeAttributes()> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: int getNameResId()> (SMS_MMS)
<android.app.contentsuggestions.IClassificationsCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.incremental.IIncrementalServiceConnector$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.app.Notification: java.lang.String getChannel()> (SMS_MMS)
<android.view.animation.AnimationSet: long getDuration()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.IWindowManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfiguration: int getWidth()> (SMS_MMS)
<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeId()> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()> (SMS_MMS)
<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()> (SMS_MMS)
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> (SMS_MMS)
<android.os.UserManager: java.util.List getUsers(boolean)> (SMS_MMS)
<android.content.IntentSender: int describeContents()> (SMS_MMS)
<android.view.KeyEvent: long getEventTime()> (SMS_MMS)
<android.telephony.CallForwardingInfo: java.lang.String getNumber()> (SMS_MMS)
<android.media.ExifInterface$1: long getSize()> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: com.android.internal.appwidget.IAppWidgetHost getDefaultImpl()> (SMS_MMS)
<android.app.NotificationChannel: int getAllowBubbles()> (SMS_MMS)
<com.android.internal.telephony.ISms$Default: boolean isSmsSimPickActivityNeeded(int)> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.location.ICountryListener$Stub: android.location.ICountryListener getDefaultImpl()> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: int getProxyUid()> (SMS_MMS)
<android.widget.ScrollBarDrawable: int getSize(boolean)> (SMS_MMS)
<android.view.ViewRootImpl: int getDisplayId()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getCallState()> (SMS_MMS)
<android.appwidget.AppWidgetHostView: int getAppWidgetId()> (SMS_MMS)
<android.text.TextUtils$StringWithRemovedChars: int length()> (SMS_MMS)
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)> (SMS_MMS)
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)> (SMS_MMS)
<android.os.Bundle: byte getByte(java.lang.String)> (SMS_MMS)
<android.security.keystore.IKeystoreResponseCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: float getCameraDistance()> (SMS_MMS)
<android.text.style.TabStopSpan$Standard: int getTabStop()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getDeviceOwnerUserId()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNode: int getTextBackgroundColor()> (SMS_MMS)
<android.security.NetworkSecurityPolicy: android.security.net.config.ApplicationConfig getApplicationConfigForPackage(android.content.Context,java.lang.String)> (SMS_MMS)
<android.telephony.CellIdentityLte: android.telephony.CellIdentity sanitizeLocationInfo()> (SMS_MMS)
<android.service.notification.ZenPolicy: int getPriorityCategoryAlarms()> (SMS_MMS)
<android.os.Debug$MemoryInfo: int getTotalSharedDirty()> (SMS_MMS)
<android.content.res.ResourcesImpl: void getValue(java.lang.String,android.util.TypedValue,boolean)> (SMS_MMS)
<android.service.notification.Adjustment: java.lang.String getKey()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getExclusiveGroupId()> (SMS_MMS)
<android.media.tv.tunerresourcemanager.CasSessionRequest: int getCasSystemId()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArraySet getAllowImplicitBroadcasts()> (SMS_MMS)
<android.view.InputQueue: long getNativePtr()> (SMS_MMS)
<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.app.IAppOpsActiveCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()> (SMS_MMS)
<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])> (SMS_MMS)
<android.graphics.GraphicBuffer: int getUsage()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractor$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isOpportunisticNetworkEnabled()> (SMS_MMS)
<android.view.accessibility.AccessibilityRequestPreparer: int getAccessibilityViewId()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: android.content.Intent getDataManagementIntentForUser(int,java.lang.String)> (SMS_MMS)
<android.os.IUserManager$Stub$Proxy: int getUserSerialNumber(int)> (SMS_MMS)
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$SphericalCorrections getPhaseCenterVariationCorrections()> (SMS_MMS)
<android.content.RestrictionEntry: java.lang.String getTitle()> (SMS_MMS)
<android.telephony.CarrierRestrictionRules: java.util.List access$300(android.telephony.CarrierRestrictionRules)> (SMS_MMS)
<android.widget.ToastPresenter: java.lang.String getPackageName()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getKernelUsedSize()> (SMS_MMS)
<android.view.IRotationWatcher$Stub: android.view.IRotationWatcher getDefaultImpl()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getCdmaMin()> (SMS_MMS)
<android.view.textclassifier.TextSelection$Request: android.os.LocaleList getDefaultLocales()> (SMS_MMS)
<android.app.backup.BackupAgent: android.os.IBinder onBind()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: long getRequiredStrongAuthTimeout(android.content.ComponentName)> (SMS_MMS)
<android.os.IUserRestrictionsListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.IWindowSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.ims.internal.IImsEcbm$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.om.IOverlayManager$Stub$Proxy: java.util.Map getAllOverlays(int)> (SMS_MMS)
<android.hardware.camera2.impl.CameraDeviceImpl: int access$502(android.hardware.camera2.impl.CameraDeviceImpl,int)> (SMS_MMS)
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()> (SMS_MMS)
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)> (SMS_MMS)
<android.text.style.ForegroundColorSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.net.ITestNetworkManager$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.AudioManager: boolean isWiredHeadsetOn()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Stub$Proxy: byte[] getMetadataByPath(int,java.lang.String)> (SMS_MMS)
<android.telephony.euicc.EuiccManager: boolean isEnabled()> (SMS_MMS)
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.app.AppOpsManager$OpEntry: long getLastForegroundDuration(int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VClipPath: long getNativePtr()> (SMS_MMS)
<android.view.WindowId: int hashCode()> (SMS_MMS)
<android.location.IGnssNavigationMessageListener$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getByteBuffer(java.nio.ByteBuffer,int)> (SMS_MMS)
<android.view.ViewConfiguration: long getScreenshotChordKeyTimeout()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: int getSignalMbm()> (SMS_MMS)
<android.view.DisplayAddress$Physical: int hashCode()> (SMS_MMS)
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetails(int,java.lang.String,long,long)> (SMS_MMS)
<android.service.notification.SnoozeCriterion: java.lang.CharSequence getExplanation()> (SMS_MMS)
<android.os.Vibrator: int areAllEffectsSupported(int[])> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean switchSlots(int[])> (SMS_MMS)
<android.hardware.camera2.utils.SurfaceUtils: long getSurfaceId(android.view.Surface)> (SMS_MMS)
<android.net.Uri: java.lang.String access$600()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.VpnConfig getVpnConfig(int)> (SMS_MMS)
<android.app.Notification$BigTextStyle: java.lang.CharSequence getBigText()> (SMS_MMS)
<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: java.util.List getSystemRoutes()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.text.DynamicLayout: int getLineStart(int)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.PackageParser$Package: java.util.List getAllCodePathsExcludingResourceOnly()> (SMS_MMS)
<android.app.blob.IBlobStoreSession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.Tokenizer: int access$108(android.media.Tokenizer)> (SMS_MMS)
<android.os.storage.VolumeInfo: java.io.File getPath()> (SMS_MMS)
<android.app.IUiAutomationConnection$Stub$Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(int)> (SMS_MMS)
<android.util.ArraySet: int hashCode()> (SMS_MMS)
<android.app.IActivityManager$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()> (SMS_MMS)
<android.net.IConnectivityManager$Default: android.net.LinkProperties getLinkProperties(android.net.Network)> (SMS_MMS)
<android.text.style.TextAppearanceSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()> (SMS_MMS)
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> (SMS_MMS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int getModelState(android.os.ParcelUuid)> (SMS_MMS)
<android.telephony.CellInfoWcdma: android.telephony.CellSignalStrength getCellSignalStrength()> (SMS_MMS)
<android.hardware.radio.RadioManager$ProgramInfo: int getChannel()> (SMS_MMS)
<android.widget.CompoundButton: java.lang.CharSequence getButtonStateDescription()> (SMS_MMS)
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)> (SMS_MMS)
<android.animation.AnimationHandler$MyFrameCallbackProvider: long getFrameTime()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)> (SMS_MMS)
<android.graphics.drawable.AnimatedImageDrawable: android.graphics.ColorFilter getColorFilter()> (SMS_MMS)
<android.widget.ArrayAdapter: android.widget.Filter getFilter()> (SMS_MMS)
<android.content.UndoManager: android.content.UndoOperation getLastOperation(android.content.UndoOwner,int)> (SMS_MMS)
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getOrganizationName(android.content.ComponentName)> (SMS_MMS)
<android.app.Notification$TvExtender: android.app.PendingIntent getDeleteIntent()> (SMS_MMS)
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)> (SMS_MMS)
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getNextFocusDownId()> (SMS_MMS)
<com.android.internal.os.KernelSingleUidTimeReader$Injector: byte[] readData(java.lang.String)> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int updateCallForward(int,int,java.lang.String,int,int)> (SMS_MMS)
<android.os.INetworkManagementService$Default: android.net.NetworkStats getNetworkStatsTethering(int)> (SMS_MMS)
<android.app.KeyguardManager: android.view.IWindowManager access$100(android.app.KeyguardManager)> (SMS_MMS)
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()> (SMS_MMS)
<com.android.internal.app.AlertController: int access$1000(com.android.internal.app.AlertController)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: byte[] getBytes(java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.IApInterface$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.PathKeyframes$3: int getIntValue(float)> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.hardware.biometrics.IBiometricServiceReceiverInternal getDefaultImpl()> (SMS_MMS)
<com.android.ims.internal.IImsVideoCallCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: int getRegistrationTechnology()> (SMS_MMS)
<android.os.BatteryStats$Timer: long getTotalDurationMsLocked(long)> (SMS_MMS)
<android.app.RemoteInput: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.app.Notification$Builder: int access$4400(android.app.Notification$Builder)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getSetupWizardPackageName()> (SMS_MMS)
<android.view.MotionEvent: float getX()> (SMS_MMS)
<android.media.IMediaRouterClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getMappedNames()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)> (SMS_MMS)
<android.net.NetworkRequest: java.lang.String getRequestorPackageName()> (SMS_MMS)
<android.text.Layout: float getSecondaryHorizontal(int,boolean)> (SMS_MMS)
<android.content.res.Resources$Theme: java.lang.String[] getTheme()> (SMS_MMS)
<android.os.BaseBundle: android.util.ArrayMap getMap()> (SMS_MMS)
<com.android.internal.util.StateMachine: java.lang.String getName()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$8: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int[] getDigestPrefix()> (SMS_MMS)
<android.hardware.lights.Light: int hashCode()> (SMS_MMS)
<android.view.MotionEvent: float getAxisValue(int,int)> (SMS_MMS)
<android.content.pm.SharedLibraryInfo: java.util.List getAllCodePaths()> (SMS_MMS)
<android.net.lowpan.ILowpanManagerListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.SurfaceControl: int getActiveColorMode(android.os.IBinder)> (SMS_MMS)
<android.media.tv.TvTrackInfo: float getVideoPixelAspectRatio()> (SMS_MMS)
<android.location.ILocationManager$Stub$Proxy: int getGnssBatchSize(java.lang.String)> (SMS_MMS)
<android.text.style.AlignmentSpan$Standard: android.text.Layout$Alignment getAlignment()> (SMS_MMS)
<android.provider.DocumentsContract$Path: int hashCode()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: int hashCode()> (SMS_MMS)
<android.hardware.camera2.legacy.GLThreadManager: android.graphics.SurfaceTexture getCurrentSurfaceTexture()> (SMS_MMS)
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()> (SMS_MMS)
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultVoiceSubscriptionInfo()> (SMS_MMS)
<android.net.NetworkIdentity: int hashCode()> (SMS_MMS)
<android.view.ViewConfiguration: long getAccessibilityShortcutKeyTimeout()> (SMS_MMS)
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.Window: android.transition.Transition getReturnTransition()> (SMS_MMS)
<android.app.RemoteInput: int getEditChoicesBeforeSending()> (SMS_MMS)
<android.view.InsetsSourceConsumer: boolean isRequestedVisibleAwaitingControl()> (SMS_MMS)
<android.content.res.AssetManager: int getResourceArray(int,int[])> (SMS_MMS)
<android.content.res.ResourcesImpl: java.lang.CharSequence getQuantityText(int,int)> (SMS_MMS)
<android.hardware.face.IFaceService$Stub: android.hardware.face.IFaceService getDefaultImpl()> (SMS_MMS)
<android.net.ITetheredInterfaceCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.Activity: android.view.View getCurrentFocus()> (SMS_MMS)
<android.location.GnssClock: long getFullBiasNanos()> (SMS_MMS)
<android.view.InsetsAnimationThreadControlRunner: int getTypes()> (SMS_MMS)
<android.os.INetworkManagementService$Stub$Proxy: boolean isBandwidthControlEnabled()> (SMS_MMS)
<android.location.Address: java.lang.String getFeatureName()> (SMS_MMS)
<android.widget.TextView: java.util.Locale getTextServicesLocale()> (SMS_MMS)
<android.text.Annotation: java.lang.String getValue()> (SMS_MMS)
<android.app.prediction.IPredictionManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getStorageEncryptionStatus(java.lang.String,int)> (SMS_MMS)
<android.hardware.ICameraService$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getCallState(int)> (SMS_MMS)
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IntentFilter: java.util.List dataTypes()> (SMS_MMS)
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUser(java.util.UUID,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataActivityForSubId(int)> (SMS_MMS)
<android.media.AudioTrack: android.media.AudioDeviceInfo getRoutedDevice()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo$PortInfo: java.lang.String getName()> (SMS_MMS)
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialTextBeforeCursor(int,int)> (SMS_MMS)
<android.window.WindowContainerTransaction: java.util.Map getChanges()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDominantSwatch()> (SMS_MMS)
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)> (SMS_MMS)
<android.app.IStopUserCallback$Stub: android.app.IStopUserCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.hardware.Sensor: java.lang.String getVendor()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int getDbm()> (SMS_MMS)
<android.ddm.DdmHandleAppName$Names: java.lang.String getPkgName()> (SMS_MMS)
<android.hardware.usb.UsbPortStatus: int describeContents()> (SMS_MMS)
<android.telephony.CellIdentityCdma: void updateGlobalCellId()> (SMS_MMS)
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)> (SMS_MMS)
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()> (SMS_MMS)
<android.app.servertransaction.StopActivityItem: int getTargetState()> (SMS_MMS)
<android.text.style.SuggestionSpan: java.lang.String getLocale()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.transition.Slide$2: float getGoneX(android.view.ViewGroup,android.view.View,float)> (SMS_MMS)
<android.view.textclassifier.EntityConfidence: java.util.List getEntities()> (SMS_MMS)
<android.hardware.radio.RadioMetadata: java.lang.String getKeyFromNativeKey(int)> (SMS_MMS)
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)> (SMS_MMS)
<android.content.res.CompatibilityInfo: int describeContents()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getImsProvisioningInt(int,int)> (SMS_MMS)
<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.location.IGnssStatusListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: int getMinMatchForTest()> (SMS_MMS)
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm[] newArray(int)> (SMS_MMS)
<android.app.timedetector.TelephonyTimeSuggestion: int describeContents()> (SMS_MMS)
<android.content.pm.parsing.component.ParsedActivity: int getScreenOrientation()> (SMS_MMS)
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> (SMS_MMS)
<android.view.accessibility.AccessibilityManager: java.lang.Object access$100(android.view.accessibility.AccessibilityManager)> (SMS_MMS)
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.drawable.Drawable: int[] getState()> (SMS_MMS)
<android.telephony.CellIdentity: int inRangeOrUnavailable(int,int,int,int)> (SMS_MMS)
<android.os.storage.IStorageManager$Default: android.os.storage.DiskInfo[] getDisks()> (SMS_MMS)
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)> (SMS_MMS)
<android.os.IRemoteCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.companion.CompanionDeviceManager: android.app.Activity access$100(android.companion.CompanionDeviceManager)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: com.android.internal.telephony.euicc.IGetEuiccChallengeCallback getDefaultImpl()> (SMS_MMS)
<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)> (SMS_MMS)
<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: boolean isCallScreeningModeSupported()> (SMS_MMS)
<android.hardware.camera2.marshal.MarshalRegistry$MarshalToken: int hashCode()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService$ScreenshotResult: long getTimestamp()> (SMS_MMS)
<com.android.internal.widget.ILockSettings$Default: java.lang.String getKey(java.lang.String)> (SMS_MMS)
<android.telephony.SignalStrength: int describeContents()> (SMS_MMS)
<android.widget.AdapterViewAnimator: java.lang.CharSequence getAccessibilityClassName()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: int hashCode()> (SMS_MMS)
<android.content.pm.LauncherApps: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,android.os.UserHandle)> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable: int getAlpha()> (SMS_MMS)
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)> (SMS_MMS)
<android.app.usage.StorageStatsManager: long getCacheBytes(java.util.UUID)> (SMS_MMS)
<android.media.MediaPlayer: int playerSetAuxEffectSendLevel(boolean,float)> (SMS_MMS)
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.ParcelableColorSpace: long getNativeInstance()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getLine1Number(int)> (SMS_MMS)
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.VolumeInfo[] getVolumes(int)> (SMS_MMS)
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: boolean isSearching()> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String getDefaultBrowser(int)> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: boolean getAllowReturnTransitionOverlap()> (SMS_MMS)
<android.media.AudioMetadata$BaseMap: int size()> (SMS_MMS)
<android.hardware.Sensor: int getType()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String[] getNamesForUids(int[])> (SMS_MMS)
<android.security.net.config.UserCertificateSource$NoPreloadHolder: android.security.net.config.UserCertificateSource access$100()> (SMS_MMS)
<android.os.incremental.IIncrementalService$Default: int makeLink(int,java.lang.String,int,java.lang.String)> (SMS_MMS)
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)> (SMS_MMS)
<android.location.ILocationManager$Default: java.lang.String getGnssHardwareModelName()> (SMS_MMS)
<android.media.IPlaybackConfigDispatcher$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.accessibilityservice.GestureDescription$StrokeDescription: long getStartTime()> (SMS_MMS)
<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation getOrientation()> (SMS_MMS)
<android.app.backup.IRestoreSession$Default: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)> (SMS_MMS)
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()> (SMS_MMS)
<android.app.NotificationChannelGroup: int describeContents()> (SMS_MMS)
<android.graphics.drawable.RotateDrawable: float getPivotY()> (SMS_MMS)
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$MagnificationController getMagnificationController()> (SMS_MMS)
<android.text.BoringLayout: int getEllipsizedWidth()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: long getUnsignedInt(int,long)> (SMS_MMS)
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: long getForegroundActivityTotalTimeUs(android.os.BatteryStats$Uid,long)> (SMS_MMS)
<android.view.Window: android.content.Context getContext()> (SMS_MMS)
<android.internal.hidl.base.V1_0.IBase$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()> (SMS_MMS)
<android.content.ContextWrapper: android.view.Display getDisplay()> (SMS_MMS)
<android.media.tv.TvStreamConfig: int access$202(android.media.tv.TvStreamConfig,int)> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)> (SMS_MMS)
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Request: android.os.Bundle getExtras()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.util.List getAdditionalPeople()> (SMS_MMS)
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getVerticalTrackDrawable()> (SMS_MMS)
<android.renderscript.Long2: long get(int)> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getVisibility()> (SMS_MMS)
<android.content.pm.PackageParser$Package: long getLatestForegroundPackageUseTimeInMills()> (SMS_MMS)
<android.view.KeyEvent: long getEventTimeNano()> (SMS_MMS)
<android.telephony.CellIdentityLte: int hashCode()> (SMS_MMS)
<android.app.Activity: android.view.MenuInflater getMenuInflater()> (SMS_MMS)
<com.android.internal.os.HandlerCaller: android.os.Handler getHandler()> (SMS_MMS)
<android.view.inputmethod.InputMethodInfo: int describeContents()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSnoozeCriteria()> (SMS_MMS)
<android.hardware.face.FaceManager: android.os.Handler access$000(android.hardware.face.FaceManager)> (SMS_MMS)
<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalOp: int getOpCode()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)> (SMS_MMS)
<android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)> (SMS_MMS)
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)> (SMS_MMS)
<android.os.BaseBundle: short[] getShortArray(java.lang.String)> (SMS_MMS)
<android.view.View$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<com.android.internal.net.VpnProfile: int describeContents()> (SMS_MMS)
<android.app.ActivityTransitionCoordinator: android.transition.Transition configureTransition(android.transition.Transition,boolean)> (SMS_MMS)
<android.telephony.CellInfoNr: android.telephony.CellIdentity getCellIdentity()> (SMS_MMS)
<android.hardware.display.DisplayedContentSamplingAttributes: int getDataspace()> (SMS_MMS)
<android.net.wifi.nl80211.NativeScanResult: byte[] getSsid()> (SMS_MMS)
<android.view.inputmethod.ExtractedText: int describeContents()> (SMS_MMS)
<android.widget.Editor$HandleView: int getOffsetAtCoordinate(android.text.Layout,int,float)> (SMS_MMS)
<android.app.PendingIntent: int describeContents()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getTextureSize(android.graphics.SurfaceTexture)> (SMS_MMS)
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> (SMS_MMS)
<android.content.pm.PackageInstaller: java.util.List getMySessions()> (SMS_MMS)
<android.app.IUiModeManager$Default: long getCustomNightModeEnd()> (SMS_MMS)
<android.content.pm.InstantAppResolveInfo: int getVersionCode()> (SMS_MMS)
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getUserPowerWhitelist()> (SMS_MMS)
<android.view.Window: android.transition.Transition getSharedElementExitTransition()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: com.android.internal.inputmethod.ICharSequenceResultCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$RankingMap getCurrentRanking()> (SMS_MMS)
<android.service.autofill.UserData: java.lang.String[] getCategoryIds()> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse: int getStatus()> (SMS_MMS)
<android.content.res.ResourcesImpl: android.util.LongSparseArray getPreloadedDrawables()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$DailyItem getDailyItemLocked(int)> (SMS_MMS)
<android.telephony.PreciseDataConnectionState: int getState()> (SMS_MMS)
<com.android.internal.util.ContrastColorUtil: int resolveColor(android.content.Context,int,boolean)> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.telephony.ims.aidl.IImsSmsListener asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getXOffsetUncertaintyMm()> (SMS_MMS)
<android.content.Intent: java.lang.String getScheme()> (SMS_MMS)
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: int imageFormatToDataspace(int)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String getInstantAppAndroidId(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<com.android.internal.view.AppearanceRegion: android.graphics.Rect getBounds()> (SMS_MMS)
<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> (SMS_MMS)
<android.gsi.GsiProgress: int describeContents()> (SMS_MMS)
<android.telephony.ClosedSubscriberGroupInfo: android.telephony.ClosedSubscriberGroupInfo createFromParcelBody(android.os.Parcel)> (SMS_MMS)
<android.net.NetworkCapabilities: java.lang.String describeFirstNonRequestableCapability()> (SMS_MMS)
<android.location.Criteria: int access$402(android.location.Criteria,int)> (SMS_MMS)
<android.os.TimestampedValue: int describeContents()> (SMS_MMS)
<android.content.Intent$ShortcutIconResource: int describeContents()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getItemId()> (SMS_MMS)
<android.app.WallpaperColors: java.util.List getMainColors()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getAppComponentFactory()> (SMS_MMS)
<android.telephony.ServiceState: int getDataRegistrationState()> (SMS_MMS)
<android.transition.Transition: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)> (SMS_MMS)
<android.telecom.TelecomManager: boolean isInEmergencyCall()> (SMS_MMS)
<android.net.nsd.NsdManager: java.lang.String access$200()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeWordStartIndex()> (SMS_MMS)
<android.permission.PermissionControllerManager: void getAppPermissions(java.lang.String,android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback,android.os.Handler)> (SMS_MMS)
<android.print.IPrintManager$Default: boolean getBindInstantServiceAllowed(int)> (SMS_MMS)
<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getMeid()> (SMS_MMS)
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)> (SMS_MMS)
<android.media.session.ISessionController$Default: int getRatingType()> (SMS_MMS)
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.ISub$Default: int getDefaultVoiceSubId()> (SMS_MMS)
<android.hardware.camera2.CaptureFailure: int getReason()> (SMS_MMS)
<android.media.MediaDrm: byte[] openSession()> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: int describeContents()> (SMS_MMS)
<android.content.ISyncStatusObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.graphics.ColorSpace$Rgb: float[] getWhitePoint(float[])> (SMS_MMS)
<com.android.internal.app.MessageSamplingConfig: int getAcceptableLeftDistance()> (SMS_MMS)
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getIccPhoneBookServiceRegisterer()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$1: android.telephony.VisualVoicemailSmsFilterSettings createFromParcel(android.os.Parcel)> (SMS_MMS)
<android.graphics.drawable.ColorStateListDrawable: int getOpacity()> (SMS_MMS)
<android.widget.RemoteViews$TextViewSizeAction: int getActionTag()> (SMS_MMS)
<android.net.NetworkIdentity: int getSubType()> (SMS_MMS)
<android.os.image.IDynamicSystemService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isInEmergencySmsMode()> (SMS_MMS)
<android.media.tv.TvContentRating: java.util.List getSubRatings()> (SMS_MMS)
<android.content.pm.PackageManager: android.content.Intent buildRequestPermissionsIntent(java.lang.String[])> (SMS_MMS)
<android.service.notification.INotificationListener$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.provider.FontsContract$FontInfo: android.graphics.fonts.FontVariationAxis[] getAxes()> (SMS_MMS)
<android.content.pm.CrossProfileApps: android.graphics.drawable.Drawable getProfileSwitchingIconDrawable(android.os.UserHandle)> (SMS_MMS)
<android.app.FragmentController: android.app.FragmentManager getFragmentManager()> (SMS_MMS)
<android.widget.Magnifier: float getZoom()> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getAllowedNotificationAssistant()> (SMS_MMS)
<android.app.backup.IBackupManager$Default: java.lang.String getCurrentTransportForUser(int)> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.content.Context: android.os.Handler getMainThreadHandler()> (SMS_MMS)
<android.view.textservice.TextInfo: java.lang.String getText()> (SMS_MMS)
<android.widget.TextView: int getTextSizeUnit()> (SMS_MMS)
<android.telephony.ServiceState: int getRilVoiceRadioTechnology()> (SMS_MMS)
<android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int getGlobalAudioRestriction()> (SMS_MMS)
<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()> (SMS_MMS)
<android.provider.DocumentsContract$Path: java.util.List getPath()> (SMS_MMS)
<android.hardware.biometrics.CryptoObject: java.security.Signature getSignature()> (SMS_MMS)
<android.app.trust.IStrongAuthTracker$Stub: android.app.trust.IStrongAuthTracker asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.usage.UsageStats: long getTotalTimeInForeground()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getInstalledApplicationsAsUser(int,int)> (SMS_MMS)
<android.os.IThermalService$Stub$Proxy: int getCurrentThermalStatus()> (SMS_MMS)
<android.net.LinkProperties: java.util.List getAddresses()> (SMS_MMS)
<android.widget.Toolbar: int access$400(android.widget.Toolbar)> (SMS_MMS)
<android.content.pm.SuspendDialogInfo: java.lang.String getDialogMessage()> (SMS_MMS)
<android.util.Base64$Decoder: int maxOutputSize(int)> (SMS_MMS)
<android.media.Rating: int describeContents()> (SMS_MMS)
<android.os.storage.IObbActionListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()> (SMS_MMS)
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()> (SMS_MMS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)> (SMS_MMS)
<android.hardware.usb.IUsbManager$Stub$Proxy: long getCurrentFunctions()> (SMS_MMS)
<android.animation.Keyframe$IntKeyframe: int getIntValue()> (SMS_MMS)
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)> (SMS_MMS)
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.net.lowpan.ILowpanInterfaceListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getNrState()> (SMS_MMS)
<android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()> (SMS_MMS)
<android.text.PackedIntVector: int getValue(int,int)> (SMS_MMS)
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()> (SMS_MMS)
<android.telephony.SmsCbCmasInfo$1: void <init>()> (SMS_MMS)
<android.os.storage.StorageManager: long getStorageCacheBytes(java.io.File,int)> (SMS_MMS)
<android.view.WindowId: boolean isFocused()> (SMS_MMS)
<android.view.IRotationWatcher$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.ims.RcsUceAdapter: int getUcePublishState()> (SMS_MMS)
<android.app.RemoteAction: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.view.autofill.IAutoFillManagerClient$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.os.Environment: java.io.File getDataProfilesDePackageDirectory(int,java.lang.String)> (SMS_MMS)
<android.media.IMediaHTTPConnection$Default: long getSize()> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: android.hardware.camera2.CameraManager$CameraManagerGlobal get()> (SMS_MMS)
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)> (SMS_MMS)
<com.google.android.mms.ContentType: java.util.ArrayList getSupportedTypes()> (SMS_MMS)
<android.app.ListFragment: long getSelectedItemId()> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: int hashCode()> (SMS_MMS)
<android.telephony.ims.feature.ImsFeature: int getFeatureState()> (SMS_MMS)
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)> (SMS_MMS)
<android.os.BatteryStats$Timer: android.os.BatteryStats$Timer getSubTimer()> (SMS_MMS)
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)> (SMS_MMS)
<com.android.internal.app.IAppOpsCallback$Stub: com.android.internal.app.IAppOpsCallback asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony._$$Lambda$SubscriptionManager$vq2TobVWeB6FgTmZtD6jJ3grtk0: int callMethod(com.android.internal.telephony.ISub)> (SMS_MMS)
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)> (SMS_MMS)
<android.app.job.JobParameters: android.content.ClipData getClipData()> (SMS_MMS)
<android.window.IDisplayAreaOrganizer$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View: int getNextClusterForwardId()> (SMS_MMS)
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()> (SMS_MMS)
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)> (SMS_MMS)
<android.graphics.ColorFilter: long getNativeInstance()> (SMS_MMS)
<android.webkit.WebView: java.lang.String getUrl()> (SMS_MMS)
<android.content.Intent: java.util.Set getCategories()> (SMS_MMS)
<android.app.Activity: android.view.autofill.AutofillId autofillClientGetNextAutofillId()> (SMS_MMS)
<android.provider.ContactsContract$CommonDataKinds$Event: int getTypeResource(java.lang.Integer)> (SMS_MMS)
<android.telephony.CbGeoUtils$Polygon: boolean equals(java.lang.Object)> (SMS_MMS)
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: int getChangingConfigurations()> (SMS_MMS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$updateUserSensitiveForApp$24(int,android.permission.IPermissionController)> (SMS_MMS)
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()> (SMS_MMS)
<android.content.pm.LauncherApps: java.util.List getShortcuts(android.content.pm.LauncherApps$ShortcutQuery,android.os.UserHandle)> (SMS_MMS)
<android.companion.AssociationRequest: java.util.List getDeviceFilters()> (SMS_MMS)
<android.os.IMessenger$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)> (SMS_MMS)
<android.view.Choreographer: long getFrameTimeNanos()> (SMS_MMS)
<android.app.admin.StartInstallingUpdateCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.ParceledListSlice: java.util.List getList()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int checkProvisioningPreCondition(java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()> (SMS_MMS)
<android.content.IContentService$Stub: android.content.IContentService asInterface(android.os.IBinder)> (SMS_MMS)
<android.os.UserManager: java.lang.String getSeedAccountType()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveAdjustedTime(int)> (SMS_MMS)
<android.hardware.biometrics.IAuthService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.location.ILocationManager$Stub: android.location.ILocationManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getContentCaptureServicePackageName()> (SMS_MMS)
<android.app.AppOpsManager$HistoricalUidOps: int getUid()> (SMS_MMS)
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()> (SMS_MMS)
<android.app.AppOpsManager$AttributedOpEntry: long getLastForegroundDuration(int)> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)> (SMS_MMS)
<android.security.IKeyChainService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.hardware.hdmi.HdmiUtils: int getHdmiAddressRelativePosition(int,int)> (SMS_MMS)
<android.graphics.drawable.GradientDrawable: float getInnerRadiusRatio()> (SMS_MMS)
<android.media.AudioTrack: int getPlaybackRate()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getMobileProvisioningUrl()> (SMS_MMS)
<com.android.internal.app.LocalePicker$LocaleInfo: int compareTo(com.android.internal.app.LocalePicker$LocaleInfo)> (SMS_MMS)
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.view.WindowInsets: int getStableInsetTop()> (SMS_MMS)
<android.widget.TextView: android.widget.Editor getEditorForTesting()> (SMS_MMS)
<android.content.pm.IShortcutService$Stub$Proxy: byte[] getBackupPayload(int)> (SMS_MMS)
<android.hardware.face.IFaceServiceReceiver$Stub: android.hardware.face.IFaceServiceReceiver asInterface(android.os.IBinder)> (SMS_MMS)
<android.renderscript.Element: int getVectorSize()> (SMS_MMS)
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session$Info getExternalSession()> (SMS_MMS)
<android.net.lowpan.ILowpanInterface$Default: java.lang.String[] getSupportedNetworkTypes()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getVisualVoicemailPackageName()> (SMS_MMS)
<android.media.session.MediaController$PlaybackInfo: int describeContents()> (SMS_MMS)
<android.app.slice.Slice: android.net.Uri getUri()> (SMS_MMS)
<android.app.ContextImpl: java.io.File getFilesDir()> (SMS_MMS)
<android.service.notification.NotificationListenerService$Ranking: java.lang.String getKey()> (SMS_MMS)
<com.android.internal.telecom.ITelecomService$Default: java.util.List getCallCapablePhoneAccounts(boolean,java.lang.String,java.lang.String)> (SMS_MMS)
<android.view.DisplayAdjustments: int getRotation(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getScreenOffCpuFreqTimes(int)> (SMS_MMS)
<android.telephony.ims.ImsCallForwardInfo: int describeContents()> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: int getMessageType()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistration$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> (SMS_MMS)
<android.os.Binder: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.IUriGrantsManager$Default: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)> (SMS_MMS)
<android.print.PrintDocumentInfo: int describeContents()> (SMS_MMS)
<com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController getDefaultImpl()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getCardIdForDefaultEuicc(int,java.lang.String)> (SMS_MMS)
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IStrategyPreferredDeviceDispatcher$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.text.style.BackgroundColorSpan: int getSpanTypeIdInternal()> (SMS_MMS)
<android.media.tv.ITvInputClient$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionInfo: java.lang.String getIccId()> (SMS_MMS)
<android.location.GnssMeasurement: double getBasebandCn0DbHz()> (SMS_MMS)
<android.net.NetworkSpecifier: android.net.NetworkSpecifier redact()> (SMS_MMS)
<android.telephony.ModemActivityInfo$1: android.telephony.ModemActivityInfo createFromParcel(android.os.Parcel)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer getSensorTimerLocked(int,boolean)> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int hashCode()> (SMS_MMS)
<android.view.ViewRootImpl: int getWindowFlags()> (SMS_MMS)
<android.os.IncidentManager: java.util.List getIncidentReportList(java.lang.String)> (SMS_MMS)
<android.hardware.radio.IRadioService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppResolverSettingsComponent()> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.job.IJobScheduler$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.widget.Editor$HandleView: int getCursorOffset()> (SMS_MMS)
<android.hardware.Sensor: java.lang.String getRequiredPermission()> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: int getOrdering()> (SMS_MMS)
<android.telephony.TelephonyManager: int getPhoneType(int)> (SMS_MMS)
<android.media.MediaFormat: java.util.Set getFeatures()> (SMS_MMS)
<android.media.IMediaRouterService$Default: java.util.List getSystemRoutes()> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getOrganizationColorForUser(int)> (SMS_MMS)
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)> (SMS_MMS)
<android.media.SubtitleTrack: android.media.MediaFormat getFormat()> (SMS_MMS)
<android.os.IClientCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.database.CursorWrapper: int getInt(int)> (SMS_MMS)
<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()> (SMS_MMS)
<android.app.backup.ISelectBackupTransportCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.content.pm.PackageManager: java.lang.String getDefaultTextClassifierPackageName()> (SMS_MMS)
<android.telecom.TelecomAnalytics: java.util.List getSessionTimings()> (SMS_MMS)
<com.android.internal.widget.LockPatternUtils: int getStrongAuthForUser(int)> (SMS_MMS)
<android.widget.Editor: int access$4500(android.widget.Editor,android.graphics.drawable.Drawable,float)> (SMS_MMS)
<com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)> (SMS_MMS)
<android.window.ITaskOrganizerController$Stub$Proxy: android.app.ActivityManager$RunningTaskInfo createRootTask(int,int)> (SMS_MMS)
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (SMS_MMS)
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()> (SMS_MMS)
<android.print.IPrintDocumentAdapterObserver$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.view.contentcapture.ChildContentCaptureSession: android.view.contentcapture.MainContentCaptureSession getMainCaptureSession()> (SMS_MMS)
<android.media.tv.TvTrackInfo: int getType()> (SMS_MMS)
<android.content.res.AssetManager: int[] getAttributeResolutionStack(long,int,int,int)> (SMS_MMS)
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getHorizontalTrackDrawable()> (SMS_MMS)
<android.view.contentcapture.ViewNode: int getScrollY()> (SMS_MMS)
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()> (SMS_MMS)
<android.window.ITaskOrganizerController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEventsForSelf(long,long)> (SMS_MMS)
<android.hardware.camera2.CameraAccessException: int getReason()> (SMS_MMS)
<android.os.MemoryFile$MemoryInputStream: int available()> (SMS_MMS)
<android.telephony.ims.aidl.IImsSmsListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.IAudioService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.BitmapFactory$Options: long nativeColorSpace(android.graphics.BitmapFactory$Options)> (SMS_MMS)
<android.os.UserManager$UserOperationException: int getUserOperationResult()> (SMS_MMS)
<android.media.AudioManager: boolean isValidRingerMode(int)> (SMS_MMS)
<com.android.internal.appwidget.IAppWidgetService$Default: android.content.pm.ParceledListSlice getInstalledProvidersForProfile(int,int,java.lang.String)> (SMS_MMS)
<android.telephony.TelephonyDisplayInfo$1: android.telephony.TelephonyDisplayInfo[] newArray(int)> (SMS_MMS)
<android.media.session.ISessionController$Stub$Proxy: android.app.PendingIntent getLaunchPendingIntent()> (SMS_MMS)
<android.app.AsyncNotedAppOp: int describeContents()> (SMS_MMS)
<android.media.session.ISessionCallback$Stub: android.media.session.ISessionCallback getDefaultImpl()> (SMS_MMS)
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationCenterX(int)> (SMS_MMS)
<android.app.ApplicationPackageManager: java.util.List getIntentFilterVerifications(java.lang.String)> (SMS_MMS)
<com.android.internal.policy.IKeyguardDismissCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.hardware.radio.V1_0.CellIdentityGsm: int hashCode()> (SMS_MMS)
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()> (SMS_MMS)
<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])> (SMS_MMS)
<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] getPlanes()> (SMS_MMS)
<com.android.internal.ml.clustering.KMeans$Mean: java.util.List getItems()> (SMS_MMS)
<android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.view.textclassifier.TextClassification: float getConfidenceScore(java.lang.String)> (SMS_MMS)
<android.animation.ValueAnimator: int getRepeatCount()> (SMS_MMS)
<android.provider.FontRequest: java.lang.String getProviderPackage()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: int getBanner()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: java.lang.String getInstantAppAndroidId(java.lang.String,int)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: boolean getPrivateNotificationsAllowed()> (SMS_MMS)
<com.android.internal.app.IVoiceInteractorCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.ims.RegistrationManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()> (SMS_MMS)
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: long getTimeSinceLastEvent()> (SMS_MMS)
<android.app.ApplicationPackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SmsMessage: int getNumOfVoicemails()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Default: int getState()> (SMS_MMS)
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()> (SMS_MMS)
<android.view.SurfaceControlViewHost$SurfacePackage: int describeContents()> (SMS_MMS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: int disableTargetSdkChanges(java.lang.String,int)> (SMS_MMS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int hashCode()> (SMS_MMS)
<android.service.notification.IStatusBarNotificationHolder$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.TextView: android.graphics.BlendMode getCompoundDrawableTintBlendMode()> (SMS_MMS)
<android.hardware.hdmi.IHdmiRecordListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()> (SMS_MMS)
<android.view.IDisplayWindowInsetsController$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getSimState(int)> (SMS_MMS)
<android.media.tv.ITvInputHardwareCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()> (SMS_MMS)
<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()> (SMS_MMS)
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()> (SMS_MMS)
<android.content.pm.ILauncherApps$Default: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getManagedProfileMaximumTimeOff(android.content.ComponentName)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getIntegerSubscriptionProperty(int,java.lang.String,int,android.content.Context)> (SMS_MMS)
<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()> (SMS_MMS)
<android.media.AudioDeviceAttributes: java.lang.String getAddress()> (SMS_MMS)
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getId()> (SMS_MMS)
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: long getTimeAtCpuSpeed(int,int,int)> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getCurrentRuleSetProvider()> (SMS_MMS)
<android.app.IActivityManager$Stub$Proxy: java.util.List getProcessesInErrorState()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: int checkMobileProvisioning(int)> (SMS_MMS)
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (SMS_MMS)
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getZOffsetMm()> (SMS_MMS)
<android.view.textclassifier.SelectionEvent: java.lang.String getResultId()> (SMS_MMS)
<android.location.GpsSatellite: float getAzimuth()> (SMS_MMS)
<android.os.storage.IStorageShutdownObserver$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.IOnPrimaryClipChangedListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.RemoteViews$RuntimeAction: int getActionTag()> (SMS_MMS)
<android.telecom.TelecomManager: boolean isRinging()> (SMS_MMS)
<android.telephony.CellInfoNr$1: android.telephony.CellInfoNr[] newArray(int)> (SMS_MMS)
<android.telephony.SignalStrength: int getTdScdmaLevel()> (SMS_MMS)
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> (SMS_MMS)
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()> (SMS_MMS)
<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.AudioFormat: int hashCode()> (SMS_MMS)
<android.location.IGnssAntennaInfoListener$Stub: android.location.IGnssAntennaInfoListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.media.midi.MidiPortImpl: int getDataOffset(byte[],int)> (SMS_MMS)
<android.app.ActivityManager: android.app.IActivityTaskManager access$000()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: int[] getAppIdUserWhitelist()> (SMS_MMS)
<android.webkit.IWebViewUpdateService$Stub: android.webkit.IWebViewUpdateService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellInfoCdma: android.telephony.CellInfo sanitizeLocationInfo()> (SMS_MMS)
<android.view.Display: int getLayerStack()> (SMS_MMS)
<android.content.integrity.IAppIntegrityManager$Default: java.lang.String getCurrentRuleSetProvider()> (SMS_MMS)
<android.media.AudioManager: boolean isStreamAffectedByRingerMode(int)> (SMS_MMS)
<android.view.textclassifier.ConversationActions$Message: java.lang.CharSequence getText()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationDuration: int getHeight()> (SMS_MMS)
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)> (SMS_MMS)
<android.view.autofill.IAutofillWindowPresenter$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.IccOpenLogicalChannelResponse: byte[] getSelectResponse()> (SMS_MMS)
<android.view.WindowInsets: int getSystemWindowInsetBottom()> (SMS_MMS)
<android.app.IActivityManager$Stub: android.app.IActivityManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getGlobalSearchActivity()> (SMS_MMS)
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()> (SMS_MMS)
<android.media.MicrophoneInfo: android.media.MicrophoneInfo$Coordinate3F getPosition()> (SMS_MMS)
<android.companion.ICompanionDeviceManager$Stub$Proxy: java.util.List getAssociations(java.lang.String,int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: float getStrokeAlpha()> (SMS_MMS)
<android.security.net.config.ManifestConfigSource: java.util.Set getPerDomainConfigs()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: int listUidsOfAuthBoundKeys(java.util.List)> (SMS_MMS)
<android.widget.Toolbar: int getCurrentContentInsetStart()> (SMS_MMS)
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> (SMS_MMS)
<android.renderscript.Int4: int get(int)> (SMS_MMS)
<android.drm.DrmInfo: byte[] getData()> (SMS_MMS)
<android.telephony.TelephonyManager: void notifyOtaEmergencyNumberDbInstalled()> (SMS_MMS)
<android.app.AutomaticZenRule: int describeContents()> (SMS_MMS)
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setDestinationPort(int)> (SMS_MMS)
<android.telephony.TelephonyManager: int getVoiceNetworkType()> (SMS_MMS)
<android.app.ResourcesManager: android.content.res.Resources createBaseTokenResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)> (SMS_MMS)
<android.security.keystore.KeystoreResponse: java.lang.String getErrorMessage()> (SMS_MMS)
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: int getHeightAlignment()> (SMS_MMS)
<android.media.session.ISession$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.text.BidiFormatter: android.text.BidiFormatter getInstance()> (SMS_MMS)
<android.net.NetworkScorerAppData: java.lang.String getNetworkAvailableNotificationChannelId()> (SMS_MMS)
<android.hardware.cas.V1_2.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.print.PageRange: int getEnd()> (SMS_MMS)
<android.app.contentsuggestions.SelectionsRequest: android.graphics.Point getInterestPoint()> (SMS_MMS)
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)> (SMS_MMS)
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int calculateMarshalSize(android.os.Parcelable)> (SMS_MMS)
<android.app.Notification$MessagingStyle$Message: long getTimestamp()> (SMS_MMS)
<android.app.INotificationManager$Default: int getRuleInstanceCount(android.content.ComponentName)> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getAttributionTag()> (SMS_MMS)
<android.widget.ImageView: int getBaseline()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTime(long,int)> (SMS_MMS)
<android.os.IncidentReportArgs: int describeContents()> (SMS_MMS)
<android.view.View: int getPaddingRight()> (SMS_MMS)
<android.app.usage.NetworkStats$Bucket: int access$000(int)> (SMS_MMS)
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)> (SMS_MMS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: int getPosition()> (SMS_MMS)
<android.security.keystore.IKeystoreService$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.HeaderViewListAdapter: int getFootersCount()> (SMS_MMS)
<android.hardware.radio.IRadioService$Stub: android.hardware.radio.IRadioService getDefaultImpl()> (SMS_MMS)
<android.net.NetworkInfo: java.lang.String getSubtypeName()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()> (SMS_MMS)
<android.hardware.ISerialManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: int getLockTaskModeState()> (SMS_MMS)
<android.app.ActivityOptions: int getExitCoordinatorKey()> (SMS_MMS)
<android.media.tv.ITvInputManager$Stub$Proxy: int getClientPid(java.lang.String)> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int getRemovedFlags()> (SMS_MMS)
<android.telephony.SmsCbMessage: boolean isCmasMessage()> (SMS_MMS)
<android.os.storage.VolumeInfo: int hashCode()> (SMS_MMS)
<android.service.autofill.FillEventHistory: android.os.Bundle getClientState()> (SMS_MMS)
<android.graphics.Typeface$CustomFallbackBuilder: int getMaxCustomFallbackCount()> (SMS_MMS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()> (SMS_MMS)
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()> (SMS_MMS)
<android.app.assist.AssistContent: int describeContents()> (SMS_MMS)
<android.hardware.cas.V1_1.ICas$Proxy: java.util.ArrayList getHashChain()> (SMS_MMS)
<android.media.MicrophoneInfo: int getType()> (SMS_MMS)
<com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback getDefaultImpl()> (SMS_MMS)
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Size getBlockSize()> (SMS_MMS)
<android.hardware.camera2.CaptureFailure: android.hardware.camera2.CaptureRequest getRequest()> (SMS_MMS)
<android.media.session.ISessionManager$Stub: android.media.session.ISessionManager asInterface(android.os.IBinder)> (SMS_MMS)
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()> (SMS_MMS)
<android.os.Environment: java.io.File getDataVendorCeDirectory(int)> (SMS_MMS)
<android.hardware.display.BrightnessConfiguration: java.lang.String getDescription()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainProtectionParams: android.security.keystore.recovery.KeyDerivationParams getKeyDerivationParams()> (SMS_MMS)
<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)> (SMS_MMS)
<android.database.IContentObserver$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.os.Environment: java.io.File getDataStagingDirectory(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean hasIccCard()> (SMS_MMS)
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()> (SMS_MMS)
<android.app.blob.BlobHandle: int describeContents()> (SMS_MMS)
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)> (SMS_MMS)
<android.app.IActivityManager$Default: android.graphics.Rect getTaskBounds(int)> (SMS_MMS)
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)> (SMS_MMS)
<android.content.res.GradientColor$GradientColorFactory: android.content.res.GradientColor newInstance()> (SMS_MMS)
<android.view.MotionEvent: float getXPrecision()> (SMS_MMS)
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)> (SMS_MMS)
<android.media.RoutingSessionInfo: java.lang.String getProviderId()> (SMS_MMS)
<android.accounts.IAccountManagerResponse$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.ContentValues: int hashCode()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()> (SMS_MMS)
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$800(android.security.keystore.recovery.KeyChainSnapshot)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()> (SMS_MMS)
<android.os.BaseBundle: char getChar(java.lang.String,char)> (SMS_MMS)
<android.content.IIntentSender$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)> (SMS_MMS)
<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()> (SMS_MMS)
<com.android.internal.view.menu.ListMenuPresenter: int getItemIndexOffset()> (SMS_MMS)
<android.service.voice.IVoiceInteractionSession$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.widget.PopupWindow: android.view.WindowManager$LayoutParams getDecorViewLayoutParams()> (SMS_MMS)
<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()> (SMS_MMS)
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getConversationsForPackage(java.lang.String,int)> (SMS_MMS)
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo1Callback getDefaultImpl()> (SMS_MMS)
<android.os.BasicShellCommandHandler: java.io.OutputStream getRawOutputStream()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.SpellChecker: int access$600(android.widget.SpellChecker)> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppInstallerComponent()> (SMS_MMS)
<com.android.internal.app.IAppOpsService$Default: int checkAudioOperation(int,int,int,java.lang.String)> (SMS_MMS)
<android.hardware.radio.ITuner$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()> (SMS_MMS)
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)> (SMS_MMS)
<android.media.IMediaRouterService$Default: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)> (SMS_MMS)
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()> (SMS_MMS)
<android.content.res.XmlBlock$Parser: int next()> (SMS_MMS)
<android.service.notification.SnoozeCriterion: int describeContents()> (SMS_MMS)
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)> (SMS_MMS)
<android.telephony.CellInfo: long getTimestampMillis()> (SMS_MMS)
<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()> (SMS_MMS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int createStream(android.hardware.camera2.params.OutputConfiguration)> (SMS_MMS)
<android.location.GnssMeasurementCorrections: double getLongitudeDegrees()> (SMS_MMS)
<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthLte: int hashCode()> (SMS_MMS)
<android.hardware.cas.V1_0.ICas$Stub: java.util.ArrayList interfaceChain()> (SMS_MMS)
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.net.lowpan.ILowpanNetScanCallback getDefaultImpl()> (SMS_MMS)
<android.app.Notification$MessagingStyle: android.graphics.drawable.Icon getShortcutIcon()> (SMS_MMS)
<android.text.style.QuoteSpan: int getStripeWidth()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath$4: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.content.pm.parsing.component.ParsedPermissionGroup: int getRequestDetailResourceId()> (SMS_MMS)
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getTextSelectionEnd()> (SMS_MMS)
<android.content.pm.PackageParser$SplitNameComparator: int compare(java.lang.String,java.lang.String)> (SMS_MMS)
<android.telephony.RadioAccessSpecifier: int[] getChannels()> (SMS_MMS)
<com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State[] values()> (SMS_MMS)
<android.os.IInstalld$Default: android.os.storage.CrateMetadata[] getUserCrates(java.lang.String,int)> (SMS_MMS)
<android.text.StaticLayout: int getEllipsisStart(int)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Uid$Pid getPidStatsLocked(int)> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.renderscript.RenderScript: long getMinorVersion()> (SMS_MMS)
<android.telephony.TelephonyManager: void refreshUiccProfile()> (SMS_MMS)
<android.database.AbstractCursor: int getType(int)> (SMS_MMS)
<android.app.usage.ExternalStorageStats: long getAudioBytes()> (SMS_MMS)
<android.location.GnssStatus: float getCn0DbHz(int)> (SMS_MMS)
<android.hardware.face.FaceManager: boolean hasEnrolledTemplates()> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: int getStatus()> (SMS_MMS)
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.LinkProperties getLinkProperties()> (SMS_MMS)
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> (SMS_MMS)
<android.graphics.fonts.Font: java.nio.ByteBuffer getBuffer()> (SMS_MMS)
<android.telecom.TelecomManager: boolean isIncomingCallPermitted(android.telecom.PhoneAccountHandle)> (SMS_MMS)
<android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)> (SMS_MMS)
<android.app.FragmentHostCallback: int onGetWindowAnimations()> (SMS_MMS)
<android.net.LocalSocket: int getSendBufferSize()> (SMS_MMS)
<android.os.storage.VolumeInfo: int getMountUserId()> (SMS_MMS)
<android.widget.Toolbar: int getTitleMarginTop()> (SMS_MMS)
<android.app.RemoteAction: android.app.PendingIntent getActionIntent()> (SMS_MMS)
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()> (SMS_MMS)
<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> (SMS_MMS)
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()> (SMS_MMS)
<android.telephony.NetworkRegistrationInfo: int getRegistrationState()> (SMS_MMS)
<android.net.LinkProperties: android.net.IpPrefix getNat64Prefix()> (SMS_MMS)
<android.database.sqlite.SQLiteCursor: int getCount()> (SMS_MMS)
<android.telephony.SignalStrength: int getGsmBitErrorRate()> (SMS_MMS)
<android.telephony.NeighboringCellInfo: int getCid()> (SMS_MMS)
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface()> (SMS_MMS)
<android.net.lowpan.LowpanBeaconInfo: java.util.Collection getFlags()> (SMS_MMS)
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap getWakeupAlarmStats()> (SMS_MMS)
<android.app.ContextImpl: android.app.IApplicationThread getIApplicationThread()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getTypeAllocationCode()> (SMS_MMS)
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getVolumeUuid()> (SMS_MMS)
<android.media.AudioFormat: int getBytesPerSample(int)> (SMS_MMS)
<com.android.internal.widget.AutoScrollHelper: int access$800(int,int,int)> (SMS_MMS)
<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()> (SMS_MMS)
<android.media.IMediaHTTPConnection$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.view.View: int getExplicitStyle()> (SMS_MMS)
<android.view.IPinnedStackController$Stub$Proxy: int getDisplayRotation()> (SMS_MMS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getProperty(java.lang.String)> (SMS_MMS)
<android.net.wifi.nl80211.PnoNetwork: byte[] access$100(android.net.wifi.nl80211.PnoNetwork)> (SMS_MMS)
<android.widget._$$Lambda$E_XesXLNXm7BCuVAnjZcIGfnQJQ: java.lang.Object get()> (SMS_MMS)
<android.media.MediaDrm: byte[] signRSA(byte[],java.lang.String,byte[],byte[])> (SMS_MMS)
<com.android.server.SystemConfig: java.util.Map getOemPermissions(java.lang.String)> (SMS_MMS)
<android.os.UserManager: boolean isQuietModeEnabled(android.os.UserHandle)> (SMS_MMS)
<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener getUpdateListener()> (SMS_MMS)
<com.android.ims.internal.IImsUt$Default: int queryCLIR()> (SMS_MMS)
<android.text.AutoGrowArray$FloatArray: float[] getRawArray()> (SMS_MMS)
<android.app.assist.AssistStructure$ViewNodeBuilder: android.graphics.Rect getTempRect()> (SMS_MMS)
<android.media.IMediaHTTPService$Stub: android.media.IMediaHTTPService getDefaultImpl()> (SMS_MMS)
<android.net.IpSecManager$UdpEncapsulationSocket: int getPort()> (SMS_MMS)
<com.android.internal.policy.PhoneWindow: android.view.View getDecorView()> (SMS_MMS)
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)> (SMS_MMS)
<com.android.internal.util.BitwiseInputStream: int read(int)> (SMS_MMS)
<android.app.admin.IDevicePolicyManager$Default: int getCurrentFailedPasswordAttempts(int,boolean)> (SMS_MMS)
<android.app.Notification$CarExtender: android.app.Notification$CarExtender$UnreadConversation getUnreadConversation()> (SMS_MMS)
<android.telephony.DataSpecificRegistrationInfo: int hashCode()> (SMS_MMS)
<android.view.contentcapture.ViewNode: float getTextSize()> (SMS_MMS)
<com.android.internal.inputmethod.IIntResultCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellIdentityWcdma$1: android.telephony.CellIdentityWcdma[] newArray(int)> (SMS_MMS)
<com.android.internal.telephony.ITelephony$Default: int getDataState()> (SMS_MMS)
<android.view.IRecentsAnimationController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.app.ContextImpl: java.lang.String getPackageName()> (SMS_MMS)
<com.android.internal.telephony.IIntegerConsumer$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: int describeContents()> (SMS_MMS)
<android.widget.TextView: int getFadeTop(boolean)> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Stub: android.net.wifi.nl80211.IClientInterface asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()> (SMS_MMS)
<android.security.keymaster.KeyCharacteristics: boolean getBoolean(int)> (SMS_MMS)
<android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo)> (SMS_MMS)
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)> (SMS_MMS)
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes getAudioAttributes()> (SMS_MMS)
<com.android.internal.telephony._$$Lambda$RILConstants$ODSbRKyUeaOFMcez_ZudOmaKCBw: java.lang.Object apply(java.lang.Object)> (SMS_MMS)
<android.app.timedetector.ITimeDetectorService$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.service.notification.StatusBarNotification: int getInitialPid()> (SMS_MMS)
<android.os.IDumpstate$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.hardware.radio.RadioManager$BandConfig: int getType()> (SMS_MMS)
<android.hardware.location.IContextHubService$Default: int loadNanoApp(int,android.hardware.location.NanoApp)> (SMS_MMS)
<android.service.autofill.FillEventHistory$Event: android.os.Bundle getClientState()> (SMS_MMS)
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> (SMS_MMS)
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.widget.TextView: int getMaxLines()> (SMS_MMS)
<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()> (SMS_MMS)
<android.view.KeyCharacterMap: int getDeadChar(int,int)> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VGroup$6: java.lang.Object get(java.lang.Object)> (SMS_MMS)
<android.media.AudioRecord: int read(float[],int,int,int)> (SMS_MMS)
<android.media.AudioTrack: int getUnderrunCount()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getDarkVibrantColor(int)> (SMS_MMS)
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)> (SMS_MMS)
<android.app.ActivityThread: java.lang.String getProfileFilePath()> (SMS_MMS)
<android.net.wifi.nl80211.WifiNl80211Manager: boolean tearDownInterfaces()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)> (SMS_MMS)
<android.os.storage.StorageManager$ObbListenerDelegate: int access$100(android.os.storage.StorageManager$ObbListenerDelegate)> (SMS_MMS)
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAllStackInfos()> (SMS_MMS)
<android.telephony.TelephonyManager: void answerRingingCall()> (SMS_MMS)
<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse[] newArray(int)> (SMS_MMS)
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)> (SMS_MMS)
<android.app.job.JobInfo: int getPriority()> (SMS_MMS)
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureResultKeys()> (SMS_MMS)
<android.app.Dialog: android.view.View getCurrentFocus()> (SMS_MMS)
<android.os.IIncidentCompanion$Stub: android.os.IIncidentCompanion asInterface(android.os.IBinder)> (SMS_MMS)
<com.android.internal.policy.PhoneFallbackEventHandler: android.media.session.MediaSessionManager getMediaSessionManager()> (SMS_MMS)
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults()> (SMS_MMS)
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)> (SMS_MMS)
<android.graphics.Shader: long createNativeInstance(long)> (SMS_MMS)
<android.service.notification.NotificationListenerService$RankingMap: int describeContents()> (SMS_MMS)
<android.widget.TextView: int getTypefaceStyle()> (SMS_MMS)
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()> (SMS_MMS)
<android.widget.CursorAdapter: java.lang.Object getItem(int)> (SMS_MMS)
<android.telephony.emergency.EmergencyNumber: int hashCode()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getSurfaceSize(android.view.Surface)> (SMS_MMS)
<android.telephony.UssdResponse$1: void <init>()> (SMS_MMS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertAntiBandingModeOrDefault(java.lang.String)> (SMS_MMS)
<android.app.IUiModeManager$Stub: android.app.IUiModeManager getDefaultImpl()> (SMS_MMS)
<android.media.AudioManager: java.util.List getMicrophones()> (SMS_MMS)
<android.net.wifi.nl80211.IClientInterface$Default: java.lang.String getInterfaceName()> (SMS_MMS)
<android.media.projection.IMediaProjectionWatcherCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)> (SMS_MMS)
<android.animation.ObjectAnimator: java.lang.String getNameForTrace()> (SMS_MMS)
<android.service.euicc.EuiccProfileInfo: int getState()> (SMS_MMS)
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> (SMS_MMS)
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<android.app.NotificationManager: int getZenMode()> (SMS_MMS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getInputMethodList(int)> (SMS_MMS)
<android.text.BoringLayout: int getEllipsisCount(int)> (SMS_MMS)
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(int,android.os.UserHandle,java.lang.String)> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Counter getBluetoothScanResultCounter()> (SMS_MMS)
<android.os.ICancellationSignal$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)> (SMS_MMS)
<android.hardware.display.DisplayManager: android.util.Pair getMinimumBrightnessCurve()> (SMS_MMS)
<android.content.pm.IPackageManager$Default: byte[] getDefaultAppsBackup(int)> (SMS_MMS)
<android.security.net.config.XmlConfigSource: java.util.Set getPerDomainConfigs()> (SMS_MMS)
<android.graphics.RenderNode: android.graphics.Matrix getAnimationMatrix()> (SMS_MMS)
<android.location.GnssMeasurement: java.lang.String getCodeType()> (SMS_MMS)
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IDeviceIdentifiersPolicyService asInterface(android.os.IBinder)> (SMS_MMS)
<android.telephony.CellSignalStrengthLte$1: void <init>()> (SMS_MMS)
<android.telephony.TelephonyManager: java.lang.String getManufacturerCode()> (SMS_MMS)
<android.content.pm.KeySet: android.os.IBinder getToken()> (SMS_MMS)
<android.media.midi.MidiDeviceInfo: android.media.midi.MidiDeviceInfo$PortInfo[] getPorts()> (SMS_MMS)
<android.telephony.CellInfoCdma: int hashCode()> (SMS_MMS)
<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity(int)> (SMS_MMS)
<com.android.internal.widget.LockscreenCredential: byte[] getCredential()> (SMS_MMS)
<android.content.pm.ILauncherApps$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> (SMS_MMS)
<android.content.IIntentSender$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.app.Vr2dDisplayProperties: int getHeight()> (SMS_MMS)
<android.telephony.CellSignalStrengthCdma$1: android.telephony.CellSignalStrengthCdma[] newArray(int)> (SMS_MMS)
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()> (SMS_MMS)
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)> (SMS_MMS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)> (SMS_MMS)
<android.telephony.SubscriptionManager: int getDefaultSmsPhoneId()> (SMS_MMS)
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getStackInfoOnDisplay(int,int,int)> (SMS_MMS)
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()> (SMS_MMS)
<android.net.Uri: int compareTo(android.net.Uri)> (SMS_MMS)
<android.graphics.RenderNode: long getUniqueId()> (SMS_MMS)
<android.os.IDeviceIdleController$Default: int[] getAppIdWhitelistExceptIdle()> (SMS_MMS)
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()> (SMS_MMS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: android.telephony.ims.ImsCallProfile createCallProfile(int,int)> (SMS_MMS)
<android.telephony.TelephonyManager: boolean isNetworkRoaming(int)> (SMS_MMS)
<com.android.internal.util.MemInfoReader: long getFreeSize()> (SMS_MMS)
<android.net.ScoredNetwork: int calculateRankingScore(int)> (SMS_MMS)
<android.service.persistentdata.PersistentDataBlockManager: int write(byte[])> (SMS_MMS)
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getWebSearchActivity()> (SMS_MMS)
<android.content.res.AssetManager: long createTheme()> (SMS_MMS)
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String)> (SMS_MMS)
<com.android.internal.view.IInputMethod$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.view.View: boolean getClipBounds(android.graphics.Rect)> (SMS_MMS)
<android.telephony.ClientRequestStats: long getPendingRequestsCount()> (SMS_MMS)
<android.text.style.AlignmentSpan$Standard: int describeContents()> (SMS_MMS)
<android.companion.IFindDeviceCallback$Stub$Proxy: android.os.IBinder asBinder()> (SMS_MMS)
<android.security.net.config.WfaCertificateSource: android.security.net.config.WfaCertificateSource getInstance()> (SMS_MMS)
<android.os.Debug: int getThreadGcInvocationCount()> (SMS_MMS)
<android.media.TimedText: java.lang.String getText()> (SMS_MMS)
<android.hardware.radio.ICloseHandle$Stub: android.hardware.radio.ICloseHandle getDefaultImpl()> (SMS_MMS)
<android.hardware.input.KeyboardLayout: int getVendorId()> (SMS_MMS)
<android.graphics.drawable.VectorDrawable$VFullPath: int getNativeSize()> (SMS_MMS)
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()> (SMS_MMS)
<android.telephony.ims.aidl.IImsRcsController$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.media.soundtrigger_middleware.ISoundTriggerModule asInterface(android.os.IBinder)> (SMS_MMS)
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroupsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)> (SMS_MMS)
<android.net.ISocketKeepaliveCallback$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.TelephonyManager: java.util.Map getEmergencyNumberList()> (SMS_MMS)
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()> (SMS_MMS)
<android.media.tv.ITvInputClient$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.telephony.CellSignalStrengthWcdma: int getAsuLevel()> (SMS_MMS)
<android.view.View: android.content.res.Resources getResources()> (SMS_MMS)
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)> (SMS_MMS)
<android.media.soundtrigger_middleware.RecognitionConfig: int describeContents()> (SMS_MMS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.util.Set getConcurrentCameraIds()> (SMS_MMS)
<android.hardware.camera2.params.MeteringRectangle: int getHeight()> (SMS_MMS)
<android.view.ISystemGestureExclusionListener$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)> (SMS_MMS)
<android.app.INotificationManager$Default: int getNumNotificationChannelsForPackage(java.lang.String,int,boolean)> (SMS_MMS)
<android.view.CutoutSpecification: android.graphics.Rect getRightBound()> (SMS_MMS)
<android.app.trust.ITrustManager$Stub: java.lang.String getTransactionName(int)> (SMS_MMS)
<android.telephony.SubscriptionManager: boolean isValidSlotIndex(int)> (SMS_MMS)
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()> (SMS_MMS)
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()> (SMS_MMS)
<android.media.AudioAttributes: java.util.Set getTags()> (SMS_MMS)
<android.os.Bundle: short getShort(java.lang.String)> (SMS_MMS)
<android.app.slice.ISliceManager$Stub: android.os.IBinder asBinder()> (SMS_MMS)
<android.animation.Animator: android.content.res.ConstantState createConstantState()> (SMS_MMS)
<android.content.pm.ShortcutManager: int getRemainingCallCount()> (SMS_MMS)
<com.android.server.SystemConfig: android.util.ArrayMap getSharedLibraries()> (SMS_MMS)
<com.android.internal.os.BatteryStatsHelper: java.util.List getMobilemsppList()> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: int getDeliveryReport()> (SMS_MMS)
<android.app.backup.IRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (SMS_MMS)
<android.telephony.data.ApnSetting: int getMaxConnsTime()> (SMS_MMS)
<android.app.IUserSwitchObserver$Stub: android.app.IUserSwitchObserver getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPinItemRequest$Stub: java.lang.String getDefaultTransactionName(int)> (SMS_MMS)
<android.media.tv.TvStreamConfig: int getType()> (SMS_MMS)
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityNodeInfo getNode(int,long)> (SMS_MMS)
<android.app.blob.BlobHandle: byte[] getSha256Digest()> (SMS_MMS)
<com.android.internal.graphics.palette.Palette: int getLightVibrantColor(int)> (SMS_MMS)
<android.app.IRequestFinishCallback$Default: android.os.IBinder asBinder()> (SMS_MMS)
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> (SMS_MMS)
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.app.timezonedetector.ITimeZoneDetectorService getDefaultImpl()> (SMS_MMS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isSafeMode()> (SMS_MMS)

CONTACT_INFORMATION:
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> (CONTACT_INFORMATION)
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.READ_SOCIAL_STREAM (CONTACT_INFORMATION)
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> (CONTACT_INFORMATION)
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> (CONTACT_INFORMATION)

CALENDAR_INFORMATION:
<android.service.notification.ScheduleCalendar: long getNextChangeTime(long)> (CALENDAR_INFORMATION)
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)> (CALENDAR_INFORMATION)
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)> android.permission.READ_CALENDAR (CALENDAR_INFORMATION)

NFC:
<android.nfc.IAppCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()> (NFC)
<android.nfc.INfcAdapterExtras$Stub: android.nfc.INfcAdapterExtras getDefaultImpl()> (NFC)
<android.nfc.cardemulation.NfcFCardEmulation: android.nfc.cardemulation.NfcFCardEmulation getInstance(android.nfc.NfcAdapter)> (NFC)
<android.nfc.cardemulation.CardEmulation: java.util.List getServices(java.lang.String)> (NFC)
<android.nfc.INfcDta$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcUnlockHandler$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.cardemulation.AidGroup: java.lang.String getCategory()> (NFC)
<android.nfc.tech.IsoDep: int getTimeout()> (NFC)
<android.nfc.INfcCardEmulation$Default: java.util.List getServices(int,java.lang.String)> (NFC)
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getDriverName(java.lang.String)> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: int hashCode()> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()> (NFC)
<android.nfc.INfcCardEmulation$Stub: android.nfc.INfcCardEmulation asInterface(android.os.IBinder)> (NFC)
<android.nfc.INfcAdapter$Default: android.nfc.INfcTag getNfcTagInterface()> (NFC)
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()> (NFC)
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: boolean isNdefPushEnabled()> (NFC)
<android.nfc.NfcActivityManager: android.nfc.BeamShareData createBeamShareData(byte)> (NFC)
<android.nfc.INfcFCardEmulation$Default: java.util.List getNfcFServices(int)> (NFC)
<android.nfc.NdefRecord: byte[] getPayload()> (NFC)
<android.nfc.cardemulation.CardEmulation: java.lang.String getRouteDestinationForPreferredPaymentService()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getSubsetAids()> (NFC)
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()> (NFC)
<android.nfc.INfcAdapter$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: int describeContents()> (NFC)
<android.nfc.INfcDta$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.INfcAdapter$Default: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)> (NFC)
<android.nfc.INfcUnlockHandler$Stub: android.nfc.INfcUnlockHandler getDefaultImpl()> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcFCardEmulation getNfcFCardEmulationService()> (NFC)
<android.nfc.INfcAdapterExtras$Stub: android.nfc.INfcAdapterExtras asInterface(android.os.IBinder)> (NFC)
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcApplicationState findAppState(android.app.Application)> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcDta getNfcDtaInterface(java.lang.String)> (NFC)
<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()> (NFC)
<android.nfc.NdefRecord: int getByteLength()> android.permission.STOP_APP_SWITCHES (NFC)
<android.nfc.INfcUnlockHandler$Stub: android.nfc.INfcUnlockHandler asInterface(android.os.IBinder)> (NFC)
<android.nfc.IAppCallback$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcUnlockHandler$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapter$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)> (NFC)
<android.nfc.NdefRecord: byte[] getType()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: int describeContents()> (NFC)
<android.nfc.IAppCallback$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.Tag: int[] getTechCodeList()> (NFC)
<android.nfc.INfcTag$Default: int getTimeout(int)> (NFC)
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()> (NFC)
<android.nfc.INfcFCardEmulation$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapter$Default: android.nfc.INfcDta getNfcDtaInterface(java.lang.String)> (NFC)
<android.nfc.NdefRecord: byte[] toByteArray()> (NFC)
<android.nfc.INfcTag$Default: int reconnect(int)> (NFC)
<android.nfc.INfcDta$Stub: android.nfc.INfcDta getDefaultImpl()> (NFC)
<android.nfc.ITagRemovedCallback$Stub: android.nfc.ITagRemovedCallback asInterface(android.os.IBinder)> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: int getMaxNumOfRegisterableSystemCodes()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: android.content.ComponentName getComponent()> (NFC)
<android.nfc.INfcUnlockHandler$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getT3tPmm()> (NFC)
<android.nfc.NfcAdapter: java.util.List getSupportedOffHostSecureElements()> (NFC)
<android.nfc.INfcAdapterExtras$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.INfcAdapterExtras$Default: java.lang.String getDriverName(java.lang.String)> (NFC)
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: int getState()> (NFC)
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.NfcActivityManager$NfcActivityState: java.lang.String toString()> (NFC)
<android.nfc.TechListParcel: int describeContents()> (NFC)
<android.nfc.INfcCardEmulation$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.NdefMessage: int hashCode()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: int getUid()> (NFC)
<android.nfc.Tag: android.nfc.INfcTag getTagService()> (NFC)
<android.nfc.Tag: android.os.Bundle getTechExtras(int)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)> (NFC)
<android.nfc.NdefMessage: int describeContents()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: boolean isNfcSecureEnabled()> (NFC)
<android.nfc.ITagRemovedCallback$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)> (NFC)
<android.nfc.INfcCardEmulation$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.AidGroup: java.util.List getAids()> (NFC)
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)> (NFC)
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])> (NFC)
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()> (NFC)
<android.nfc.tech.NfcB: android.nfc.Tag getTag()> (NFC)
<android.nfc.INfcAdapter$Default: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()> (NFC)
<android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)> (NFC)
<android.nfc.INfcCardEmulation$Default: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: int hashCode()> (NFC)
<android.nfc.NdefMessage: int getByteArrayLength()> (NFC)
<android.nfc.ITagRemovedCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.cardemulation.CardEmulation: java.lang.CharSequence getDescriptionForPreferredPaymentService()> (NFC)
<android.nfc.INfcAdapterExtras$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.IAppCallback$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcUnlockHandler$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.INfcTag$Default: int formatNdef(int,byte[])> (NFC)
<android.nfc.INfcDta$Stub: android.nfc.INfcDta asInterface(android.os.IBinder)> (NFC)
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()> (NFC)
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()> (NFC)
<android.nfc.ITagRemovedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: int getUid()> (NFC)
<android.nfc.INfcTag$Default: int ndefMakeReadOnly(int)> (NFC)
<android.nfc.Tag: java.lang.String[] getTechList()> (NFC)
<android.nfc.Tag: int[] getTechCodesFromStrings(java.lang.String[])> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.util.List getNfcFServices(int)> (NFC)
<android.nfc.INfcCardEmulation$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.NfcAdapter: android.content.Context getContext()> (NFC)
<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)> (NFC)
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)> (NFC)
<android.nfc.Tag: int getConnectedTechnology()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)> (NFC)
<android.nfc.cardemulation.NfcFCardEmulation: int getMaxNumOfRegisterableSystemCodes()> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcCardEmulation getCardEmulationService()> (NFC)
<android.nfc.tech.NfcB: byte[] getProtocolInfo()> (NFC)
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()> (NFC)
<android.nfc.INfcFCardEmulation$Default: java.lang.String getSystemCodeForService(int,android.content.ComponentName)> (NFC)
<android.nfc.INfcFCardEmulation$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.INfcCardEmulation$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapter$Default: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()> (NFC)
<android.nfc.INfcFCardEmulation$Stub: android.nfc.INfcFCardEmulation asInterface(android.os.IBinder)> (NFC)
<android.nfc.INfcDta$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.INfcAdapter$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getPrefixAids()> (NFC)
<android.nfc.NdefRecord: int hashCode()> (NFC)
<android.nfc.INfcUnlockHandler$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.AidGroup: int describeContents()> (NFC)
<android.nfc.NdefRecord: byte[] getId()> (NFC)
<android.nfc.INfcCardEmulation$Stub: android.nfc.INfcCardEmulation getDefaultImpl()> (NFC)
<android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()> (NFC)
<android.nfc.INfcTag$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.Tag: byte[] getId()> (NFC)
<android.nfc.INfcTag$Stub$Proxy: boolean getExtendedLengthApdusSupported()> (NFC)
<android.nfc.NdefRecord: short getTnf()> (NFC)
<android.nfc.IAppCallback$Stub: android.nfc.IAppCallback asInterface(android.os.IBinder)> (NFC)
<android.nfc.Tag: int getServiceHandle()> (NFC)
<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.IAppCallback$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.IAppCallback$Stub$Proxy: android.nfc.BeamShareData createBeamShareData(byte)> (NFC)
<android.nfc.NdefRecord: int describeContents()> (NFC)
<android.nfc.ITagRemovedCallback$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForPreferredPaymentService()> (NFC)
<android.nfc.TransceiveResult: int describeContents()> (NFC)
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)> (NFC)
<android.nfc.INfcCardEmulation$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: android.content.ComponentName getComponent()> (NFC)
<android.nfc.ITagRemovedCallback$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcDta$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)> (NFC)
<android.nfc.INfcTag$Stub: android.nfc.INfcTag asInterface(android.os.IBinder)> (NFC)
<android.nfc.NfcAdapter: int getAdapterState()> (NFC)
<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()> (NFC)
<android.nfc.INfcTag$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()> (NFC)
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)> (NFC)
<android.nfc.tech.NfcB: byte[] transceive(byte[])> (NFC)
<android.nfc.tech.IsoDep: byte[] transceive(byte[])> (NFC)
<android.nfc.INfcTag$Default: int[] getTechList(int)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)> (NFC)
<android.nfc.BeamShareData: int describeContents()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getCategoryForAid(java.lang.String)> (NFC)
<android.nfc.cardemulation.CardEmulation: android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.util.ArrayList getAidGroups()> (NFC)
<android.nfc.NfcAdapter: int getSdkVersion()> (NFC)
<android.nfc.Tag: int describeContents()> (NFC)
<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)> android.permission.NFC (NFC)
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getSettingsActivityName()> (NFC)
<android.nfc.INfcFCardEmulation$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: android.nfc.cardemulation.AidGroup getDynamicAidGroupForCategory(java.lang.String)> (NFC)
<android.nfc.tech.NfcB: byte[] getApplicationData()> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getSystemCodeForService(int,android.content.ComponentName)> (NFC)
<android.nfc.tech.BasicTagTechnology: boolean isConnected()> (NFC)
<android.nfc.INfcCardEmulation$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.IAppCallback$Stub: android.nfc.IAppCallback getDefaultImpl()> (NFC)
<android.nfc.INfcTag$Default: boolean getExtendedLengthApdusSupported()> (NFC)
<android.nfc.NdefMessage: byte[] toByteArray()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getSystemCode()> (NFC)
<android.nfc.INfcFCardEmulation$Default: java.lang.String getNfcid2ForService(int,android.content.ComponentName)> (NFC)
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)> (NFC)
<android.nfc.cardemulation.NfcFCardEmulation: java.util.List getNfcFServices()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)> (NFC)
<android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter getDefaultImpl()> (NFC)
<android.nfc.INfcCardEmulation$Stub$Proxy: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)> (NFC)
<android.nfc.INfcAdapterExtras$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.ITagRemovedCallback$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getNfcid2ForService(android.content.ComponentName)> (NFC)
<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)> (NFC)
<android.nfc.INfcFCardEmulation$Default: int getMaxNumOfRegisterableSystemCodes()> (NFC)
<android.nfc.INfcFCardEmulation$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getAids()> (NFC)
<android.nfc.INfcUnlockHandler$Default: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapter$Default: int getState()> (NFC)
<android.nfc.INfcAdapterExtras$Default: int getCardEmulationRoute(java.lang.String)> (NFC)
<android.nfc.INfcDta$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getDescription()> (NFC)
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getSystemCodeForService(android.content.ComponentName)> (NFC)
<android.nfc.IAppCallback$Stub: java.lang.String getTransactionName(int)> (NFC)
<android.nfc.NdefRecord: java.lang.String toMimeType()> (NFC)
<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)> android.permission.NFC (NFC)
<android.nfc.INfcTag$Stub: java.lang.String getDefaultTransactionName(int)> (NFC)
<android.nfc.INfcTag$Default: int ndefWrite(int,android.nfc.NdefMessage)> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcDta getNfcDtaInterface()> (NFC)
<android.nfc.INfcFCardEmulation$Stub: android.nfc.INfcFCardEmulation getDefaultImpl()> (NFC)
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()> (NFC)
<android.nfc.INfcDta$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcCardEmulation$Default: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)> (NFC)
<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)> (NFC)
<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()> (NFC)
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getDescription()> (NFC)
<android.nfc.INfcCardEmulation$Stub$Proxy: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)> (NFC)
<android.nfc.INfcTag$Default: int connect(int,int)> (NFC)
<android.nfc.INfcAdapter$Stub$Proxy: android.os.IBinder asBinder()> (NFC)
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getNfcid2()> (NFC)
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getNfcid2ForService(int,android.content.ComponentName)> (NFC)
<android.nfc.INfcTag$Default: int getMaxTransceiveLength(int)> (NFC)
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()> (NFC)
<android.nfc.INfcCardEmulation$Stub$Proxy: java.util.List getServices(int,java.lang.String)> (NFC)
<android.nfc.tech.NfcB: int getMaxTransceiveLength()> (NFC)
<android.nfc.ITagRemovedCallback$Stub: android.nfc.ITagRemovedCallback getDefaultImpl()> (NFC)
