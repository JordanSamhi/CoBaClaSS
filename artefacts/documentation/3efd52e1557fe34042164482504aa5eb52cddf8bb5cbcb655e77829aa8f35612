
     * Open the NFC Execution Environment on its contact interface.
     *
     * <p>Opening a channel to the the secure element may fail
     * for a number of reasons:
     * <ul>
     * <li>NFC must be enabled for the connection to the SE to be opened.
     * If it is disabled at the time of this call, an {@link EeNfcDisabledException}
     * is thrown.
     *
     * <li>Only one process may open the secure element at a time. Additionally,
     * this method is not reentrant. If the secure element is already opened,
     * either by this process or by a different process, an {@link EeAlreadyOpenException}
     * is thrown.
     *
     * <li>If the connection to the secure element could not be initialized,
     * an {@link EeInitializationException} is thrown.
     *
     * <li>If the secure element or the NFC controller is activated in listen
     * mode - that is, it is talking over the contactless interface - an
     * {@link EeListenModeException} is thrown.
     *
     * <li>If the NFC controller is in a field powered by a remote device,
     * such as a payment terminal, an {@link EeExternalFieldException} is
     * thrown.
     * </ul>
     * <p>All other NFC functionality is disabled while the NFC-EE is open
     * on its contact interface, so make sure to call {@link #close} once complete.
     *
     * <p class="note">
     * Requires the {@link android.Manifest.permission#WRITE_SECURE_SETTINGS} permission.
     *
     * @throws EeAlreadyOpenException if the NFC-EE is already open
     * @throws EeNfcDisabledException if NFC is disabled
     * @throws EeInitializationException if the Secure Element could not be initialized
     * @throws EeListenModeException if the NFCC or Secure Element is activated in listen mode
     * @throws EeExternalFieldException if the NFCC is in the presence of a remote-powered field
     * @throws EeIoException if an unknown error occurs
     