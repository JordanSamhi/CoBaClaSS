
     * Encrypts {@code payload} by using {@code theirPublicKey} and/or {@code sharedSecret}. At
     * least one of {@code theirPublicKey} and {@code sharedSecret} must be non-null, and an empty
     * {@code sharedSecret} is equivalent to null.
     *
     * <p>Note that {@code header} will be authenticated (but not encrypted) together with {@code
     * payload}, and the same {@code header} has to be provided for {@link #decrypt}.
     *
     * @param theirPublicKey the recipient's public key, or null if the payload is to be encrypted
     *     only with the shared secret
     * @param sharedSecret the secret shared between the sender and the recipient, or null if the
     *     payload is to be encrypted only with the recipient's public key
     * @param header the data that will be authenticated with {@code payload} but not encrypted, or
     *     null if the data is empty
     * @param payload the data to be encrypted, or null if the data is empty
     * @return the encrypted payload
     * @throws NoSuchAlgorithmException if any underlying crypto algorithm is not supported
     * @throws InvalidKeyException if the provided key is invalid for underlying crypto algorithms
     * @hide
     