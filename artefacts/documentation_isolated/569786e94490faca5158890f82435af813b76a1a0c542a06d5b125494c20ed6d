
     * Kicks-off the callable provided in the constructor and blocks before returning, waiting for
     * the first of these to happen:
     *
     * <ul>
     *   <li>The callback passed to {@link RemoteCallable} is called with the result. We return a
     *       present {@link RemoteResult} with the result.
     *   <li>Time-out happens. We return {@link RemoteResult#FAILED_TIMED_OUT}.
     *   <li>Someone calls {@link #cancel()} on this object. We return {@link
     *       RemoteResult#FAILED_CANCELLED}.
     * </ul>
     *
     * <p>This method can't be called from the main thread and was designed to be called only once.
     *
     * @return A {@link RemoteResult} with the result of the operation.
     * @throws RemoteException If the callable throws it.
     