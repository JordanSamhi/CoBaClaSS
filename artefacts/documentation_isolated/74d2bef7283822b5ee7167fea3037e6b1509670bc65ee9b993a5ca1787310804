
   * Gets the theme style resource defined by this library for the given theme name. For example,
   * for THEME_GLIF_LIGHT, the theme @style/SuwThemeGlif.Light is returned.
   *
   * <p>If you require extra theme attributes but want to ensure forward compatibility with new
   * themes added here, consider overriding {@link android.app.Activity#onApplyThemeResource} in
   * your activity and call {@link Theme#applyStyle(int, boolean)} using your theme overlay.
   *
   * <pre>{@code
   * protected void onApplyThemeResource(Theme theme, int resid, boolean first) {
   *     super.onApplyThemeResource(theme, resid, first);
   *     theme.applyStyle(R.style.MyThemeOverlay, true);
   * }
   * }</pre>
   *
   * @param theme The string representation of the theme.
   * @return The style corresponding to the given {@code theme}, or {@code defaultTheme} if the
   *     given theme is not recognized.
   * @deprecated it is recommended to use {@link ThemeResolver} which allows setting the default
   *     theme in one place and applying it to multiple screens.
   