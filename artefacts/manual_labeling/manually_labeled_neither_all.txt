<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
<android.widget.ListPopupWindow: void setSelection(int)>
<android.view.View: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
<android.view.SurfaceControl: android.view.SurfaceControl mirrorSurface(android.view.SurfaceControl)>
<android.view.View: void buildLayer()>
<android.media.MediaDrm: void setOnKeyStatusChangeListener(android.media.MediaDrm$OnKeyStatusChangeListener,android.os.Handler)>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<android.telephony.TelephonyRegistryManager: void notifySignalStrengthChanged(int,int,android.telephony.SignalStrength)>
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>
<android.os.IncidentManager: void unregisterSection(int)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean equals(java.lang.Object)>
<android.database.DataSetObservable: void notifyInvalidated()>
<android.database.sqlite.SQLiteDatabase$OpenParams$Builder: android.database.sqlite.SQLiteDatabase$OpenParams$Builder removeOpenFlags(int)>
<android.widget.Toolbar: void setContentInsetsAbsolute(int,int)>
<android.os.ConditionVariable: void close()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setDataLimit(long,int)>
<android.view.DisplayCutout: android.view.DisplayCutout replaceSafeInsets(android.graphics.Rect)>
<android.view.ViewGroup: void removeAllViews()>
<android.hardware.display.DeviceProductInfo$ManufactureDate: boolean equals(java.lang.Object)>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
<android.view.ContextThemeWrapper: void setTheme(int)>
<android.view.textservice.SuggestionsInfo: int describeContents()>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>
<android.widget.TextView: void drawableHotspotChanged(float,float)>
<android.os.storage.VolumeInfo: int hashCode()>
<android.view.View: void setScaleX(float)>
<android.telephony.MbmsDownloadSession: void addStatusListener(android.telephony.mbms.DownloadRequest,java.util.concurrent.Executor,android.telephony.mbms.DownloadStatusListener)>
<android.telephony.euicc.EuiccCardManager: void switchToProfile(java.lang.String,java.lang.String,boolean,java.util.concurrent.Executor,android.telephony.euicc.EuiccCardManager$ResultCallback)>
<android.bluetooth.BluetoothMap: void close()>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>
<android.telephony.euicc.EuiccManager: void retainSubscriptionsForFactoryReset(android.app.PendingIntent)>
<android.hardware.camera2.params.OisSample: boolean equals(java.lang.Object)>
<android.hardware.input.InputManager: android.view.VerifiedInputEvent verifyInputEvent(android.view.InputEvent)>
<android.widget.HorizontalScrollView: void setEdgeEffectColor(int)>
<android.telephony.TelephonyManager: boolean matchesCurrentSimOperator(java.lang.String,int,java.lang.String)>
<android.os.SynchronousResultReceiver: android.os.SynchronousResultReceiver$Result awaitResult(long)>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<android.os.VibrationEffect$OneShot: android.os.VibrationEffect$OneShot scale(float,int)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
<android.telephony.TelephonyManager: void updateAvailableNetworks(java.util.List,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.os.UpdateEngine: int cleanupAppliedPayload()>
<java.net.Socket: void setReuseAddress(boolean)>
<java.net.HttpCookie: void setMaxAge(long)>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
<android.util.proto.EncodedBuffer: void writeRawVarint64(long)>
<android.nfc.NfcAdapter: boolean ignore(android.nfc.Tag,int,android.nfc.NfcAdapter$OnTagRemovedListener,android.os.Handler)>
<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>
<java.net.HttpCookie: int hashCode()>
<android.telephony.TelephonyManager: void resetAllCarrierActions()>
<android.telephony.VisualVoicemailService$VisualVoicemailTask: void finish()>
<android.widget.Magnifier: float getZoom()>
<android.widget.TextView: void setPaintFlags(int)>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,int,long)>
<android.util.SparseArray: java.lang.String toString()>
<android.telephony.BarringInfo$BarringServiceInfo: int hashCode()>
<android.os.FileBridge: void run()>
<android.telephony.data.ApnSetting: boolean canHandleType(int)>
<android.telephony.PhoneStateListener: void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>
<android.os.LocaleList: void setDefault(android.os.LocaleList,int)>
<android.os.VintfObject: int verify(java.lang.String[])>
<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings$Builder setScanMode(int)>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>
<android.media.MediaPlayer: void setOnSubtitleDataListener(android.media.MediaPlayer$OnSubtitleDataListener,android.os.Handler)>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.UserHandle: int getUid(int,int)>
<android.view.MotionEvent: float getXPrecision()>
<android.bluetooth.BluetoothHeadset: boolean stopScoUsingVirtualVoiceCall()>
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>
<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<android.graphics.drawable.GradientDrawable: float getInnerRadiusRatio()>
<android.util.proto.ProtoOutputStream: void writePackedInt32(long,int[])>
<android.content.pm.CrossProfileApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle)>
<android.renderscript.Allocation: android.renderscript.Allocation[] createAllocations(android.renderscript.RenderScript,android.renderscript.Type,int,int)>
<android.util.ArrayMap: java.lang.String toString()>
<android.app.AlarmManager: void setTime(long)>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>
<android.database.sqlite.SQLiteClosable: void releaseReference()>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>
<android.hardware.display.VirtualDisplay: void setSurface(android.view.Surface)>
<android.bluetooth.BluetoothGatt: void close()>
<android.widget.AdapterView: void setFocusable(int)>
<android.app.admin.DevicePolicyManager: void setRequiredStrongAuthTimeout(android.content.ComponentName,long)>
<java.net.HttpCookie: boolean domainMatches(java.lang.String,java.lang.String)>
<android.nfc.cardemulation.NfcFCardEmulation: boolean disableService(android.app.Activity)>
<android.nfc.dta.NfcDta: boolean enableClient(java.lang.String,int,int,int)>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.database.ContentObserver: void onChange(boolean,java.util.Collection,int)>
<android.bluetooth.BluetoothGattServer: boolean removeService(android.bluetooth.BluetoothGattService)>
<android.util.SparseBooleanArray: java.lang.String toString()>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>
<android.text.StaticLayout: int getEllipsisStart(int)>
<android.app.Activity: void setRequestedOrientation(int)>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<android.widget.TextView: void setElegantTextHeight(boolean)>
<android.widget.HorizontalScrollView: void setRightEdgeEffectColor(int)>
<android.app.FragmentHostCallback: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.os.PersistableBundle: java.lang.String toString()>
<android.app.Dialog: void setTitle(int)>
<android.app.Activity: void setPictureInPictureParams(android.app.PictureInPictureParams)>
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>
<android.app.admin.DevicePolicyManager: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.Set)>
<android.bluetooth.le.PeriodicAdvertisingReport: boolean equals(java.lang.Object)>
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>
<android.os.storage.StorageManager: void setCacheBehaviorGroup(java.io.File,boolean)>
<android.bluetooth.BluetoothPbapClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>
<android.bluetooth.le.ScanResult: int getDataStatus()>
<android.view.DisplayAdjustments: int getRotation(int)>
<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)>
<java.net.InetSocketAddress: int hashCode()>
<android.view.WindowId: boolean isFocused()>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.media.MediaPlayer: void setDataSource(android.content.res.AssetFileDescriptor)>
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)>
<android.telephony.data.ApnSetting: int getMaxConnsTime()>
<android.util.Rational: java.lang.String toString()>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.graphics.Color: int green(int)>
<android.app.Activity: void setTheme(int)>
<android.graphics.Canvas: void setDensity(int)>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>
<android.widget.Spinner: void setDropDownVerticalOffset(int)>
<android.app.admin.DevicePolicyManager: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<java.net.URL: int hashCode()>
<android.nfc.NfcAdapter: void disableReaderMode(android.app.Activity)>
<android.app.Fragment: java.lang.String getString(int)>
<android.graphics.drawable.GradientDrawable: void setPadding(int,int,int,int)>
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.media.session.MediaSession: void setFlags(int)>
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)>
<android.nfc.NfcAdapter: boolean enable()>
<android.telephony.euicc.EuiccManager: void updateSubscriptionNickname(int,java.lang.String,android.app.PendingIntent)>
<android.view.View: void setScrollIndicators(int)>
<android.app.Activity: void onActivityReenter(int,android.content.Intent)>
<android.view.View: void setRotation(float)>
<android.telephony.TelephonyManager: void setPreferredOpportunisticDataSubscription(int,boolean,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
<android.database.DatabaseUtils$InsertHelper: void close()>
<java.net.DatagramPacket: void setLength(int)>
<android.graphics.drawable.Drawable: int[] getState()>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>
<android.os.Parcel: void writeException(java.lang.Exception)>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>
<android.widget.TextView: boolean bringPointIntoView(int)>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>
<android.widget.ImageView: void animateTransform(android.graphics.Matrix)>
<android.text.style.QuoteSpan: int getStripeWidth()>
<android.widget.ImageView: void setVisibility(int)>
<android.app.Activity: void setActionBar(android.widget.Toolbar)>
<android.widget.AbsListView: void setFilterText(java.lang.String)>
<android.widget.RemoteViews: void setAccessibilityTraversalBefore(int,int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,int,android.app.AppOpsManager$OnOpChangedListener)>
<android.widget.ImageView: int getBaseline()>
<android.media.MediaPlayer: void setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer$OnMediaTimeDiscontinuityListener)>
<android.service.notification.ScheduleCalendar: long getNextChangeTime(long)>
<android.nfc.cardemulation.CardEmulation: boolean unsetOffHostForService(android.content.ComponentName)>
<android.database.CursorWindow: boolean allocRow()>
<android.app.admin.DevicePolicyManager: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.app.FragmentHostCallback: int onGetWindowAnimations()>
<android.widget.ListPopupWindow: void setAnimationStyle(int)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>
<android.media.MediaCas: void sendEvent(int,int,byte[])>
<android.content.pm.SharedLibraryInfo: java.util.List getAllCodePaths()>
<android.util.proto.ProtoOutputStream: void writePackedFixed32(long,int[])>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>
<android.graphics.Paint: boolean setFontVariationSettings(java.lang.String)>
<android.view.View: int getExplicitStyle()>
<android.view.textclassifier.TextClassification: float getConfidenceScore(java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>
<android.telephony.SubscriptionManager: void setSubscriptionOverrideUnmetered(int,boolean,long)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>
<android.bluetooth.BluetoothDevice: boolean setPin(java.lang.String)>
<android.app.admin.DevicePolicyManager: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>
<android.widget.Spinner: void setEnabled(boolean)>
<android.widget.TextView: android.graphics.BlendMode getCompoundDrawableTintBlendMode()>
<android.media.AudioManager: void setParameters(java.lang.String)>
<android.app.AlarmManager: void cancel(android.app.AlarmManager$OnAlarmListener)>
<android.widget.Toolbar: void setSubtitleTextColor(int)>
<android.widget.TextView: void setText(int)>
<android.widget.TextView: int getMaxLines()>
<android.net.TrafficStats: void setThreadStatsUid(int)>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession$Callback)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.widget.Toast: void setText(int)>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>
<android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)>
<android.app.Activity: void setFeatureDrawableResource(int,int)>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.renderscript.Int4: int get(int)>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
<android.telephony.emergency.EmergencyNumber: int hashCode()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>
<android.app.NotificationManager: void setInterruptionFilter(int)>
<android.util.proto.EncodedBuffer: void writeRawBuffer(byte[])>
<android.graphics.RenderNode: long getUniqueId()>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>
<android.view.animation.AnimationSet: void setDuration(long)>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<android.util.LongSparseArray: java.lang.String toString()>
<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>
<android.view.WindowInsets: int getStableInsetTop()>
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>
<android.media.tv.TvTrackInfo: float getVideoPixelAspectRatio()>
<android.app.admin.DevicePolicyManager: void setAutoTimeZoneEnabled(android.content.ComponentName,boolean)>
<android.app.Activity: void setVrModeEnabled(boolean,android.content.ComponentName)>
<android.content.ContextWrapper: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender)>
<android.net.Uri: int compareTo(android.net.Uri)>
<android.widget.TextView: void setTextAppearance(int)>
<com.android.internal.graphics.palette.Palette: int getLightVibrantColor(int)>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.graphics.Outline: void setRect(int,int,int,int)>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>
<android.accounts.AccountManager: boolean setAccountVisibility(android.accounts.Account,java.lang.String,int)>
<android.util.SparseLongArray: java.lang.String toString()>
<android.telephony.SignalStrength: int describeContents()>
<android.widget.AbsListView: void setEdgeEffectColor(int)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<android.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal(int)>
<android.app.Activity: void setVolumeControlStream(int)>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<android.view.View: boolean getClipBounds(android.graphics.Rect)>
<android.app.Service: void onRebind(android.content.Intent)>
<android.graphics.drawable.ColorStateListDrawable: int getOpacity()>
<android.nfc.tech.IsoDep: void setTimeout(int)>
<android.graphics.Path: void set(android.graphics.Path)>
<android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>
<com.android.internal.util.ContrastColorUtil: int resolveColor(android.content.Context,int,boolean)>
<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
<android.widget.SearchView: void setImeOptions(int)>
<android.text.BoringLayout: int getEllipsizedWidth()>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
<android.graphics.drawable.AdaptiveIconDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
<android.nfc.NfcAdapter: boolean disable(boolean)>
<android.graphics.drawable.LayerDrawable: boolean onLayoutDirectionChanged(int)>
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>
<android.hardware.camera2.params.MeteringRectangle: int getHeight()>
<android.view.SurfaceControlViewHost: void setView(android.view.View,int,int)>
<android.accessibilityservice.AccessibilityService: void setGestureDetectionPassthroughRegion(int,android.graphics.Region)>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
<android.os.WorkSource: boolean add(android.os.WorkSource)>
<android.app.admin.DevicePolicyManager: void setSystemSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.widget.AdapterViewAnimator: void setSelection(int)>
<android.content.RestrictionEntry: java.lang.String getSelectedString()>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
<android.widget.PopupWindow: void update(android.view.View,int,int)>
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)>
<android.widget.ImageView: void drawableHotspotChanged(float,float)>
<android.media.TimedText: java.lang.String getText()>
<android.widget.TextView: void setPadding(int,int,int,int)>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.media.MediaDrm: void setOnEventListener(java.util.concurrent.Executor,android.media.MediaDrm$OnEventListener)>
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)>
<android.view.MotionEvent: float getAxisValue(int,int)>
<android.telephony.CellSignalStrengthLte: int hashCode()>
<android.view.View: void setBackground(android.graphics.drawable.Drawable)>
<android.nfc.NdefMessage: boolean equals(java.lang.Object)>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>
<android.app.admin.DevicePolicyManager: void setManagedProfileMaximumTimeOff(android.content.ComponentName,long)>
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>
<android.app.blob.BlobHandle: byte[] getSha256Digest()>
<android.media.MediaFormat: java.lang.String getString(java.lang.String,java.lang.String)>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>
<android.graphics.Outline: void setPath(android.graphics.Path)>
<android.nfc.dta.NfcDta: boolean disableDta()>
<android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)>
<android.app.AppOpsManager: int startOp(int,int,java.lang.String)>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<android.content.Context: java.lang.String getString(int)>
<android.widget.TextView: void setInputType(int)>
<android.app.Activity: void setContentView(android.view.View)>
<android.view.View: void drawableHotspotChanged(float,float)>
<android.app.admin.DevicePolicyManager: void setPersonalAppsSuspended(android.content.ComponentName,boolean)>
<android.widget.ListView: void setCacheColorHint(int)>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>
<android.media.session.MediaSession: void setExtras(android.os.Bundle)>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.view.Window: void clearFlags(int)>
<android.media.AudioFormat: int hashCode()>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender)>
<android.app.WallpaperColors: android.app.WallpaperColors fromDrawable(android.graphics.drawable.Drawable)>
<android.widget.EditText: void setSelection(int)>
<android.graphics.drawable.AdaptiveIconDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)>
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>
<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager$OnOpChangedListener)>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
<android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
<android.widget.Toolbar: void setLogo(int)>
<android.content.Intent: java.lang.String getDataString()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startUpdateCredentialsSession(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.content.Context: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean setTimeZone(android.content.ComponentName,java.lang.String)>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<android.os.PersistableBundle: android.os.PersistableBundle readFromStream(java.io.InputStream)>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener)>
<android.widget.Toolbar: int getTitleMarginTop()>
<android.transition.Transition: java.lang.String toString()>
<android.util.Half: int compareTo(android.util.Half)>
<android.app.Vr2dDisplayProperties: int getHeight()>
<android.widget.TextView: void setTextSelectHandle(int)>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.util.proto.ProtoOutputStream: int checkFieldId(long,long)>
<android.net.SocketKeepalive: void start(int)>
<android.app.admin.DevicePolicyManager: int setGlobalPrivateDnsModeOpportunistic(android.content.ComponentName)>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],android.net.Uri,java.lang.String)>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>
<android.content.pm.PackageInstaller: void uninstall(android.content.pm.VersionedPackage,int,android.content.IntentSender)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>
<android.app.AlertDialog: void setIcon(int)>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.graphics.RenderNode: android.graphics.Matrix getAnimationMatrix()>
<android.graphics.Outline: void set(android.graphics.Outline)>
<android.view.textclassifier.TextClassifierEvent: java.lang.String toString()>
<android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
<android.media.Ringtone: void setStreamType(int)>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes,int,int,android.media.audiopolicy.AudioPolicy)>
<android.view.View: void offsetTopAndBottom(int)>
<android.graphics.drawable.RotateDrawable: float getPivotY()>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>
<android.view.View: void setOutlineSpotShadowColor(int)>
<android.view.ViewGroup: void addKeyboardNavigationClusters(java.util.Collection,int)>
<android.telephony.euicc.EuiccManager: void deleteSubscription(int,android.app.PendingIntent)>
<android.app.admin.DevicePolicyManager: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<android.widget.Spinner: void setDropDownHorizontalOffset(int)>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<android.view.View: int resolveSizeAndState(int,int,int)>
<android.media.MediaPlayer: void setVolume(float)>
<android.app.admin.DevicePolicyManager: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>
<android.content.ContentValues: int hashCode()>
<android.content.ContextWrapper: void setTheme(int)>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.widget.RemoteViews: void setChronometerCountDown(int,boolean)>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.graphics.Color: int argb(float,float,float,float)>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>
<android.widget.TextView: void setTextIsSelectable(boolean)>
<android.util.SparseIntArray: java.lang.String toString()>
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>
<android.location.GpsStatus: android.location.GpsStatus create(android.location.GnssStatus,int)>
<android.view.View: void setRotationX(float)>
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>
<android.app.NotificationManager: void setNotificationPolicy(android.app.NotificationManager$Policy)>
<android.app.admin.DevicePolicyManager: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.view.View: void setFocusable(boolean)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)>
<com.android.internal.util.StateMachine: java.lang.String getName()>
<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>
<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<android.app.admin.DevicePolicyManager: boolean revokeKeyPairFromApp(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<android.graphics.drawable.VectorDrawable: int getAlpha()>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)>
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
<android.app.WallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean)>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.widget.TextView: void setEnabled(boolean)>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture finishSession(android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.app.admin.DevicePolicyManager: void setOrganizationColor(android.content.ComponentName,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
<android.animation.ObjectAnimator: void setFloatValues(float[])>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>
<android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>
<android.media.AudioManager: void setRingerMode(int)>
<android.app.admin.DevicePolicyManager: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>
<android.hardware.SensorDirectChannel: int configure(android.hardware.Sensor,int)>
<android.graphics.fonts.Font: java.nio.ByteBuffer getBuffer()>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>
<android.view.KeyEvent: int normalizeMetaState(int)>
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)>
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources$Theme)>
<android.view.contentcapture.ContentCaptureSession: java.lang.String toString()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>
<android.app.admin.DevicePolicyManager: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(com.android.internal.telephony.OperatorInfo,boolean)>
<android.app.admin.DevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<android.widget.Toolbar: void setTitleTextColor(int)>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)>
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender,int)>
<android.content.pm.PackageInstaller: void uninstallExistingPackage(java.lang.String,android.content.IntentSender)>
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<android.view.View: void setVerticalScrollbarTrackDrawable(android.graphics.drawable.Drawable)>
<android.content.ContentProvider: int delete(android.net.Uri,android.os.Bundle)>
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.app.NotificationManager: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)>
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.security.keymaster.KeyCharacteristics: long getUnsignedInt(int,long)>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>
<android.print.PageRange: int getEnd()>
<android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent,boolean)>
<android.app.AlertDialog: void setView(android.view.View)>
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)>
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.telephony.CellIdentityLte: int hashCode()>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>
<android.view.ViewGroup: void setClipChildren(boolean)>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)>
<android.animation.Animator: android.content.res.ConstantState createConstantState()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture isCredentialsUpdateSuggested(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)>
<android.widget.TextView: void setSelected(boolean)>
<android.graphics.ColorSpace: java.lang.String toString()>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>
<android.app.Service: void onStart(android.content.Intent,int)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>
<android.view.View: void setPivotY(float)>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(java.lang.String,boolean,int)>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)>
<android.content.pm.LauncherApps: void startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle)>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)>
<android.print.PageRange: java.lang.String toString()>
<android.app.Activity: void setTitle(int)>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>
<android.media.MediaPlayer: java.lang.String getDrmPropertyString(java.lang.String)>
<android.app.UiAutomation: boolean setRotation(int)>
<android.telephony.SubscriptionManager: void setSubscriptionOverrideCongested(int,boolean,long)>
<android.app.UiModeManager: void setNightMode(int)>
<android.widget.AbsSpinner: void setSelection(int,boolean)>
<android.graphics.drawable.DrawableWrapper: boolean onLayoutDirectionChanged(int)>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)>
<android.telephony.CellInfoCdma: int hashCode()>
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<android.graphics.drawable.GradientDrawable: void setColors(int[],float[])>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.telephony.SubscriptionManager: boolean setOpportunistic(boolean,int)>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.view.View: void setVisibility(int)>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>
<android.os.storage.StorageManager: void setCacheBehaviorTombstone(java.io.File,boolean)>
<android.widget.TextView: void setTextScaleX(float)>
<android.view.Choreographer: long getFrameTimeNanos()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)>
<android.widget.TextView: int getTextSizeUnit()>
<android.app.Dialog: void setVolumeControlStream(int)>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>
<android.widget.RadioGroup: void check(int)>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>
<android.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)>
<android.app.admin.DevicePolicyManager: void setFactoryResetProtectionPolicy(android.content.ComponentName,android.app.admin.FactoryResetProtectionPolicy)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])>
<android.view.View: void setOutlineAmbientShadowColor(int)>
<android.view.View: void setTop(int)>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>
<android.graphics.drawable.DrawableWrapper: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
<android.os.Bundle: java.lang.String toString()>
<android.media.tv.TvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo)>
<android.hardware.SensorManager: float getAltitude(float,float)>
<android.widget.CheckedTextView: void setVisibility(int)>
<android.widget.Scroller: void startScroll(int,int,int,int)>
<android.view.View: int getPaddingRight()>
<android.view.ViewGroup: void setLayoutMode(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.view.View: void layout(int,int,int,int)>
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>
<android.app.admin.DevicePolicyManager: void setLogoutEnabled(android.content.ComponentName,boolean)>
<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>
<android.widget.ScrollView: void setBottomEdgeEffectColor(int)>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>
<android.util.ArraySet: java.lang.String toString()>
<android.view.View: int combineMeasuredStates(int,int)>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<android.location.GnssClock: long getFullBiasNanos()>
<android.media.AudioManager: boolean isValidRingerMode(int)>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<android.view.View: void setClipToOutline(boolean)>
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)>
<android.widget.EdgeEffect: void setColor(int)>
<android.app.admin.DevicePolicyManager: void setBackupServiceEnabled(android.content.ComponentName,boolean)>
<android.text.BoringLayout: int getEllipsisCount(int)>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<android.widget.TextView: void setText(char[],int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
<android.content.res.Configuration: void writeResConfigToProto(android.util.proto.ProtoOutputStream,long,android.util.DisplayMetrics)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startAddAccountSession(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
<android.app.Service: void startForeground(int,android.app.Notification)>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.app.admin.DevicePolicyManager: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)>
<android.widget.ImageView: void setColorFilter(int)>
<android.view.View: void setBottom(int)>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>
<android.widget.ListPopupWindow: void setContentWidth(int)>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>
<android.animation.ObjectAnimator: void setIntValues(int[])>
<android.animation.ValueAnimator: int getRepeatCount()>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Outline: void setRect(android.graphics.Rect)>
<android.media.AudioManager: void setMode(int)>
<android.telephony.TelephonyManager: boolean setVoiceMailNumber(java.lang.String,java.lang.String)>
<android.content.pm.PackageInstaller: void installExistingPackage(java.lang.String,int,android.content.IntentSender)>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.graphics.Color: int alpha(int)>
<android.location.LocationManager: void getCurrentLocation(android.location.LocationRequest,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintBlendMode(android.graphics.BlendMode)>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
<android.app.Service: void startForeground(int,android.app.Notification,int)>
<android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
<android.media.AudioManager: boolean setSurroundFormatEnabled(int,boolean)>
<android.app.Activity: void setIntent(android.content.Intent)>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
<android.widget.Toolbar: void setContentInsetsRelative(int,int)>
<android.util.proto.EncodedBuffer: void writeFromThisBuffer(int,int)>
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(java.util.concurrent.Executor,android.telephony.ims.ImsMmTelManager$RegistrationCallback)>
<android.app.ActivityManager: void setWatchHeapLimit(long)>
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>
<android.view.View: void setAlpha(float)>
<android.media.session.MediaController: void setVolumeTo(int,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>
<android.widget.EdgeEffect: void setBlendMode(android.graphics.BlendMode)>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener,android.app.ActivityOptions$OnAnimationFinishedListener)>
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>
<android.widget.RemoteViews: void setDisplayedChild(int,int)>
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
