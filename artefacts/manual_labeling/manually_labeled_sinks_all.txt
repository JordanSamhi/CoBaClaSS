<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>
<android.bluetooth.BluetoothHidDevice: boolean sendReport(android.bluetooth.BluetoothDevice,int,byte[])>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,int,boolean,int)>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.nfc.cardemulation.HostNfcFService: void sendResponsePacket(byte[])>
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,int,boolean,int)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String)>
<android.view.autofill.AutofillManager: void setUserData(android.service.autofill.UserData)>
<android.telephony.TelephonyManager: void sendDialerSpecialCode(java.lang.String)>
<java.net.Socket: void sendUrgentData(int)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>
<android.hardware.camera2.DngCreator: void writeByteBuffer(java.io.OutputStream,android.util.Size,java.nio.ByteBuffer,long)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.content.pm.CrossProfileApps: void startActivity(android.content.Intent,android.os.UserHandle,android.app.Activity,android.os.Bundle)>
<android.database.sqlite.SQLiteQueryBuilder: int update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
<android.database.sqlite.SQLiteQueryBuilder: long insert(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>
<android.content.Context: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.telephony.CellBroadcastIntents: void sendSmsCbReceivedBroadcast(android.content.Context,android.os.UserHandle,android.telephony.SmsCbMessage,android.content.BroadcastReceiver,android.os.Handler,int,int)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.hardware.location.ContextHubClient: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
<android.content.Intent: int fillIn(android.content.Intent,int)>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)>
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)>
<android.telephony.MmsManager: void sendMultimediaMessage(int,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long)>
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,long)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,int,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,java.lang.String,android.os.Bundle,android.os.Bundle)>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>
<android.bluetooth.BluetoothMapClient: boolean sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>
<android.telephony.ims.stub.ImsSmsImplBase: void sendSms(int,int,java.lang.String,java.lang.String,boolean,byte[])>
<android.app.Activity: void startActivities(android.content.Intent[])>
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.hardware.camera2.DngCreator: void writeImage(java.io.OutputStream,android.media.Image)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.media.midi.MidiReceiver: void send(byte[],int,int)>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.nfc.cardemulation.HostApduService: void sendResponseApdu(byte[])>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,int)>
<android.bluetooth.BluetoothAvrcpController: void sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int)>
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<android.os.PersistableBundle: void writeToStream(java.io.OutputStream)>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>
<android.telephony.SmsManager: void sendMultipartTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<java.net.URL: java.net.URLConnection openConnection()>
<android.telephony.ims.stub.RcsSipOptionsImplBase: void sendCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>
<android.bluetooth.BluetoothHidHost: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.Fragment: void startActivity(android.content.Intent)>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>
<android.app.AlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource)>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,long)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.telephony.TelephonyManager: void sendVisualVoicemailSmsForSubscriber(int,java.lang.String,int,java.lang.String,android.app.PendingIntent)>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>
<android.telephony.TelephonyManager: void sendVisualVoicemailSms(java.lang.String,int,java.lang.String,android.app.PendingIntent)>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,boolean,int)>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>
<android.util.LogWriter: void write(char[],int,int)>
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)>
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>
<android.app.Activity: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)>
<android.telephony.SmsManager: void sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>
<android.telephony.VisualVoicemailService: void sendVisualVoicemailSms(android.content.Context,android.telecom.PhoneAccountHandle,java.lang.String,short,java.lang.String,android.app.PendingIntent)>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>
