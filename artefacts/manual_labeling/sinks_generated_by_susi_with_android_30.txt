
NO_CATEGORY:
<android.media.tv.TvInputManager: void notifyWatchNextProgramBrowsableDisabled(java.lang.String,long)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,long)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,boolean,int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK android.permission.WRITE_SETTINGS (NO_CATEGORY)
<android.media.tv.TvInputManager: void notifyPreviewProgramBrowsableDisabled(java.lang.String,long)> (NO_CATEGORY)
<android.telephony.SmsManager$2: void onSuccess(int)> (NO_CATEGORY)
<android.app.IActivityManager$Stub$Proxy: int sendIntentSender(android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.IActivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager$PendingEvent)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultipartTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (NO_CATEGORY)
<android.telephony.TelephonyManager: void sendVisualVoicemailSmsForSubscriber(int,java.lang.String,int,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<android.telephony.TelephonyManager: void sendDialerSpecialCode(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (NO_CATEGORY)
<android.media.tv.TvInputManager: void notifyPreviewProgramAddedToWatchNext(java.lang.String,long,long)> (NO_CATEGORY)
<android.telephony.SmsManager$3: void onSuccess(int)> (NO_CATEGORY)
<android.view.contentcapture.IContentCaptureDirectManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.media.tv.ITvInputManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (NO_CATEGORY)
<android.telephony.euicc.EuiccManager: void deleteSubscription(int,android.app.PendingIntent)> (NO_CATEGORY)
<android.telephony.SmsManager$4: void onSuccess(int)> (NO_CATEGORY)
<android.media.tv.ITvInputManager$Stub$Proxy: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (NO_CATEGORY)
<android.hardware.location.ContextHubManager: int sendMessage(int,int,android.hardware.location.ContextHubMessage)> (NO_CATEGORY)
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.telephony.SmsManager$5: void onSuccess(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager$H: void handleMessage(android.os.Message)> (NO_CATEGORY)
<android.telephony.euicc.EuiccManager: void updateSubscriptionNickname(int,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<android.media.tv.ITvInputManager$Stub$Proxy: void sendTvInputNotifyIntent(android.content.Intent,int)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,int,boolean,int)> (NO_CATEGORY)
<android.telephony.MmsManager: void sendMultimediaMessage(int,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long)> (NO_CATEGORY)
<android.media.tv.TvInputManager$Session: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: boolean sendFingerprintGesture(int)> (NO_CATEGORY)
<android.view.contentcapture.IContentCaptureDirectManager$Stub$Proxy: void sendEvents(android.content.pm.ParceledListSlice,int,android.content.ContentCaptureOptions)> (NO_CATEGORY)
<android.telephony.TelephonyManager: void sendVisualVoicemailSms(java.lang.String,int,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.SYSTEM_ALERT_WINDOW android.permission.WAKE_LOCK (NO_CATEGORY)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,long)> (NO_CATEGORY)
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,int,boolean,int)> (NO_CATEGORY)
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)> android.permission.SEND_SMS android.permission.RECEIVE_SMS android.permission.WAKE_LOCK (NO_CATEGORY)
<android.telephony.euicc.EuiccManager: void continueOperation(android.content.Intent,android.os.Bundle)> (NO_CATEGORY)
<android.telephony.SmsManager$1: void onSuccess(int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION android.permission.ACCESS_LOCATION_EXTRA_COMMANDS (NO_CATEGORY)

BLUETOOTH:
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS android.permission.BLUETOOTH android.permission.WRITE_SETTINGS (BLUETOOTH)

ACCOUNT_SETTINGS:
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUpgradeKeySets(java.util.Set)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setDisplayedChild(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageDeleteObserver2$Default: void onUserActionRequired(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.SignalStrength: void updateLevel(android.os.PersistableBundle,android.telephony.ServiceState)> (ACCOUNT_SETTINGS)
<android.hardware.input.KeyboardLayout: int compareTo(android.hardware.input.KeyboardLayout)> (ACCOUNT_SETTINGS)
<android.app.usage.NetworkStats: void startHistoryEnumeration(int,int,int)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int,int)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.Scroller: void startScroll(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void access$1600(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes,int,int,android.media.audiopolicy.AudioPolicy)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkOperatorNumericForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void onRtlPropertiesChanged(int)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<android.app.UiAutomation$IAccessibilityServiceClientImpl$1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.content.ClipData$Item: void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.net.shared.Inet4AddressUtils: int netmaskToPrefixLength(java.net.Inet4Address)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: void setLocationEnabledForUser(boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastPrintWriter: void println(long)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar$1: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.pm.ActivityInfo: int activityInfoConfigJavaToNative(int)> (ACCOUNT_SETTINGS)
<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,com.android.internal.view.menu.MenuPresenter,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiClient: void sendVolumeKeyEvent(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationsShownFromListener(android.service.notification.INotificationListener,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setSubscriptionProperty(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$10: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRoundIconRes(int)> (ACCOUNT_SETTINGS)
<android.app.PropertyInvalidatedCache: void disableSystemWide(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void uninstall(android.content.pm.VersionedPackage,int,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void set(com.android.internal.inputmethod.IInputMethodPrivilegedOperations)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setBcc(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void updateLockTaskPackages(int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.InsetsSource: void setFrame(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setTimeZone(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.PnoSettings: int access$202(android.net.wifi.nl80211.PnoSettings,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.String withoutPrefix(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.FragmentTransition: void access$000(java.util.ArrayList,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)> (ACCOUNT_SETTINGS)
<android.app.SharedPreferencesImpl: int access$308(android.app.SharedPreferencesImpl)> (ACCOUNT_SETTINGS)
<android.transition.Fade: void <init>(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setNonLocalizedLabel(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoOutputStream: int checkFieldId(long,long)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUiOptions(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean bringPointIntoView(int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastMath: int round(float)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: void setExtraLocationControllerPackageEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.RecognitionEvent: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.Activity$HostCallbacks: void onRequestPermissionsFromFragment(android.app.Fragment,java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int sendSessionEvent(java.util.ArrayList,int,int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,int,long)> (ACCOUNT_SETTINGS)
<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setHintAmbientBigPicture(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: void access$2700(android.view.autofill.AutofillManager,int)> (ACCOUNT_SETTINGS)
<android.service.oemlock.IOemLockService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setDenominator(long)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger.SoundTriggerManager: void updateModel(android.media.soundtrigger.SoundTriggerManager$Model)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setDefaultNetId(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$300(long)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoWiFiRoamingModeSetting(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: com.android.internal.app.IVoiceInteractorRequest startConfirmation(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,android.app.VoiceInteractor$Prompt,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsMultiEndpoint$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.LocaleList: void setDefault(android.os.LocaleList,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void setGhostVisibility(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void captureSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.os.PersistableBundle: void writeToStream(java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int closeSession(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setForceShowSystemBars(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setRect(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.Surface: void createFrom(android.view.SurfaceControl)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setLegacyStreamType(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setHistoryParameters(int,long,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setMultiSimCarrierRestriction(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void sendRttModifyResponse(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothDevice: boolean setPin(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewOverlay$OverlayViewGroup: void <init>(android.content.Context,android.view.View)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setPreserveLegacyExternalStorage(boolean)> (ACCOUNT_SETTINGS)
<android.app.IAlarmManager$Stub$Proxy: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setVoiceRoamingType(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setVerticalScrollbarTrackDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: void setCarrierInfoForImsiEncryption(int,java.lang.String,android.telephony.ImsiEncryptionInfo)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimCountryIso(java.lang.String)> (ACCOUNT_SETTINGS)
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionTracker: int access$902(android.widget.SelectionActionModeHelper$SelectionTracker,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGattServer: int access$202(android.bluetooth.BluetoothGattServer,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setLogo(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedInstrumentationUtils: android.content.pm.parsing.result.ParseResult parseInstrumentation(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setResult(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.LocalePicker: void updateLocales(android.os.LocaleList)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,int)> (ACCOUNT_SETTINGS)
<android.graphics.BlendMode: int toValue(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setPivotY(float)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setConvexPath(android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: boolean setFontVariationSettings(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$000(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: void setUserData(android.service.autofill.UserData)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setRequiredStrongAuthTimeout(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setBackupServiceEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int reduceScreenLayout(int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.VirtualDisplay: void setSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplayScalingMode(int,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setTransactionId(byte[])> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setContentInsetsRelative(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$2: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setMetadata(android.media.MediaMetadata,long,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setScreenCaptureDisabled(android.content.ComponentName,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.text.style.CharacterStyle$Passthrough: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean setMagnificationScaleAndCenter(int,float,float,float,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Default: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setOverlayWithDecorCaptionEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.RadioGroup: void access$600(android.widget.RadioGroup,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$CardinalBuilder: void <init>(long)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setTtcIndex(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayCustomStartTime(android.hardware.display.Time)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int setPrivateData(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$102(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationPolicyAccessGranted(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$2302(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.service.dreams.IDreamManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule)> (ACCOUNT_SETTINGS)
<android.app.Notification$MessagingStyle: void <init>(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int channelCountFromOutChannelMask(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VPath$1: void set(android.graphics.drawable.VectorDrawable$VPath,android.util.PathParser$PathData)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$900(long,int)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputHardware$Stub$Proxy: void setStreamVolume(float)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MoneyBuilder: android.text.style.TtsSpan$MoneyBuilder setCurrency(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void viewsReady(android.util.ArrayMap)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setDisplayNumber(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setPeriodicAdvertisingParameters(int,android.bluetooth.le.PeriodicAdvertisingParameters)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAffiliationIds(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.net.EthernetManager: void setIncludeTestInterfaces(boolean)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CaptureRequest$Builder: android.hardware.camera2.CaptureRequest$Builder setPhysicalCameraKey(android.hardware.camera2.CaptureRequest$Key,java.lang.Object,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void set(android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup: void setTree(com.android.internal.util.VirtualRefBasePtr)> (ACCOUNT_SETTINGS)
<android.hardware.face.IFaceService$Stub$Proxy: void startPreparedClient(int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int green(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String,java.lang.String,boolean,long,int,int,int,int,int,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.telecom.Logging.SessionManager: void startSession(android.telecom.Logging.Session$Info,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setScaleX(float)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub$Proxy: boolean sendMediaButton(java.lang.String,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.service.vr.IVrManager$Stub$Proxy: void setAndBindCompositor(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.InsetsController: void updateCompatSysUiVisibility(int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,java.lang.String[],java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar: void setOutsideTouchable(boolean,android.widget.PopupWindow$OnDismissListener)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: void setPreferredDataSubscriptionId(int,boolean,com.android.internal.telephony.ISetOpportunisticDataCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,int,java.lang.String,byte[])> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.WallpaperColors: int lambda$fromBitmap$1(com.android.internal.graphics.palette.Palette$Swatch,com.android.internal.graphics.palette.Palette$Swatch)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController$AlertParams: void apply(com.android.internal.app.AlertController)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean updateMccMncConfiguration(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$W: void updatePointerIcon(float,float)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1400(long)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.DecorCaptionView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int startRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: void setLnbInfoList(int[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.Location: void <init>(android.location.Location)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setExtraLocationControllerPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.SubtitleTrack$Run: void storeByEndTimeMs(android.util.LongSparseArray)> (ACCOUNT_SETTINGS)
<android.content.rollback.IRollbackManager$Stub$Proxy: void commitRollback(int,android.content.pm.ParceledListSlice,java.lang.String,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.VerifyCredentialResponse: void access$200(com.android.internal.widget.VerifyCredentialResponse,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoWiFiSettingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int sendEvent(int,int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setAntiAlias(boolean)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaCodecInfo: int access$200(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$802(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$3: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.app.VrManager: void setStandbyEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setOrganizationColor(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.Phrase: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setDuplexMode(int)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerGlobal: void lambda$setStoppedState$0(android.view.ViewRootImpl,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.SystemUpdatePolicy: int access$402(android.app.admin.SystemUpdatePolicy,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setSaturationLevel(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.location.GnssSingleSatCorrection$1: android.location.GnssSingleSatCorrection createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> (ACCOUNT_SETTINGS)
<android.provider.FontsContract: void lambda$getFontSync$0(android.provider.FontRequest,java.lang.String,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.locks.Lock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setLogoutEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: boolean setAutoRevokeWhitelisted(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,long,long)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setAllowedNetworkTypes(int,long)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(android.graphics.drawable.Icon)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$SemioticClassBuilder: android.text.style.TtsSpan$SemioticClassBuilder setMultiplicity(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setMutable(boolean)> (ACCOUNT_SETTINGS)
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void initialize(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.NotificationChannelGroup: void populateFromXml(org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,long)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setString(java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setContentCaptureOptions(android.content.ContentCaptureOptions)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setSubscriptionProperty(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.TransitionUtils: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable,android.view.View)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setVolume(float)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TimeBuilder: void <init>(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable$StateListState)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.AnomalyReporter: void reportAnomaly(java.util.UUID,java.lang.String)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setInts(int[])> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.euicc.EuiccManager: void setSupportedCountries(java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<android.view.Surface: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.View$7: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.app.ContextImpl createSystemUiContext(android.app.ContextImpl,int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$902(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.view.KeyEvent: int normalizeMetaState(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.FloatingActionMode: void <init>(android.content.Context,android.view.ActionMode$Callback2,android.view.View,com.android.internal.widget.FloatingToolbar)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean setOutsideTouchable(boolean,android.widget.PopupWindow$OnDismissListener)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaDescrambler: int descramble(java.nio.ByteBuffer,java.nio.ByteBuffer,android.media.MediaCodec$CryptoInfo)> (ACCOUNT_SETTINGS)
<android.view.RemoteAnimationDefinition: void setCallingPidUid(int,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Stub$Proxy: void onPlayFromUri(java.lang.String,int,int,android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setCacheColorHint(int)> (ACCOUNT_SETTINGS)
<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setRequestorUid(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int size(java.lang.Object[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)> (ACCOUNT_SETTINGS)
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackground(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,int,int,int,boolean,java.lang.String,int,int,int,int,int,int,int,int,int,int,float)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setCurrentFunction(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startNattKeepaliveWithFd(android.net.Network,java.io.FileDescriptor,int,int,android.net.ISocketKeepaliveCallback,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$600(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<com.android.internal.content.om._$$Lambda$OverlayConfig$bPcIgkiZP3FiPOvGMosWxnh9KGA: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int argb(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setPassword(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerImpl: void setShouldShowIme(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: void setRegionInScreen(android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.app.trust.ITrustManager$Stub$Proxy: void setDeviceLockedForUser(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setOnItemClickListenerInt(android.widget.AdapterView$OnItemClickListener)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void updateServiceGroup(android.app.IServiceConnection,int,int)> (ACCOUNT_SETTINGS)
<android.app.IUiAutomationConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startVoiceActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerGlobal: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setSystemAudioVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setScrollIndicators(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setBottom(int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter$ActionButtonSubmenu: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.SubMenuBuilder,android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.IUiAutomationConnection$Stub$Proxy: boolean setRotation(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.lights.ILightsManager$Stub$Proxy: void setLightStates(android.os.IBinder,int[],android.hardware.lights.LightState[])> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setInterruptionFilter(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setFactoryResetProtectionPolicy(android.content.ComponentName,android.app.admin.FactoryResetProtectionPolicy)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setAccessoryPersistentPermission(android.hardware.usb.UsbAccessory,int,android.os.UserHandle,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit$RuntimeThreadPrioritySetter: void setPriority(int,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onActivityReenter(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)> (ACCOUNT_SETTINGS)
<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.net.TestNetworkManager: void setupTestNetwork(java.lang.String,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.util.Half: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.telecom.Logging.SessionManager: void continueSession(android.telecom.Logging.Session,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void <init>(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void updateSession(int,android.view.autofill.AutofillId,android.graphics.Rect,android.view.autofill.AutofillValue,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,boolean,long,byte[])> (ACCOUNT_SETTINGS)
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)> android.permission.CAMERA android.permission.RECORD_AUDIO (ACCOUNT_SETTINGS)
<com.android.internal.view.InputConnectionWrapper: boolean setComposingRegion(int,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.ComponentName startForegroundService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$4: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanIdentity$Builder: android.net.lowpan.LowpanIdentity$Builder setLowpanIdentity(android.net.lowpan.LowpanIdentity)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int access$300(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub$Proxy: void bindMount(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgressTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int startActivityWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoSplitResourcePaths(java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setCdmaSubscriptionMode(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void setForceScoAudio(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setTime(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setActive(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setDefaultIcon(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void sendDtmf(char,android.os.Message)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSystemSelectionChannels(java.util.List)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setMasterMute(boolean,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int access$1202(android.net.NetworkCapabilities,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Instrumentation: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$4: void set(android.view.View,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.AbsActionBarView: void animateToVisibility(int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$5: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAutoTimeZoneEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: int prefixLengthToNetmaskInt(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: int setGlobalPrivateDnsModeOpportunistic(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void access$200(android.media.MediaDrm,byte[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice,int,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputManager$Session: void startRecording(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.view.InputDevice$MotionRange: int access$200(android.view.InputDevice$MotionRange)> (ACCOUNT_SETTINGS)
<android.content.pm.IDataLoader$Stub$Proxy: void start(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)> (ACCOUNT_SETTINGS)
<android.content.res.Resources$AssetManagerUpdateHandler: void onLoadersChanged(android.content.res.Resources,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void setGlobalConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableResource(int,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal(int)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAugmentedAutofillWhitelist(java.util.List,java.util.List,com.android.internal.os.IResultReceiver)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onNewIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.Editor$SpanController: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFastScrollEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setZenMode(int,android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallback: void sendResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void updateDisplayContentLocation(android.view.IWindow,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setLogo(int)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int access$200(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExtraBackReference(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: int translateModePfdToPosix(int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: boolean setSurroundFormatEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserAdmin(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$3: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void sendEvent(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: boolean setOpportunistic(boolean,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$1500(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: boolean startMovingTask(android.view.IWindow,float,float)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setTransparentRegionHint(android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.security.net.config.ManifestConfigSource$DefaultConfigSource: void <init>(boolean,android.content.pm.ApplicationInfo)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub$Proxy: void setPlaybackSpeed(java.lang.String,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setBackupAgentName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void multi_sim_config(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Service: void onRebind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextAppearance(int)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void setProcessState(int)> (ACCOUNT_SETTINGS)
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.SmsApplication: void setDefaultApplication(java.lang.String,android.content.Context)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$UserRouteInfo: void setStatus(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.service.euicc.EuiccProfileInfo: int access$500(android.service.euicc.EuiccProfileInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setAlwaysReportSignalStrength(int,boolean)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setPackageScreenCompatMode(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setAcceptPartialConnectivity(android.net.Network,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setPictureInPictureParams(android.app.PictureInPictureParams)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.media.tv.TvInputHardwareInfo,java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1000(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void setSystemAudioMode(boolean,android.hardware.hdmi.HdmiTvClient$SelectCallback)> (ACCOUNT_SETTINGS)
<android.content.pm.ILauncherApps$Stub$Proxy: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.ScanFilter$1: android.bluetooth.le.ScanFilter createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.media.AudioFocusRequest: int access$400(android.media.AudioFocusRequest)> (ACCOUNT_SETTINGS)
<android.net.ITetheringStatsProvider$Stub$Proxy: void setInterfaceQuota(java.lang.String,long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingActive(int[],com.android.internal.app.IAppOpsActiveCallback)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller$Session: void setStagingProgress(float)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothHeadsetClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.media.session.PlaybackState: int access$300(android.media.session.PlaybackState)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$802(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextLinksParams: int apply(android.text.Spannable,android.view.textclassifier.TextLinks)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int signedIntToBytes(int,byte[],int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean bindBluetoothProfileService(int,android.bluetooth.IBluetoothProfileServiceConnection)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setState(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setDenominator(java.lang.String)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsConfig$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$800(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setPolicyDataEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void updateSessionAppIcon(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.usage.IUsageStatsManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int setImsProvisioningString(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setBounds(android.window.WindowContainerToken,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setDeviceVolumeBehavior(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataActivationState(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAutoTimeRequired(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionController$Stub$Proxy: void setRuntimePermissionGrantStateByDeviceAdmin(java.lang.String,java.lang.String,java.lang.String,int,com.android.internal.infra.AndroidFuture)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButtonPanelLayoutHint(int)> (ACCOUNT_SETTINGS)
<android.hardware.ICameraService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setClipToOutline(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder: void access$000(android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void access$600(android.hardware.Camera,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setVoiceActivationState(int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1500(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.app.Notification$MessagingStyle: android.app.Notification$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setNetworkPermission(int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setRingerMode(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setHasFragileUserData(boolean)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.midi.MidiPortImpl: int packData(byte[],int,int,long,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SubtitleView: void setText(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: com.android.internal.util.function.pooled.PooledLambdaImpl acquireConstSupplier(int)> (ACCOUNT_SETTINGS)
<android.os.image.DynamicSystemManager: boolean setEnable(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setDisplayWhiteBalanceEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$008(android.content.res.XmlBlock)> (ACCOUNT_SETTINGS)
<android.net.NetworkScoreManager: boolean setActiveScorer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setAppSaturationLevel(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setLinkDownstreamBandwidthKbps(int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int provision(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.IUiModeManager$Stub$Proxy: void setCustomNightModeStart(long)> (ACCOUNT_SETTINGS)
<android.media.IPlayer$Stub$Proxy: void setVolume(float)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$102(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$900(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void setImeOptions(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: boolean updateClientPriority(int,int,int)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Default: void sendTvInputNotifyIntent(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUse32BitAbi(boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void startCaptivePortalApp(android.net.Network,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void <init>(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void updateLockTaskPackages(int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.os.image.IDynamicSystemService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setTextClassifier(android.view.textclassifier.TextClassifier)> (ACCOUNT_SETTINGS)
<android.hardware.face.FaceManager: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: boolean setAutoRevokeWhitelisted(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setActive(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanCommissioningSession: void sendToCommissioner(byte[])> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setVoiceActivationState(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothDevice: boolean setSimAccessPermission(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setMessageClass(byte[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setRelevantEventTypes(int)> (ACCOUNT_SETTINGS)
<android.view.Window: void clearFlags(int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean,java.util.List)> (ACCOUNT_SETTINGS)
<android.telecom.Log: void startSession(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationAssistantAccessGranted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setBasebandVersionForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setDeviceOwnerInfo(java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)> (ACCOUNT_SETTINGS)
<android.widget.Editor$InsertionPointCursorController: void onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.window.WindowContainerTransaction$Change: void merge(android.window.WindowContainerTransaction$Change,boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void updateHttpProxy(android.content.Context)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: void setFloatValues(float[])> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setMessageMovementMethod(android.text.method.MovementMethod)> (ACCOUNT_SETTINGS)
<android.widget.RadioGroup: void access$500(android.widget.RadioGroup,int,boolean)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$7: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setVsyncTime(long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: com.android.internal.app.IVoiceInteractorRequest startAbortVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,android.app.VoiceInteractor$Prompt,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setClassLoaderName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.IShortcutService$Stub$Proxy: boolean requestPinShortcut(java.lang.String,android.content.pm.ShortcutInfo,android.content.IntentSender,int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserName(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceDataspace(android.view.Surface)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setSubtitle(int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setIPv6AddrGenMode(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask: void set(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.LoadedApk$WarningContextClassLoader: void setDefaultAssertionStatus(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultVoiceSubId(int)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setChannel(int)> (ACCOUNT_SETTINGS)
<android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean setTaskWindowingMode(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setTargetSdkVersion(int)> (ACCOUNT_SETTINGS)
<android.service.dreams.Sandman: void startDreamWhenDockedIfAppropriate(android.content.Context)> (ACCOUNT_SETTINGS)
<android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int ensureTextContrastOnBlack(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setSystemGestureExclusionRects(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setPreferredService(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.os.strictmode.WebViewMethodCalledOnWrongThreadViolation: void <init>(java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)> (ACCOUNT_SETTINGS)
<android.media.RingtoneManager: void ensureDefaultRingtones(android.content.Context)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setWifiMeteredOverride(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.inputmethod.CursorAnchorInfo$Builder: int access$800(android.view.inputmethod.CursorAnchorInfo$Builder)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean postDelayed(java.lang.Runnable,int,long)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller$Session: void setProgress(float)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurementCorrections$1: android.location.GnssMeasurementCorrections createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean createPartition(java.lang.String,long,boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void sendAccessibilityEventInternal(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanScanner$2: void lambda$onEnergyScanResult$0(android.net.lowpan.LowpanScanner$Callback,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setKeyguardDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void updateAvailableNetworks(java.util.List,java.util.concurrent.Executor,java.util.function.Consumer)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: void setGestureDetectionPassthroughRegion(int,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: java.util.List createHighSpeedRequestList(android.hardware.camera2.CaptureRequest)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationPolicyAccessGrantedForUser(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$1100(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setSignalStrength(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder$UserSpecifiedFocusComparator: void setFocusables(java.util.List,android.view.View)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int listAudioPatches(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$402(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayAutoMode(int)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void onResolveDrawables(int)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setUserRestriction(int,boolean,android.os.IBinder,java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setUserCaptionBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void setLogOnlyTransitions(boolean)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.PnoSettings: int access$102(android.net.wifi.nl80211.PnoSettings,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setDomain(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveServiceAsUser(android.content.Intent,int,int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$100(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setColorFilter(int)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$BufferMap: void put(int,java.nio.ByteBuffer)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColors(int[])> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void noteUidProcessStateLocked(int,int)> (ACCOUNT_SETTINGS)
<android.util.KeyValueListParser: void setString(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void setCoreSettings(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setWatchHeapLimit(long)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setBufferSize(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int bytesToInt(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.net.SocketKeepalive: void start(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setDefaultVoiceSubscriptionId(int)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: void updateImsCarrierConfigs(android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<android.location.GpsNavigationMessage$1: android.location.GpsNavigationMessage createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMinExtensionVersions(android.util.SparseIntArray)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)> (ACCOUNT_SETTINGS)
<android.view.View: void setAnimationMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUninstallBlocked(android.content.ComponentName,java.lang.String,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfilePackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setVpnPackageAuthorization(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMetaData(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: void <init>(double,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.CrossProfileApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: boolean setAdaptivePowerSaveEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$Static: void onDisplayChanged(int)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller: void startScroll(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.Notification$Action$WearableExtender: android.app.Notification$Action$WearableExtender setHintDisplayActionInline(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.AssetManager: void setLoaders(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setKeyGrantForApp(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void setSelection(int,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.GenericPdu: void setMmsVersion(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setPackageScreenCompatMode(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.StrictMode: void setThreadPolicyMask(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedStateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.ViewOutlineProvider$3: void getOutline(android.view.View,android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setVolumePolicy(android.media.VolumePolicy)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setResizeable(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setAppSaturationLevel(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void readFromProto(android.util.proto.ProtoInputStream,long)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setDropDownHorizontalOffset(int)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<com.android.net.IProxyService$Stub$Proxy: void setPacFile(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setVrThread(int)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setIsUsingCarrierAggregation(boolean)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$602(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int setVrMode(android.os.IBinder,boolean,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$902(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void lambda$loadThumbnail$1(int,android.os.CancellationSignal,android.util.Size,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions: android.app.ActivityOptions startSharedElementAnimation(android.view.Window,android.util.Pair[])> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setParameters(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setHighestPriority(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setRect(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.UndoManager: void setUndoLabel(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setLocationEnabledForUser(boolean,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)> (ACCOUNT_SETTINGS)
<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setBoundsChangeTransaction(android.window.WindowContainerToken,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void setBatteryState(int,int,int,int,int,int,int,int,long)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$300(android.media.tv.TvInputHardwareInfo)> (ACCOUNT_SETTINGS)
<android.service.dreams.IDreamManager$Stub$Proxy: void startDozing(android.os.IBinder,int,int)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.widget.Toast: void setText(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VPath$1: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingNoted(int[],com.android.internal.app.IAppOpsNotedCallback)> (ACCOUNT_SETTINGS)
<android.app.Notification$MessagingStyle: void restoreFromExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: boolean setPowerModeChecked(int,boolean)> (ACCOUNT_SETTINGS)
<android.service.oemlock.OemLockManager: void setOemUnlockAllowedByUser(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: void access$1700(android.view.autofill.AutofillManager,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.Notification$Action$WearableExtender: android.app.Notification$Action$WearableExtender setHintLaunchesActivity(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultSmsSubId(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayActivated(boolean)> (ACCOUNT_SETTINGS)
<android.app.Service: void onStart(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCameraDisabled(android.content.ComponentName,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setGestureDetectionPassthroughRegion(int,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setInitialScale(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setArcMode(boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription)> (ACCOUNT_SETTINGS)
<android.sysprop.VoldProperties: void encrypt_time_remaining(java.lang.Integer)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub$Proxy: void setTemporaryBrightness(float)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setUidPolicy(int,int)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyViewInsetsChanged(int,android.graphics.Insets)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.pm.ParceledListSlice startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,int[])> (ACCOUNT_SETTINGS)
<android.view.SurfaceControlViewHost: void setView(android.view.View,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)> (ACCOUNT_SETTINGS)
<android.print.IPrintManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPersonalAppsSuspended(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.DecelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoInputStream: long start(long)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setRequiredForSystemUser(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setSelectedNavigationItem(int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long,byte,android.os.BatteryStats$HistoryItem)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setEnabledExclusiveInCategory(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)> (ACCOUNT_SETTINGS)
<android.hardware.SensorDirectChannel: int configure(android.hardware.Sensor,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean onLayoutDirectionChanged(int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceQuota(java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.hardware.radio.TunerAdapter: void setAnalogForced(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.palette.ColorCutQuantizer: int quantizedRed(int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,int,int,int,android.text.TextUtils$TruncateAt,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.AdapterView: void setFocusable(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void autofillClientAuthenticate(int,android.content.IntentSender,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,float[])> (ACCOUNT_SETTINGS)
<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationValidityDurationSeconds(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: void updateOutputConfiguration(int,android.hardware.camera2.params.OutputConfiguration)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.hardware.input.KeyboardLayout: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setPath(android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.os.IDeviceIdleController$Stub$Proxy: int setPreIdleTimeoutMode(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$002(android.bluetooth.BluetoothGatt,int)> (ACCOUNT_SETTINGS)
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setTransportInfo(android.net.TransportInfo)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void sendMhlVendorCommand(int,int,int,byte[])> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.media.Ringtone: void setStreamType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub$Proxy: void setTemporaryAutoBrightnessAdjustment(float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void updateAppWidget(int,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRestoreAnyVersion(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setMeasuredDimension(int,int)> (ACCOUNT_SETTINGS)
<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)> (ACCOUNT_SETTINGS)
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableAlpha(int,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivities(android.content.Intent[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.io.GraphReader: void addReferencesByKeysAndValues(java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession$CallbackStub: void onPrepareFromUri(java.lang.String,int,int,android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.prediction.AppTarget$Builder: android.app.prediction.AppTarget$Builder setTarget(android.content.pm.ShortcutInfo)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setTopAppHidesStatusBar(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputManager$Hardware: void setStreamVolume(float)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: boolean setBluetoothClass(android.bluetooth.BluetoothClass)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy: int access$302(android.service.notification.ZenPolicy,int)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setHintContentIntentLaunchesActivity(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.ScrollCaptureViewSupport: void onScrollCaptureStart(android.view.ScrollCaptureSession,java.lang.Runnable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateSelection(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.content.res.AssetManager$AssetInputStream: int read(byte[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSupportsSmallScreens(int)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int access$300(android.database.sqlite.SQLiteDatabase$OpenParams)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)> (ACCOUNT_SETTINGS)
<android.database.sqlite._$$Lambda$SQLiteDatabase$1FsSJH2q7x3eeDFXCAu9l4piDsE: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.net.TrafficStats: void setThreadStatsUid(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.os.IMessenger$Stub$Proxy: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo$Builder: int access$200(android.content.pm.SuspendDialogInfo$Builder)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void setVolumeNickname(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)> (ACCOUNT_SETTINGS)
<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.strictmode.ServiceConnectionLeakedViolation: void <init>(java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.transition.Scene: void setCurrentScene(android.view.ViewGroup,android.transition.Scene)> (ACCOUNT_SETTINGS)
<android.app.VrManager: void setPersistentVrModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$1902(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.security.net.config.NetworkSecurityConfigProvider: void install(android.content.Context)> (ACCOUNT_SETTINGS)
<android.media.IRingtonePlayer$Stub$Proxy: void setPlaybackProperties(android.os.IBinder,float,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkRoaming(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],java.lang.String,int,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.UiModeManager: boolean setNightModeActivated(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: boolean setAccountVisibility(android.accounts.Account,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setContentWidth(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setSize(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setTestDefaultDialer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)> (ACCOUNT_SETTINGS)
<android.telephony.emergency.EmergencyNumber: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setQueryString(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setFullBackupContent(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimOperatorNumeric(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.ICrossProfileApps$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void access$600(android.widget.ProgressBar,int,float)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void startCaptivePortalApp(android.net.Network)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)> (ACCOUNT_SETTINGS)
<android.widget.HorizontalScrollView: void setEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCommonCriteriaModeEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setAlwaysAllowMmsData(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setDropDownVerticalOffset(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$1002(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setMessageHyphenationFrequency(int)> (ACCOUNT_SETTINGS)
<com.android.net.IProxyService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void sendOnTextChanged(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void sendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setSubscriptionOverrideUnmetered(int,boolean,long)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManagerGlobal: void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setHintHideIcon(boolean)> (ACCOUNT_SETTINGS)
<android.location.GnssClock: int access$102(android.location.GnssClock,int)> (ACCOUNT_SETTINGS)
<android.location.GpsStatus: android.location.GpsStatus create(android.location.GnssStatus,int)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRequestLegacyExternalStorage(boolean)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: void updatePermissionFlagsForAllApps(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$Tab setIcon(int)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void set(int,long,long,long,android.app.AlarmManager$OnAlarmListener,android.os.Handler,android.os.WorkSource)> (ACCOUNT_SETTINGS)
<android.view.RoundScrollbarRenderer: void drawRoundScrollbars(android.graphics.Canvas,float,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$1002(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.app.RemoteInput: void setResultsSource(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: double lambda$calculateMinimumBackgroundAlpha$0(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.app.Service: void startForeground(int,android.app.Notification,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setDeviceOrientation(int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1202(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onNewActivityOptions(android.app.ActivityOptions)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void set(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.EditableInputConnection: boolean requestCursorUpdates(int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyInfo)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setBluetoothScoOn(boolean)> (ACCOUNT_SETTINGS)
<android.view.View$11: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setNightDisplayColorTemperature(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setResizingCaptionDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean setIdleTime(android.bluetooth.BluetoothDevice,byte)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.StandardMenuPopup: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextScaleX(float)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void setDozeAfterScreenOff(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHomeActionContentDescription(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: boolean setSubscriptionEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: void setVolume(int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void sendVendorCommand(int,int,byte[],boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.os.VibrationAttributes: int access$200(android.os.VibrationAttributes)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setManageSpaceActivityName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean setSoftKeyboardShowMode(int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)> (ACCOUNT_SETTINGS)
<android.os.PersistableBundle: android.os.PersistableBundle readFromStream(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.app.AppCompatCallbacks: void install(long[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: com.android.internal.app.IVoiceInteractorRequest startCommand(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int byteNumForSignedInt(int)> (ACCOUNT_SETTINGS)
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2,android.renderscript.Int2)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setTaskResizeable(int,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setCc(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMinAspectRatio(float)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setSelectionInt(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void continueOperation(int,android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCompileSdkVersion(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setPreferredNetworkType(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int sendSessionEvent(java.util.ArrayList,int,int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setPeriodicAdvertisingData(int,android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setVolumeControlStream(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setPhoneType(int,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setElegantTextHeight(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setNetworkSelectionModeAutomatic(int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.print.PrintDocumentInfo: int access$200(android.print.PrintDocumentInfo)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.content.pm.LauncherApps: void startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.nfc.cardemulation.CardEmulation: boolean setDefaultForNextTap(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setLayoutMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int)> (ACCOUNT_SETTINGS)
<android.hardware.input.IInputManager$Stub$Proxy: void setPointerIconType(int)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void access$100(android.media.MediaDrm,byte[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimCountryIsoForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: android.media.AudioFormat aidl2apiAudioFormat(android.media.audio.common.AudioConfig)> (ACCOUNT_SETTINGS)
<android.print.PrintJobInfo: int access$002(android.print.PrintJobInfo,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setRecentsVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setRestriction(int,int,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.InsetsController: void setSystemBarsBehavior(int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$602(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomaticallyAsUser(boolean,int)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$6: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.print.PrinterCapabilitiesInfo: int access$602(android.print.PrinterCapabilitiesInfo,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setDisplaySize(android.os.IBinder,int,int)> (ACCOUNT_SETTINGS)
<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setOffHostForService(int,android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void sendResponse(int,java.lang.String,int,int,int,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$DurationTimer: void startRunningLocked(long)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void updateStatusIcon(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperColors: android.app.WallpaperColors fromDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsFeature$Default: void sendCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget: void setActiveCues(java.util.Vector)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void setField(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.FloatingActionMode: void onWindowFocusChanged(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: int aidl2apiChannelInMask(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.DataLoaderParamsParcel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.SensorPrivacyManager: void setSensorPrivacy(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setShadowLayer(float,float,float,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayColorTemperature(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)> (ACCOUNT_SETTINGS)
<android.service.textclassifier.TextClassifierService: boolean onUnbind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.view.View: int resolveSizeAndState(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupManager: void setAutoRestore(boolean)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setNotificationPolicy(android.app.NotificationManager$Policy)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void uninstallExistingPackage(java.lang.String,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.service.autofill.UserData$1: android.service.autofill.UserData createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean startViewCalendarEventInManagedProfile(long,long,long,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setResizeableActivity(java.lang.Boolean)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void operator_idp_string(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallUidRule(int,int,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveStatus(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int checkUriPermission(android.net.Uri,int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setResize(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,long)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadRecInd: void setDate(long)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession$Callback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,long,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setSystemAudioMute(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setNetworkAvailable(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)> (ACCOUNT_SETTINGS)
<android.content.integrity.AppIntegrityManager: void updateRuleSet(android.content.integrity.RuleSet,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$8: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void <init>(android.view.InsetsState,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVtSettingEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,java.lang.String,int,int,int,boolean,int,int,boolean,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setDockedStackDividerTouchRegion(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSharedUserId(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.IShortcutService$Stub$Proxy: boolean setDynamicShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setAnimationStyle(int)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.hardware.hdmi.HdmiDeviceInfo,java.lang.String,java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.security.keystore.IKeystoreService$Stub$Proxy: int update(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView$1: void getOutline(android.view.View,android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void setVolume(android.os.IBinder,float,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBond(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlayPriority(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$500(long,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,android.util.SparseArray)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void setAudioRouteAllowed(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1200(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setDisplayUseLogoEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Editor$ErrorPopup: void update(int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void updateSessionAppLabel(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void set(android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setZOrderOnTop(boolean)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setLaunchPendingIntent(android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub$Proxy: boolean setChargingStateUpdateDelayMillis(int)> (ACCOUNT_SETTINGS)
<android.view.InputDevice$MotionRange: int access$100(android.view.InputDevice$MotionRange)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setSystemAppState(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.AbsActionBarView: android.animation.Animator setupAnimatorToVisibility(int,long)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform$1: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer$SimpleRenderer: void draw(android.graphics.HardwareRenderer$FrameDrawingCallback)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpOn(boolean)> (ACCOUNT_SETTINGS)
<android.text.PackedIntVector: void insertAt(int,int[])> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setManagedProfileMaximumTimeOff(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendStringSync(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerGlobal$1: void onAnimatorScaleChanged(float)> (ACCOUNT_SETTINGS)
<android.graphics.Path: void set(android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsAltitude(double)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setSpeakerphoneOn(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Default: void sendStoredText(int,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumTimeToLock(android.content.ComponentName,long,boolean)> (ACCOUNT_SETTINGS)
<android.transition.PatternPathMotion: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$Builder: int access$500(android.text.DynamicLayout$Builder)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsLatitude(double)> (ACCOUNT_SETTINGS)
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPan$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)> android.permission.MODIFY_AUDIO_SETTINGS (ACCOUNT_SETTINGS)
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setStaticSharedLibName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$6: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter$AuthorityEntry: int access$100(android.content.IntentFilter$AuthorityEntry)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void lambda$updateStateFromTypedArray$0(android.graphics.Rect,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setNumerator(long)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPaintFlags(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: void setCameraAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub$Proxy: void setOnMediaKeyListener(android.media.session.IOnMediaKeyListener)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void reportPatternWasChosen(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void setPermissionsResult(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.WindowlessWindowManager: void setConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoResourcePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setConfiguredNetworksLockdownState(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$1400(android.bluetooth.BluetoothGatt)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void startBluetoothScoVirtualCall(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.ResourceCursorAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.text.TextUtils$StringWithRemovedChars: void removeAllCharBefore(int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$402(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityEnd(java.util.Date)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.filterfw.core.NativeFrame: void setInts(int[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendStoredMultipartText(int,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setSelectionInt(int)> (ACCOUNT_SETTINGS)
<android.os.incremental.IncrementalNewFileParams: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.service.vr.IVrManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setFocusRequestResult(android.media.AudioFocusInfo,int,android.media.audiopolicy.AudioPolicy)> (ACCOUNT_SETTINGS)
<android.os.BugreportManager$DumpstateListener: void lambda$onUiIntensiveBugreportDumpsFinished$4$BugreportManager$DumpstateListener(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setStorageEncryption(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setActivityController(android.app.IActivityController,boolean)> (ACCOUNT_SETTINGS)
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void handleCallIntent(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void access$3900(android.widget.AbsListView,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ArrayUtils: int size(java.util.Collection)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo$Builder: int access$000(android.content.pm.SuspendDialogInfo$Builder)> (ACCOUNT_SETTINGS)
<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoWiFiNonPersistent(int,boolean,int)> (ACCOUNT_SETTINGS)
<android.os.WorkSource: boolean add(android.os.WorkSource)> (ACCOUNT_SETTINGS)
<android.view.View: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int setIconTint(int,int)> (ACCOUNT_SETTINGS)
<android.apex.ApexInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.fonts.FontVariationAxis: int makeTag(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setShowBadge(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.media.audio.common.AudioConfig: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int lambda$setIconTint$2(int,int,com.android.internal.telephony.ISub)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$1002(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int access$402(android.net.NetworkCapabilities,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupManager: void setAncestralSerialNumber(long)> (ACCOUNT_SETTINGS)
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources: int access$200(short,byte[],int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothMap: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordHistoryLength(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1002(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,int,android.view.Surface,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void onScroll(int,int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: android.text.style.TtsSpan$DecimalBuilder setIntegerPart(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setSeparateProfileChallengeEnabled(int,boolean,com.android.internal.widget.LockscreenCredential)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimOperatorNameForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.UiModeManager: void setNightMode(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void handleRequestAssistContextExtras(android.app.ActivityThread$RequestAssistContextExtras)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setTextureParameter(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: int scaleFromDensity(int,int,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$Builder: int access$1100(android.text.DynamicLayout$Builder)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setHomeActivity(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: com.android.internal.app.IVoiceInteractorRequest startCompleteVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,android.app.VoiceInteractor$Prompt,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController$Anchor)> (ACCOUNT_SETTINGS)
<android.media._$$Lambda$MediaCodecInfo$VideoCapabilities$DpgwEn_gVFZT9EtP3qcxpiA2G0M: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter: void setRouterGroupId(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int compositeColors(int,int)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout: void generate(android.text.StaticLayout$Builder,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.os.PowerManager: boolean setPowerSaveModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.animation.AnimationHandler: void setFrameDelay(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setSyntheticAppDetailsActivityEnabled(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform buildTransportModeTransform(java.net.InetAddress,android.net.IpSecManager$SecurityParameterIndex)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.app.Service: void startForeground(int,android.app.Notification)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void startTethering(int,boolean,android.net.ConnectivityManager$OnStartTetheringCallback)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnKeyStatusChangeListener(android.media.MediaDrm$OnKeyStatusChangeListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.os.KernelMemoryBandwidthStats: void parseStats(java.io.BufferedReader)> (ACCOUNT_SETTINGS)
<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setManagedProfileMaximumTimeOff(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean startDiscovery(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$Builder: int access$1600(android.text.DynamicLayout$Builder)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: boolean preparePanel(com.android.internal.policy.PhoneWindow$PanelFeatureState,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPaddingRelative(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: void setModelParameter(int,int,int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$800(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: void startEnergyScan(java.util.Map,android.net.lowpan.ILowpanEnergyScanCallback)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Default: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setLogo(int)> (ACCOUNT_SETTINGS)
<android.app.FragmentHostCallback: void onStartActivityAsUserFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int access$000(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Filter: void initWithAssignmentList(java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.view.View$6: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: android.util.Pair access$100(android.content.ContentProvider,android.util.Pair)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: int api2aidlAudioCapabilities(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextIsSelectable(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$100(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRoamingOverride(int,java.util.List,java.util.List,java.util.List,java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean performAccessibilityActionInternal(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setRttCapabilitySetting(boolean)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController$MessageHandler: void post(int,java.lang.Object,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void startConference(java.lang.String[],android.telephony.ims.ImsCallProfile)> (ACCOUNT_SETTINGS)
<android.telephony.SmsManager: void setPremiumSmsConsent(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMinSdkVersion(int)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setNotificationAssistantAccessGranted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadioPower(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void noteDeviceIdleModeLocked(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setIdleUntil(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContextView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: void setFrontendInfoList(android.media.tv.tunerresourcemanager.TunerFrontendInfo[])> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setProvisioningNotificationVisible(boolean,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.print.IPrintDocumentAdapter$Stub$Proxy: void setObserver(android.print.IPrintDocumentAdapterObserver)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub$Proxy: void setOnVolumeKeyLongPressListener(android.media.session.IOnVolumeKeyLongPressListener)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<android.content.res.ResourcesImpl$ThemeImpl: void setTo(android.content.res.ResourcesImpl$ThemeImpl)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$600(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$8: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity makeAppDetailsActivity(java.lang.String,java.lang.String,int,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.DeliveryInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setMediaButtonReceiver(android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession$CallbackMessageHandler: void post(android.media.session.MediaSessionManager$RemoteUserInfo,int,java.lang.Object,android.os.Bundle,long)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int access$602(android.net.wifi.nl80211.DeviceWiphyCapabilities,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setBasebandVersion(java.lang.String)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startNattKeepalive(android.net.Network,int,android.net.ISocketKeepaliveCallback,java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> (ACCOUNT_SETTINGS)
<android.hardware.display.BrightnessConfiguration$1: android.hardware.display.BrightnessConfiguration createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice,int,int,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderIcon(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: android.telephony.ServiceState newFromBundle(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy: int access$102(android.service.notification.ZenPolicy,int)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform$Builder setAuthenticatedEncryption(android.net.IpSecAlgorithm)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.Canvas: void setDensity(int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setDefaultGuestRestrictions(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startVpnProfile(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.usage.UsageStatsManager: void setAppStandbyBucket(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$6: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlayTarget(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.animation.AnticipateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.BackdropFrameRenderer: void setTargetRect(android.graphics.Rect,boolean,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub$Proxy: void setIncFsMountOptions(android.os.incremental.IncrementalFileSystemControlParcel,boolean)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setWallpaperZoomOut(android.os.IBinder,float)> (ACCOUNT_SETTINGS)
<android.os.VibrationEffect$Composition: int checkPrimitive(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadio(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setDefaultToDeviceProtectedStorage(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setAlwaysAllowMmsData(boolean)> (ACCOUNT_SETTINGS)
<android.service.vr.IVrManager$Stub$Proxy: void setStandbyEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(int)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$202(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<android.app.PackageDeleteObserver$1: void onUserActionRequired(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.WindowlessWindowManager: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,long,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl[],android.graphics.Point,android.view.SurfaceControl)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int delete(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.shared.Inet4AddressUtils: int inet4AddressToIntHTH(java.net.Inet4Address)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePersistentPermission(android.hardware.usb.UsbDevice,int,android.os.UserHandle,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethod$Stub$Proxy: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: int execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int sendEvent(int,int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.provider.ContactsInternal: void startQuickContactWithErrorToastForUser(android.content.Context,android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean updateOverrideApn(android.content.ComponentName,int,android.telephony.data.ApnSetting)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputClient$Stub$Proxy: void onRecordingStopped(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.security.KeyStore: int addAuthToken(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.KeyguardManager: void setPrivateNotificationsAllowed(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void sendMhlVendorCommand(int,int,int,byte[])> (ACCOUNT_SETTINGS)
<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContainer: void onResolveDrawables(int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsRcsManager$AvailabilityCallback: void access$100(android.telephony.ims.ImsRcsManager$AvailabilityCallback,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller: void setFinalX(int)> (ACCOUNT_SETTINGS)
<android.location.GnssSingleSatCorrection$Builder: int access$100(android.location.GnssSingleSatCorrection$Builder)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub$Proxy: void setCustomMediaKeyDispatcherForTesting(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.text.style.MetricAffectingSpan$Passthrough: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.app.IUiModeManager$Stub$Proxy: void setNightMode(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupForPackage(java.lang.String,int,android.app.NotificationChannelGroup)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityManagerClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1300(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean revokeKeyPairFromApp(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void setHasCallback(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCategory(int)> (ACCOUNT_SETTINGS)
<android.security.KeyStore: int cancelConfirmationPrompt(android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationIcon(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View$11: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setPreferredDataSubscriptionId(int,boolean,java.util.concurrent.Executor,java.util.function.Consumer)> (ACCOUNT_SETTINGS)
<android.text.MeasuredParagraph: android.text.MeasuredParagraph buildForStaticLayout(android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic,boolean,boolean,android.text.MeasuredParagraph,android.text.MeasuredParagraph)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)> android.permission.WRITE_SYNC_SETTINGS (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$DualTimer: void startRunningLocked(long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void removeTabAt(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setVersionName(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoiceActivationState(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$MarginLayoutParams: void resolveLayoutDirection(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(java.util.concurrent.Executor,android.telephony.ims.ImsMmTelManager$RegistrationCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionInfo$1: android.telephony.SubscriptionInfo createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setReadReport(int)> (ACCOUNT_SETTINGS)
<com.android.internal.infra.RemoteStream: com.android.internal.infra.AndroidFuture sendBytes(com.android.internal.util.FunctionalUtils$ThrowingConsumer,com.android.internal.util.FunctionalUtils$ThrowingConsumer)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.content.RestrictionEntry: void <init>(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void updateMobileRadioState(android.telephony.ModemActivityInfo)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void setAttentionLight(boolean,int)> android.permission.DEVICE_POWER (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$100(long)> (ACCOUNT_SETTINGS)
<android.graphics.FontListParser: android.text.FontConfig parse(java.io.InputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyContextUpdated(int,android.view.contentcapture.ContentCaptureContext)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo$Builder: int access$500(android.content.pm.SuspendDialogInfo$Builder)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManagerGlobal: void setTemporaryBrightness(float)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.biometrics.BiometricManager: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Activity: void access$300(android.content.pm.PackageParser$Activity,float)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCompatibleWidthLimitDp(int)> (ACCOUNT_SETTINGS)
<android.view.View: int combineMeasuredStates(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.ListFragment: void setListShownNoAnimation(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ComponentName: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$2502(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setCdmaRoamingMode(int,int)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.View: void setOutlineAmbientShadowColor(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setLargeHeap(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener,android.app.ActivityOptions$OnAnimationFinishedListener)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void setRightHintText(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: void setClientProgress(float)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1300(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)> (ACCOUNT_SETTINGS)
<android.net.shared.Inet4AddressUtils: int prefixLengthToV4NetmaskIntHTL(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRequiredForAllUsers(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: boolean setInstantAppCookie(byte[])> (ACCOUNT_SETTINGS)
<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setResource(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void addKeyboardNavigationClusters(java.util.Collection,int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setSubtitleTextColor(int)> (ACCOUNT_SETTINGS)
<android.hardware.face.IFaceService$Stub$Proxy: void setFeature(int,int,boolean,byte[],android.hardware.face.IFaceServiceReceiver,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExtra(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.ActivityTaskManager: void startSystemLockTaskMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy: void apply(android.service.notification.ZenPolicy)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setVertexCount(int)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: int api2aidlRecognitionModes(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setAutofillOptions(android.content.AutofillOptions)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.GenericPdu: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setCdmaSubscriptionMode(int)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER (ACCOUNT_SETTINGS)
<android.animation.AnimationHandler$MyFrameCallbackProvider: void setFrameDelay(long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.biometrics.IAuthService$Stub$Proxy: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManagerGlobal: void setVirtualDisplayState(android.hardware.display.IVirtualDisplayCallback,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void access$1101(android.webkit.WebView,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setPhoneType(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColors(int[],float[])> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void onWindowSizeIsChanging(android.graphics.Rect,boolean,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$Tab setContentDescription(int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void <init>(byte[],com.google.android.mms.pdu.EncodedStringValue,int,byte[])> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$3: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.SmsMessageBase: int findNextUnicodePosition(int,int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean setAshmem(android.os.ParcelFileDescriptor,long)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$MediaImage: void <init>(java.nio.ByteBuffer[],int[],int[],int,int,int,boolean,long,int,int,android.graphics.Rect,long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadOrigInd: void setDate(long)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setRecoveryStatus(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPbapClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setPreferredOpportunisticDataSubscription(int,boolean,java.util.concurrent.Executor,java.util.function.Consumer)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: boolean setAccountVisibility(android.accounts.Account,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: void startPreparedClient(int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiDeviceInfo: int idForHardware(int)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: int makeAuthenticationId(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.hardware.camera2.params.StreamConfigurationMap: int checkArgumentFormat(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsEcbm$Stub$Proxy: void setListener(com.android.ims.internal.IImsEcbmListener)> (ACCOUNT_SETTINGS)
<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: void renderFrame(android.view.View,android.graphics.Rect,android.os.Handler,java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setDisplayToSingleTaskInstance(int)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer$SimpleRenderer: void <init>(android.content.Context,java.lang.String,android.view.Surface)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setLocationControllerExtraPackageEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.content.PackageMonitor: void onHandleUserStop(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: void updateOutputConfiguration(int,android.hardware.camera2.params.OutputConfiguration)> (ACCOUNT_SETTINGS)
<android.service.notification.NotificationListenerService: void setOnNotificationPostedTrim(int)> (ACCOUNT_SETTINGS)
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputHardware$Stub$Proxy: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionManager: void setCustomMediaKeyDispatcherForTesting(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$1: android.net.lowpan.LowpanBeaconInfo createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.WifiNl80211Manager$SendMgmtFrameEvent: void <init>(android.net.wifi.nl80211.WifiNl80211Manager,java.util.concurrent.Executor,android.net.wifi.nl80211.WifiNl80211Manager$SendMgmtFrameCallback)> (ACCOUNT_SETTINGS)
<android.app.ResourcesManager: void updateResourcesForActivity(android.os.IBinder,android.content.res.Configuration,int,boolean)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void setDebugFlags(int,int)> (ACCOUNT_SETTINGS)
<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.widget.Editor$ErrorPopup: void <init>(android.widget.TextView,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleForeground$4: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMasterVolumeMuted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.widget.RadioGroup: void check(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageDeleteObserver2$Stub$Proxy: void onUserActionRequired(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)> (ACCOUNT_SETTINGS)
<android.view.View: void offsetTopAndBottom(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.window.ITaskOrganizerController$Stub$Proxy: void setInterceptBackPressedOnTaskRoot(android.window.ITaskOrganizer,boolean)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow$PopupDecorView: void startExitTransition(android.transition.Transition,android.view.View,android.graphics.Rect,android.transition.Transition$TransitionListener)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setFeatureDrawableResource(int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DateBuilder: android.text.style.TtsSpan$DateBuilder setYear(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean startViewCalendarEventInManagedProfile(java.lang.String,long,long,long,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CaptureRequest$Builder: void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: void setIntValues(int[])> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: double lambda$calculateMinimumAlpha$1(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.logging.MetricsLogger: void histogram(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: boolean startPnoScan(android.net.wifi.nl80211.PnoSettings)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void updateLockTaskFeatures(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: int netmaskIntToPrefixLength(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub$Proxy: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int processEcm(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActiveAdmin(android.content.ComponentName,boolean,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedImageDrawable: void setLoopCount(int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(android.content.res.AssetFileDescriptor)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])> (ACCOUNT_SETTINGS)
<com.android.server.NetworkManagementSocketTagger: int setThreadSocketStatsTag(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSelectHandle(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setPackageStoppedState(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)> (ACCOUNT_SETTINGS)
<android.content.ClipData$Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setSessionVolumeWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)> (ACCOUNT_SETTINGS)
<android.app._$$Lambda$NotificationHistory$IawnrvjT3DfA_k_PePr01d9fBSQ: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.Window: void notifyRestrictedCaptionAreaCallback(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setClipChildren(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setExpiry(long)> (ACCOUNT_SETTINGS)
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionResult: int access$000(android.widget.SelectionActionModeHelper$SelectionResult)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender,int)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$RouteInfo: void requestSetVolume(int)> (ACCOUNT_SETTINGS)
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: void taskStarted(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setFocusedTask(int)> (ACCOUNT_SETTINGS)
<android.print.PrintDocumentInfo: int access$202(android.print.PrintDocumentInfo,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setAlwaysFinish(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setMode(int)> (ACCOUNT_SETTINGS)
<android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List setMeteredDataDisabledPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: void sendSms(int,int,java.lang.String,java.lang.String,boolean,byte[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.content.pm.ApplicationInfo: void maybeUpdateHiddenApiEnforcementPolicy(int)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Frame: void setData(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setDecodeAsAlphaMask(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setTaskAffinity(java.lang.String)> (ACCOUNT_SETTINGS)
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3,android.renderscript.Int3)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.telecom.Logging.Session: void <init>(java.lang.String,java.lang.String,long,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.security.keystore.recovery.KeyChainSnapshot: int access$202(android.security.keystore.recovery.KeyChainSnapshot,int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setAvoidUnvalidated(android.net.Network)> (ACCOUNT_SETTINGS)
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.view.View$4: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setDeviceIdleMode(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadRecInd: void setReadStatus(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: boolean onLayoutDirectionChanged(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkOperatorNumeric(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: long copyInternalSendfile(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)> (ACCOUNT_SETTINGS)
<android.app.trust.TrustManager: void setDeviceLockedForUser(int,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaCas: void sendEvent(int,int,byte[])> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void setBottomEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View$12: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void updateRotation(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)> (ACCOUNT_SETTINGS)
<android.hardware.lights.ILightsManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)> (ACCOUNT_SETTINGS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean setEnable(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableResource(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void updateDeviceOwner(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void setSystemAudioMute(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.FragmentHostCallback: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.widget.MenuPopupWindow: void setTouchModal(boolean)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionTracker: int access$800(android.widget.SelectionActionModeHelper$SelectionTracker)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<android.view.ViewOutlineProvider$2: void getOutline(android.view.View,android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$Static: void onDisplayRemoved(int)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int convertNativeChannelMaskToOutMask(int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int length(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setBackgroundFallback(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSupportsLargeScreens(int)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setInputMethodAndSubtype(java.lang.String,android.view.inputmethod.InputMethodSubtype)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: boolean startGnssBatch(long,boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$2400(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void startCheckpoint(int)> (ACCOUNT_SETTINGS)
<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.AcknowledgeInd: void setTransactionId(byte[])> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setContentInsetsAbsolute(int,int)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setMode(java.lang.String,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyViewAppeared(int,android.view.contentcapture.ViewNode$ViewStructureImpl)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setActionBar(android.widget.Toolbar)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void authenticate(int,int,android.content.IntentSender,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.sysprop.DisplayProperties: void debug_force_msaa(java.lang.Boolean)> (ACCOUNT_SETTINGS)
<android.print.PrinterInfo: int access$1100(android.print.PrinterInfo)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: void access$1800(android.view.autofill.AutofillManager,int,android.view.autofill.AutofillId[],boolean,boolean,android.view.autofill.AutofillId[],android.view.autofill.AutofillId)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: int access$2102(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo,int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$5: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: void setAppStandbyBucket(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.provider.Settings$Config: boolean setStrings(android.content.ContentResolver,java.lang.String,java.util.Map)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void getCurrentLocation(android.location.LocationRequest,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.print.PrinterInfo: int access$500(android.print.PrinterInfo)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoInputStream: int decodeZigZag32(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setVoiceMailNumber(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int refreshEntitlements(int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.UiAutomation: boolean setRotation(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setSubscriptionOverrideCongested(int,boolean,long)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.media.audiopolicy.AudioPolicy: boolean setUidDeviceAffinity(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowTaskReparenting(boolean)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$2100(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingStarted(int[],com.android.internal.app.IAppOpsStartedCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.graphics.fonts.FontCustomizationParser: android.graphics.fonts.FontCustomizationParser$Result parse(java.io.InputStream,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean startDreamActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setVrModeEnabled(boolean,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.content.res.ResourcesImpl: int calcConfigChanges(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Allocation[] createAllocations(android.renderscript.RenderScript,android.renderscript.Type,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<android.view.View$5: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserEnabled(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setCarrierTestOverride(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.SystemTextClassifier: void onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setPersistentVrThread(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager$DelegateImpl: boolean startInput(int,android.view.View,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHomeAsUpIndicator(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setLegacyLockPatternEnabled(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$1408(android.bluetooth.BluetoothGatt)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$3: void setValue(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageClass(byte[])> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setStrictModeVisualIndicatorPreference(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int alpha(int)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionTracker: int access$900(android.widget.SelectionActionModeHelper$SelectionTracker)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$400(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$400(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$202(android.media.tv.TvInputHardwareInfo,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.Set)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setNetworkSpecifier(android.net.NetworkSpecifier)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)> (ACCOUNT_SETTINGS)
<com.android.internal.logging.MetricsLogger: void action(int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void measureHorizontal(int,int)> (ACCOUNT_SETTINGS)
<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)> (ACCOUNT_SETTINGS)
<com.android.internal.os.HandlerCaller: void sendMessageDelayed(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])> (ACCOUNT_SETTINGS)
<android.filterfw.core.SerializedFrame: void setFloats(float[])> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int findContrastColor(int,int,boolean,double)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setLine1NumberForDisplay(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setElevation(float)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void sendVolumeKeyEvent(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: int access$100(int,int)> (ACCOUNT_SETTINGS)
<android.content.IIntentSender$Default: void send(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int println(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAuthenticationResult(android.os.Bundle,int,int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setSessionVolumeWithRouter2(android.media.IMediaRouter2,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setLayerTracing(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions$HideWindowListener: void <init>(android.view.Window,android.app.ExitTransitionCoordinator)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMaxAspectRatio(float)> (ACCOUNT_SETTINGS)
<android.widget.SmartSelectSprite$RoundedRectangleShape: void access$200(android.widget.SmartSelectSprite$RoundedRectangleShape,float)> (ACCOUNT_SETTINGS)
<android.view.View: void setTagInternal(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedComponent: void <init>(android.content.pm.parsing.component.ParsedComponent)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.Notification: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Stub$Proxy: void onMediaButtonFromController(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFinishOnTouchOutside(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DialogPopup: void onClick(android.content.DialogInterface,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ComponentParseUtils: int flag(int,int,boolean,android.content.res.TypedArray)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setDuration(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$RouteGroup: void setIconResource(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsEcbm$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: void setCameraAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)> (ACCOUNT_SETTINGS)
<android.hardware.input.IInputManager$Stub$Proxy: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setLogo(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setElevation(float)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean updateClientPriority(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager$StackInfo: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)> (ACCOUNT_SETTINGS)
<android.view.animation.CycleInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int lambda$setDisplayName$3(java.lang.String,int,int,com.android.internal.telephony.ISub)> (ACCOUNT_SETTINGS)
<android.media.AudioFocusRequest$Builder: void <init>(int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setAudioRestriction(int,int,int,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.ImeFocusController: void onPostWindowFocus(android.view.View,boolean,android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaCas$Session: void setPrivateData(byte[])> (ACCOUNT_SETTINGS)
<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller$Session: void commitTransferred(android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.TunerResourceManager: void setLnbInfoList(int[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: int delete(android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,boolean,android.view.Surface,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.media.AudioSystem: int setStreamVolumeIndexAS(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setInputType(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkPolicyManager: void setSubscriptionOverride(int,int,int,long,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setRecoverySecretTypes(int[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void startAnimating(boolean)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager$AutofillManagerClient: void lambda$startIntentSender$10(android.view.autofill.AutofillManager,android.content.IntentSender,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int listPreviousAudioPorts(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: void setPermissionEnforced(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setProhibitMode(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: boolean setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setRadioCapability(android.telephony.RadioAccessFamily[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoBaseResourcePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)> (ACCOUNT_SETTINGS)
<android.view.View: void setTop(int)> (ACCOUNT_SETTINGS)
<android.view.View: void access$3400(android.view.View,boolean,float,float)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int setImsProvisioningInt(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,long)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowClearUserDataOnFailedRestore(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.infra.RemoteStream: com.android.internal.infra.AndroidFuture sendBytes(com.android.internal.util.FunctionalUtils$ThrowingConsumer,byte[])> (ACCOUNT_SETTINGS)
<android.app.IUiModeManager$Stub$Proxy: boolean setNightModeActivated(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setTestPhoneAcctSuggestionComponent(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer$OnMediaTimeDiscontinuityListener)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController: void setVolumeTo(int,int)> (ACCOUNT_SETTINGS)
<android.app.IAppTask$Stub$Proxy: int startActivity(android.os.IBinder,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setScanResponseData(int,android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivities(android.content.Intent[])> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setUsbDeviceConnectionHandler(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVoWiFiSettingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void set(android.view.InsetsState)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DateBuilder: android.text.style.TtsSpan$DateBuilder setDay(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: boolean setLockCredentialWithToken(com.android.internal.widget.LockscreenCredential,long,byte[],int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.content.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)> (ACCOUNT_SETTINGS)
<android.media.AudioFocusInfo$1: android.media.AudioFocusInfo createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setPowerButtonInstantlyLocks(boolean,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setLayer(int)> (ACCOUNT_SETTINGS)
<android.service.dreams.Sandman: void startDreamByUserRequest(android.content.Context)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$102(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setHasDomainUrls(boolean)> (ACCOUNT_SETTINGS)
<android.telecom.TelecomManager: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)> (ACCOUNT_SETTINGS)
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: void setListener(android.telephony.ims.aidl.IImsMmTelListener)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadOrigInd: void setReadStatus(int)> (ACCOUNT_SETTINGS)
<android.os._$$Lambda$Binder$sHSgT14Q7D_inZx204V4_ect_uA: int resolveWorkSourceUid(int)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: int sendAndReturnResult(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendKeyDownUpSync(int)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: int executeUpdateDelete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setImportantForAccessibility(boolean)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: int inetAddressToInt(java.net.Inet4Address)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setVolumeInited(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setMtu(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setDataRoaming(int,int)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.DisplayAdjustments: void <init>(android.view.DisplayAdjustments)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLocationEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setDescriptionRes(int)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder unsetVisualEffect(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: void sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsSource: void setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setVolumeControlStream(int)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchSetSelected(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setUsername(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: boolean startDreamActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.IMediaCasService$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVtSettingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputClient$Stub$Proxy: void onTuned(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.input.IInputManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int byteNumForUnsignedInt(int)> (ACCOUNT_SETTINGS)
<android.os.Binder: void setProxyTransactListener(android.os.Binder$ProxyTransactListener)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setSecure(boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPan$Stub$Proxy: void setBluetoothTethering(boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.Context: int startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: void onDestroy(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: void setDefusable(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$602(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.view.animation.PathInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: boolean deleteStoredConversation(java.lang.String,long)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void set(int,long,long,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler,android.os.WorkSource)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingAsyncNoted(java.lang.String,com.android.internal.app.IAppOpsAsyncNotedCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int uint8(byte)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowAudioPlaybackCapture(boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: boolean initializeIfNeeded(int,int,android.view.View$AttachInfo,android.view.Surface,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,int,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,java.lang.String,android.os.Bundle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: int aidl2apiAudioCapabilities(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setOutlineSpotShadowColor(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$5: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setSplitScreenResizing(boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub$Proxy: void setAppCallback(android.nfc.IAppCallback)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager$CompatibilityBridge: int access$400(android.view.autofill.AutofillManager$CompatibilityBridge)> (ACCOUNT_SETTINGS)
<android.app.admin.SystemUpdatePolicy: int access$202(android.app.admin.SystemUpdatePolicy,int)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.PhraseRecognitionExtra: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setNotificationListenerAccessGranted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4,android.renderscript.Int4)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)> (ACCOUNT_SETTINGS)
<android.net.LinkProperties: void <init>(android.net.LinkProperties,boolean)> (ACCOUNT_SETTINGS)
<android.text.PrecomputedText$Params: int access$200(android.text.PrecomputedText$Params)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void execStartActivityFromAppTask(android.content.Context,android.os.IBinder,android.app.IAppTask,android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setEndUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: void taskFinished(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$000(android.bluetooth.BluetoothGatt)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setColorSpaceAgnostic(boolean)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onExtractedDeleteText(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.AbsActionBarView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void animateTransform(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkOperatorNameForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setBaseHardwareAccelerated(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$1000(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.widget.EdgeEffect: void setColor(int)> (ACCOUNT_SETTINGS)
<android.sysprop.VoldProperties: void encrypt_progress(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.ThreadLocalWorkSource: void restore(long)> (ACCOUNT_SETTINGS)
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$1702(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int compositeColors(int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setExtension(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$12: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.widget.SearchView$UpdatableTouchDelegate: void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: void setValue(android.graphics.drawable.VectorDrawable$VectorDrawableState,float)> (ACCOUNT_SETTINGS)
<android.view.View: void setRevealClip(boolean,float,float,float)> (ACCOUNT_SETTINGS)
<android.media.midi.MidiReceiver: void send(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.net.INetworkScoreService$Stub$Proxy: boolean updateScores(android.net.ScoredNetwork[])> (ACCOUNT_SETTINGS)
<android.view.View: void startActivityForResult(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.content.LoggingContentInterface: int checkUriPermission(android.net.Uri,int,int)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setOverrideApnsEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setSsid(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Icon: void scaleDownIfNecessary(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.view.InsetsController: boolean onStateChanged(android.view.InsetsState)> (ACCOUNT_SETTINGS)
<android.util.apk.ZipUtils: void setZipEocdCentralDirectoryOffset(java.nio.ByteBuffer,long)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyViewTextChanged(int,android.view.autofill.AutofillId,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Provider: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<com.android.internal.logging.MetricsLogger: void count(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setQueueTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.View: boolean setAlphaNoInvalidation(float)> (ACCOUNT_SETTINGS)
<android.net.Ikev2VpnProfile: android.net.Ikev2VpnProfile fromVpnProfile(com.android.internal.net.VpnProfile,android.security.KeyStore)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.DecorCaptionView: void onRootViewScrollYChanged(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.fingerprint.FingerprintManager: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.view.View: void layout(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity$HostCallbacks: void onStartIntentSenderFromFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setNetworkLoggingEnabled(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager$AutofillManagerClient: void startIntentSender(android.content.IntentSender,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,int,android.app.AppOpsManager$OnOpChangedListener)> (ACCOUNT_SETTINGS)
<android.app.SearchDialog: void setWorking(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: void setCodecConfigPreference(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothCodecConfig)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setOpportunistic(boolean,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri move(android.net.Uri,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources$AtscData: int toByteArray(byte[],int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void access$1900(android.widget.RemoteViews,android.widget.RemoteViews$BitmapCache)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setFormat(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: void setScale(int,float)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.os.PowerManager: void setDozeAfterScreenOff(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: boolean setAlwaysOnVpnPackageForUser(int,java.lang.String,boolean,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.View$5: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: void setOemUnlockEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.os.SystemClock: boolean setCurrentTimeMillis(long)> (ACCOUNT_SETTINGS)
<android.service.dreams.IDreamManager$Stub$Proxy: void setDreamComponentsForUser(int,android.content.ComponentName[])> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setView(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.palette.ColorCutQuantizer: int quantizedGreen(int)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder addPerson(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setFlags(int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$InternalPopupWindow: void <init>(android.content.Context,android.view.Display,android.view.SurfaceControl,int,int,float,int,float,float,android.graphics.drawable.Drawable,android.os.Handler,java.lang.Object,android.widget.Magnifier$Callback,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.input.IInputManager$Stub$Proxy: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$300(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int ensureTextBackgroundColor(int,int,int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.audio.common.AudioOffloadInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.VertexFrame: void setInts(int[])> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setWallpaperPosition(android.os.IBinder,float,float,float,float)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setShowWhenLocked(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,int,float)> (ACCOUNT_SETTINGS)
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedProvider(java.lang.String,long,float,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsSsInfo: int access$102(android.telephony.ims.ImsSsInfo,int)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setTitleOptionalHint(boolean)> (ACCOUNT_SETTINGS)
<android.content.RestrictionEntry: void <init>(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setBatteryStateLocked(int,int,int,int,int,int,int,int,long)> (ACCOUNT_SETTINGS)
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationCategoryHint(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean stopService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableInflater: android.graphics.drawable.Drawable inflateFromXmlForDensity(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setNetworkSpecifier(android.net.NetworkSpecifier)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager$OnOpChangedListener)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void startTimerRecording(int,int,byte[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger.SoundTriggerManager: int setParameter(java.util.UUID,int,int)> (ACCOUNT_SETTINGS)
<android.view._$$Lambda$FocusFinder$FocusSorter$kW7K1t9q7Y62V38r_7g6xRzqqq8: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,long)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbManager: void setUsbDeviceConnectionHandler(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setAccessibilityTraversalBefore(int,int)> (ACCOUNT_SETTINGS)
<android.service.vr.IVrManager$Stub$Proxy: void setPersistentVrModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.IUiModeManager$Stub$Proxy: void setCustomNightModeEnd(long)> (ACCOUNT_SETTINGS)
<android.media.AudioPlaybackConfiguration: int access$200(android.media.AudioPlaybackConfiguration)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setFillBefore(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void installExistingPackage(java.lang.String,int,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.location.GnssClock: int access$1202(android.location.GnssClock,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setUiccApplicationsEnabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.Intent: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$7: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CameraCharacteristics: void <init>(android.hardware.camera2.impl.CameraMetadataNative)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,long,int,int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.Process: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void setOverridesForTest(com.android.internal.compat.CompatibilityChangeConfig,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,long)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$6: void set(android.view.View,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.SoundTriggerModule: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setMultiSimCarrierRestriction(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void access$200(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setIsSyncableAsUser(android.accounts.Account,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$CryptoInfo$Pattern: int access$1300(android.media.MediaCodec$CryptoInfo$Pattern)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.permission.PermissionManager: void setRuntimePermissionsVersion(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ImageUtils: void lambda$loadThumbnail$1(android.util.Size,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.PendingInsetsController: void setSystemBarsBehavior(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnSubtitleDataListener(android.media.MediaPlayer$OnSubtitleDataListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.net.nsd.NsdServiceInfo: int access$302(android.net.nsd.NsdServiceInfo,int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession$CallbackStub: void onPlayFromUri(java.lang.String,int,int,android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setMessageSize(long)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DateBuilder: android.text.style.TtsSpan$DateBuilder setMonth(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(char[],int,int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setForceEphemeralUsers(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: int access$800(android.graphics.ImageDecoder)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.Service: int onStartCommand(android.content.Intent,int,int)> (ACCOUNT_SETTINGS)
<android.widget.HorizontalScrollView: void setRightEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.ComponentName startForegroundServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void startActivityAsTextOperationUserIfNecessary(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Notification$Action$WearableExtender: android.app.Notification$Action$WearableExtender setAvailableOffline(boolean)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setExtraLocationControllerPackageEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setRoamingOverride(int,java.util.List,java.util.List,java.util.List,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.EdgeEffect: void setBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchTooltipHoverEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.view.IScrollCaptureClient$Stub$Proxy: void startCapture(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.util.IntProperty: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(android.net.Network,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setAlwaysReportSignalStrength(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.input.InputManager: void setPointerIconType(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$2: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int refreshEntitlements(int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder unsetPriorityCategory(int)> (ACCOUNT_SETTINGS)
<android.graphics.fonts.FontFileUtil: int unpackWeight(int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setAudioStreamType(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setCarrierInfoForImsiEncryption(android.telephony.ImsiEncryptionInfo)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityAsCaller(android.content.Intent,android.os.Bundle,android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.pm.ILauncherApps$Stub$Proxy: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setResize(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setRotationX(float)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setOwnerInfoEnabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setAlpha(float)> (ACCOUNT_SETTINGS)
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria,long,float,boolean)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget$RegionLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle,float)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)> (ACCOUNT_SETTINGS)
<android.print.PrinterInfo: int access$200(int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setCountryCode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void setSchedulingGroup(int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationsEnabledWithImportanceLockForPackage(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: void setDefaultSmdpAddress(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.sysprop.DisplayProperties: void debug_force_rtl(java.lang.Boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$CryptoInfo$Pattern: void <init>(int,int)> (ACCOUNT_SETTINGS)
<android.util.Half: int compareTo(android.util.Half)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setTransactionId(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$5: void setValue(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.view.View: boolean draw(android.graphics.Canvas,android.view.ViewGroup,long)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener)> (ACCOUNT_SETTINGS)
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setChronometerCountDown(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestore(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setSecondaryLockscreenEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void sendRttModifyRequest(android.telephony.ims.ImsCallProfile)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(com.android.internal.telephony.OperatorInfo,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setTargetSandboxVersion(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1400(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setUids(java.util.Set)> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener$Timeout: void <init>(android.text.method.MultiTapKeyListener,android.text.Editable)> (ACCOUNT_SETTINGS)
<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setFrameCommitCallback(java.util.concurrent.Executor,java.lang.Runnable)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.ConversionUtil: int aidl2apiRecognitionModes(int)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager$AlarmClockInfo,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.content.Intent: void setAllowFds(boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setSwitchingUser(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setTitleTextColor(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.IRemoteViewsFactory$Default: void onDestroy(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IRcsFeatureListener$Stub$Proxy: void onRemoteCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracingDdms(int,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.security.IKeyChainService$Stub$Proxy: void setGrant(int,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView$2: void lambda$setKeepScreenOn$0$SurfaceView$2(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: void setNickname(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.euicc.ISetNicknameCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Default: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long)> (ACCOUNT_SETTINGS)
<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setType(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setFocusedStack(int)> (ACCOUNT_SETTINGS)
<android.os.PerformanceCollector: void <init>(android.os.PerformanceCollector$PerformanceResultsWriter)> (ACCOUNT_SETTINGS)
<android.net.shared.Inet4AddressUtils: int inet4AddressToIntHTL(java.net.Inet4Address)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.PowerSaveState$Builder: int access$100(android.os.PowerSaveState$Builder)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setSystemSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbManager: void setScreenUnlockedFunctions(long)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$MediaImage: void <init>(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,long,int,int,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void setSessionFinished(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,long,int)> (ACCOUNT_SETTINGS)
<android.view.Surface: void transferFrom(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setStaticSharedLibrary(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoWiFiRoamingSettingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.os.GraphicsEnvironment$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (ACCOUNT_SETTINGS)
<android.os.IRecoverySystem$Stub$Proxy: boolean requestLskf(java.lang.String,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.view.View: void setForegroundTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: void updateCasInfo(int,int)> (ACCOUNT_SETTINGS)
<android.view.View$3: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void animateToVisibility(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setInstallerPackageName(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm._$$Lambda$PackageParser$M_9fHqS_eEp1oYkuKJhRHOGUxf8: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaDescrambler: void setMediaCasSession(android.media.MediaCas$Session)> (ACCOUNT_SETTINGS)
<android.view.View$7: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleForeground$3: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setStatusBarDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void updateBluetoothStateLocked(android.bluetooth.BluetoothActivityEnergyInfo)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setCacheBehaviorGroup(java.io.File,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int startActivityFromRecents(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: android.transition.Transition setDuration(long)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void requestAudioFocusForCall(int,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setHdmiSystemAudioSupported(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$WifiDisplayStatusChangedReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPbap$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setFrontActivityScreenCompatMode(int)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.text.Layout: void drawText(android.graphics.Canvas,int,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(android.view.View,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setZoom(int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int processEmm(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int maxBandwidth(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFilterText(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$10: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setIsSyncableAsUser(android.accounts.Account,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void startDtmf(char)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputClient$Stub$Proxy: void onChannelRetuned(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: boolean enableSecureNfc(boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: int access$802(android.view.SurfaceControl,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera: void setPreviewCallbackAllocation(android.renderscript.Allocation)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.midi.MidiDeviceServer: int access$1100(android.media.midi.MidiDeviceServer)> (ACCOUNT_SETTINGS)
<android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothSap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.Parcel: void writeException(java.lang.Exception)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanIdentity$1: android.net.lowpan.LowpanIdentity createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManagerGlobal: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setCallForwarding(int,android.telephony.CallForwardingInfo)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsCallProfile: void setEmergencyCallInfo(android.telephony.emergency.EmergencyNumber,boolean)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoInputStream: int readInt(long)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setImsProvisioningStatusForCapability(int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$100(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: java.lang.Runnable setRemoteViewsAdapterAsync(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setClipBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsSsInfo: int access$002(android.telephony.ims.ImsSsInfo,int)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setCacheBehaviorTombstone(java.io.File,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startVoiceActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setPath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.print.PrintDocumentInfo: int access$302(android.print.PrintDocumentInfo,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,long,long,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ScrollingTabContainerView: void setTabSelected(int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setPlaybackToRemote(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.os.StrictMode$AndroidBlockGuardPolicy: void onResourceMismatch(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserRestriction(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void handleStopActivity(android.os.IBinder,int,android.app.servertransaction.PendingTransactionActions,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.TestNetworkManager: void setupTestNetwork(java.lang.String,int[],android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.content.pm.StringParceledListSlice: void setInlineCountLimit(int)> (ACCOUNT_SETTINGS)
<android.content.Context: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void <init>(android.app.WindowConfiguration)> (ACCOUNT_SETTINGS)
<android.view.View: void startAnimation(android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Default: void startIntentSender(android.content.IntentSender,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setShouldShowIme(int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: void setTargetSampleSize(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setHistoryParameters(int,long,int)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setFillAfter(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.face.IFaceService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: int setMediaCasSession(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.assist.AssistStructure$ViewNodeBuilder: void setWebDomain(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)> (ACCOUNT_SETTINGS)
<com.android.internal.compat.IPlatformCompat$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int startActivityWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telecom.Log: void startSession(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setDataRoamingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLockTaskFeatures(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Activity: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$MagnificationController: boolean setCenter(float,float,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(java.lang.String,long,int,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)> (ACCOUNT_SETTINGS)
<android.media.AudioRecord: void <init>(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: void setColorMode(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayCustomStartTime(java.time.LocalTime)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContainer: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: void setSmsListener(android.telephony.ims.aidl.IImsSmsListener)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int findAlphaToMeetContrast(int,int,double)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean stopService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnEventListener(java.util.concurrent.Executor,android.media.MediaDrm$OnEventListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedImageDrawable: void <init>(long,android.graphics.ImageDecoder,int,int,long,boolean,int,int,android.graphics.Rect,java.io.InputStream,android.content.res.AssetFileDescriptor)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.os.StrictMode$ViolationInfo: int access$600(android.os.StrictMode$ViolationInfo)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: void setCanRemoveViews(boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setForwardedInsets(int,android.graphics.Insets)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setPersistent(boolean)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingNoted(int[],android.app.AppOpsManager$OnOpNotedListener)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void setTrackedViews(int,android.view.autofill.AutofillId[],boolean,boolean,android.view.autofill.AutofillId[],android.view.autofill.AutofillId)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,int[])> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Default: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setSupportedSystemUsages(int[])> (ACCOUNT_SETTINGS)
<android.net.IEthernetManager$Stub$Proxy: void setIncludeTestInterfaces(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int setAudioPortGain(android.media.AudioPort,android.media.AudioGainConfig)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DateBuilder: android.text.style.TtsSpan$DateBuilder setWeekday(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void updateActivityViewToScreenMatrix(int,float[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstallerSession$Stub$Proxy: void commit(android.content.IntentSender,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int cdmaBcdByteToInt(byte)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setRotation(float)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)> (ACCOUNT_SETTINGS)
<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,int,int,long,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$700(android.bluetooth.BluetoothGatt)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$SyntheticTouchNavigationHandler: int access$3100(android.view.ViewRootImpl$SyntheticTouchNavigationHandler)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setRequestedOrientation(int)> (ACCOUNT_SETTINGS)
<android.media.AudioSystem: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setActivityController(android.app.IActivityController,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int bindIsolatedService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub$Proxy: void setVolumeTo(java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int uint16(byte,byte)> (ACCOUNT_SETTINGS)
<android.content.Context: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: void access$2700(android.app.Notification$Builder,android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setAttributes(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$900(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: int setConfigString(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsTimestamp(long)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setSubtitle(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$18: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,float,float,float,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlayTargetName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.PackageInfoWithoutStateUtils: int appInfoFlags(android.content.pm.parsing.ParsingPackageRead)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$RouteGroup: void memberStatusChanged(android.media.MediaRouter$RouteInfo,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setProcessStateSummary(byte[])> (ACCOUNT_SETTINGS)
<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setSelected(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentTransitionManager(android.transition.TransitionManager)> (ACCOUNT_SETTINGS)
<android.service.notification.NotificationListenerService: void updateNotificationChannel(java.lang.String,android.os.UserHandle,android.app.NotificationChannel)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$InputConnectionWrapper: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.util.PrintWriterPrinter: void println(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setPermittedCrossProfileNotificationListeners(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.media.VolumeShaper$Operation: int access$600(android.media.VolumeShaper$Operation)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserEnabled(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)> android.permission.GLOBAL_SEARCH (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,boolean,int,int,int,int,boolean,long)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,int,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,java.lang.String,android.os.Bundle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.AccessibilityEmbeddedConnection: void setScreenMatrix(float[])> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: boolean access$1900(android.hardware.camera2.impl.CameraMetadataNative,android.location.Location)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnExpirationUpdateListener(java.util.concurrent.Executor,android.media.MediaDrm$OnExpirationUpdateListener)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothSap$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine$SmHandler: void access$1100(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.State)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setStartTime(long)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setHideSilentStatusIcons(boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setHotspot(float,float)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestoreForUser(int,boolean)> (ACCOUNT_SETTINGS)
<android.net.TrafficStats: void setThreadStatsTag(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setHasTopUi(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void addSpanWatchers(android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerImpl: void setShouldShowSystemDecors(int,boolean)> (ACCOUNT_SETTINGS)
<android.os.PowerManager: boolean setAdaptivePowerSaveEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.IUiModeManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.IIntentSender$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.location.GnssNavigationMessage$1: android.location.GnssNavigationMessage createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setResetPasswordToken(android.content.ComponentName,byte[])> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplaySize(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean setSmscAddressOnIccEfForSubscriber(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)> (ACCOUNT_SETTINGS)
<android.view.FocusFinder$UserSpecifiedFocusComparator: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setSimPowerStateForSlot(int,int)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void setVolumeUserFlags(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BinderInternal: void setBinderProxyCountCallback(com.android.internal.os.BinderInternal$BinderProxyLimitListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserName(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setFocusedStack(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void sendSessionModifyResponse(android.telecom.VideoProfile)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControlViewHost: void setView(android.view.View,android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.service.notification.ScheduleCalendar: void setTimeZone(java.util.TimeZone)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$4: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: void setCapabilities(int[])> (ACCOUNT_SETTINGS)
<android.view.Window: void addFlags(int)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub$Proxy: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setColor(int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void sendGesture(int,android.content.pm.ParceledListSlice)> (ACCOUNT_SETTINGS)
<android.view.ViewOutlineProvider$1: void getOutline(android.view.View,android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.content.ComponentName: int compareTo(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: void setConnectionCallback(android.view.accessibility.IWindowMagnificationConnectionCallback)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DialogPopup: void show(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setEventDispatching(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.CursorAnchorInfo$Builder: int access$600(android.view.inputmethod.CursorAnchorInfo$Builder)> (ACCOUNT_SETTINGS)
<android.app.IActivityController$Stub$Proxy: boolean activityStarting(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager$HistoricalOpsRequest: int access$5600(android.app.AppOpsManager$HistoricalOpsRequest)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform$Builder setIpv4Encapsulation(android.net.IpSecManager$UdpEncapsulationSocket,int)> (ACCOUNT_SETTINGS)
<android.sysprop.DisplayProperties: void debug_opengl_trace(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.Window: void setColorMode(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAutoTimeEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setVolumePolicy(android.media.VolumePolicy)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setImmersive(boolean)> (ACCOUNT_SETTINGS)
<android.app.FragmentHostCallback: void onStartIntentSenderFromFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ContentCaptureEvent$1: android.view.contentcapture.ContentCaptureEvent createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void sendDialerSpecialCode(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setCallForwarding(android.telephony.CallForwardingInfo)> (ACCOUNT_SETTINGS)
<android.database.IContentObserver$Stub$Proxy: void onChange(boolean,android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void <init>(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.data.ApnSetting: android.telephony.data.ApnSetting makeApnSetting(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.net.Uri,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,int,boolean,int,int,boolean,int,int,int,int,int,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowNativeHeapPointerTagging(boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setOpaque(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setHdmiCecVolumeControlEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.media.IVolumeController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MoneyBuilder: android.text.style.TtsSpan$MoneyBuilder setIntegerPart(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioDeviceInfo: int convertDeviceTypeToInternalDevice(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setDefaultDataSubId(int)> (ACCOUNT_SETTINGS)
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$setRuntimePermissionGrantStateByDeviceAdmin$2(java.lang.String,java.lang.String,java.lang.String,int,android.permission.IPermissionController)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$CodecCapabilities createFromProfileLevel(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.location.ContextHubManager$1: void onTransactionComplete(int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startCaptivePortalApp(android.net.Network)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMetadata(android.view.SurfaceControl,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,boolean,int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedMainComponentUtils: android.content.pm.parsing.result.ParseResult parseMainComponent(android.content.pm.parsing.component.ParsedMainComponent,java.lang.String,java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,int,boolean,android.content.pm.parsing.result.ParseInput,int,int,java.lang.Integer,java.lang.Integer,int,int,int,int,java.lang.Integer,int,java.lang.Integer)> (ACCOUNT_SETTINGS)
<android.widget.Editor$SuggestionsPopupWindow: int access$3500(android.widget.Editor$SuggestionsPopupWindow)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setIsolatedSplitLoading(boolean)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setSignalStrength(int)> (ACCOUNT_SETTINGS)
<android.hardware.biometrics.IAuthService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setUserProvisioningState(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture,int,int,android.graphics.Bitmap$Config)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar setContentRect(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedProviderUtils: android.content.pm.parsing.result.ParseResult parseProvider(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setTestDefaultCallRedirectionApp(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: boolean ensureTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setSystemAppHiddenUntilInstalled(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setAutofillClient(android.view.autofill.AutofillManager$AutofillClient)> (ACCOUNT_SETTINGS)
<android.view.View$13: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.hardware.radio.TunerAdapter: java.util.Map setParameters(java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setNotedAppOpsCollector(android.app.AppOpsManager$AppOpsCollector)> (ACCOUNT_SETTINGS)
<com.android.internal.util.GrowingArrayUtils: int growSize(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setUpdateAvailable(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setNavigationMode(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setOrganizationColorForUser(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)> (ACCOUNT_SETTINGS)
<android.window.ITaskOrganizerController$Stub$Proxy: void setLaunchRoot(int,android.window.WindowContainerToken)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: java.lang.CharSequence toUpperCase(java.util.Locale,java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout$5: void setValue(com.android.internal.widget.ActionBarOverlayLayout,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: android.content.res.Configuration generateDelta(android.content.res.Configuration,android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setPeriodicAdvertisingData(android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask: void access$800(android.accounts.AccountManager$AmsTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TelephoneBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setCustomTitle(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHomeActionContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int argb(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setTopEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.view.Surface$CompatibleCanvas: void setMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyChildSessionStarted(int,int,android.view.contentcapture.ContentCaptureContext)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: int selectSystemTheme(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.GraphicsEnvironment: void showAngleInUseDialogBox(android.content.Context)> (ACCOUNT_SETTINGS)
<android.app.ResourcesManager$UpdateHandler: void onLoadersChanged(android.content.res.Resources,java.util.List)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setOnKeyEventResult(boolean,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void adjustLayoutParamsForCompatibility(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setPanid(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: int setAllowedCarriers(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setPreferredNetworkType(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: void setTemporaryBrightness(float)> (ACCOUNT_SETTINGS)
<android.media.IVolumeController$Stub$Proxy: void setA11yMode(int)> (ACCOUNT_SETTINGS)
<android.media.RingtoneManager: void setType(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothServerSocket: void setServiceName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSigningDetails(android.content.pm.PackageParser$SigningDetails)> (ACCOUNT_SETTINGS)
<android.os.strictmode.IntentReceiverLeakedViolation: void <init>(java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int setSessionPrivateData(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothDevice: boolean setSilenceMode(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.SearchDialog$1: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void updateTvInputInfo(android.media.tv.TvInputInfo,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void updateCpuTimeLocked(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: int access$2602(android.view.ViewRootImpl,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void onVisibilityAggregated(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setDropdownSelectedPosition(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Stub$Proxy: void onPrepareFromUri(java.lang.String,int,int,android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void startOneTouchRecord(int,byte[])> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: void restrictCapabilitesForTestNetwork(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setDisablePreviewScreenshots(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastAsUserMultiplePermissions(android.content.Intent,android.os.UserHandle,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: void updateCapabilities(android.telephony.ims.RcsContactUceCapability,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.CursorAnchorInfo$Builder: int access$400(android.view.inputmethod.CursorAnchorInfo$Builder)> (ACCOUNT_SETTINGS)
<android.content.ClipData: void fixUrisLight(int)> (ACCOUNT_SETTINGS)
<android.transition.PatternPathMotion: void <init>(android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMicrophoneMute(boolean,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void <init>(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCOLR(int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub$Proxy: void onSubscriberAssociatedUriChanged(android.net.Uri[])> (ACCOUNT_SETTINGS)
<android.content.pm._$$Lambda$PackageParser$0aobsT7Zf7WVZCqMZ5z2clAuQf4: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setNetworkSpecifier(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$576(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setFocusable(int)> (ACCOUNT_SETTINGS)
<android.view.InsetsAnimationControlImpl: void setInsetsAndAlpha(android.graphics.Insets,float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothAvrcpController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundColor(int)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: void startCommissioningSession(android.net.lowpan.LowpanBeaconInfo)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setCellInfoListRate(int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$OrdinalBuilder: android.text.style.TtsSpan$OrdinalBuilder setNumber(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoicemailVibrationEnabled(java.lang.String,android.telecom.PhoneAccountHandle,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int setPrivateData(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.util.Rational: int compareTo(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.emergency.EmergencyNumber: void mergeSameNumbersInEmergencyNumberList(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setAncestralSerialNumber(long)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setRoaming(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$Static: void onDisplayAdded(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setStandbyMode(boolean)> (ACCOUNT_SETTINGS)
<android.os.IVoldMountCallback$Stub$Proxy: boolean onVolumeChecking(java.io.FileDescriptor,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$2300(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setBluetoothClass(android.bluetooth.BluetoothClass)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: android.net.NetworkCapabilities setRequestorUidAndPackageName(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setSupportedSystemUsages(int[])> (ACCOUNT_SETTINGS)
<android.view.View: void setLeft(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CameraCaptureSession: int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextLinksParams: int access$100(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: void setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean)> (ACCOUNT_SETTINGS)
<android.permission.PermissionManager: void startOneTimePermissionSession(java.lang.String,long,int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnExpirationUpdateListener(android.media.MediaDrm$OnExpirationUpdateListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setShouldShowSystemDecors(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View$8: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setSystemAppInstallState(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$2: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setEnabledTrustAgents(java.util.Collection,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setDrawMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void onPictureInPictureModeChanged(boolean)> (ACCOUNT_SETTINGS)
<android.widget.EdgeEffect: void setSize(int,int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$5: void set(android.view.View,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlay(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub$Proxy: void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$4: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.gsi.AvbPublicKey: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setTag(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.telecom.TelecomManager: void handleCallIntent(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub$Proxy: void startCheckpoint(int)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$CheckForLongPress: void access$1300(android.widget.AbsListView$CheckForLongPress,float,float)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimStateForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setRotation(int)> (ACCOUNT_SETTINGS)
<android.os._$$Lambda$BinderProxy$ProxyMap$aKNUVKkR8bNu2XRFxaO2PW1AFBA: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void startLinkActionModeAsync(int,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.content.pm.IShortcutService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void handleProfilerControl(boolean,android.app.ProfilerInfo,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.DeliveryInd: void setStatus(int)> (ACCOUNT_SETTINGS)
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setHintAvoidBackgroundClipping(boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.hardware.display.VirtualDisplay: void setDisplayState(boolean)> (ACCOUNT_SETTINGS)
<android.media.midi.MidiDeviceServer: int access$700(android.media.midi.MidiDeviceServer)> (ACCOUNT_SETTINGS)
<android.app.ExitTransitionCoordinator: void startExit(int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)> (ACCOUNT_SETTINGS)
<android.media.audiopolicy.AudioPolicy: int setFocusDuckingBehavior(int)> (ACCOUNT_SETTINGS)
<android.os.IDeviceIdleController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.print.PrinterInfo: int access$600(android.print.PrinterInfo)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void sendCloseSystemWindows(java.lang.String)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setDeliveryReport(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkPolicyManager: void setUidPolicy(int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$000(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.view.View: void setForceDarkAllowed(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String,boolean,long)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.TunerResourceManager: void updateCasInfo(int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: void setInts(int[])> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void icc_operator_alpha(java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.IRecoverySystem$Stub$Proxy: boolean setupBcb(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.SharedPreferencesImpl: int access$310(android.app.SharedPreferencesImpl)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$4: void setValue(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setNetworkSelectionModeManual(int,com.android.internal.telephony.OperatorInfo,boolean)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: int setPermissions(java.io.File,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$402(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setContentType(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setRcsProvisioningStatusForCapability(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: void setInputMethodAndSubtype(java.lang.String,android.view.inputmethod.InputMethodSubtype)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: void setListener(com.android.ims.internal.IImsUtListener)> (ACCOUNT_SETTINGS)
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean autofillClientRequestShowFillUi(android.view.View,int,int,android.graphics.Rect,android.view.autofill.IAutofillWindowPresenter)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage addQueriesIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setDisplayWhiteBalanceEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$4: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setProfileEnabled(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setIntents(android.content.Intent[])> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void startSelectionActionModeAsync(boolean)> (ACCOUNT_SETTINGS)
<android.content.om.OverlayManager: void setEnabledExclusiveInCategory(java.lang.String,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedComponentUtils: android.content.pm.parsing.result.ParseResult parseComponent(android.content.pm.parsing.component.ParsedComponent,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,boolean,android.content.pm.parsing.result.ParseInput,int,java.lang.Integer,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ICrossProfileApps$Stub$Proxy: void setInteractAcrossProfilesAppOp(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setLayerInsetRelative(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.MenuPopupWindow: void setEnterTransition(android.transition.Transition)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setAcceptPartialConnectivity(android.net.Network,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void startAssist(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.CameraCharacteristics createCharacteristics(java.lang.String,android.hardware.CameraInfo,int,android.util.Size)> (ACCOUNT_SETTINGS)
<android.view.PendingInsetsController: void setSystemBarsAppearance(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int setSessionPrivateData(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)> (ACCOUNT_SETTINGS)
<android.telephony.ims.feature.RcsFeature: void access$000(android.telephony.ims.feature.RcsFeature,android.telephony.ims.aidl.IRcsFeatureListener)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)> (ACCOUNT_SETTINGS)
<android.telephony.euicc.EuiccManager: void startResolutionActivity(android.app.Activity,int,android.content.Intent,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int channelCountFromInChannelMask(int)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int calculateMinimumBackgroundAlpha(int,int,float)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.HashSet readSetXml(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$6: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.app.ActivityTaskManager: boolean setTaskWindowingModeSplitScreenPrimary(int,int,boolean,boolean,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setDate(long)> (ACCOUNT_SETTINGS)
<android.security.KeyChain$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.DeliveryInd: void setMessageId(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int capturePolicyToFlags(int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCLIR(int)> (ACCOUNT_SETTINGS)
<android.view.IWindow$Stub$Proxy: void updatePointerIcon(float,float)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedActivityUtils: android.content.pm.parsing.result.ParseResult parseActivityOrReceiver(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar$OnNavigationListener)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setIntegerPart(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void startConference(java.util.List,android.os.Bundle,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void setTo(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.assist.AssistStructure$ViewNodeBuilder: int addChildCount(int)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: android.media.PlaybackParams easyPlaybackParams(float,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLength(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.FragmentManagerImpl: int reverseTransit(int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)> (ACCOUNT_SETTINGS)
<android.view.View$13: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.transition.ChangeImageTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.net.ITestNetworkManager$Stub$Proxy: void setupTestNetwork(java.lang.String,android.net.LinkProperties,boolean,int[],android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.nfc.cardemulation.NfcFCardEmulation: boolean setNfcid2ForService(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.UserIcons: android.graphics.Bitmap convertToBitmap(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setRequireUnpremultiplied(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: java.lang.String[] setDistractingPackageRestrictions(java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources: int access$100(int,int,int,byte[],int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,int,int,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setScreenUnlockedFunctions(long)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$CardinalBuilder: android.text.style.TtsSpan$CardinalBuilder setNumber(long)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)> (ACCOUNT_SETTINGS)
<android.view.View$4: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,long,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: int selectDefaultTheme(int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$Static: void publishClientSelectedRoute(boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcFCardEmulation$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setTranslationY(float)> (ACCOUNT_SETTINGS)
<android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerImpl: void setShouldShowWithInsecureKeyguard(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: void setKillCallback(android.os.ICancellationSignal)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.content.pm.DataLoaderManager: boolean bindToDataLoader(int,android.content.pm.DataLoaderParamsParcel,android.content.pm.IDataLoaderStatusListener)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1600(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.io.OutputStream)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setTurnScreenOn(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$3: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiAudioSystemClient: int access$200(android.hardware.hdmi.HdmiAudioSystemClient)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiClient: void sendKeyEvent(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setPopupBackgroundResource(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserProvisioningState(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Default: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setLayerTracingFlags(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setDefaultWindowFormat(int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Default: void onMediaButtonFromController(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.ModelParameterRange: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setOperatorBrandOverride(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setExternalStorage(boolean)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setDisplayWindowInsetsController(int,android.view.IDisplayWindowInsetsController)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.AcknowledgeInd: void <init>(int,byte[])> (ACCOUNT_SETTINGS)
<android.os.Messenger: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ComponentParseUtils: int flag(int,int,android.content.res.TypedArray)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoOutputStream: long start(long)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.service.persistentdata.PersistentDataBlockManager: void setOemUnlockEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Editor$SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setActiveDevice(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setPriority(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ListMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setRadio(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimPowerState(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IRecentsAnimationController$Stub$Proxy: void setAnimationTargetsBehindSystemBars(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,int,java.lang.Object,long)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeBitmask(long)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void sendStandby(int)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothInputStream: int read(byte[],int,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataRoamingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setFragmentId(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setOval(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: boolean setPowerSaveModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFastScrollStyle(int)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setLocalOnly(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: void setAppInactive(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startTcpKeepalive(android.net.Network,java.io.FileDescriptor,int,android.net.ISocketKeepaliveCallback)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setDataDirectorySuffix(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setProcesses(java.util.Map)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$572(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: android.animation.Animator setupAnimatorToVisibility(int,long)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.util.Half: int hashCode(short)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: int setUsbTethering(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAutoTimeZoneEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setRendererPriorityPolicy(int,boolean)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.provider.ContactsInternal: void startQuickContactWithErrorToast(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$5: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.media.RemoteControlClient: void setPlaybackState(int,long,float)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startLocalVoiceInteraction(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: android.transition.Transition setStartDelay(long)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setInvalidMsgAppDemoted(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,int,android.app.AppOpsManager$OnOpChangedListener)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setPlaybackState(android.media.session.PlaybackState)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int unpackRangeStartFromLong(long)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderView(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.os.incremental.IIncrementalServiceConnector$Stub$Proxy: int setStorageParams(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int setDisplayNumber(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$2: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.os.incremental.IIncrementalService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1500(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setHideOffset(int)> (ACCOUNT_SETTINGS)
<android.content.Context: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.HardwareRenderer: void setSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setPortRoles(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.usage.UsageStatsManager: void setAppInactive(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder addCapability(int)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,boolean,boolean,boolean,int,long)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$002(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.SoundModel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.text.style.AccessibilityReplacementSpan: void <init>(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleForeground$2: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void getNavigationBarRect(int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,float)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivities(android.content.Intent[])> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setAlpha(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView$ItemView)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExtraBackReference(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setProcessLimit(int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: void setFrameDelay(long)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiClient: void sendVendorCommand(int,byte[],boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivity(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.PhraseSoundModel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: int access$700(android.graphics.ImageDecoder)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRequiresSmallestWidthDp(int)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int access$502(android.net.wifi.nl80211.DeviceWiphyCapabilities,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setAppBounds(android.window.WindowContainerToken,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setUidMeteredNetworkBlacklist(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void updateServiceGroup(android.content.ServiceConnection,int,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.MicroAlertController: void setupTitle(android.view.ViewGroup)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayColorTemperature(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRestrictUpdateHash(byte[])> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int bytesToBEInt(byte[])> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setPackageAskScreenCompat(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnSessionLostStateListener(android.media.MediaDrm$OnSessionLostStateListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Uid: boolean updateOnBatteryBgTimeBase(long,long)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setImmersive(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setDefaultVoiceSubId(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: void setAvrcpAbsoluteVolume(int)> (ACCOUNT_SETTINGS)
<android.app.UiAutomation: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setVisibleToInstantApps(boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$CryptoInfo$Pattern: int access$1400(android.media.MediaCodec$CryptoInfo$Pattern)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.print.IPrintDocumentAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int access$500(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)> (ACCOUNT_SETTINGS)
<android.view.MotionEvent: int findPointerIndex(int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$002(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: android.app.Activity handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.app.servertransaction.PendingTransactionActions,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLong(java.lang.String,long,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void onResolveDrawables(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,long,long,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ListFragment: void setListShown(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawIntoSurfaces(android.hardware.camera2.legacy.CaptureCollector)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void setSelectedGroup(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setLogo(int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setTouchExplorationPassthroughRegion(int,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.app.NotificationHistory$HistoricalNotification: int access$502(android.app.NotificationHistory$HistoricalNotification,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: com.android.internal.util.function.pooled.PooledLambda acquire(com.android.internal.util.function.pooled.PooledLambdaImpl$Pool,java.lang.Object,int,int,int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyResultMapper: android.hardware.camera2.impl.CameraMetadataNative cachedConvertResultMetadata(android.hardware.camera2.legacy.LegacyRequest,long)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setPersistentVrThread(int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageAlpha(int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setOverrideScalingMode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: void setSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setLinkUpstreamBandwidthKbps(int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.DeliveryInd: void setDate(long)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$SoftKeyboardController: boolean setShowMode(int)> (ACCOUNT_SETTINGS)
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub$Proxy: void setListener(android.os.IVoldListener)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setProtocol(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.TestNetworkManager: void setupTestNetwork(android.net.LinkProperties,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: void lambda$sendCapabilityRequest$7$RcsFeature$RcsFeatureBinder(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setBackgroundResource(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setDisplaySurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean sendVendorAtCommand(android.bluetooth.BluetoothDevice,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.net.NetworkStatsHistory: void setValues(int,android.net.NetworkStatsHistory$Entry)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,boolean,java.lang.String,long,long)> (ACCOUNT_SETTINGS)
<android.app.Notification$InboxStyle: void <init>(android.app.Notification$Builder)> (ACCOUNT_SETTINGS)
<android.view.PointerIcon: int access$102(android.view.PointerIcon,int)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setWeight(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothDevice: boolean setPhonebookAccessPermission(int)> (ACCOUNT_SETTINGS)
<android.os.incremental.IIncrementalService$Stub$Proxy: boolean startLoading(int)> (ACCOUNT_SETTINGS)
<android.view.animation.AccelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.pm.IDataLoader$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsController: void onFrameChanged(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View: void setTranslationX(float)> (ACCOUNT_SETTINGS)
<android.view.View: void sendAccessibilityEvent(int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$4: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int,java.lang.String,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout$5: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int rgb(int,int,int)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setStartScrollBottom(boolean)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform$Builder setAuthentication(android.net.IpSecAlgorithm)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setRequestorPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFriction(float)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void setMainSession(android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.FloatingActionMode: void setOutsideTouchable(boolean,android.widget.PopupWindow$OnDismissListener)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IOns$Stub$Proxy: boolean setEnable(boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethod$Stub$Proxy: void startInput(android.os.IBinder,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$900(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$8: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothPbapClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void setAppBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsCallProfile: int presentationToOir(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.input.InputManager: void setCustomPointerIcon(android.view.PointerIcon)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: boolean sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setUnit(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.os.LocaleList: void setDefault(android.os.LocaleList)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: boolean deleteStoredMessage(java.lang.String,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$HighContrastTextManager: void <init>(android.view.ViewRootImpl)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$BaseFutureTask: void access$1000(android.accounts.AccountManager$BaseFutureTask,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setSubscriptionPlans(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int processEmm(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setInheritShowWhenLocked(boolean)> (ACCOUNT_SETTINGS)
<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void readFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: boolean setLeIoCapability(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.app.RemoteInput$Builder: android.app.RemoteInput$Builder setAllowFreeFormInput(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setCollapseIcon(int)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void setLeftHintText(int)> (ACCOUNT_SETTINGS)
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int checkUriPermission(java.lang.String,java.lang.String,android.net.Uri,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void sendKeyEvent(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String,java.lang.String[],boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setCallWaitingStatus(boolean)> (ACCOUNT_SETTINGS)
<android.app.Notification$BubbleMetadata$Builder: android.app.Notification$BubbleMetadata$Builder setSuppressNotification(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnDrmInfoListener(android.media.MediaPlayer$OnDrmInfoListener)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setConfiguredNetworksLockdownState(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int red(int)> (ACCOUNT_SETTINGS)
<android.hardware.input.InputManager: void setTouchCalibration(java.lang.String,int,android.hardware.input.TouchCalibration)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void onDrawableChanged(int,android.graphics.drawable.Drawable,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: boolean access$1800(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.params.TonemapCurve)> (ACCOUNT_SETTINGS)
<android.text.TextPaint: void set(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setPeriodicAdvertisingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo: android.content.Intent setIntentExtras(android.content.Intent,android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setLinkDownstreamBandwidthKbps(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setTime(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.media.RemoteControlClient: void setPlaybackState(int)> (ACCOUNT_SETTINGS)
<android.text.SpannedString: int nextSpanTransition(int,int,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.widget.FrameLayout: void setForegroundGravity(int)> (ACCOUNT_SETTINGS)
<android.transition.Fade: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.telecom.TelecomManager: void startConference(java.util.List,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void onItemCountChanged(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: boolean access$1500(android.hardware.camera2.impl.CameraMetadataNative,int[])> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setAcceptUnvalidated(android.net.Network,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadioForSubscriber(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setClipToOutline(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.ICameraService$Stub$Proxy: void setTorchMode(java.lang.String,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.IAppTask$Stub$Proxy: void setExcludeFromRecents(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.permission.PermissionControllerManager: void <init>(android.content.Context,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MoneyBuilder: android.text.style.TtsSpan$MoneyBuilder setFractionalPart(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$702(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void sim_state(java.util.List)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean updateIntentVerificationStatus(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setDeliveryReport(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: boolean setDefaultBrowserPackageNameAsUser(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setScrollBarStyle(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int minBandwidth(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiDeviceInfo: int idForMhlDevice(int)> (ACCOUNT_SETTINGS)
<android.net.StaticIpConfiguration: android.net.LinkProperties toLinkProperties(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgress(int)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Type typeFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setHomeAsUpIndicator(int)> (ACCOUNT_SETTINGS)
<com.android.server.NetworkManagementSocketTagger: int setThreadSocketStatsUid(int)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setVoiceRoaming(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing._$$Lambda$ParsingPackageImpl$RBt_Tka1DogaqXftDzlcrLHE70c: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.widget.Editor$EasyEditPopupWindow: void access$2000(android.widget.Editor$EasyEditPopupWindow,android.widget.Editor$EasyEditDeleteListener)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setDisplayLayerStack(android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$9: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: boolean setDynamicPowerSaveHint(boolean,int)> (ACCOUNT_SETTINGS)
<android.text.TextUtils$StringWithRemovedChars: void removeRange(int,int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.GenericPdu: void setMessageType(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkOperatorName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.SearchDialog: void setListSelection(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityTaskManager: void setDisplayToSingleTaskInstance(int)> (ACCOUNT_SETTINGS)
<android.app.NotificationHistory: int lambda$addNotificationsToWrite$0(android.app.NotificationHistory$HistoricalNotification,android.app.NotificationHistory$HistoricalNotification)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setScanResponseData(android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedPermissionUtils: android.content.pm.parsing.result.ParseResult parsePermission(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setNightDisplayAutoMode(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.os.Handler$MessengerImpl: void send(android.os.Message)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.text.PrecomputedText$Params: int access$300(android.text.PrecomputedText$Params)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setLeIoCapability(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setDefaultSmsApplication(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setDefaultGuestRestrictions(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$MagnificationController: boolean setScale(float,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setTestEmergencyPhoneAccountPackageNameFilter(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAutoRevokePermissions(int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)> (ACCOUNT_SETTINGS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$400(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void startSystemLockTaskMode(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$BaseFutureTask: void access$1100(android.accounts.AccountManager$BaseFutureTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform: void access$100(android.view.View)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.hardware.hdmi.HdmiDeviceInfo,java.lang.String,int,android.graphics.drawable.Icon)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setProcessStateSummary(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FastPrintWriter: void println(int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: void <init>(long,long,long)> (ACCOUNT_SETTINGS)
<android.view.View: void setPivotX(float)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void setOverrideConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.media.IPlayer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setKeyPairCertificate(android.content.ComponentName,java.lang.String,java.lang.String,byte[],byte[],boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setRingerModeExternal(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgressDrawableTiled(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchSetActivated(boolean)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void setSurface(android.os.IBinder,android.view.Surface,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextLocale(java.util.Locale)> (ACCOUNT_SETTINGS)
<android.view.View$9: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.app.Service: void onTaskRemoved(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.google.android.mms.util.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int access$1102(android.net.NetworkCapabilities,int)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void setClipRect(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DigitsBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyInfo)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void data_network_type(java.util.List)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$500(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: android.filterfw.core.SimpleFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiDeviceInfo: int idForCecDevice(int)> (ACCOUNT_SETTINGS)
<android.app.BackStackRecord: void setOnStartPostponedListener(android.app.Fragment$OnStartEnterTransitionListener)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IOns$Stub$Proxy: void updateAvailableNetworks(java.util.List,com.android.internal.telephony.IUpdateAvailableNetworksCallback,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioTrack: int setPresentation(android.media.AudioPresentation)> (ACCOUNT_SETTINGS)
<android.content.pm.LauncherApps: void startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String,int,android.os.RemoteCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Default: void sendStoredMultipartText(int,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setUserRestriction(int,boolean,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setMimeGroup(java.lang.String,java.util.Set)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputHardware$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int XYZToColor(double,double,double)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void replacePreferredActivityAsUser(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: void updateConfigForPhoneId(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.database.IContentObserver$Stub$Proxy: void onChangeEtc(boolean,android.net.Uri[],int,int)> (ACCOUNT_SETTINGS)
<android.app.LoadedApk$WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setWindow(int,long,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setEndUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int bytesToLEInt(byte[])> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setUidMode(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.lights.LightsManager$LightsSession: void requestLights(android.hardware.lights.LightsRequest)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void setTo(android.content.res.Configuration,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo: void setIntents(android.content.Intent[])> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbPort: void setRoles(int,int)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void setButtonDrawable(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriberWithOptions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void updateSessionAppLabel(int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.View: void setElevation(float)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setVolumeNickname(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice,int,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int resolveContrastColor(android.content.Context,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.CrossProfileApps: void startActivity(android.content.Intent,android.os.UserHandle,android.app.Activity)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataNetworkTypeForPhone(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$CardinalBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.service.notification.NotificationListenerService: android.os.IBinder onBind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setFontVariationSettings(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSize(int,float)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setVisibleRangeHint(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.location.IContextHubClient$Stub$Proxy: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)> (ACCOUNT_SETTINGS)
<android.hardware.ISensorPrivacyManager$Stub$Proxy: void setSensorPrivacy(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.IAdvertisingSetCallback)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionManager: void setCustomSessionPolicyProviderForTesting(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void onMovedToDisplay(int,android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSelectHandleLeft(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: void setColorMode(int)> (ACCOUNT_SETTINGS)
<android.view.Window: void setBackgroundDrawableResource(int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.view.View: void setRight(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)> (ACCOUNT_SETTINGS)
<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.net.TcpSocketKeepalive: void lambda$startImpl$0$TcpSocketKeepalive(int)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setRilVoiceRadioTechnology(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setLabelRes(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,boolean,java.lang.String,long,int,long)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean navigateUpTo(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,java.lang.String,long,java.lang.String,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager$DelegateImpl: void startInputAsyncOnWindowFocusGain(android.view.View,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: void startNetScan(java.util.Map,android.net.lowpan.ILowpanNetScanCallback)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$102(android.media.tv.TvInputHardwareInfo,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$CardinalBuilder: android.text.style.TtsSpan$CardinalBuilder setNumber(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setSelectedNavigationItem(int)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlayIsStatic(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleBackground$1: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(long,long,boolean,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.HashMap readMapXml(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setTransactionId(byte[])> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setOpportunisticNetworkState(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setMessageHyphenationFrequency(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor wrap(android.os.ParcelFileDescriptor,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceDown(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,java.lang.String,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setScrollBarStyle(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,android.os.BatteryStats$HistoryItem)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivityFromRecents(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$002(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.hardware.SensorManager: boolean setOperationParameter(android.hardware.SensorAdditionalInfo)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setNightDisplayActivated(boolean)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setIconTint(int,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)> (ACCOUNT_SETTINGS)
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.RequestThreadManager: void setAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.view.View: void setDrawingCacheQuality(int)> (ACCOUNT_SETTINGS)
<android.location.GnssClock: int access$002(android.location.GnssClock,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.face.FaceManager: void setFeature(int,int,boolean,byte[],android.hardware.face.FaceManager$SetFeatureCallback)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setDenominator(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.net.LinkProperties$1: android.net.LinkProperties createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setNetworkLoggingEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.os.ZygoteInit: void setHiddenApiAccessLogSampleRate(int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view._$$Lambda$FocusFinder$FocusSorter$h0f2ZYL6peSaaEeCCkAoYs_YZvU: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])> (ACCOUNT_SETTINGS)
<android.widget.TextView: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.android.internal.widget.ScrollingTabContainerView,android.content.Context)> (ACCOUNT_SETTINGS)
<android.media.audiopolicy.AudioPolicy: void setRegistration(java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setCarrierTestOverride(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View$3: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$5: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTint(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setCepEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void setInputType(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setMessageSize(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLayoutDirectionChanged(int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setKeyguardDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRequiredStrongAuthTimeout(android.content.ComponentName,long,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$SyntheticTouchNavigationHandler: int access$3000(android.view.ViewRootImpl$SyntheticTouchNavigationHandler)> (ACCOUNT_SETTINGS)
<android.app.Notification$MessagingStyle$Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: void set(android.net.NetworkCapabilities)> (ACCOUNT_SETTINGS)
<android.view.DisplayAdjustments: void <init>(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: int translateModeStringToPosix(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void setTransitioningViewsVisiblity(int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void startTimerRecording(int,int,android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$202(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setResizeableActivityViaSdkVersion(boolean)> (ACCOUNT_SETTINGS)
<android.content.om.OverlayManager: void setEnabled(java.lang.String,boolean,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: boolean setBackupPassword(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapterExtras$Stub$Proxy: void setCardEmulationRoute(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setRadioPower(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.input.IInputManager$Stub$Proxy: void setCustomPointerIcon(android.view.PointerIcon)> (ACCOUNT_SETTINGS)
<android.media.audiopolicy.AudioPolicy: boolean setUserIdDeviceAffinity(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.View: void setHorizontalScrollbarTrackDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int ensureLargeTextContrast(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSharedUserLabel(int)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: boolean setIoCapability(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$ViewRootHandler: boolean sendMessageAtTime(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void operator_is_roaming(java.util.List)> (ACCOUNT_SETTINGS)
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.AccessibilityReplacementSpan: void <init>(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraDeviceImpl: void updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$Static: void updateGlobalRoute(android.media.MediaRouter$RouteInfo,android.media.MediaRouterClientState$RouteInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRampDownDuration(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setLinkUpstreamBandwidthKbps(int)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$400(long)> (ACCOUNT_SETTINGS)
<android.app.admin.FreezePeriod: int distanceWithoutLeapYear(java.time.LocalDate,java.time.LocalDate)> (ACCOUNT_SETTINGS)
<android.content.pm.CrossProfileApps: void startActivity(android.content.ComponentName,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setAdvertisingData(android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setPeriodicAdvertisingEnable(int,boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.core.KeyValueMap: android.filterfw.core.KeyValueMap fromKeyValues(java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setRingerModeInternal(int)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void startRecording(android.os.IBinder,android.net.Uri,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setCellInfoListRate(int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CameraManager$CameraManagerGlobal: void setTorchMode(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethod$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageId(byte[])> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setTextColor(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean bindBackupAgent(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void setState(int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setCamera(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.provider._$$Lambda$FontsContract$3FDNQd_WsglsyDhif_aHVbzkfrA: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setDeliveryReport(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void applyTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setMultiAudioFocusEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: void startScanFromSource(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setExpiry(long)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setRttEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$VerbatimBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$400(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.os.ThreadLocalWorkSource: long setUid(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: java.util.List layoutMainPanelItems(java.util.List,int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void takeKeyEvents(boolean)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setSoTimeout(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: void setTemporaryAutoBrightnessAdjustment(float)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: void setAutoPersisting(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)> (ACCOUNT_SETTINGS)
<android.view.SyncRtSurfaceTransactionApplier: void applyParams(android.view.SurfaceControl$Transaction,android.view.SyncRtSurfaceTransactionApplier$SurfaceParams,float[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void access$1200(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setImsRegistrationState(boolean)> (ACCOUNT_SETTINGS)
<android.os.SystemUpdateManager: void updateSystemUpdateInfo(android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$OrdinalBuilder: android.text.style.TtsSpan$OrdinalBuilder setNumber(long)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setCallback(com.android.ims.internal.IImsVideoCallCallback)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: boolean scrollToRectOrFocus(android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSize(float)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setPromptId(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,java.lang.String[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothHidHost: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.util.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void updateTapExcludeRegion(android.view.IWindow,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int)> (ACCOUNT_SETTINGS)
<android.security.keystore.IKeystoreService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform$2: void set(android.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setStream(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions: android.app.ActivityOptions makeMultiThumbFutureAspectScaleAnimation(android.content.Context,android.os.Handler,android.view.IAppTransitionAnimationSpecsFuture,android.app.ActivityOptions$OnAnimationStartedListener,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer$OnMediaTimeDiscontinuityListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.AdvertisingSetCallback)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView$Drawables: void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setMeteringAreas(java.util.List)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.view.IRecentsAnimationController$Stub$Proxy: void setDeferCancelUntilNextTransition(boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.service.oemlock.IOemLockService$Stub$Proxy: void setOemUnlockAllowedByUser(boolean)> (ACCOUNT_SETTINGS)
<android.location.Location$2: android.location.Location createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setAutoMirrored(boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCallWaiting(boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setServerParams(byte[])> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.IMediaCasService$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManager: void setBrightnessConfiguration(android.hardware.display.BrightnessConfiguration)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int update(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.View$2: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub$Proxy: java.util.Map setParameters(java.util.Map)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.StandardMenuPopup: void setVerticalOffset(int)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setPosition(float,float)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommOn(int)> (ACCOUNT_SETTINGS)
<android.media.MediaCas$EventHandler: void handleMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionController$Stub$Proxy: void updateUserSensitiveForApp(int,com.android.internal.infra.AndroidFuture)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.os.BatterySaverPolicyConfig$Builder: int access$1800(android.os.BatterySaverPolicyConfig$Builder)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: int translateModeAccessToPosix(int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1400(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<com.android.internal.util.CollectionUtils: int size(java.util.Collection)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.ListFragment: void setSelection(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimOperatorName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$4: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: boolean setUnderlyingNetworksForVpn(android.net.Network[])> (ACCOUNT_SETTINGS)
<com.android.internal.os.Zygote: int forkSystemServer(int,int,int[],int,int[][],long,long)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyViewDisappeared(int,android.view.autofill.AutofillId)> (ACCOUNT_SETTINGS)
<android.filterfw.core.FieldPort: void pushFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<android.view.ActionMode$Callback2: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$102(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.AcknowledgeInd: void setReportAllowed(int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setDataAllowedDuringVoiceCall(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void updateTimePrefs(int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int diffPublicOnly(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.TaskStackBuilder: int startActivities(android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable$ChildDrawable: void <init>(android.graphics.drawable.AdaptiveIconDrawable$ChildDrawable,android.graphics.drawable.AdaptiveIconDrawable,android.content.res.Resources)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordQuality(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setTooltip(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegQuality(int)> (ACCOUNT_SETTINGS)
<android.telephony.CellSignalStrengthLte: void updateLevel(android.os.PersistableBundle,android.telephony.ServiceState)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.net.nsd.INsdManager$Stub$Proxy: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserIcon(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setUserRestrictionForUser(int,boolean,android.os.IBinder,java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void resumeNotedAppOpsCollection(android.app.AppOpsManager$PausedNotedAppOpsCollection)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void setSelectionInt(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.IRecentsAnimationController$Stub$Proxy: void setWillFinishToHome(boolean)> (ACCOUNT_SETTINGS)
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean startInstallation(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: boolean startViewServer(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setPermission(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int delete(android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setListSelection(int)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,android.content.pm.ProviderInfoList,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions,long[])> (ACCOUNT_SETTINGS)
<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState$Builder setState(int,long,float)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityManager: void access$400(android.view.accessibility.AccessibilityManager,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setUpdateAvailable(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setTrustUsuallyManaged(boolean,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub$Proxy: void setVirtualDisplayState(android.hardware.display.IVirtualDisplayCallback,boolean)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanInterface: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setNightDisplayCustomStartTime(android.hardware.display.Time)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)> (ACCOUNT_SETTINGS)
<android.os.ParcelableParcel: void <init>(android.os.Parcel,java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,java.lang.String,int,int,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)> (ACCOUNT_SETTINGS)
<android.view.View: void <init>(android.content.Context)> (ACCOUNT_SETTINGS)
<android.view.View: void setLayerType(int,android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.os.IRemoteCallback$Stub$Proxy: void sendResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int provision(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setWindowingMode(int,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraDeviceImpl: void setCameraAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setAdvertisingParameters(android.bluetooth.le.AdvertisingSetParameters)> (ACCOUNT_SETTINGS)
<android.view.View: void invalidateInternal(int,int,int,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoStream: int convertObjectIdToOrdinal(int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Default: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LevelListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onExtractedSetSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Permission: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setAdvancedCallingSettingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void setListener(android.telephony.ims.aidl.IImsCallSessionListener)> (ACCOUNT_SETTINGS)
<android.content.pm.LauncherApps: void startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.media.IRingtonePlayer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$2402(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setPersistentVrThread(int)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setBackupServiceActive(int,boolean)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoOutputStream: long startRepeatedObject(long)> (ACCOUNT_SETTINGS)
<android.nfc.cardemulation.CardEmulation: boolean setOffHostForService(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: int bulkInsert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startAssistantActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)> (ACCOUNT_SETTINGS)
<android.net.wifi.nl80211.PnoSettings: int access$302(android.net.wifi.nl80211.PnoSettings,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderTitle(int)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,int,long,long)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiControlManager: void access$200(android.hardware.hdmi.HdmiControlManager,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRealPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int sendEvent(int,int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingActive(int[],android.app.AppOpsManager$OnOpActiveChangedListener)> (ACCOUNT_SETTINGS)
<android.nfc.tech.IsoDep: void setTimeout(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setLabelFor(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setLocationEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void setLocales(android.os.LocaleList)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$702(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setForceQueryable(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setScaleY(float)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsMultiEndpoint$Stub$Proxy: void setListener(com.android.ims.internal.IImsExternalCallStateListener)> (ACCOUNT_SETTINGS)
<android.hardware.radio.TunerAdapter: void setConfigFlag(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter: void updateMenuView(boolean)> (ACCOUNT_SETTINGS)
<android.nfc.cardemulation.CardEmulation: boolean setDefaultServiceForCategory(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.PlayerProxy: void setVolume(float)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setTitleResId(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateCursor(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void setCaptionEnabled(android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setTestDefaultCallScreeningApp(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.os.ZygoteConnection: void lambda$handleHiddenApiAccessLogSampleRate$1(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setDeviceOwner(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void setInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice,int,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int unsignedIntToBytes(int,byte[],int)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void access$200(android.view.SurfaceView,android.graphics.Rect,long)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform: void startNattKeepalive(android.net.IpSecTransform$NattKeepaliveCallback,int,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.content.LoggingContentInterface: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$6: void setValue(java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: void setFocused(boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setSubtitle(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedPermission: void <init>(android.content.pm.parsing.component.ParsedPermission,android.content.pm.PermissionInfo,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.IAlarmManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView$Marquee: int access$900(android.widget.TextView$Marquee)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1500(long)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,java.lang.String,int,java.lang.String,int,boolean,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.view.InputWindowHandle: void replaceTouchableRegionWithCrop(android.view.SurfaceControl)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$InputConnectionWrapper: boolean setComposingRegion(int,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setHarmfulAppWarning(java.lang.String,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.location.ILocationManager$Stub$Proxy: void setExtraLocationControllerPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setInterruptionFilter(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupManager: void updateTransportAttributes(android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: int update(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$502(android.media.AudioAttributes,int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void operator_iso_country(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.SharedPreferencesImpl: int access$300(android.app.SharedPreferencesImpl)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedStateListDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setGpsLongitude(double)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String,boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setQueue(android.content.pm.ParceledListSlice)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.view.textclassifier._$$Lambda$EntityConfidence$YPh8hwgSYYK8OyQ1kFlQngc71Q0: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUsesNonSdkApi(boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1200(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int lambda$setOpportunistic$6$SubscriptionManager(boolean,int,com.android.internal.telephony.ISub)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapterExtras$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState: void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$BufferMap: void put(int,android.media.Image)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setKillAfterRestore(boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnDrmPreparedListener(android.media.MediaPlayer$OnDrmPreparedListener)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int unpackRangeEndFromLong(long)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setInputMethodMode(int)> (ACCOUNT_SETTINGS)
<android.app.Notification$BubbleMetadata$Builder: android.app.Notification$BubbleMetadata$Builder setAutoExpandBubble(boolean)> (ACCOUNT_SETTINGS)
<android.os.storage.IStorageManager$Stub$Proxy: void setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setNavigationMode(int)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)> (ACCOUNT_SETTINGS)
<android.view.Surface$HwuiContext: void <init>(android.view.Surface,boolean)> (ACCOUNT_SETTINGS)
<android.app.usage.IUsageStatsManager$Stub$Proxy: void setAppStandbyBuckets(android.content.pm.ParceledListSlice,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: void setColorMode(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.PlayerProxy: void setStartDelayMs(int)> (ACCOUNT_SETTINGS)
<android.media.Utils: int binarySearchDistinctRanges(android.util.Range[],java.lang.Comparable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int processEcm(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$602(android.media.tv.TvInputHardwareInfo,int)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec$MediaImage: void setCropRect(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller$Session: void commit(android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$800(long,int)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: boolean requestQuietModeEnabled(java.lang.String,boolean,int,android.content.IntentSender,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void access$600(android.view.ViewRootImpl,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,boolean,int,boolean,int,long,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void uninstallExistingPackage(android.content.pm.VersionedPackage,java.lang.String,android.content.IntentSender,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setFeatureDrawableUri(int,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.NotificationHistory$HistoricalNotification: int access$402(android.app.NotificationHistory$HistoricalNotification,int)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void setTo(android.app.WindowConfiguration,int)> (ACCOUNT_SETTINGS)
<android.content.LoggingContentInterface: int delete(android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setVoicemailRingtoneUri(android.telecom.PhoneAccountHandle,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.media.AudioRecord$Builder: android.media.AudioRecord$Builder setAudioSource(int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)> (ACCOUNT_SETTINGS)
<android.location.GnssMeasurement: int access$002(android.location.GnssMeasurement,int)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setFocusAreas(java.util.List)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeoutLocked(long)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setRequestedOrientation(android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.PackageInfoWithoutStateUtils: int appInfoPrivateFlags(android.content.pm.parsing.ParsingPackageRead)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setRttCapabilitySetting(int,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebViewRenderProcessClient(java.util.concurrent.Executor,android.webkit.WebViewRenderProcessClient)> (ACCOUNT_SETTINGS)
<android.net.INetworkScoreService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataActivationState(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiverWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TextBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setOval(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setItalic(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setLogo(int)> (ACCOUNT_SETTINGS)
<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setBubblesAllowed(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setStartUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.image.DynamicSystemManager: boolean startInstallation(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int rgb(float,float,float)> (ACCOUNT_SETTINGS)
<android.os.BinderProxy$ProxyMap: int access$300(android.os.BinderProxy$ProxyMap)> (ACCOUNT_SETTINGS)
<android.app.IAppTask$Default: int startActivity(android.os.IBinder,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes,int)> (ACCOUNT_SETTINGS)
<android.os.Process: void waitForProcessDeath(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSplitHasCode(int,boolean)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenModeConfig: android.service.notification.ScheduleCalendar toScheduleCalendar(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void setAppBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setError(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,long)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void sendRttMessage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: void <init>(java.lang.String,java.lang.String,java.lang.String,android.content.res.TypedArray)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar$OnNavigationListener)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfosResult(java.util.List,int)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub$Proxy: void setConfiguration(android.hardware.radio.RadioManager$BandConfig)> (ACCOUNT_SETTINGS)
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setSurfaceFormat(int)> (ACCOUNT_SETTINGS)
<android.media.PlayerBase$IPlayerWrapper: void setVolume(float)> (ACCOUNT_SETTINGS)
<android.view.ViewDebug: void setLayoutParameter(android.view.View,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.Activity: void access$700(android.app.Activity,android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setLockScreenShown(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub$Proxy: void installExistingPackage(java.lang.String,int,int,android.content.IntentSender,int,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.view.InputConnectionWrapper: boolean setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.view.ViewStub: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.widget.ToastPresenter: void trySendAccessibilityEvent(android.view.View,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setHomeActionContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller: void setFinalY(int)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void access$600(android.inputmethodservice.InputMethodService,int,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setAccessibilityTraversalAfter(int,int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)> (ACCOUNT_SETTINGS)
<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: void startRecognition(int,android.media.soundtrigger_middleware.RecognitionConfig)> (ACCOUNT_SETTINGS)
<android.gsi.GsiProgress: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)> (ACCOUNT_SETTINGS)
<android.provider.DeviceConfig: boolean setProperties(android.provider.DeviceConfig$Properties)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setPauseImage(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget$SpanLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle,float)> (ACCOUNT_SETTINGS)
<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub$Proxy: void setConfigFlag(int,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVoWiFiNonPersistent(boolean,int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setAllowedCapturePolicy(int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivityAsCaller(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.IBinder,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.VrManager: void setAndBindVrCompositor(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setAppSaturationLevel(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setGroupSummary(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$200(long)> (ACCOUNT_SETTINGS)
<android.transition.Slide: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: boolean startLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void startWatchingModeWithFlags(int,java.lang.String,int,com.android.internal.app.IAppOpsCallback)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$3: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void <init>(android.content.Context,int,com.android.internal.policy.PhoneWindow,android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimState(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int findContrastColorAgainstDark(int,int,boolean,double)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void setProgress(int,boolean)> (ACCOUNT_SETTINGS)
<android.media.PlayerProxy: void setPan(float)> (ACCOUNT_SETTINGS)
<android.net.ITetheringStatsProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setOrganizationColor(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void updatePointerIcon(android.view.IWindow)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.RecognitionConfig: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig createWithExplicitEntityList(java.util.Collection)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setDataRoamingType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IOns$Stub$Proxy: void setPreferredDataSubscriptionId(int,boolean,com.android.internal.telephony.ISetOpportunisticDataCallback,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setVolumeController(android.media.IVolumeController)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager$AppTask: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuPopupHelper: void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void unflatten(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionManager: void setOnMediaKeyListener(android.media.session.MediaSessionManager$OnMediaKeyListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void start(java.lang.String,android.telephony.ims.ImsCallProfile)> (ACCOUNT_SETTINGS)
<android.content.integrity.IAppIntegrityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void startManagedQuickContact(java.lang.String,long,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCallForward(int,int,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void updateProcessState(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity$1: void updateNavigationBarColor(int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int,int)> (ACCOUNT_SETTINGS)
<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setResolution(android.print.PrintAttributes$Resolution)> (ACCOUNT_SETTINGS)
<android.os.Process: android.os.Process$ProcessStartResult startWebView(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long[],java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setLowpanIdentity(android.net.lowpan.LowpanIdentity)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserAdmin(int)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void setLogRecSize(int)> (ACCOUNT_SETTINGS)
<android.hardware.location.IContextHubService$Stub$Proxy: int sendMessage(int,int,android.hardware.location.ContextHubMessage)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void access$100(android.widget.AbsListView,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void sendStandby(int,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setRatingType(int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.telephony.PhoneNumberUtils: void addTtsSpan(android.text.Spannable,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setTitle(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: void setPaddingMode(int)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputManager: void setParentalControlsEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setMatrix(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget: void access$200(android.media.WebVttRenderingWidget,android.view.accessibility.CaptioningManager$CaptionStyle,float)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager$HistoricalOpsRequest: int access$6000(android.app.AppOpsManager$HistoricalOpsRequest)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothA2dpSink: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setAccessibilitySelection(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void sendNotification(int,java.lang.String,int,boolean,byte[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)> (ACCOUNT_SETTINGS)
<android.print.IPrintManager$Stub$Proxy: void setPrintServiceEnabled(android.content.ComponentName,boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setSeparateProfileChallengeEnabled(int,boolean,com.android.internal.widget.LockscreenCredential)> (ACCOUNT_SETTINGS)
<android.content.pm._$$Lambda$PackageParser$0DZRgzfgaIMpCOhJqjw6PUiU5vw: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.animation.RenderNodeAnimator: android.animation.Animator setDuration(long)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMicrophoneMuteFromSwitch(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setLayerPaint(android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setPort(int)> (ACCOUNT_SETTINGS)
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: void updateRuleSet(java.lang.String,android.content.pm.ParceledListSlice,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$5: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,int)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setViewVisibility(int,int)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setHintShowBackgroundOnly(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TimeBuilder: android.text.style.TtsSpan$TimeBuilder setHours(int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void broadcastStickyIntent(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.os.StrictMode$AndroidBlockGuardPolicy: void onCustomSlowCall(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: void <init>(android.content.Context,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setDisplayOffset(android.os.IBinder,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StatLogger: void dump(java.io.PrintWriter,java.lang.String)> (ACCOUNT_SETTINGS)
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)> (ACCOUNT_SETTINGS)
<android.content.integrity.IAppIntegrityManager$Default: void updateRuleSet(java.lang.String,android.content.pm.ParceledListSlice,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTypeface(android.graphics.Typeface)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setLocusContext(android.content.LocusId,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager$CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager$AuthenticationCallback,android.os.Handler,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: int access$100(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setPolicyDataEnabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.role.IRoleManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setSingleLine(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleBackground: void draw(android.graphics.Canvas,android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.app.Fragment)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface: android.graphics.Typeface createFromResources(android.content.res.FontResourcesParser$FamilyResourceEntry,android.content.res.AssetManager,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserAccount(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setSubscriptionPlans(int,android.telephony.SubscriptionPlan[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$700(long)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void startTethering(int,boolean,android.net.ConnectivityManager$OnStartTetheringCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.view.InsetsController: void setSystemBarsAppearance(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setAgentApp(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void onVisibilityAggregated(boolean)> (ACCOUNT_SETTINGS)
<android.os.ResultReceiver: void send(int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.Choreographer: void setFPSDivisor(int)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$202(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setClipToPadding(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.ImageDecoder: android.graphics.ImageDecoder setAsAlphaMask(boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: boolean access$701(android.webkit.WebView,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void setEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.storage.CrateMetadata: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.WrapperInit: void main(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$1: android.net.NetworkCapabilities createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSplitClassLoaderName(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUseEmbeddedDex(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiAudioSystemClient: int access$100(android.hardware.hdmi.HdmiAudioSystemClient)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)> (ACCOUNT_SETTINGS)
<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivity(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyCameraDevice: void setAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.content.Context: void sendBroadcastWithMultiplePermissions(android.content.Intent,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$OrdinalBuilder: void <init>(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.SoundTriggerModuleProperties: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Context createConfigurationContext(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void startSession(android.os.IBinder,android.os.IBinder,android.view.autofill.AutofillId,android.graphics.Rect,android.view.autofill.AutofillValue,int,boolean,int,android.content.ComponentName,boolean,com.android.internal.os.IResultReceiver)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController$TransportControls: void sendCustomAction(android.media.session.PlaybackState$CustomAction,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: int cursorPickFillWindowStartPosition(int,int)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession$CallbackStub: void onMediaButtonFromController(java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Default: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.content.IContentService$Stub$Proxy: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.Notification: void <init>(android.content.Context,int,java.lang.CharSequence,long,java.lang.CharSequence,java.lang.CharSequence,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.provider.BrowserContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> (ACCOUNT_SETTINGS)
<android.media.projection.IMediaProjection$Stub$Proxy: void start(android.media.projection.IMediaProjectionCallback)> (ACCOUNT_SETTINGS)
<android.net.CaptivePortalData$Builder: void <init>(android.net.CaptivePortalData)> (ACCOUNT_SETTINGS)
<android.widget.MenuPopupWindow: void setExitTransition(android.transition.Transition)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void sendMessage(int,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void postCompose(android.view.animation.Transformation)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void setSelection(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: void setPictureInPicture(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setState(int)> (ACCOUNT_SETTINGS)
<android.graphics.Outline: void <init>(android.graphics.Outline)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: java.util.List setMeteredDataDisabledPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setPerformAccessibilityActionResult(boolean,int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserIcon(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.timedetector.TelephonyTimeSuggestion$Builder: int access$100(android.app.timedetector.TelephonyTimeSuggestion$Builder)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setNumerator(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setLogo(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayAutoMode(int)> (ACCOUNT_SETTINGS)
<android.media.RemoteControlClient: void setTransportControlFlags(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setBaseRevisionCode(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoicemailRingtoneUri(java.lang.String,android.telecom.PhoneAccountHandle,android.net.Uri)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub$Proxy: void setMuted(boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setIntegerPart(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void setSourceVisible(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setContentView(android.view.View)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedIntentInfoUtils: android.content.pm.parsing.result.ParseResult parseIntentInfo(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void initialize(java.lang.CharSequence,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void setNetworkBlockSeq(long)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setTextResId(int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setNavigationIcon(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setSaturationLevel(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget$RegionLayout: void <init>(android.content.Context,android.media.TextTrackRegion,android.view.accessibility.CaptioningManager$CaptionStyle,float)> (ACCOUNT_SETTINGS)
<android.view.Surface: void copyFrom(android.view.SurfaceControl)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$HighContrastTextManager: void onHighTextContrastStateChanged(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setDefaultSmsApplication(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int gsmBcdByteToInt(byte)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setUserIsMonkey(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.util.Rational: int gcd(int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setRenderThread(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setTheme(int)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller: void startScroll(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.provider.SyncStateContract$Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorContext: void <init>(android.content.Context,com.android.internal.policy.PhoneWindow)> (ACCOUNT_SETTINGS)
<android.transition.Slide: void <init>(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean requestPinAppWidget(java.lang.String,android.content.ComponentName,android.os.Bundle,android.content.IntentSender)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanBeaconInfo$Builder: android.net.lowpan.LowpanBeaconInfo$Builder setXpanid(byte[])> (ACCOUNT_SETTINGS)
<android.content.Intent: void setSelector(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$2: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: void setGenericObjectValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setCdmaRoamingMode(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager$AppTask: void setExcludeFromRecents(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void setPremiumSmsPermission(java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadRecInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: int updateFrom(android.app.WindowConfiguration)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setIoCapability(int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void icc_operator_numeric(java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.nfc.INfcFCardEmulation$Stub$Proxy: boolean setNfcid2ForService(int,android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: boolean sendReport(android.bluetooth.BluetoothDevice,int,byte[])> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void access$1201(android.webkit.WebView,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceType(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub$Proxy: void setScreenMatrix(float[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView$OnDismissListener)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setVolumeSnoozed(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControlViewHost: void relayout(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec: void setCallback(android.media.MediaCodec$Callback)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int processEcm(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void setConfiguration(android.content.res.Configuration,android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.SmsApplication: void setDefaultApplicationAsUser(java.lang.String,android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: void setDisplayPadding(android.graphics.Rect,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform$Builder setEncryption(android.net.IpSecAlgorithm)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionManager: void setOnVolumeKeyLongPressListener(android.media.session.MediaSessionManager$OnVolumeKeyLongPressListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setSnapshotCreatedPendingIntent(android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.content.pm.PermissionInfo: int fixProtectionLevel(int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(int,int,java.lang.String,boolean,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setNumber(long)> (ACCOUNT_SETTINGS)
<android.text.style.URLSpan: void onClick(android.view.View)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources$ChannelIdentifier: int access$400(android.hardware.hdmi.HdmiRecordSources$ChannelIdentifier,byte[],int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int setAlphaComponent(int,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void startTetheringWithConfiguration(boolean,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setMicrophoneMute(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,java.lang.String,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.view.InputDevice: void setPointerType(int)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)> (ACCOUNT_SETTINGS)
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setPipVisibility(boolean)> (ACCOUNT_SETTINGS)
<android.util.proto.ProtoOutputStream: long startObject(long)> (ACCOUNT_SETTINGS)
<android.app.Notification$BigPictureStyle: void <init>(android.app.Notification$Builder)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityManager: void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)> (ACCOUNT_SETTINGS)
<android.media.IVolumeController$Stub$Proxy: void setLayoutDirection(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: boolean updateLocalSystemUiVisibility(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setSimAccessPermission(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$4: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<com.android.internal.util.CollectionUtils: int size(java.util.Map)> (ACCOUNT_SETTINGS)
<android.view.View: void setVerticalScrollbarThumbDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData: void <init>(android.widget.RemoteViews,long)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setInheritShowWhenLocked(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void setLeftTopRightBottom(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void sendUssd(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Default: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DateBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)> (ACCOUNT_SETTINGS)
<com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionState: boolean startExitBackTransition(android.app.Activity)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$VolumeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$600(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void cdma_msg_id(java.lang.Integer)> (ACCOUNT_SETTINGS)
<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources$AribData: int toByteArray(byte[],int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,long,int,int)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenModeConfig: boolean isToday(long)> (ACCOUNT_SETTINGS)
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)> (ACCOUNT_SETTINGS)
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller$6: void setValue(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.transition.Slide: void setSlideEdge(int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.print.PrinterCapabilitiesInfo: int access$600(android.print.PrinterCapabilitiesInfo)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setSubtitle(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startAssistantActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCallBarringWithPassword(int,int,java.lang.String[],int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputManager$Hardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)> (ACCOUNT_SETTINGS)
<android.app.PropertyInvalidatedCache: void corkInvalidations(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)> (ACCOUNT_SETTINGS)
<android.view.WindowlessWindowManager: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setGlobalAlert(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void access$800(android.app.Activity,android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes: int access$100(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void startSystemLockTaskMode(int)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillManager: void access$1600(android.view.autofill.AutofillManager,int,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setWindowFrame(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1300(long)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: void <init>(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller$SessionParams: void setAllowDowngrade(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setSoftInputMode(int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$ElectronicBuilder: android.text.style.TtsSpan$ElectronicBuilder setEmailArguments(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVoWiFiRoamingModeSetting(int)> (ACCOUNT_SETTINGS)
<android.app.UiAutomation: int access$102(android.app.UiAutomation,int)> (ACCOUNT_SETTINGS)
<android.view.InputDevice: void setCustomPointerIcon(android.view.PointerIcon)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void setAirplaneMode(boolean)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: void setFloatValues(float[])> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent,boolean)> (ACCOUNT_SETTINGS)
<android.animation.AnimatorSet: void setTarget(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.security.keystore.recovery.KeyChainSnapshot: int access$102(android.security.keystore.recovery.KeyChainSnapshot,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void setSchedulingGroup(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$SetEmptyView: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setTime(long)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void addPreferredActivityAsUser(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,java.lang.String,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.IRecentsAnimationController$Stub$Proxy: void setInputConsumerEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: boolean updateIntentVerificationStatusAsUser(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallUidRules(int,int[],int[])> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void baseband_version(java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkScoreManager: boolean updateScores(android.net.ScoredNetwork[])> (ACCOUNT_SETTINGS)
<android.app.Activity: void setDisablePreviewScreenshots(boolean)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationPolicy(java.lang.String,android.app.NotificationManager$Policy)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessage(int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setWallpaperDisplayOffset(android.os.IBinder,int,int)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setDataAllowedDuringVoiceCall(boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadOrigInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$InternalPopupWindow: void lambda$doDraw$0$Magnifier$InternalPopupWindow(boolean,int,int,boolean,long)> (ACCOUNT_SETTINGS)
<android.media.AudioPlaybackCaptureConfiguration: android.media.audiopolicy.AudioMix createAudioMix(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.CursorAnchorInfo$Builder: int access$500(android.view.inputmethod.CursorAnchorInfo$Builder)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.media.audiopolicy.AudioPolicyConfig: void add(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setBackgroundColor(int)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSVToColor(int,float[])> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCrossProfilePackages(android.content.ComponentName,java.util.Set)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCursorPosition_internal(int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setVoWiFiModeSetting(int,int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCallBarringForServiceClass(int,int,java.lang.String[],int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setVolumeUuid(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int resetScreenLayout(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void startAnimation(android.view.animation.Animation,android.view.animation.Animation)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setDataActivationState(int,int)> (ACCOUNT_SETTINGS)
<android.net.INetworkScoreService$Stub$Proxy: boolean setActiveScorer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger.SoundTriggerManager: int startRecognition(java.util.UUID,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)> (ACCOUNT_SETTINGS)
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)> (ACCOUNT_SETTINGS)
<android.app.DisabledWallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setPrivateNotificationsAllowed(boolean)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int access$000(android.database.sqlite.SQLiteDatabase$OpenParams)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setIcon(int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager$CapabilityCallback$CapabilityBinder: void access$000(android.telephony.ims.ImsMmTelManager$CapabilityCallback$CapabilityBinder,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Stub$Proxy: void onMediaButton(java.lang.String,int,int,android.content.Intent,int,android.os.ResultReceiver)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setClipBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.view.View: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$VerbatimBuilder: android.text.style.TtsSpan$VerbatimBuilder setVerbatim(java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$3: void set(android.transition.ChangeBounds$ViewBounds,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.app.Activity$HostCallbacks: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.os.Zygote: int forkAndSpecialize(int,int,int[],int,int[][],int,java.lang.String,java.lang.String,int[],int[],boolean,java.lang.String,java.lang.String,boolean,java.lang.String[],java.lang.String[],boolean,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowBackup(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)> (ACCOUNT_SETTINGS)
<android.app.LoadedApk$WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorDrawable: void <init>(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothMap$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setContentView(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastAsUserMultiplePermissions(android.content.Intent,android.os.UserHandle,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: void setSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.media.tv.tunerresourcemanager.TunerResourceManager: void setFrontendInfoList(android.media.tv.tunerresourcemanager.TunerFrontendInfo[])> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setInputMethod(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TimeBuilder: android.text.style.TtsSpan$TimeBuilder setMinutes(int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceAlert(java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.text.Selection: void selectAll(android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.app.NotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setOverScrollMode(int)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$1402(android.bluetooth.BluetoothGatt,int)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ListMenuItemView: void setChecked(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setCollapseContentDescription(int)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void <init>(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager$TaskDescription: void restoreFromXml(org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiControlManager: void setHdmiCecVolumeControlEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setTintList(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingStarted(int[],android.app.AppOpsManager$OnOpStartedListener)> (ACCOUNT_SETTINGS)
<android.view.View$SendViewScrolledAccessibilityEvent: void updateWithAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void setShadowLayer(float,float,float,int)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setLockTaskFeatures(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setAdvancedCallingSettingEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ParseUtils: int parseIntWithBase(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$Builder: int access$1300(android.text.DynamicLayout$Builder)> (ACCOUNT_SETTINGS)
<android.telecom.TelecomManager: boolean setDefaultDialer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub$Proxy: void startProgramListUpdates(android.hardware.radio.ProgramList$Filter)> (ACCOUNT_SETTINGS)
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void <init>(android.util.MergedConfiguration)> (ACCOUNT_SETTINGS)
<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean startUserInBackground(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,long,long,long,long,long,long,long,long,long,int,long,int,int,long,long)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void addUserRestriction(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setDisplaySurface(android.os.IBinder,android.view.Surface)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: int access$1500(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: void setHotspotBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void setP2pModes(int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int setIccLockEnabled(int,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$SemioticClassBuilder: android.text.style.TtsSpan$SemioticClassBuilder setGender(java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.ActivityInfo: int activityInfoConfigNativeToJava(int)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAffiliationIds(android.content.ComponentName,java.util.Set)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setMagnificationCallbackEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.security.NetworkSecurityPolicy: void setCleartextTrafficPermitted(boolean)> (ACCOUNT_SETTINGS)
<android.os.ZygoteProcess: android.os.ChildZygoteProcess startChildZygote(java.lang.String,java.lang.String,int,int,int[],int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setNumberParts(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setTitle(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void updateWakeLockUids(android.os.IBinder,int[])> (ACCOUNT_SETTINGS)
<android.telecom.Log: void setSessionContext(android.content.Context)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DropdownPopup: void show(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setKeepUninstalledPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.ExitTransitionCoordinator: void lambda$startSharedElementExit$0$ExitTransitionCoordinator(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask: void set(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiControlManager: void setStandbyMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setUidMode(int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setProfileableByShell(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVoWiFiModeSetting(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setSurfaceType(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupManager: void setBackupEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSupportsRtl(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec: int dequeueInputBuffer(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: int convertValueToUnsignedInt(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setDisplayWhiteBalanceEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder removeCapability(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.params.StreamConfigurationMap: int checkArgumentFormatInternal(int)> (ACCOUNT_SETTINGS)
<android.os.storage.StorageManager: void setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setOwnerUid(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMultiAudioFocusEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.DisplayAdjustments: void setConfiguration(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.app.Notification$MediaStyle: void <init>(android.app.Notification$Builder)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider$Transport: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoSplitCodePaths(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.BROADCAST_STICKY (ACCOUNT_SETTINGS)
<android.util.MathUtils: int constrain(int,int,int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$600(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: int enableSystemApp(android.content.ComponentName,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: void setImeWindowStatus(int,int)> (ACCOUNT_SETTINGS)
<android.app.IAppTask$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setNumber(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void updateLocationInParentDisplay(int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void access$100(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAllowClearUserData(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean showContextMenu(float,float)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.os.ZygoteInit: void setHiddenApiUsageLogger(dalvik.system.VMRuntime$HiddenApiUsageLogger)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$SemioticClassBuilder: android.text.style.TtsSpan$SemioticClassBuilder setCase(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.incremental.StorageHealthCheckParams: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallChainEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextCursorDrawable(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setUserRestriction(int,boolean,android.os.IBinder,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void updateSubscriptionNickname(int,int,java.lang.String,java.lang.String,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$6: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.app._$$Lambda$WallpaperColors$MQFGJ9EZ9CDeGbIhMufJKqru3IE: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setRatingType(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCommonCriteriaModeEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.ConfidenceLevel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.FileSystemControlParcel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIconVisibility(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.os.IInstalld$Stub$Proxy: void setAppQuota(java.lang.String,int,int,long)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean,java.util.Set)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$1102(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void setBindAppWidgetPermission(java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$1200(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void setCheckMarkTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> (ACCOUNT_SETTINGS)
<android.os.IIncidentCompanion$Stub$Proxy: void sendReportReadyBroadcast(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.provider.FontsContract: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,android.provider.FontsContract$FontInfo[])> (ACCOUNT_SETTINGS)
<android.text.Selection: void setSelection(android.text.Spannable,int,int)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: void sendCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)> (ACCOUNT_SETTINGS)
<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String[],boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.euicc.EuiccCardManager: void setDefaultSmdpAddress(java.lang.String,java.lang.String,java.util.concurrent.Executor,android.telephony.euicc.EuiccCardManager$ResultCallback)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setIconRes(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])> (ACCOUNT_SETTINGS)
<android.os.Debug: void setFieldsOn(java.lang.Class)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])> (ACCOUNT_SETTINGS)
<android.util.TimeUtils: java.lang.String logTimeOfDay(long)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int lambda$setDisplayNumber$4(java.lang.String,int,com.android.internal.telephony.ISub)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setZenMode(int,android.net.Uri,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTurnScreenOn(boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub$Proxy: boolean setNfcSecure(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.AbsoluteLayout: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.CrossProfileApps: void startActivity(android.content.Intent,android.os.UserHandle,android.app.Activity,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setKeepScreenOn(boolean)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: int access$2000(android.app.job.JobInfo$Builder)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)> (ACCOUNT_SETTINGS)
<android.app.EnterTransitionCoordinator: void <init>(android.app.Activity,android.os.ResultReceiver,java.util.ArrayList,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaCas: int access$400(android.media.MediaCas)> (ACCOUNT_SETTINGS)
<android.content.res.ResourcesImpl: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,int[])> (ACCOUNT_SETTINGS)
<android.net.NetworkStats: void apply464xlatAdjustments(android.net.NetworkStats,android.net.NetworkStats,java.util.Map)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabledForUser(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.IAlarmManager$Stub$Proxy: boolean setTime(long)> (ACCOUNT_SETTINGS)
<android.widget.Editor$HandleView: void onSizeChanged(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void setSourceVisible(int,android.view.InsetsState)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: void setInAmbientMode(boolean,long)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setOnSubtitleDataListener(android.media.MediaPlayer$OnSubtitleDataListener)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void setupSetterAndGetter(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.os.VibrationAttributes: int access$100(android.os.VibrationAttributes)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean startUserInForegroundWithListener(int,android.os.IProgressListener)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: void onRemoteViewsLoaded(android.widget.RemoteViews,android.widget.RemoteViews$OnClickHandler,boolean)> (ACCOUNT_SETTINGS)
<android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setInputMethodMode(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: void setDither(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void startScan(int,android.bluetooth.le.ScanSettings,java.util.List,java.util.List,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,android.content.pm.ProviderInfoList,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions,long[])> (ACCOUNT_SETTINGS)
<android.view.contentcapture.MainContentCaptureSession: void notifyChildSessionFinished(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.StandardMenuPopup: void setHorizontalOffset(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSingleUid(int)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)> (ACCOUNT_SETTINGS)
<android.content.IntentFilter: void <init>(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setResetPasswordToken(android.content.ComponentName,byte[])> (ACCOUNT_SETTINGS)
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.Activity: void access$600(android.app.Activity,android.app.Fragment,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.media.tv.ITvInputManager$Stub$Proxy: void setParentalControlsEnabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setStatusBarDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: int access$702(android.view.SurfaceControl,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ImageUtils: int calculateSampleSize(android.util.Size,android.util.Size)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorDrawable: void setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.view.WindowInsets: void access$800(android.graphics.Insets[],int,android.graphics.Insets)> (ACCOUNT_SETTINGS)
<android.net.NetworkPolicyManager: void setSubscriptionPlans(int,android.telephony.SubscriptionPlan[],java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int diff(android.content.res.Configuration,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)> (ACCOUNT_SETTINGS)
<android.database.AbstractCursor: void setNotificationUris(android.content.ContentResolver,java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setFilters(android.text.InputFilter[])> (ACCOUNT_SETTINGS)
<android.widget.Editor: void onDrop(android.view.DragEvent)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setLetterSpacing(float)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void startIntentSender(android.content.IntentSender,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.Editor$PinnedPopupWindow: void updatePosition(int,int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: boolean startUserInBackgroundWithListener(int,android.os.IProgressListener)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int HSLToColor(float[])> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController: void setMessageMovementMethod(android.text.method.MovementMethod)> (ACCOUNT_SETTINGS)
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setBackupInForeground(boolean)> (ACCOUNT_SETTINGS)
<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)> android.permission.CAMERA android.permission.RECORD_AUDIO (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setActive(boolean)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void current_active_phone(java.util.List)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ClipData: void setItemAt(int,android.content.ClipData$Item)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.os.FileUtils: int translateModePosixToPfd(int)> (ACCOUNT_SETTINGS)
<android.view.View$9: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.app.JobSchedulerImpl: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> (ACCOUNT_SETTINGS)
<android.service.oemlock.OemLockManager: void setOemUnlockAllowedByCarrier(boolean,byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IDataLoaderManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPersonalAppsSuspended(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.GridView: void setAdapter(android.widget.Adapter)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: void setSaveUiState(int,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.euicc.EuiccCardManager: void setNickname(java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.Executor,android.telephony.euicc.EuiccCardManager$ResultCallback)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCOLP(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)> (ACCOUNT_SETTINGS)
<android.service.notification.ZenPolicy: int access$202(android.service.notification.ZenPolicy,int)> (ACCOUNT_SETTINGS)
<android.widget.Editor$InsertionHandleView: void updateSelection(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.content.BroadcastReceiver$PendingResult: void setExtrasClassLoader(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setUserDataEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.security.IKeyChainService$Stub$Proxy: boolean setKeyPairCertificate(java.lang.String,byte[],byte[])> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setImageViewResource(int,int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: android.content.Context createDisplayContext(android.view.Display)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: boolean setDefaultDialer(java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setUsesCleartextTraffic(boolean)> (ACCOUNT_SETTINGS)
<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionManager: void setSessionPolicies(android.media.session.MediaSession$Token,int)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void reduceImageSizes(int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setXfermode(android.graphics.Xfermode)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoBaseCodePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanCredential: void setMasterKey(byte[],int)> (ACCOUNT_SETTINGS)
<android.media.AudioDeviceInfo: int convertInternalDeviceToDeviceType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setLogo(int)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: boolean initialize(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.print.IPrintManager$Stub$Proxy: void setBindInstantServiceAllowed(int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setTheme(int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setStartUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.BackdropFrameRenderer: boolean onContentDrawn(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotifyRespInd: void setTransactionId(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.util.IntPair: int second(long)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int blendARGB(int,int,float)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallInterfaceRule(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread$ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setFixedToUserRotation(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int XYZToColor(double,double,double)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeTypeEquals(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSecondaryLockscreenEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ILauncherApps$Stub$Proxy: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$LayoutParamAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (ACCOUNT_SETTINGS)
<android.os.RecoverySystem$3: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setDisplayProjection(android.os.IBinder,int,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.Activity$1: void updateStatusBarColor(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean setNightDisplayCustomEndTime(android.hardware.display.Time)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int provision(java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent parseCommandArgs(android.os.ShellCommand,android.content.Intent$CommandOptionHandler)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.EditorInfo: void setInitialSurroundingText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setExtractNativeLibs(boolean)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: void setProperty(android.util.Property)> (ACCOUNT_SETTINGS)
<android.hardware.radio.ITuner$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.GraphicsEnvironment: void setup(android.content.Context,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$2: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setNavBarVirtualKeyHapticFeedbackEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: int setDisplayNameUsingSrc(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void setRightTabResources(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.location.ContextHubTransaction: void setOnCompleteListener(android.hardware.location.ContextHubTransaction$OnCompleteListener)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$300(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.view.SurfaceView: void setAlpha(float)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController$TransportControls: void setPlaybackSpeed(float)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup)> (ACCOUNT_SETTINGS)
<android.os.IDumpstate$Stub$Proxy: void startBugreport(int,java.lang.String,java.io.FileDescriptor,java.io.FileDescriptor,int,android.os.IDumpstateListener,boolean)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub$Proxy: void sendCommand(java.lang.String,java.lang.String,android.os.Bundle,android.os.ResultReceiver)> (ACCOUNT_SETTINGS)
<android.widget.ScrollView: void setTopEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setInternalCapturePreset(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayCustomEndTime(java.time.LocalTime)> (ACCOUNT_SETTINGS)
<android.content.pm.IShortcutService$Stub$Proxy: boolean updateShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion parseCommandLineArg(android.os.ShellCommand)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setPlaybackToLocal(android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void <init>(android.content.res.Configuration,android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.content.IIntentSender$Stub$Proxy: void send(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void updateDisplay(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRequiredAccountType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.IpSecTransform$Builder: android.net.IpSecTransform buildTunnelModeTransform(java.net.InetAddress,android.net.IpSecManager$SecurityParameterIndex)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void set(android.view.animation.Transformation)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void setRecordListener(android.hardware.hdmi.HdmiRecordListener)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: void setInputMethod(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int access$702(android.net.NetworkCapabilities,int)> (ACCOUNT_SETTINGS)
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CameraCharacteristics$Key,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.view.ViewPropertyAnimator: void access$800(android.view.ViewPropertyAnimator,int,float)> (ACCOUNT_SETTINGS)
<android.transition.ChangeScroll: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setShouldZoomOutWallpaper(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.text.Selection: void setSelection(android.text.Spannable,int)> (ACCOUNT_SETTINGS)
<android.net.IEthernetManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int access$400(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<com.android.internal.util.function.pooled.PooledLambdaImpl: int access$000(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setProcessName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: com.android.internal.app.IVoiceInteractorRequest startPickOption(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,android.app.VoiceInteractor$Prompt,android.app.VoiceInteractor$PickOptionRequest$Option[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$3: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void sendAccessibilityEventInternal(int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveText(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanCommissioningSession startCommissioningSession(android.net.lowpan.LowpanBeaconInfo)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$600(long,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: java.lang.CharSequence clearColorSpans(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.ActivityTaskManager: boolean setTaskWindowingMode(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void in_ecm_mode(java.lang.Boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContainer: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setLogoDescription(int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setUidCleartextNetworkPolicy(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int convertChannelOutMaskToNativeMask(int)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setWallpaperZoomOut(android.os.IBinder,float)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)> (ACCOUNT_SETTINGS)
<android.util.Half: int halfToIntBits(short)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextMetricsParams(android.text.PrecomputedText$Params)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void setSupportedCountries(boolean,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAspectScaleDownAnimation(android.view.View,android.view.AppTransitionAnimationSpec[],android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener,android.app.ActivityOptions$OnAnimationFinishedListener)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setBoolean(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.service.euicc.EuiccProfileInfo: int access$600(android.service.euicc.EuiccProfileInfo)> (ACCOUNT_SETTINGS)
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothMap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setIntegerPart(long)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: boolean setPreferredDeviceForStrategy(android.media.audiopolicy.AudioProductStrategy,android.media.AudioDeviceAttributes)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setContentType(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IOns$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.ZygoteConnection: void lambda$handleApiBlacklistExemptions$0(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setSilenceMode(android.bluetooth.BluetoothDevice,boolean)> (ACCOUNT_SETTINGS)
<android.app.role.IRoleManager$Stub$Proxy: void setRoleNamesFromController(java.util.List)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$302(android.media.tv.TvInputHardwareInfo,int)> (ACCOUNT_SETTINGS)
<android.os.IInstalld$Stub$Proxy: boolean createProfileSnapshot(int,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: android.text.style.TtsSpan$DecimalBuilder setArgumentsFromDouble(double,int,int)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: void writeResConfigToProto(android.util.proto.ProtoOutputStream,long,android.util.DisplayMetrics)> (ACCOUNT_SETTINGS)
<android.media.AudioPlaybackCaptureConfiguration$Builder: android.media.AudioPlaybackCaptureConfiguration$Builder addMatchingUsage(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingRegion(int,int)> (ACCOUNT_SETTINGS)
<android.net.IConnectivityManager$Stub$Proxy: void startCaptivePortalAppInternal(android.net.Network,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.IApplicationThread$Stub$Proxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl$Uid: boolean updateOnBatteryScreenOffBgTimeBase(long,long)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter$OverflowPopup: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.CarrierConfigManager: void updateConfigForPhoneId(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)> (ACCOUNT_SETTINGS)
<android.net.lowpan.ILowpanInterface$Stub$Proxy: void sendToCommissioner(byte[])> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationAssistantAccessGrantedForUser(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setGwpAsanMode(int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$1700(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setAllowedNetworkTypes(long)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void startOneTouchRecord(int,android.hardware.hdmi.HdmiRecordSources$RecordSource)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingText(java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.AdvertisingSet: void setPeriodicAdvertisingParameters(android.bluetooth.le.PeriodicAdvertisingParameters)> (ACCOUNT_SETTINGS)
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String transactionToString(android.app.servertransaction.ClientTransaction,android.app.ClientTransactionHandler)> (ACCOUNT_SETTINGS)
<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,android.text.Layout$Alignment,android.text.BoringLayout$Metrics,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.Activity$HostCallbacks: void onStartActivityAsUserFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.widget.LinearLayout: void measureVertical(int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPermissionPolicy(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCallBarring(int,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.telephony.data.ApnSetting$Builder: android.telephony.data.ApnSetting$Builder access$2800(android.telephony.data.ApnSetting$Builder,int)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setRilDataRadioTechnology(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setDebuggable(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.PackageChangeReceiver: void onReceive(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.InsetsController$InternalAnimationControlListener: void lambda$onReady$0$InsetsController$InternalAnimationControlListener(android.view.animation.Interpolator,android.view.WindowInsetsAnimationController,android.graphics.Insets,android.graphics.Insets,android.view.animation.Interpolator,android.animation.ValueAnimator)> (ACCOUNT_SETTINGS)
<android.media.WebVttRenderingWidget$CueLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle,float)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int,boolean,boolean,boolean,int,int,java.lang.String,java.lang.String,int,int,boolean,boolean,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.NativeFrame: void setFloats(float[])> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void updateEmergencyNumberListTestMode(int,android.telephony.emergency.EmergencyNumber)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int setHdmiSystemAudioSupported(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.logging.MetricsLogger: void action(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setAdvertisingData(int,android.bluetooth.le.AdvertiseData)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.IMms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ActionBarContextView: void setSplitToolbar(boolean)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform$2: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int flagsUpTo(int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingActive(java.lang.String[],java.util.concurrent.Executor,android.app.AppOpsManager$OnOpActiveChangedListener)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.widget.PopupWindow: void update(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.SyncRequest$Builder: android.content.SyncRequest$Builder syncPeriodic(long,long)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void setSelectedGroup(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.transition.ArcMotion: void <init>(android.content.Context,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: boolean setFontVariationSettings(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientType(int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setCustomView(android.view.View)> (ACCOUNT_SETTINGS)
<android.print.IPrintManager$Stub$Proxy: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)> (ACCOUNT_SETTINGS)
<android.os.IInstalld$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setDirectBootAware(boolean)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setPreviewSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.os.PowerManager: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)> (ACCOUNT_SETTINGS)
<android.os.IVibratorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,java.lang.Object,long)> (ACCOUNT_SETTINGS)
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadOrigInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setFullBackupOnly(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Editor: void <init>(android.widget.TextView)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setRingerModeInternal(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.ComponentName startForegroundServiceAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.widget.ListPopupWindow: void setModal(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: android.text.style.TtsSpan$DecimalBuilder setFractionalPart(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.content.Intent,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.widget.HorizontalScrollView: void setLeftEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void setVrThread(int)> (ACCOUNT_SETTINGS)
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebViewRenderProcessClient(android.webkit.WebViewRenderProcessClient)> (ACCOUNT_SETTINGS)
<android.transition.ChangeImageTransform$2: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setTimeZone(java.lang.String)> (ACCOUNT_SETTINGS)
<android.print.IPrintManager$Stub$Proxy: void startPrinterStateTracking(android.print.PrinterId,int)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager$HistoricalOpsRequest: int access$6300(android.app.AppOpsManager$HistoricalOpsRequest)> (ACCOUNT_SETTINGS)
<android.hardware.location.IContextHubService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothHearingAid: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setSaturationLevel(int)> (ACCOUNT_SETTINGS)
<android.telephony.SmsManager: boolean setSmscAddress(java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.Fragment$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void setSystemAudioVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaFormat: void setFeatureEnabled(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.nfc.INfcCardEmulation$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean modifyDevicePolicyOverrideApn(android.content.Context,int,android.telephony.data.ApnSetting)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setLine1NumberForDisplay(int,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplayDensityForUser(int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.EditText: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextLinks: int apply(android.text.Spannable,int,java.util.function.Function)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setTaskResizeable(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setStaticSharedLibVersion(long)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCantSaveState(boolean)> (ACCOUNT_SETTINGS)
<android.security.IKeyChainService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int setParameter(android.os.ParcelUuid,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setDefaultLogo(int)> (ACCOUNT_SETTINGS)
<android.os.VibrationAttributes$Builder: void <init>(android.media.AudioAttributes,android.os.VibrationEffect)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)> (ACCOUNT_SETTINGS)
<android.app.DownloadManager: void restartDownload(long[])> (ACCOUNT_SETTINGS)
<android.media.midi.IMidiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter$UserRouteInfo: void setIconResource(int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceUp(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setRemoveContentMode(int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)> (ACCOUNT_SETTINGS)
<android.view.View: boolean startMovingTask(float,float)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int delete(android.net.Uri,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.SystemUpdatePolicy: int access$302(android.app.admin.SystemUpdatePolicy,int)> (ACCOUNT_SETTINGS)
<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendStoredText(int,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setCallWaitingStatus(int,boolean)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstantAppCookie(java.lang.String,byte[],int)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: boolean setDefaultBrowser(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.admin.NetworkEvent$1: android.app.admin.NetworkEvent createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderProxy: boolean refresh(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.os.ICancellationSignal)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)> (ACCOUNT_SETTINGS)
<android.content.IClipboard$Stub$Proxy: void setPrimaryClip(android.content.ClipData,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.assist.AssistContent: void setDefaultIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: int bindIsolatedService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setForceEphemeralUsers(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setRequestedOrientation(android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setHasCode(boolean)> (ACCOUNT_SETTINGS)
<android.net.EthernetManager: void setConfiguration(java.lang.String,android.net.IpConfiguration)> (ACCOUNT_SETTINGS)
<android.media.VolumeShaper$Operation: int access$500(android.media.VolumeShaper$Operation)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: void setup(int,int,android.view.View$AttachInfo,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.view.ViewRootImpl: void setRootSystemGestureExclusionRects(java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void updateServiceLocationForSubscriber(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier: void lambda$show$0$Magnifier(android.widget.Magnifier$InternalPopupWindow,android.graphics.Point)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstallerSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: int startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setHarmfulAppWarning(java.lang.String,java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.view.autofill.AutofillPopupWindow: void update(android.view.View,int,int,int,int,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.IPlayer$Stub$Proxy: void setPan(float)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> (ACCOUNT_SETTINGS)
<android.hardware.location.ContextHubManager$2: void onQueryResponse(int,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void updateInputChannel(android.os.IBinder,int,android.view.SurfaceControl,int,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayActivated(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setOperatorBrandOverride(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.View: void clearAccessibilityFocusNoCallbacks(int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void initializeInvalidateRegion(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ShortcutInfo$Builder: android.content.pm.ShortcutInfo$Builder setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService$2: void init(int,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startActivities(android.content.Intent[])> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPermissionPolicy(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHint(int)> (ACCOUNT_SETTINGS)
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,int,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,java.lang.String,android.os.Bundle,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.sysprop.DisplayProperties: void debug_layout(java.lang.Boolean)> (ACCOUNT_SETTINGS)
<android.app.WindowTokenClient: void onConfigurationChanged(android.content.res.Configuration,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setRotationY(float)> (ACCOUNT_SETTINGS)
<android.database.sqlite.SQLiteDatabase$OpenParams: int access$400(android.database.sqlite.SQLiteDatabase$OpenParams)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void setPremiumSmsPermissionForSubscriber(int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setShouldShowWithInsecureKeyguard(int,boolean)> (ACCOUNT_SETTINGS)
<android.media.soundtrigger_middleware.PhraseRecognitionEvent: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MoneyBuilder: android.text.style.TtsSpan$MoneyBuilder setQuantity(java.lang.String)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadRecInd: void <init>(com.google.android.mms.pdu.EncodedStringValue,byte[],int,int,com.google.android.mms.pdu.EncodedStringValue[])> (ACCOUNT_SETTINGS)
<android.view.SurfaceControl: void setAlpha(float)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: java.lang.Runnable setRemoteViewsAdapterAsync(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.animation.ValueAnimator: void setIntValues(int[])> (ACCOUNT_SETTINGS)
<android.media.SRTTrack: void updateView(java.util.Vector)> (ACCOUNT_SETTINGS)
<android.hardware.display.DisplayManagerGlobal: void setTemporaryAutoBrightnessAdjustment(float)> (ACCOUNT_SETTINGS)
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setVmSafeMode(boolean)> (ACCOUNT_SETTINGS)
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$902(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ParseUtils: int parseInt(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.MediaCodecInfo$VideoCapabilities: int lambda$getPerformancePoints$0(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$9: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setNetworkRoamingForPhone(int,boolean)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: android.view.WindowInsets lambda$onCreate$2$InputMethodService(android.view.View,android.view.WindowInsets)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: void updateStatusIcon(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.text.style.MetricAffectingSpan$Passthrough: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setCapabilities(android.net.NetworkCapabilities)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(java.util.concurrent.Executor,android.telephony.ims.RegistrationManager$RegistrationCallback)> (ACCOUNT_SETTINGS)
<android.os.RemoteCallback$1: void sendResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.LockPatternUtils: void setOwnerInfo(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setGlobalPrivateDns(android.content.ComponentName,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier: void lambda$performPixelCopy$1$Magnifier(android.widget.Magnifier$InternalPopupWindow,boolean,android.graphics.Point,android.graphics.Bitmap,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageInstaller$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView$PositionScroller: void start(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.LauncherApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.net.ITestNetworkManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setFactoryResetProtectionPolicy(android.content.ComponentName,android.app.admin.FactoryResetProtectionPolicy)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void lambda$handleFixedRotationAdjustments$0(android.view.DisplayAdjustments$FixedRotationAdjustments,android.content.res.Configuration[],android.view.DisplayAdjustments)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setFractionalPart(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.BatteryManager: boolean setChargingStateUpdateDelayMillis(int)> (ACCOUNT_SETTINGS)
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int refreshEntitlements(int,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setFontFeatureSettings(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupManager: void updateTransportAttributes(android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: boolean setSubscriptionEnabled(boolean,int)> (ACCOUNT_SETTINGS)
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo makeWifiDisplayRoute(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo$Builder: int access$400(android.content.pm.SuspendDialogInfo$Builder)> (ACCOUNT_SETTINGS)
<android.graphics.Region: android.graphics.Region obtain(android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setStartOffset(long)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity makeAlias(java.lang.String,android.content.pm.parsing.component.ParsedActivity)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionResult: int access$100(android.widget.SelectionActionModeHelper$SelectionResult)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setRuntimePermissionsVersion(int,int)> (ACCOUNT_SETTINGS)
<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)> (ACCOUNT_SETTINGS)
<android.view.animation.OvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)> (ACCOUNT_SETTINGS)
<android.app.role.RoleManager: void setRoleNamesFromController(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOp(int,int,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void <init>(android.view.View,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.IntPair: int first(long)> (ACCOUNT_SETTINGS)
<android.telephony.euicc.EuiccManager: void setUnsupportedCountries(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setDebugApp(java.lang.String,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int toArgb(long)> (ACCOUNT_SETTINGS)
<android.widget.SearchView$SearchAutoComplete: void access$400(android.widget.SearchView$SearchAutoComplete,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setOverrideApnsEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.CrossProfileApps: void setInteractAcrossProfilesAppOp(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.content.res.Configuration: int diff(android.content.res.Configuration)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$1600(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)> (ACCOUNT_SETTINGS)
<com.android.internal.os.RuntimeInit: java.lang.Runnable applicationInit(int,long[],java.lang.String[],java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProviderInfo(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DigitsBuilder: android.text.style.TtsSpan$DigitsBuilder setDigits(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.ICameraDeviceUser$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,java.lang.String,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.palette.ColorCutQuantizer: int approximateToRgb888(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VPath: void setPathData(android.util.PathParser$PathData)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setDefaultSmsSubId(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void registerMmTelCapabilityCallback(java.util.concurrent.Executor,android.telephony.ims.ImsMmTelManager$CapabilityCallback)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$Tab setText(int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: boolean setTaskWindowingModeSplitScreenPrimary(int,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer$TrackInfo: void <init>(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$7: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAnyDensity(int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MoneyBuilder: android.text.style.TtsSpan$MoneyBuilder setIntegerPart(long)> (ACCOUNT_SETTINGS)
<android.os.Debug: void startMethodTracing(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void <init>(android.content.Context)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCrossProfile(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dpSink$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeClipBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void startDelegateShellPermissionIdentity(int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: void sendCharacterSync(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputContext$Stub$Proxy: void setSelection(int,int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SimpleFrame: void setFloats(float[])> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.os.Vibrator: boolean setAlwaysOnEffect(int,android.os.VibrationEffect,android.media.AudioAttributes)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setPictureInPictureParams(android.os.IBinder,android.app.PictureInPictureParams)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setSelector(int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void setResource(int)> (ACCOUNT_SETTINGS)
<android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo findPersistentPreferredActivity(android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.util.Half: int compare(short,short)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setProcessImportant(android.os.IBinder,int,boolean,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ViewNode: int access$2602(android.view.contentcapture.ViewNode,int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int lambda$setDataRoaming$5(int,int,com.android.internal.telephony.ISub)> (ACCOUNT_SETTINGS)
<android.os.ZygoteProcess: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setKeepUninstalledPackages(android.content.ComponentName,java.lang.String,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.ImeInsetsSourceConsumer: void setControl(android.view.InsetsSourceControl,int[],int[])> (ACCOUNT_SETTINGS)
<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Activity: void access$200(android.content.pm.PackageParser$Activity,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: boolean bindRemoteViewsService(android.content.Context,int,android.content.Intent,android.app.IServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller: void setFriction(float)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void access$1800(android.webkit.WebView,int,int)> (ACCOUNT_SETTINGS)
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.widget.Editor$CorrectionHighlighter: void <init>(android.widget.Editor)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setProperty(android.util.Property)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void updateInstantAppCookie(byte[])> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int HSLToColor(float[])> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextSelectHandleRight(int)> (ACCOUNT_SETTINGS)
<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void sendVisualVoicemailSmsForSubscriber(java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSystemSelectionChannels(java.util.List,java.util.concurrent.Executor,java.util.function.Consumer)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: void lambda$handleRequestDirectActions$2(android.app.ActivityThread$ActivityClientRecord,android.os.RemoteCallback,java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.SelectionActionModeHelper$SelectionTracker: int access$802(android.widget.SelectionActionModeHelper$SelectionTracker,int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void sendAccessibilityEvent(int)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setTitle(java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<android.app.JobSchedulerImpl: int schedule(android.app.job.JobInfo)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: void setListener(android.telephony.ims.aidl.IRcsFeatureListener)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setMediaController(android.media.session.MediaController)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setNumerator(java.lang.String)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform$1: void set(android.transition.ChangeTransform$PathAnimatorMatrix,float[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setMicrophoneMuteFromSwitch(boolean)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startNotedAppOpsCollection(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int compositeColors(int,int)> (ACCOUNT_SETTINGS)
<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration anonymizedCopy(android.media.AudioPlaybackConfiguration)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.Context: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.graphics.HardwareRenderer: void setupDiskCache(java.io.File)> (ACCOUNT_SETTINGS)
<android.app.VrManager: void setVr2dDisplayProperties(android.app.Vr2dDisplayProperties)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: void startTruncatedScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)> (ACCOUNT_SETTINGS)
<android.location.GnssReflectingPlane$1: android.location.GnssReflectingPlane createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.widget.SearchView$SearchAutoComplete: void setThreshold(int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void operator_numeric(java.util.List)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setTint(int)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$PermissionGroup: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.HardwareRenderer: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)> (ACCOUNT_SETTINGS)
<android.widget.SuggestionsAdapter: void <init>(android.content.Context,android.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long,float,float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setZygotePreloadName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnKeyStatusChangeListener(java.util.concurrent.Executor,android.media.MediaDrm$OnKeyStatusChangeListener)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setDefaultForNextTap(int,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,android.app.AppOpsManager$OnOpChangedListener)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setQueue(java.util.List)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setRttEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setFloats(float[])> (ACCOUNT_SETTINGS)
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])> (ACCOUNT_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: void setInTouchMode(boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSupportsNormalScreens(int)> (ACCOUNT_SETTINGS)
<android.animation.AnimatorSet: void startWithoutPulsing(boolean)> (ACCOUNT_SETTINGS)
<android.util.ArrayMap: int indexOfKey(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void setOriginalSharedElementState(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setSystemSelectionChannels(java.util.List,int,com.android.internal.telephony.IBooleanConsumer)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: int listAudioPorts(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setProperty(android.util.Property)> (ACCOUNT_SETTINGS)
<android.metrics.LogMaker: void <init>(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setTestOnly(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$7: void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setSubscriptionOverride(int,int,int,long,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setFontVariationSettings(android.graphics.fonts.FontVariationAxis[])> (ACCOUNT_SETTINGS)
<android.widget.ScrollBarDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.util.ArraySet: int indexOf(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void startLockTaskModeByToken(android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothMapClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.View: void setTranslationZ(float)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.component.ParsedServiceUtils: android.content.pm.parsing.result.ParseResult parseService(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.Half: int halfToRawIntBits(short)> (ACCOUNT_SETTINGS)
<android.widget.FastScroller: void access$000(android.widget.FastScroller,int)> (ACCOUNT_SETTINGS)
<android.os.ISystemUpdateManager$Stub$Proxy: void updateSystemUpdateInfo(android.os.PersistableBundle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultDataSubId(int)> (ACCOUNT_SETTINGS)
<android.net.IEthernetManager$Stub$Proxy: void setConfiguration(java.lang.String,android.net.IpConfiguration)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)> (ACCOUNT_SETTINGS)
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: void updateSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)> (ACCOUNT_SETTINGS)
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.BackgroundFallback: void draw(android.view.ViewGroup,android.view.ViewGroup,android.graphics.Canvas,android.view.View,android.view.View,android.view.View)> (ACCOUNT_SETTINGS)
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int resolveContrastColor(android.content.Context,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.view.Window: void addPrivateFlags(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProvider: void restoreCallingIdentity(android.content.ContentProvider$CallingIdentity)> (ACCOUNT_SETTINGS)
<android.service.vr.IVrManager$Stub$Proxy: void setVr2dDisplayProperties(android.app.Vr2dDisplayProperties)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int HSVToColor(float[])> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: boolean updateMccMncConfiguration(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.ContentCaptureContext$1: android.view.contentcapture.ContentCaptureContext createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession$CallbackStub: void onMediaButton(java.lang.String,int,int,android.content.Intent,int,android.os.ResultReceiver)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)> (ACCOUNT_SETTINGS)
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setCacheColorHint(int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setScrollPosition(int,int)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.GnssSingleSatCorrection$Builder: int access$000(android.location.GnssSingleSatCorrection$Builder)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int closeSession(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.SoundTriggerModule: int setParameter(int,int,int)> (ACCOUNT_SETTINGS)
<android.view.GhostView: void setVisibility(int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionController$Stub$Proxy: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1600(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setActivityLocusContext(android.content.ComponentName,android.content.LocusId,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setCurrentVolume(int)> (ACCOUNT_SETTINGS)
<android.hardware.display.IDisplayManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int ensureContrast(int,int,boolean,double)> (ACCOUNT_SETTINGS)
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.IPlayer$Stub$Proxy: void setStartDelayMs(int)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void <init>(android.view.InsetsState)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int uint16(short)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.RippleDrawable: void onBoundsChange(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.media.IRemoteVolumeController$Stub$Proxy: void updateRemoteController(android.media.session.MediaSession$Token)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: boolean access$1700(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.params.Face[])> (ACCOUNT_SETTINGS)
<android.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.media.MediaCodec: int access$400(android.media.MediaCodec)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setBackupServiceEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaDrm: void setOnSessionLostStateListener(java.util.concurrent.Executor,android.media.MediaDrm$OnSessionLostStateListener)> (ACCOUNT_SETTINGS)
<android.os.image.DynamicSystemManager$Session: boolean setAshmem(android.os.ParcelFileDescriptor,long)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setClassName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.LineBackgroundSpan$Standard: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListConnector: void <init>(android.widget.ExpandableListAdapter)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setAppComponentFactory(java.lang.String)> (ACCOUNT_SETTINGS)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setAcceptUnvalidated(android.net.Network,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.text.TextUtils$StringWithRemovedChars: void removeAllCharAfter(int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbConfiguration$1: android.hardware.usb.UsbConfiguration createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.view.View: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.view.StandaloneActionMode: void setCustomView(android.view.View)> (ACCOUNT_SETTINGS)
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setElevation(float)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void setImageLevel(int)> (ACCOUNT_SETTINGS)
<android.view.GhostView: void setMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AdaptiveIconDrawable: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.service.dreams.Sandman: boolean shouldStartDockApp(android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuItemView: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)> (ACCOUNT_SETTINGS)
<android.service.dreams.IDreamManager$Stub$Proxy: void setDreamComponents(android.content.ComponentName[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.widget.Spinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$2: void set(android.transition.ChangeBounds$ViewBounds,android.graphics.PointF)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setBlockUninstallForUser(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.util.MathUtils: int addOrThrow(int,int)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void access$4100(android.widget.AbsListView,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotificationInd: void setContentClass(int)> (ACCOUNT_SETTINGS)
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)> (ACCOUNT_SETTINGS)
<android.view.animation.AnimationSet: void setRepeatMode(int)> (ACCOUNT_SETTINGS)
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$1200(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: void setUiccApplicationsEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.app.usage.UsageStats: void update(java.lang.String,long,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void setCarrierTestOverride(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int,int,int)> (ACCOUNT_SETTINGS)
<android.security.IKeyChainService$Stub$Proxy: boolean deleteCaCertificate(java.lang.String)> (ACCOUNT_SETTINGS)
<android.os.incremental.IncrementalFileSystemControlParcel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setDataNetworkType(int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSessionLegacyHelper: void access$000(android.app.PendingIntent,android.content.Context,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.SubscriptionManager: int setDataRoaming(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void setBounds(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (ACCOUNT_SETTINGS)
<android.app.Service: void stopForeground(int)> (ACCOUNT_SETTINGS)
<android.telephony.SignalStrength: android.telephony.SignalStrength newFromBundle(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$OrdinalBuilder: void <init>(long)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setStreamVolume(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void dispatchSetPressed(boolean)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setOrganizationColorForUser(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.logging.MetricsLogger: void action(int,int)> (ACCOUNT_SETTINGS)
<android.telephony.ServiceState: void setDataRoaming(boolean)> (ACCOUNT_SETTINGS)
<android.provider.Settings$System: void adjustConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean setLockCredential(com.android.internal.widget.LockscreenCredential,com.android.internal.widget.LockscreenCredential,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SubtitleView: void setTypeface(android.graphics.Typeface)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void onQueryRefine(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)> (ACCOUNT_SETTINGS)
<android.view.View: boolean setFrame(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.media.session.ISession$Stub$Proxy: void setFlags(int)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void operator_alpha(java.util.List)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: void setUiTtyMode(int,android.os.Message)> (ACCOUNT_SETTINGS)
<android.app.Dialog: boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface$OnCancelListener,android.content.DialogInterface$OnDismissListener)> (ACCOUNT_SETTINGS)
<android.view.InsetsController: void dump(java.lang.String,java.io.PrintWriter)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.permission.IPermissionManager$Stub$Proxy: void startOneTimePermissionSession(java.lang.String,int,long,int,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setShowWhenLocked(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: boolean access$1600(android.hardware.camera2.impl.CameraMetadataNative,android.graphics.Rect[])> (ACCOUNT_SETTINGS)
<android.content.pm.ParceledListSlice: void setInlineCountLimit(int)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setVolumeController(android.media.IVolumeController)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$FractionBuilder: android.text.style.TtsSpan$FractionBuilder setNumerator(long)> (ACCOUNT_SETTINGS)
<android.app.Notification$WearableExtender: android.app.Notification$WearableExtender setContentIntentAvailableOffline(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)> (ACCOUNT_SETTINGS)
<android.content.LoggingContentInterface: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setPartiallyDirectBootAware(boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setMetadata(android.bluetooth.BluetoothDevice,int,byte[])> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1200(long,int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$500(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine$SmHandler: void access$2900(com.android.internal.util.StateMachine$SmHandler,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,long)> (ACCOUNT_SETTINGS)
<android.media.Ringtone: void setUri(android.net.Uri)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setEnabledExclusive(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.SfVsyncFrameCallbackProvider: void setFrameDelay(long)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setTimeZone(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$DecimalBuilder: android.text.style.TtsSpan$DecimalBuilder setIntegerPart(long)> (ACCOUNT_SETTINGS)
<android.text.Selection: boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.usage.UsageStatsManager: void setAppStandbyBuckets(java.util.Map)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.RetrieveConf: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<com.android.internal.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)> (ACCOUNT_SETTINGS)
<android.app.assist.AssistContent: void setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$RemoteResponse: android.widget.RemoteViews$RemoteResponse fromFillInIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedCrossProfileNotificationListeners(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.View: int resolveSize(int,int)> (ACCOUNT_SETTINGS)
<android.widget.RemoteViews$OverrideTextColorsAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationDelegate(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.sysprop.TelephonyProperties: void icc_operator_iso_country(java.util.List)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setAllowOnlyVpnForUids(boolean,android.net.UidRange[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHearingAid$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setTitleColor(int)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotifyRespInd: void <init>(int,byte[],int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.DecorView: void setOutlineProvider(android.view.ViewOutlineProvider)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService$InputMethodImpl: void updateInputMethodDisplay(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget._$$Lambda$FloatingToolbar$LutnsyBKrZiroTBekgIjhIyrl40: int compare(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setImeWindowStatus(int,int)> (ACCOUNT_SETTINGS)
<android.view.View$8: void setValue(android.view.View,float)> (ACCOUNT_SETTINGS)
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)> (ACCOUNT_SETTINGS)
<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLogoutEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void access$000(android.widget.AbsListView,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiRecordSources$DvbData: int toByteArray(byte[],int)> (ACCOUNT_SETTINGS)
<android.transition.ChangeBounds$1: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$502(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.text.DynamicLayout$Builder: int access$1200(android.text.DynamicLayout$Builder)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$TextBuilder: android.text.style.TtsSpan$TextBuilder setText(java.lang.String)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setDenominator(long)> (ACCOUNT_SETTINGS)
<com.android.internal.app.MicroAlertController: void setupButtons(android.view.ViewGroup)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)> (ACCOUNT_SETTINGS)
<com.android.internal.os.ZygoteInit: void setApiBlacklistExemptions(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.trust.ITrustManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setAirplaneMode(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent fromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setMode(int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.ICas$Proxy: int setSessionPrivateData(java.util.ArrayList,java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.PhoneWindow: void setContainer(android.view.Window)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$000(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig createWithHints(java.util.Collection)> (ACCOUNT_SETTINGS)
<android.app.Activity: void setTaskDescription(android.app.ActivityManager$TaskDescription)> (ACCOUNT_SETTINGS)
<android.net.NetworkStats: android.net.NetworkStats insertEntry(android.net.NetworkStats$Entry)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.WindowConfiguration: void setTo(android.app.WindowConfiguration)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,int)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$MeasureBuilder: android.text.style.TtsSpan$MeasureBuilder setIntegerPart(long)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Default: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.List)> (ACCOUNT_SETTINGS)
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)> (ACCOUNT_SETTINGS)
<android.text.AutoGrowArray: int access$000(int,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: void setZoom(float)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotifyRespInd: void setReportAllowed(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<android.media.IAudioService$Stub$Proxy: void setMasterMute(boolean,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void setDisplayFrame(android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionCoordinator: void lambda$scheduleGhostVisibilityChange$1$ActivityTransitionCoordinator(int)> (ACCOUNT_SETTINGS)
<android.os.IVold$Stub$Proxy: void setupAppDir(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: void startScanFromSource(android.os.WorkSource,android.bluetooth.le.ScanCallback)> (ACCOUNT_SETTINGS)
<android.system.suspend.WakeLockInfo: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.media.AudioFormat: int access$100(android.media.AudioFormat)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Service: void setPackageName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityThread: android.app.Activity startActivityNow(android.app.Activity,java.lang.String,android.content.Intent,android.content.pm.ActivityInfo,android.os.IBinder,android.os.Bundle,android.app.Activity$NonConfigurationInstances,android.os.IBinder)> (ACCOUNT_SETTINGS)
<android.app.WindowTokenClient: void attachContext(android.app.WindowContext)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.palette.ColorCutQuantizer: int quantizedBlue(int)> (ACCOUNT_SETTINGS)
<android.os.Environment: int classifyExternalStorageDirectory(java.io.File)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: void setMimeGroup(java.lang.String,java.lang.String,java.util.List)> (ACCOUNT_SETTINGS)
<com.android.internal.graphics.ColorUtils: int LABToColor(double,double,double)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<android.media.AudioTrack: int setVolume(float)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuPresenter: void updateMenuView(boolean)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void startInterfaceForwarding(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void setLocationControllerExtraPackage(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityManager: void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAutofillFailure(int,java.util.List,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_2.IMediaCasService$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: boolean bindProcessToNetwork(android.net.Network)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.IDescramblerBase$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.IAppOpsService$Stub$Proxy: void setCameraAudioRestriction(int)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1100(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.os.Parcel: int compareData(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.RegistrationManager$RegistrationCallback$RegistrationBinder: void access$000(android.telephony.ims.RegistrationManager$RegistrationCallback$RegistrationBinder,java.util.concurrent.Executor)> (ACCOUNT_SETTINGS)
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimatedVectorDrawable: boolean onStateChange(int[])> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onExtractedReplaceText(int,int,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setExposureCompensation(int)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void setApplicationCategoryHint(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.os.BaseBundle: void writeToParcelInner(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setLowestPriority(java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.animation.AnimatorSet: void setCurrentPlayTime(long)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$6: void setValue(android.graphics.drawable.VectorDrawable$VGroup,float)> (ACCOUNT_SETTINGS)
<android.hardware.display.BrightnessConfiguration: android.hardware.display.BrightnessConfiguration loadFromXml(org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$900(android.bluetooth.BluetoothGatt)> (ACCOUNT_SETTINGS)
<android.media.AudioManager: void setVibrateSetting(int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothGatt: int access$402(android.bluetooth.BluetoothGatt,int)> (ACCOUNT_SETTINGS)
<android.widget.SmartSelectSprite$RoundedRectangleShape: void access$100(android.widget.SmartSelectSprite$RoundedRectangleShape,float)> (ACCOUNT_SETTINGS)
<android.print.PrinterCapabilitiesInfo: int access$500(android.print.PrinterCapabilitiesInfo)> (ACCOUNT_SETTINGS)
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)> (ACCOUNT_SETTINGS)
<android.widget.Editor$SelectionHandleView: void updateSelection(int)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)> (ACCOUNT_SETTINGS)
<android.text.style.TtsSpan$SemioticClassBuilder: android.text.style.TtsSpan$SemioticClassBuilder setAnimacy(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void startFreezingScreen(int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.ContrastColorUtil: int ensureTextContrast(int,int,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.NotifyRespInd: void setStatus(int)> (ACCOUNT_SETTINGS)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setWindowState(int,int,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.view.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig create(java.util.Collection,java.util.Collection,java.util.Collection)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothDevice: boolean setMessageAccessPermission(int)> (ACCOUNT_SETTINGS)
<android.text.StaticLayout$Builder: int access$2200(android.text.StaticLayout$Builder)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$302(android.content.res.StringBlock$StyleIDs,int)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener,int)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.CameraManager: void setTorchMode(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.ActivityManager: void broadcastStickyIntent(android.content.Intent,int,int)> (ACCOUNT_SETTINGS)
<android.widget.FrameLayout: void onMeasure(int,int)> (ACCOUNT_SETTINGS)
<android.app.PackageDeleteObserver: void onUserActionRequired(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setReceiveBufferSize(int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub$Proxy: void setCustomSessionPolicyProviderForTesting(java.lang.String)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService$InputMethodImpl: void attachToken(android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)> (ACCOUNT_SETTINGS)
<com.android.internal.appwidget.IAppWidgetHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)> (ACCOUNT_SETTINGS)
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothPan$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionCallback$Default: void onMediaButton(java.lang.String,int,int,android.content.Intent,int,android.os.ResultReceiver)> (ACCOUNT_SETTINGS)
<android.graphics.Color: int blue(int)> (ACCOUNT_SETTINGS)
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setOperatorBrandOverride(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbInterface$1: android.hardware.usb.UsbInterface createFromParcel(android.os.Parcel)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.IContentCaptureManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.ToolbarWidgetWrapper: void setLogo(int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setMultiArch(boolean)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void setPowerMode(int,boolean)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSystemSetting(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.print.PrinterCapabilitiesInfo: int access$502(android.print.PrinterCapabilitiesInfo,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)> (ACCOUNT_SETTINGS)
<android.media.AudioPlaybackCaptureConfiguration$Builder: android.media.AudioPlaybackCaptureConfiguration$Builder excludeUsage(int)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)> (ACCOUNT_SETTINGS)
<android.sysprop.VoldProperties: void decrypt(java.lang.String)> (ACCOUNT_SETTINGS)
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Object)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityWindowInfo: int differenceFrom(android.view.accessibility.AccessibilityWindowInfo)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)> android.permission.DEVICE_POWER android.permission.BROADCAST_STICKY android.permission.WAKE_LOCK android.permission.MANAGE_APP_TOKENS android.permission.UPDATE_DEVICE_STATS (ACCOUNT_SETTINGS)
<android.widget.TextView: void setHint(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: void setOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayCustomEndTime(android.hardware.display.Time)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo: android.content.pm.SuspendDialogInfo restoreFromXml(org.xmlpull.v1.XmlPullParser)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setNavigationContentDescription(int)> (ACCOUNT_SETTINGS)
<android.widget.AbsSpinner: void setSelection(int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRampUpDuration(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: boolean grantKeyPairToApp(android.content.ComponentName,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.TextView: void setTextLocales(android.os.LocaleList)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void updateAppWidgetProviderInfo(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.NetworkUtils: int netmaskToPrefixLength(java.net.Inet4Address)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: void setTintBlendMode(android.graphics.BlendMode)> (ACCOUNT_SETTINGS)
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)> (ACCOUNT_SETTINGS)
<android.view.autofill.IAutoFillManagerClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.net.shared.Inet4AddressUtils: int prefixLengthToV4NetmaskIntHTH(int)> (ACCOUNT_SETTINGS)
<android.view.accessibility.IWindowMagnificationConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.impl.CameraMetadataNative createRequestTemplate(android.hardware.camera2.CameraCharacteristics,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.IconMenuPresenter: void addItemView(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Default: int sendIntentSender(android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.AccessibilityService: void setTouchExplorationPassthroughRegion(int,android.graphics.Region)> (ACCOUNT_SETTINGS)
<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)> (ACCOUNT_SETTINGS)
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void setMute(boolean)> (ACCOUNT_SETTINGS)
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)> (ACCOUNT_SETTINGS)
<android.app.FragmentTransition: void lambda$replaceHide$0(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.app.WallpaperManager: boolean setWallpaperComponent(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$502(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: void setPropagation(android.transition.TransitionPropagation)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setShape(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableWrapper: void applyTheme(android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void setOnMarshaledListener(android.app.PendingIntent$OnMarshaledListener)> (ACCOUNT_SETTINGS)
<android.net.lowpan.LowpanScanner: void setCallback(android.net.lowpan.LowpanScanner$Callback)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)> (ACCOUNT_SETTINGS)
<android.service.autofill.FillEventHistory$Event: int access$000(android.service.autofill.FillEventHistory$Event)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setImsRegistrationState(boolean)> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$1000(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setWindowInsetsAnimationCallback(android.view.WindowInsetsAnimation$Callback)> (ACCOUNT_SETTINGS)
<android.content.pm.ILauncherApps$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.ClipboardManager: void setText(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.text.AndroidBidi: int bidi(int,char[],byte[])> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setUidMeteredNetworkWhitelist(int,boolean)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$200(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setMessageClass(byte[])> (ACCOUNT_SETTINGS)
<android.service.oemlock.IOemLockService$Stub$Proxy: void setOemUnlockAllowedByCarrier(boolean,byte[])> (ACCOUNT_SETTINGS)
<android.app.IActivityManager$Stub$Proxy: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.app.INotificationManager$Stub$Proxy: void setNotificationListenerAccessGranted(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadRecInd: void setMessageId(byte[])> (ACCOUNT_SETTINGS)
<android.media.effect.effects.BackDropperEffect: void <init>(android.media.effect.EffectContext,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.PendingIntent: void send(int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (ACCOUNT_SETTINGS)
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long)> (ACCOUNT_SETTINGS)
<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setupSetterAndGetter(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsCallSession$Stub$Proxy: void update(int,android.telephony.ims.ImsStreamMediaProfile)> (ACCOUNT_SETTINGS)
<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])> (ACCOUNT_SETTINGS)
<android.os.IUserManager$Stub$Proxy: void setUserAccount(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: int setGlobalPrivateDnsModeSpecifiedHost(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.view.InsetsSourceControl: boolean setSurfacePosition(int,int)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams)> (ACCOUNT_SETTINGS)
<android.widget.ImageView: void onVisibilityAggregated(boolean)> (ACCOUNT_SETTINGS)
<android.transition.ChangeTransform: void access$200(android.view.View,float,float,float,float,float,float,float,float)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair previewCaptured(long)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)> (ACCOUNT_SETTINGS)
<android.view.InsetsState: void set(android.view.InsetsState,boolean)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.content.pm.InstallationFileParcel: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setSoftKeyboardCallbackEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void startSession(android.os.IBinder,android.content.ComponentName,int,int,com.android.internal.os.IResultReceiver)> (ACCOUNT_SETTINGS)
<android.service.euicc.EuiccProfileInfo: int access$800(android.service.euicc.EuiccProfileInfo)> (ACCOUNT_SETTINGS)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setCurrentFunctions(long)> (ACCOUNT_SETTINGS)
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: void setSimOperatorNumericForPhone(int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.PorterDuff: int modeToInt(android.graphics.PorterDuff$Mode)> (ACCOUNT_SETTINGS)
<com.android.internal.util.BitUtils: int flagsWithin(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setNetworkSecurityConfigRes(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VGroup$2: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: void setNotificationUris(android.content.ContentResolver,java.util.List)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setShellRootAccessibilityWindow(int,int,android.view.IWindow)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.uicc.IccUtils: int hexCharToInt(char)> (ACCOUNT_SETTINGS)
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseMonolithicPackage(java.io.File,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setBanner(int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.widget.TextView$Marquee: int access$910(android.widget.TextView$Marquee)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: int setForbiddenPlmns(java.util.List)> (ACCOUNT_SETTINGS)
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map,java.util.List)> (ACCOUNT_SETTINGS)
<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration,java.lang.String,com.android.internal.app.IVoiceInteractor,android.view.Window,android.view.ViewRootImpl$ActivityConfigCallback,android.os.IBinder)> (ACCOUNT_SETTINGS)
<com.android.internal.policy.BackdropFrameRenderer: void <init>(com.android.internal.policy.DecorView,android.view.ThreadedRenderer,android.graphics.Rect,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int,boolean,android.graphics.Rect,android.graphics.Rect)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateExtractedText(int,android.view.inputmethod.ExtractedText)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.media.tv.TvInputHardwareInfo,int,android.graphics.drawable.Icon)> (ACCOUNT_SETTINGS)
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)> (ACCOUNT_SETTINGS)
<android.database.BulkCursorToCursorAdaptor: boolean onMove(int,int)> (ACCOUNT_SETTINGS)
<android.content.pm.ICrossProfileApps$Default: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: void setUceSettingEnabled(int,boolean)> (ACCOUNT_SETTINGS)
<android.hardware.hdmi.HdmiTvClient: void setInputChangeListener(android.hardware.hdmi.HdmiTvClient$InputChangeListener)> (ACCOUNT_SETTINGS)
<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setIpForwardingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (ACCOUNT_SETTINGS)
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.IDataLoaderManager$Stub$Proxy: boolean bindToDataLoader(int,android.content.pm.DataLoaderParamsParcel,android.content.pm.IDataLoaderStatusListener)> (ACCOUNT_SETTINGS)
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void setOverrides(com.android.internal.compat.CompatibilityChangeConfig,java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.midi.IMidiManager$Stub$Proxy: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)> (ACCOUNT_SETTINGS)
<android.filterfw.core.VertexFrame: void setFloats(float[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)> (ACCOUNT_SETTINGS)
<android.view.WindowManagerGlobal: void addView(android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window,int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setAutoTimeEnabled(android.content.ComponentName,boolean)> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendTextForSubscriberWithOptions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,int,boolean,int)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_1.ICas$Proxy: int setPrivateData(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.os.INetworkManagementService$Stub$Proxy: boolean setDataSaverModeEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.telephony.PhoneNumberUtils: android.text.style.TtsSpan createTtsSpan(java.lang.String)> (ACCOUNT_SETTINGS)
<android.media.tv.TvInputHardwareInfo: int access$502(android.media.tv.TvInputHardwareInfo,int)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SubtitleView: void setTextSize(float)> (ACCOUNT_SETTINGS)
<android.content.res.StringBlock$StyleIDs: int access$700(android.content.res.StringBlock$StyleIDs)> (ACCOUNT_SETTINGS)
<android.app.FragmentManagerImpl: void completeShowHideFragment(android.app.Fragment)> (ACCOUNT_SETTINGS)
<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)> (ACCOUNT_SETTINGS)
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)> (ACCOUNT_SETTINGS)
<android.telephony.ims.ImsMmTelManager: void setVoWiFiRoamingSettingEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.net.INetworkScoreCache$Stub$Proxy: void updateScores(java.util.List)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setMenu(com.android.internal.view.menu.MenuBuilder,android.widget.ActionMenuPresenter)> (ACCOUNT_SETTINGS)
<android.service.notification.NotificationListenerService: void setNotificationsShown(java.lang.String[])> (ACCOUNT_SETTINGS)
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)> (ACCOUNT_SETTINGS)
<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities: int access$302(android.net.NetworkCapabilities,int)> (ACCOUNT_SETTINGS)
<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)> (ACCOUNT_SETTINGS)
<com.android.ims.internal.IImsUt$Stub$Proxy: int updateCLIP(boolean)> (ACCOUNT_SETTINGS)
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)> (ACCOUNT_SETTINGS)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.widget.AbsListView: void setBottomEdgeEffectColor(int)> (ACCOUNT_SETTINGS)
<android.view.ThreadedRenderer: void updateSurface(android.view.Surface)> (ACCOUNT_SETTINGS)
<android.os.IPowerManager$Stub$Proxy: void setPowerBoost(int,int)> (ACCOUNT_SETTINGS)
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setSupportsExtraLargeScreens(int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.DrawableContainer: void setAlpha(int)> (ACCOUNT_SETTINGS)
<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)> (ACCOUNT_SETTINGS)
<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)> android.permission.DEVICE_POWER android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER_COMPONENT (ACCOUNT_SETTINGS)
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ISoundTriggerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setGame(boolean)> (ACCOUNT_SETTINGS)
<android.graphics.Paint: void <init>(android.graphics.Paint)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$1102(android.widget.Magnifier$Builder,int)> (ACCOUNT_SETTINGS)
<com.android.internal.app.ToolbarActionBar: void setHomeActionContentDescription(int)> (ACCOUNT_SETTINGS)
<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities$Builder setAdministratorUids(int[])> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setRestrictedAccountType(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.AppOpsManager: void setUidMode(int,int,int)> (ACCOUNT_SETTINGS)
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String,android.view.inputmethod.InputMethodSubtype)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.ReadOrigInd: void setMessageId(byte[])> (ACCOUNT_SETTINGS)
<android.os.PowerManager: boolean setDynamicPowerSaveHint(boolean,int)> (ACCOUNT_SETTINGS)
<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.view.View: void initializeScrollbarsInternal(android.content.res.TypedArray)> (ACCOUNT_SETTINGS)
<android.webkit.WebView: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.VerifyCredentialResponse: void access$100(com.android.internal.widget.VerifyCredentialResponse,int)> (ACCOUNT_SETTINGS)
<android.widget.OverScroller$SplineOverScroller: boolean springback(int,int,int)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)> (ACCOUNT_SETTINGS)
<com.android.internal.view.IInputMethodSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.media.midi.IMidiDeviceServer$Stub$Proxy: void setDeviceInfo(android.media.midi.MidiDeviceInfo)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: android.net.ConnectivityManager$PacketKeepalive startNattKeepalive(android.net.Network,int,android.net.ConnectivityManager$PacketKeepaliveCallback,java.net.InetAddress,int,java.net.InetAddress)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])> (ACCOUNT_SETTINGS)
<android.content.pm.IPackageManager$Stub$Proxy: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.ViewRootInsetsControllerHost: void updateCompatSysUiVisibility(int,boolean,boolean)> (ACCOUNT_SETTINGS)
<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)> (ACCOUNT_SETTINGS)
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)> (ACCOUNT_SETTINGS)
<android.filterfw.core.SerializedFrame: void setInts(int[])> (ACCOUNT_SETTINGS)
<com.android.internal.telephony.ICarrierConfigLoader$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.view.animation.Transformation: void setClipRect(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.assist.AssistStructure$ViewNode: void <init>(android.app.assist.AssistStructure$ParcelTransferReader,int)> (ACCOUNT_SETTINGS)
<android.window.ITaskOrganizerController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.ColorStateListDrawable: void <init>(android.content.res.ColorStateList)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int processEmm(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,int,int)> (ACCOUNT_SETTINGS)
<android.provider.ContactsContract$QuickContact: android.content.Intent rebuildManagedQuickContactsIntent(java.lang.String,long,boolean,long,android.content.Intent)> (ACCOUNT_SETTINGS)
<android.content.pm.SuspendDialogInfo$Builder: int access$100(android.content.pm.SuspendDialogInfo$Builder)> (ACCOUNT_SETTINGS)
<com.android.internal.widget.SlidingTab: void setLeftTabResources(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothGatt$Stub$Proxy: void setAdvertisingParameters(int,android.bluetooth.le.AdvertisingSetParameters)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.VectorDrawable$VFullPath$8: void setValue(java.lang.Object,float)> (ACCOUNT_SETTINGS)
<android.bluetooth.BluetoothSap: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setProfileName(android.content.ComponentName,java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Default: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)> (ACCOUNT_SETTINGS)
<com.google.android.mms.pdu.SendReq: void setReadReport(int)> (ACCOUNT_SETTINGS)
<android.transition.TransitionSet: android.transition.Transition setSceneRoot(android.view.ViewGroup)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setOverlayCategory(java.lang.String)> (ACCOUNT_SETTINGS)
<android.security.IKeyChainService$Stub$Proxy: void setUserSelectable(java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)> (ACCOUNT_SETTINGS)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,java.lang.String,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<android.view.View: void setHorizontalScrollbarThumbDrawable(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.media.session.ISessionManager$Stub$Proxy: void setSessionPolicies(android.media.session.MediaSession$Token,int)> (ACCOUNT_SETTINGS)
<android.sysprop.CryptoProperties: void type(android.sysprop.CryptoProperties$type_values)> (ACCOUNT_SETTINGS)
<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)> (ACCOUNT_SETTINGS)
<android.widget.ExpandableListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)> (ACCOUNT_SETTINGS)
<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)> (ACCOUNT_SETTINGS)
<android.app.AlarmManager: void setExact(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.graphics.animation.RenderNodeAnimator: void setTarget(android.graphics.RecordingCanvas)> (ACCOUNT_SETTINGS)
<android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)> (ACCOUNT_SETTINGS)
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)> (ACCOUNT_SETTINGS)
<android.hardware.fingerprint.IFingerprintService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.hardware.usb.UsbManager: void setCurrentFunctions(long)> (ACCOUNT_SETTINGS)
<android.widget.Magnifier$Builder: int access$000(android.widget.Magnifier$Builder)> (ACCOUNT_SETTINGS)
<android.bluetooth.IBluetoothHidDevice$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.os.IRecoverySystem$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.hardware.face.IFaceService$Stub$Proxy: void setActiveUser(int)> (ACCOUNT_SETTINGS)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setDisplayWindowRotationController(android.view.IDisplayWindowRotationController)> (ACCOUNT_SETTINGS)
<android.content.res.XmlBlock: int access$1000(long,int)> (ACCOUNT_SETTINGS)
<android.app.IActivityTaskManager$Stub$Proxy: void setVoiceKeepAwake(android.service.voice.IVoiceInteractionSession,boolean)> (ACCOUNT_SETTINGS)
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)> (ACCOUNT_SETTINGS)
<android.location.GnssSingleSatCorrection$Builder: int access$200(android.location.GnssSingleSatCorrection$Builder)> (ACCOUNT_SETTINGS)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setProfileEnabled(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.database.CursorWrapper: void setExtras(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.location.GnssClock: int access$902(android.location.GnssClock,int)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuPresenter$OverflowMenuButton: void <init>(android.widget.ActionMenuPresenter,android.content.Context)> (ACCOUNT_SETTINGS)
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)> (ACCOUNT_SETTINGS)
<android.app.UiAutomation: void setRunAsMonkey(boolean)> (ACCOUNT_SETTINGS)
<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)> (ACCOUNT_SETTINGS)
<android.util.MergedConfiguration: void setTo(android.util.MergedConfiguration)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setInstallLocation(int)> (ACCOUNT_SETTINGS)
<com.android.internal.telecom.ITelecomService$Stub$Proxy: void setSystemDialer(android.content.ComponentName)> (ACCOUNT_SETTINGS)
<android.media.session.MediaController$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setPriority(java.lang.String,java.lang.String,int)> (ACCOUNT_SETTINGS)
<android.telephony.TelephonyManager: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)> (ACCOUNT_SETTINGS)
<android.os.UserHandle: int parseUserArg(java.lang.String)> (ACCOUNT_SETTINGS)
<android.net.ConnectivityManager: void setAvoidUnvalidated(android.net.Network)> (ACCOUNT_SETTINGS)
<android.hardware.cas.V1_0.ICas$Proxy: int closeSession(java.util.ArrayList)> (ACCOUNT_SETTINGS)
<android.net.nsd.NsdManager: void setEnabled(boolean)> (ACCOUNT_SETTINGS)
<android.view.Surface$CompatibleCanvas: void getMatrix(android.graphics.Matrix)> (ACCOUNT_SETTINGS)
<android.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)> (ACCOUNT_SETTINGS)
<android.net.LocalSocket: void setSendBufferSize(int)> (ACCOUNT_SETTINGS)
<android.app.admin.DevicePolicyManager: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)> (ACCOUNT_SETTINGS)
<android.content.pm.PackageParser$Package: void setApplicationInfoCodePath(java.lang.String)> (ACCOUNT_SETTINGS)
<android.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)> (ACCOUNT_SETTINGS)
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setLargestWidthLimitDp(int)> (ACCOUNT_SETTINGS)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)> (ACCOUNT_SETTINGS)
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: int setConfigInt(int,int)> (ACCOUNT_SETTINGS)
<android.content.om.IOverlayManager$Stub$Proxy: boolean setEnabled(java.lang.String,boolean,int)> (ACCOUNT_SETTINGS)

LOG:
<android.telephony.ims.ImsRcsManager: void registerImsRegistrationCallback(java.util.concurrent.Executor,android.telephony.ims.RegistrationManager$RegistrationCallback)> (LOG)
<com.android.telephony.Rlog: int v(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.print.PrintManager: void setPrintServiceEnabled(android.content.ComponentName,boolean)> (LOG)
<android.os.storage.StorageManager: void updateExternalStorageFileQuotaType(java.io.File,int)> (LOG)
<android.bluetooth.BluetoothMap: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.util.Log: int logToRadioBuffer(int,java.lang.String,java.lang.String)> (LOG)
<android.telephony.TelephonyManager: int setCarrierRestrictionRules(android.telephony.CarrierRestrictionRules)> (LOG)
<android.bluetooth.BluetoothHidHost: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)> (LOG)
<android.view.contentcapture.ContentCaptureEvent: void mergeEvent(android.view.contentcapture.ContentCaptureEvent)> (LOG)
<android.media.session.MediaSessionLegacyHelper: void addMediaButtonListener(android.app.PendingIntent,android.content.ComponentName,android.content.Context)> (LOG)
<android.net.lowpan.LowpanIdentity$Builder: android.net.lowpan.LowpanIdentity$Builder setName(java.lang.String)> (LOG)
<android.media.WebVttTrack: void updateView(java.util.Vector)> (LOG)
<android.app.WallpaperManager: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)> (LOG)
<com.android.internal.os.Zygote: void setAppProcessName(com.android.internal.os.ZygoteArguments,java.lang.String)> (LOG)
<android.app.admin.DevicePolicyManager: boolean setKeyPairCertificate(android.content.ComponentName,java.lang.String,java.util.List,boolean)> (LOG)
<android.nfc.NfcActivityManager: void onActivityPaused(android.app.Activity)> (LOG)
<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)> (LOG)
<android.widget.TextView: void autofill(android.view.autofill.AutofillValue)> (LOG)
<android.telephony.Rlog: int w(java.lang.String,java.lang.String)> (LOG)
<android.telephony.Rlog: int i(java.lang.String,java.lang.String)> (LOG)
<android.bluetooth.BluetoothDevice: boolean setMetadata(int,byte[])> (LOG)
<android.app.FragmentManagerImpl: void freeBackStackIndex(int)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.bluetooth.BluetoothHidHost: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.inputmethodservice.InputMethodService$InputMethodImpl: void initializeInternal(android.os.IBinder,int,com.android.internal.inputmethod.IInputMethodPrivilegedOperations)> (LOG)
<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)> (LOG)
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)> (LOG)
<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean,int)> (LOG)
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.app.WallpaperManager: void setDisplayPadding(android.graphics.Rect)> (LOG)
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])> (LOG)
<com.android.internal.policy.PhoneFallbackEventHandler: boolean onKeyDown(int,android.view.KeyEvent)> (LOG)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> (LOG)
<android.telephony.Rlog: int w(java.lang.String,java.lang.Throwable)> (LOG)
<android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)> (LOG)
<android.bluetooth.BluetoothHearingAid: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (LOG)
<android.net.ConnectivityManager$LegacyRequest$1: void onAvailable(android.net.Network)> (LOG)
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)> (LOG)
<android.bluetooth.BluetoothHeadset: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (LOG)
<android.telephony.TelephonyManager: void setSimPowerStateForSlot(int,int)> (LOG)
<android.content.Intent: android.content.Intent restoreFromXml(org.xmlpull.v1.XmlPullParser)> (LOG)
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)> android.permission.STOP_APP_SWITCHES (LOG)
<android.media.tv.TvInputManager$Session: void startRecording(android.net.Uri,android.os.Bundle)> (LOG)
<android.database.sqlite.SQLiteCompatibilityWalFlags: void init(java.lang.String)> (LOG)
<android.content.Intent: int fillIn(android.content.Intent,int)> (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String)> (LOG)
<android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)> (LOG)
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)> (LOG)
<android.bluetooth.BluetoothHeadset: void setForceScoAudio(boolean)> (LOG)
<android.util.Slog: int wtfStack(java.lang.String,java.lang.String)> (LOG)
<android.view.SurfaceView$1: void positionChanged(long,int,int,int,int)> (LOG)
<android.util.Slog: int println(int,java.lang.String,java.lang.String)> (LOG)
<android.bluetooth.BluetoothHeadsetClient: void setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean)> (LOG)
<android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)> (LOG)
<android.view.ViewRootImpl$ViewRootHandler: void handleMessage(android.os.Message)> (LOG)
<android.hardware.face.FaceManager: void authenticate(android.hardware.biometrics.CryptoObject,android.os.CancellationSignal,int,android.hardware.face.FaceManager$AuthenticationCallback,android.os.Handler,int)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Slog: int e(java.lang.String,java.lang.String)> (LOG)
<com.android.internal.view.IInputConnectionWrapper: void executeMessage(android.os.Message)> (LOG)
<android.app.FragmentState: android.app.Fragment instantiate(android.app.FragmentHostCallback,android.app.FragmentContainer,android.app.Fragment,android.app.FragmentManagerNonConfig)> (LOG)
<android.os.SystemVibrator: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.media.AudioAttributes)> (LOG)
<android.app.WallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean,int)> (LOG)
<android.bluetooth.BluetoothMapClient: boolean sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (LOG)
<android.bluetooth.BluetoothA2dp: void setOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> (LOG)
<android.nfc.NfcActivityManager: void setReaderMode(android.os.Binder,int,android.os.Bundle)> (LOG)
<android.util.Log$ImmediateLogWriter: void write(char[],int,int)> (LOG)
<android.app.SearchManager: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)> (LOG)
<android.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)> (LOG)
<android.bluetooth.BluetoothHearingAid: void setVolume(int)> (LOG)
<android.telephony.ims.stub.RcsSipOptionsImplBase: void sendCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)> (LOG)
<android.bluetooth.BluetoothA2dp: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.app.NotificationManager: void setNotificationDelegate(java.lang.String)> (LOG)
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.hardware.radio.TunerCallbackAdapter: void setProgramListObserver(android.hardware.radio.ProgramList,android.hardware.radio.ProgramList$OnCloseListener)> (LOG)
<android.media.tv.TvInputManager$1: void onTrackSelected(int,java.lang.String,int)> (LOG)
<android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,long)> (LOG)
<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)> (LOG)
<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)> (LOG)
<android.hardware.location.ContextHubClient: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)> (LOG)
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])> (LOG)
<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources)> (LOG)
<android.media.session.MediaSession: void notifyRemoteVolumeChanged(android.media.VolumeProvider)> (LOG)
<android.bluetooth.BluetoothGattServer$1: void onServiceAdded(int,android.bluetooth.BluetoothGattService)> (LOG)
<android.app.KeyguardManager: boolean setLock(int,byte[],int)> (LOG)
<android.util.Log: int println(int,java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.bluetooth.BluetoothHeadsetClient: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.view.contentcapture.ContentCaptureManager: void <init>(android.content.Context,android.view.contentcapture.IContentCaptureManager,android.content.ContentCaptureOptions)> (LOG)
<android.hardware.camera2.legacy.LegacyRequestMapper: void convertRequestMetadata(android.hardware.camera2.legacy.LegacyRequest)> (LOG)
<android.media.MediaCas$Session: void sendSessionEvent(int,int,byte[])> (LOG)
<android.hardware.radio.TunerAdapter: int setConfiguration(android.hardware.radio.RadioManager$BandConfig)> (LOG)
<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)> (LOG)
<android.hardware.SystemSensorManager$2: void onReceive(android.content.Context,android.content.Intent)> (LOG)
<android.view.autofill.AutofillManager: void onAuthenticationResult(int,android.content.Intent,android.view.View)> (LOG)
<android.util.Log: int wtf(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.tv.TvInputManager$Session: void setCaptionEnabled(boolean)> (LOG)
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)> (LOG)
<android.telephony.Rlog: int e(java.lang.String,java.lang.String)> (LOG)
<android.media.Metadata: boolean parse(android.os.Parcel)> (LOG)
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)> (LOG)
<android.widget.RemoteViews$SetRemoteViewsAdapterList: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (LOG)
<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)> (LOG)
<android.bluetooth.BluetoothA2dp: void setAvrcpAbsoluteVolume(int)> (LOG)
<android.bluetooth.BluetoothHidDevice: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingL2capOn(int,boolean,boolean)> (LOG)
<android.media.tv.TvInputManager$1: void onTracksChanged(java.util.List,int)> (LOG)
<android.util.Slog: int w(java.lang.String,java.lang.Throwable)> (LOG)
<android.telephony.ims.RcsUceAdapter: void setUceSettingEnabled(boolean)> (LOG)
<android.telephony.Rlog: int v(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void processRequestTriggers(android.hardware.camera2.CaptureRequest,android.hardware.Camera$Parameters)> (LOG)
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)> (LOG)
<android.util.Slog: int v(java.lang.String,java.lang.String)> (LOG)
<android.bluetooth.BluetoothAvrcpController: boolean setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings)> (LOG)
<android.util.Log: int e(java.lang.String,java.lang.String)> (LOG)
<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)> (LOG)
<android.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> (LOG)
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String)> (LOG)
<android.widget.RemoteViews$SetPendingIntentTemplate: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (LOG)
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])> (LOG)
<android.media.session.MediaSessionLegacyHelper: void addRccListener(android.app.PendingIntent,android.media.session.MediaSession$Callback)> (LOG)
<android.util.Log: int wtfStack(java.lang.String,java.lang.String)> (LOG)
<android.bluetooth.BluetoothMapClient: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)> (LOG)
<android.widget.RemoteViews: boolean startPendingIntent(android.view.View,android.app.PendingIntent,android.util.Pair)> (LOG)
<android.bluetooth.BluetoothManager: void <init>(android.content.Context)> (LOG)
<android.util.Slog: int i(java.lang.String,java.lang.String)> (LOG)
<android.os.GraphicsEnvironment: boolean setupAngle(android.content.Context,android.os.Bundle,android.content.pm.PackageManager,java.lang.String)> (LOG)
<android.telephony.Rlog: int v(java.lang.String,java.lang.String)> (LOG)
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)> (LOG)
<android.widget.AbsSpinner: void autofill(android.view.autofill.AutofillValue)> (LOG)
<android.bluetooth.BluetoothSap: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.util.Slog: int wtf(java.lang.String,java.lang.String)> (LOG)
<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)> (LOG)
<android.hardware.usb.UsbManager: void setPortRoles(android.hardware.usb.UsbPort,int,int)> (LOG)
<android.bluetooth.BluetoothHidHost: boolean setIdleTime(android.bluetooth.BluetoothDevice,byte)> (LOG)
<com.android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<com.android.telephony.Rlog: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)> (LOG)
<android.bluetooth.BluetoothPan: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.view.autofill.AutofillPopupWindow: void showAsDropDown(android.view.View,int,int,int)> (LOG)
<android.bluetooth.BluetoothPbap: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.bluetooth.BluetoothAdapter: boolean startLeScan(java.util.UUID[],android.bluetooth.BluetoothAdapter$LeScanCallback)> (LOG)
<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.MediaPlayer: void setDrmPropertyString(java.lang.String,java.lang.String)> (LOG)
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder jpegCaptured(long)> (LOG)
<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)> android.permission.STOP_APP_SWITCHES (LOG)
<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: void onScannerRegistered(int,int)> (LOG)
<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)> (LOG)
<android.net.nsd.NsdServiceInfo: void setTxtRecords(java.lang.String)> (LOG)
<android.security.net.config.NetworkSecurityConfigProvider: void handleNewApplication(android.content.Context)> (LOG)
<android.telephony.TelephonyManager: void setDataEnabled(int,boolean)> (LOG)
<android.bluetooth.BluetoothHidHost: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.os.BinderProxy$ProxyMap: void set(long,android.os.BinderProxy)> (LOG)
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureL2capOn(int)> (LOG)
<android.media.MediaRouter: void selectRouteStatic(int,android.media.MediaRouter$RouteInfo,boolean)> (LOG)
<android.media.AudioRecord: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int)> (LOG)
<android.app.WallpaperManager: int setResource(int,int)> (LOG)
<android.util.Slog: int d(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean)> (LOG)
<android.util.Log: int printlns(int,int,java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)> (LOG)
<android.bluetooth.BluetoothA2dp: void setCodecConfigPreference(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothCodecConfig)> (LOG)
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> (LOG)
<android.bluetooth.BluetoothHearingAid: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.os.RecoverySystem$5: void onReceive(android.content.Context,android.content.Intent)> (LOG)
<android.nfc.NfcActivityManager: void onActivityResumed(android.app.Activity)> (LOG)
<android.bluetooth.BluetoothHeadset: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<com.android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void executeMessage(android.os.Message)> (LOG)
<android.bluetooth.BluetoothAdapter: boolean setActiveDevice(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.view.SurfaceView: void lambda$updateSurfaceAlpha$1$SurfaceView(boolean,android.view.ViewRootImpl,android.view.Surface,float,long)> (LOG)
<android.print.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)> (LOG)
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)> (LOG)
<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.view.autofill.AutofillManager: void notifyValueChanged(android.view.View)> (LOG)
<android.util.Log: int d(java.lang.String,java.lang.String)> (LOG)
<android.telephony.Rlog: int println(int,java.lang.String,java.lang.String)> (LOG)
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)> (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.os.StrictMode$AndroidBlockGuardPolicy: void onThreadPolicyViolation(android.os.StrictMode$ViolationInfo)> (LOG)
<android.bluetooth.BluetoothMapClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.hardware.camera2.legacy.LegacyCameraDevice: int configureOutputs(android.util.SparseArray,boolean)> (LOG)
<android.hardware.radio.TunerAdapter: int setMute(boolean)> (LOG)
<android.hardware.camera2.impl.FrameNumberTracker: void updateTracker(long,boolean,int)> (LOG)
<android.print.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)> (LOG)
<android.media.AudioManager: void setAllowedCapturePolicy(int)> (LOG)
<android.media.session.MediaSessionLegacyHelper: void removeMediaButtonListener(android.app.PendingIntent)> (LOG)
<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.view.Choreographer: void doFrame(long,int)> (LOG)
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)> (LOG)
<android.bluetooth.BluetoothA2dpSink: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.media.session.MediaSessionLegacyHelper: void removeRccListener(android.app.PendingIntent)> (LOG)
<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)> (LOG)
<com.android.internal.util.AsyncService: int onStartCommand(android.content.Intent,int,int)> (LOG)
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)> (LOG)
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (LOG)
<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.view.autofill.AutofillManager: void setAugmentedAutofillWhitelist(java.util.Set,java.util.Set)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String)> (LOG)
<android.bluetooth.BluetoothHeadset: void setAudioRouteAllowed(boolean)> (LOG)
<android.hardware.camera2.legacy.CameraDeviceUserShim: void setCameraAudioRestriction(int)> (LOG)
<android.widget.RemoteViews$SetOnClickResponse: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (LOG)
<android.media.tv.TvInputManager$Session: void setSurface(android.view.Surface)> (LOG)
<android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> (LOG)
<com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Slog: int w(java.lang.String,java.lang.String)> (LOG)
<android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.bluetooth.BluetoothAvrcpController: void sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int)> (LOG)
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int,int)> (LOG)
<android.widget.CompoundButton: void autofill(android.view.autofill.AutofillValue)> (LOG)
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)> (LOG)
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.widget.SpellChecker$SpellParser: void parse(int,int)> (LOG)
<android.app.WallpaperManager: boolean setWallpaperComponent(android.content.ComponentName,int)> (LOG)
<android.os.RecoverySystem$4: void onReceive(android.content.Context,android.content.Intent)> (LOG)
<android.os.BugreportManager: void startBugreport(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.BugreportParams,java.util.concurrent.Executor,android.os.BugreportManager$BugreportCallback)> (LOG)
<android.bluetooth.BluetoothA2dp: boolean setActiveDevice(android.bluetooth.BluetoothDevice)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)> (LOG)
<android.webkit.WebViewFactory: int onWebViewProviderChanged(android.content.pm.PackageInfo)> (LOG)
<android.bluetooth.BluetoothHidDevice: boolean sendReport(android.bluetooth.BluetoothDevice,int,byte[])> (LOG)
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.AdvertisingSetCallback,android.os.Handler)> (LOG)
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])> (LOG)
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket accept(int)> (LOG)
<android.os.RecoverySystem: boolean wipeEuiccData(android.content.Context,java.lang.String)> (LOG)
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)> (LOG)
<android.telephony.Rlog: int d(java.lang.String,java.lang.String)> (LOG)
<android.filterpacks.videosrc.MediaSource$1: void onVideoSizeChanged(android.media.MediaPlayer,int,int)> (LOG)
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (LOG)
<android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)> (LOG)
<android.telephony.Rlog: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.tv.TvInputManager$Session: void setStreamVolume(float)> (LOG)
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> (LOG)
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)> android.permission.CAMERA android.permission.RECORD_AUDIO (LOG)
<android.bluetooth.BluetoothPbapClient: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)> (LOG)

SMS_MMS:
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateParts(android.net.Uri,com.google.android.mms.pdu.PduBody,java.util.HashMap)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)> android.permission.READ_SMS (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)> (SMS_MMS)
