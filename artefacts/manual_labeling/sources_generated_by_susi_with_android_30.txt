  
LOCATION_INFORMATION:  
<android.telephony.CellIdentityNr: android.telephony.CellLocation asCellLocation()>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<android.telephony.CellIdentityWcdma: android.telephony.CellLocation asCellLocation()>
<android.telephony.CellIdentityLte: android.telephony.CellLocation asCellLocation()>
<android.telephony.CellIdentityTdscdma: android.telephony.CellLocation asCellLocation()>
<android.telephony.CellIdentityCdma: android.telephony.CellLocation asCellLocation()>
<android.telephony.CellIdentityGsm: android.telephony.CellLocation asCellLocation()>
  
NETWORK_INFORMATION:  
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.lang.String toString()>
<android.telephony.CellSignalStrengthWcdma: java.lang.String toString()>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.widget.HorizontalScrollView$SavedState: java.lang.String toString()>
<com.android.internal.telephony.ISms$Default: java.lang.String getImsSmsFormatForSubscriber(int)>
<android.net.Uri$StringUri: java.lang.String toString()>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId(java.lang.String)>
<android.hardware.face.FaceManager: java.lang.String getAcquiredString(android.content.Context,int,int)>
<com.android.internal.database.SortCursor: java.lang.String getString(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSubscriptionCarrierName(int)>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context,int)>
<android.app.job.JobInfo: java.lang.String getPriorityString(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getTypeAllocationCodeForSlot(int)>
<android.text.TextUtils$Reverser: java.lang.String toString()>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String toString()>
<android.app.LoaderManagerImpl: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceSvn(java.lang.String,java.lang.String)>
<android.database.MatrixCursor: java.lang.String getString(int)>
<android.telephony.SubscriptionInfo: java.lang.String getCardString()>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.filterfw.core.FilterFunction: java.lang.String toString()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.android.internal.telephony.IPhoneStateListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId(java.lang.String)>
<android.widget.AbsListView$SavedState: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)>
<android.telephony.NetworkRegistrationInfo: java.lang.String lambda$toString$0(java.lang.Integer)>
<android.media.ExifInterface$ExifAttribute: java.lang.String toString()>
<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()>
<android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSimChallengeResponse(int,int,int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceId(java.lang.String)>
<com.android.internal.telephony.cdma.sms.UserData: byte[] stringToAscii(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaPrlVersion(int)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getRecipientAddress()>
<android.app.backup.IBackupManager$Default: java.lang.String getDestinationStringForUser(int,java.lang.String)>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getEsn(int)>
<android.hardware.display.BrightnessCorrection$ScaleAndTranslateLog: java.lang.String toString()>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1NumberForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$402(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$000(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.Uri$OpaqueUri: java.lang.String toString()>
<android.os.PersistableBundle: java.lang.String toString()>
<android.service.notification.ZenModeConfig: java.lang.String toString()>
<android.telephony.CellIdentityCdma: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getTransactionName(int)>
<android.hardware.cas.V1_2.ICas$Stub: java.lang.String toString()>
<android.content.RestrictionEntry: java.lang.String getSelectedString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getBoundImsServicePackage(int,boolean,int)>
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSimLocaleForSubscriber(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getManualNetworkSelectionPlmn(int)>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>
<com.android.internal.telephony.euicc.IEuiccController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.TextTrackCue: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailNumberForSubscriber(int,java.lang.String,java.lang.String)>
<android.telephony.ServiceState: java.lang.String rilServiceStateToString(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMmsUserAgent(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailAlphaTagForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getGroupIdLevel1ForSubscriber(int,java.lang.String,java.lang.String)>
<android.media.AudioHandle: java.lang.String toString()>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<android.app.Fragment: java.lang.String getString(int)>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>
<android.transition.Transition: java.lang.String toString(java.lang.String)>
<android.app.DownloadManager$CursorTranslator: java.lang.String getString(int)>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.telephony.SmsCbEtwsInfo: java.lang.String toString()>
<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.IccOpenLogicalChannelResponse: java.lang.String toString()>
<android.os.StrictMode$AndroidBlockGuardPolicy: java.lang.String toString()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)>
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: java.lang.String getDefaultCarrierServicePackageName()>
<android.telephony.DataConnectionRealTimeInfo: java.lang.String toString()>
<android.hardware.Sensor: java.lang.String getStringType()>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String createAppSpecificSmsTokenWithPackageInfo(int,java.lang.String,java.lang.String,android.app.PendingIntent)>
<android.media.TextTrackRegion: java.lang.String toString()>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.telephony.CellIdentityWcdma: java.lang.String getMncString()>
<android.telephony.CellIdentityLte: java.lang.String getMccString()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$500(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>
<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.String toString()>
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()>
<android.app.backup.BackupManager: java.lang.String getDestinationString(java.lang.String)>
<android.telephony.CellConfigLte: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSimLocaleForSubscriber(int)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ActivityThread$H: java.lang.String codeToString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getNaiForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimImpi(int)>
<com.android.internal.telephony.ITelephonyRegistry$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.ArrayMap: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getManualNetworkSelectionPlmn(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)>
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)>
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IMms$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ModemActivityInfo$TransmitPower: java.lang.String toString()>
<android.telephony.CarrierRestrictionRules: java.lang.String toString()>
<android.telephony.CellIdentity: java.lang.String getMccString()>
<android.util.SparseIntArray: java.lang.String toString()>
<android.content.pm.PackageManager: java.lang.String deleteStatusToString(int)>
<android.telephony.CallAttributes: java.lang.String toString()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$300(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<android.media.ExifInterface$Rational: java.lang.String toString()>
<android.util.proto.ProtoStream: java.lang.String getFieldTypeString(long)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag(java.lang.String,java.lang.String)>
<com.android.internal.telephony.IOns$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumber(java.lang.String)>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.SpannableStringInternal: java.lang.String toString()>
<android.telephony.ModemActivityInfo: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceIdForPhone(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>
<com.android.internal.widget.ILockSettings$Default: java.lang.String getString(java.lang.String,java.lang.String,int)>
<android.telephony.BarringInfo: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdnForSubscriber(int,java.lang.String,java.lang.String)>
<android.telephony.ModemInfo: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getEsn(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)>
<android.net.Uri: java.lang.String toSafeString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)>
<android.telephony.SubscriptionInfo: java.lang.String getMccString()>
<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>
<com.android.internal.telephony.IPhoneStateListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: int setImsProvisioningString(int,int,java.lang.String)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$102(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<android.telephony.PreciseCallState: java.lang.String toString()>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ServiceState: java.lang.String getRoamingLogString(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)>
<android.telephony.CellInfoNr: java.lang.String toString()>
<android.telephony.ims.aidl.IImsConfig$Default: java.lang.String getConfigString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.transition.Transition: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)>
<android.telephony.NetworkRegistrationInfo: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getAidForAppType(int,int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimIst(int)>
<android.app.VoiceInteractor$Request: java.lang.String toString()>
<android.telephony.VoiceSpecificRegistrationInfo: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumberWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IMms$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.SmsHeader: java.lang.String toString()>
<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getTypeAllocationCodeForSlot(int)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)>
<android.view.DisplayCutout$Bounds: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumberForSubscriber(int,java.lang.String,java.lang.String)>
<android.widget.CompoundButton$SavedState: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaPrlVersion(int)>
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityGsm: java.lang.String toString()>
<com.android.internal.telephony.euicc.IEuiccController$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$602(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<android.telephony.UiccAccessRule: java.lang.String toString()>
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaMdn(int)>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getSmscAddressFromIccEfForSubscriber(int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSubscriptionCarrierName(int)>
<com.android.internal.telephony.uicc.IccUtils: java.lang.String getDecimalSubstring(java.lang.String)>
<android.telephony.SignalStrength: java.lang.String toString()>
<android.view.contentcapture.ContentCaptureEvent: java.lang.String getTypeAsString(int)>
<android.app.ActivityThread$ActivityClientRecord: java.lang.String getStateString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberIdForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.OperatorInfo: java.lang.String toString()>
<android.telephony.SubscriptionPlan: java.lang.String toString()>
<android.media.MediaFormat: java.lang.String getString(java.lang.String,java.lang.String)>
<android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1AlphaTagForSubscriber(int,java.lang.String,java.lang.String)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.lang.String toString()>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<com.android.internal.telephony.INumberVerificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityNr: java.lang.String getMccString()>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.telephony.CellIdentityTdscdma: java.lang.String getMncString()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberIdWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>
<android.media.MediaPlayer: java.lang.String getDrmPropertyString(java.lang.String)>
<android.telephony.PreciseDataConnectionState: java.lang.String toString()>
<android.telephony.CallQuality: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceId(java.lang.String)>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String createAppSpecificSmsToken(int,java.lang.String,android.app.PendingIntent)>
<com.android.internal.telephony.Sms7BitEncodingTranslator: java.lang.String translate(java.lang.CharSequence,boolean)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi(int)>
<android.util.proto.EncodedBuffer: java.lang.String getDebugString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getGroupIdLevel1ForSubscriber(int,java.lang.String,java.lang.String)>
<android.telephony.CellInfoTdscdma: java.lang.String toString()>
<com.android.internal.util.SyncResultReceiver: java.lang.String getStringResult()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getImeiForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaMdn(int)>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: java.lang.String getTransactionName(int)>
<android.widget.ScrollView$SavedState: java.lang.String toString()>
<android.telephony.data.ApnSetting: java.lang.String getMvnoTypeStringFromInt(int)>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
<android.telephony.SmsCbMessage: java.lang.String toString()>
<com.android.internal.util.ConcurrentUtils$DirectExecutor: java.lang.String toString()>
<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>
<android.view.contentcapture.ContentCaptureHelper: java.lang.String getLoggingLevelAsString(int)>
<android.telephony.PhoneNumberRange: java.lang.String toString()>
<android.telephony.RadioAccessFamily: java.lang.String toString()>
<com.android.internal.util.StateMachine$SmHandler$StateInfo: java.lang.String toString()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getBoundImsServicePackage(int,boolean,int)>
<android.webkit.WebViewDelegate: java.lang.String getErrorString(android.content.Context,int)>
<android.print.PageRange: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.provider.DeviceConfig: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellInfoWcdma: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.CellNetworkScanResult: java.lang.String toString()>
<android.content.pm.ShortcutQueryWrapper: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IMms$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMmsUserAgent(int)>
<android.view.autofill.AutofillManager: java.lang.String getSmartSuggestionModeToString(int)>
<android.telephony.PhoneCapability: java.lang.String toString()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.lang.String getSubscriptionProperty(int,java.lang.String,java.lang.String,java.lang.String)>
<android.view.textclassifier.TextClassifierEvent: java.lang.String toString()>
<android.telephony.CellInfoCdma: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)>
<android.telephony.DataSpecificRegistrationInfo: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)>
<android.filterfw.core.FilterPort: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.IOns$Stub: java.lang.String getTransactionName(int)>
<android.os.Bundle: java.lang.String toString()>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyManager: java.lang.String dataStateToString(int)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getAidForAppType(int,int)>
<android.view.contentcapture.ContentCaptureSession: java.lang.String getStateAsString(int)>
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: java.lang.String getConfigString(int)>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$202(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvnUsingSubId(int,java.lang.String,java.lang.String)>
<android.text.Layout$Ellipsizer: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain(int)>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationString(java.lang.String)>
<android.hardware.cas.V1_0.ICasListener$Stub: java.lang.String toString()>
<android.widget.SearchView$SavedState: java.lang.String toString()>
<android.content.pm.PackageManager: java.lang.String permissionFlagToString(int)>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.provider.Settings$Config: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.String toString()>
<android.media.ExternalRingtonesCursorWrapper: java.lang.String getString(int)>
<android.widget.TextView$CharWrapper: java.lang.String toString()>
<android.text.TextUtils: java.lang.String getEllipsisString(android.text.TextUtils$TruncateAt)>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)>
<android.hardware.fingerprint.FingerprintManager: java.lang.String getErrorString(android.content.Context,int,int)>
<com.android.internal.telephony.ITelephonyRegistry$Stub: java.lang.String getTransactionName(int)>
<android.widget.AdapterViewAnimator$SavedState: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IIntegerConsumer$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSimChallengeResponse(int,int,int,java.lang.String)>
<android.transition.TransitionSet: java.lang.String toString(java.lang.String)>
<android.app.ActivityThread: java.lang.String getStringCoreSetting(java.lang.String,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceId(java.lang.String)>
<android.telephony.NetworkRegistrationInfo: java.lang.String domainToString(int)>
<android.content.pm.PackageManager: java.lang.String installStatusToString(int)>
<android.util.SparseArray: java.lang.String toString()>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
<android.provider.DeviceConfig$Properties: java.lang.String getString(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getImsProvisioningString(int,int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.lang.String getEid(int,java.lang.String)>
<android.view.contentcapture.ContentCaptureSession: java.lang.String getFlushReasonAsString(int)>
<com.android.internal.telephony.IIntegerConsumer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ISub$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.Signature: java.lang.String toCharsString()>
<android.hardware.cas.V1_2.ICasListener$Stub: java.lang.String toString()>
<com.android.internal.view.InputBindResult: java.lang.String getResultString()>
<android.telephony.NetworkRegistrationInfo: java.lang.String serviceTypeToString(int)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>
<android.telephony.SubscriptionInfo: java.lang.String toString()>
<android.telephony.CbGeoUtils$Circle: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getMsisdnForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>
<android.util.SparseBooleanArray: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceIdForPhone(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimDomain(int)>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISms$Default: java.lang.String getSmscAddressFromIccEfForSubscriber(int,java.lang.String)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$302(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getManufacturerCodeForSlot(int)>
<android.database.CursorWrapper: java.lang.String getString(int)>
<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()>
<android.hardware.radio.RadioMetadata: java.lang.String getString(java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SmsCbCmasInfo: java.lang.String toString()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SmsCbLocation: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCurrentPackageName()>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int,int)>
<android.hardware.cas.V1_1.ICasListener$Stub: java.lang.String toString()>
<android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int,int,int,int)>
<com.android.internal.telephony.ICarrierConfigLoader$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellIdentityGsm: java.lang.String getMccString()>
<android.telephony.CbGeoUtils: java.lang.String lambda$encodeGeometriesToString$0(android.telephony.CbGeoUtils$Geometry)>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>
<android.util.apk.WrappedX509Certificate: java.lang.String toString()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String getApplicationName(android.content.Context)>
<android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>
<android.util.LongSparseLongArray: java.lang.String toString()>
<android.telephony.CellIdentityGsm: java.lang.String getMncString()>
<com.android.internal.telephony.ISms$Default: java.lang.String createAppSpecificSmsTokenWithPackageInfo(int,java.lang.String,java.lang.String,android.app.PendingIntent)>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: java.lang.String getTransactionName(int)>
<android.view.contentcapture.ContentCaptureHelper: java.lang.String getSanitizedString(java.lang.CharSequence)>
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getNaiForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)>
<com.android.internal.telephony.IBooleanConsumer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.cas.V1_0.ICas$Stub: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.contentcapture.ContentCaptureSession: java.lang.String toString()>
<android.telephony.CellInfoGsm: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getManufacturerCodeForSlot(int)>
<com.android.internal.telephony.INumberVerificationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ISms$Default: java.lang.String createAppSpecificSmsToken(int,java.lang.String,android.app.PendingIntent)>
<android.app.PropertyInvalidatedCache: java.lang.String queryToString(java.lang.Object)>
<com.android.internal.telephony.IOns$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.CheckedTextView$SavedState: java.lang.String toString()>
<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.util.function.pooled.ArgumentPlaceholder: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getImeiForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISms$Stub: java.lang.String getDefaultTransactionName(int)>
<android.internal.hidl.base.V1_0.IBase$Stub: java.lang.String toString()>
<android.telephony.CellIdentityWcdma: java.lang.String toString()>
<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String nvReadItem(int)>
<android.telephony.ImsiEncryptionInfo: java.lang.String toString()>
<android.accounts.Account: java.lang.String toSafeString()>
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: java.lang.String toString()>
<android.telephony.CellSignalStrengthTdscdma: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMmsUAProfUrl(int)>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)>
<android.telephony.CellIdentityTdscdma: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getNetworkCountryIsoForPhone(int)>
<android.util.LongSparseArray: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)>
<android.os.Bundle: java.lang.String toShortString()>
<android.telephony.CellIdentityNr: java.lang.String toString()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1NumberForSubscriber(int,java.lang.String,java.lang.String)>
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberIdForSubscriber(int,java.lang.String,java.lang.String)>
<android.net.LocalSocketImpl: java.lang.String toString()>
<com.android.internal.telephony.ISub$Default: java.lang.String getSubscriptionProperty(int,java.lang.String,java.lang.String,java.lang.String)>
<android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>
<android.content.res.AssetManager: java.lang.String getOverlayablesToString(java.lang.String)>
<android.telephony.CbGeoUtils$Polygon: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellSignalStrengthNr: java.lang.String toString()>
<android.view.inputmethod.InputConnectionInspector: java.lang.String getMissingMethodFlagsAsString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getSubscriberId(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getSubscriptionSpecificCarrierName(int)>
<android.telephony.LteVopsSupportInfo: java.lang.String toString()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailNumber(java.lang.String,java.lang.String)>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getMsisdn(java.lang.String,java.lang.String)>
<com.android.internal.telephony.IBooleanConsumer$Stub: java.lang.String getTransactionName(int)>
<android.util.proto.ProtoStream: java.lang.String getWireTypeString(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)>
<android.telephony.CbGeoUtils$LatLng: java.lang.String toString()>
<android.net.PlatformVpnProfile: java.lang.String getTypeString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaMin(int)>
<android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>
<android.telephony.TelephonyDisplayInfo: java.lang.String overrideNetworkTypeToString(int)>
<android.telephony.CellInfoLte: java.lang.String toString()>
<android.util.SparseLongArray: java.lang.String toString()>
<android.telephony.CellInfo: java.lang.String toString()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<com.android.internal.telephony.ITelephony$Default: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.telephony.uicc.IccUtils: byte[] hexStringToBytes(java.lang.String)>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationStringForUser(int,java.lang.String)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$600(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<android.telephony.CellIdentityNr: java.lang.String getMncString()>
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)>
<android.telephony.SubscriptionInfo: java.lang.String getMncString()>
<android.print.PrintJobInfo: java.lang.String getAdvancedStringOption(java.lang.String)>
<android.hardware.fingerprint.FingerprintManager: java.lang.String getAcquiredString(android.content.Context,int,int)>
<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.String toString()>
<android.telephony.TelephonyDisplayInfo: java.lang.String toString()>
<com.android.internal.util.StateMachine: java.lang.String getWhatToString(int)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getHistoryTagPoolString(int)>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.NetworkKey: java.lang.String toString()>
<com.android.internal.telephony.IIntegerConsumer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.Metadata: java.lang.String getString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getDeviceSvnUsingSubId(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberIdWithFeature(java.lang.String,java.lang.String)>
<android.webkit.JsPromptResult: java.lang.String getStringResult()>
<android.service.notification.ZenModeConfig$ZenRule: java.lang.String toString()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$200(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<com.android.internal.telephony.ITelephony$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyHistogram: java.lang.String toString()>
<android.os.PersistableBundle: java.lang.String toShortString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$100(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$502(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)>
<android.util.Rational: java.lang.String toString()>
<android.content.Intent: java.lang.String getDataString()>
<android.widget.AbsSpinner$SavedState: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)>
<android.app.backup.IBackupManager$Default: java.lang.String getDestinationString(java.lang.String)>
<android.net.Uri$HierarchicalUri: java.lang.String toString()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.UiccAccessRule: java.lang.String getCertificateHexString()>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.telephony.PinResult: java.lang.String toString()>
<android.content.Context: java.lang.String getString(int)>
<android.telephony.CbGeoUtils: java.lang.String encodeGeometriesToString(java.util.List)>
<com.android.internal.telephony.ISms$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumberWithFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getImsSmsFormatForSubscriber(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIsimIst(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getIccSerialNumberForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM8bit(int)>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.TextView$TextAppearanceAttributes: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getMmsUAProfUrl(int)>
<android.telephony.ClosedSubscriberGroupInfo: java.lang.String toString()>
<android.telephony.CellIdentityTdscdma: java.lang.String getMccString()>
<android.view.Choreographer$3: java.lang.String toString()>
<android.view.inputmethod.SparseRectFArray: java.lang.String toString()>
<android.telephony.CallForwardingInfo: java.lang.String toString()>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1Number(java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.VisualVoicemailSmsFilterSettings: java.lang.String toString()>
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumberForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.CellBroadcastUtils: java.lang.String getDefaultCellBroadcastReceiverPackageName(android.content.Context)>
<android.telephony.data.ApnSetting: java.lang.String getProxyAddressAsString()>
<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.android.internal.telephony.ICarrierConfigLoader$Stub: java.lang.String getTransactionName(int)>
<android.telephony.data.ApnSetting: java.lang.String getProtocolStringFromInt(int)>
<android.telephony.ServiceState: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTagForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.UiccCardInfo: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getNetworkCountryIsoForPhone(int)>
<android.view.textclassifier.TextClassifier$1: java.lang.String toString()>
<android.filterfw.core.Filter: java.lang.String toString()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getLine1AlphaTag(java.lang.String,java.lang.String)>
<com.android.internal.telephony.INumberVerificationCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellIdentityWcdma: java.lang.String getMccString()>
<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String toString()>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String getVoiceMailAlphaTag(java.lang.String,java.lang.String)>
<android.text.TextUtils$StringWithRemovedChars: java.lang.String toString()>
<android.telephony.data.ApnSetting: java.lang.String getMmsProxyAddressAsString()>
<com.android.internal.telephony.euicc.IEuiccController$Default: java.lang.String getEid(int,java.lang.String)>
<android.telephony.DataFailCause: java.lang.String toString(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber(java.lang.String)>
<com.android.internal.telephony.IBooleanConsumer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: java.lang.String toString()>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.ShortcutInfo: java.lang.String getDisabledReasonDebugString(int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getSubscriptionSpecificCarrierName(int)>
<android.animation.AnimatorSet$AnimationEvent: java.lang.String toString()>
<android.util.ArraySet: java.lang.String toString()>
<android.telephony.CellIdentityLte: java.lang.String getMncString()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$002(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellSignalStrengthLte: java.lang.String toString()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])>
<android.telephony.CellIdentity: java.lang.String getMncString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getImsProvisioningString(int,int)>
<android.os.ParcelFileDescriptor$Status: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getCdmaMin(int)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String toString()>
<android.util.KeyValueListParser: java.lang.String getString(java.lang.String,java.lang.String)>
<android.telephony.ClientRequestStats: java.lang.String toString()>
<android.telephony.UiccSlotInfo: java.lang.String toString()>
<com.android.internal.telephony.ISub$Stub: java.lang.String getTransactionName(int)>
<android.graphics.ColorSpace: java.lang.String toString()>
<android.telephony.AvailableNetworkInfo: java.lang.String toString()>
<android.graphics.drawable.Icon: java.lang.String getUriString()>
<android.telephony.data.ApnSetting: java.lang.String getApnTypesStringFromBitmask(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTagForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String nvReadItem(int)>
<android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<android.accounts.Account: java.lang.String toString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCurrentPackageName()>
<com.android.internal.telephony.ITelephony$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.ICarrierConfigLoader$Default: java.lang.String getDefaultCarrierServicePackageName()>
<android.telephony.ServiceState: java.lang.String roamingTypeToString(int)>
<android.webkit.LegacyErrorStrings: java.lang.String getString(int,android.content.Context)>
<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>
<android.util.proto.ProtoStream: java.lang.String getFieldCountString(long)>
<android.hardware.cas.V1_1.ICas$Stub: java.lang.String toString()>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()>
<android.view.textclassifier.TextClassifier$Utils: java.lang.String getSubString(java.lang.String,int,int,int)>
<android.telephony.CellIdentityLte: java.lang.String toString()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>
<android.telephony.NetworkRegistrationInfo: java.lang.String registrationStateToString(int)>
<android.hardware.camera2.utils.TypeReference: java.lang.String toString()>
  
ACCOUNT_INFORMATION:  
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture finishSessionAsUser(android.os.Bundle,android.app.Activity,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager$22: java.lang.Boolean bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>
<android.accounts.IAccountManager$Default: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult()>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPreviousName(android.accounts.Account)>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.accounts.AccountManager: int getAccountVisibility(android.accounts.Account,java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)>
<android.accounts.AccountManager: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>
<android.accounts.AccountManager: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)>
<android.accounts.IAccountManager$Default: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture copyAccountToUser(android.accounts.Account,android.os.UserHandle,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>
<android.accounts.AccountManager: java.util.HashMap access$200(android.accounts.AccountManager)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.accounts.AccountManager$5: java.lang.Boolean bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager$AmsTask$1: android.os.Bundle call()>
<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.accounts.IAccountManager$Default: java.lang.String getPreviousName(android.accounts.Account)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture isCredentialsUpdateSuggested(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.IAccountManager$Default: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)>
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int access$1502(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,int)>
<android.accounts.IAccountManager$Default: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager$BaseFutureTask$1: java.lang.Object call()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: android.os.Handler access$900(android.accounts.AccountManager)>
<android.accounts.AccountManager$11: java.lang.Boolean bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager$1: java.lang.Object bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager: java.util.HashMap access$300(android.accounts.AccountManager)>
<android.accounts.AccountManager$3: java.lang.Object bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture finishSession(android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.content.Context access$100(android.accounts.AccountManager)>
<android.accounts.AccountManager: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>
<android.accounts.AccountManager$4: android.accounts.Account bundleToResult(android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.IAccountManager$Default: java.lang.String getPassword(android.accounts.Account)>
<android.accounts.IAccountManager$Stub$Proxy: int getAccountVisibility(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: java.lang.Exception access$700(android.accounts.AccountManager,int,java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startUpdateCredentialsSession(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypesAsUser(int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture startAddAccountSession(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>
<android.accounts.IAccountManager$Default: int getAccountVisibility(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager$2: java.lang.Boolean bundleToResult(android.os.Bundle)>
  
BLUETOOTH_INFORMATION:  
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig getCodecConfig()>
<android.bluetooth.IBluetoothSocketManager$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Default: int getProfileConnectionState(int)>
<android.bluetooth.IBluetooth$Default: java.lang.String getAddress()>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
<android.bluetooth.le.ScanResult: int hashCode()>
<android.bluetooth.le.ScanRecord: android.util.SparseArray getManufacturerSpecificData()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>
<android.bluetooth.IBluetoothCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.bluetooth.IBluetoothStateChangeCallback asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothHeadsetClientCall: long getCreationElapsedMilli()>
<android.bluetooth.IBluetoothSap$Stub: android.bluetooth.IBluetoothSap getDefaultImpl()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothHeadset$Default: android.os.IBinder asBinder()>
<android.bluetooth.le.ScanResult: int getDataStatus()>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothA2dpSink$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID,int)>
<android.bluetooth.BluetoothA2dp$1: android.bluetooth.IBluetoothA2dp getServiceInterface(android.os.IBinder)>
<android.bluetooth.BluetoothGattService: int getInstanceId()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLeCodedPhySupported()>
<android.bluetooth.IBluetoothAvrcpController$Stub: android.bluetooth.IBluetoothAvrcpController getDefaultImpl()>
<android.bluetooth.IBluetoothGattServerCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isHearingAidProfileSupported()>
<android.bluetooth.BluetoothInputStream: int available()>
<android.bluetooth.IBluetoothAvrcpController$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothAdapter: int getLeIoCapability()>
<android.bluetooth.BluetoothClass: int hashCode()>
<android.bluetooth.IBluetoothGatt$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothMap$Stub: android.bluetooth.IBluetoothMap asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHidDevice$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothPbapClient$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getActiveDevices()>
<android.bluetooth.BluetoothAudioConfig: int describeContents()>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getIoCapability()>
<android.bluetooth.BluetoothA2dpSink: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean isAvrcpAbsoluteVolumeSupported()>
<android.bluetooth.UidTraffic: int getUid()>
<android.bluetooth.le.ScanSettings: int getMatchMode()>
<android.bluetooth.IBluetoothMap$Default: int getState()>
<android.bluetooth.BluetoothDevice: int getMessageAccessPermission()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteType(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothA2dp$Default: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
<android.bluetooth.le.IAdvertisingSetCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.le.IAdvertisingSetCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.bluetooth.IBluetoothGattServerCallback asInterface(android.os.IBinder)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getBatteryLevel(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerEnergyUsed()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.bluetooth.BluetoothGattServer: java.util.List getServices()>
<android.bluetooth.IBluetoothA2dp$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific3()>
<android.bluetooth.OobData: byte[] getLeBluetoothDeviceAddress()>
<android.bluetooth.le.IScannerCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothA2dp: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.IBluetoothPan$Stub: android.bluetooth.IBluetoothPan asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHidDevice$Stub: android.bluetooth.IBluetoothHidDevice asInterface(android.os.IBinder)>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattCharacteristic getCharacteristicById(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothHidHost$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothHidHost: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMapClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter$4: java.lang.String queryToString(java.lang.Object)>
<android.bluetooth.BluetoothClass: int describeContents()>
<android.bluetooth.le.AdvertiseData: int describeContents()>
<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)>
<android.bluetooth.IBluetoothHearingAid$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothActivityEnergyInfo getControllerActivityEnergyInfo(int)>
<android.bluetooth.BluetoothHidHost: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.UidTraffic: long getTxBytes()>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothCodecConfig: int getChannelMode()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()>
<android.bluetooth.IBluetoothGattCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.le.ScanFilter: int getManufacturerId()>
<android.bluetooth.BluetoothPbap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothMap$Stub: android.bluetooth.IBluetoothMap getDefaultImpl()>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattDescriptor: int getInstanceId()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothHearingAid: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManagerCallback$Stub: android.bluetooth.IBluetoothManagerCallback asInterface(android.os.IBinder)>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.bluetooth.le.IPeriodicAdvertisingCallback getDefaultImpl()>
<android.bluetooth.IBluetooth$Default: java.util.List getMostRecentlyConnectedDevices()>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>
<android.bluetooth.le.AdvertisingSetParameters: int getTxPowerLevel()>
<android.bluetooth.IBluetoothHidHost$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Default: int getLeMaximumAdvertisingDataLength()>
<android.bluetooth.IBluetoothSap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.BluetoothInputStream: int read()>
<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothClass: int getClassOfDevice()>
<android.bluetooth.BluetoothProfileConnector: java.lang.Object getService()>
<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.IBluetooth$Default: android.os.ParcelUuid[] getUuids()>
<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.IBluetoothPbap getDefaultImpl()>
<android.bluetooth.BluetoothAudioConfig: int getAudioFormat()>
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.bluetooth.IBluetoothStateChangeCallback getDefaultImpl()>
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.OobData: byte[] getLeSecureConnectionsConfirmation()>
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()>
<android.bluetooth.BluetoothDevice: boolean isBondingInitiatedLocally()>
<android.bluetooth.BluetoothPbapClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHearingAid$1: android.bluetooth.IBluetoothHearingAid getServiceInterface(android.os.IBinder)>
<android.bluetooth.BluetoothHeadset: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: int getIoCapability()>
<android.bluetooth.BluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetClient$Default: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothHearingAid: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothDevice$3: java.lang.Integer recompute(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGatt: java.util.List getServices()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: android.bluetooth.IBluetoothGatt getBluetoothGatt()>
<android.bluetooth.IBluetoothMetadataListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothHeadsetClientCall: int getState()>
<android.bluetooth.BluetoothMapClient$1: android.bluetooth.IBluetoothMapClient getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothA2dpSink$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothCallback$Stub: android.bluetooth.IBluetoothCallback getDefaultImpl()>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothA2dpSink: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHidHost: boolean getIdleTime(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMapClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getName()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.bluetooth.BluetoothDevice: int describeContents()>
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.IScannerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothMap$Default: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>
<android.bluetooth.IBluetoothMapClient$Stub: android.bluetooth.IBluetoothMapClient asInterface(android.os.IBinder)>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattDescriptor getDescriptorByHandle(int)>
<android.bluetooth.IBluetooth$Default: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetClient$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothA2dpSink: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.AdvertiseData: boolean getIncludeTxPowerLevel()>
<android.bluetooth.IBluetoothA2dp$Default: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.IBluetoothA2dp$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadset$Default: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.BluetoothMapClient: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isOffloadedScanBatchingSupported()>
<android.bluetooth.IBluetoothMap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothGattServerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothGattServerCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.ScanRecord: byte[] getBytes()>
<android.bluetooth.IBluetoothGatt$Stub: android.bluetooth.IBluetoothGatt getDefaultImpl()>
<android.bluetooth.le.ScanSettings: int getScanResultType()>
<android.bluetooth.IBluetoothSocketManager$Stub: android.bluetooth.IBluetoothSocketManager getDefaultImpl()>
<android.bluetooth.IBluetoothGattCallback$Stub: android.bluetooth.IBluetoothGattCallback asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getLeMaximumAdvertisingDataLength()>
<android.bluetooth.BluetoothPan: boolean isTetheringOn()>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
<android.bluetooth.BluetoothSap: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothActivityEnergyInfo: android.bluetooth.UidTraffic[] getUidTraffic()>
<android.bluetooth.le.AdvertisingSetParameters: int describeContents()>
<android.bluetooth.IBluetoothA2dpSink$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
<android.bluetooth.le.AdvertiseData: int hashCode()>
<android.bluetooth.IBluetoothPbap$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadset$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothPbapClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.AdvertisingSet: int getAdvertiserId()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getSimAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getTokenBucketSize()>
<android.bluetooth.IBluetoothAvrcpController$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothSap$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter$4: java.lang.Integer recompute(java.lang.Integer)>
<android.bluetooth.UidTraffic: int describeContents()>
<android.bluetooth.le.ScanResult: int getPeriodicAdvertisingInterval()>
<android.bluetooth.BluetoothHidDevice: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothSap: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothServerSocket: int getPsm()>
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSocketManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.ScanRecord: int getTxPowerLevel()>
<android.bluetooth.BluetoothPbap: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothPbapClient$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothGatt$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothAudioConfig: int getSampleRate()>
<android.bluetooth.le.AdvertisingSetParameters: int getSecondaryPhy()>
<android.bluetooth.IBluetoothMap$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerTxTimeMillis()>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)>
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHearingAid: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetooth$Stub$Proxy: long getSupportedProfiles()>
<android.bluetooth.IBluetoothPbap$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothMapClient$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Default: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothSap$1: android.bluetooth.IBluetoothSap getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHeadsetClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHearingAid: long getHiSyncId(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMap: int getState()>
<android.bluetooth.IBluetoothSap$Default: int getState()>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHidHost$Stub: android.bluetooth.IBluetoothHidHost getDefaultImpl()>
<android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isDiscovering()>
<android.bluetooth.le.ScanFilter: byte[] getServiceDataMask()>
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub: android.bluetooth.IBluetoothHearingAid getDefaultImpl()>
<android.bluetooth.IBluetoothMapClient$Stub: android.bluetooth.IBluetoothMapClient getDefaultImpl()>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getTokenRate()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getAddress()>
<android.bluetooth.IBluetoothMapClient$Default: int getSupportedFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothA2dp$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()>
<android.bluetooth.BluetoothMap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMetadataListener$Stub: android.bluetooth.IBluetoothMetadataListener getDefaultImpl()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<android.bluetooth.le.PeriodicAdvertisingParameters: int describeContents()>
<android.bluetooth.BluetoothAdapter: int getMaxConnectedAudioDevices()>
<android.bluetooth.le.AdvertiseSettings: int describeContents()>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: byte[] getDescriptors()>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.AdvertisingSetParameters: int getInterval()>
<android.bluetooth.IBluetooth$Default: android.bluetooth.IBluetoothSocketManager getSocketManager()>
<android.bluetooth.IBluetoothPbapClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothPan$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.IScannerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean getSilenceMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dpSink$Default: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: int getState()>
<android.bluetooth.IBluetoothA2dpSink$Stub: android.bluetooth.IBluetoothA2dpSink getDefaultImpl()>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattCharacteristic getCharacteristicByHandle(int)>
<android.bluetooth.le.AdvertiseData: java.util.Map getServiceData()>
<android.bluetooth.IBluetoothMap$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
<android.bluetooth.BluetoothGattServer: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.PeriodicAdvertisingReport: long getTimestampNanos()>
<android.bluetooth.IBluetooth$Default: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMap: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuid()>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManagerCallback$Stub: android.bluetooth.IBluetoothManagerCallback getDefaultImpl()>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.bluetooth.le.IPeriodicAdvertisingCallback asInterface(android.os.IBinder)>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.le.ScanResult: int getAdvertisingSid()>
<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHidDevice$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp getDefaultImpl()>
<android.bluetooth.IBluetoothPbapClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.PeriodicAdvertisingReport: int getTxPower()>
<android.bluetooth.IBluetoothManager$Default: android.bluetooth.IBluetoothGatt getBluetoothGatt()>
<android.bluetooth.BluetoothDevice: int hashCode()>
<android.bluetooth.IBluetoothGattServerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHeadset$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothDevice: int getBondState()>
<android.bluetooth.BluetoothSocket: int getConnectionType()>
<android.bluetooth.IBluetoothStateChangeCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()>
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerRxTimeMillis()>
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.bluetooth.IBluetoothGattServerCallback getDefaultImpl()>
<android.bluetooth.BluetoothHidHost: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothPbap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothDevice: int getPhonebookAccessPermission()>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>
<android.bluetooth.BluetoothSocket: int getMaxTransmitPacketSize()>
<android.bluetooth.BluetoothHeadset: boolean isAudioOn()>
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothHidDevice: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.le.ScanResult: int getSecondaryPhy()>
<android.bluetooth.BluetoothAdapter: int getLeState()>
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()>
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()>
<android.bluetooth.IBluetoothHidHost$Stub: android.bluetooth.IBluetoothHidHost asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothA2dpSink$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothCallback$Stub: android.bluetooth.IBluetoothCallback asInterface(android.os.IBinder)>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getDescription()>
<android.bluetooth.IBluetoothGatt$Stub$Proxy: int numHwTrackFiltersAvailable()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothPan$Stub: android.bluetooth.IBluetoothPan getDefaultImpl()>
<android.bluetooth.IBluetoothCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothHidHost: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.bluetooth.IBluetooth$Default: long getSupportedProfiles()>
<android.bluetooth.BluetoothProfileConnector: int access$500(android.bluetooth.BluetoothProfileConnector)>
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothDevice: int getBatteryLevel()>
<android.bluetooth.BluetoothHidHost: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.IScannerCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMetadataListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDevice$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothSap: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothA2dpSink: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isMultiAdvertisementSupported()>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()>
<android.bluetooth.IBluetoothPbap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothSocket: int write(byte[],int,int)>
<android.bluetooth.IBluetoothHidHost$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.ScanResult: int getRssi()>
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()>
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.le.PeriodicAdvertisingParameters: boolean getIncludeTxPower()>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)>
<android.bluetooth.IBluetooth$Default: java.lang.String getName()>
<android.bluetooth.IBluetoothGattCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothGattService: int getHandles()>
<android.bluetooth.BluetoothA2dp: int isOptionalCodecsSupported(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanSettings: int getCallbackType()>
<android.bluetooth.IBluetoothHearingAid$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getState()>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothMetadataListener$Stub: android.bluetooth.IBluetoothMetadataListener asInterface(android.os.IBinder)>
<android.bluetooth.le.ScanSettings: int getPhy()>
<android.bluetooth.BluetoothPbapClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getAdapterConnectionState()>
<android.bluetooth.BluetoothPbapClient$1: android.bluetooth.IBluetoothPbapClient getServiceInterface(android.os.IBinder)>
<android.bluetooth.le.PeriodicAdvertisingReport: android.bluetooth.le.ScanRecord getData()>
<android.bluetooth.BluetoothAudioConfig: int hashCode()>
<android.bluetooth.IBluetoothSocketManager$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothPbapClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHearingAid: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothManagerCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHearingAid$Stub: android.bluetooth.IBluetoothHearingAid asInterface(android.os.IBinder)>
<android.bluetooth.le.ScanSettings: int describeContents()>
<android.bluetooth.IBluetoothHeadsetClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothHidDevice$Stub: android.bluetooth.IBluetoothHidDevice getDefaultImpl()>
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific1()>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedScanBatchingSupported()>
<android.bluetooth.IBluetooth$Default: int getRemoteClass(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMapClient$Default: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: long getHiSyncId(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothSocketManager$Stub: android.bluetooth.IBluetoothSocketManager asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothHidDevice$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothA2dpSink$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.ScanSettings: int getNumOfMatches()>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceAddress()>
<android.bluetooth.IBluetoothPan$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothSap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.UidTraffic: long getRxBytes()>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getSupportedFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothPan$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDeviceCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.le.PeriodicAdvertisingReport: int getSyncHandle()>
<android.bluetooth.IBluetoothA2dpSink$Stub: android.bluetooth.IBluetoothA2dpSink asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothAdapter: java.util.List getSupportedProfiles()>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothSap$Default: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.BluetoothGattDescriptor: int describeContents()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getLatency()>
<android.bluetooth.BluetoothHeadsetClient$1: android.bluetooth.IBluetoothHeadsetClient getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothDevice[] getBondedDevices()>
<android.bluetooth.IBluetooth$Default: int getAdapterConnectionState()>
<android.bluetooth.BluetoothCodecConfig: int getCodecPriority()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuid()>
<android.bluetooth.BluetoothCodecConfig: int getBitsPerSample()>
<android.bluetooth.IBluetoothSap$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHidDevice$1: android.bluetooth.IBluetoothHidDevice getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothAvrcpController$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothGatt$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.le.PeriodicAdvertisingParameters: int getInterval()>
<android.bluetooth.IBluetoothManager$Default: java.lang.String getAddress()>
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.OobData: int describeContents()>
<android.bluetooth.BluetoothAdapter: android.util.Pair readOutOfBandData()>
<android.bluetooth.OobData: byte[] getLeSecureConnectionsRandom()>
<android.bluetooth.IBluetoothHearingAid$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.IAdvertisingSetCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothHidHost: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothGattService: int getType()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getProfileConnectionState(int)>
<android.bluetooth.BluetoothManager: java.util.List getDevicesMatchingConnectionStates(int,int[])>
<android.bluetooth.le.IScannerCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothA2dpSink: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.IBluetoothPbap asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothGattCallback$Stub: android.bluetooth.IBluetoothGattCallback getDefaultImpl()>
<android.bluetooth.IBluetoothGatt$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothAdapter: int getScanMode()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(android.bluetooth.BluetoothDevice,java.util.UUID,int)>
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()>
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetooth$Default: int getRemoteType(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: boolean isLe2MPhySupported()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.PeriodicAdvertisingManager getPeriodicAdvertisingManager()>
<android.bluetooth.BluetoothAvrcpController: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: int getLeIoCapability()>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID,int,int)>
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getState()>
<android.bluetooth.IBluetoothMap$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHidDevice$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothA2dpSink: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: int getBatteryLevel(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.PeriodicAdvertisingReport: int describeContents()>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothStateChangeCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothMetadataListener$Default: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.bluetooth.le.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)>
<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerIdleTimeMillis()>
<android.bluetooth.IBluetoothHidDevice$Default: java.lang.String getUserAppName()>
<android.bluetooth.IBluetoothManager$Default: java.util.List getSystemConfigEnabledProfilesForPackage(java.lang.String)>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: int describeContents()>
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothCodecConfig: int hashCode()>
<android.bluetooth.BluetoothAdapter: boolean isLePeriodicAdvertisingSupported()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig[] getCodecsSelectableCapabilities()>
<android.bluetooth.BluetoothAdapter: int getConnectionState()>
<android.bluetooth.le.AdvertiseSettings: int getMode()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattDescriptor getDescriptorById(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.BluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanResult: int describeContents()>
<android.bluetooth.le.ScanSettings: boolean getLegacy()>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
<android.bluetooth.BluetoothHeadsetClientCall: java.lang.String getNumber()>
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()>
<android.bluetooth.IBluetoothHeadset$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothClass: byte[] getClassOfDeviceBytes()>
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.bluetooth.IBluetoothHeadsetClient getDefaultImpl()>
<android.bluetooth.BluetoothHeadset: boolean isInbandRingingEnabled()>
<android.bluetooth.BluetoothPbapClient: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHeadset$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: java.util.List getActiveDevices()>
<android.bluetooth.BluetoothAvrcpPlayerSettings: int getSettings()>
<android.bluetooth.IBluetoothHidHost$Default: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattIncludedService: int getType()>
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.util.List getSystemConfigEnabledProfilesForPackage(java.lang.String)>
<android.bluetooth.IBluetoothManager$Stub$Proxy: int getState()>
<android.bluetooth.OobData: byte[] getSecurityManagerTk()>
<android.bluetooth.BluetoothAdapter: boolean getLeAccess()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getDeviceSide(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothAvrcpController$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadsetClient$Default: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothAvrcpController$Default: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAvrcpPlayerSettings: int getSettingValue(int)>
<android.bluetooth.BluetoothAdapter: boolean isLeCodedPhySupported()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getName()>
<android.bluetooth.IBluetoothGattCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>
<android.bluetooth.IBluetoothManager$Default: int getState()>
<android.bluetooth.le.PeriodicAdvertisingReport: int hashCode()>
<android.bluetooth.IBluetooth$Default: int getBondState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.le.AdvertiseSettings: int getTimeout()>
<android.bluetooth.BluetoothCodecConfig: int getSampleRate()>
<android.bluetooth.IBluetoothHeadsetClient$Default: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAvrcpController: java.util.List getConnectedDevices()>
<android.bluetooth.le.AdvertiseData: boolean getIncludeDeviceName()>
<android.bluetooth.le.ScanFilter: int describeContents()>
<android.bluetooth.BluetoothAvrcpPlayerSettings: int describeContents()>
<android.bluetooth.IBluetoothHidHost$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothPbapClient$Stub: android.bluetooth.IBluetoothPbapClient asInterface(android.os.IBinder)>
<android.bluetooth.le.TruncatedFilter: android.bluetooth.le.ScanFilter getFilter()>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothA2dp: int isOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getMostRecentlyConnectedDevices()>
<android.bluetooth.IBluetoothHearingAid$Default: int getDeviceSide(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Default: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMapClient$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isBleScanAlwaysAvailable()>
<android.bluetooth.IBluetoothA2dpSink$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.bluetooth.IBluetoothHidDeviceCallback getDefaultImpl()>
<android.bluetooth.IBluetoothProfileServiceConnection$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Default: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMap$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothGatt$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()>
<android.bluetooth.BluetoothHearingAid: int getDeviceMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothPan$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSap$Stub: android.bluetooth.IBluetoothSap asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothPan$Stub$Proxy: boolean isTetheringOn()>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
<android.bluetooth.BluetoothHidDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothDevice getDevice()>
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isAudioOn()>
<android.bluetooth.BluetoothClass: int getDeviceClass()>
<android.bluetooth.IBluetooth$Default: int getScanMode()>
<android.bluetooth.le.ScanResult: int getPrimaryPhy()>
<android.bluetooth.IBluetoothPan$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.lang.String getUserAppName()>
<android.bluetooth.IBluetoothGatt$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLePeriodicAdvertisingSupported()>
<android.bluetooth.IBluetoothPan$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLe2MPhySupported()>
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific4()>
<android.bluetooth.BluetoothHearingAid: int getDeviceSide(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothGatt$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothGattServer: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()>
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDevice$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanRecord: java.lang.String getDeviceName()>
<android.bluetooth.BluetoothAudioConfig: int getChannelConfig()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isActivityAndEnergyReportingSupported()>
<android.bluetooth.IBluetoothManager$Default: java.lang.String getName()>
<android.bluetooth.BluetoothActivityEnergyInfo: int describeContents()>
<android.bluetooth.IBluetoothAvrcpController$Stub: android.bluetooth.IBluetoothAvrcpController asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothManagerCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.IBluetoothHeadset asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHeadset$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Default: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMapClient$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getDeviceMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth asInterface(android.os.IBinder)>
<android.bluetooth.IBluetooth$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothA2dpSink$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHeadset$Default: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClientCall: android.bluetooth.BluetoothDevice getDevice()>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothGattCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothDevice: int getType()>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerData()>
<android.bluetooth.IBluetoothPbapClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothGattCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothMapClient: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMetadataListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.TruncatedFilter: java.util.List getStorageDescriptors()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)>
<android.bluetooth.IBluetoothMap$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<android.bluetooth.BluetoothGattIncludedService: java.util.UUID getUuid()>
<android.bluetooth.BluetoothCodecConfig: int describeContents()>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.le.IScannerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothAdapter$2: java.lang.Integer recompute(java.lang.Void)>
<android.bluetooth.BluetoothA2dpSink$1: android.bluetooth.IBluetoothA2dpSink getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetooth$Default: long getDiscoveryEndMillis()>
<android.bluetooth.IBluetoothSap$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattServer: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSap$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattIncludedService: int getInstanceId()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceSolicitationUuidMask()>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.le.PeriodicAdvertisingReport: int getDataStatus()>
<android.bluetooth.BluetoothCodecConfig: java.lang.String getCodecName()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getUuids()>
<android.bluetooth.IBluetooth$Stub$Proxy: long getDiscoveryEndMillis()>
<android.bluetooth.IBluetoothA2dpSink$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothMapClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()>
<android.bluetooth.IBluetoothManagerCallback$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothManager$Stub: android.bluetooth.IBluetoothManager asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothMap$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothPan$1: android.bluetooth.IBluetoothPan getServiceInterface(android.os.IBinder)>
<android.bluetooth.le.IAdvertisingSetCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.bluetooth.le.IAdvertisingSetCallback asInterface(android.os.IBinder)>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerDataMask()>
<android.bluetooth.le.ScanFilter: byte[] getServiceData()>
<android.bluetooth.IBluetooth$Default: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Default: boolean getIdleTime(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothStateChangeCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothServerSocket: int getChannel()>
<android.bluetooth.IBluetoothPbap$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHeadsetClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: int getSimAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothSap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSocketManager$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothHeadsetClientCall: int describeContents()>
<android.bluetooth.le.ScanResult: long getTimestampNanos()>
<android.bluetooth.BluetoothHeadsetClientCall: int getId()>
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getIdleTime(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: boolean getSilenceMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothSap: int getState()>
<android.bluetooth.IBluetoothPbap$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothSap: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.le.AdvertiseData: java.util.List getServiceUuids()>
<android.bluetooth.IBluetoothA2dp$Default: int getOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothAvrcpController$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()>
<android.bluetooth.BluetoothMapClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetClient$Default: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHidDevice: java.lang.String getUserAppName()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothGattCharacteristic: int getKeySize()>
<android.bluetooth.IBluetoothCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothHeadsetClientCall: java.util.UUID getUUID()>
<android.bluetooth.IBluetoothCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.bluetooth.IBluetoothProfileServiceConnection getDefaultImpl()>
<android.bluetooth.le.ScanRecord: int getAdvertiseFlags()>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuidMask()>
<android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth getDefaultImpl()>
<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()>
<android.bluetooth.IBluetooth$Default: int getDiscoverableTimeout()>
<android.bluetooth.IBluetoothHidHost$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadsetClient$Stub: android.bluetooth.IBluetoothHeadsetClient asInterface(android.os.IBinder)>
<android.bluetooth.le.ScanRecord: java.util.List getServiceSolicitationUuids()>
<android.bluetooth.IBluetooth$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothGatt$Default: int numHwTrackFiltersAvailable()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHidHost$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidDeviceCallback$Stub: android.bluetooth.IBluetoothHidDeviceCallback asInterface(android.os.IBinder)>
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattIncludedService: int describeContents()>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isLeExtendedAdvertisingSupported()>
<android.bluetooth.BluetoothManager: int getConnectionState(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothHearingAid$Default: int getDeviceMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMetadataListener$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothMap: java.util.List getConnectedDevices()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceDataUuid()>
<android.bluetooth.BluetoothCodecConfig: int getCodecType()>
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.IBluetoothSocketManager getSocketManager()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getMaxConnectedAudioDevices()>
<android.bluetooth.IBluetoothPbapClient$Stub: android.bluetooth.IBluetoothPbapClient getDefaultImpl()>
<android.bluetooth.BluetoothCodecStatus: android.bluetooth.BluetoothCodecConfig[] getCodecsLocalCapabilities()>
<android.bluetooth.IBluetoothGattServerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothHearingAid$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothPbap$Default: android.os.IBinder asBinder()>
<android.bluetooth.le.AdvertiseData: android.util.SparseArray getManufacturerSpecificData()>
<android.bluetooth.BluetoothDevice: byte[] getMetadata(int)>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()>
<android.bluetooth.le.IScannerCallback$Stub: android.bluetooth.le.IScannerCallback getDefaultImpl()>
<android.bluetooth.le.ScanRecord: byte[] getManufacturerSpecificData(int)>
<android.bluetooth.IBluetoothAvrcpController$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothPbapClient$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothAdapter: int getLeMaximumAdvertisingDataLength()>
<android.bluetooth.IBluetoothSap$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHeadset$Default: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: boolean isOffloadedFilteringSupported()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()>
<android.bluetooth.BluetoothHeadset: boolean getAudioRouteAllowed()>
<android.bluetooth.IBluetooth$Default: int getMaxConnectedAudioDevices()>
<android.bluetooth.IBluetoothHearingAid$Default: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>
<android.bluetooth.IBluetoothHearingAid$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMapClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMapClient$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getServiceType()>
<android.bluetooth.BluetoothA2dp: boolean isAvrcpAbsoluteVolumeSupported()>
<android.bluetooth.BluetoothCodecStatus: int hashCode()>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getDelayVariation()>
<android.bluetooth.IBluetoothManager$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothHeadset$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothAvrcpController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.IAdvertisingSetCallback$Stub: android.bluetooth.le.IAdvertisingSetCallback getDefaultImpl()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceName()>
<android.bluetooth.BluetoothHearingAid: java.util.List getActiveDevices()>
<android.bluetooth.IBluetoothA2dpSink$Stub: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMap$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothAvrcpController$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothA2dp$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAvrcpController$1: android.bluetooth.IBluetoothAvrcpController getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothA2dp$Default: int supportsOptionalCodecs(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSap$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.le.ScanSettings: int getScanMode()>
<android.bluetooth.BluetoothAdapter$3: java.lang.Boolean recompute(java.lang.Void)>
<android.bluetooth.BluetoothAdapter: java.util.List getMostRecentlyConnectedDevices()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()>
<android.bluetooth.BluetoothHidHost$1: android.bluetooth.IBluetoothHidHost getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothSap$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)>
<android.bluetooth.BluetoothHidHost: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothCodecStatus: int describeContents()>
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.ScanResult: int getTxPower()>
<android.bluetooth.BluetoothAdapter: long getDiscoveryEndMillis()>
<android.bluetooth.BluetoothSocket: int available()>
<android.bluetooth.IBluetoothMapClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub: android.bluetooth.IBluetoothManager getDefaultImpl()>
<android.bluetooth.BluetoothActivityEnergyInfo: long getTimeStamp()>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int describeContents()>
<android.bluetooth.IBluetoothProfileServiceConnection$Stub: android.bluetooth.IBluetoothProfileServiceConnection asInterface(android.os.IBinder)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getBluetoothStackState()>
<android.bluetooth.IBluetoothSap$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.BluetoothGattService: int describeContents()>
<android.bluetooth.le.IScannerCallback$Stub: android.bluetooth.le.IScannerCallback asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothMapClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothSocketManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)>
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isBleAppPresent()>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isInbandRingingEnabled()>
<android.bluetooth.IBluetoothPbapClient$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID,int)>
<android.bluetooth.IBluetoothGattServerCallback$Stub: android.os.IBinder asBinder()>
<android.bluetooth.BluetoothA2dp: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadset$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothA2dp: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothDevice: int getSimAccessPermission()>
<android.bluetooth.IBluetoothGatt$Stub: android.bluetooth.IBluetoothGatt asInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int supportsOptionalCodecs(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothSocket: int bindListen()>
<android.bluetooth.BluetoothAdapter: int getIoCapability()>
<android.bluetooth.BluetoothHearingAid: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter$4: java.lang.String queryToString(java.lang.Integer)>
<android.bluetooth.le.AdvertisingSetParameters: int getPrimaryPhy()>
<android.bluetooth.le.PeriodicAdvertisingReport: int getRssi()>
<android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothAdapter: boolean isLeExtendedAdvertisingSupported()>
<android.bluetooth.IBluetoothGattCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.BluetoothAvrcpController: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()>
<android.bluetooth.BluetoothSocket: int getMaxReceivePacketSize()>
<android.bluetooth.IBluetoothHeadsetClient$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getLeIoCapability()>
<android.bluetooth.IBluetoothGatt$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.IBluetoothHeadset$Default: boolean getAudioRouteAllowed()>
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getState()>
<android.bluetooth.BluetoothHidDeviceAppQosSettings: int getPeakBandwidth()>
<android.bluetooth.BluetoothMap$1: android.bluetooth.IBluetoothMap getServiceInterface(android.os.IBinder)>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: int getState()>
<android.bluetooth.le.AdvertiseSettings: int getTxPowerLevel()>
<android.bluetooth.IBluetoothPan$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean getAudioRouteAllowed()>
<android.bluetooth.IBluetoothHeadsetClient$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetooth$Default: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>
<android.bluetooth.BluetoothMap: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidDevice$Default: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattCharacteristic: int describeContents()>
<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.IBluetoothHeadset getDefaultImpl()>
<android.bluetooth.IBluetoothPan$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothSap$Default: android.os.IBinder asBinder()>
<android.bluetooth.le.ScanRecord: java.util.Map getServiceData()>
<android.bluetooth.IBluetoothHidDevice$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothA2dp$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothPan$Default: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMetadataListener$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>
<android.bluetooth.IBluetoothHidHost$Default: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothSap$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothCodecConfig: long getCodecSpecific2()>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.bluetooth.IBluetoothMapClient$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothPbapClient$Default: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetooth$Default: android.bluetooth.BluetoothDevice[] getBondedDevices()>
<android.bluetooth.IBluetoothMap$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.IBluetoothMapClient$Stub$Proxy: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub: java.lang.String getTransactionName(int)>
<android.bluetooth.IBluetoothHearingAid$Default: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>
<android.bluetooth.IBluetoothHearingAid$Default: long getHiSyncId(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost$Stub$Proxy: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: java.lang.String getProvider()>
<android.bluetooth.le.ScanFilter: int hashCode()>
<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothPbapClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.bluetooth.le.IAdvertisingSetCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothSocket: int getPort()>
<android.bluetooth.IBluetoothPbap$Default: java.util.List getConnectedDevices()>
<android.bluetooth.le.IPeriodicAdvertisingCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean isEnabled()>
<android.bluetooth.IBluetoothSap$Default: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: byte getSubclass()>
<android.bluetooth.BluetoothMap: int getPriority(android.bluetooth.BluetoothDevice)>
  
SYNCHRONIZATION_DATA:  
<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.content.IContentService$Default: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.content.IContentService$Default: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.content.IContentService$Default: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.IContentService$Default: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.IContentService$Default: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<android.provider.BrowserContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.BrowserContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.content.IContentService$Default: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.content.IContentService$Stub$Proxy: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.IContentService$Default: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.ContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.IContentService$Stub$Proxy: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
  
SMS_MMS:  
<android.telephony.SubscriptionManager: void invalidateDefaultSmsSubIdCaches()>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>
<com.android.internal.view.menu.MenuItemImpl: int getOrder()>
<android.media.MediaCodec$CryptoInfo$Pattern: int getEncryptBlocks()>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>
<android.service.notification.NotificationRankingUpdate: int describeContents()>
<android.content.pm.IDataLoaderStatusListener$Stub: android.content.pm.IDataLoaderStatusListener asInterface(android.os.IBinder)>
<android.content.pm.UserInfo: int describeContents()>
<android.hardware.radio.RadioManager$ModuleProperties: int hashCode()>
<android.hardware.cas.V1_2.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String,java.lang.String)>
<android.app.IActivityManager$Stub$Proxy: int stopUser(int,boolean,android.app.IStopUserCallback)>
<android.view.textclassifier.EntityConfidence: int lambda$resetSortedEntitiesFromMap$0$EntityConfidence(java.lang.String,java.lang.String)>
<android.view.View: int getOutlineAmbientShadowColor()>
<android.app.Notification$MessagingStyle: java.lang.CharSequence getUserDisplayName()>
<android.media.session.IOnVolumeKeyLongPressListener$Default: android.os.IBinder asBinder()>
<android.service.carrier.CarrierIdentifier: int getSpecificCarrierId()>
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>
<android.telephony.CellIdentityNr: long getNci()>
<android.hardware.ICamera$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.NetworkIdentity: int compareTo(android.net.NetworkIdentity)>
<android.telephony.DataConnectionRealTimeInfo$1: void <init>()>
<android.app.prediction.IPredictionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.DevicePolicyManager: boolean isProvisioningAllowed(java.lang.String)>
<android.content.pm.ShortcutInfo: int getRank()>
<android.view.FocusFinder$FocusSorter: int lambda$new$0$FocusFinder$FocusSorter(android.view.View,android.view.View)>
<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.WindowDecorActionBar: int getHideOffset()>
<android.view.textservice.SuggestionsInfo: int getCookie()>
<android.view.View: int getRawTextAlignment()>
<android.os.IncidentManager$IncidentReport: long getPrivacyPolicy()>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
<android.hardware.cas.V1_0.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts(int)>
<android.hardware.camera2.params.RecommendedStreamConfiguration: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getOtaSpNumberSchema(java.lang.String)>
<android.telephony.JapanesePhoneNumberFormatter: void <init>()>
<android.app.admin.DevicePolicyManager: boolean isUsingUnifiedPassword(android.content.ComponentName)>
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getBcc()>
<android.view.KeyboardShortcutInfo: int getKeycode()>
<android.app.blob.IBlobCommitCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.Range: java.lang.Comparable getLower()>
<android.print.PrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: int describeContents()>
<android.view.IGraphicsStats$Stub: java.lang.String getTransactionName(int)>
<android.media.tv.TvStreamConfig: int getMaxHeight()>
<com.android.server.SystemConfig: android.util.ArraySet getHiddenApiWhitelistedApps()>
<android.debug.IAdbManager$Stub: android.debug.IAdbManager asInterface(android.os.IBinder)>
<android.hardware.radio.RadioManager$ModuleProperties: int getId()>
<com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod getDefaultImpl()>
<android.view.Display: android.graphics.ColorSpace[] getSupportedWideColorGamut()>
<android.print.PrinterCapabilitiesInfo: int hashCode()>
<android.util.SparseArray: int size()>
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.view.textclassifier.SelectionEvent: int getSmartStart()>
<android.security.KeyStore: boolean isHardwareBacked()>
<com.android.internal.os.BatteryStatsHelper: double getMinDrainedPower()>
<android.media.RingtoneManager: int inferStreamType()>
<android.content.pm.parsing.component.ParsedInstrumentation: int describeContents()>
<android.telephony.SubscriptionPlan: int hashCode()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)>
<android.telecom.ParcelableCallAnalytics$VideoEvent: long getTimeSinceLastEvent()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
<android.net.wifi.nl80211.PnoSettings: java.util.List getPnoNetworks()>
<android.view.Window: android.view.View getNavigationBarBackgroundView()>
<android.graphics.text.MeasuredText: char[] getChars()>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>
<android.graphics.Paint: android.os.LocaleList getTextLocales()>
<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setFishEyeStyle()>
<android.security.KeyStoreException: int getErrorCode()>
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppInstallerComponent()>
<android.app.ApplicationPackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String)>
<android.widget.RemoteViews$ReflectionAction: int getActionTag()>
<com.android.internal.os.BatteryStatsImpl$Timer: long getTimeSinceMarkLocked(long)>
<android.net.INetworkManagementEventObserver$Default: android.os.IBinder asBinder()>
<android.util.SizeF: float getWidth()>
<android.telephony.CellConfigLte: int describeContents()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>
<android.content.pm.PackageManager: java.lang.String getWellbeingPackageName()>
<android.hardware.radio.V1_5.CellIdentity$hidl_discriminator: java.lang.String getName(byte)>
<android.app.AppOpsManager$AttributedOpEntry: int describeContents()>
<android.os.connectivity.WifiBatteryStats: long getScanTimeMillis()>
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String)>
<android.app.IAlarmCompleteListener$Stub: android.app.IAlarmCompleteListener getDefaultImpl()>
<android.hardware.usb.IUsbManager$Stub: java.lang.String getTransactionName(int)>
<android.view.Surface: int describeContents()>
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating()>
<android.os.image.IDynamicSystemService$Stub$Proxy: android.gsi.GsiProgress getInstallationProgress()>
<android.net.Uri$OpaqueUri: java.lang.String getAuthority()>
<android.app.backup.BackupManager: java.lang.String[] listAllTransports()>
<android.hardware.lights.ILightsManager$Stub: java.lang.String getTransactionName(int)>
<android.view.View: int[] getDrawableState()>
<android.os.storage.StorageVolume: int describeContents()>
<android.net.INetworkScoreCache$Stub: android.net.INetworkScoreCache asInterface(android.os.IBinder)>
<com.android.internal.view.IInputMethodManager$Default: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<android.graphics.drawable.AdaptiveIconDrawable: int getSourceDrawableResId()>
<android.os.IUserManager$Default: int getUserSerialNumber(int)>
<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>
<android.metrics.LogMaker: int getType()>
<android.hardware.hdmi.HdmiTimerRecordSources$TimeUnit: int toByteArray(byte[],int)>
<android.util.XmlPullAttributes: int getAttributeNameResource(int)>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.view.autofill.IAugmentedAutofillManagerClient asInterface(android.os.IBinder)>
<android.app.Instrumentation$ActivityResult: int getResultCode()>
<android.telecom.Logging._$$Lambda$SessionManager$hhtZwTEbvO_fLNlAvB6Do9_2gW4: long get()>
<com.android.internal.os.PowerProfile: double getAveragePowerForCpuCluster(int)>
<android.net.INetworkPolicyManager$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)>
<android.location.Address: java.lang.String getPostalCode()>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>
<android.net.wifi.nl80211.IScanEvent$Stub: android.net.wifi.nl80211.IScanEvent getDefaultImpl()>
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getAvailableUidStatsLocked(int)>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>
<android.os.IIncidentCompanion$Stub$Proxy: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: java.lang.String getTransactionName(int)>
<android.security.IKeyChainAliasCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()>
<android.content.pm.IShortcutChangeCallback$Default: android.os.IBinder asBinder()>
<android.view.MotionEvent: int getDisplayId()>
<android.app.Notification$TvExtender: java.lang.String getChannelId()>
<android.net.IConnectivityManager$Default: byte[] getNetworkWatchlistConfigHash()>
<android.hardware.display.BrightnessConfiguration: android.hardware.display.BrightnessCorrection getCorrectionByPackageName(java.lang.String)>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.media.soundtrigger_middleware.ISoundTriggerCallback asInterface(android.os.IBinder)>
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()>
<android.telephony.CellInfoWcdma: int describeContents()>
<android.hardware.radio.ProgramList$Filter: java.util.Map getVendorFilter()>
<android.view.IRemoteAnimationRunner$Default: android.os.IBinder asBinder()>
<android.view.IWindowManager$Stub$Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<com.android.internal.view.IDragAndDropPermissions$Stub: com.android.internal.view.IDragAndDropPermissions asInterface(android.os.IBinder)>
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>
<android.graphics.RenderNode: float getRotationZ()>
<android.app.ISearchManager$Default: android.content.ComponentName getWebSearchActivity()>
<android.os.WorkSource$WorkChain: int[] getUids()>
<android.telecom.Log: java.lang.String getPackageAbbreviation(java.lang.String)>
<android.security.keystore.IKeystoreService$Stub: android.security.keystore.IKeystoreService getDefaultImpl()>
<com.google.android.mms.pdu.DeliveryInd: int getStatus()>
<android.view.KeyEvent: int getDeadChar(int,int)>
<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>
<android.view.Display: android.view.DisplayAdjustments getDisplayAdjustments()>
<android.hardware.face.IFaceServiceReceiver$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.params.RggbChannelVector: float getBlue()>
<android.telephony.data.ApnSetting$Builder: int access$1400(android.telephony.data.ApnSetting$Builder)>
<android.view.contentcapture.ContentCaptureEvent: android.graphics.Insets getInsets()>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>
<android.util.apk.ApkSigningBlockUtils: byte[] pickBestDigestForV4(java.util.Map)>
<android.app.usage.UsageEvents$Event: int getInstanceId()>
<android.media.soundtrigger.SoundTriggerManager$Model: int getVersion()>
<android.widget.TextView: android.content.UndoManager getUndoManager()>
<android.os.PowerManager: boolean isAmbientDisplayAvailable()>
<android.os.IIncidentReportStatusListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: int getOverScrollMode()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: int getSoftKeyboardShowMode()>
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()>
<android.app.usage.UsageStats: long getLastTimeUsed()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getTransformCapabilities()>
<android.service.persistentdata.PersistentDataBlockManager: int getFlashLockState()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneSignalScanningTimer()>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiAudioSystemClient getAudioSystemClient()>
<android.telephony.TelephonyManager: java.util.Locale getSimLocale()>
<android.media.Utils: java.io.File getUniqueExternalFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<android.util.proto.EncodedBuffer: int getReadPos()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: boolean getOemUnlockEnabled()>
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.os.UserHandle)>
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getDefaultAppsBackup(int)>
<android.widget.TextView: int getVerticalOffset(boolean)>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable5gNonDFSChannels()>
<android.telephony.CellInfoNr$1: void <init>()>
<android.app.AsyncNotedAppOp: long getTime()>
<android.net.NetworkIdentity: int getType()>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>
<android.os.storage.IStorageManager$Stub: java.lang.String getTransactionName(int)>
<android.app.job.JobWorkItem: java.lang.Object getGrants()>
<android.os.CpuUsageInfo: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: java.lang.String[] getWifiIfaces()>
<android.hardware.camera2.ICameraOfflineSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>
<android.print.IPrintServicesChangeListener$Stub: android.print.IPrintServicesChangeListener getDefaultImpl()>
<android.util.Half: int intValue()>
<android.app.IActivityTaskManager$Default: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.media.MediaCas: byte[] access$000(android.media.MediaCas,java.util.ArrayList)>
<android.app.IAlarmManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IStrategyPreferredDeviceDispatcher$Stub: java.lang.String getTransactionName(int)>
<android.app.Notification$WearableExtender: boolean getStartScrollBottom()>
<android.hardware.location.IContextHubService$Default: java.util.List getContextHubs()>
<android.view.IWindowManager$Default: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)>
<android.view.IAppTransitionAnimationSpecsFuture$Stub: java.lang.String getTransactionName(int)>
<android.util.proto.ProtoInputStream: int getWireType()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()>
<android.telephony.ICellInfoCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.admin.DevicePolicyManager: boolean isNetworkLoggingEnabled(android.content.ComponentName)>
<android.content.integrity.RuleSet: java.util.List getRules()>
<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()>
<android.hardware.lights.ILightsManager$Default: android.hardware.lights.LightState getLightState(int)>
<com.android.internal.view.IInputMethodClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.Context: int getUserId()>
<android.view.CutoutSpecification: android.graphics.Rect getSafeInset()>
<android.location.Criteria: int access$202(android.location.Criteria,int)>
<android.content.pm.IPackageManager$Stub$Proxy: boolean isDeviceUpgrading()>
<com.android.internal.telephony.ITelephony$Default: boolean isHearingAidCompatibilitySupported()>
<android.view.contentcapture.DataRemovalRequest: java.lang.String getPackageName()>
<android.app.ActivityOptions: android.app.PendingIntent getUsageTimeReport()>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: com.android.internal.graphics.palette.ColorCutQuantizer$Vbox splitBox()>
<android.media.IVolumeController$Stub: android.os.IBinder asBinder()>
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>
<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioAttributes: int getAllowedCapturePolicy()>
<android.hardware.iris.IIrisService$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAffiliationIds(android.content.ComponentName)>
<android.graphics.drawable.VectorDrawable$VFullPath: int getFillColor()>
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes getAudioAttributes()>
<android.telephony.ICellInfoCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.cas.V1_2.ICasListener$Stub: android.os.IHwBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: android.util.Size getMaxSize(android.util.Size[])>
<android.hardware.display.DisplayManagerGlobal: android.util.Pair getMinimumBrightnessCurve()>
<com.android.internal.os.BatteryStatsImpl: int getDeviceIdlingCount(int,int)>
<android.telephony.SubscriptionInfo: int getNameSource()>
<android.content.res.XmlBlock$Parser: int getDepth()>
<com.android.internal.app.WindowDecorActionBar: int getTabCount()>
<android.media.IMediaRouterClient$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List getSharedLibrariesAsUser(int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts(int,boolean)>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<android.service.notification.StatusBarNotification: long getPostTime()>
<android.app.backup.IBackupManager$Default: java.lang.String getCurrentTransport()>
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: int getChangingConfigurations()>
<android.telephony.CellInfoNr: android.telephony.CellInfoNr createFromParcelBody(android.os.Parcel)>
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.security.keystore.IKeystoreExportKeyCallback getDefaultImpl()>
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>
<android.telephony.TelephonyHistogram$1: android.telephony.TelephonyHistogram[] newArray(int)>
<android.app.Person: android.graphics.drawable.Icon getIcon()>
<android.animation.ValueAnimator: long getDuration()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$802(android.security.keystore.recovery.KeyChainSnapshot,byte[])>
<android.media.AudioRecordingConfiguration: java.lang.String getClientPackageName()>
<android.os.BatterySaverPolicyConfig: boolean getDeferFullBackup()>
<android.content.pm.FeatureInfo: int describeContents()>
<android.view.inputmethod.InputMethodManager: android.view.View access$100(android.view.inputmethod.InputMethodManager)>
<com.android.internal.telephony.CellNetworkScanResult: int describeContents()>
<android.os.Bundle: short getShort(java.lang.String,short)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase(int)>
<android.hardware.ISerialManager$Stub: android.os.IBinder asBinder()>
<android.view.textclassifier.SystemTextClassifier$ResponseReceiver: java.lang.Object get()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getDataEnabled(int)>
<android.telephony.ims.ImsCallForwardInfo: java.lang.String getNumber()>
<android.telephony.ServiceState: int getRilDataRadioTechnology()>
<android.graphics.ColorSpace$Lab: float getMaxValue(int)>
<android.view.contentcapture.ViewNode: int getTextStyle()>
<android.telephony.data.ApnSetting: java.net.InetAddress getMmsProxyAddress()>
<android.net.Uri$PathSegments: java.lang.Object get(int)>
<android.graphics.Color: float getComponent(int)>
<android.net.IIpSecService$Stub: android.net.IIpSecService getDefaultImpl()>
<android.net.Network: android.net.Network getPrivateDnsBypassingCopy()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>
<android.media.ExifInterface$ByteOrderedDataInputStream: long readLong()>
<android.animation.PathKeyframes$SimpleKeyframes: java.util.ArrayList getKeyframes()>
<android.app.Notification$Action: int describeContents()>
<android.app.backup.BackupDataInput: java.lang.String getKey()>
<android.content.pm.IPackageManager$Default: java.lang.String getSystemCaptionsServicePackageName()>
<android.net.IEthernetManager$Default: android.net.IpConfiguration getConfiguration(java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: java.util.List getEnabledNotificationListenerPackages()>
<android.net.LinkProperties: java.lang.String getTcpBufferSizes()>
<com.android.internal.os.BatteryStatsImpl: long getExternalStatsCollectionRateLimitMs()>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>
<com.android.internal.os.BatteryStatsImpl: int getHistoryUsedSize()>
<android.window.DisplayAreaInfo: int describeContents()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File)>
<android.hardware.ICamera$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keymaster.KeymasterArguments: byte[] getBytes(int,byte[])>
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
<android.telephony.ims.ImsStreamMediaProfile: int getRttMode()>
<android.view.contentcapture.ViewNode: java.lang.String getTextIdEntry()>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getBackground()>
<android.view.IRotationWatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.Editor$SelectionHandleView: int getHorizontalGravity(boolean)>
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor getControlFd(long)>
<android.media.MediaDrm$CertificateRequest: java.lang.String getDefaultUrl()>
<android.media.MediaRouter$RouteInfo: int getPlaybackType()>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder getWindowToken(int,int)>
<android.os.IIncidentManager$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,int)>
<android.telephony.CbGeoUtils$Polygon: boolean contains(android.telephony.CbGeoUtils$LatLng)>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>
<android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>
<android.security.IFileIntegrityService$Stub: android.security.IFileIntegrityService asInterface(android.os.IBinder)>
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.hardware.hdmi.IHdmiRecordListener asInterface(android.os.IBinder)>
<android.app.AppOpsManager$OpEntry: int describeContents()>
<android.media.MediaRoute2Info: java.lang.String getId()>
<android.widget.ImageView: boolean getAdjustViewBounds()>
<android.util.LongSparseLongArray: long get(long)>
<android.graphics.Color: int toArgb()>
<android.media.IAudioService$Default: int getUiSoundsStreamType()>
<android.graphics.drawable.AnimatedImageDrawable: int getOpacity()>
<android.telephony.DataConnectionRealTimeInfo: int describeContents()>
<android.security.keymaster.KeymasterArguments: int describeContents()>
<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.graphics.ColorSpace getColorSpace()>
<android.content.pm.IPackageDataObserver$Stub: android.content.pm.IPackageDataObserver getDefaultImpl()>
<android.view.KeyEvent: int getDeviceId()>
<android.app.blob.BlobHandle: java.lang.String getTag()>
<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>
<android.media.IAudioService$Stub$Proxy: int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>
<android.view.Display: int getWidth()>
<android.view.Window: android.transition.TransitionManager getTransitionManager()>
<android.content.pm.IPinItemRequest$Default: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>
<android.service.notification.NotificationListenerService$Ranking: long getLastAudiblyAlertedMillis()>
<android.media.session.IOnMediaKeyListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: com.android.internal.textservice.ITextServicesSessionListener asInterface(android.os.IBinder)>
<android.text.method.CharacterPickerDialog$OptionsAdapter: int getCount()>
<android.media.session.MediaSessionManager: int getSessionPolicies(android.media.session.MediaSession$Token)>
<android.app.ResourcesManager: android.content.res.ResourcesImpl access$300(android.app.ResourcesManager,android.content.res.ResourcesKey)>
<android.print.IPrintJobStateChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.KeyEvent: int getScanCode()>
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>
<com.android.internal.appwidget.IAppWidgetService$Default: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(java.lang.String,int)>
<android.os.ParcelFileDescriptor: java.io.File getFile(java.io.FileDescriptor)>
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: android.view.Surface getInputSurface()>
<android.os.BasicShellCommandHandler: java.lang.String[] getAllArgs()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.CaptureCollector access$200(android.hardware.camera2.legacy.RequestThreadManager)>
<android.hardware.usb.UsbConfiguration: int getMaxPower()>
<android.net.IEthernetManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList createSnapshots(android.os.Bundle,java.util.Collection)>
<android.hardware.radio.RadioManager$BandConfig: int getUpperLimit()>
<android.os.IDeviceIdleController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.ListView: int getHeightForPosition(int)>
<android.os.LocaleList: int describeContents()>
<android.telephony.CellInfoWcdma$1: android.telephony.CellInfoWcdma[] newArray(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedAccessibilityServicesForUser(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)>
<android.view.ViewPropertyAnimator: long getDuration()>
<android.print.PageRange: int hashCode()>
<android.print.IPrinterDiscoveryObserver$Stub: android.print.IPrinterDiscoveryObserver getDefaultImpl()>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>
<com.android.internal.util.ContrastColorUtil: int getShiftedColor(int,int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserAdded(int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()>
<android.view.DisplayAddress$Physical: java.lang.Long getModel()>
<android.content.pm.parsing.component.ParsedActivity: int getLockTaskLaunchMode()>
<android.telephony.ServiceState: int getNrFrequencyRange()>
<android.util.KeyValueListParser: long getDurationMillis(java.lang.String,long)>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IMediaHTTPConnection$Default: java.lang.String getMIMEType()>
<android.view.InputDevice: int getGeneration()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.net.IConnectivityManager$Default: android.net.Network getActiveNetwork()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.app.Activity: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()>
<android.content.BroadcastReceiver$PendingResult: int getSendingUserId()>
<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.projection.MediaProjectionInfo: int hashCode()>
<android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
<android.net.Credentials: int getPid()>
<android.window.ITaskOrganizerController$Stub$Proxy: java.util.List getChildTasks(android.window.WindowContainerToken,int[])>
<android.location.LocationManager: boolean isProviderEnabledForUser(java.lang.String,android.os.UserHandle)>
<android.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.content.ContextWrapper: boolean isDeviceProtectedStorage()>
<android.telephony.ims.ImsExternalCallState: int getCallId()>
<android.content.pm.ILauncherApps$Stub$Proxy: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,java.lang.String,int)>
<android.telephony.TelephonyManager: java.lang.String getImei()>
<android.hardware.camera2.CaptureFailure: long getFrameNumber()>
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,java.lang.String[])>
<android.telephony.PhoneNumberRange: int describeContents()>
<android.service.notification.ZenModeConfig$EventInfo: int hashCode()>
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.net.wifi.nl80211.IPnoScanEvent asInterface(android.os.IBinder)>
<android.media.tv.tunerresourcemanager.CasSessionRequest: int describeContents()>
<android.app.IWallpaperManager$Default: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<android.telephony.SubscriptionInfo: int getProfileClass()>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
<android.net.lowpan.LowpanManager: java.lang.String[] getInterfaceList()>
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getDefaultDialerPackage()>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>
<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
<android.util.apk.WrappedX509Certificate: java.security.Principal getSubjectDN()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<android.app.Fragment: boolean isHideReplaced()>
<com.android.internal.app.WindowDecorActionBar: int getHeight()>
<android.location.ILocationManager$Stub$Proxy: java.lang.String[] getIgnoreSettingsWhitelist()>
<android.security.keymaster.KeyCharacteristics: int describeContents()>
<android.view.View: boolean getKeepScreenOn()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setEmergencyOnly(boolean)>
<android.app.NotificationManager: boolean areNotificationsPaused()>
<android.companion.IFindDeviceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.tv.TvTrackInfo: int describeContents()>
<android.widget.ScrollView: int computeVerticalScrollRange()>
<android.location.GnssMeasurementCorrections: double getVerticalPositionUncertaintyMeters()>
<android.hardware.hdmi.HdmiAudioSystemClient: int getDeviceType()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.view.Display$Mode: int getPhysicalHeight()>
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayConfig[] getDisplayConfigs(android.os.IBinder)>
<android.telephony.SubscriptionInfo: boolean isEmbedded()>
<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)>
<android.content.pm.IDataLoaderManager$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.view.IAppTransitionAnimationSpecsFuture asInterface(android.os.IBinder)>
<android.content.pm.PackageParser$Package: java.util.List getChildPackageNames()>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<com.android.internal.infra.IAndroidFuture$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.SelectionEvent: java.lang.String getWidgetType()>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>
<android.app.backup.BackupManager: int requestBackup(java.lang.String[],android.app.backup.BackupObserver,android.app.backup.BackupManagerMonitor,int)>
<android.media.session.PlaybackState$CustomAction: int getIcon()>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: com.android.internal.telephony.euicc.IGetRulesAuthTableCallback asInterface(android.os.IBinder)>
<android.view.ViewRootImpl$ViewPreImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.app.usage.StorageStatsManager: long getTotalBytes(java.util.UUID)>
<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()>
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiBatchedScanCount(int,int)>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>
<android.media.midi.IMidiManager$Stub: java.lang.String getTransactionName(int)>
<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>
<android.app.IUriGrantsManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.params.InputConfiguration: int getWidth()>
<android.telephony.PinResult$1: android.telephony.PinResult createFromParcel(android.os.Parcel)>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>
<android.location.GpsClock: double getBiasUncertaintyInNs()>
<android.os.incremental.IIncrementalService$Default: int deleteBindMount(int,java.lang.String)>
<android.content.pm.IPackageInstaller$Stub: java.lang.String getTransactionName(int)>
<android.database.AbstractCursor: int getColumnCount()>
<android.graphics.ImageDecoder: android.graphics.Rect getCrop()>
<com.google.android.mms.pdu.SendReq: byte[] getMessageClass()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getEnterTransition()>
<com.android.internal.policy.DecorContext: android.content.res.Resources getResources()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.Context: int getNextAutofillId()>
<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>
<android.content.LoggingContentInterface: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.widget.ListView: android.widget.Adapter getAdapter()>
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()>
<android.net.Uri$AbstractPart: java.lang.String getDecoded()>
<android.view.ISystemGestureExclusionListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CallQuality: boolean isIncomingSilenceDetectedAtCallSetup()>
<android.view.inputmethod.InputMethodManager: int access$602(android.view.inputmethod.InputMethodManager,int)>
<android.view.MotionEvent: int getActionIndex()>
<android.hardware.camera2.legacy.ParameterUtils: float getMaxZoomRatio(android.hardware.Camera$Parameters)>
<android.telephony.PhoneNumberUtils: java.lang.String convertPreDial(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getNai(int)>
<android.media.MediaMetadataRetriever$BitmapParams: android.graphics.Bitmap$Config getActualConfig()>
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>
<com.android.internal.telephony.CellNetworkScanResult$1: com.android.internal.telephony.CellNetworkScanResult createFromParcel(android.os.Parcel)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.telephony.CellIdentityCdma$1: android.telephony.CellIdentityCdma[] newArray(int)>
<android.security.KeyStore: byte[] get(java.lang.String)>
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfileCalendarPackages()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>
<android.hardware.usb.ParcelableUsbPort: int describeContents()>
<android.security.keystore.AndroidKeyStoreRSAPrivateKey: java.math.BigInteger getModulus()>
<com.android.internal.telephony.ISub$Stub$Proxy: int clearSubInfo()>
<android.content.pm.ShortcutManager: int getIconMaxHeight()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IWallpaperVisibilityListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.animation.AnimationSet: java.util.List getAnimations()>
<android.widget.GridView: int lookForSelectablePosition(int,boolean)>
<android.widget.Editor$SuggestionsPopupWindow: int clipVertically(int)>
<android.view.View$MatchLabelForPredicate: int access$1302(android.view.View$MatchLabelForPredicate,int)>
<android.app.usage.NetworkStats$Bucket: int access$1000(int)>
<android.location.LocationManager: boolean isProviderPackage(java.lang.String)>
<android.content.rollback.IRollbackManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotAfter()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.hardware.biometrics.IBiometricServiceLockoutResetCallback asInterface(android.os.IBinder)>
<android.view.textclassifier.TextLinks: android.os.Bundle getExtras()>
<android.graphics.Canvas: int getMaximumBitmapWidth()>
<android.view.ViewRootImpl$NativePreImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.companion.ICompanionDeviceManager$Stub: android.os.IBinder asBinder()>
<android.view.WindowManagerImpl: android.view.WindowMetrics getCurrentWindowMetrics()>
<android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: java.lang.String getTransactionName(int)>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSessionLegacyHelper getHelper(android.content.Context)>
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback getDefaultImpl()>
<android.view.textclassifier.ConversationActions$Request: android.view.textclassifier.TextClassifier$EntityConfig getTypeConfig()>
<android.hardware.cas.V1_1.IMediaCasService$Proxy: java.util.ArrayList getHashChain()>
<android.os.connectivity.CellularBatteryStats: long getRxTimeMillis()>
<android.hardware.biometrics.IAuthService$Default: int canAuthenticate(java.lang.String,int,int)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)>
<android.media.projection.IMediaProjectionManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>
<android.app.Notification$BubbleMetadata: int describeContents()>
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.internal.view.IInputMethodManager$Default: int getInputMethodWindowVisibleHeight()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()>
<com.android.ims.internal.IImsUt$Default: int queryCOLR()>
<android.hardware.location.ContextHubInfo: int getToolchainVersion()>
<android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String)>
<android.telephony.CellSignalStrengthGsm: int getTimingAdvance()>
<android.media.IAudioServerStateDispatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.NativeScanResult: int describeContents()>
<android.graphics.Paint: float getStrokeWidth()>
<android.telephony.CellIdentityGsm: void updateGlobalCellId()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()>
<android.os.INetworkManagementService$Stub: java.lang.String getTransactionName(int)>
<com.android.net.IProxyService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CarrierRestrictionRules$1: android.telephony.CarrierRestrictionRules[] newArray(int)>
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.os.storage.StorageVolume: long getMaxFileSize()>
<android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.RadioAccessFamily: int describeContents()>
<android.net.wifi.nl80211.HiddenNetwork: int describeContents()>
<android.telephony.CellInfoTdscdma: int describeContents()>
<android.content.pm.ICrossProfileApps$Default: android.os.IBinder asBinder()>
<android.media.AudioManager: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>
<android.app.contentsuggestions.IClassificationsCallback$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)>
<com.android.internal.view.IDragAndDropPermissions$Stub: java.lang.String getTransactionName(int)>
<android.os.IncidentManager$IncidentReport: java.io.InputStream getInputStream()>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>
<android.database.CursorWindow: double getDouble(int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)>
<android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)>
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>
<android.net.IpSecConfig: android.net.IpSecAlgorithm getAuthentication()>
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>
<android.telephony.ims.aidl.IImsRegistration$Default: int getRegistrationTechnology()>
<android.telephony.TelephonyManager: int getSubscriptionId(android.telecom.PhoneAccountHandle)>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)>
<android.service.notification.StatusBarNotification: int getNormalizedUserId()>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getRuntimePermissionBackup$5(android.os.UserHandle,android.permission.IPermissionController)>
<android.net.Uri$AbstractHierarchicalUri: int getPort()>
<android.os.Environment: java.io.File getDataRefProfilesDePackageDirectory(java.lang.String)>
<android.app.slice.SliceItem: android.app.PendingIntent getAction()>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.RemoteAnimationDefinition$RemoteAnimationAdapterEntry: int describeContents()>
<com.android.internal.util.AsyncChannel: int fullyConnectSync(android.content.Context,android.os.Handler,android.os.Handler)>
<com.android.internal.util.function.pooled.PooledLambdaImpl: double getAsDouble()>
<android.net.lowpan.ILowpanManager$Default: java.lang.String[] getInterfaceList()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getPrimaryImage(android.media.MediaMetadataRetriever$BitmapParams)>
<android.util.Pair: int hashCode()>
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String)>
<android.view.View$11: java.lang.Float get(android.view.View)>
<android.hardware.display.ColorDisplayManager: java.time.LocalTime getNightDisplayCustomEndTime()>
<android.app.admin.DevicePolicyManager: long getManagedProfileMaximumTimeOff(android.content.ComponentName)>
<android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getPowerConsumptionMw()>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>
<android.content.pm.PackageInstaller$SessionParams: boolean getEnableRollback()>
<android.app.job.JobInfo: long getMinPeriodMillis()>
<android.net.MacAddress: int getAddressType()>
<com.android.internal.telephony.ISub$Default: java.util.List getAccessibleSubscriptionInfoList(java.lang.String)>
<android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller asInterface(android.os.IBinder)>
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.X509Certificate getTrustAnchor(java.security.cert.X509Certificate)>
<android.app.ActivityOptions: int getLaunchTaskId()>
<android.hardware.location.NanoAppBinary: int describeContents()>
<android.media.tv.ITvInputHardware$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String)>
<android.widget.Toolbar: int getContentInsetEnd()>
<android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>
<com.android.internal.app.IAppOpsActiveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<com.android.internal.widget.ILockSettings$Default: java.util.Map getRecoveryStatus()>
<com.android.internal.telephony.ITelephony$Default: boolean rebootModem(int)>
<android.hardware.camera2.ICameraOfflineSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<android.os.IPowerManager$Default: android.os.IBinder asBinder()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getFullPowerWhitelistExceptIdle()>
<android.app.AppOpsManager$HistoricalOps: int describeContents()>
<android.content.IRestrictionsManager$Stub$Proxy: android.content.Intent createLocalApprovalIntent()>
<android.media.MediaFormat: long getLong(java.lang.String)>
<android.hardware.camera2.legacy.RequestThreadManager: long cancelRepeating(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: int captureBurst(java.util.List,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)>
<com.android.internal.os.FuseAppLoop$BytesMap: byte[] startUsing(long)>
<android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener getDefaultImpl()>
<android.widget.TextView: int getSelectionStart()>
<android.media.soundtrigger.SoundTriggerManager: android.media.soundtrigger.SoundTriggerManager$Model getModel(java.util.UUID)>
<android.graphics.RecordingCanvas: int getWidth()>
<android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize getStandardMediaSizeById(java.lang.String)>
<android.printservice.recommendation.RecommendationInfo: int getNumDiscoveredPrinters()>
<android.telephony.ServiceState: int getDataNetworkType()>
<android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()>
<android.media.AudioManager: boolean isStreamAffectedByMute(int)>
<android.app.INotificationManager$Default: int getHintsFromListener(android.service.notification.INotificationListener)>
<android.transition.ChangeBounds$5: java.lang.Object get(java.lang.Object)>
<android.widget.OverScroller: int getFinalX()>
<android.app.AppOpsManager$HistoricalOps: long getBeginTimeMillis()>
<android.print.ILayoutResultCallback$Stub: android.print.ILayoutResultCallback asInterface(android.os.IBinder)>
<android.os.CpuUsageInfo: long getActive()>
<android.content.pm.VerifierInfo: int describeContents()>
<android.app.AppOpsManager: int checkAudioOp(int,int,int,java.lang.String)>
<android.net.IpSecAlgorithm: byte[] getKey()>
<android.net.IConnectivityDiagnosticsCallback$Stub: android.os.IBinder asBinder()>
<android.os.UserManager: java.util.List getUsers()>
<android.net.NetworkStats: int findIndexHinted(java.lang.String,int,int,int,int,int,int,int)>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.os.IBinder asBinder()>
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>
<android.print.PrinterId: java.lang.String getLocalId()>
<android.widget.Spinner$DropDownAdapter: int getItemViewType(int)>
<com.android.internal.os.TransferPipe: java.io.OutputStream getNewOutputStream()>
<android.app.LoadedApk: java.io.File getDataDirFile()>
<android.app.admin.IDevicePolicyManager$Default: int checkProvisioningPreCondition(java.lang.String,java.lang.String)>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>
<android.net.Uri$OpaqueUri: java.lang.String getPath()>
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Default: android.os.IBinder asBinder()>
<android.net.NetworkCapabilities: int[] getAdministratorUids()>
<com.android.server.SystemConfig: android.util.ArraySet getPrivAppDenyPermissions(java.lang.String)>
<android.security.keystore.IKeystoreService$Stub$Proxy: long getmtime(java.lang.String,int)>
<android.telephony.ims.feature.ImsFeature$Capabilities: int getMask()>
<android.content.pm.PackageInstaller$SessionInfo: boolean isOpen()>
<android.media.MicrophoneInfo: int getDirectionality()>
<com.android.internal.telephony.cdma.SmsMessage: byte[] getEnvelopeBearerData()>
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>
<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>
<android.content.pm.InstantAppResolveInfo: java.util.List getIntentFilters()>
<android.os.BatterySaverPolicyConfig: boolean getDeferKeyValueBackup()>
<android.content.IIntentReceiver$Stub: android.os.IBinder asBinder()>
<android.app.usage.NetworkStats$Bucket: int access$400(int)>
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
<android.net.NetworkProvider: android.os.Messenger getMessenger()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int access$600(android.hardware.camera2.impl.CameraOfflineSessionImpl)>
<android.telecom.PhoneAccount: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int describeContents()>
<android.location.GpsMeasurement: double getPseudorangeRateInMetersPerSec()>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.service.euicc.EuiccProfileInfo: java.lang.String getIccid()>
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForStrategyWithLegacyStreamType(int)>
<android.location.GnssStatus$GnssSvInfo: int access$100(android.location.GnssStatus$GnssSvInfo)>
<android.media.session.ISessionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.connectivity.CellularBatteryStats: long getNumBytesTx()>
<android.net.LocalSocketImpl$SocketInputStream: int read()>
<android.media.midi.MidiPortImpl: long getPacketTimestamp(byte[],int)>
<android.widget.TextView: int getAutoSizeTextType()>
<android.os.storage.IStorageManager$Default: android.os.storage.VolumeInfo[] getVolumes(int)>
<com.android.ims.internal.IImsExternalCallStateListener$Default: android.os.IBinder asBinder()>
<android.graphics.PorterDuffColorFilter: long createNativeInstance()>
<android.media.IMediaRouter2$Default: android.os.IBinder asBinder()>
<com.android.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getAllSessions(java.lang.String)>
<android.app.usage.NetworkStats$Bucket: int getRoaming()>
<android.webkit.WebStorage$Origin: long getUsage()>
<android.widget.AdapterView: int findSyncPosition()>
<android.hardware.camera2.impl.CameraMetadataNative: long getMetadataPtr()>
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getPassword()>
<android.filterfw.core.SyncRunner: int step()>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>
<android.os.IServiceCallback$Stub: android.os.IServiceCallback asInterface(android.os.IBinder)>
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<com.android.internal.telephony.IOns$Stub$Proxy: int getPreferredDataSubscriptionId(java.lang.String,java.lang.String)>
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()>
<android.app.NotificationManager: android.app.INotificationManager getService()>
<android.media.MediaRouter$RouteInfo: int getVolumeHandling()>
<android.media.session.MediaSession$Token: android.media.session.ISessionController getBinder()>
<android.net.TelephonyNetworkSpecifier: int hashCode()>
<android.app.IApplicationThread$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Paint: java.util.Locale getTextLocale()>
<android.telephony.AccessNetworkConstants$NgranBands: int getFrequencyRangeGroup(int)>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getInstalledAccessibilityServiceList(int)>
<android.media.tv.TvContentRating: java.lang.String getMainRating()>
<android.content.IRestrictionsManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>
<android.widget.SuggestionsAdapter$1: long getPostingDelay(java.lang.CharSequence)>
<android.app.timedetector.NetworkTimeSuggestion: android.os.TimestampedValue getUtcTime()>
<android.app.SearchableInfo: int getSettingsDescriptionId()>
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>
<android.hardware.radio.V1_4.CellInfo$Info: byte getDiscriminator()>
<android.hardware.display.VirtualDisplayConfig: int getHeight()>
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmap(boolean)>
<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>
<android.util.apk.VerbatimX509Certificate: byte[] getEncoded()>
<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()>
<android.content.pm.ShortcutManager: java.util.List getShareTargets(android.content.IntentFilter)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)>
<com.android.internal.telephony.SmsRawData$1: void <init>()>
<android.os.StatFs: int getAvailableBlocks()>
<android.app.NotificationManager: android.content.ComponentName getAllowedNotificationAssistant()>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>
<android.media.MediaCodec$MediaImage$MediaPlane: java.nio.ByteBuffer getBuffer()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSetupWizardPackageName()>
<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>
<android.text.StaticLayout: int getTopPadding()>
<android.view.autofill.AutofillId: int getVirtualChildIntId()>
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: int getCount()>
<android.service.notification.Adjustment: int getUser()>
<android.graphics.Rect$UnflattenHelper: java.util.regex.Matcher getMatcher(java.lang.String)>
<com.android.internal.compat.IPlatformCompat$Stub: com.android.internal.compat.IPlatformCompat getDefaultImpl()>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>
<android.graphics.drawable.ColorStateListDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.os.IHwBinder asBinder()>
<android.media.MediaRoute2Info: int hashCode()>
<android.print.IPrintDocumentAdapterObserver$Default: android.os.IBinder asBinder()>
<android.app.job.JobParameters: java.lang.String[] getTriggeredContentAuthorities()>
<android.os.storage.VolumeInfo: android.os.storage.DiskInfo getDisk()>
<android.content.pm.LauncherApps: java.util.List getProfiles()>
<android.hardware.input.KeyboardLayout: int describeContents()>
<android.os.IUserManager$Default: int getUserBadgeDarkColorResId(int)>
<android.renderscript.RenderScript: int nMeshGetIndexCount(long)>
<android.os.ZygoteProcess: android.net.LocalSocketAddress getPrimarySocketAddress()>
<android.app.Fragment: android.animation.Animator getAnimatingAway()>
<android.service.vr.IPersistentVrStateCallbacks$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.PrintDocumentInfo: int getContentType()>
<android.view.textclassifier.TextLinks$TextLink: java.lang.String getEntity(int)>
<android.content.pm.PackageParser$Package: java.util.List getAllCodePaths()>
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.view.WindowInsetsAnimation$Bounds: android.graphics.Insets getLowerBound()>
<android.text.PackedObjectVector: int width()>
<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)>
<android.os.SystemConfigManager: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>
<android.graphics.ColorSpace: java.lang.String getName()>
<android.app.ActivityManager: int getLockTaskModeState()>
<android.provider.ContactsContract$CommonDataKinds$Im: int getProtocolLabelResource(int)>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<com.android.ims.internal.IImsVideoCallProvider$Default: android.os.IBinder asBinder()>
<android.view.View: java.lang.CharSequence getContentDescription()>
<android.os.IUserManager$Default: java.lang.String getUserName()>
<android.graphics.Outline: float getAlpha()>
<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>
<android.transition.ChangeTransform$1: java.lang.Object get(java.lang.Object)>
<android.graphics.RectF: int hashCode()>
<android.net.ITetheredInterfaceCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Default: android.os.IBinder asBinder()>
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)>
<android.app.IAlarmListener$Stub: android.app.IAlarmListener getDefaultImpl()>
<android.renderscript.Type: android.renderscript.Element getElement()>
<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>
<android.app.AppOpsManager$OpEventProxyInfo: int describeContents()>
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)>
<android.hardware.radio.RadioManager$ProgramInfo: java.util.Map getVendorInfo()>
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.content.res.Resources)>
<android.telephony.PhoneNumberRange$1: android.telephony.PhoneNumberRange createFromParcel(android.os.Parcel)>
<android.app.ApplicationPackageManager: android.content.pm.ChangedPackages getChangedPackages(int)>
<android.media.AudioSystem: int getValueForVibrateSetting(int,int,int)>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>
<android.net.wifi.nl80211.IPnoScanEvent$Stub: java.lang.String getTransactionName(int)>
<android.hardware.display.ColorDisplayManager: int getMinimumColorTemperature(android.content.Context)>
<android.hardware.cas.V1_1.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>
<android.text.CharSequenceCharacterIterator: int getEndIndex()>
<android.view.View$4: java.lang.Float get(android.view.View)>
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: android.view.AppTransitionAnimationSpec[] get()>
<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.telecom.ParcelableCallAnalytics$VideoEvent: int describeContents()>
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String,boolean)>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>
<android.app.IWindowToken$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputFormats()>
<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)>
<com.android.internal.os.RuntimeInit: java.lang.String lambda$commonInit$0()>
<android.widget.AdapterViewAnimator: int access$000(android.widget.AdapterViewAnimator)>
<android.app.admin.DevicePolicyManager: int getGlobalPrivateDnsMode(android.content.ComponentName)>
<com.android.internal.os.BatterySipper: int compareTo(java.lang.Object)>
<android.telephony.ServiceState$1: android.telephony.ServiceState[] newArray(int)>
<android.media.VolumeShaper$State: float getVolume()>
<android.widget.Spinner: int getDropDownHorizontalOffset()>
<android.media.tv.TvInputInfo: int describeContents()>
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.IOverrideValidator getOverrideValidator()>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Default: android.os.IBinder asBinder()>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>
<android.app.SystemServiceRegistry$11: android.hardware.hdmi.HdmiControlManager createService()>
<android.app.admin.DevicePolicyManager: boolean isUnattendedManagedKiosk()>
<android.view.inputmethod.InputMethodManager: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler)>
<android.view.ViewRootImpl: int getTextDirection()>
<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)>
<android.service.notification.StatusBarNotification: java.lang.String getShortcutId()>
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.telephony.ims.aidl.IImsMmTelListener asInterface(android.os.IBinder)>
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()>
<android.net.IpSecConfig: android.net.IpSecAlgorithm getEncryption()>
<android.view.View: int getSuggestedMinimumHeight()>
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<android.service.vr.IVrManager$Default: boolean getPersistentVrModeEnabled()>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<android.view.textclassifier.TextClassification$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.os.UserManager: java.util.List getUserProfiles()>
<android.hardware.soundtrigger.SoundTrigger$SoundModelEvent: int hashCode()>
<android.telephony._$$Lambda$SubscriptionManager$XMBKvTqAZ_tfr6YV6zRf1verEog: int applyAsInt(java.lang.Object)>
<android.renderscript.FieldPacker: int getPos()>
<android.app.Notification: int getGroupAlertBehavior()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>
<android.net.IpSecManager$UdpEncapsulationSocket: int getResourceId()>
<android.location.GnssMeasurement: int getSvid()>
<android.text.DynamicLayout: int getEllipsizedWidth()>
<android.print.ILayoutResultCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(android.net.NetworkTemplate,long,long)>
<android.app.IAppTask$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()>
<android.content.pm.IPinItemRequest$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo()>
<android.os.NullVibrator: android.os.NullVibrator getInstance()>
<android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: java.lang.CharSequence getLabel()>
<com.android.internal.inputmethod.IInputContentUriToken$Stub: android.os.IBinder asBinder()>
<android.hardware.usb.UsbConfiguration: int describeContents()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getMimeGroup(java.lang.String,java.lang.String)>
<android.os.Temperature: float getValue()>
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback()>
<android.hardware.radio.V1_0.WcdmaSignalStrength: int hashCode()>
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.graphics.Color: boolean isSrgb()>
<android.telephony.TelephonyManager: int getNumberOfModemsWithSimultaneousDataConnections()>
<android.net.NetworkStats: long getElapsedRealtimeAge()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.lang.String access$100(android.telephony.VisualVoicemailSmsFilterSettings$Builder)>
<android.text.style.TypefaceSpan: int describeContents()>
<android.telephony.TelephonyManager: int getSupportedModemCount()>
<com.android.internal.view.menu.IconMenuView: int getLayoutNumRows()>
<android.telephony.ModemActivityInfo: int describeContents()>
<android.media.midi.MidiDeviceStatus: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>
<android.media.AudioManager: int listPreviousAudioDevicePorts(java.util.ArrayList)>
<android.content.pm.IDexModuleRegisterCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateService()>
<android.widget.OverScroller: int getStartY()>
<android.graphics.drawable.LayerDrawable: int getLeftPadding()>
<android.service.vr.IVrManager$Stub$Proxy: int getVr2dDisplayId()>
<android.permission.IPermissionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GpsClock: double getBiasInNs()>
<android.graphics.fonts.SystemFonts: android.graphics.fonts.FontFamily[] getSystemFallback(java.lang.String)>
<android.os.FileUtils$1: int compare(java.io.File,java.io.File)>
<com.android.internal.telephony.ISub$Default: int getDefaultSubId()>
<android.app.NotificationChannelGroup: java.lang.String getId()>
<android.os.storage.VolumeInfo: java.io.File getInternalPathForUser(int)>
<android.net.NetworkScoreManager: android.net.NetworkScorerAppData getActiveScorer()>
<android.media.MediaRouterClientState: android.media.MediaRouterClientState$RouteInfo getRoute(java.lang.String)>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()>
<android.telephony.ims.feature.ImsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()>
<android.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
<android.widget.AdapterViewAnimator: int modulo(int,int)>
<android.content.res.AssetManager: android.content.res.ApkAssets[] access$102(android.content.res.AssetManager,android.content.res.ApkAssets[])>
<android.telephony.PreciseCallState$1: android.telephony.PreciseCallState[] newArray(int)>
<android.view.contentcapture.ContentCaptureEvent: int describeContents()>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)>
<android.text.FontConfig$Font: java.lang.String getFontName()>
<android.widget.Magnifier: android.graphics.Point getPosition()>
<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo[] newArray(int)>
<android.graphics.Path: android.graphics.Path$FillType getFillType()>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getPhoneAccountsSupportingScheme(java.lang.String,java.lang.String)>
<android.filterfw.core.VertexFrame: float[] getFloats()>
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()>
<com.android.internal.app.IAppOpsService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ICellInfoCallback$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getCdmaPrlVersion(int)>
<android.hardware.CameraStatus: int describeContents()>
<android.telephony.CellSignalStrengthLte: int getRsrp()>
<android.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()>
<android.view.animation.PathInterpolator: float getInterpolation(float)>
<android.net.ConnectivityThread: android.os.Looper getInstanceLooper()>
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintJobInfos(int,int)>
<android.app.backup.FullBackupDataOutput: long getSize()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getId()>
<android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager asInterface(android.os.IBinder)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator: int compare(java.lang.Object,java.lang.Object)>
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isInUse()>
<android.net.lowpan.LowpanBeaconInfo: int describeContents()>
<android.hardware.radio.RadioManager$BandDescriptor: int getRegion()>
<android.app.role.IRoleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Default: boolean disableDataConnectivity()>
<android.graphics.drawable.GradientDrawable: int getAlpha()>
<android.telephony.SmsCbMessage: boolean isEtwsMessage()>
<android.content.pm.parsing.component.ParsedService: int getForegroundServiceType()>
<android.service.persistentdata.PersistentDataBlockManager: long getMaximumDataBlockSize()>
<android.accounts.IAccountAuthenticatorResponse$Stub: java.lang.String getTransactionName(int)>
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()>
<android.location.GpsMeasurement: short getState()>
<android.hardware.camera2.params.ReprocessFormatsMap: int hashCode()>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.os.IBinder asBinder()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.hardware.biometrics.IBiometricServiceReceiver asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getProgressBackgroundTintMode()>
<android.database.sqlite.SQLiteQueryBuilder: int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.os.IThermalStatusListener$Stub: android.os.IBinder asBinder()>
<android.hardware.HardwareBuffer: int getHeight()>
<android.os.ISystemConfig$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageManager$Default: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)>
<android.os.Debug: int getThreadAllocSize()>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getStarts(int)>
<android.view.autofill.AutofillManager$AugmentedAutofillManagerClient: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)>
<android.widget.ImageView: boolean getBaselineAlignBottom()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)>
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getTaskAffinity()>
<android.content.IntentFilter: java.lang.String getAction(int)>
<android.telephony.CellInfoLte: android.telephony.CellIdentity getCellIdentity()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute()>
<android.app.backup.IBackupManager$Default: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>
<android.os.storage.IObbActionListener$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
<android.text.style.RelativeSizeSpan: int getSpanTypeIdInternal()>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: int getOtaStatus(int)>
<android.print.PrinterId: int describeContents()>
<com.android.internal.policy.PhoneWindow: android.view.LayoutInflater getLayoutInflater()>
<android.app.Activity$HostCallbacks: int onGetWindowAnimations()>
<android.text.MeasuredParagraph: android.text.Layout$Directions getDirections(int,int)>
<android.media.AudioManager: int getDeviceVolumeBehavior(int,java.lang.String)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getActiveNetwork()>
<android.app.SystemServiceRegistry$21: android.location.CountryDetector createService()>
<com.google.android.mms.pdu.PduPart: java.lang.String generateLocation()>
<android.widget.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>
<android.media.AudioTrack: int getSampleRate()>
<android.content.pm.parsing.component.ParsedActivity: int getPersistableMode()>
<android.database.AbstractWindowedCursor: short getShort(int)>
<android.app.ActivityManager$TaskSnapshot: int getRotation()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getClassName()>
<android.widget.ListPopupWindow: int getHeight()>
<android.media.VolumeShaper: int getId()>
<android.app.AppOpsManager$HistoricalPackageOps: java.lang.String getPackageName()>
<android.widget.TextView: android.os.LocaleList getImeHintLocales()>
<android.content.ContentProvider: android.content.Context requireContext()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()>
<android.view._$$Lambda$FocusFinder$P8rLvOJhymJH5ALAgUjGaM5gxKA: android.view.View get(android.view.View,android.view.View)>
<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)>
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSmsSubId()>
<android.media.projection.IMediaProjectionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo createFromParcel(android.os.Parcel)>
<android.content.pm.SuspendDialogInfo: int getTitleResId()>
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getInstalledModules(int)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedFrameRates()>
<android.telephony.UiccCardInfo: boolean isEuicc()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getSnoozedNotificationsFromListener(android.service.notification.INotificationListener,int)>
<android.hardware.soundtrigger.SoundTrigger$SoundModelEvent: int describeContents()>
<android.hardware.input.IInputManager$Default: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)>
<android.media.session.PlaybackState: float getPlaybackSpeed()>
<android.app.backup.FullBackup$BackupScheme: boolean isFullBackupContentEnabled()>
<android.telephony.data.ApnSetting: int getApnSetId()>
<android.graphics.ColorSpace$Rgb: float[] getPrimaries(float[])>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)>
<android.view.WindowMetrics: android.graphics.Rect getBounds()>
<android.media.AudioAttributes: int getCapturePreset()>
<android.app.IAppTask$Stub: android.app.IAppTask asInterface(android.os.IBinder)>
<android.media.AudioGain: int rampDurationMaxMs()>
<android.app.Activity: android.os.IBinder autofillClientGetActivityToken()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()>
<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()>
<android.security.keystore.ICredstoreTokenCallback$Default: android.os.IBinder asBinder()>
<android.net.Uri: int hashCode()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IBooleanConsumer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.content.pm.IPackageManager$Default: byte[] getInstantAppCookie(java.lang.String,int)>
<android.hardware.camera2.params.StreamConfigurationDuration: android.util.Size getSize()>
<com.android.internal.util.FastXmlSerializer: boolean getFeature(java.lang.String)>
<android.app.compat.ChangeIdStateQuery: int hashCode()>
<android.hardware.location.ContextHubInfo: byte getChreApiMinorVersion()>
<android.media.IAudioService$Stub$Proxy: int getRingerModeInternal()>
<android.security.KeyStore: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>
<android.service.autofill.UserData: int getMaxUserDataSize()>
<android.os.VibrationEffect$Prebaked: long getDuration()>
<android.net.IpPrefix: byte[] access$000(android.net.IpPrefix)>
<android.view.ViewTreeObserver$CopyOnWriteArray: int size()>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>
<android.telecom.VideoProfile: int getQuality()>
<android.content.ContentResolver: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmount(int)>
<android.view.ViewConfiguration: long getAccessibilityShortcutKeyTimeoutAfterConfirmation()>
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()>
<android.view.IWindowSession$Stub: android.view.IWindowSession asInterface(android.os.IBinder)>
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getSubject()>
<android.content.res.ResourcesImpl$ThemeImpl: int[] getAllAttributes()>
<android.view.Choreographer: long getFrameTime()>
<android.os.Temperature: int getStatus()>
<android.os.IncidentReportArgs: int sectionCount()>
<android.graphics.animation.RenderNodeAnimator: long getDuration()>
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.view.InsetsSource: int getType()>
<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()>
<android.media.IAudioService$Default: int getRingerModeInternal()>
<android.app.IUiAutomationConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder asBinder()>
<android.metrics.LogMaker: long getTimestamp()>
<android.telephony.CellIdentityTdscdma: int getUarfcn()>
<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>
<android.graphics.Region: android.graphics.Rect getBounds()>
<com.android.internal.os.ClassLoaderFactory: java.lang.String getPathClassLoaderName()>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<com.android.internal.graphics.palette.Palette: int getDominantColor(int)>
<android.os.Debug$MemoryInfo: int getSummaryTotalPss()>
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getCurrentInsets()>
<android.app.admin.PasswordMetrics$ComplexityBucket$1: int getMinimumLength(boolean)>
<android.os.IUserManager$Default: android.os.Bundle getDefaultGuestRestrictions()>
<android.view.accessibility.IAccessibilityManagerClient$Stub: java.lang.String getTransactionName(int)>
<android.renderscript.Float2: float get(int)>
<android.text.style.LineBackgroundSpan$Standard: int describeContents()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.media.tv.tunerresourcemanager.IResourcesReclaimListener asInterface(android.os.IBinder)>
<android.content.pm.parsing.component.ParsedProcess: int getGwpAsanMode()>
<android.util.XmlPullAttributes: int getAttributeCount()>
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()>
<android.os.PowerManager: boolean isSustainedPerformanceModeSupported()>
<android.service.oemlock.IOemLockService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IMediaRouterClient$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int,long)>
<android.location.GnssMeasurementCorrections: long getToaGpsNanosecondsOfWeek()>
<android.view.textservice.SpellCheckerInfo: int describeContents()>
<android.os.SystemProperties: long getLong(java.lang.String,long)>
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeSuggestedWordStartIndex()>
<android.view.KeyEvent: int getFlags()>
<android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
<android.graphics.text.LineBreaker$Result: int getEndLineHyphenEdit(int)>
<com.android.ims.internal.IImsVideoCallProvider$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>
<android.telephony.SubscriptionManager: void requestEmbeddedSubscriptionInfoListRefresh()>
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>
<android.telephony.CallAttributes: int hashCode()>
<android.app.ContextImpl: java.io.File getExternalCacheDir()>
<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()>
<android.app.IBackupAgent$Stub: android.os.IBinder asBinder()>
<android.hardware.usb.UsbInterface: int getAlternateSetting()>
<android.app.usage.IStorageStatsManager$Default: long getTotalBytes(java.lang.String,java.lang.String)>
<android.os.ICancellationSignal$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.integrity.RuleSet: java.lang.String getVersion()>
<android.hardware.usb.UsbInterface: int getInterfaceClass()>
<android.hardware.cas.V1_1.ICasListener$Stub: java.lang.String interfaceDescriptor()>
<android.app.INotificationManager$Default: java.util.List getAllowedAssistantAdjustments(java.lang.String)>
<android.content.res.ResourcesImpl$ThemeImpl: int getChangingConfigurations()>
<android.view.contentcapture.IContentCaptureManager$Stub: java.lang.String getTransactionName(int)>
<android.view.textclassifier.TextClassificationSessionId: int describeContents()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo2Callback getDefaultImpl()>
<android.telephony.NetworkRegistrationInfo: android.telephony.NetworkRegistrationInfo sanitizeLocationInfo()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getUiccCardsInfo(java.lang.String)>
<android.internal.hidl.base.V1_0.DebugInfo: int hashCode()>
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAppTasks(java.lang.String)>
<android.net.wifi.nl80211.WifiNl80211Manager: java.util.List getScanResults(java.lang.String,int)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighResolutionOutputSizes(int)>
<android.content.pm.IPinItemRequest$Stub$Proxy: boolean isValid()>
<android.app.admin.StartInstallingUpdateCallback$Stub: android.app.admin.StartInstallingUpdateCallback getDefaultImpl()>
<android.content.pm.PackageInstaller$Session: boolean isMultiPackage()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4600()>
<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri getReferrerUri()>
<android.hardware.biometrics.IAuthService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int describeContents()>
<android.text.PackedObjectVector: int size()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.widget.TextView: java.lang.String getSelectedText()>
<android.hardware.location.IContextHubTransactionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.tv.TvStreamConfig: int getGeneration()>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>
<android.telephony.TelephonyManager: java.lang.String getCdmaMin(int)>
<android.widget.Editor: float getLastUpPositionY()>
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: boolean isCreated()>
<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)>
<android.hardware.hdmi.HdmiDeviceInfo: int getVendorId()>
<android.media.MediaFormat: float getFloat(java.lang.String,float)>
<android.telephony.TelephonyManager: java.util.List getPackagesWithCarrierPrivileges()>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getDurationHour()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getServices(int,int)>
<android.util.jar.StrictJarFile$FDStream: int read()>
<android.app.NotificationManager: android.app.NotificationManager$Policy getNotificationPolicy()>
<android.telephony.ServiceState$1: void <init>()>
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms getDefaultImpl()>
<android.content.pm.IPackageManager$Default: int getPrivateFlagsForUid(int)>
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)>
<android.media.AudioManager: int getVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.os.IVibratorStateListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellInfoNr: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Range getFpsRange()>
<android.content.pm.IDataLoaderManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.IConnectivityManager$Stub$Proxy: boolean isCallerCurrentAlwaysOnVpnLockdownApp()>
<android.hardware.usb.IUsbSerialReader$Stub: java.lang.String getTransactionName(int)>
<android.telephony.AvailableNetworkInfo: java.util.List getBands()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.os.IBinder asBinder()>
<android.media.AudioMetadata$AutoGrowByteBuffer: int position()>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mutate()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.TelecomAnalytics dumpCallAnalytics()>
<android.service.notification.ZenPolicy: int getPriorityCategoryRepeatCallers()>
<com.android.internal.app.IVoiceInteractorCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: boolean isPackageSuspended()>
<android.widget.TextView: int getMinEms()>
<android.media.tv.tunerresourcemanager.TunerDescramblerRequest: int describeContents()>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.app.WallpaperManager: android.graphics.Bitmap getBitmapAsUser(int,boolean)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
<android.app.job.IJobScheduler$Default: int schedule(android.app.job.JobInfo)>
<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>
<android.media.midi.IMidiDeviceServer$Default: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.content.SyncRequest: long getSyncRunTime()>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Default: android.os.IBinder asBinder()>
<android.media.session.ISessionController$Stub$Proxy: android.os.Bundle getExtras()>
<android.view.InsetsState: int calculateUncontrollableInsetsFromFrame(android.graphics.Rect)>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.window.IWindowContainerTransactionCallback$Default: android.os.IBinder asBinder()>
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeBindMount(int,java.lang.String,java.lang.String,int)>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.app.contentsuggestions.IContentSuggestionsManager asInterface(android.os.IBinder)>
<android.widget.AbsListView: int getListPaddingBottom()>
<android.graphics.ParcelableColorSpace: float getMaxValue(int)>
<android.service.notification.IStatusBarNotificationHolder$Stub: java.lang.String getTransactionName(int)>
<android.view.WindowInsets: android.graphics.Insets getInsets(int)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()>
<android.window.IDisplayAreaOrganizer$Stub: android.os.IBinder asBinder()>
<android.util.proto.ProtoStream: int getOffsetFromToken(long)>
<android.telephony.ServiceState: boolean isIwlanPreferred()>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>
<android.app.IActivityTaskManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int unlock(int,java.lang.String)>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.AccessibilityWindowInfo: int getDisplayId()>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.CallQuality: int getAverageRelativeJitter()>
<android.hardware.location.ContextHubInfo: int describeContents()>
<android.text.FontConfig$Font: java.lang.String getFallbackFor()>
<android.view.contentcapture.ViewNode: int getTextSelectionStart()>
<android.os.IThermalStatusListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)>
<com.android.internal.view.IInputMethodManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.DisabledWallpaperManager: int getDesiredMinimumHeight()>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.input.KeyboardLayout: int getProductId()>
<android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>
<android.telephony.CellSignalStrengthTdscdma: int getDbm()>
<android.app.assist.AssistStructure$ViewNodeBuilder: int getChildCount()>
<android.hardware.camera2.ICameraDeviceCallbacks$Default: android.os.IBinder asBinder()>
<android.view.TextureLayer: long getLayerHandle()>
<android.app.INotificationManager$Stub$Proxy: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<android.content.IContentService$Stub$Proxy: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<android.telephony.AccessNetworkUtils: int getOperatingBandForEarfcn(int)>
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>
<android.widget.TextView: int getAutoSizeMaxTextSize()>
<android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>
<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray getSplitDependencies()>
<com.android.internal.inputmethod.IInputContentUriToken$Stub: com.android.internal.inputmethod.IInputContentUriToken getDefaultImpl()>
<android.media.AudioManager: boolean isVolumeFixed()>
<android.net.Uri$StringUri: java.lang.String getPath()>
<android.hardware.camera2.impl.CameraMetadataNative$7: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.util.EventLog$Event: long getTimeNanos()>
<android.telephony.euicc.EuiccManager: void getDefaultDownloadableSubscriptionList(android.app.PendingIntent)>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<android.telephony.SignalStrength: boolean isGsm()>
<android.telephony.SignalStrength: int getGsmLevel()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdType()>
<com.android.internal.util.StateMachine$LogRecords: int access$1900(com.android.internal.util.StateMachine$LogRecords)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
<android.view.View: long getUniqueDrawingId()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.os.IBinder asBinder()>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<android.app.Notification: java.lang.CharSequence getSettingsText()>
<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule$Builder addRuleFromParcel(android.os.Parcel)>
<android.telephony.CarrierRestrictionRules: java.util.List access$202(android.telephony.CarrierRestrictionRules,java.util.List)>
<android.app.ContextImpl: android.view.Display getDisplay()>
<android.security.keymaster.KeymasterDefs: java.lang.String getErrorMessage(int)>
<android.hardware.cas.V1_2.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.telephony.ims.aidl.IImsConfig$Default: int getConfigInt(int)>
<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>
<android.app.prediction.IPredictionCallback$Stub: android.app.prediction.IPredictionCallback asInterface(android.os.IBinder)>
<android.os.TestLooperManager: android.os.MessageQueue getMessageQueue()>
<android.media.MediaDrm$KeyRequest: java.lang.String getDefaultUrl()>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules build()>
<android.app.job.JobWorkItem: int getWorkId()>
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage(android.os.UserHandle)>
<android.hardware.cas.V1_2.IMediaCasService$Proxy: int hashCode()>
<android.hardware.radio.RadioMetadata: int hashCode()>
<android.app.Dialog: android.app.ActionBar getActionBar()>
<android.media.AudioManager: java.util.List getActivePlaybackConfigurations()>
<android.app.admin.DevicePolicyManager: boolean isOverrideApnEnabled(android.content.ComponentName)>
<android.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()>
<android.content.pm.parsing.component.ParsedActivity: int getRotationAnimation()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: int getRadioPowerState()>
<android.hardware.usb.UsbConfiguration: java.lang.String getName()>
<android.window.IDisplayAreaOrganizerController$Stub: android.window.IDisplayAreaOrganizerController getDefaultImpl()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: java.lang.String getTransactionName(int)>
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.widget.ExpandableListView: int getFlatListPosition(long)>
<android.app.admin.SystemUpdatePolicy$InstallationOption: long getEffectiveTime()>
<android.media.MediaMetadata: long getLong(java.lang.String)>
<android.hardware.lights.Light: int getId()>
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>
<android.telephony.CdmaEriInformation: int getEriIconMode()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isSaturationActivated()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>
<android.app.IActivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.PackageParser$Package: long getLongVersionCode()>
<android.location.GnssAntennaInfo$SphericalCorrections: double[][] getCorrectionUncertaintiesArray()>
<android.app.IActivityManager$Stub$Proxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<android.window.IWindowOrganizerController$Stub$Proxy: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>
<com.android.internal.app.LocalePicker: java.lang.String[] getSupportedLocales(android.content.Context)>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: com.android.internal.telephony.euicc.IGetProfileCallback getDefaultImpl()>
<android.hardware.display.WifiDisplayStatus: int getScanState()>
<android.hardware.camera2.impl.CaptureResultExtras: java.lang.String getErrorPhysicalCameraId()>
<android.os.UserManager: boolean isManagedProfile(int)>
<android.media.tv.TvTrackInfo: int getAudioSampleRate()>
<android.text.Annotation: int getSpanTypeId()>
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>
<android.content.pm.IPackageManager$Default: java.lang.String getIncidentReportApproverPackageName()>
<android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>
<android.graphics.ImageDecoder$DecodeException: android.graphics.ImageDecoder$Source getSource()>
<android.media.AudioTrack: android.media.AudioAttributes getAudioAttributes()>
<android.app.PictureInPictureParams: java.util.List getActions()>
<android.os.ResultReceiver: int describeContents()>
<android.app.IActivityManager$Default: int checkPermission(java.lang.String,int,int)>
<android.location.ILocationListener$Stub: android.location.ILocationListener getDefaultImpl()>
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte createFromParcel(android.os.Parcel)>
<android.os.storage.IStorageManager$Stub: android.os.IBinder asBinder()>
<android.app.job.JobInfo: int getBackoffPolicy()>
<android.hardware.input.IInputManager$Default: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>
<android.widget.OverScroller: int timePassed()>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForOriginationEnd()>
<android.telephony.SmsManager$3: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)>
<android.content.Context: java.io.File getCrateDir(java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRecommendedStreamConfiguration$MarshalerRecommendedStreamConfiguration: int getNativeSize()>
<android.graphics.RenderNode: boolean getClipToBounds()>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getSlotIndex()>
<android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()>
<android.widget.HorizontalScrollView: int getLeftEdgeEffectColor()>
<android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController asInterface(android.os.IBinder)>
<android.app.UiAutomation: java.util.List getWindows()>
<android.animation.StateListAnimator$Tuple: android.animation.Animator getAnimator()>
<android.widget.TextView: int getCurrentHintTextColor()>
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$VideoCapabilities getVideoCapabilities()>
<com.android.internal.infra.IAndroidFuture$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.AdaptiveIconDrawable: int getOpacity()>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.telephony.DataConnectionRealTimeInfo: int hashCode()>
<android.view.textclassifier.TextSelection$Request: int getEndIndex()>
<android.os.IIncidentDumpCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.IntentSender: android.content.IIntentSender getTarget()>
<android.text.Layout: int getLineEnd(int)>
<android.text.method.WordIterator: int getPunctuationEnd(int)>
<android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager asInterface(android.os.IBinder)>
<android.telephony.CellSignalStrengthNr: int getLevel()>
<android.accessibilityservice.AccessibilityGestureEvent: int describeContents()>
<android.telephony.ims.ImsSsData: int[] getSuppServiceInfoCompat()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.content.pm.ShortcutInfo: java.lang.String getDisabledReasonForRestoreIssue(android.content.Context,int)>
<android.view.VerifiedInputEvent: int access$000(android.os.Parcel)>
<android.net.IpSecManager$SecurityParameterIndex: int getSpi()>
<android.telephony.DataFailCause: boolean isRadioRestartFailure(android.content.Context,int,int)>
<android.os.BatteryStats$1: int compare(java.lang.Object,java.lang.Object)>
<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getPackageName()>
<com.android.internal.inputmethod.IIntResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm createFromParcelBody(android.os.Parcel)>
<com.android.internal.policy.DecorView: int getColorViewTopInset(int,int)>
<android.hardware.display.DisplayManager: java.util.List getBrightnessEvents()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.graphics.Region getMagnificationRegion(int)>
<android.provider.DocumentsContract$Path: java.lang.String getRootId()>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>
<android.media.AudioManager: java.lang.Object access$1500(android.media.AudioManager)>
<android.media.session.ISessionManager$Stub$Proxy: int getSessionPolicies(android.media.session.MediaSession$Token)>
<android.widget.SelectionActionModeHelper: android.view.textclassifier.TextClassification getTextClassification()>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>
<android.hardware.radio.RadioManager$BandConfig: int hashCode()>
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: short getAccumulatedDeltaRangeState()>
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,java.lang.String,int)>
<android.os.storage.IObbActionListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode(java.lang.String,java.lang.String)>
<android.media.MediaDrm$ListenerArgs: int access$1300(android.media.MediaDrm$ListenerArgs)>
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()>
<android.app.ISearchManager$Default: java.util.List getGlobalSearchActivities()>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<android.view.DisplayInfo: int describeContents()>
<android.view.IWallpaperVisibilityListener$Stub: android.os.IBinder asBinder()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int loadPhraseModel(android.media.soundtrigger_middleware.PhraseSoundModel)>
<android.view.IScrollCaptureClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.textclassifier.TextClassification: java.util.List getActions()>
<android.hardware.iris.IIrisService$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: android.os.IBinder asBinder()>
<android.animation.TypeConverter: java.lang.Class getSourceType()>
<android.hardware.radio.V1_2.CellIdentityWcdma: int hashCode()>
<android.telephony.CellSignalStrengthLte: int getRssi()>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState: android.util.Property getProperty(java.lang.String)>
<android.os.IVold$Stub$Proxy: java.lang.String fdeGetPassword()>
<android.os.PowerManager: boolean isRebootingUserspaceSupportedImpl()>
<android.os.Environment: java.io.File getDataPreloadsFileCacheDirectory()>
<android.telephony.ims.aidl.IImsSmsListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.Outline: boolean getRect(android.graphics.Rect)>
<android.content.ClipDescription: java.lang.CharSequence getLabel()>
<android.graphics.drawable.VectorDrawable$VFullPath: float getFillAlpha()>
<android.util.Half: int getSign(short)>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query,java.lang.String[])>
<android.hardware.ICameraService$Stub$Proxy: java.lang.String getLegacyParameters(int)>
<android.media.MediaRoute2Info: java.lang.CharSequence getName()>
<android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)>
<android.provider.Telephony$Mms$Addr: android.net.Uri getAddrUriForMessage(java.lang.String)>
<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.session.MediaSession$QueueItem: int describeContents()>
<android.hardware.usb.IUsbManager$Default: long getScreenUnlockedFunctions()>
<android.provider.Settings$Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)>
<android.app.job.JobWorkItem: long getEstimatedNetworkDownloadBytes()>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>
<android.os.IInstalld$Stub$Proxy: android.os.storage.CrateMetadata[] getUserCrates(java.lang.String,int)>
<android.view.contentcapture.ContentCaptureManager: java.util.Set getContentCaptureConditions()>
<android.app.IUidObserver$Default: android.os.IBinder asBinder()>
<android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int,boolean)>
<com.android.internal.policy.PhoneFallbackEventHandler: android.app.SearchManager getSearchManager()>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>
<android.content.UndoManager: boolean isInUpdate()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getProtectedBroadcasts()>
<android.app.NotificationChannel: int getLockscreenVisibility()>
<com.android.internal.app.AlertController: int access$1302(com.android.internal.app.AlertController,int)>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getCurrentRuleSetVersion()>
<android.hardware.display.IDisplayManager$Default: android.content.pm.ParceledListSlice getAmbientBrightnessStats()>
<android.view.textclassifier.TextClassification$Request: int getStartIndex()>
<android.media.tv.TvTrackInfo: int getVideoHeight()>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: com.android.internal.telephony.euicc.IAuthenticateServerCallback asInterface(android.os.IBinder)>
<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)>
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String[] getMessages()>
<android.media.IRemoteVolumeObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.IRestrictionsManager$Default: android.os.IBinder asBinder()>
<com.android.internal.telecom.ITelecomService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.ISessionController$Stub$Proxy: long getFlags()>
<android.app.WallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int,int)>
<android.os.IInstalld$Default: long[] getUserSize(java.lang.String,int,int,int[])>
<android.widget.RtlSpacingHelper: int getEnd()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int hashCode()>
<android.app.VoiceInteractor$PickOptionRequest$Option: java.lang.CharSequence getLabel()>
<android.renderscript.Float3: float get(int)>
<android.hardware.cas.V1_2.ICasListener$Stub: java.lang.String interfaceDescriptor()>
<android.app.backup.IBackupManagerMonitor$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String,int)>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>
<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(android.widget.ExpandableListConnector$GroupMetadata)>
<android.hardware.input.TouchCalibration: int describeContents()>
<android.telephony.CellSignalStrength: void <init>()>
<android.os.IUserManager$Stub$Proxy: int[] getProfileIds(int,boolean)>
<android.app.assist.AssistContent: android.os.Bundle getExtras()>
<android.util.apk.ApkSigningBlockUtils: byte[] readLengthPrefixedByteArray(java.nio.ByteBuffer)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getHeight()>
<android.telephony.TelephonyManager: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()>
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.parsing.component.ParsedPermission: java.lang.String getBackgroundPermission()>
<android.telephony.SmsManager: java.lang.String getSmscAddress()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
<android.os.IInstalld$Stub: android.os.IInstalld asInterface(android.os.IBinder)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>
<android.hardware.cas.V1_1.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.widget.ListView: int getMaxScrollAmount()>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.os.IBinder asBinder()>
<android.location.ICountryDetector$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.util.TypedProperties: short getShort(java.lang.String)>
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)>
<android.text.method.QwertyKeyListener: int getInputType()>
<android.os.IThermalService$Default: android.os.CoolingDevice[] getCurrentCoolingDevices()>
<android.os.Build$Partition: long getBuildTimeMillis()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>
<android.hardware.display.ColorDisplayManager: boolean isDeviceColorManaged()>
<android.service.notification.INotificationListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.Toolbar: android.content.Context getPopupContext()>
<android.os.image.IDynamicSystemService$Default: android.gsi.GsiProgress getInstallationProgress()>
<android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>
<android.view.Display: android.graphics.ColorSpace getPreferredWideGamutColorSpace()>
<android.view.autofill.IAutoFillManager$Stub: android.view.autofill.IAutoFillManager asInterface(android.os.IBinder)>
<android.media.IAudioService$Default: int getStreamMaxVolume(int)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.media.tv.TvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String)>
<android.view.contentcapture.ViewNode: int getInputType()>
<android.telephony.NetworkRegistrationInfo$1: void <init>()>
<android.media.midi.MidiDeviceInfo: int getOutputPortCount()>
<com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>
<android.view.Window: android.transition.Scene getContentScene()>
<android.telephony.TelephonyManager: boolean isVoiceCapable()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Default: android.os.IBinder asBinder()>
<android.hardware.location.IContextHubClientCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.hardware.camera2.legacy.LegacyCameraDevice: long getSurfaceId(android.view.Surface)>
<android.app.ContextImpl: android.content.ContentCaptureOptions getContentCaptureOptions()>
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.net.netstats.provider.INetworkStatsProvider asInterface(android.os.IBinder)>
<android.content.pm.ActivityInfo: int getThemeResource()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.policy.DecorView: int getNavBarSize(int,int,int)>
<android.media.AudioManager: java.util.List access$900(android.media.AudioManager)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.View: float getTranslationY()>
<android.print.PrintManager: java.util.List getPrintJobs()>
<android.view.Window: int getNavigationBarDividerColor()>
<android.app.Notification$MessagingStyle: int getUnreadMessageCount()>
<android.hardware.input.IInputManager$Stub: android.os.IBinder asBinder()>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener asInterface(android.os.IBinder)>
<android.text.CharSequenceCharacterIterator: char previous()>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
<com.android.internal.telephony.GsmAlphabet: char gsmToChar(int)>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.os.storage.VolumeRecord: int hashCode()>
<android.window.ITaskOrganizerController$Stub$Proxy: android.window.WindowContainerToken getImeTarget(int)>
<android.media.session.IOnMediaKeyListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
<android.media.ExifInterface$ByteOrderedDataInputStream: int read()>
<android.widget.GridView: int getVerticalSpacing()>
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.graphics.drawable.DrawableContainer: int getAlpha()>
<android.hardware.location.IContextHubTransactionCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getMonitoredRailChargeConsumedMaMs()>
<android.content.pm.IDexModuleRegisterCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationScale(int)>
<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$LogRec getLogRec(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>
<android.widget.ActionMenuView: int getWindowAnimations()>
<android.telephony.UiccSlotInfo: boolean getIsExtendedApduSupported()>
<android.graphics.ColorSpace$Rgb: float[] getInverseTransform(float[])>
<android.content.pm.parsing.component.ParsedInstrumentation: java.lang.String getTargetPackage()>
<android.hardware.Camera$Parameters: float getHorizontalViewAngle()>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>
<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
<android.net.IEthernetServiceListener$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: android.content.pm.dex.ArtManager getArtManager()>
<android.view.TouchDelegate: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()>
<com.android.ims.internal.IImsEcbm$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.PrecomputedText: int getSpanStart(java.lang.Object)>
<android.os.storage.StorageVolume: java.lang.String getId()>
<android.content.pm.PackageManager: boolean getSyntheticAppDetailsActivityEnabled(java.lang.String)>
<android.animation.PathKeyframes$4: int getIntValue(float)>
<com.android.internal.os.FuseAppLoop: int registerCallback(android.os.ProxyFileDescriptorCallback,android.os.Handler)>
<com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession asInterface(android.os.IBinder)>
<android.content.integrity.IAppIntegrityManager$Default: java.lang.String getCurrentRuleSetVersion()>
<android.media.AudioPlaybackCaptureConfiguration: android.media.projection.MediaProjection getMediaProjection()>
<android.view.ViewRootImpl: android.view.ViewParent getParent()>
<android.media.MediaCasStateException: java.lang.String getDiagnosticInfo()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnIndex()>
<android.hardware.display.ColorDisplayManager: int getColorMode()>
<android.util.LruCache: int evictionCount()>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getKey()>
<com.android.internal.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.SearchableInfo$ActionKeyInfo: int describeContents()>
<android.text.SpannableString: int hashCode()>
<android.os.UserManager: java.lang.String getSeedAccountName()>
<android.widget.TextView: boolean getHorizontallyScrolling()>
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>
<android.net.ConnectivityManager: int getNetworkPreference()>
<android.net.lowpan.LowpanManager: android.os.Looper access$100(android.net.lowpan.LowpanManager)>
<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()>
<android.content.ContextWrapper: android.content.AutofillOptions getAutofillOptions()>
<android.util.SparseSetArray: int size()>
<android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener getDefaultImpl()>
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IMediaHTTPConnection$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: boolean isUserAMonkey()>
<android.content.pm.parsing.ParsingPackageImpl: int getTheme()>
<android.window.WindowContainerTransaction$Change: int getWindowSetMask()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)>
<android.content.pm.IDataLoaderStatusListener$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: int changeIccLockPassword(int,java.lang.String,java.lang.String)>
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()>
<android.telephony.ims.stub.RcsCapabilityExchange: android.telephony.ims.aidl.IRcsFeatureListener getListener()>
<android.content.integrity.IAppIntegrityManager$Default: android.content.pm.ParceledListSlice getCurrentRules()>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>
<android.net.lowpan.ILowpanManagerListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityTdscdma: int getChannelNumber()>
<android.view.PointerIcon: int getType()>
<android.telephony.CellIdentityNr: int[] getBands()>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: double[] getTempDouble3Array()>
<android.widget.TextView: int getInputType()>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] listAllTransports()>
<android.net.LocalSocketImpl: java.lang.Object getOption(int)>
<android.hardware.radio.V1_0.TdScdmaSignalStrength: int hashCode()>
<android.widget.TextView: android.graphics.drawable.Drawable getTextCursorDrawable()>
<android.animation.PropertyValuesHolder: java.lang.Class getValueType()>
<android.view.View: int getDrawingCacheQuality()>
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()>
<android.net.INetworkStatsService$Stub: java.lang.String getTransactionName(int)>
<android.graphics.ImageDecoder$Source: android.content.res.Resources getResources()>
<android.view.ViewStub: int getLayoutResource()>
<android.os.storage.VolumeRecord: java.lang.String getFsUuid()>
<android.telephony.ims.ImsSsData: java.util.List getSuppServiceInfo()>
<android.window.IWindowOrganizerController$Default: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)>
<com.android.internal.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()>
<android.content.pm.ICrossProfileApps$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams disallowColorization()>
<android.app.blob.BlobInfo: int describeContents()>
<android.content.Intent: android.content.Intent getSelector()>
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue getEncodedStringValue(int)>
<android.widget.Toolbar: int getCurrentContentInsetLeft()>
<android.net.TrafficStats: long getRxPackets(java.lang.String)>
<android.telephony.SignalStrength: int getLteSignalStrength()>
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: boolean isCharging()>
<android.app.NotificationHistory$HistoricalNotification: long getPostedTimeMs()>
<com.android.internal.app.ISoundTriggerService$Stub: com.android.internal.app.ISoundTriggerService getDefaultImpl()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()>
<android.app.ActivityManager$TaskDescription: boolean getEnsureStatusBarContrastWhenTransparent()>
<android.content.pm.PackageParser: int lambda$parseBaseApplication$1(android.content.pm.PackageParser$Activity,android.content.pm.PackageParser$Activity)>
<android.util.PathParser$PathData: long getNativePtr()>
<android.permission.IPermissionManager$Stub: android.os.IBinder asBinder()>
<android.content.IntentFilter: int countDataTypes()>
<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.SubscriptionPlan: java.util.Iterator cycleIterator()>
<android.animation.AnimatorSet: long getTotalDuration()>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
<android.view.animation.LayoutAnimationController: float getDelay()>
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getFormat()>
<android.telephony.VoiceSpecificRegistrationInfo: int hashCode()>
<com.android.internal.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()>
<android.renderscript.Element: int getSubElementCount()>
<android.graphics.RenderNode: float getScaleY()>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDisplayWhiteBalanceEnabled()>
<android.window.IWindowContainerTransactionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IWindowFocusObserver$Stub: android.view.IWindowFocusObserver getDefaultImpl()>
<android.view.WindowManager$LayoutParams: long getUserActivityTimeout()>
<android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserWhitelistedApps()>
<android.telephony.SubscriptionPlan: int describeContents()>
<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>
<android.companion.IFindDeviceCallback$Stub: android.os.IBinder asBinder()>
<android.companion.ICompanionDeviceManager$Stub: java.lang.String getTransactionName(int)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.content.IClipboard$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.app.IAppOpsStartedCallback$Default: android.os.IBinder asBinder()>
<android.transition.Transition: java.util.List getTargetTypes()>
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getImsProvisioningStatusForCapability(int,int,int)>
<android.telephony.BarringInfo$BarringServiceInfo$1: android.telephony.BarringInfo$BarringServiceInfo[] newArray(int)>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>
<android.telecom.Logging.EventManager$EventRecord: android.telecom.Logging.EventManager$Loggable getRecordEntry()>
<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()>
<android.media.SyncParams: float getTolerance()>
<android.net.IpSecTransform: android.net.IpSecConfig getConfig()>
<android.content.pm.PackageManager: java.lang.String getAppPredictionServicePackageName()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getSlotIndex(int)>
<com.android.internal.app.ISoundTriggerService$Stub: com.android.internal.app.ISoundTriggerService asInterface(android.os.IBinder)>
<android.content.ContextWrapper: java.lang.String getOpPackageName()>
<android.view.InsetsSourceControl: int getType()>
<android.hardware.usb.UsbDevice: int getDeviceClass()>
<android.hardware.location.IContextHubService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.data.ApnSetting$Builder: int access$300(android.telephony.data.ApnSetting$Builder)>
<android.net.NetworkScorerAppData: android.content.ComponentName getRecommendationServiceComponent()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)>
<android.telephony.CellSignalStrengthNr: boolean isValid()>
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getNameForUid(int)>
<android.app.job.JobInfo: int getNetworkType()>
<android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>
<android.view.View$MeasureSpec: int getMode(int)>
<android.content.pm.ModuleInfo: java.lang.String getApexModuleName()>
<android.graphics.ColorSpace$Xyz: float getMaxValue(int)>
<android.hardware.location.IContextHubCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.service.notification.IStatusBarNotificationHolder$Stub: android.service.notification.IStatusBarNotificationHolder asInterface(android.os.IBinder)>
<android.text.style.MetricAffectingSpan$Passthrough: android.text.style.CharacterStyle getUnderlying()>
<android.transition.Slide$1: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.hardware.biometrics.IAuthService$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: int getActivePhoneType()>
<android.os.storage.StorageVolume: int hashCode()>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>
<android.telephony.SubscriptionInfo: java.lang.String getNumber()>
<android.telephony.ims.feature.RcsFeature: android.os.IInterface getBinder()>
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: int getProperty(int,android.os.BatteryProperty)>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<android.media.MediaFormat$UnprefixedKeySet: java.lang.String mapItemToKey(java.lang.String)>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes$Margins getMinMargins()>
<com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService getDefaultImpl()>
<android.media.AudioManager: java.util.List access$1100(android.media.AudioManager)>
<android.telephony.ims.ImsMmTelManager: int getVoWiFiRoamingModeSetting()>
<android.app.IActivityTaskManager$Stub$Proxy: boolean isAssistDataAllowedOnCurrentActivity()>
<android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>
<android.os.StatFs: int getBlockSize()>
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnForSubscriber(int,java.lang.String)>
<android.os.BatteryStatsManager: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()>
<android.app.IAlarmManager$Default: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>
<android.media.midi.MidiDeviceServer$PortClient: android.media.midi.MidiInputPort getInputPort()>
<android.view.inputmethod.SparseRectFArray: int hashCode()>
<android.location.LocationTime: int describeContents()>
<android.content.pm.InstantAppResolveInfo: android.os.Bundle getExtras()>
<android.os.Process: long getStartUptimeMillis()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property getProperty(java.lang.String)>
<android.media.AudioRecord: int getRecordingState()>
<android.graphics.drawable.AnimatedImageDrawable: int getIntrinsicWidth()>
<android.net.IIpSecService$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMax()>
<android.telephony.TelephonyManager: boolean getDataEnabled()>
<com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>
<android.os.connectivity.WifiBatteryStats: long getSleepTimeMillis()>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$0SeZK03YbYwxm_nBE39jPZ1sdMM: float getInterpolation(float)>
<android.util.LruCache: int hitCount()>
<android.util.apk.WrappedX509Certificate: byte[] getSigAlgParams()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSaveExceptIdle()>
<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: android.content.pm.ParceledListSlice getCurrentRules()>
<android.telephony.CellIdentityWcdma: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeLink(int,java.lang.String,int,java.lang.String)>
<android.util.proto.ProtoStream: int getTagSizeFromToken(long)>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>
<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>
<android.telephony.PhoneNumberRange: int hashCode()>
<android.telephony.CellSignalStrengthTdscdma$1: android.telephony.CellSignalStrengthTdscdma createFromParcel(android.os.Parcel)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultRespondViaMessageApplication(android.content.Context,boolean)>
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>
<android.os.IUserManager$Stub$Proxy: java.lang.String getSeedAccountName()>
<android.graphics.CanvasProperty: long getNativeContainer()>
<com.google.android.mms.pdu.SendReq: long getExpiry()>
<android.app.admin.IDevicePolicyManager$Default: long getPasswordExpiration(android.content.ComponentName,int,boolean)>
<android.renderscript.Int3: int get(int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers()>
<com.android.internal.view.IInputMethodSession$Stub: java.lang.String getTransactionName(int)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: int describeContents()>
<android.view.IWindowManager$Default: float getCurrentAnimatorScale()>
<android.telephony.ServiceState: int getDuplexMode()>
<android.media.MediaCodec$OutputFrame: android.media.MediaFormat getFormat()>
<android.view.autofill.AutofillPopupWindow: android.transition.Transition getEnterTransition()>
<android.telephony.TelephonyManager: int getCdmaEriIconIndex(int)>
<android.view.IScrollCaptureClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.AudioManager: int getAllowedCapturePolicy()>
<android.os.UserManager: int[] getProfileIdsWithDisabled(int)>
<android.view.IWindowFocusObserver$Default: android.os.IBinder asBinder()>
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerRxDurationMillis()>
<android.content.pm.ShortcutInfo: int getUserId()>
<android.widget.OverScroller: float getCurrVelocity()>
<com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State valueOf(java.lang.String)>
<android.os.ISystemConfig$Default: android.os.IBinder asBinder()>
<android.app.ContextImpl: android.content.Context createContextForSplit(java.lang.String)>
<android.text.BidiFormatter: boolean getStereoReset()>
<android.media.session.ISessionController$Default: android.media.session.PlaybackState getPlaybackState()>
<android.net.IpSecConfig: int getSpiResourceId()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>
<android.webkit.WebViewFactory: java.lang.String getDataDirectorySuffix()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getColorMode()>
<com.android.internal.policy.PhoneWindow: int access$000(com.android.internal.policy.PhoneWindow)>
<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMinAspectRatio()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Default: android.os.IBinder asBinder()>
<android.telephony.CellInfoCdma: android.telephony.CellInfoCdma createFromParcelBody(android.os.Parcel)>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>
<com.android.internal.inputmethod.IInputContentUriToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IOns$Stub: com.android.internal.telephony.IOns getDefaultImpl()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtIndex(int)>
<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()>
<android.media.midi.IMidiDeviceListener$Stub: android.media.midi.IMidiDeviceListener getDefaultImpl()>
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeEnabled(android.content.ComponentName)>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: java.lang.String getTransactionName(int)>
<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager access$300(android.companion.CompanionDeviceManager)>
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()>
<android.service.autofill.FillEventHistory$Event: java.lang.String getDatasetId()>
<com.android.internal.util.FastXmlSerializer: java.lang.String getName()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanFlags(java.lang.Object)>
<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>
<android.media.SubtitleController: android.media.SubtitleTrack[] getTracks()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportanceForClient(int,android.content.Context)>
<android.telephony.DataSpecificRegistrationInfo: boolean isUsingCarrierAggregation()>
<android.hardware.radio.RadioManager$ModuleProperties: int describeContents()>
<com.android.internal.os.BatteryStatsHistory: java.util.List getFilesNumbers()>
<android.view.View: int getSolidColor()>
<android.content.pm.parsing.component.ParsedIntentInfo: int getIcon()>
<android.media.MediaPlayer: android.os.PersistableBundle getMetrics()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackageForUser(int)>
<com.android.internal.telephony.ITelephony$Default: boolean isDataAllowedInVoiceCall(int)>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForUser(java.lang.String,int,java.lang.String)>
<android.app.timezone.IRulesManager$Default: android.app.timezone.RulesState getRulesState()>
<android.view.contentcapture.ViewNode: java.lang.String getIdEntry()>
<android.telephony.CellIdentityTdscdma: java.lang.String getMobileNetworkOperator()>
<com.android.internal.os.BatteryStatsImpl: long getGpsBatteryDrainMaMs()>
<android.content.pm.IPackageInstaller$Default: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>
<android.text.style.LineBackgroundSpan$Standard: int getColor()>
<android.net.wifi.nl80211.IClientInterface$Default: int[] signalPoll()>
<android.app.prediction.IPredictionCallback$Stub: android.app.prediction.IPredictionCallback getDefaultImpl()>
<android.net.LinkProperties: java.lang.String getDomains()>
<android.content.res.Resources: int[] getIntArray(int)>
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()>
<com.android.ims.internal.IImsVideoCallCallback$Stub: android.os.IBinder asBinder()>
<android.app.Notification: int access$802(android.app.Notification,int)>
<android.view.IDisplayWindowInsetsController$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.LayerDrawable: int getPaddingMode()>
<android.os.IIncidentCompanion$Stub$Proxy: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>
<android.content.pm.ShortcutInfo: java.lang.String getTextResName()>
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.service.persistentdata.IPersistentDataBlockService getDefaultImpl()>
<android.os.connectivity.CellularBatteryStats: long getSleepTimeMillis()>
<android.app.ITransientNotificationCallback$Stub: android.app.ITransientNotificationCallback getDefaultImpl()>
<android.telephony.ServiceState: int getState()>
<android.util.proto.ProtoInputStream: int nextField()>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>
<android.app.role.IRoleController$Stub: java.lang.String getTransactionName(int)>
<android.app.Notification$WearableExtender: int getCustomSizePreset()>
<android.app.VoiceInteractor$CommandRequest: java.lang.String getRequestTypeName()>
<android.animation.FloatKeyframeSet: java.lang.Class getType()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ProgressBar: int getMax()>
<android.view.MotionEvent: int getMetaState()>
<android.text.StaticLayout: int getLineTop(int)>
<android.app.Person: int hashCode()>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.widget.Toast: android.app.INotificationManager access$200()>
<android.content.pm.parsing.ParsingPackageImpl: long getStaticSharedLibVersion()>
<android.os.Debug$MemoryInfo: int getSummaryCodeRss()>
<android.os.IDeviceIdleController$Default: int addPowerSaveWhitelistApps(java.util.List)>
<android.content.pm.IDataLoader$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.HtmlToSpannedConverter$Background: int access$1400(android.text.HtmlToSpannedConverter$Background)>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findPrivateForEmulated(android.os.storage.VolumeInfo)>
<android.os.IBatteryPropertiesRegistrar$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IAudioFocusDispatcher$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioManager: java.lang.Object access$1000(android.media.AudioManager)>
<android.app.backup.ISelectBackupTransportCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$ProgramInfo: int getSubChannel()>
<android.app.role.RoleManager: boolean isRoleAvailable(java.lang.String)>
<android.content.RestrictionEntry: int getType()>
<android.media.MediaDrm: android.os.PersistableBundle getMetrics()>
<android.telephony.CallQuality: int hashCode()>
<android.content.pm.parsing.ParsingPackageImpl: int getVersionCode()>
<android.window.IDisplayAreaOrganizerController$Stub: android.window.IDisplayAreaOrganizerController asInterface(android.os.IBinder)>
<android.widget.AbsListView: int getListPaddingRight()>
<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(android.net.Uri$Part)>
<android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener asInterface(android.os.IBinder)>
<android.app.LoadedApk: java.lang.ClassLoader createSharedLibraryLoader(android.content.pm.SharedLibraryInfo,boolean,java.lang.String,java.lang.String)>
<android.telephony.CellConfigLte: int hashCode()>
<android.telephony.ims.ImsSsData: int getRequestType()>
<android.telephony.CellInfoLte: android.telephony.CellInfo sanitizeLocationInfo()>
<android.content.pm.IDataLoader$Default: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsExternalCallStateListener$Stub: com.android.ims.internal.IImsExternalCallStateListener getDefaultImpl()>
<android.view.autofill.IAutoFillManager$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaDrm: byte[] access$400(android.media.MediaDrm,byte[],byte[],byte[],byte[])>
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.os.IBinder asBinder()>
<com.android.internal.telecom.ITelecomService$Default: android.content.ComponentName getDefaultPhoneApp()>
<android.animation.LayoutTransition: long getDuration(int)>
<android.content.rollback.IRollbackManager$Stub: java.lang.String getTransactionName(int)>
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder)>
<android.content.pm.DataLoaderParamsParcel: int describeContents()>
<android.util.KeyValueListParser$FloatValue: float getValue()>
<android.app.assist.AssistStructure$WindowNode: android.app.assist.AssistStructure$ViewNode getRootViewNode()>
<android.net.wifi.nl80211.IApInterface$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.IContentObserver$Default: android.os.IBinder asBinder()>
<android.telecom.ParcelableCallAnalytics$VideoEvent: int getEventName()>
<android.content.pm.PackageUserState$SuspendParams: int hashCode()>
<android.media.AudioTrack$TunerConfiguration: int getContentId()>
<android.telephony.ims.ImsMmTelManager: boolean isVtSettingEnabled()>
<android.app.admin.DevicePolicyManager: java.util.Set getDefaultCrossProfilePackages()>
<com.android.internal.os.ZygoteServer: java.lang.Runnable runSelectLoop(java.lang.String)>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int nextSpanTransition(int,int,java.lang.Class)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isInEmergencySmsMode()>
<android.app.IServiceConnection$Default: android.os.IBinder asBinder()>
<android.view.IGraphicsStats$Stub: android.os.IBinder asBinder()>
<android.view.Display: int getFlags()>
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getFocusedStackInfo()>
<android.service.notification.ZenPolicy: byte[] toProto()>
<android.app.admin.ConnectEvent: int getPort()>
<android.app.Notification$Builder: int access$4600(android.app.Notification$Builder)>
<com.android.internal.os.BatteryStatsImpl: int access$400()>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: java.lang.String getTransactionName(int)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath$4: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.media.MediaCodecInfo$AudioCapabilities: android.util.Range getBitrateRange()>
<android.widget.Toolbar: int getContentInsetLeft()>
<android.media.AudioFormat: int getChannelCount()>
<android.hardware.camera2.CaptureRequest: java.util.List getKeys()>
<android.hardware.radio.RadioManager$BandConfig: int getLowerLimit()>
<android.view.IWindowSession$Default: android.os.IBinder asBinder()>
<android.telecom.ParcelableCallAnalytics$EventTiming: int describeContents()>
<android.hardware.display.IDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomaticallyAsUser(int)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()>
<android.widget.Toast: float getVerticalMargin()>
<android.system.suspend.ISuspendCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray getKernelMemoryStats()>
<android.os.WorkSource$WorkChain: int getSize()>
<android.util.proto.ProtoInputStream: int getOffset()>
<android.app.admin.IDevicePolicyManager$Default: android.os.PersistableBundle getTransferOwnershipBundle()>
<android.service.notification.ZenPolicy: int getPriorityCategoryConversations()>
<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarVerifier$VerifierEntry initEntry(java.lang.String)>
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBatteryPropertiesRegistrar getDefaultImpl()>
<android.os.UserManager: android.os.UserManager get(android.content.Context)>
<android.print.PrintJobInfo: java.lang.String getLabel()>
<android.hardware.usb.IUsbManager$Stub: android.os.IBinder asBinder()>
<android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)>
<android.app.NotificationManager$Policy: int getAllSuppressedVisualEffects()>
<android.widget.ListPopupWindow: int getHorizontalOffset()>
<android.webkit.WebView: int getContentHeight()>
<android.app.IActivityController$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.SharedMemory: java.io.FileDescriptor getFileDescriptor()>
<android.net.lowpan.LowpanProvision: int hashCode()>
<android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerController getInstance()>
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>
<com.android.internal.telephony.IIntegerConsumer$Stub: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthCdma$1: android.telephony.CellSignalStrengthCdma createFromParcel(android.os.Parcel)>
<android.telephony.CallForwardingInfo: int getTimeoutSeconds()>
<com.android.internal.app.AlertController: int access$900(com.android.internal.app.AlertController)>
<android.app.admin.DevicePolicyManager: boolean getGuestUserDisabled(android.content.ComponentName)>
<android.accounts.IAccountManager$Stub: android.os.IBinder asBinder()>
<android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher asInterface(android.os.IBinder)>
<android.net.IConnectivityManager$Default: android.net.LinkProperties getActiveLinkProperties()>
<android.telephony.ims.feature.CapabilityChangeRequest: int hashCode()>
<android.app.ActivityManager$TaskDescription: int getMinWidth()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.net.ITetheringStatsProvider$Default: android.os.IBinder asBinder()>
<android.app.slice.SliceManager: java.util.Collection getSliceDescendants(android.net.Uri)>
<android.content.res.ConfigurationBoundResourceCache: java.lang.Object getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>
<android.view.textclassifier.TextLanguage$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.app.Activity: android.content.ComponentName contentCaptureClientGetComponentName()>
<com.google.android.mms.util.PduCacheEntry: long getThreadId()>
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.hardware.ISensorPrivacyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)>
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getDescription()>
<android.widget.TextView: android.text.Layout getHintLayout()>
<com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession asInterface(android.os.IBinder)>
<android.graphics.Paint: int getShadowLayerColor()>
<android.graphics.drawable.VectorDrawable$VPath$1: java.lang.Object get(java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeEnabled(android.content.ComponentName)>
<com.android.ims.internal.IImsExternalCallStateListener$Stub: com.android.ims.internal.IImsExternalCallStateListener asInterface(android.os.IBinder)>
<android.location.GnssMeasurementCorrections: float getEnvironmentBearingUncertaintyDegrees()>
<android.app.IUidObserver$Stub: java.lang.String getTransactionName(int)>
<android.widget.PopupWindow: android.widget.PopupWindow$OnDismissListener getOnDismissListener()>
<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getEmergencyCallbackMode(int)>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.TelecomAnalytics dumpCallAnalytics()>
<android.app.SyncNotedAppOp: java.lang.String getAttributionTag()>
<android.hardware.cas.V1_0.ICas$Stub: java.lang.String interfaceDescriptor()>
<android.view.Display$Mode: int getModeId()>
<android.os.IThermalEventListener$Stub: android.os.IThermalEventListener asInterface(android.os.IBinder)>
<android.os.BatterySaverPolicyConfig: boolean getAdvertiseIsEnabled()>
<android.telephony.TelephonyManager: void sendUssdRequest(java.lang.String,android.telephony.TelephonyManager$UssdResponseCallback,android.os.Handler)>
<android.app.ActivityOptions: boolean getLockTaskMode()>
<com.android.internal.telephony.IMms$Default: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<android.net.lowpan.LowpanEnergyScanResult: int getMaxRssi()>
<android.hardware.usb.UsbManager: long getScreenUnlockedFunctions()>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getPhoneAccountsSupportingScheme(java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Default: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.content.pm.IPackageDataObserver$Default: android.os.IBinder asBinder()>
<android.telephony.SubscriptionManager: boolean canDisablePhysicalSubscription()>
<com.android.internal.appwidget.IAppWidgetService$Default: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)>
<android.app.job.JobInfo$TriggerContentUri: int describeContents()>
<android.widget.TextView: int getCompoundPaddingTop()>
<android.app.Fragment: boolean getUserVisibleHint()>
<android.widget.HorizontalScrollView: java.lang.CharSequence getAccessibilityClassName()>
<android.security.net.config.TrustedCertificateStoreAdapter: java.lang.String getCertificateAlias(java.security.cert.Certificate,boolean)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<android.hardware.location.ContextHubManager: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
<android.app.job.JobWorkItem: int getDeliveryCount()>
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int,boolean)>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.CoolingDevice: int getType()>
<android.os.Debug$MemoryInfo: int getSummaryGraphics()>
<android.app.IUiModeManager$Stub$Proxy: int getCurrentModeType()>
<android.telephony.ims.aidl.IImsRegistration$Stub: android.os.IBinder asBinder()>
<android.app.IStopUserCallback$Default: android.os.IBinder asBinder()>
<android.view.KeyEvent: char getMatch(char[])>
<android.security.keystore.AndroidKeyStoreLoadStoreParameter: int getUid()>
<android.hardware.camera2.params.MeteringRectangle: int getWidth()>
<android.media.IRecordingConfigDispatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IAlarmManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>
<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>
<android.app.admin.DevicePolicyManager: boolean isSecondaryLockscreenEnabled(android.os.UserHandle)>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<android.app.ApplicationPackageManager: int getPackageUid(java.lang.String,int)>
<android.telecom.Logging.Session: long getLocalExecutionTime()>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<android.print.PrinterInfo: boolean getHasCustomPrinterIcon()>
<android.app.usage.IStorageStatsManager$Default: long getCacheBytes(java.lang.String,java.lang.String)>
<android.accessibilityservice.AccessibilityService: android.util.SparseArray getWindowsOnAllDisplays()>
<android.media.AudioDevicePort: int type()>
<android.text.method.MultiTapKeyListener: int getInputType()>
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>
<android.telephony.TelephonyManager: void resetAllCarrierActions()>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>
<android.graphics.ImageDecoder$ContentResolverSource: android.content.res.Resources getResources()>
<android.app.Fragment$SavedState: int describeContents()>
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)>
<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable getItemBackgroundDrawable()>
<com.android.internal.telephony.ISub$Default: android.os.IBinder asBinder()>
<android.net.INetworkScoreCache$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.net.INetworkWatchlistManager$Stub: android.os.IBinder asBinder()>
<android.hardware.IConsumerIrService$Stub: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: android.net.SocketKeepalive createSocketKeepalive(android.net.Network,android.net.IpSecManager$UdpEncapsulationSocket,java.net.InetAddress,java.net.InetAddress,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)>
<android.text.Layout: float getSpacingAdd()>
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)>
<android.util.apk.VerbatimX509Certificate: int hashCode()>
<android.app.servertransaction.ClientTransaction: android.app.IApplicationThread getClient()>
<com.android.internal.app.ISoundTriggerService$Default: int getParameter(android.os.ParcelUuid,int)>
<android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>
<android.media.AudioManager: java.lang.Object access$500(android.media.AudioManager)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>
<com.android.net.IProxyService$Stub: android.os.IBinder asBinder()>
<android.hardware.display.DeviceProductInfo: int[] getRelativeAddress()>
<android.media.Ringtone: android.net.Uri getUri()>
<android.telephony.ims.ImsSsInfo: int getProvisionStatus()>
<android.telephony.CellIdentityWcdma: java.util.Set getAdditionalPlmns()>
<android.hardware.cas.V1_1.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<com.android.server.SystemConfig: android.util.ArraySet getPrivAppPermissions(java.lang.String)>
<android.view.View$5: java.lang.Float get(android.view.View)>
<android.view.View: boolean getDefaultFocusHighlightEnabled()>
<android.media.tv.ITvInputManagerCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.IBooleanConsumer$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()>
<android.media.MediaCodec$OutputFrame: int getFlags()>
<android.media.tv.ITvInputManager$Default: java.util.List getTvContentRatingSystemList(int)>
<android.security.keystore.IKeystoreResponseCallback$Stub: android.security.keystore.IKeystoreResponseCallback getDefaultImpl()>
<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface getService()>
<android.media.soundtrigger.SoundTriggerManager: android.media.soundtrigger.SoundTriggerDetector createSoundTriggerDetector(java.util.UUID,android.media.soundtrigger.SoundTriggerDetector$Callback,android.os.Handler)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiStateTimer(int)>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: com.android.internal.telephony.euicc.ISetNicknameCallback asInterface(android.os.IBinder)>
<com.android.internal.app.IVoiceInteractor$Stub: com.android.internal.app.IVoiceInteractor getDefaultImpl()>
<android.graphics.Color: float[] getComponents()>
<android.os.storage.VolumeInfo: int getState()>
<android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: com.android.internal.telephony.util.HandlerExecutor access$000(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>
<android.hardware.usb.IUsbManager$Default: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<com.android.internal.telecom.ITelecomService$Default: int getAllPhoneAccountsCount()>
<android.telecom.PhoneAccount: android.os.Bundle getExtras()>
<com.android.internal.appwidget.IAppWidgetService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.hdmi.IHdmiDeviceEventListener$Default: android.os.IBinder asBinder()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectBackgroundTime(int)>
<android.media.AudioGain: int minValue()>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: com.android.internal.app.IAppOpsAsyncNotedCallback asInterface(android.os.IBinder)>
<android.app.trust.ITrustListener$Stub: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: long getCarrierCycles()>
<android.os.IPowerManager$Default: float getBrightnessConstraint(int)>
<android.telephony.TelephonyManager: int getSimApplicationState()>
<com.android.internal.app.IAppOpsNotedCallback$Default: android.os.IBinder asBinder()>
<android.app.IAssistDataReceiver$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int,boolean)>
<android.widget.ListPopupWindow$1: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.view.inputmethod.InputMethodManager: int access$600(android.view.inputmethod.InputMethodManager)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getEmergencyNumberListTestMode()>
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()>
<android.view.VerifiedMotionEvent: long getDownTimeNanos()>
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()>
<android.accounts.IAccountManagerResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.database.MatrixCursor: int getInt(int)>
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<android.text.method.CharacterPickerDialog$OptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailableZoomCropRectangles(android.hardware.Camera$Parameters,android.graphics.Rect)>
<android.hardware.radio.RadioMetadata: int describeContents()>
<android.permission.IOnPermissionsChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray getWidths()>
<android.service.textclassifier.ITextClassifierService$Default: android.os.IBinder asBinder()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int getModelParameter(int,int)>
<android.app.FragmentManagerImpl: int getTargetSdk()>
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionApn()>
<android.media.RoutingSessionInfo: java.lang.String getClientPackageName()>
<android.hardware.Sensor: int getReportingMode()>
<android.media.midi.IMidiDeviceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IUiModeManager$Stub$Proxy: boolean isUiModeLocked()>
<android.app.ApplicationPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String,java.lang.String)>
<android.net.Uri$StringUri: java.util.List getPathSegments()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.CarrierRestrictionRules getAllowedCarriers()>
<android.widget.PopupWindow: int getAnimationStyle()>
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.os.IBinder asBinder()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>
<android.media.session.IActiveSessionsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getAudioCapabilities()>
<com.android.server.SystemConfig: android.util.ArrayMap getAndClearPackageToUserTypeWhitelist()>
<android.content.SyncRequest: int describeContents()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.service.autofill.UserData: java.lang.String getFieldClassificationAlgorithm()>
<android.content.pm.IPackageInstallerSession$Default: android.os.IBinder asBinder()>
<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.security.keystore.IKeystoreOperationResultCallback asInterface(android.os.IBinder)>
<android.telephony.TelephonyScanManager$NetworkScanInfo: android.telephony.TelephonyScanManager$NetworkScanCallback access$100(android.telephony.TelephonyScanManager$NetworkScanInfo)>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>
<android.content.res.AssetManager$AssetInputStream: int available()>
<android.telephony.PreciseDataConnectionState: int getNetworkType()>
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>
<android.view.Display: java.lang.String getName()>
<android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher asInterface(android.os.IBinder)>
<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getDeviceSummaryForNetwork()>
<android.content.pm.IPackageDeleteObserver2$Stub: android.os.IBinder asBinder()>
<android.widget.RadioGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()>
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>
<android.telephony.ims.ImsReasonInfo: java.lang.String getExtraMessage()>
<android.hardware.location.ContextHubManager: int unloadNanoApp(int)>
<android.media.soundtrigger_middleware.SoundTriggerModuleProperties: int describeContents()>
<android.content.pm.ShortcutInfo: int getDisabledReason()>
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges()>
<android.content.ContentProvider: java.lang.String getCallingPackageUnchecked()>
<android.print.PageRange: int describeContents()>
<android.util.Property: java.lang.Class getType()>
<android.system.suspend.ISuspendCallback$Stub: java.lang.String access$000()>
<android.telephony.SmsCbEtwsInfo: boolean isPrimary()>
<android.hardware.camera2.utils.SurfaceUtils: android.util.Size getSurfaceSize(android.view.Surface)>
<android.view.autofill.AutofillManager: java.lang.String getDefaultFieldClassificationAlgorithm()>
<android.content.ContentProvider$Transport: int access$300(android.content.ContentProvider$Transport,java.lang.String,java.lang.String,int)>
<android.content.pm.IPackageManager$Default: int getPackageUid(java.lang.String,int,int)>
<com.android.internal.app.ToolbarActionBar: android.content.Context getThemedContext()>
<android.media.AudioManager: int releaseAudioPatch(android.media.AudioPatch)>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Default: android.os.IBinder asBinder()>
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSendToApplication(android.content.Context,boolean)>
<android.app.WallpaperManager$Globals: android.app.WallpaperColors getWallpaperColors(int,int,int)>
<android.filterfw.core.Frame: android.filterfw.core.Frame release()>
<android.content.om.OverlayInfo: int hashCode()>
<com.android.internal.os.BatteryStatsImpl: long getCameraOnTime(long,int)>
<android.hardware.camera2.params.Face: int getId()>
<android.hardware.usb.UsbManager: boolean isFunctionEnabled(java.lang.String)>
<android.content.pm.ResolveInfo: int resolveLabelResId()>
<android.view.InsetsController: android.view.InsetsState getLastDispatchedState()>
<android.telephony.TelephonyManager: android.os.Bundle getVisualVoicemailSettings()>
<android.permission.PermissionControllerManager$1: long getAutoDisconnectTimeoutMs()>
<android.view.textclassifier.TextClassificationContext: java.lang.String getWidgetType()>
<android.app.IUriGrantsManager$Stub: android.os.IBinder asBinder()>
<android.app.contentsuggestions.ContentSelection: android.os.Bundle getExtras()>
<android.hardware.usb.UsbPort: android.hardware.usb.UsbPortStatus getStatus()>
<android.view.FocusFinder$1: android.view.FocusFinder initialValue()>
<android.app.admin.DevicePolicyManager: boolean isFactoryResetProtectionPolicySupported()>
<android.app.Activity$HostCallbacks: android.app.Activity onGetHost()>
<android.content.pm.parsing.component.ParsedProcess: java.lang.String getName()>
<android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>
<android.os.Environment$UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.telephony.ServiceState: int getChannelNumber()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.permission.IPermissionManager$Default: java.util.List getAutoRevokeExemptionRequestedPackages(int)>
<android.view.textclassifier.TextClassificationSessionId: int hashCode()>
<android.telecom.Logging.EventManager: java.util.concurrent.LinkedBlockingQueue getEventRecords()>
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int hashCode()>
<android.media.AudioTrack: int reloadStaticData()>
<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>
<android.app.NotificationManager$Policy: int allowCallsFrom()>
<android.view.IWindowId$Stub: android.os.IBinder asBinder()>
<android.os.IUserManager$Stub$Proxy: android.os.ParcelFileDescriptor getUserIcon(int)>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: com.android.internal.widget.ICheckCredentialProgressCallback asInterface(android.os.IBinder)>
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()>
<com.android.server.SystemConfig: android.util.ArrayMap getPermissions()>
<android.net.TrafficStats: long getTotalRxBytes()>
<android.graphics.drawable.VectorDrawable$VFullPath$9: java.lang.Object get(java.lang.Object)>
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>
<android.app.ApplicationPackageManager: boolean isInstantApp()>
<android.os.IPowerManager$Stub$Proxy: android.os.PowerSaveState getPowerSaveState(int)>
<android.telephony.TelephonyRegistryManager: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>
<android.print.IPrinterDiscoveryObserver$Stub: android.os.IBinder asBinder()>
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponentsForUser(int)>
<android.view.textclassifier.SystemTextClassifierMetadata: int describeContents()>
<android.os.UserManager: android.os.UserHandle getProfileParent(android.os.UserHandle)>
<android.security.KeyStore: int delete2(java.lang.String,int)>
<android.app.assist.AssistStructure$ViewNode: int getMaxTextLength()>
<android.app.INotificationManager$Default: int getPackageImportance(java.lang.String)>
<android.os.StrictMode$4: android.os.StrictMode$AndroidBlockGuardPolicy initialValue()>
<android.view.View: int getAccessibilitySelectionStart()>
<android.service.notification.StatusBarNotification: java.lang.String getChannelIdLogTag()>
<android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener getDefaultImpl()>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<android.view.textclassifier.TextClassification: int describeContents()>
<android.animation.AnimatorSet$SeekState: long getPlayTimeNormalized()>
<android.content.UndoOwner: java.lang.String getTag()>
<android.media.session.PlaybackState: int describeContents()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.lang.String getText()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)>
<android.widget.AbsListView$InputConnectionWrapper: android.os.Handler getHandler()>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<android.view.autofill.IAutofillWindowPresenter$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.VectorDrawable$VGroup: long getNativePtr()>
<android.os.incremental.IIncrementalService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IWindowFocusObserver$Stub: android.view.IWindowFocusObserver asInterface(android.os.IBinder)>
<com.google.android.mms.pdu.NotifyRespInd: byte[] getTransactionId()>
<android.apex.ApexInfo: int describeContents()>
<android.widget.GridView: java.lang.CharSequence getAccessibilityClassName()>
<android.widget.ImageButton: java.lang.CharSequence getAccessibilityClassName()>
<android.text.DynamicLayout: int getIndexFirstChangedBlock()>
<android.net.IConnectivityDiagnosticsCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.widget.ILockSettings$Stub$Proxy: int getCredentialType(int)>
<com.android.internal.widget.IRemoteViewsFactory$Default: int getCount()>
<com.android.internal.telephony.ITelephony$Default: int getDataNetworkType(java.lang.String,java.lang.String)>
<android.telecom.TelecomManager: int getCurrentTtyMode()>
<android.os.VibrationEffect$Composed: long getDuration()>
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<com.android.ims.internal.IImsUt$Default: int queryCLIP()>
<android.graphics.drawable.InsetDrawable: android.graphics.Insets getOpticalInsets()>
<android.media.session.PlaybackState$CustomAction: android.os.Bundle getExtras()>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>
<android.view.Display: int getOrientation()>
<android.telephony.SmsCbMessage: int getSubscriptionId()>
<android.os.BatteryStats$Timer: long getMaxDurationMsLocked(long)>
<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>
<android.net.INetworkStatsService$Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)>
<android.telephony.ims.feature.ImsFeature: int getSlotIndex()>
<android.net.Uri$StringUri: java.lang.String getAuthority()>
<android.print.PrintJobInfo: java.lang.String getTag()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()>
<android.hardware.lights.LightsManager: java.util.List getLights()>
<android.content.om.IOverlayManager$Stub: android.os.IBinder asBinder()>
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)>
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.MotionEvent: float getToolMajor()>
<android.os.Process: int getThreadGroupLeader(int)>
<android.telephony.TelephonyManager: int getCurrentPhoneType()>
<android.text.PrecomputedText: int length()>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: java.lang.String getTransactionName(int)>
<android.net.IIpSecService$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.TypedProperties: int interpretType(java.lang.String)>
<android.hardware.radio.ITuner$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IThermalService$Default: int getCurrentThermalStatus()>
<android.net.INetworkPolicyManager$Default: int getRestrictBackgroundByCaller()>
<android.service.oemlock.IOemLockService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>
<android.media.AudioManager: android.media.AudioManager$ServiceEventHandlerDelegate access$400(android.media.AudioManager)>
<android.telephony.SmsCbMessage: java.util.List getGeometries()>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultExternalTelephonyProviderChangedApplication(android.content.Context,boolean)>
<android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<android.hardware.hdmi.IHdmiControlService$Default: int[] getSupportedTypes()>
<android.widget.LinearLayout: float getWeightSum()>
<android.security.IKeyChainService$Default: android.content.pm.StringParceledListSlice getSystemCaAliases()>
<android.database.CursorWindow: int getNumRows()>
<android.os.IClientCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()>
<android.view.inputmethod.InlineSuggestionsRequest: int access$500()>
<android.os.ISystemConfig$Default: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>
<android.app.usage.UsageStats: android.app.usage.UsageStats getObfuscatedForInstantApp()>
<android.app.backup.BackupDataOutput: long getQuota()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: java.lang.String getSmsFormat()>
<android.content.ContentProvider: int enforceReadPermissionInner(android.net.Uri,java.lang.String,java.lang.String,android.os.IBinder)>
<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getUserCert()>
<android.media.IAudioService$Stub$Proxy: int removePreferredDeviceForStrategy(int)>
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>
<android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAllCrossProfilePackages()>
<android.telephony.TelephonyManager: int getDataNetworkType(int)>
<com.android.internal.view.FloatingActionMode: android.view.MenuInflater getMenuInflater()>
<android.location.LocationManager$1: java.lang.Boolean recompute(java.lang.Integer)>
<android.app.assist.AssistStructure$ViewNode: int getScrollX()>
<android.media.AudioRecord: int read(short[],int,int)>
<com.android.internal.database.SortCursor: int access$102(com.android.internal.database.SortCursor,int)>
<android.view.Display: int getRemoveMode()>
<android.net.TestNetworkInterface: android.os.ParcelFileDescriptor getFileDescriptor()>
<android.app.IActivityManager$Default: int getTaskForActivity(android.os.IBinder,boolean)>
<android.print.IPrintManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.ICameraService$Default: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()>
<android.net.lowpan.ILowpanInterfaceListener$Default: android.os.IBinder asBinder()>
<android.content.ContentResolver$MimeTypeInfo: java.lang.CharSequence getContentDescription()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getChildCount()>
<android.media.midi.MidiManager: android.media.midi.MidiDeviceServer createDeviceServer(android.media.midi.MidiReceiver[],int,java.lang.String[],java.lang.String[],android.os.Bundle,int,android.media.midi.MidiDeviceServer$Callback)>
<android.view.MotionEvent: float getToolMinor()>
<android.hardware.hdmi.HdmiPortInfo: int getAddress()>
<android.media.MediaRouter$RouteInfo: int getSupportedTypes()>
<android.os.IUserManager$Stub$Proxy: int getUserBadgeResId(int)>
<android.telephony.PhoneCapability$1: void <init>()>
<android.os.Binder: android.os.TransactionTracker getTransactionTracker()>
<android.widget.Toast: android.view.WindowManager$LayoutParams getWindowParams()>
<android.media.midi.IMidiDeviceListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ContentProvider$Transport: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>
<android.os.health.HealthStats: int getStatsKeyAt(int)>
<android.view.View: int getRightPaddingOffset()>
<android.hardware.camera2.params.InputConfiguration: int getFormat()>
<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>
<android.content.IIntentSender$Stub: android.os.IBinder asBinder()>
<android.os.FileUtils: int getUid(java.lang.String)>
<android.app.job.JobInfo: int getClipGrantFlags()>
<android.permission.IOnPermissionsChangeListener$Stub: android.permission.IOnPermissionsChangeListener getDefaultImpl()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurring(java.time.ZonedDateTime,java.time.Period)>
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
<android.os.LocaleList: int size()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getSimStateForSlotIndex(int)>
<android.transition.ChangeBounds$4: java.lang.Object get(java.lang.Object)>
<android.drm.ProcessedData: java.lang.String getAccountId()>
<android.app.NotificationManager: boolean isSystemConditionProviderEnabled(java.lang.String)>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$stageAndApplyRuntimePermissionsBackup$8(android.os.UserHandle,byte[],android.permission.IPermissionController)>
<android.app.Notification$Builder: int access$3700(android.app.Notification$Builder)>
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>
<android.net.ITetheredInterfaceCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.ILocationManager$Default: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>
<com.android.internal.infra.IAndroidFuture$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IAudioService$Stub$Proxy: boolean isBluetoothScoOn()>
<android.graphics.Outline: float getRadius()>
<android.app.Notification$BuilderRemoteViews: android.app.Notification$BuilderRemoteViews clone()>
<android.app.ActivityManager$TaskSnapshot: int getSystemUiVisibility()>
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getOutFileDescriptor()>
<android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String)>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>
<android.media.AudioFocusInfo: int getSdkTarget()>
<android.app.assist.AssistStructure$ViewNode: int[] getTextLineCharOffsets()>
<android.content.Context: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.media.AudioPlaybackCaptureConfiguration: int[] getExcludeUids()>
<android.app.INotificationManager$Stub: android.os.IBinder asBinder()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)>
<android.view.IGraphicsStatsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.UserManager: android.content.pm.UserInfo getPrimaryUser()>
<android.webkit.WebStorage$Origin: java.lang.String getOrigin()>
<android.hardware.cas.V1_0.ICas$Proxy: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Default: java.lang.String getAlwaysOnVpnPackage(int)>
<android.app.RemoteInput$Builder: android.os.Bundle getExtras()>
<android.telephony.ims.ImsReasonInfo: int describeContents()>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
<android.hardware.radio.V1_5.CellInfoLte: int hashCode()>
<android.service.autofill.FillEventHistory$Event: java.util.Set getSelectedDatasetIds()>
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo: int hashCode()>
<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>
<android.view.InsetsAnimationThreadControlRunner: int getAnimationType()>
<android.media.audiopolicy.AudioMix: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>
<android.os.TimestampedValue: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int getCaptureSession()>
<android.view.KeyCharacterMap: int describeContents()>
<android.location.Geofence: double getLongitude()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.media.tv.tunerresourcemanager.IResourcesReclaimListener getDefaultImpl()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.widget.TextView: int getCompoundPaddingEnd()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getHomeActivities(java.util.List)>
<android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>
<android.telephony.ServiceState: int getLteEarfcnRsrpBoost()>
<android.hardware.biometrics.BiometricAuthenticator$Identifier: java.lang.CharSequence getName()>
<android.os.IInstalld$Default: android.os.storage.CrateMetadata[] getAppCrates(java.lang.String,java.lang.String[],int)>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IActivityTaskManager$Default: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.service.notification.Adjustment: java.lang.String getIssuer()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<android.hardware.radio.ProgramSelector$Identifier: int hashCode()>
<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(java.lang.String,int,java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize: int getNativeSize()>
<android.widget.Scroller: int getFinalX()>
<android.telephony.CellInfo: int hashCode()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean canConnectTo5GInDsdsMode()>
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$TaskDescription getTaskDescription(int)>
<android.telephony.data.ApnSetting: java.lang.String getApnName()>
<android.content.LoggingContentInterface: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.view.SurfaceView$2: android.view.Surface getSurface()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getPortInfo()>
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.filterfw.core.Frame: boolean isReusable()>
<android.content.ISyncStatusObserver$Stub: android.content.ISyncStatusObserver getDefaultImpl()>
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<android.view.ViewConfiguration: float getAmbiguousGestureMultiplier()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIcc(java.lang.String)>
<android.net.NetworkRequest: int describeContents()>
<android.content.pm.IPackageInstallerSession$Default: int getParentSessionId()>
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[],java.lang.String[])>
<android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
<android.os.Build: java.lang.String getRadioVersion()>
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveCount(int)>
<android.os.IIncidentManager$Stub: android.os.IIncidentManager asInterface(android.os.IBinder)>
<android.renderscript.Int4: int elementSum()>
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)>
<android.net.INetworkScoreService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableUsbRegexs()>
<android.os.storage.IStorageManager$Default: android.os.storage.VolumeRecord[] getVolumeRecords(int)>
<android.app.ActivityManager: int getMaxRecentTasksStatic()>
<android.os.health.HealthStats: int getTimerKeyAt(int)>
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDeviceProtectedDataDir(android.content.pm.parsing.ParsingPackageRead,int)>
<android.media.session.MediaSession$Token: int getUid()>
<android.webkit.Plugin: java.lang.String getPath()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getInstrumentations()>
<android.widget.TextView: int getAutofillType()>
<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)>
<android.os.IHardwarePropertiesManager$Default: float[] getFanSpeeds(java.lang.String)>
<android.hardware.usb.UsbConfiguration: int getId()>
<android.hardware.Sensor: java.util.UUID getUuid()>
<android.system.suspend.ISuspendControlService$Stub: android.os.IBinder asBinder()>
<com.android.internal.widget.IRemoteViewsFactory$Stub: com.android.internal.widget.IRemoteViewsFactory getDefaultImpl()>
<android.hardware.Camera$Parameters: boolean getVideoStabilization()>
<android.telephony.CellSignalStrengthTdscdma: int describeContents()>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.app.Fragment: int getNextTransitionStyle()>
<android.util.EventLog$Event: byte[] getBytes()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Insets getOpticalInsets()>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>
<android.app.timezone.RulesState: java.lang.String getBaseRulesVersion()>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)>
<android.os.incremental.IStorageHealthListener$Stub: android.os.incremental.IStorageHealthListener asInterface(android.os.IBinder)>
<android.os.IDeviceIdleController$Default: java.lang.String[] getFullPowerWhitelistExceptIdle()>
<android.os.storage.StorageManager: long getAllocatableBytes(java.util.UUID)>
<android.util.proto.ProtoStream: int getObjectIdFromToken(long)>
<android.filterfw.core.Filter: int getStatus()>
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<android.security.net.config.WfaCertificateSource$NoPreloadHolder: android.security.net.config.WfaCertificateSource access$100()>
<android.app.usage.ExternalStorageStats: long getAppBytes()>
<android.telephony.SmsManager: java.util.List getMessagesFromIcc()>
<android.app.FragmentHostCallback: android.util.ArrayMap retainLoaderNonConfig()>
<android.view.KeyEvent: int getMetaState()>
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.media.MediaPlayer: int getSelectedTrack(int)>
<android.app.ApplicationPackageManager: java.lang.String[] getNamesForUids(int[])>
<android.telephony._$$Lambda$CbGeoUtils$Polygon$WFBMZ4F3Agw9FQd3hBGj_MGCuho: java.lang.Object apply(java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Default: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>
<android.animation.ValueAnimator: long getFrameDelay()>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>
<android.os.IProgressListener$Stub: android.os.IProgressListener asInterface(android.os.IBinder)>
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIds(android.content.ComponentName)>
<android.view.IScrollCaptureController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellSignalStrength: int inRangeOrUnavailable(int,int,int,int)>
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String,int)>
<android.graphics.drawable.VectorDrawable$VGroup$3: java.lang.Object get(java.lang.Object)>
<com.google.android.mms.pdu.SendReq: byte[] getContentType()>
<android.telephony.VoiceSpecificRegistrationInfo$1: android.telephony.VoiceSpecificRegistrationInfo[] newArray(int)>
<android.app.IActivityManager$Stub$Proxy: int getLaunchedFromUid(android.os.IBinder)>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDarkVibrantSwatch()>
<android.telephony.UssdResponse: java.lang.String getUssdRequest()>
<android.graphics.GraphicBuffer: int getFormat()>
<android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager asInterface(android.os.IBinder)>
<android.content.pm.IPackageManager$Stub$Proxy: boolean isStorageLow()>
<android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetPercentage()>
<android.widget.Magnifier$SurfaceInfo: int access$2100(android.widget.Magnifier$SurfaceInfo)>
<android.view.View: android.graphics.drawable.Drawable getForeground()>
<android.net.Network: long getNetworkHandle()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int access$900(android.media.ExifInterface$ByteOrderedDataInputStream)>
<android.database.CursorWindow: float getFloat(int,int)>
<android.media.AudioFormat: int getPropertySetMask()>
<android.widget.ScrollView: int getTopEdgeEffectColor()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.os.IDumpstate$Stub: android.os.IDumpstate getDefaultImpl()>
<android.telephony.TelephonyManager: java.lang.CharSequence getSimSpecificCarrierIdName()>
<android.content.ContextWrapper: android.view.Display getDisplayNoVerify()>
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: int getUcePublishState(int)>
<android.app.usage.UsageStats: long getFirstTimeStamp()>
<android.os.IUserManager$Default: android.content.pm.UserInfo getProfileParent(int)>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: com.android.internal.app.IAppOpsAsyncNotedCallback getDefaultImpl()>
<android.hardware.radio.ITuner$Default: android.graphics.Bitmap getImage(int)>
<android.location.GpsMeasurement: double getSnrInDb()>
<android.media.AudioPort: android.media.AudioHandle handle()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.widget.AbsListView: int getHeaderViewsCount()>
<android.util.ArraySet$1: int colGetSize()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioHalVersion()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getInputSizes(int)>
<android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.UserManager: int getUserHandle()>
<android.app.Instrumentation: android.content.Context getContext()>
<android.hardware.ICameraClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.ScrollCaptureTarget: android.graphics.Rect getLocalVisibleRect()>
<android.hardware.usb.IUsbManager$Stub$Proxy: long getScreenUnlockedFunctions()>
<android.content.res.ResourcesImpl: android.content.res.AssetManager getAssets()>
<android.media.midi.IMidiDeviceOpenCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: com.android.internal.graphics.palette.Palette$Swatch getAverageColor()>
<android.app.IWallpaperManager$Default: int getWidthHint(int)>
<android.app.IActivityManager$Stub$Proxy: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>
<android.view.IInputMonitorHost$Stub: android.view.IInputMonitorHost asInterface(android.os.IBinder)>
<android.print.IPrinterDiscoveryObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.service.notification.NotificationListenerService$Ranking: int getVisibilityOverride()>
<android.app.ISearchManager$Default: android.content.ComponentName getGlobalSearchActivity()>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>
<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>
<android.view.View: int getOutlineSpotShadowColor()>
<android.content.pm.PackagePartitions: java.util.ArrayList getOrderedPartitions(java.util.function.Function)>
<android.media.IAudioService$Stub$Proxy: int getStreamMinVolume(int)>
<android.media.tv.TvTrackInfo: float getVideoFrameRate()>
<android.media.IAudioFocusDispatcher$Default: android.os.IBinder asBinder()>
<com.google.android.mms.util.PduCacheEntry: int getMessageBox()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighResolutionOutputSizes(int)>
<android.widget.BaseAdapter: int getItemViewType(int)>
<android.net.ConnectivityThread: android.net.ConnectivityThread get()>
<android.app.timezonedetector.ManualTimeZoneSuggestion: java.util.List getDebugInfo()>
<android.view.RemoteAnimationTarget: int describeContents()>
<android.os.BatteryStats$LevelStepTracker: int getLevelAt(int)>
<android.os.IVibratorService$Default: android.os.IBinder asBinder()>
<android.text.Layout$SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.os.Parcel: int dataAvail()>
<android.location.GnssMeasurement: long getReceivedSvTimeNanos()>
<android.drm.DrmInfo: java.lang.String getMimeType()>
<android.os.IDeviceIdleController$Default: java.lang.String[] getSystemPowerWhitelistExceptIdle()>
<android.media.AudioPlaybackConfiguration: int getClientPid()>
<android.widget.Scroller: int getStartY()>
<android.os.incremental.IncrementalFileSystemControlParcel: int describeContents()>
<android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()>
<android.telephony.ImsiEncryptionInfo: java.lang.String getMnc()>
<android.text.style.SuggestionSpan: int getUnderlineColor()>
<android.graphics.drawable.RippleForeground$2: java.lang.Float get(android.graphics.drawable.RippleForeground)>
<com.android.internal.telephony.ITelephony$Default: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathEnd()>
<com.android.internal.view.IInputContext$Default: android.os.IBinder asBinder()>
<android.hardware.display.DisplayManagerGlobal: android.graphics.Point getStableDisplaySize()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getTotalBytes(java.lang.String,java.lang.String)>
<com.google.android.mms.pdu.AcknowledgeInd: byte[] getTransactionId()>
<android.telecom.PhoneAccount: android.graphics.drawable.Icon getIcon()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getPrimaryImage()>
<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()>
<android.telephony.CellIdentityTdscdma$1: void <init>()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList setSharedElementState(android.os.Bundle,java.util.ArrayList)>
<android.media.RoutingSessionInfo: android.os.Bundle getControlHints()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: android.os.IBinder asBinder()>
<android.view.ViewRootImpl$NativePostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.net.NetworkTemplate: android.net.NetworkTemplate getNetworkTemplateFromBackup(java.io.DataInputStream)>
<android.hardware.radio.TunerAdapter: int step(int,boolean)>
<android.widget.TextView: android.view.textclassifier.TextClassificationContext getTextClassificationContext()>
<android.os.HardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages()>
<android.net.ConnectivityManager: int getMultipathPreference(android.net.Network)>
<android.app.usage.IUsageStatsManager$Stub$Proxy: int getAppStandbyBucket(java.lang.String,java.lang.String,int)>
<android.app.slice.SliceItem: android.app.slice.Slice getSlice()>
<android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>
<android.os.Environment: java.io.File getOemDirectory()>
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceUsageFlags(android.view.Surface)>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>
<android.os.UserHandle: int getCacheAppGid(int,int)>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaCodec$MediaImage: int getHeight()>
<android.graphics.drawable.ColorDrawable: android.graphics.ColorFilter getColorFilter()>
<android.util.SparseBooleanArray: int size()>
<android.net.lowpan.LowpanBeaconInfo: int hashCode()>
<android.media.tv.ITvInputManager$Stub: android.os.IBinder asBinder()>
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByCarrier()>
<android.content.pm.IShortcutService$Stub$Proxy: long getRateLimitResetTime(java.lang.String,int)>
<android.view.ViewGroup$1: android.view.View getCustomView()>
<android.hardware.ConsumerIrManager$CarrierFrequencyRange: int getMaxFrequency()>
<android.app.backup.BackupDataInputStream: int size()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean getResizeableActivity()>
<com.android.internal.telephony.SmsRawData: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getNumAnrs(int)>
<android.content.res.ColorStateList$ColorStateListFactory: int getChangingConfigurations()>
<android.content.pm.IShortcutChangeCallback$Stub: android.os.IBinder asBinder()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.os.BaseBundle: boolean isEmptyParcel()>
<android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<android.content.pm.PackageManager: java.lang.String getAttentionServicePackageName()>
<android.database.sqlite.SQLiteGlobal: int getIdleConnectionTimeout()>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>
<android.os.Build: java.util.List getFingerprintedPartitions()>
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayAutoMode()>
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>
<android.app.ActivityManager$TaskDescription: java.lang.String getLabel()>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
<android.window.IWindowOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.wifi.nl80211.IWificond$Default: android.os.IBinder asBinder()>
<android.content.pm.IShortcutService$Default: int getRemainingCallCount(java.lang.String,int)>
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>
<android.view.contentcapture.ContentCaptureEvent: int getParentSessionId()>
<android.os.PatternMatcher: int getType()>
<android.net.StaticIpConfiguration: java.util.List getDnsServers()>
<android.os.IIncidentAuthListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.Parcel: boolean[] createBooleanArray()>
<android.graphics.Canvas: int getWidth()>
<android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.content.pm.ActivityInfo,android.os.IBinder,int,android.content.res.Configuration)>
<android.os.IVold$Stub$Proxy: boolean isConvertibleToFbe()>
<android.app.backup.IBackupObserver$Stub: android.app.backup.IBackupObserver getDefaultImpl()>
<android.telephony.SubscriptionManager: java.util.List getSelectableSubscriptionInfoList()>
<android.security.IFileIntegrityService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.text.LineBreaker$Result: int getLineBreakOffset(int)>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: java.lang.String getTransactionName(int)>
<android.text.style.AccessibilityReplacementSpan: int getSpanTypeIdInternal()>
<android.app.DirectAction: android.os.Bundle getExtras()>
<android.app.trust.IStrongAuthTracker$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>
<android.app.backup.IBackupObserver$Stub: android.app.backup.IBackupObserver asInterface(android.os.IBinder)>
<android.app.admin.DevicePolicyManager: java.util.List getSecondaryUsers(android.content.ComponentName)>
<android.media.AudioManager: int getStreamVolume(int)>
<android.accessibilityservice.GestureDescription: android.accessibilityservice.GestureDescription$StrokeDescription getStroke(int)>
<android.app.AppOpsManager$OpEntry: long getLastRejectBackgroundTime(int)>
<android.content.res.XmlBlock$Parser: int getLineNumber()>
<android.app.IAlarmListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager: int opToDefaultMode(int)>
<android.service.autofill.FillEventHistory: int describeContents()>
<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDetailedUidStats(java.lang.String[])>
<android.view.IOnKeyguardExitResult$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getInstallerPackageName()>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: long getRecommendedTimeoutMillis()>
<android.widget.SearchView: int getMaxWidth()>
<android.os.connectivity.CellularBatteryStats: long getNumPacketsRx()>
<android.location.GnssMeasurement: int getConstellationType()>
<android.content.pm.StringParceledListSlice: int describeContents()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPermissionGroups()>
<android.window.WindowContainerTransaction$Change: int access$276(android.window.WindowContainerTransaction$Change,int)>
<android.view.IWindowManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GnssNavigationMessage: int getSubmessageId()>
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinder()>
<android.content.res.Resources$Theme: int getExplicitStyle(android.util.AttributeSet)>
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastZslStillFrameNumber()>
<android.app.admin.DevicePolicyManager: int getPasswordComplexity()>
<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()>
<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>
<android.net.IpPrefix$1: int compare(java.lang.Object,java.lang.Object)>
<android.app.timedetector.ITimeDetectorService$Default: android.os.IBinder asBinder()>
<android.os.ISystemUpdateManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IUserSwitchObserver$Stub: java.lang.String getTransactionName(int)>
<android.app.IAppTask$Default: android.os.IBinder asBinder()>
<android.webkit.WebViewZygote: android.os.ZygoteProcess getProcess()>
<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray getMinExtensionVersions()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>
<android.drm.DrmSupportInfo: java.lang.String getDescription()>
<android.hardware.cas.V1_1.ICas$Stub: java.util.ArrayList interfaceChain()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getEuiccControllerService()>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>
<android.telephony.CallForwardingInfo: int getStatus()>
<android.hardware.display.IVirtualDisplayCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int unlink(int,java.lang.String)>
<android.provider.Telephony$Sms: java.lang.String getDefaultSmsPackage(android.content.Context)>
<android.app.IUserSwitchObserver$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.app.ITransientNotification$Stub: android.app.ITransientNotification getDefaultImpl()>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isInstalled()>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getValidOutputFormatsForInput(int)>
<com.android.internal.app.WindowDecorActionBar: int getNavigationItemCount()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getTaskAffinity()>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.app.ActivityThread: android.app.Application getApplication()>
<android.hardware.radio.RadioManager$FmBandConfig: boolean getAf()>
<android.hardware.camera2.legacy.RequestThreadManager: java.util.List access$300(android.hardware.camera2.legacy.RequestThreadManager)>
<com.android.internal.util.StateMachine: int getLogRecCount()>
<android.widget.CompoundButton: android.graphics.BlendMode getButtonTintBlendMode()>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<android.os.IServiceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.autofill.AutofillManager: int getDatasetIdFromAuthenticationId(int)>
<android.view.ThreadedRenderer: android.graphics.Picture captureRenderingCommands()>
<com.android.internal.policy.IKeyguardDismissCallback$Stub: com.android.internal.policy.IKeyguardDismissCallback getDefaultImpl()>
<android.hardware.input.IInputManager$Default: int[] getInputDeviceIds()>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>
<android.widget.PopupWindow: boolean getAllowScrollingAnchorParent()>
<com.android.internal.app.IBatteryStats$Default: long computeChargeTimeRemaining()>
<android.app.usage.UsageStats: long getLastTimeVisible()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getName()>
<android.text.CharSequenceCharacterIterator: int getBeginIndex()>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.net.wifi.nl80211.ISendMgmtFrameEvent asInterface(android.os.IBinder)>
<android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
<android.view.textclassifier.TextLanguage$Request: int describeContents()>
<android.view.ThreadedRenderer: android.graphics.RenderNode getRootNode()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getReturnTransition()>
<com.android.internal.graphics.palette.Palette: java.util.List getTargets()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()>
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.os.storage.IStorageShutdownObserver$Stub: java.lang.String getTransactionName(int)>
<android.hardware.SensorManager: float getInclination(float[])>
<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)>
<android.print.IPrintManager$Stub: android.os.IBinder asBinder()>
<android.security.keymaster.KeyCharacteristics: java.lang.Integer getEnum(int)>
<android.service.textclassifier.ITextClassifierService$Stub: android.os.IBinder asBinder()>
<android.renderscript.Matrix4f: float[] getArray()>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getPackageStats()>
<android.telephony.TelephonyManager: java.lang.String getLocaleFromDefaultSim()>
<android.app.IActivityManager$Default: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.app.admin.DevicePolicyManager: java.util.Set getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)>
<android.widget.Editor: int access$6900(android.widget.Editor,int)>
<android.app.prediction.IPredictionManager$Stub: android.app.prediction.IPredictionManager getDefaultImpl()>
<android.telephony.data.ApnSetting: int getRoamingProtocol()>
<android.telephony.ims.ImsConferenceState: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()>
<android.graphics.drawable.LayerDrawable: int getAlpha()>
<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.IconMenuView$LayoutParams getTextAppropriateLayoutParams()>
<android.location.LocationRequest: long getExpireAt()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.os.incremental.IStorageHealthListener$Stub: android.os.incremental.IStorageHealthListener getDefaultImpl()>
<android.telephony.CellInfo: android.telephony.CellInfo sanitizeLocationInfo()>
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>
<android.view.contentcapture.DataShareRequest: java.lang.String getPackageName()>
<android.content.ContentProviderNative: android.os.IBinder asBinder()>
<android.telephony.ims.ImsMmTelManager: boolean isTtyOverVolteEnabled()>
<android.telephony.CellConfigLte$1: android.telephony.CellConfigLte createFromParcel(android.os.Parcel)>
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()>
<android.location.IGnssNavigationMessageListener$Stub: android.location.IGnssNavigationMessageListener asInterface(android.os.IBinder)>
<android.telephony.TelephonyDisplayInfo: int hashCode()>
<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager$CarrierFrequencyRange[] getCarrierFrequencies()>
<android.view.textclassifier.ConversationAction: float getConfidenceScore()>
<android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.Spinner$1: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>
<android.text.SpannableString: int getSpanStart(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)>
<android.security.keystore.recovery.KeyDerivationParams: int getMemoryDifficulty()>
<android.permission.IOnPermissionsChangeListener$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)>
<android.app.assist.AssistStructure$WindowNode: int getLeft()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.ColorFilter getColorFilter()>
<android.content.pm.SuspendDialogInfo: int getDialogMessageResId()>
<android.telephony.SmsManager: int getPremiumSmsConsent(java.lang.String)>
<android.animation.Keyframe$FloatKeyframe: android.animation.Keyframe$FloatKeyframe clone()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()>
<android.text.method.WordIterator: int getEnd(int)>
<android.content.UriMatcher: int match(android.net.Uri)>
<android.os.IHardwarePropertiesManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: long getMobileRadioApWakeupCount(int)>
<android.drm.DrmSupportInfo: int hashCode()>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()>
<android.telephony.TelephonyManager: java.util.List getCertsFromCarrierPrivilegeAccessRules()>
<android.app.IWallpaperManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)>
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)>
<android.os.PowerManager: int getPowerSaveModeTrigger()>
<android.os.LocaleList: int getFirstMatchIndexWithEnglishSupported(java.util.Collection)>
<android.app.Activity: boolean isImmersive()>
<android.widget.SelectionActionModeHelper$TextClassificationHelper: android.widget.SelectionActionModeHelper$SelectionResult getOriginalSelection()>
<android.content.pm.parsing.component.ParsedComponent: int getIcon()>
<android.hardware.fingerprint.IFingerprintService$Default: long getAuthenticatorId(int)>
<android.content.res.XmlBlock$Parser: int getNamespaceCount(int)>
<android.content.pm.IPackageManager$Default: java.lang.String[] getPackagesForUid(int)>
<android.widget.EditText: boolean getDefaultEditable()>
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>
<android.net.INetworkPolicyManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.component.ParsedPermission: int describeContents()>
<android.net.lowpan.ILowpanNetScanCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.RadioManager$BandConfig: android.hardware.radio.RadioManager$BandDescriptor getDescriptor()>
<android.media.session.MediaController: java.lang.String getTag()>
<com.android.ims.internal.IImsUt$Default: int queryCallWaiting()>
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleLeft()>
<android.renderscript.RenderScript: long nFileA3DCreateFromFile(java.lang.String)>
<android.view.View: int getTextAlignment()>
<android.app.usage.NetworkStats$Bucket: int access$902(android.app.usage.NetworkStats$Bucket,int)>
<android.printservice.PrintServiceInfo: android.content.ComponentName getComponentName()>
<android.media.effect.FilterEffect: java.lang.String getName()>
<android.app.ApplicationPackageManager: android.content.ComponentName getInstantAppResolverSettingsComponent()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getBaseCodePath()>
<android.os.UserManager: android.content.pm.UserInfo createRestrictedProfile(java.lang.String)>
<android.hardware.location.IContextHubClient$Default: android.os.IBinder asBinder()>
<android.transition.TransitionManager: android.transition.Transition getTransition(android.transition.Scene)>
<android.net.IpSecManager: java.io.IOException rethrowCheckedExceptionFromServiceSpecificException(android.os.ServiceSpecificException)>
<android.location.Location$1: android.location.Location$BearingDistanceCache initialValue()>
<android.content.UndoManager$UndoState: android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner)>
<android.media.ExifInterface$Rational: double calculate()>
<android.app.slice.Slice: java.util.List getHints()>
<android.content.res.DrawableCache: android.graphics.drawable.Drawable getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)>
<android.view.contentcapture.DataRemovalRequest$LocusIdRequest: android.content.LocusId getLocusId()>
<android.app.usage.UsageStatsManager: int getAppStandbyBucket()>
<android.telephony.CellSignalStrengthLte: android.telephony.CellSignalStrength copy()>
<android.app.INotificationManager$Default: java.util.List getZenRules()>
<android.net.wifi.nl80211.HiddenNetwork: int hashCode()>
<com.android.internal.content.om.OverlayConfigParser$ParsingContext: int access$208(com.android.internal.content.om.OverlayConfigParser$ParsingContext)>
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeUncertaintyMeters()>
<android.text.style.RelativeSizeSpan: float getSizeChange()>
<android.os.UserHandle: int getCacheAppGid(int)>
<android.net.Uri$StringUri: int describeContents()>
<android.content.pm.IPackageManager$Default: java.lang.String getServicesSystemSharedLibraryPackageName()>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()>
<android.telephony.VisualVoicemailSmsFilterSettings$1: android.telephony.VisualVoicemailSmsFilterSettings[] newArray(int)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
<android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>
<android.telephony.PreciseDataConnectionState$1: android.telephony.PreciseDataConnectionState createFromParcel(android.os.Parcel)>
<android.hardware.hdmi.HdmiControlManager: boolean isHdmiCecVolumeControlEnabled()>
<android.text.style.SuperscriptSpan: int getSpanTypeIdInternal()>
<android.app.job.IJobScheduler$Default: android.content.pm.ParceledListSlice getAllJobSnapshots()>
<android.content.integrity.IAppIntegrityManager$Stub: android.content.integrity.IAppIntegrityManager getDefaultImpl()>
<android.inputmethodservice.InlineSuggestionSession: com.android.internal.view.IInlineSuggestionsRequestCallback getRequestCallback()>
<android.service.autofill.UserData: android.util.ArrayMap getFieldClassificationArgs()>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
<android.view.contentcapture.ViewNode: java.lang.String getIdType()>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.hardware.biometrics.IBiometricServiceLockoutResetCallback getDefaultImpl()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.app.assist.AssistStructure$ViewNode: int getTextSelectionEnd()>
<android.animation.Animator: boolean isStarted()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()>
<android.location.GnssMeasurement: double getCarrierPhaseUncertainty()>
<android.widget.HeaderViewListAdapter: int getCount()>
<android.telephony.CellSignalStrengthTdscdma: int getAsuLevel()>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: int enableTargetSdkChanges(java.lang.String,int)>
<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(java.lang.Object)>
<android.hardware.radio.ProgramList$Chunk: java.util.Set getRemoved()>
<android.service.notification.Adjustment: java.lang.String getPackage()>
<android.view.autofill.AutofillId: int hashCode()>
<android.text.Layout: int getParagraphLeft(int)>
<android.widget.CompoundButton: android.view.autofill.AutofillValue getAutofillValue()>
<android.view.textclassifier.TextClassifierEvent$ConversationActionsEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>
<android.hardware.LegacySensorManager: int getRotation()>
<android.net.lowpan.ILowpanInterface$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState: long getNativeRenderer()>
<android.telephony._$$Lambda$VtfSvbW0tRP_qFDYPVM9jEdZHj0: java.lang.Object applyOrThrow(java.lang.Object)>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.data.ApnSetting: java.lang.String getPassword()>
<com.android.internal.telephony.cdma.SmsMessage: int getEnvelopeServiceCategory()>
<android.net.wifi.nl80211.IWificond$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>
<com.android.internal.policy.DecorView: android.view.View getNavigationBarBackgroundView()>
<android.service.notification.ZenPolicy: int getVisualEffectBadge()>
<android.app.IActivityManager$Stub$Proxy: android.content.res.Configuration getConfiguration()>
<android.os.IncidentManager$DumpCallback: int access$102(android.os.IncidentManager$DumpCallback,int)>
<android.text.style.LocaleSpan: java.util.Locale getLocale()>
<android.app.AppOpsManager: int resolveFirstUnrestrictedUidState(int)>
<com.android.internal.telephony.INumberVerificationCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.animation.Keyframe$ObjectKeyframe: android.animation.Keyframe$ObjectKeyframe clone()>
<android.app.admin.DevicePolicyManager: boolean getDoNotAskCredentialsOnBoot()>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>
<android.media.MediaRoute2Info: android.os.Bundle getExtras()>
<android.filterfw.core.FrameFormat: int getSize()>
<android.view.textclassifier.TextLinks$TextLink: int getStart()>
<android.graphics.fonts.FontStyle: int getMatchScore(android.graphics.fonts.FontStyle)>
<android.net.Uri$StringUri: java.lang.String getEncodedQuery()>
<android.telephony.CellInfoGsm: android.telephony.CellIdentity getCellIdentity()>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>
<com.android.ims.internal.IImsMultiEndpoint$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IWindowManager$Default: android.graphics.Bitmap screenshotWallpaper()>
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
<android.content.pm.IPackageManager$Default: int getFlagsForUid(int)>
<android.content.pm.ComponentInfo: int getBannerResource()>
<android.view.MotionEvent: long getDownTime()>
<com.android.internal.os.IResultReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.TextLinks$TextLink: float getConfidenceScore(java.lang.String)>
<android.hardware.fingerprint.IFingerprintService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.Certificate getCertificate(java.lang.String)>
<android.telecom.TelecomManager: boolean isInCall()>
<android.telephony.CallAttributes$1: android.telephony.CallAttributes createFromParcel(android.os.Parcel)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>
<android.net.lowpan.ILowpanInterface$Default: byte[] getMacAddress()>
<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName getTopActivityComponent()>
<android.app.WindowConfiguration: int getDisplayWindowingMode()>
<android.service.notification.IConditionProvider$Stub: android.service.notification.IConditionProvider asInterface(android.os.IBinder)>
<android.os.LocaleList: java.util.Locale get(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoWiFiModeSetting(int)>
<android.media.tv.ITvInputClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager$OpEntry: java.lang.String getProxyPackageName(int,int)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.content.pm.ShortcutInfo: java.lang.IllegalArgumentException getInvalidIconException()>
<android.hardware.radio.RadioMetadata: android.hardware.radio.RadioMetadata$Clock getClock(java.lang.String)>
<android.app.Notification$Action: android.os.Bundle getExtras()>
<android.hardware.usb.UsbConfiguration: int getInterfaceCount()>
<android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>
<android.telephony.emergency.EmergencyNumber: int getEmergencyCallRouting()>
<android.hardware.radio.ITuner$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.DevicePolicyManager: long getLastSecurityLogRetrievalTime()>
<android.location.Location: float getSpeedAccuracyMetersPerSecond()>
<android.app.role.IRoleManager$Stub: android.app.role.IRoleManager getDefaultImpl()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPersistentApplications(int)>
<android.widget.TextView: int getExtendedPaddingTop()>
<android.sysprop.CryptoProperties$type_values: java.lang.String getPropValue()>
<android.view.MagnificationSpec: int describeContents()>
<android.net.lowpan.LowpanChannelInfo: int access$502(android.net.lowpan.LowpanChannelInfo,int)>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>
<android.app.ActivityManager$TaskDescription: int getMinHeight()>
<android.media.soundtrigger_middleware.Phrase: int describeContents()>
<android.view.View: int getRight()>
<android.os.Debug$MemoryInfo: int getSummaryStack()>
<android.app.admin.DevicePolicyManager: boolean isManagedProfile(android.content.ComponentName)>
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int decodeReturnType(int)>
<com.android.internal.os.BatteryStatsImpl: long getWifiSupplStateTime(int,long,int)>
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.view.accessibility.IWindowMagnificationConnection asInterface(android.os.IBinder)>
<android.media.session.IOnVolumeKeyLongPressListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.compat.ChangeReporter$ChangeReport: int hashCode()>
<android.widget.RemoteViews$LayoutParamAction: java.lang.String getUniqueKey()>
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()>
<android.view.textclassifier.TextClassifierEvent$TextLinkifyEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyRequest access$1002(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.camera2.legacy.LegacyRequest)>
<android.media.AudioPresentation: int getProgramId()>
<android.app.admin.IDevicePolicyManager$Default: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<android.os.IUserManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.util.ContainerHelpers: int binarySearch(int[],int,int)>
<android.net.shared.Inet4AddressUtils: java.net.Inet4Address getBroadcastAddress(java.net.Inet4Address,int)>
<android.content.ContextWrapper: boolean isUiContext()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.Intent createAdminSupportIntent(java.lang.String)>
<android.app.AppOpsManager: java.lang.String[] access$600()>
<android.app.Application: java.lang.String getProcessName()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: com.android.internal.widget.ICheckCredentialProgressCallback getDefaultImpl()>
<android.app.LoadedApk: java.lang.String getDataDir()>
<android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)>
<android.media.IAudioService$Stub: java.lang.String getTransactionName(int)>
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()>
<android.app.slice.ISliceManager$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SubscriptionManager: java.util.List getOpportunisticSubscriptions()>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.prediction.AppPredictionSessionId: int hashCode()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDarkMutedSwatch()>
<com.android.internal.statusbar.StatusBarIcon: int describeContents()>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getGnssHardwareModelName()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int available()>
<android.view.MotionEvent: float getXCursorPosition()>
<android.content.ContentResolver: android.graphics.drawable.Drawable getTypeDrawable(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)>
<android.content.res.AssetManager: int getResourceArraySize(int)>
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] getVerityRootHash(java.lang.String)>
<android.telephony.CellInfoTdscdma: int hashCode()>
<android.net.IpSecManager: java.lang.RuntimeException rethrowUncheckedExceptionFromServiceSpecificException(android.os.ServiceSpecificException)>
<com.android.internal.os.RailStats: com.android.internal.os.RailStats getRailStats()>
<android.text.Layout: int getLineExtra(int)>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<android.app.backup.ISelectBackupTransportCallback$Stub: android.app.backup.ISelectBackupTransportCallback getDefaultImpl()>
<android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: boolean isVisualVoicemailEnabled(android.telecom.PhoneAccountHandle)>
<android.hardware.Camera$Size: int hashCode()>
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CameraMetadataNative$12: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.media.VolumeShaper$Configuration: long getDuration()>
<android.widget.Scroller: int getCurrY()>
<android.hardware.lights.ILightsManager$Stub: android.os.IBinder asBinder()>
<android.hardware.radio.V1_0.CellInfo: int hashCode()>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
<android.content.pm.PackageManager: java.lang.String getSetupWizardPackageName()>
<android.content.pm.PackageInstaller$SessionInfo: int getRollbackDataPolicy()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoWiFiSettingEnabled(int)>
<android.util.SparseArray: int indexOfKey(int)>
<android.content.RestrictionsManager: android.content.Intent createLocalApprovalIntent()>
<com.android.internal.app.IAppOpsNotedCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.usb.UsbDevice: boolean getHasAudioPlayback()>
<android.service.autofill.FieldClassification$1: int compare(android.service.autofill.FieldClassification$Match,android.service.autofill.FieldClassification$Match)>
<android.content.pm.PackageInstaller$SessionInfo: java.util.Set getWhitelistedRestrictedPermissions()>
<android.os.SystemVibrator: boolean isVibrating()>
<android.content.pm.PackageInstaller$SessionInfo: int getParentSessionId()>
<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: byte[] read()>
<android.media.AudioTrack: float getMaxVolume()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName,int,boolean)>
<android.transition.Slide$CalculateSlideVertical: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.service.notification.StatusBarNotification: java.lang.String getTag()>
<android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>
<android.media.IAudioService$Default: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>
<android.widget.GridView: int getColumnWidth()>
<android.app.backup.BackupDataOutput: int getTransportFlags()>
<android.net.INetworkPolicyManager$Stub$Proxy: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getDefaultConfig()>
<android.app.EnterTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.graphics.ImageDecoder: boolean getConserveMemory()>
<android.service.notification.ZenModeConfig: int hashCode()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: java.lang.String getTransactionName(int)>
<android.content.om.IOverlayManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.NetworkStats: long getElapsedRealtime()>
<android.media.MediaPlayer$ProvisioningThread: int status()>
<android.hardware.radio.ITunerCallback$Stub: android.hardware.radio.ITunerCallback asInterface(android.os.IBinder)>
<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String,int,int)>
<android.app.usage.ExternalStorageStats: long getObbBytes()>
<android.renderscript.Short4: short length()>
<android.service.notification.ZenPolicy: int getPriorityCategoryReminders()>
<android.location.ILocationManager$Stub$Proxy: boolean getCurrentLocation(android.location.LocationRequest,android.os.ICancellationSignal,android.location.ILocationListener,java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.radio.RadioMetadata$Clock: long getUtcEpochSeconds()>
<android.content.integrity.AppIntegrityManager: java.lang.String getCurrentRuleSetVersion()>
<android.telecom.Logging.SessionManager: java.lang.String getSessionId()>
<android.view.VelocityTracker: float getYVelocity(int)>
<android.media.IAudioService$Default: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar$Tab getSelectedTab()>
<android.app.INotificationManager$Default: java.util.List getEnabledNotificationListenerPackages()>
<android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)>
<android.os.IDumpstate$Stub: android.os.IBinder asBinder()>
<android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>
<android.app.timezone.Utils: int validateVersion(java.lang.String,int)>
<android.widget.ProgressBar: int getMinWidth()>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>
<android.graphics.Bitmap: int getDensity()>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()>
<android.media.MediaDrm$ProvisionRequest: byte[] getData()>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)>
<android.hardware.display.IColorDisplayManager$Stub: android.hardware.display.IColorDisplayManager getDefaultImpl()>
<android.telephony.NetworkScanRequest: boolean getIncrementalResults()>
<android.media.audiopolicy.AudioProductStrategy: int getLegacyStreamTypeForAudioAttributes(android.media.AudioAttributes)>
<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()>
<android.location.IBatchedLocationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
<android.hardware.hdmi.IHdmiControlService$Stub: android.os.IBinder asBinder()>
<android.app.AppOpsManager: int getNumOps()>
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence getText()>
<android.os.GraphicsEnvironment: java.lang.String getDebugLayerPathsFromSettings(android.os.Bundle,android.content.pm.IPackageManager,java.lang.String,android.content.pm.ApplicationInfo)>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>
<android.print.IPrintManager$Stub$Proxy: boolean getBindInstantServiceAllowed(int)>
<android.view.SurfaceControl: int[] getDisplayColorModes(android.os.IBinder)>
<android.view.contentcapture.IContentCaptureManager$Stub: android.view.contentcapture.IContentCaptureManager asInterface(android.os.IBinder)>
<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()>
<android.os.VibrationEffect$Composed: java.util.List getPrimitiveEffects()>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)>
<android.widget.Magnifier: android.graphics.PointF getMagnifierDefaultSize()>
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.location.ILocationListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.timezone.RulesState: android.app.timezone.DistroRulesVersion getInstalledDistroRulesVersion()>
<android.animation.FloatKeyframeSet: float getFloatValue(float)>
<com.android.internal.telephony.ITelephony$Default: boolean getImsProvisioningStatusForCapability(int,int,int)>
<android.widget.RemoteViews$ViewGroupActionRemove: int getActionTag()>
<android.view.IWallpaperVisibilityListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IDisplayFoldListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>
<android.telephony.SubscriptionInfo: int getSubscriptionType()>
<android.os.MemoryFile: int length()>
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte copy()>
<android.app.admin.DevicePolicyManager: boolean isNotificationListenerServicePermitted(java.lang.String,int)>
<android.graphics.Paint: float getStrikeThruThickness()>
<android.view.textclassifier.TextClassification$Request: int describeContents()>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy$InstallationOption getInstallationOptionAt(long)>
<android.permission.PermissionManager: int getRuntimePermissionsVersion()>
<android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>
<com.android.internal.app.MessageSamplingConfig: long getExpirationTimeSinceBootMillis()>
<android.os.UserManager: java.util.List getEnabledProfiles()>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback getDefaultImpl()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()>
<android.os.storage.IStorageManager$Stub$Proxy: int encryptStorage(int,java.lang.String)>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyImsServiceRegisterer()>
<android.graphics.BitmapRegionDecoder: int getWidth()>
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.media.projection.MediaProjectionInfo: java.lang.String getPackageName()>
<android.widget.Toolbar: int getContentInsetRight()>
<android.hardware.display.BrightnessConfiguration: android.util.Pair getCurve()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAllCrossProfilePackages()>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()>
<android.location.GnssMeasurement: long getCarrierCycles()>
<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>
<android.util.SparseSetArray: int sizeAt(int)>
<android.hardware.usb.UsbAccessory: java.lang.String getModel()>
<android.location.LocationRequest: boolean getHideFromAppOps()>
<android.net.MacAddress: java.net.Inet6Address getLinkLocalIpv6FromEui48Mac()>
<android.view.InputEvent: android.view.InputDevice getDevice()>
<android.hardware.Camera$Parameters: float getVerticalViewAngle()>
<android.net.wifi.nl80211.IWificond$Default: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)>
<android.text.SpannableString: int getSpanEnd(java.lang.Object)>
<android.app.DownloadManager: int markRowDeleted(long[])>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo createFromParcel(android.os.Parcel)>
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>
<android.os.INetworkManagementService$Default: java.lang.String[] listTetheredInterfaces()>
<android.content.pm.IPackageDeleteObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: int getPhoneId(int)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>
<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackages(long,android.app.backup.IRestoreObserver,java.lang.String[],android.app.backup.IBackupManagerMonitor)>
<android.telephony.NetworkRegistrationInfo: int getTransportType()>
<com.android.ims.internal.IImsUt$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellIdentity: void <clinit>()>
<android.window.WindowContainerTransaction$Change: int getWindowingMode()>
<android.view.IPinnedStackListener$Stub: android.view.IPinnedStackListener asInterface(android.os.IBinder)>
<android.content.ContentProvider: android.content.Context getContext()>
<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: byte[] toByteArray()>
<android.content.SyncStatusInfo: int describeContents()>
<android.net.INetworkPolicyListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.ListPopupWindow: android.view.View getSelectedView()>
<android.media.IAudioService$Stub$Proxy: boolean isSpeakerphoneOn()>
<android.net.NetworkPolicyManager: int getUidPolicy(int)>
<android.os.Debug: int getGlobalFreedSize()>
<android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray: int describeContents()>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>
<android.media.AudioManager$NativeEventHandlerDelegate: android.os.Handler getHandler()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.view.Surface getInputSurface()>
<android.transition.Slide: int getSlideEdge()>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeForSms(java.lang.String)>
<android.app.admin.NetworkEvent: long getId()>
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)>
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsUid()>
<android.view.IRotationWatcher$Stub: android.os.IBinder asBinder()>
<android.os.incremental.IStorageHealthListener$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioned()>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>
<android.telephony.CellSignalStrengthWcdma: int getDbm()>
<android.app.IActivityManager$Stub$Proxy: long[] getProcessPss(int[])>
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicHeight()>
<android.widget.TextView: int getRightPaddingOffset()>
<android.location.Location: int describeContents()>
<android.os.IHardwarePropertiesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>
<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>
<android.widget.Editor$HandleView: float getHorizontal(android.text.Layout,int)>
<android.app.DreamManager: boolean isDreaming()>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiPlaybackClient getPlaybackClient()>
<android.media.MicrophoneInfo: java.lang.String getAddress()>
<android.os.incremental.StorageHealthCheckParams: int describeContents()>
<android.net.wifi.nl80211.IScanEvent$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.SigningInfo: int describeContents()>
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIdsForHost(java.lang.String,int)>
<android.text.PrecomputedText: java.lang.CharSequence getText()>
<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()>
<android.view.accessibility.IWindowMagnificationConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getPortInfo()>
<com.android.internal.policy.IShortcutService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.NetworkRegistrationInfo: java.util.List getAvailableServices()>
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.app.Fragment: int getNextTransition()>
<android.content.pm.PackageInstaller$SessionInfo: android.os.UserHandle getUser()>
<com.android.internal.util.TypedProperties: int getInt(java.lang.String)>
<android.text.StaticLayout: int getEllipsisCount(int)>
<android.os.IRecoverySystem$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.BinderInternal: long getLastGcTime()>
<android.widget.RemoteViews$SetOnClickResponse: int getActionTag()>
<android.widget.Editor$InsertionHandleView: int getHorizontalGravity(boolean)>
<android.util.Rational: int hashCode()>
<android.app.Notification$WearableExtender: android.app.PendingIntent getDisplayIntent()>
<android.graphics.text.LineBreaker: int access$300(long,int)>
<android.telephony.TelephonyManager: java.util.List getAllowedCarriers(int)>
<android.app.admin.IDevicePolicyManager$Default: long forceNetworkLogs()>
<android.net.Uri$HierarchicalUri: java.lang.String getPath()>
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()>
<android.widget.ProgressBar: android.graphics.BlendMode getIndeterminateTintBlendMode()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>
<android.telephony.CellInfo: long getTimeStamp()>
<android.telephony.CellSignalStrengthTdscdma: int getBitErrorRate()>
<android.telephony.ims.aidl.IImsSmsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IInstalld$Default: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])>
<android.view.MotionEvent$PointerProperties: int hashCode()>
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getDestState()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)>
<android.os.SharedMemory: int describeContents()>
<android.hardware.camera2.params.RggbChannelVector: float getComponent(int)>
<com.android.internal.policy.IShortcutService$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>
<android.os.BaseBundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.util.StateMachine$LogRecords: int size()>
<android.content.IntentFilter: boolean getAutoVerify()>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: com.android.internal.telephony.euicc.IAuthenticateServerCallback getDefaultImpl()>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getTitle()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getManageSpaceActivityName()>
<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
<android.view.ISystemGestureExclusionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.ToolbarActionBar: int getDisplayOptions()>
<android.os.INetworkManagementService$Stub$Proxy: boolean isNetworkActive()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>
<android.media.MediaRouter$RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)>
<android.telephony.TelephonyManager: boolean getSmsSendCapable(boolean)>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getStarts(int)>
<android.app.VoiceInteractor$PickOptionRequest$Option: int describeContents()>
<android.os.connectivity.CellularBatteryStats: long getMonitoredRailChargeConsumedMaMillis()>
<android.hardware.radio.V1_2.CellIdentityOperatorNames: int hashCode()>
<android.app.IActivityTaskManager$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.service.notification.INotificationListener$Default: android.os.IBinder asBinder()>
<android.content.ContextWrapper: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>
<com.android.internal.os.BatteryStatsHelper$1: int compare(com.android.internal.os.BatterySipper,com.android.internal.os.BatterySipper)>
<android.telephony.PreciseCallState: int describeContents()>
<android.os.storage.StorageManager: long getPrimaryStorageSize()>
<android.window.IWindowContainerTransactionCallback$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Path getIconMask()>
<android.telephony.SmsMessage: boolean isCphsMwiMessage()>
<android.os.storage.IStorageManager$Stub$Proxy: int verifyEncryptionPassword(java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.util.LongSparseLongArray: int access$002(android.util.LongSparseLongArray,int)>
<android.view.WindowManagerGlobal: android.view.View getRootView(java.lang.String)>
<android.app.ResultInfo: int hashCode()>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(int)>
<android.widget.ProgressBar: android.graphics.BlendMode getSecondaryProgressTintBlendMode()>
<android.net.ITetheringStatsProvider$Default: android.net.NetworkStats getTetherStats(int)>
<android.sysprop.CryptoProperties$state_values: java.lang.String getPropValue()>
<android.view.MotionEvent: int getButtonState()>
<android.view.WindowManager$LayoutParams: int describeContents()>
<android.text.BidiFormatter$DirectionalityEstimator: byte getDirectionality(int)>
<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.CharSequence getNonLocalizedLabel()>
<android.media.AudioRecordingConfiguration: int getAudioSource()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesOptionalLibraries()>
<android.util.SparseIntArray: int get(int,int)>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Region getSafeZone()>
<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()>
<android.os.NativeHandle: java.io.FileDescriptor[] getFileDescriptors()>
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ISub$Default: java.util.List getAllSubInfoList(java.lang.String,java.lang.String)>
<android.graphics.animation.RenderNodeAnimator: long getNativeAnimator()>
<android.view.textclassifier.ExtrasUtils: java.util.ArrayList getActionsIntents(android.view.textclassifier.TextClassification)>
<android.content.pm.IPackageManager$Default: java.lang.String getWellbeingPackageName()>
<com.android.internal.os.FuseAppLoop$CallbackEntry: long getThreadId()>
<android.hardware.camera2.CameraCharacteristics$Key: java.lang.String getName()>
<android.view.DisplayAdjustments: android.content.res.Configuration getConfiguration()>
<android.widget.Spinner$DialogPopup: android.graphics.drawable.Drawable getBackground()>
<android.window.WindowContainerTransaction$HierarchyOp: android.os.IBinder getContainer()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isDeviceColorManaged()>
<android.text.PrecomputedText: int getParagraphStart(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothUnoptimizedScanTimer()>
<android.content.res.ColorStateList$ColorStateListFactory: android.content.res.ColorStateList newInstance()>
<android.hardware.ICameraServiceListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IThermalService$Stub: android.os.IBinder asBinder()>
<android.app.IUriGrantsManager$Stub$Proxy: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>
<android.hardware.Camera$Parameters: int getPictureFormat()>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>
<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()>
<com.android.internal.os.BatteryStatsImpl: long getWifiStateTime(int,long,int)>
<android.hardware.lights.ILightsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.ims.internal.IImsUt$Default: int updateCLIR(int)>
<android.os.Debug: int getGlobalAllocCount()>
<android.net.lowpan.LowpanProvision: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>
<android.view.animation.Animation: int getBackgroundColor()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>
<android.app.role.IRoleManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IPinnedStackListener$Stub: java.lang.String getTransactionName(int)>
<android.view.autofill.AutofillManager$CompatibilityBridge: java.util.List getEnabledAccessibilityServiceList(int,java.util.List)>
<android.graphics.Bitmap: int getRowBytes()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: com.android.internal.telephony.IOnSubscriptionsChangedListener getDefaultImpl()>
<android.app.IUiModeManager$Stub: java.lang.String getTransactionName(int)>
<android.net.http.SslCertificate: java.security.cert.X509Certificate getX509Certificate()>
<android.text.method.TextKeyListener$NullKeyListener: int getInputType()>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<android.content.om.IOverlayManager$Stub$Proxy: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>
<android.location.ICountryDetector$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.LocalSocket: int getSoTimeout()>
<android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider asInterface(android.os.IBinder)>
<android.filterfw.core.NativeBuffer: boolean isReadOnly()>
<android.util.Rational: int getNumerator()>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: android.os.IBinder asBinder()>
<android.view.KeyCharacterMap: int getKeyboardType()>
<android.util.apk.ApkSigningBlockUtils: int compareSignatureAlgorithm(int,int)>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int stopUser(android.content.ComponentName,android.os.UserHandle)>
<android.service.voice.IVoiceInteractionSession$Stub: android.os.IBinder asBinder()>
<android.telephony.UiccSlotInfo: boolean equals(java.lang.Object)>
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<android.filterfw.core.VertexFrame: int[] getInts()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallWaitingStatus(int)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>
<android.view.textclassifier.SelectionSessionLogger$SignatureParser: java.lang.String getClassifierId(java.lang.String)>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)>
<android.os.IVold$Default: int fdeComplete()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>
<android.app.Notification$MessagingStyle: int getConversationType()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int unloadSoundModel(android.os.ParcelUuid)>
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)>
<android.app.backup.BackupManager: long getAvailableRestoreToken(java.lang.String)>
<android.app.backup.IRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContentProvider$Transport: android.os.ICancellationSignal createCancellationSignal()>
<android.companion.IFindDeviceCallback$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.NinePatchDrawable: int getAlpha()>
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,boolean,int,int)>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()>
<android.widget.Editor$EasyEditPopupWindow: int getTextOffset()>
<android.location.GnssSingleSatCorrection: float getExcessPathLengthMeters()>
<android.graphics.drawable.VectorDrawable$VGroup: int getNativeSize()>
<android.os.StatFs: int getBlockCount()>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.TelephonyManager lambda$registerServiceWrappers$0(android.content.Context)>
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>
<android.graphics.drawable.VectorDrawable$VGroup: float getTranslateY()>
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: android.hardware.camera2.params.SessionConfiguration getSessionConfiguration()>
<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,android.security.KeyStoreException)>
<android.hardware.cas.V1_0.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<com.android.internal.app.IAppOpsActiveCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.Context: int getColor(int)>
<android.text.style.TtsSpan: int describeContents()>
<android.security.IFileIntegrityService$Stub: android.security.IFileIntegrityService getDefaultImpl()>
<android.graphics.Paint: float getUnderlinePosition()>
<android.os.Debug: int getMethodTracingMode()>
<android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>
<android.telephony.CellSignalStrengthWcdma: int describeContents()>
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.hardware.hdmi.IHdmiRecordListener getDefaultImpl()>
<android.hardware.location.ContextHubMessage: byte[] getData()>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.internal.util.function.pooled.OmniFunction: java.lang.Object get()>
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>
<android.app.IActivityManager$Default: int stopUserWithDelayedLocking(int,boolean,android.app.IStopUserCallback)>
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()>
<android.net.WebAddress: java.lang.String getPath()>
<android.text.style.SpellCheckSpan: int getSpanTypeId()>
<android.util.MapCollections: java.util.Set getEntrySet()>
<android.media.MediaCodec$CryptoException: int getErrorCode()>
<android.os.ShellCommand: java.lang.String peekNextArg()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback access$200(android.hardware.location.ContextHubManager)>
<android.webkit.ConsoleMessage: int lineNumber()>
<android.app.admin.DevicePolicyManager: int getPersonalAppsSuspendedReasons(android.content.ComponentName)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: java.lang.String getTransactionName(int)>
<android.location.LocationRequest: long getExpirationRealtimeMs(long)>
<android.view.autofill.IAugmentedAutofillManagerClient$Default: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)>
<android.widget.RemoteViews$BitmapCache: int getBitmapMemory()>
<android.view.ThreadedRenderer: int getHeight()>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>
<android.telephony.CbGeoUtils: int sign(double)>
<android.os.IRecoverySystem$Default: android.os.IBinder asBinder()>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String,boolean,java.util.Collection)>
<android.app.Fragment: android.transition.Transition getEnterTransition()>
<android.app.Notification$BigTextStyle: android.widget.RemoteViews makeBigContentView()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>
<android.app.IUidObserver$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: long computeChargeTimeRemaining()>
<android.media.tv.ITvInputManager$Default: android.os.IBinder asBinder()>
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgOID()>
<android.hardware.lights.ILightsManager$Default: android.os.IBinder asBinder()>
<android.location.GnssMeasurementCorrections: double getHorizontalPositionUncertaintyMeters()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()>
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()>
<android.app.Fragment: java.lang.Object getHost()>
<android.os.Environment: java.lang.String getStorageState(java.io.File)>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.euicc.EuiccManager lambda$registerServiceWrappers$3(android.content.Context)>
<android.telecom.TelecomManager: boolean isOutgoingCallPermitted(android.telecom.PhoneAccountHandle)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>
<android.util.proto.ProtoStream: java.lang.String getFieldIdString(long)>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>
<android.hardware.location.IContextHubClientCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.app.IBatteryStats$Stub$Proxy: long computeBatteryTimeRemaining()>
<android.media.AudioRecordingConfiguration: java.util.List getClientEffects()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: com.android.internal.textservice.ITextServicesSessionListener getDefaultImpl()>
<android.graphics.RenderNode: int getAmbientShadowColor()>
<android.app.IActivityTaskManager$Default: int getLaunchedFromUid(android.os.IBinder)>
<com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod asInterface(android.os.IBinder)>
<android.graphics.Shader: long getNativeInstance()>
<android.app.BackStackRecord: int getBreadCrumbTitleRes()>
<android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>
<android.view.textclassifier.TextSelection: java.lang.String getEntity(int)>
<com.android.server.SystemConfig: java.util.Set getRollbackWhitelistedPackages()>
<android.app.AutomaticZenRule: java.lang.String getName()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isAvailable(int,int,int)>
<com.android.internal.os.BatteryStatsImpl$Uid: long getNetworkActivityBytes(int,int)>
<android.os.HidlSupport: int lambda$deepHashCode$3(java.lang.Object)>
<com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback asInterface(android.os.IBinder)>
<android.app.BackStackRecord: android.app.Fragment expandOps(java.util.ArrayList,android.app.Fragment)>
<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)>
<android.app.RuntimeAppOpAccessMessage: int getUid()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveSubInfoCount(java.lang.String,java.lang.String)>
<android.util.proto.ProtoOutputStream: int getRawSize()>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters(int)>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>
<android.content.pm.PermissionGroupInfo: int describeContents()>
<android.os.IUserManager$Default: long getUserUnlockRealtime()>
<android.telephony.CellInfoTdscdma: android.telephony.CellInfoTdscdma createFromParcelBody(android.os.Parcel)>
<android.content.pm.VersionedPackage: java.lang.String getPackageName()>
<android.util.MemoryIntArray: int size()>
<android.view.ThreadedRenderer$SimpleRenderer: android.graphics.RenderNode getRootNode()>
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: int getOpacity()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRealPackage()>
<android.view.View: int getMeasuredHeight()>
<android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress: int extraParamToByteArray(byte[],int)>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
<android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$100()>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>
<android.net.nsd.INsdManager$Default: android.os.IBinder asBinder()>
<android.text.AutoGrowArray$ByteArray: byte get(int)>
<android.widget.Editor: android.text.method.WordIterator getWordIterator()>
<android.graphics.Paint: int getStartHyphenEdit()>
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.util.ArrayList interfaceChain()>
<android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback getDefaultImpl()>
<com.android.internal.telephony.CellNetworkScanResult$1: com.android.internal.telephony.CellNetworkScanResult[] newArray(int)>
<android.telephony.VoiceSpecificRegistrationInfo$1: android.telephony.VoiceSpecificRegistrationInfo createFromParcel(android.os.Parcel)>
<android.media.AudioDeviceAttributes: int getType()>
<android.media.RoutingSessionInfo: int getVolume()>
<android.widget.RemoteViews: int estimateMemoryUsage()>
<android.widget.TextView: android.view.ActionMode$Callback getCustomInsertionActionModeCallback()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)>
<android.app.NotificationManager$Policy: int allowMessagesFrom()>
<android.service.vr.IVrStateCallbacks$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: int getVersionCodeMajor()>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()>
<com.android.internal.telephony.IMms$Stub$Proxy: boolean archiveStoredConversation(java.lang.String,long,boolean)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback asInterface(android.os.IBinder)>
<android.media.AudioTrack$NativePositionEventHandlerDelegate: android.os.Handler getHandler()>
<android.content.IContentService$Stub: android.content.IContentService getDefaultImpl()>
<android.app.backup.BackupManager: int requestBackup(java.lang.String[],android.app.backup.BackupObserver)>
<android.net.lowpan.LowpanIdentity: int hashCode()>
<com.android.internal.policy.IShortcutService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateModemControllerActivityLocked()>
<android.view.RemoteAnimationAdapter: boolean getChangeNeedsSnapshot()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>
<android.hardware.iris.IIrisService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keymaster.KeymasterBlob: int describeContents()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createInputStream(int,int,int)>
<com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>
<android.media.MediaFormat: float getFloat(java.lang.String)>
<android.view.View: float getScaleX()>
<android.app.LoadedApk: java.lang.String getAppDir()>
<android.telephony.TelephonyManager: boolean isDataEnabled()>
<android.content.pm.IPackageStatsObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.widget.TextView: int getBreakStrategy()>
<com.android.internal.infra.ServiceConnector$Impl: long getAutoDisconnectTimeoutMs()>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
<android.net.NetworkIdentity: int compareTo(java.lang.Object)>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.os.IBinder asBinder()>
<android.content.pm.LauncherApps: android.graphics.drawable.Icon getShortcutIcon(android.content.pm.ShortcutInfo)>
<android.hardware.location.ContextHubInfo: java.lang.String getToolchain()>
<android.app.Notification$MessagingStyle$Message: android.os.Bundle getExtras()>
<android.hardware.lights.ILightsManager$Stub$Proxy: android.hardware.lights.LightState getLightState(int)>
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
<com.android.internal.os.BatteryStatsImpl: int getDeviceIdleModeCount(int,int)>
<android.view.Display: int getRotation()>
<android.os.AsyncTask$3: java.lang.Object call()>
<android.app.IActivityManager$Default: java.util.List getBugreportWhitelistedPackages()>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<com.android.ims.internal.IImsCallSession$Default: java.lang.String getProperty(java.lang.String)>
<android.content.res.XmlBlock$Parser: boolean getFeature(java.lang.String)>
<android.view.Display: long getPresentationDeadlineNanos()>
<android.view.View: android.graphics.PorterDuff$Mode getForegroundTintMode()>
<android.database.AbstractWindowedCursor: double getDouble(int)>
<android.location.GnssMeasurement: double getPseudorangeRateMetersPerSecond()>
<android.telephony.ServiceState: int getCdmaSystemId()>
<android.text.method.WordIterator: int preceding(int)>
<android.graphics.fonts.Font: int getTtcIndex()>
<android.content.ContentProvider$Transport: java.lang.String getProviderName()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()>
<android.telephony.ImsiEncryptionInfo: int getKeyType()>
<android.graphics.ImageDecoder: int getMemorySizePolicy()>
<android.text.DynamicLayout: int[] getBlockEndLines()>
<android.app.AppOpsManager: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()>
<android.view.InsetsSource: android.graphics.Rect getVisibleFrame()>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.os.IBinder asBinder()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.hardware.fingerprint.IFingerprintClientActiveCallback asInterface(android.os.IBinder)>
<android.media.MediaRecorder: java.util.List getActiveMicrophones()>
<android.view.InputMonitor: int describeContents()>
<android.app.assist.AssistStructure: int getWindowNodeCount()>
<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()>
<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList(boolean)>
<android.telephony.SmsMessage: boolean isStatusReportMessage()>
<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>
<android.telephony.TelephonyManager: boolean hasIccCard(int)>
<android.view.VerifiedMotionEvent: float getRawX()>
<android.location.Address: int access$100(android.location.Address)>
<android.view.IRemoteAnimationFinishedCallback$Stub: android.view.IRemoteAnimationFinishedCallback asInterface(android.os.IBinder)>
<android.app.admin.DevicePolicyManager: boolean isPackageSuspended(android.content.ComponentName,java.lang.String)>
<android.view.animation.AnimationUtils$1: android.view.animation.AnimationUtils$AnimationState initialValue()>
<android.app.assist.AssistStructure: int access$100(android.app.assist.AssistStructure)>
<com.android.internal.telephony.ITelephony$Default: int getCallStateForSlot(int)>
<android.telephony.ims.ImsSsData: int getResult()>
<android.hardware.Camera$Parameters: java.util.List getZoomRatios()>
<android.media.AudioRecord: int getAudioFormat()>
<android.appwidget.AppWidgetManager: boolean isBoundWidgetPackage(java.lang.String,int)>
<com.android.internal.util.function.pooled.PooledLambdaImpl: int getAsInt()>
<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String[])>
<android.print.PrintJobInfo: int getAppId()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.hardware.ICamera$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.View: android.graphics.drawable.Drawable getVerticalScrollbarTrackDrawable()>
<android.telephony.TelephonyManager: boolean nvWriteCdmaPrl(byte[])>
<android.text.Layout: int getEllipsizedWidth()>
<android.net.lowpan.LowpanInterface: java.lang.String getPartitionId()>
<android.print.IPrintServicesChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>
<android.content.res.ComplexColor: int getChangingConfigurations()>
<android.webkit.WebView: android.os.Handler getHandler()>
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
<android.net.ProxyInfo: java.lang.String getHost()>
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()>
<android.telephony.SmsCbMessage: int getServiceCategory()>
<android.content.ContentValues: android.util.ArrayMap getValues()>
<android.os.RemoteCallback: int describeContents()>
<android.app.ActivityManager: int getUidImportance(int)>
<android.graphics.drawable.VectorDrawable: android.graphics.ColorFilter getColorFilter()>
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encode(com.android.internal.telephony.cdma.sms.BearerData)>
<android.app.SystemServiceRegistry: java.lang.Object getSystemService(android.app.ContextImpl,java.lang.String)>
<com.android.internal.util.StateMachine: android.os.Handler getHandler()>
<android.service.notification.ZenModeConfig$EventInfo: int resolveUserId(int)>
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Default: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)>
<android.app.usage.IStorageStatsManager$Default: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,int,java.lang.String)>
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IDeviceIdentifiersPolicyService getDefaultImpl()>
<android.content.ContentProvider$Transport: int delete(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle)>
<android.content.om.IOverlayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.BoringLayout: int getEllipsisStart(int)>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface()>
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getWeight()>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: android.os.IBinder asBinder()>
<android.telephony.SmsMessage: byte[] getUserData()>
<android.app.job.JobInfo: long getMinBackoffMillis()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyFaceDetectMapper access$1600(android.hardware.camera2.legacy.RequestThreadManager)>
<android.os.PowerManager$2: java.lang.Boolean recompute(java.lang.Void)>
<android.telephony.SmsManager: int getSmsCapacityOnIcc()>
<android.content.om.IOverlayManager$Default: java.util.Map getAllOverlays(int)>
<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>
<com.android.internal.widget.IRemoteViewsFactory$Stub: com.android.internal.widget.IRemoteViewsFactory asInterface(android.os.IBinder)>
<android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>
<android.telephony.CallQuality: int getCallDuration()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence getNonLocalizedLabel()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.hardware.biometrics.IBiometricServiceReceiver getDefaultImpl()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getAdoptPermissions()>
<android.view.textclassifier.TextClassifierEvent: float[] getScores()>
<android.app.Fragment: android.view.View getView()>
<android.os.UserManager$1: java.lang.Boolean recompute(java.lang.Integer)>
<android.app.AlarmManager$AlarmClockInfo: android.app.PendingIntent getShowIntent()>
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()>
<android.os.health.HealthKeys$SortedIntArray: int[] getArray()>
<android.view.IRecentsAnimationController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.view.accessibility.IAccessibilityEmbeddedConnection getConnection()>
<android.app.IAssistDataReceiver$Stub: java.lang.String getTransactionName(int)>
<android.net.lowpan.ILowpanManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Debug$MemoryInfo: int getSummaryUnknownRss()>
<android.graphics.text.LineBreaker$Result: float getLineAscent(int)>
<android.content.pm.PackageManager$PackageInfoQuery: int hashCode()>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.window.WindowContainerTransaction$Change: int getChangeMask()>
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.Context)>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1100()>
<com.android.internal.view.menu.MenuAdapter: long getItemId(int)>
<android.graphics.drawable.AnimatedImageDrawable: int getAlpha()>
<com.android.internal.view.AppearanceRegion: int getAppearance()>
<com.android.internal.widget.IRemoteViewsFactory$Default: long getItemId(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataNetworkType(java.lang.String,java.lang.String)>
<android.renderscript.Allocation: android.renderscript.Element getElement()>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>
<android.graphics.Bitmap: int getByteCount()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getActiveAdmins(int)>
<android.view.MotionEvent: float getHistoricalSize(int,int)>
<android.app.job.JobInfo: android.net.NetworkRequest getRequiredNetwork()>
<android.hardware.HardwareBuffer: int getFormat()>
<android.content.pm.IPackageStatsObserver$Stub: android.os.IBinder asBinder()>
<android.location.GeocoderParams: java.lang.String getClientPackage()>
<android.window.IWindowContainerToken$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.tv.TvInputInfo: android.os.Bundle getExtras()>
<android.media.session.MediaSessionManager: java.util.List getActiveSessionsForUser(android.content.ComponentName,int)>
<android.os.Environment: java.io.File getDataSystemDeDirectory(int)>
<com.android.internal.telephony.ITelephony$Default: boolean iccCloseLogicalChannel(int,int)>
<android.os.IPowerManager$Stub$Proxy: boolean isInteractive()>
<android.hardware.Sensor: int getHighestDirectReportRateLevel()>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createUserWithThrow(java.lang.String,java.lang.String,int)>
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>
<android.content.UndoManager$UndoState: int getCommitId()>
<android.content.IClipboard$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: int getForegroundServiceType(android.content.ComponentName,android.os.IBinder)>
<android.net.NetworkCapabilities: int hashCode()>
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.net.Uri)>
<android.media.audiopolicy.AudioVolumeGroup: int[] getLegacyStreamTypes()>
<android.graphics.drawable.BitmapDrawable: boolean isFilterBitmap()>
<android.content.pm.parsing.component.ParsedActivity: int getResizeMode()>
<android.telephony.SubscriptionManager: boolean isSubscriptionEnabled(int)>
<android.text.PrecomputedText: int getSpanEnd(java.lang.Object)>
<com.android.internal.telephony.ITelephony$Default: boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String)>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.GLThreadManager access$502(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.camera2.legacy.GLThreadManager)>
<android.view.IWindowManager$Stub$Proxy: boolean isKeyguardLocked()>
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$800(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>
<android.media.AudioPlaybackConfiguration: int getClientUid()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isImsRegistered(int)>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: java.util.List getEnrolledFingerprints(int,java.lang.String)>
<android.app.AppOpsManager$OpEntry: long getRejectTime()>
<android.media.session.ISession2TokensListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.UserManager: boolean isSettingRestrictedForUser(java.lang.String,int,java.lang.String,int)>
<android.content.pm.split.SplitAssetDependencyLoader: android.content.res.AssetManager getBaseAssetManager()>
<android.view.KeyEvent: long getDownTime()>
<com.android.internal.telephony.ITelephony$Default: int getSubscriptionSpecificCarrierId(int)>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])>
<android.telephony.CallForwardingInfo: int getReason()>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>
<android.graphics.drawable.StateListDrawable: int findStateDrawableIndex(int[])>
<android.hardware.input.InputManager: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.view.VerifiedInputEvent: int getDeviceId()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)>
<com.android.server.SystemConfig: android.util.ArraySet getLinkedApps()>
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>
<android.os.IServiceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IVold$Default: android.os.IBinder asBinder()>
<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getRecognitionModes()>
<android.content.IntentSender: android.os.IBinder getWhitelistToken()>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>
<android.webkit.IWebViewUpdateService$Default: android.os.IBinder asBinder()>
<android.hardware.ICameraService$Stub$Proxy: int getNumberOfCameras(int)>
<android.os.IIncidentAuthListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.widget.ActionBarContainer$ActionBarBackgroundDrawable: int getOpacity()>
<android.media.AudioDeviceInfo: int[] getChannelMasks()>
<android.content.pm.IShortcutService$Stub: android.os.IBinder asBinder()>
<android.telephony.CarrierRestrictionRules: java.util.List access$302(android.telephony.CarrierRestrictionRules,java.util.List)>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IPinnedStackController$Default: int getDisplayRotation()>
<android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>
<android.telecom.Logging.EventManager: java.util.Map access$100(android.telecom.Logging.EventManager)>
<android.text.style.AccessibilityClickableSpan: int getSpanTypeId()>
<android.telephony.TelephonyManager: int getSimCardState(int)>
<android.location.ILocationManager$Default: int getGnssBatchSize(java.lang.String)>
<android.telephony.DataFailCause$1: void <init>()>
<android.view.SurfaceControlViewHost$SurfacePackage: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()>
<com.android.internal.widget.ILockSettings$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.ISession2TokensListener$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRestrictedAccountType()>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback asInterface(android.os.IBinder)>
<android.app.ApplicationPackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>
<android.hardware.lights.Light: int getType()>
<android.database.CursorWrapper: boolean isLast()>
<android.app.usage.IStorageStatsManager$Default: long getFreeBytes(java.lang.String,java.lang.String)>
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener getDefaultImpl()>
<android.content.pm.parsing.component.ParsedAttribution: int describeContents()>
<android.view.textclassifier.TextSelection: int getEntityCount()>
<android.hardware.face.FaceManager$AuthenticationResult: android.hardware.biometrics.CryptoObject getCryptoObject()>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.os.IBinder asBinder()>
<android.hardware.biometrics.CryptoObject: long getOpId()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: boolean isMultiProcessEnabled()>
<android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)>
<android.view.contentcapture.ViewNode: android.os.LocaleList getLocaleList()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Default: android.os.IBinder asBinder()>
<android.widget.RemoteViews$SetRemoteViewsAdapterList: int getActionTag()>
<android.telephony.SmsCbEtwsInfo$1: void <init>()>
<android.app.backup.ISelectBackupTransportCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.keymaster.KeymasterArguments: int size()>
<android.location.GnssReflectingPlane: double getLatitudeDegrees()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>
<android.graphics.drawable.LayerDrawable: int getLayerInsetStart(int)>
<android.os.BaseBundle: float getFloat(java.lang.String,float)>
<android.view.ViewDebug$SoftwareCanvasProvider: android.graphics.Canvas getCanvas(android.view.View,int,int)>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<android.telephony.CellIdentity: java.lang.String getGlobalCellId()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<android.app.IAlarmListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.backup.BackupManager: java.lang.String selectBackupTransport(java.lang.String)>
<android.view.textclassifier.ExtrasUtils: android.os.Bundle getForeignLanguageExtra(android.view.textclassifier.TextClassification)>
<android.net.ITestNetworkManager$Stub$Proxy: android.net.TestNetworkInterface createTapInterface()>
<android.net.lowpan.LowpanInterface: android.net.IpPrefix[] getLinkNetworks()>
<android.media.IPlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK getDeviceStateCallback()>
<android.app.ActionBar: int getHideOffset()>
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>
<android.telephony.ServiceState: int[] getCellBandwidths()>
<android.telephony.TelephonyManager: java.lang.String[] getForbiddenPlmns()>
<android.telephony.NetworkRegistrationInfo: boolean isInService()>
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.impl.CaptureCallback getCallback()>
<android.content.res.ResourcesImpl: android.content.res.ResourcesImpl$ThemeImpl newThemeImpl()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)>
<android.net.CaptivePortalData: long getExpiryTimeMillis()>
<android.content.SyncStatusInfo: long getEventTime(int)>
<android.app.admin.IDevicePolicyManager$Default: boolean getCameraDisabled(android.content.ComponentName,int,boolean)>
<android.location.Criteria: int getBearingAccuracy()>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>
<android.app.AppOpsManager$AttributedHistoricalOps: int hashCode()>
<android.app.prediction.IPredictionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>
<android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.app.INotificationManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int getStart()>
<com.android.internal.graphics.SfVsyncFrameCallbackProvider: long getFrameTime()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
<android.renderscript.Int2: int get(int)>
<android.app.assist.AssistStructure$ViewNode: int getVisibility()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
<com.android.internal.telephony.ITelephony$Default: boolean getRcsProvisioningStatusForCapability(int,int)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationCenterX(int)>
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailableDFSChannels()>
<android.hardware.hdmi.HdmiRecordSources$RecordSource: int toByteArray(boolean,byte[],int)>
<android.telephony.SmsMessage: java.lang.String getRecipientAddress()>
<android.animation.AnimatorSet: long getStartDelay()>
<android.location.ILocationListener$Default: android.os.IBinder asBinder()>
<android.content.res.TypedArray: int getColor(int,int)>
<com.android.ims.internal.IImsEcbm$Stub: android.os.IBinder asBinder()>
<android.webkit.WebView: android.webkit.WebViewRenderProcess getWebViewRenderProcess()>
<android.media.MediaCodec$OutputFrame: java.util.Set getChangedKeys()>
<android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController asInterface(android.os.IBinder)>
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>
<android.media.MediaDrm$KeyStatus: byte[] getKeyId()>
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getUserSysTimeReaderInstance()>
<com.android.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()>
<android.widget.CompoundButton: int getCompoundPaddingLeft()>
<android.util.EventLog: int getTagCode(java.lang.String)>
<android.telecom.TelecomManager: java.util.List getAllPhoneAccountHandles()>
<android.hardware.display.WifiDisplaySessionInfo: int describeContents()>
<android.hardware.ICameraService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IRecoverySystemProgressListener$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.VectorDrawable$VFullPath$2: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.view.View$12: java.lang.Float get(android.view.View)>
<android.content.pm.parsing.component.ParsedComponent: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneTypeForSlot(int)>
<android.app.IAlarmCompleteListener$Stub: android.app.IAlarmCompleteListener asInterface(android.os.IBinder)>
<android.text.StaticLayout: int getHeight(boolean)>
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>
<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>
<android.content.Context: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()>
<android.content.res.AssetManager: android.content.res.ApkAssets[] getApkAssets()>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: android.os.IBinder asBinder()>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Default: android.os.IBinder asBinder()>
<android.util.jar.StrictJarFile: java.security.cert.Certificate[] getCertificates(java.util.zip.ZipEntry)>
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle$MarshalerMeteringRectangle: int getNativeSize()>
<android.app.prediction.IPredictionManager$Stub: android.os.IBinder asBinder()>
<android.os.BatterySaverPolicyConfig: boolean getDisableSoundTrigger()>
<android.net.wifi.nl80211.RadioChainInfo: int getLevelDbm()>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>
<android.widget.SearchView: java.lang.CharSequence getQuery()>
<android.app.job.IJobScheduler$Stub: android.app.job.IJobScheduler getDefaultImpl()>
<android.app.backup.IBackupManager$Default: android.os.UserHandle getUserForAncestralSerialNumber(long)>
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>
<android.content.res.Resources: int getInteger(int)>
<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()>
<android.text.style.TextAppearanceSpan: java.lang.String getFontVariationSettings()>
<android.telephony.ServiceState: boolean getVoiceRoaming()>
<android.app.Notification$Builder: int access$4100(android.app.Notification$Builder)>
<android.util.Half: int hashCode()>
<android.app.IUiAutomationConnection$Stub: android.os.IBinder asBinder()>
<android.hardware.hdmi.HdmiControlManager: int getPhysicalAddress()>
<android.net.NetworkPolicy: int hashCode()>
<android.widget.TextView: int getTotalPaddingLeft()>
<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>
<android.media.AudioManager: android.media.AudioManager$FocusRequestInfo access$300(android.media.AudioManager,java.lang.String)>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int describeContents()>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)>
<android.graphics.Paint: float getTextScaleX()>
<com.android.internal.util.SyncResultReceiver: int getIntResult()>
<android.text.Layout: float getPrimaryHorizontal(int,boolean)>
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfileCalendarPackages(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsImpl: int getMaxLearnedBatteryCapacity()>
<android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener asInterface(android.os.IBinder)>
<android.telephony.TelephonyDisplayInfo: int getNetworkType()>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getCallProfile()>
<android.os.incremental.IIncrementalService$Default: byte[] getMetadataByPath(int,java.lang.String)>
<android.app.job.IJobScheduler$Stub$Proxy: android.content.pm.ParceledListSlice getAllJobSnapshots()>
<android.content.pm.parsing.component.ParsedPermission: int getRequestRes()>
<android.net.lowpan.LowpanChannelInfo: float getSpectrumCenterFrequency()>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>
<android.graphics.drawable.AdaptiveIconDrawable: int getAlpha()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.UserManager: boolean isUserUnlocked(int)>
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>
<android.renderscript.RenderScript: java.lang.String getCachePath()>
<android.media.MediaDescription: android.net.Uri getMediaUri()>
<android.view.InsetsAnimationThread: android.os.Handler getHandler()>
<android.app.Notification$MessagingStyle: java.lang.CharSequence getHeadsUpStatusBarText()>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>
<com.android.net.IProxyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkSelectionMode(int)>
<android.content.pm.parsing.component.ParsedPermissionGroup: int getBackgroundRequestDetailResourceId()>
<android.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readLine()>
<com.android.internal.telephony.CellNetworkScanResult: int getStatus()>
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<android.telephony.CellInfoLte: int hashCode()>
<android.content.pm.ChangedPackages: java.util.List getPackageNames()>
<android.view.View: int getScrollBarStyle()>
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeInfo[] listUIChanges()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>
<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()>
<com.android.internal.location.ProviderProperties: int describeContents()>
<android.net.RssiCurve: int hashCode()>
<android.location.GnssClock: java.lang.String getReferenceCodeTypeForIsb()>
<android.graphics.RenderNode: float getPivotY()>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>
<android.location.ILocationManager$Default: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)>
<android.graphics.drawable.shapes.RectShape: int hashCode()>
<android.media.IAudioRoutesObserver$Default: android.os.IBinder asBinder()>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getPhoneOnCount(int)>
<android.telephony.TelephonyManager: void setNetworkSelectionModeAutomatic()>
<android.view.WindowManagerGlobal: java.util.ArrayList getWindowViews()>
<android.hardware.ICameraServiceListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()>
<android.app.assist.AssistStructure$ViewNode: android.view.autofill.AutofillId getAutofillId()>
<android.net.Network: int describeContents()>
<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>
<android.app.prediction.AppTarget: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int getVolumeGroupId()>
<android.media.IAudioRoutesObserver$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getValidOutputFormatsForInput(int)>
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerTxDurationMillis()>
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getTag()>
<android.telephony.UiccSlotInfo: int getLogicalSlotIdx()>
<android.content.pm.IPinItemRequest$Stub: android.os.IBinder asBinder()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.View: int getNextFocusUpId()>
<android.os.IUserManager$Stub$Proxy: java.lang.String getUserAccount(int)>
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<android.telephony.SubscriptionManager: android.net.Uri getUriForSubscriptionId(int)>
<com.android.internal.telephony.euicc.IGetProfileCallback$Default: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable6gChannels()>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean,int)>
<android.app.IAppTask$Stub: android.app.IAppTask getDefaultImpl()>
<android.security.keymaster.KeymasterArguments: java.util.List getEnums(int)>
<android.media.MediaFormat$FilteredMappedKeySet$KeyIterator: java.lang.Object next()>
<android.view.ViewRootImpl$SyntheticInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.telephony.TelephonyManager: boolean needsOtaServiceProvisioning()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getNcpVersion()>
<android.text.PrecomputedText$Params: int hashCode()>
<android.hardware.radio.RadioManager$BandDescriptor: int access$100(android.os.Parcel)>
<android.content.pm.ShortcutInfo: int getLongLabelResourceId()>
<android.security.keystore.IKeystoreService$Stub$Proxy: byte[] get(java.lang.String,int)>
<android.view.inputmethod.InlineSuggestionsResponse: int describeContents()>
<android.net.NetworkScorerAppData: java.lang.String getRecommendationServicePackageName()>
<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>
<android.app.Fragment: java.lang.String getTag()>
<android.telephony.TelephonyManager: int getPhoneCount()>
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>
<android.app.assist.AssistStructure$ViewNode: int getId()>
<com.android.internal.os.IShellCallback$Default: android.os.IBinder asBinder()>
<android.widget.FrameLayout: int getPaddingLeftWithForeground()>
<android.os.Environment: java.io.File getDataSystemCeDirectory(int)>
<android.location.Address: java.lang.String getPremises()>
<android.telecom.Logging.Session: android.telecom.Logging.Session$Info getInfo()>
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()>
<com.android.internal.app.IAppOpsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.storage.VolumeRecord: int describeContents()>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Stub$Proxy: boolean isHdmiSystemAudioSupported()>
<android.location.GpsMeasurement: double getPseudorangeUncertaintyInMeters()>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getDeviceOwnerComponentOnCallingUser()>
<android.os.IVoldTaskListener$Stub: android.os.IBinder asBinder()>
<android.telecom.Log: android.telecom.Logging.SessionManager getSessionManager()>
<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()>
<android.os.Messenger: android.os.IBinder getBinder()>
<com.android.ims.internal.IImsMultiEndpoint$Stub$Proxy: android.os.IBinder asBinder()>
<android.os._$$Lambda$ThreadLocalWorkSource$IP9vRFCDG5YwbWbXAEGHH52B9IE: java.lang.Object get()>
<com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>
<android.widget.Magnifier: int getDefaultHorizontalSourceToMagnifierOffset()>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int getKeyframeIdAt(int)>
<android.os.PowerWhitelistManager: boolean isWhitelisted(java.lang.String,boolean)>
<android.app.assist.AssistStructure$ViewNodeBuilder: int getTextSelectionEnd()>
<android.app.admin.StartInstallingUpdateCallback$Stub: android.app.admin.StartInstallingUpdateCallback asInterface(android.os.IBinder)>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int length()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int)>
<android.net.NetworkScorerAppData: int describeContents()>
<android.app.IActivityManager$Default: java.util.List getRunningAppProcesses()>
<android.os.Debug: java.util.Map getRuntimeStats()>
<android.telephony.ims.ImsStreamMediaProfile: int describeContents()>
<android.print.PrintManager: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId)>
<android.content.pm.IShortcutService$Default: byte[] getBackupPayload(int)>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>
<android.hardware.camera2.CameraManager: boolean isConcurrentSessionConfigurationSupported(java.util.Map)>
<android.view.DisplayCutout$ParcelableWrapper: int describeContents()>
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceName(java.lang.Class)>
<android.view.autofill.AutofillId: long getVirtualChildLongId()>
<android.webkit.WebView: java.lang.String getTouchIconUrl()>
<android.app.IActivityManager$Stub$Proxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.net.wifi.nl80211.PnoNetwork: int[] getFrequenciesMhz()>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>
<android.app.IActivityManager$Stub$Proxy: android.graphics.Rect getTaskBounds(int)>
<android.app.ISearchManager$Stub$Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.app.assist.AssistStructure$ViewNode: int getWidth()>
<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)>
<android.telephony.CallQuality$1: void <init>()>
<android.content.res.Resources: android.graphics.Typeface getFont(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getSimCallManagerForUser(int)>
<com.android.internal.widget.LockscreenCredential: int getStorageCryptType()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.text.FontConfig$Alias: int getWeight()>
<android.content.integrity.IAppIntegrityManager$Stub: android.content.integrity.IAppIntegrityManager asInterface(android.os.IBinder)>
<android.view.View: int getPaddingBottom()>
<android.os.WorkSource$WorkChain: int hashCode()>
<android.database.sqlite.SQLiteDatabase: int lambda$dumpDatabaseDirectory$0(java.io.File,java.io.File)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int listUidsOfAuthBoundKeys(java.util.List)>
<android.content.res.TypedArray: int getIndexCount()>
<android.text.style.AbsoluteSizeSpan: int getSize()>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getVolume()>
<android.hardware.input.InputDeviceIdentifier: int getVendorId()>
<android.view.KeyEvent: int getKeyCode()>
<android.content.Intent: android.content.ClipData getClipData()>
<android.telecom.TelecomManager: java.util.List getPhoneAccountsForPackage()>
<android.media.AudioManager: int resetAudioPortGeneration()>
<android.os.VibrationEffect$Composition$PrimitiveEffect: int hashCode()>
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: android.app.trust.IStrongAuthTracker$Stub getStub()>
<android.telephony.ims.ImsMmTelManager: boolean isCapable(int,int)>
<android.content.pm.IPinItemRequest$Default: android.os.IBinder asBinder()>
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>
<android.hardware.location.NanoApp: java.lang.String getName()>
<android.app.IActivityController$Stub$Proxy: int systemNotResponding(java.lang.String)>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()>
<com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>
<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>
<android.print.IWriteResultCallback$Default: android.os.IBinder asBinder()>
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telecom.Logging.Session$Info: int describeContents()>
<android.security.net.config.NetworkSecurityTrustManager: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.os.SimpleClock: java.time.ZoneId getZone()>
<android.net.nsd.NsdManager: android.util.SparseArray access$500(android.net.nsd.NsdManager)>
<android.view.IDisplayWindowRotationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.os.BatteryStatsHelper: com.android.internal.os.PowerProfile getPowerProfile()>
<android.location.GnssAntennaInfo$SphericalCorrections: double getDeltaTheta()>
<android.net.IpSecConfig: android.net.IpSecAlgorithm getAuthenticatedEncryption()>
<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getWrappedApplicationKeys()>
<android.telephony._$$Lambda$SubscriptionManager$YBVyClIRQJdWREquhRoX1Ha8_yw: int callMethod(com.android.internal.telephony.ISub)>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.app.BackStackRecord: boolean isPostponed()>
<android.security.keystore.IKeystoreResponseCallback$Default: android.os.IBinder asBinder()>
<android.renderscript.Matrix4f: float get(int,int)>
<com.android.internal.app.IBatteryStats$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayCategory()>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.app.contentsuggestions.IContentSuggestionsManager getDefaultImpl()>
<android.content.Intent: java.lang.String getPackage()>
<android.graphics.HardwareRendererObserver: long getNativeInstance()>
<android.content.pm.PackageInstaller$SessionInfo: int getInstallReason()>
<android.view.DisplayCutout$ParcelableWrapper: int hashCode()>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedEcdsaSignatureDigests()>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>
<android.hardware.hdmi.HdmiUtils: int getLocalPortFromPhysicalAddress(int,int)>
<android.widget.RadioGroup: int getIndexWithinVisibleButtons(android.view.View)>
<android.os.connectivity.GpsBatteryStats: long getEnergyConsumedMaMs()>
<android.animation.Animator$AnimatorConstantState: android.animation.Animator newInstance()>
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmap()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanBackgroundTime(long)>
<android.hardware.input.IInputManager$Default: android.view.InputDevice getInputDevice(int)>
<android.telephony.SubscriptionPlan: android.util.RecurrenceRule getCycleRule()>
<android.os.storage.StorageManager: boolean isEncrypted(java.io.File)>
<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()>
<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes getAudioAttributes()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier lambda$new$0$TextClassificationManager(android.view.textclassifier.TextClassificationContext)>
<android.os.IUserManager$Stub$Proxy: long getUserCreationTime(int)>
<android.app.BackStackRecord: int commitAllowingStateLoss()>
<android.text.style.ReplacementSpan: java.lang.CharSequence getContentDescription()>
<android.gsi.AvbPublicKey: int describeContents()>
<android.media.session.IActiveSessionsListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IMediaHTTPService$Stub$Proxy: android.media.IMediaHTTPConnection makeHTTPConnection()>
<android.media.WebVttRenderingWidget$RegionLayout: android.media.TextTrackRegion getRegion()>
<com.android.internal.telephony.ITelephony$Default: boolean canConnectTo5GInDsdsMode()>
<android.os.IDeviceIdleController$Stub$Proxy: int addPowerSaveWhitelistApps(java.util.List)>
<android.widget.SearchView: java.lang.CharSequence getQueryHint()>
<android.util.apk.ZipUtils: long getZipEocdCentralDirectorySizeBytes(java.nio.ByteBuffer)>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()>
<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>
<android.telephony.CellSignalStrengthNr: int getCsiRsrq()>
<android.app.IProcessObserver$Stub: android.os.IBinder asBinder()>
<android.telephony.UiccAccessRule$1: android.telephony.UiccAccessRule[] newArray(int)>
<android.content.Context: android.os.UserHandle getUser()>
<android.accessibilityservice.GestureDescription$StrokeDescription: long getDuration()>
<android.content.om.IOverlayManager$Stub: android.content.om.IOverlayManager getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getParcelVersion()>
<com.android.internal.os.BatteryStatsHelper: double getComputedPower()>
<android.view.ScrollCaptureSession: android.view.Surface getSurface()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothUnoptimizedScanBackgroundTimer()>
<android.hardware.SystemSensorManager: boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.app.TaskStackBuilder: int getIntentCount()>
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: android.hardware.camera2.impl.CameraMetadataNative getCameraMetadata()>
<android.security.keystore.KeyGenParameterSpec: java.math.BigInteger getCertificateSerialNumber()>
<android.media.AudioMetadata$BaseMap: java.lang.Object get(android.media.AudioMetadata$Key)>
<android.app.AppOpsManager$AttributedHistoricalOps: int describeContents()>
<com.google.android.mms.ContentType: java.util.ArrayList getAudioTypes()>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.service.oemlock.OemLockManager: boolean isDeviceOemUnlocked()>
<android.telephony.TelephonyManager: java.lang.String getManualNetworkSelectionPlmn()>
<com.android.internal.telephony.IOns$Default: boolean setEnable(boolean,java.lang.String)>
<android.content.pm.StringParceledListSlice: java.util.List getList()>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributePrefix(int)>
<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.animation.KeyframeSet: java.lang.Class getType()>
<android.telephony.TelephonyManager: android.telephony.ServiceState getServiceState()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>
<android.content.pm.IPackageManager$Default: boolean getBlockUninstallForUser(java.lang.String,int)>
<android.text.AutoGrowArray$IntArray: int get(int)>
<android.os.IUserManager$Default: int getUserBadgeLabelResId(int)>
<android.content.pm.ActivityInfo: int describeContents()>
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int getAccessibilityWindowId(android.os.IBinder)>
<android.hardware.biometrics.CryptoObject: javax.crypto.Mac getMac()>
<android.graphics.text.LineBreaker: int access$200(long)>
<android.app.admin.DevicePolicyManager: boolean isUninstallInQueue(java.lang.String)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo access$100(java.lang.String,int,int)>
<com.android.internal.database.SortCursor: int getInt(int)>
<android.net.wifi.nl80211.PnoSettings: int describeContents()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForUser(int,java.lang.String,long,long)>
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>
<android.hardware.radio.ITuner$Stub$Proxy: boolean isClosed()>
<com.android.internal.app.ToolbarActionBar: float getElevation()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.GLThreadManager access$500(android.hardware.camera2.legacy.RequestThreadManager)>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)>
<android.widget.FrameLayout: boolean getMeasureAllChildren()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>
<android.view.inputmethod.InlineSuggestionsRequest: java.util.List getInlinePresentationSpecs()>
<android.content.pm.IShortcutService$Default: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.Dialog: android.view.SearchEvent getSearchEvent()>
<android.widget.ToastPresenter: android.os.IBinder getToken()>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int getGlobalAudioRestriction()>
<android.hardware.hdmi.HdmiDeviceInfo: int getId()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String)>
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()>
<android.app.usage.IUsageStatsManager$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)>
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceInfo[] getDevices()>
<android.media.IAudioService$Default: java.util.List getActiveRecordingConfigurations()>
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentityTdscdma copy()>
<android.app.IActivityTaskManager$Stub$Proxy: int getMaxNumPictureInPictureActions(android.os.IBinder)>
<android.app.usage.IStorageStatsManager$Stub: java.lang.String getTransactionName(int)>
<android.content.SyncInfo: int describeContents()>
<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.os.IBinder asBinder()>
<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()>
<android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getDeleteIntent()>
<android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>
<android.system.suspend.ISuspendCallback$Stub: android.os.IBinder asBinder()>
<android.service.notification.Adjustment: java.lang.CharSequence getExplanation()>
<android.widget.ToastPresenter: android.view.WindowManager$LayoutParams getLayoutParams()>
<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>
<android.view.KeyEvent: int getModifierMetaStateMask()>
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>
<android.app.ActivityManager: int getMaxNumPictureInPictureActions()>
<android.media.MediaPlayer$TrackInfo: android.media.MediaFormat getFormat()>
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getPreferredDataSubscriptionId()>
<android.hardware.ICameraClient$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitCodePaths()>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.compat.IPlatformCompat$Default: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanEnergyScanCallback$Default: android.os.IBinder asBinder()>
<android.os.IPowerManager$Stub$Proxy: boolean isDeviceIdleMode()>
<android.transition.ChangeTransform$1: float[] get(android.transition.ChangeTransform$PathAnimatorMatrix)>
<android.hardware.radio.ProgramSelector$Identifier: int describeContents()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AutomaticZenRule: android.net.Uri getConditionId()>
<android.security.keystore.IKeystoreOperationResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: boolean isInCall()>
<android.app.ApplicationPackageManager$HasSystemFeatureQuery: int hashCode()>
<android.accounts.AuthenticatorDescription: int hashCode()>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.hardware.radio.V1_5.OptionalCsgInfo$hidl_discriminator: java.lang.String getName(byte)>
<android.permission.PermissionManager: int access$200(java.lang.String,java.lang.String,int)>
<android.os.storage.VolumeInfo: android.content.Intent buildBrowseIntentForUser(int)>
<com.android.internal.telephony.ISub$Default: int getActiveSubInfoCountMax()>
<android.graphics.ColorSpace$Rgb: float getMaxValue(int)>
<android.media.midi.MidiDeviceInfo$PortInfo: int getType()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getVersion()>
<com.android.internal.app.ISoundTriggerService$Default: int getModelState(android.os.ParcelUuid)>
<android.content.pm.PackageManager: java.lang.String getContentCaptureServicePackageName()>
<android.widget.TextView$CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)>
<android.widget.TextView: boolean getDefaultEditable()>
<android.os.UserHandle: int getIdentifier()>
<android.os.Environment: java.io.File getUserConfigDirectory(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>
<android.os.ServiceManager: java.lang.String[] listServices()>
<android.content.pm.PackageParser$Package: int describeContents()>
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>
<android.hardware.camera2.CameraCaptureSession: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.app.ITransientNotificationCallback$Stub: android.app.ITransientNotificationCallback asInterface(android.os.IBinder)>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>
<android.transition.Transition: android.transition.Transition clone()>
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
<android.text.SpannedString: int getSpanEnd(java.lang.Object)>
<com.google.android.mms.pdu.PduBody: int getPartIndex(com.google.android.mms.pdu.PduPart)>
<com.android.internal.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()>
<android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String,int)>
<android.hardware.display.IColorDisplayManager$Default: android.hardware.display.Time getNightDisplayCustomEndTime()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric()>
<android.media.AudioPlaybackCaptureConfiguration: int[] getExcludeUsages()>
<android.os.StatFs: long getTotalBytes()>
<android.security.KeyStore: int attestDeviceIds(android.security.keymaster.KeymasterArguments,android.security.keymaster.KeymasterCertificateChain)>
<android.database.sqlite.SQLiteConnection: int getConnectionId()>
<android.telephony.CarrierRestrictionRules: java.util.List access$200(android.telephony.CarrierRestrictionRules)>
<android.view.ViewRootImpl: int getLayoutDirection()>
<android.os.IMessenger$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ApplicationPackageManager: java.lang.CharSequence getBackgroundPermissionOptionLabel()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.os.IBinder asBinder()>
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.os.BatteryManager: boolean isCharging()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.printservice.recommendation.IRecommendationsChangeListener asInterface(android.os.IBinder)>
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)>
<android.net.ConnectivityManager: int getConnectionOwnerUid(int,java.net.InetSocketAddress,java.net.InetSocketAddress)>
<android.view.accessibility.IAccessibilityManagerClient$Default: android.os.IBinder asBinder()>
<android.content.Intent: java.lang.String getLaunchToken()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getAllSubInfoCount(java.lang.String,java.lang.String)>
<android.net.Credentials: int getUid()>
<android.graphics.drawable.VectorDrawable: java.lang.Object getTargetByName(java.lang.String)>
<android.util.apk.VerityBuilder: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory,android.util.apk.SignatureInfo)>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getClassName()>
<android.graphics.drawable.ColorStateListDrawable: boolean isStateful()>
<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder getLeashedParent()>
<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>
<android.os.VibrationEffect: android.os.VibrationEffect get(int,boolean)>
<android.telephony.SmsMessage: int getProtocolIdentifier()>
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)>
<android.view.textclassifier.TextClassificationConstants: java.lang.String getTextClassifierServicePackageOverride()>
<android.widget.TextView: int getJustificationMode()>
<android.app.ActivityManager: boolean isActivityStartAllowedOnDisplay(android.content.Context,int,android.content.Intent)>
<android.telephony.PinResult: int getType()>
<android.app.ApplicationPackageManager: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.app.job.JobParameters: java.lang.String getDebugStopReason()>
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()>
<android.app.ContextImpl$ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>
<android.hardware.location.IContextHubTransactionCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>
<android.telephony.ims.aidl.IImsRcsFeature$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageInstallerCallback$Stub: android.content.pm.IPackageInstallerCallback asInterface(android.os.IBinder)>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback access$000(android.hardware.location.ContextHubManager)>
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierPrivilegeStatus(int)>
<android.os.UserManager: java.util.List getUserRestrictionSources(java.lang.String,android.os.UserHandle)>
<android.widget.ListView: int getHeaderViewsCount()>
<com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver getDefaultImpl()>
<android.security.KeyStore: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.service.dreams.IDreamManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.IPrintServicesChangeListener$Stub: android.os.IBinder asBinder()>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>
<android.print.PrintAttributes$Margins: int getRightMils()>
<android.os.IUserRestrictionsListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.blob.IBlobStoreManager$Default: long getRemainingLeaseQuotaBytes(java.lang.String)>
<android.graphics.ColorSpace: android.graphics.ColorSpace get(int)>
<android.hardware.radio.TunerAdapter: boolean isAnalogForced()>
<android.hardware.display.IDisplayManagerCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledSingleShiftTables()>
<android.view.inputmethod.InlineSuggestionsRequest: int access$000()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.security.IKeyChainAliasCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.app.Fragment: int getId()>
<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>
<android.content.pm.parsing.ParsingPackageImpl: long[] getUsesStaticLibrariesVersions()>
<android.hardware.radio.RadioManager$ProgramInfo: java.util.Collection getRelatedContent()>
<android.media.VolumeShaper$Configuration: int getType()>
<android.media.AudioManager: int listAudioDevicePorts(java.util.ArrayList)>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState()>
<android.hardware.location.IContextHubClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.radio.Announcement: android.hardware.radio.ProgramSelector getSelector()>
<android.content.pm.PackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<android.telephony.ims.aidl.IImsConfig$Default: android.os.IBinder asBinder()>
<android.renderscript.RenderScript: long nFontCreateFromAssetStream(java.lang.String,float,int,long)>
<android.media.tv.TvTrackInfo: java.lang.String getId()>
<android.content.IRestrictionsManager$Stub: android.content.IRestrictionsManager asInterface(android.os.IBinder)>
<android.util.Log$ImmediateLogWriter: int getWritten()>
<android.app.JobSchedulerImpl: java.util.List getAllJobSnapshots()>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>
<android.telephony.TelephonyManager: boolean isPotentialEmergencyNumber(java.lang.String)>
<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()>
<android.content.ContentProvider: java.lang.String getWritePermission()>
<android.net.TelephonyNetworkSpecifier: int describeContents()>
<android.os.storage.VolumeInfo: int getType()>
<android.view.InputChannel: android.os.IBinder getToken()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)>
<android.telephony.SubscriptionManager: int lambda$addSubscriptionsIntoGroup$8(java.lang.Integer)>
<com.android.ims.internal.IImsUt$Default: int queryCOLP()>
<android.widget.RemoteViewsAdapter: int getItemViewType(int)>
<android.telephony.CallAttributes: int describeContents()>
<android.app.Notification: long getTimeoutAfter()>
<com.android.internal.telephony.ITelephony$Default: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: int getMode()>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(int[],int)>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,int)>
<android.hardware.ICameraClient$Default: android.os.IBinder asBinder()>
<android.telephony.ims.ImsExternalCallState: int describeContents()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Default: android.os.IBinder asBinder()>
<android.telephony.CellIdentityCdma$1: android.telephony.CellIdentityCdma createFromParcel(android.os.Parcel)>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
<android.hardware.display.BrightnessConfiguration$Builder: int getMaxCorrectionsByPackageName()>
<android.app.IAlarmManager$Stub$Proxy: long getNextWakeFromIdleTime()>
<com.android.internal.graphics.palette.ColorCutQuantizer$1: int compare(com.android.internal.graphics.palette.ColorCutQuantizer$Vbox,com.android.internal.graphics.palette.ColorCutQuantizer$Vbox)>
<com.android.internal.content.om.OverlayConfigParser$ParsingContext: int access$210(com.android.internal.content.om.OverlayConfigParser$ParsingContext)>
<android.location.Address: java.lang.String getLocality()>
<android.view.textclassifier.SelectionEvent: long getDurationSinceSessionStart()>
<android.content.res.Resources: float getFloat(int)>
<android.view.RemoteAnimationDefinition: int describeContents()>
<android.webkit.TracingController: android.webkit.TracingController getInstance()>
<android.service.textclassifier.ITextClassifierCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Fragment: android.os.Bundle getArguments()>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getScreenOffRpmStats()>
<android.net.INetworkPolicyManager$Default: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)>
<android.media.RoutingSessionInfo: java.lang.CharSequence getName()>
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: int getConfigInt(int)>
<android.view.Display: java.lang.String getUniqueId()>
<android.os.Debug: int getGlobalAllocSize()>
<com.android.internal.telephony.ISub$Default: boolean isSubscriptionEnabled(int)>
<android.media.AudioSystem: int getNumStreamTypes()>
<android.telephony.TelephonyManager: void silenceRinger()>
<android.hardware.camera2.impl.CameraMetadataNative$6: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<com.android.internal.appwidget.IAppWidgetHost$Stub: com.android.internal.appwidget.IAppWidgetHost asInterface(android.os.IBinder)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.app.IActivityController$Default: int appNotResponding(java.lang.String,int,java.lang.String)>
<android.net.NetworkPolicy: android.net.NetworkPolicy getNetworkPolicyFromBackup(java.io.DataInputStream)>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.IRequestFinishCallback$Stub: android.app.IRequestFinishCallback asInterface(android.os.IBinder)>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()>
<android.media.tv.TvTrackInfo: int hashCode()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<android.media.AudioManager: int getOutputLatency(int)>
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createNonrecurring(java.time.ZonedDateTime,java.time.ZonedDateTime)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitNames()>
<android.view.inputmethod.InlineSuggestionsRequest: int getHostDisplayId()>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<android.hardware.radio.RadioTuner: android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList$Filter)>
<android.app.slice.SliceManager: java.util.List getPinnedSlices()>
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityWcdma: void updateGlobalCellId()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayTargetName()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,android.media.VolumeShaper$Configuration)>
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
<android.hardware.radio.ITuner$Default: android.os.IBinder asBinder()>
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintServiceRecommendations(int)>
<android.media.IRecordingConfigDispatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.tv.ITvInputManager$Default: int getClientPid(java.lang.String)>
<android.os.Binder: long access$000()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer getDefaultImpl()>
<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: int describeContents()>
<android.app.backup.BackupManager: boolean isBackupServiceActive(android.os.UserHandle)>
<android.content.LocusId: java.lang.String getId()>
<android.widget.RemoteViews$RemoteViewsContextWrapper: android.content.res.Resources$Theme getTheme()>
<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.net.wifi.nl80211.IPnoScanEvent$Stub$Proxy: android.os.IBinder asBinder()>
<android.printservice.recommendation.RecommendationInfo: java.lang.CharSequence getPackageName()>
<android.media.soundtrigger.SoundTriggerManager: int getDetectionServiceOperationsTimeout()>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>
<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>
<com.android.internal.util.BitwiseInputStream: int available()>
<android.widget.inline.InlinePresentationSpec: android.util.Size getMinSize()>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.app.IInstrumentationWatcher$Stub: java.lang.String getTransactionName(int)>
<android.media.soundtrigger_middleware.PhraseRecognitionEvent: int describeContents()>
<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSessionId getContentCaptureSessionId()>
<android.media.Image: long getNativeContext()>
<android.graphics.Bitmap: int getPixel(int,int)>
<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()>
<android.os.storage.StorageManager: java.io.File translateAppToSystem(java.io.File,int,int)>
<android.media.midi.IMidiDeviceListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.inputmethod.CancellationGroup$Completable$Values: java.lang.Object getValue()>
<android.view.textclassifier.TextLinks$Request: java.lang.String getCallingPackageName()>
<android.view.MotionEvent: float getRawX()>
<android.service.notification.NotificationListenerService$Ranking: int getRank()>
<android.content.pm.Signature: int hashCode()>
<android.util.MemoryIntArray: int get(int)>
<android.view.WindowInsetsAnimation: long getDurationMillis()>
<android.text.style.AlignmentSpan$Standard: int getSpanTypeIdInternal()>
<android.app.servertransaction.ClientTransactionItem: int getPostExecutionState()>
<android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>
<android.util.apk.WrappedX509Certificate: java.math.BigInteger getSerialNumber()>
<com.android.internal.telephony.SmsHeader$MiscElt: int hashCode()>
<android.media.AudioManager: boolean isMusicActiveRemotely()>
<android.text.TextDirectionHeuristics: int access$100(int)>
<android.view.IWindowManager$Default: int getInitialDisplayDensity(int)>
<android.media.AudioRecordingConfiguration: int getClientAudioSessionId()>
<android.view.SurfaceControl: int getHeight()>
<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>
<android.net.LinkProperties: java.util.List getAllRoutes()>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByUser()>
<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()>
<android.app.job.JobInfo: long getMinLatencyMillis()>
<android.widget.OverScroller: int getCurrY()>
<com.android.internal.app.IVoiceInteractorCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: int[] getSlotsMapping()>
<android.os.IProgressListener$Stub: android.os.IProgressListener getDefaultImpl()>
<android.os.BasicShellCommandHandler: java.io.PrintWriter getErrPrintWriter()>
<android.animation.AnimatorSet$3: int compare(android.animation.AnimatorSet$AnimationEvent,android.animation.AnimatorSet$AnimationEvent)>
<android.widget.ListPopupWindow: int getAnimationStyle()>
<com.android.internal.widget.ILockSettings$Default: int getCredentialType(int)>
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getAutoRevokeExemptionRequestedPackages(int)>
<android.view.IWindowManager$Default: android.graphics.Region getCurrentImeTouchRegion()>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getSelfManagedPhoneAccounts(java.lang.String,java.lang.String)>
<android.app.ISearchManager$Default: java.util.List getSearchablesInGlobalSearch()>
<android.widget.AbsListView: int getLeftPaddingOffset()>
<android.view.ISystemGestureExclusionListener$Stub: java.lang.String getTransactionName(int)>
<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()>
<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean$MarshalerBoolean: int getNativeSize()>
<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList getMixes()>
<com.android.internal.telephony.cdma.SmsMessage: int getStatus()>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>
<android.view.SurfaceControl: android.view.SurfaceControl$DesiredDisplayConfigSpecs getDesiredDisplayConfigSpecs(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>
<android.text.TextDirectionHeuristics$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.widget.TextView$Marquee: float getMaxFadeScroll()>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>
<android.hardware.usb.UsbDevice: int getVendorId()>
<android.net.IConnectivityManager$Default: java.lang.String[] getTetheredIfaces()>
<android.print.PageRange: int getSize()>
<android.app.job.JobInfo: long getMinFlexMillis()>
<android.hardware.hdmi.IHdmiInputChangeListener$Default: android.os.IBinder asBinder()>
<android.app.contentsuggestions.IContentSuggestionsManager$Default: android.os.IBinder asBinder()>
<android.app.timedetector.ManualTimeSuggestion: int describeContents()>
<android.view.animation.Animation: int getRepeatCount()>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.hardware.display.DeviceProductInfo: int describeContents()>
<android.os.IUserManager$Stub: android.os.IUserManager getDefaultImpl()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>
<android.app.ContextImpl: android.content.res.AssetManager getAssets()>
<com.android.internal.telephony.ITelephony$Default: boolean isDataEnabled(int)>
<android.text.HtmlToSpannedConverter$Heading: int access$1300(android.text.HtmlToSpannedConverter$Heading)>
<com.google.android.mms.pdu.SendReq: byte[] getTransactionId()>
<android.graphics.ColorSpace$Lab: float getMinValue(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long forceNetworkLogs()>
<com.android.internal.telephony.SmsAddress: boolean couldBeEmailGateway()>
<android.content.res.Resources: android.util.LongSparseArray getPreloadedDrawables()>
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.hardware.display.VirtualDisplayConfig: java.lang.String getName()>
<com.android.internal.compat.IOverrideValidator$Stub: com.android.internal.compat.IOverrideValidator asInterface(android.os.IBinder)>
<android.util.apk.WrappedX509Certificate: java.security.Principal getIssuerDN()>
<android.media.session.MediaSessionLegacyHelper: boolean isGlobalPriorityActive()>
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isDeviceOemUnlocked()>
<android.security.keystore.recovery.KeyChainProtectionParams: int getUserSecretType()>
<android.hardware.Camera$Parameters: int getJpegQuality()>
<android.media.IMediaRouterService$Stub: android.os.IBinder asBinder()>
<android.media.AudioSystem: java.lang.String getDeviceName(int)>
<android.app.contentsuggestions.ClassificationsRequest: java.util.List getSelections()>
<android.view.IWindowManager$Default: int getNavBarPosition(int)>
<android.text.style.ScaleXSpan: int describeContents()>
<android.util.apk.WrappedX509Certificate: java.security.PublicKey getPublicKey()>
<android.location.Address: java.util.Locale getLocale()>
<android.media.audiopolicy.AudioPolicy: int detachMixes(java.util.List)>
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList(int,int)>
<android.app.Notification$Builder: int access$3800(android.app.Notification$Builder)>
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] preceding(int)>
<android.os.Debug: int getGlobalClassInitCount()>
<android.widget.SearchView: java.lang.CharSequence getAccessibilityClassName()>
<android.widget.AdapterView: long getSelectedItemId()>
<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<android.widget.CursorAdapter: android.content.res.Resources$Theme getDropDownViewTheme()>
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.security.keystore.AndroidKeyStoreKey: byte[] getEncoded()>
<android.media.SubtitleTrack$CueList$1: java.util.Iterator iterator()>
<android.system.suspend.ISuspendCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.text.method.DateKeyListener: int getInputType()>
<android.webkit.WebViewProviderResponse: int describeContents()>
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getEndPlatformVersion()>
<android.app.Notification$WearableExtender: boolean getContentIntentAvailableOffline()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm createFromParcel(android.os.Parcel)>
<android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher asInterface(android.os.IBinder)>
<android.widget.Editor$InsertionHandleView: int getMagnifierHandleTrigger()>
<android.os.storage.StorageManager: java.util.List getRecentStorageVolumes()>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String)>
<android.widget.RtlSpacingHelper: int getLeft()>
<android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>
<android.media.IAudioService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>
<android.hardware.hdmi.HdmiHotplugEvent: int getPort()>
<android.content.pm.IPackageManager$Default: int getMoveStatus(int)>
<com.android.internal.telephony.euicc.IEuiccController$Default: android.telephony.euicc.EuiccInfo getEuiccInfo(int)>
<android.app.INotificationManager$Default: android.app.NotificationChannel getNotificationChannelForPackage(java.lang.String,int,java.lang.String,java.lang.String,boolean)>
<android.print.IPrintManager$Stub$Proxy: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId,int)>
<android.media.IMediaRouterService$Stub: java.lang.String getTransactionName(int)>
<android.app.AppOpsManager: int permissionToOpCode(java.lang.String)>
<android.app.timezonedetector.ManualTimeZoneSuggestion: int hashCode()>
<android.app.NotificationManager: int getRuleInstanceCount(android.content.ComponentName)>
<android.content.pm.IPackageDataObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ContextWrapper: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<com.android.internal.os.KernelSingleUidTimeReader: long[] getDeltaLocked(long[],long[])>
<com.android.internal.textservice.ITextServicesManager$Default: android.os.IBinder asBinder()>
<android.os.storage.IStorageManager$Default: long getAllocatableBytes(java.lang.String,int,java.lang.String)>
<android.app.backup.IRestoreSession$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.app.ApplicationPackageManager: java.lang.String getDefaultBrowserPackageNameAsUser(int)>
<android.graphics.fonts.FontStyle: int getWeight()>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>
<android.hardware.camera2.utils.SubmitInfo: long getLastFrameNumber()>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>
<android.app.job.IJobScheduler$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.GpsNavigationMessage: byte getType()>
<com.android.internal.view.menu.ActionMenuItem: int getItemId()>
<android.text.DynamicLayout: int getLineCount()>
<android.app.IActivityTaskManager$Default: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>
<android.net.lowpan.LowpanInterface: java.lang.String getName()>
<android.text.AutoGrowArray$IntArray: int size()>
<android.content.ContextWrapper: java.util.concurrent.Executor getMainExecutor()>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>
<android.widget.OverScroller$SplineOverScroller: int access$100(android.widget.OverScroller$SplineOverScroller)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isConnected()>
<android.animation.ValueAnimator: long getTotalDuration()>
<android.app.SearchableInfo: int getSuggestThreshold()>
<com.android.internal.view.IDragAndDropPermissions$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getHiddenStateInsets()>
<android.view.inputmethod.InputContentInfo: int describeContents()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.MediaCodec$MediaImage$MediaPlane: int getRowStride()>
<android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>
<android.os.IUserManager$Stub$Proxy: android.os.PersistableBundle getSeedAccountOptions()>
<android.inputmethodservice._$$Lambda$InputMethodService$TZAfta6HEKUpxapSrZpy7Hhlwrw: java.lang.Object get()>
<android.location.Location: float getVerticalAccuracyMeters()>
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.String getName()>
<com.android.internal.telephony.ITelephony$Default: int getDataActivity()>
<android.view.textclassifier.TextSelection$Request: java.lang.String getCallingPackageName()>
<android.hardware.cas.V1_1.ICas$Stub: java.util.ArrayList getHashChain()>
<android.content.pm.IPackageManager$Default: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>
<com.android.ims.internal.IImsCallSession$Default: java.lang.String getCallId()>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getPrimaryUser()>
<android.view.ViewRootImpl: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()>
<android.hardware.face.FaceManager: int getMappedAcquiredInfo(int,int)>
<android.service.notification.StatusBarNotification: java.lang.String getKey()>
<android.text.BoringLayout: int getLineStart(int)>
<android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel: int describeContents()>
<android.media.IMediaHTTPConnection$Stub$Proxy: long getSize()>
<android.location.Address: java.lang.String getAddressLine(int)>
<android.media.IMediaHTTPConnection$Stub: android.media.IMediaHTTPConnection getDefaultImpl()>
<com.android.internal.view.InlineSuggestionsRequestInfo: int describeContents()>
<android.content.pm.VersionedPackage: int describeContents()>
<android.window.WindowContainerTransaction: java.util.List getHierarchyOps()>
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.app.SearchableInfo: int getIconId()>
<android.app.RemoteInputHistoryItem: java.lang.String getMimeType()>
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()>
<android.database.AbstractWindowedCursor: int getInt(int)>
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>
<android.app.ApplicationPackageManager$ResourceName: int hashCode()>
<android.app.Notification$WearableExtender: boolean getHintAvoidBackgroundClipping()>
<android.telephony.TelephonyManager: int getCdmaEriIconMode(int)>
<com.android.internal.app.AlertController: int access$1100(com.android.internal.app.AlertController)>
<android.security.IKeyChainAliasCallback$Stub: android.security.IKeyChainAliasCallback asInterface(android.os.IBinder)>
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.hardware.camera2.impl.CameraMetadataNative$11: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.util.EventLog$Event: java.lang.Object getData()>
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$hxk87AxkClLRhRgGak0NUvJOACM: float getInterpolation(float)>
<android.security.IFileIntegrityService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.LoaderManagerImpl: android.app.FragmentHostCallback getFragmentHostCallback()>
<android.net.IpSecConfig: int getEncapRemotePort()>
<android.content.res.StringBlock: java.lang.CharSequence get(int)>
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.ImsException: int getCode()>
<android.security.keystore.AndroidKeyStoreECPrivateKey: java.security.spec.ECParameterSpec getParams()>
<android.security.net.config.SystemCertificateSource$NoPreloadHolder: android.security.net.config.SystemCertificateSource access$100()>
<android.net.ITestNetworkManager$Stub: android.net.ITestNetworkManager asInterface(android.os.IBinder)>
<android.media.session.PlaybackState$CustomAction: java.lang.String getAction()>
<android.net.IConnectivityManager$Stub: java.lang.String getTransactionName(int)>
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()>
<android.telephony.UiccCardInfo$1: android.telephony.UiccCardInfo[] newArray(int)>
<android.hardware.radio.IRadioService$Stub: android.os.IBinder asBinder()>
<android.media.MediaDrm: java.util.List getSupportedCryptoSchemes()>
<android.graphics.Paint: float getStrikeThruPosition()>
<android.service.notification.NotificationListenerService$Ranking: int getSuppressedVisualEffects()>
<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()>
<android.widget.OverScroller$SplineOverScroller: boolean update()>
<android.security.KeyStore: boolean isConfirmationPromptSupported()>
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: java.util.List getAvailableSizes()>
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.os.IBinder asBinder()>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>
<android.media.MediaCodec$MediaImage: int getScalingMode()>
<android.net.wifi.nl80211.NativeScanResult: int getCapabilities()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToRFC3966(java.lang.String,java.lang.String)>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>
<android.widget.ListView: java.lang.CharSequence getAccessibilityClassName()>
<android.view.inputmethod.InputMethodManager: android.graphics.Matrix access$700(android.view.inputmethod.InputMethodManager)>
<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,long,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl[],android.graphics.Point,android.view.SurfaceControl)>
<android.media.projection.MediaProjectionInfo: int describeContents()>
<android.widget.RemoteViews$BitmapCache: int getBitmapId(android.graphics.Bitmap)>
<android.renderscript.Allocation: long getStride()>
<android.view.View: android.graphics.Paint getDebugPaint()>
<android.media.MediaRouter$RouteCategory: java.util.List getRoutes(java.util.List)>
<android.app.PackageDeleteObserver: android.content.pm.IPackageDeleteObserver2 getBinder()>
<android.graphics.drawable.VectorDrawable$VGroup: float getScaleX()>
<android.net.LinkProperties: java.util.List getPcscfServers()>
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)>
<android.hardware.camera2.params.OutputConfiguration: android.view.Surface getSurface()>
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanCredential getLowpanCredential()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.ISystemUpdateManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreService$Default: int exist(java.lang.String,int)>
<android.net.IConnectivityDiagnosticsCallback$Default: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: android.os.Bundle getSuspendedPackageAppExtras()>
<android.os.StrictMode$3: android.os.Handler initialValue()>
<android.app.ResultInfo: int describeContents()>
<android.view.View: float getY()>
<android.media.Rating: int getRatingStyle()>
<android.filterfw.core.FrameFormat: int getValuesPerSample()>
<android.view.View: int[] getLocationOnScreen()>
<android.content.res.AssetManager: int addOverlayPath(java.lang.String)>
<android.view.IAppTransitionAnimationSpecsFuture$Default: android.os.IBinder asBinder()>
<android.app.IStopUserCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.os.IBinder asBinder()>
<android.os.Parcel: java.lang.String[] createString8Array()>
<android.telephony.data.ApnSetting: java.lang.String getOperatorNumeric()>
<android.hardware.radio.V1_5.CellIdentityWcdma: int hashCode()>
<android.media.tv.TvInputHardwareInfo: int describeContents()>
<android.os.ParcelFileDescriptor: int describeContents()>
<android.telephony.ims.ImsSsInfo: int getClirInterrogationStatus()>
<android.hardware.ISensorPrivacyManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.SurfaceControl: android.view.Display$HdrCapabilities getHdrCapabilities(android.os.IBinder)>
<android.app.IActivityManager$Stub$Proxy: android.os.ParcelFileDescriptor getLifeMonitor()>
<android.telephony.CbGeoUtils$Circle: double getRadius()>
<android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService asInterface(android.os.IBinder)>
<android.accessibilityservice.GestureDescription: int getDisplayId()>
<android.app.blob.IBlobStoreSession$Stub: android.os.IBinder asBinder()>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>
<android.text.FontConfig$Alias: java.lang.String getName()>
<android.text.style.TextAppearanceSpan: int describeContents()>
<android.telephony.CallAttributes: android.telephony.PreciseCallState getPreciseCallState()>
<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>
<android.view.View: android.graphics.Rect getClipBounds()>
<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>
<android.animation.Animator: long getTotalDuration()>
<android.service.textclassifier.ITextClassifierService$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)>
<android.app.ActivityManager$AppTask: android.app.ActivityManager$RecentTaskInfo getTaskInfo()>
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<android.hardware.ISerialManager$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioPlaybackConfiguration: int getPlayerState()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAffiliatedUser()>
<android.print.PrintAttributes$Resolution: java.lang.String getId()>
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$200(android.security.keystore.recovery.WrappedApplicationKey)>
<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>
<android.view.MotionEvent: float getHistoricalX(int,int)>
<android.app.IActivityManager$Default: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()>
<android.widget.ExpandableListView: long getSelectedId()>
<android.content.integrity.AppIntegrityManager: java.lang.String getCurrentRuleSetProvider()>
<com.google.android.mms.ContentType: java.util.ArrayList getImageTypes()>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: android.os.IBinder asBinder()>
<android.net.ProxyInfo: int hashCode()>
<com.android.internal.appwidget.IAppWidgetService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<android.telephony.TelephonyManager: int getCallWaitingStatus()>
<android.os.LocaleList: int hashCode()>
<android.telecom.TelecomManager: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)>
<android.telephony.TelephonyManager: boolean isTtyModeSupported()>
<android.filterfw.io.PatternScanner: int lineNo()>
<android.hardware.ISensorPrivacyListener$Stub: android.hardware.ISensorPrivacyListener asInterface(android.os.IBinder)>
<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getLocalTextClassifier()>
<android.content.pm.parsing.component.ParsedIntentInfo: int getLabelRes()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.util.List GetApInterfaces()>
<android.text.TextUtils$Reverser: int length()>
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getCpuActiveTime()>
<android.database.sqlite.SQLiteDatabase$OpenParams: long getIdleConnectionTimeout()>
<android.content.pm.parsing.component.ParsedActivity: int getPrivateFlags()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRttSupported(int)>
<android.view.inputmethod.CorrectionInfo: int getOffset()>
<android.view.inputmethod.InlineSuggestionsRequest: android.os.IBinder getHostInputToken()>
<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>
<android.content.pm.dex.IArtManager$Stub: android.content.pm.dex.IArtManager getDefaultImpl()>
<android.print.IPrinterDiscoveryObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.INotificationManager$Stub$Proxy: java.util.List getZenRules()>
<android.telecom.ParcelableCallAnalytics: java.util.List getVideoEvents()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getPhoneAccountsForPackage(java.lang.String)>
<android.accessibilityservice.GestureDescription$StrokeDescription: android.graphics.Path getPath()>
<android.net.NetworkCapabilities: int getRequestorUid()>
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSmartActions()>
<android.hardware.display.IDisplayManager$Stub$Proxy: int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String)>
<android.content.res.ColorStateList: int[] getColors()>
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.location.ILocationManager$Stub$Proxy: int getGnssYearOfHardware()>
<com.android.internal.os.BatteryStatsImpl: int getWifiMulticastWakelockCount(int)>
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()>
<android.view.autofill.AutofillPopupWindow: float getElevation()>
<android.hardware.radio.RadioManager$ProgramInfo: int describeContents()>
<android.telephony.CellIdentity: boolean equals(java.lang.Object)>
<android.security.IKeyChainService$Stub: android.security.IKeyChainService asInterface(android.os.IBinder)>
<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getLinkProperties()>
<android.view.inputmethod.SparseRectFArray: android.graphics.RectF get(int)>
<android.os.Bundle: float getFloat(java.lang.String)>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>
<android.os.IThermalService$Stub$Proxy: float getThermalHeadroom(int)>
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.telephony.CellIdentity: boolean isValidPlmn(java.lang.String)>
<android.os.UserManager: int getUserIconBadgeResId(int)>
<android.widget.AbsListView: int getListPaddingLeft()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int lock(int)>
<android.graphics.animation.RenderNodeAnimator: android.animation.TimeInterpolator getInterpolator()>
<android.text.BoringLayout: int getHeight()>
<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int getChangingConfigurations()>
<android.hardware.camera2.params.OutputConfiguration: int hashCode()>
<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>
<android.window.IWindowOrganizerController$Default: android.window.ITaskOrganizerController getTaskOrganizerController()>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>
<android.view.VelocityTracker$Estimator: float getXCoeff(int)>
<android.graphics.drawable.VectorDrawable$VGroup$4: java.lang.Object get(java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Default: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.hardware.hdmi.IHdmiControlCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State[] values()>
<android.os.IThermalStatusListener$Default: android.os.IBinder asBinder()>
<android.os.BatterySaverPolicyConfig: boolean getEnableDataSaver()>
<android.widget.TextView: int getTotalPaddingRight()>
<android.telephony.CellSignalStrengthLte: int getCqi()>
<android.media.AudioRecord: int getSampleRate()>
<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioAttributes()>
<android.hardware.input.TouchCalibration: int hashCode()>
<android.util.ArrayMap$1: int colIndexOfValue(java.lang.Object)>
<android.telephony.TelephonyManager: void shutdownAllRadios()>
<android.net.INetworkPolicyManager$Default: boolean getRestrictBackground()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoSizesFor(android.util.Range)>
<com.android.internal.util.MemInfoReader: long getTotalSize()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultVoiceSubId()>
<android.content.pm.DataLoaderParams: int getType()>
<android.app.AppOpsManager$PackageOps: int describeContents()>
<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.renderscript.RenderScript: long nFileA3DCreateFromAsset(android.content.res.AssetManager,java.lang.String)>
<android.hardware.display.IVirtualDisplayCallback$Stub: android.hardware.display.IVirtualDisplayCallback getDefaultImpl()>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo getPrimaryPhysicalVolume()>
<android.security.KeyStore: byte[] get(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)>
<android.os.UserManager: int getUserSwitchability(android.os.UserHandle)>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>
<android.view.textclassifier.TextClassifierEvent: java.lang.String getResultId()>
<com.android.internal.util.function.pooled.PooledLambdaImpl: int getFlags(int)>
<android.widget.TextView: boolean getShowSoftInputOnFocus()>
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int getNativeSize()>
<android.print.PrinterCapabilitiesInfo: int getDuplexModes()>
<android.content.SyncRequest$Builder: int access$500(android.content.SyncRequest$Builder)>
<android.util.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)>
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getInputs()>
<android.telephony.CbGeoUtils$LatLng: boolean equals(java.lang.Object)>
<android.widget.Editor$SuggestionsPopupWindow: int getTextOffset()>
<android.renderscript.RenderScript: long nProgramVertexCreate(java.lang.String,java.lang.String[],long[])>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.Insets getOpticalInsets()>
<android.app.IWallpaperManager$Stub$Proxy: int getWallpaperIdForUser(int,int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyInfo getGlobalProxy()>
<android.app.IActivityController$Stub$Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentLocation(java.lang.String)>
<com.android.internal.infra.AndroidFuture: java.lang.Throwable unwrapExecutionException(java.lang.Throwable)>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getScreenOffRpmTimerLocked(java.lang.String)>
<android.util.ArrayMap: int indexOf(java.lang.Object,int)>
<android.metrics.LogMaker: long getCounterBucket()>
<android.window.WindowContainerTransaction$Change: boolean getFocusable()>
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowPending()>
<android.view.View$6: java.lang.Float get(android.view.View)>
<com.android.internal.app.IVoiceInteractor$Stub: com.android.internal.app.IVoiceInteractor asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<android.graphics.RenderNode: float getAlpha()>
<android.media.MediaDescription: java.lang.CharSequence getDescription()>
<android.location.ILocationManager$Stub$Proxy: boolean isExtraLocationControllerPackageEnabled()>
<com.android.internal.telephony.ITelephony$Default: boolean iccCloseLogicalChannelBySlot(int,int)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>
<android.text.style.LineHeightSpan$Standard: int getSpanTypeIdInternal()>
<android.hardware.camera2.params.OutputConfiguration: int getMaxSharedSurfaceCount()>
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()>
<android.telecom.TelecomAnalytics$SessionTiming: int describeContents()>
<android.os.health.HealthStats: int getMeasurementsKeyAt(int)>
<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()>
<android.app.admin.SystemUpdatePolicy$ValidationFailedException: int describeContents()>
<android.view.contentcapture.IContentCaptureDirectManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.SpannableStringInternal: int hashCode()>
<android.filterfw.core.GLFrame: int getTextureId()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailablePhysicalCameraRequestKeys()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getSimCallManager(int)>
<android.telephony.CellSignalStrengthNr$1: android.telephony.CellSignalStrengthNr createFromParcel(android.os.Parcel)>
<android.hardware.location.NanoAppMessage: int getMessageType()>
<android.text.DynamicLayout: int getTopPadding()>
<android.content.pm.IPackageManager$Stub$Proxy: android.os.Bundle getSuspendedPackageAppExtras(java.lang.String,int)>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera$Parameters access$1100(android.hardware.camera2.legacy.RequestThreadManager)>
<android.app.Notification$WearableExtender: int getContentIconGravity()>
<com.android.internal.telephony.ITelephony$Default: int setImsProvisioningInt(int,int,int)>
<android.view.ViewRootImpl: android.view.InsetsController getInsetsController()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getRxTimeCounter()>
<android.content.pm.LauncherApps: int getShortcutIconResId(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.os.INetworkActivityListener$Stub: java.lang.String getTransactionName(int)>
<android.media.session.MediaSession$Token: int hashCode()>
<android.app.admin.IDevicePolicyManager$Default: android.os.Bundle getUserRestrictions(android.content.ComponentName,boolean)>
<android.content.pm.IPackageInstallerSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Environment: java.io.File getDataPreloadsMediaDirectory()>
<android.widget.AdapterView: long getItemIdAtPosition(int)>
<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForLegacyStreamType(int)>
<android.hardware.camera2.CameraManager$CameraManagerGlobal$1: int compare(java.lang.Object,java.lang.Object)>
<android.media.IRemoteVolumeController$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.projection.IMediaProjectionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<android.telephony.PreciseCallState: int hashCode()>
<android.os.BatteryProperty: long getLong()>
<android.media.MediaRoute2Info: int describeContents()>
<android.view.RemoteAnimationAdapter: int describeContents()>
<android.util.SizeF: int hashCode()>
<android.net.NetworkPolicy: int describeContents()>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>
<android.app.role.IRoleManager$Stub: java.lang.String getTransactionName(int)>
<android.os.StrictMode$AndroidBlockGuardPolicy: int getPolicyMask()>
<android.media.AudioRecord: int read(short[],int,int,int)>
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsCompanionServiceRegisterer()>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>
<android.content.RestrictionEntry: int getIntValue()>
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>
<android.drm.DrmUtils: byte[] readBytes(java.lang.String)>
<android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int cancelConfirmationPrompt(android.os.IBinder)>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.widget.TextView: int getAutoLinkMask()>
<android.view.textclassifier.SystemTextClassifier: int getMaxGenerateLinksTextLength()>
<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: int hashCode()>
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>
<android.content.pm.ShortcutInfo: java.lang.String getPackage()>
<android.view.animation.Animation: int getRepeatMode()>
<android.os.IUserManager$Stub$Proxy: int getUserRestrictionSource(java.lang.String,int)>
<com.android.internal.net.VpnInfo: int describeContents()>
<android.os.Environment: java.io.File getDataSystemDeDirectory()>
<android.hardware.radio.Announcement: int describeContents()>
<android.hardware.location.ContextHubInfo: int getId()>
<android.os.ParcelFileDescriptor: long getStatSize()>
<android.os.storage.IStorageShutdownObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SubscriptionPlan: long access$402(android.telephony.SubscriptionPlan,long)>
<android.telephony.CellIdentityCdma: int getLongitude()>
<android.graphics.drawable.Icon: android.net.Uri getUri()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$100(android.hardware.camera2.legacy.LegacyFocusStateMapper)>
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor getControlFd(long)>
<android.widget.ScrollView: int getMaxScrollAmount()>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailablePreviewZoomCropRectangles(android.hardware.Camera$Parameters,android.graphics.Rect,android.util.Size)>
<android.media.MediaRoute2Info: java.lang.String getOriginalId()>
<android.graphics.Point: int describeContents()>
<android.os.SharedMemory: int getSize()>
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getLabel()>
<android.os.BaseBundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<android.content.ContentResolver: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)>
<android.app.PendingIntent: boolean isActivity()>
<android.telephony.CbGeoUtils$Circle: android.telephony.CbGeoUtils$LatLng getCenter()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int createLinkedStorage(java.lang.String,int,int)>
<android.app.usage.UsageEvents$Event: android.content.res.Configuration getConfiguration()>
<android.hardware.ISensorPrivacyListener$Stub: java.lang.String getTransactionName(int)>
<android.app.IUriGrantsManager$Stub$Proxy: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>
<android.media.VolumeShaper$State: int hashCode()>
<com.android.internal.view.IInputMethodManager$Stub: java.lang.String getTransactionName(int)>
<android.app.blob.IBlobStoreSession$Default: long getSize()>
<android.widget.RemoteViewsListAdapter: long getItemId(int)>
<android.media.tv.ITvInputHardwareCallback$Stub: android.os.IBinder asBinder()>
<android.media.tv.ITvInputManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.util.MemInfoReader: long[] getRawInfo()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,java.lang.String,int)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<android.view.TextureLayer: long getDeferredLayerUpdater()>
<android.app.backup.IBackupManagerMonitor$Stub: android.app.backup.IBackupManagerMonitor asInterface(android.os.IBinder)>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)>
<android.media.IAudioService$Default: int getCurrentAudioFocus()>
<android.view.View: int computeVerticalScrollRange()>
<com.android.internal.telephony.ISub$Default: boolean isActiveSubId(int,java.lang.String,java.lang.String)>
<android.view.View: int getId()>
<android.hardware.location.NanoAppBinary: int getNanoAppVersion()>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest)>
<android.net.IConnectivityManager$Default: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)>
<android.os.IServiceManager$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: java.lang.String getAppPredictionServicePackageName()>
<android.view.IWindow$Default: android.os.IBinder asBinder()>
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read(byte[])>
<android.app.DisabledWallpaperManager: int getWallpaperId(int)>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>
<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor getExecutor()>
<android.graphics.ColorSpace$Xyz: float getMinValue(int)>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getLauncherActivities(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSession getSession(android.app.PendingIntent)>
<android.media.session.IOnMediaKeyListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>
<android.app.contentsuggestions.IClassificationsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read()>
<com.android.internal.os.ZygoteConnection: boolean isPreloadComplete()>
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.IVoiceInteractorCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.backup.IRestoreObserver$Stub: android.os.IBinder asBinder()>
<android.telephony.SmsMessage: boolean isMwiDontStore()>
<android.telephony.SubscriptionPlan: long getDataLimitBytes()>
<android.app.IUidObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: int getNetworkType(int)>
<com.android.internal.view.InputConnectionWrapper: android.os.Handler getHandler()>
<android.security.keystore.recovery.WrappedApplicationKey: byte[] getMetadata()>
<android.telephony.SubscriptionInfo: int getIconTint()>
<android.service.notification.ZenPolicy: int getVisualEffectLights()>
<android.content.pm.IPackageManager$Default: android.content.pm.dex.IArtManager getArtManager()>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownItemCount()>
<android.app.IUiModeManager$Stub: android.os.IBinder asBinder()>
<android.net.NetworkRequest: android.net.NetworkSpecifier getNetworkSpecifier()>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwnerAsUser(int)>
<android.app.IAlarmListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.WindowInsetsAnimation$Callback: int getDispatchMode()>
<android.hardware.usb.IUsbSerialReader$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.IntArray: int get(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: int access$500(android.hardware.camera2.impl.CameraDeviceImpl)>
<android.view.IWindowSessionCallback$Stub: android.view.IWindowSessionCallback getDefaultImpl()>
<android.media.MediaFormat$UnprefixedKeySet: java.lang.String mapKeyToItem(java.lang.String)>
<android.media.AudioDeviceInfo: int[] getChannelCounts()>
<android.os.UserManager$EnforcingUser: int getUserRestrictionSource()>
<android.print.PrintAttributes: int describeContents()>
<android.os.IUserManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.res.AssetManager: int[] getStyleAttributes(int)>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>
<android.os.IVold$Stub$Proxy: java.lang.String createObb(java.lang.String,java.lang.String,int)>
<android.security.IKeyChainService$Default: byte[] getCaCertificates(java.lang.String)>
<android.accessibilityservice.IAccessibilityServiceClient$Default: android.os.IBinder asBinder()>
<android.app.FragmentManagerNonConfig: java.util.List getFragments()>
<android.view.ViewConfiguration: int getHoverTapSlop()>
<android.view.View: int getPaddingLeft()>
<android.net.IpSecAlgorithm: java.lang.String getName()>
<android.hardware.radio.RadioMetadata: int putClockFromNative(int,long,int)>
<com.android.internal.app.IAppOpsCallback$Default: android.os.IBinder asBinder()>
<android.app.IUiModeManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector getSelector()>
<android.app.servertransaction.ActivityRelaunchItem: int hashCode()>
<android.app.ContextImpl: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>
<android.view.textclassifier.TextClassification$Request: java.time.ZonedDateTime getReferenceTime()>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>
<android.database.sqlite.SQLiteConnection$OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])>
<android.net.IConnectivityManager$Stub$Proxy: int registerNetworkProvider(android.os.Messenger,java.lang.String)>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<android.app.NotificationChannelGroup: java.lang.CharSequence getName()>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>
<android.view.accessibility.CaptioningManager: float getFontScale()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CallQuality: int getUplinkCallQualityLevel()>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>
<android.telephony.CarrierRestrictionRules: android.telephony.CarrierRestrictionRules$Builder newBuilder()>
<android.media.Utils$1: int compare(java.lang.Object,java.lang.Object)>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera access$1300(android.hardware.camera2.legacy.RequestThreadManager)>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: boolean isStaged()>
<android.view.textclassifier.ConversationActions$Request: int describeContents()>
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getWakeupReasonStats()>
<android.app.LoadedApk: android.app.Application getApplication()>
<android.widget.ListPopupWindow: int getSoftInputMode()>
<android.media.MediaFormat: long getLong(java.lang.String,long)>
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>
<android.hardware.radio.ProgramList$Filter: int hashCode()>
<android.os.BaseBundle: int[] getIntArray(java.lang.String)>
<android.os.health.SystemHealthManager: android.os.health.HealthStats[] takeUidSnapshots(int[])>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: com.android.internal.telephony.euicc.IDisableProfileCallback asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isDeviceProvisioningConfigApplied()>
<android.view.DisplayInfo: int hashCode()>
<android.app.Notification$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>
<android.app.SearchableInfo: int getLabelId()>
<android.telephony.ims.ImsSsInfo: java.lang.String getIcbNum()>
<android.media.AudioGainConfig: int index()>
<android.telephony.euicc.EuiccNotification: int describeContents()>
<android.text.StaticLayout: int getEndHyphenEdit(int)>
<android.text.style.TextAppearanceSpan: java.lang.String getFontFeatureSettings()>
<android.service.persistentdata.IPersistentDataBlockService$Default: int write(byte[])>
<com.android.internal.widget.IRemoteViewsFactory$Default: android.os.IBinder asBinder()>
<android.content.pm.permission.SplitPermissionInfoParcelable: int getTargetSdk()>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerNameAsUser(int)>
<android.telephony.SubscriptionManager: boolean isUsableSubIdValue(int)>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.telephony.CallQuality: int getCodecType()>
<android.content.LoggingContentInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>
<android.view.WindowInsetsAnimation$Bounds: android.graphics.Insets getUpperBound()>
<android.security.IKeyChainService$Stub$Proxy: int attestKey(java.lang.String,byte[],int[],android.security.keymaster.KeymasterCertificateChain)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>
<android.webkit.Plugin: java.lang.String getFileName()>
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>
<android.app.timezone.ICallback$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.SmsMessageBase: boolean isEmail()>
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$ICallback)>
<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManagerImpl()>
<android.app.timezonedetector.ManualTimeZoneSuggestion: int describeContents()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<android.location.GnssMeasurementsEvent: int describeContents()>
<android.app.ActivityManager$TaskSnapshot: long getId()>
<android.app.blob.IBlobStoreSession$Stub$Proxy: long getSize()>
<android.security.keystore.IKeystoreService$Default: int is_hardware_backed(java.lang.String)>
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>
<android.widget.Toolbar: int getContentInsetEndWithActions()>
<android.util.AtomicFile: long getLastModifiedTime()>
<android.telephony.emergency.EmergencyNumber: int compareTo(android.telephony.emergency.EmergencyNumber)>
<android.hardware.radio.V1_4.CellInfo: int hashCode()>
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.backup.IRestoreSession$Default: android.os.IBinder asBinder()>
<android.app.usage.IUsageStatsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.BarringInfo$BarringServiceInfo$1: android.telephony.BarringInfo$BarringServiceInfo createFromParcel(android.os.Parcel)>
<android.media.AudioManager: android.util.ArrayMap access$1300(android.media.AudioManager)>
<android.view.ViewGroup: int getPersistentDrawingCache()>
<android.os.storage.IStorageEventListener$Default: android.os.IBinder asBinder()>
<android.view.KeyEvent: boolean isPrintingKey()>
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
<android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.IntArray: int size()>
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()>
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>
<android.media.projection.IMediaProjectionManager$Stub: java.lang.String getTransactionName(int)>
<android.security.keystore.ICredstoreTokenCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.VectorDrawable$VFullPath$3: java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.content.pm.IPackageManager$Default: int movePackage(java.lang.String,java.lang.String)>
<android.net.StaticIpConfiguration: int describeContents()>
<com.android.internal.widget.VerifyCredentialResponse: int getResponseCode()>
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getSubtitle()>
<android.view.View: int getForegroundGravity()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getSnoozedNotificationsFromListener(android.service.notification.INotificationListener,int)>
<android.media.AudioRecord: int read(byte[],int,int)>
<android.hardware.cas.V1_1.ICasListener$Stub: android.os.IHwBinder asBinder()>
<android.service.autofill.UserData: int getMaxFieldClassificationIdsSize()>
<android.telephony.SubscriptionInfo$1: android.telephony.SubscriptionInfo[] newArray(int)>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<android.telephony.CallQuality: int getNumRtpPacketsNotReceived()>
<android.animation.Keyframe$IntKeyframe: java.lang.Object getValue()>
<android.os.INetworkManagementService$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)>
<android.os.IRecoverySystemProgressListener$Stub: android.os.IBinder asBinder()>
<android.webkit.WebView: int getProgress()>
<android.app.ActivityManager: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String)>
<android.content.pm.dex.IArtManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.face.IFaceService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.PackageInstaller: java.util.List getAllSessions()>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()>
<android.telephony.SmsManager: boolean isImsSmsSupported()>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase(int)>
<android.app.ActivityTransitionCoordinator: long getFadeDuration()>
<android.os.BasicShellCommandHandler: java.io.PrintWriter getOutPrintWriter()>
<android.view.View: int getMeasuredWidth()>
<android.telephony.CellIdentityGsm: int hashCode()>
<android.os.VibrationEffect: android.os.VibrationEffect get(android.net.Uri,android.content.Context)>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<android.content.res.ResourcesImpl: android.content.res.ConfigurationBoundResourceCache getAnimatorCache()>
<android.os.storage.IStorageEventListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.location.IContextHubClientCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.DevicePolicyManager: java.lang.String getAlwaysOnVpnPackage()>
<android.print.IPrintDocumentAdapter$Stub: android.print.IPrintDocumentAdapter getDefaultImpl()>
<android.os.Debug$MemoryInfo: java.util.Map getMemoryStats()>
<android.os.IVold$Stub: java.lang.String getTransactionName(int)>
<android.media.tv.ITvInputClient$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.policy.IShortcutService$Stub: android.os.IBinder asBinder()>
<android.os.IVibratorService$Stub: android.os.IVibratorService asInterface(android.os.IBinder)>
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>
<android.app.IAlarmManager$Stub: java.lang.String getTransactionName(int)>
<android.app.prediction.AppTarget: java.lang.String getClassName()>
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)>
<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.os.IBinder getLeashToken()>
<android.content.pm.ShortcutInfo: android.os.PersistableBundle[] getIntentPersistableExtrases()>
<android.hardware.cas.V1_1.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.text.style.SuggestionSpan: int hashCode()>
<android.content.res.AssetManager: int addAssetPathAsSharedLibrary(java.lang.String)>
<android.permission.IPermissionController$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)>
<android.view.View: int getPaddingStart()>
<com.android.ims.internal.IImsUtListener$Stub: com.android.ims.internal.IImsUtListener asInterface(android.os.IBinder)>
<android.telephony.UiccSlotInfo: java.lang.String getCardId()>
<android.app.assist.AssistStructure$ViewNode: int getTextStyle()>
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.DiskInfo[] getDisks()>
<android.os.storage.StorageManager: android.util.Pair getPrimaryStoragePathAndSize()>
<android.media.session.MediaSession: android.media.session.MediaSession$Token getSessionToken()>
<android.webkit.WebView: java.lang.String getOriginalUrl()>
<android.app.job.IJobScheduler$Stub$Proxy: android.app.job.JobInfo getPendingJob(int)>
<android.telephony.ImsiEncryptionInfo: java.lang.String getMcc()>
<android.service.euicc.EuiccProfileInfo: int describeContents()>
<android.view.inputmethod.CompletionInfo: int getPosition()>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: int hashCode()>
<android.view.IDisplayWindowListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: com.android.internal.view.IInlineSuggestionsResponseCallback getDefaultImpl()>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>
<android.media.session.ISession2TokensListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.RequestHandlerThread access$700(android.hardware.camera2.legacy.RequestThreadManager)>
<com.android.internal.telephony.ITelephony$Default: int getSubscriptionCarrierId(int)>
<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>
<android.view.IDisplayWindowRotationController$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.OperatorInfo: int describeContents()>
<android.animation.StateListAnimator: java.util.ArrayList getTuples()>
<android.location.ILocationManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MicrophoneInfo: float getMaxSpl()>
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback getDefaultImpl()>
<android.app.assist.AssistStructure$WindowNode: int getHeight()>
<android.text.DynamicLayout: int getEllipsisCount(int)>
<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.graphics.Point getStableDisplaySize()>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>
<android.app.WindowConfiguration: int hashCode()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>
<android.content.pm.ApplicationInfo: java.lang.String getBaseResourcePath()>
<android.app.blob.IBlobStoreManager$Default: android.os.IBinder asBinder()>
<com.android.internal.os.IDropBoxManagerService$Stub: java.lang.String getTransactionName(int)>
<android.service.notification.NotificationListenerService$Ranking: java.lang.String getOverrideGroupKey()>
<android.app.AppGlobals: android.permission.IPermissionManager getPermissionManager()>
<android.os.ISystemUpdateManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.NinePatch: int getHeight()>
<android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener getDefaultImpl()>
<android.telephony.ServiceState: int convertBearerBitmaskToNetworkTypeBitmask(int)>
<android.app.admin.IDevicePolicyManager$Default: int getPersonalAppsSuspendedReasons(android.content.ComponentName)>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$AttributedHistoricalOps getAttributedOps(java.lang.String)>
<android.os.storage.VolumeInfo: java.lang.String getBroadcastForState(int)>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>
<android.content.IOnPrimaryClipChangedListener$Stub: android.content.IOnPrimaryClipChangedListener asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)>
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.view.InsetsFlags: int getAppearance(int)>
<android.location.ILocationListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.blob.IBlobStoreManager$Stub$Proxy: long createSession(android.app.blob.BlobHandle,java.lang.String)>
<android.telephony.TelephonyManager: boolean isDataEnabledForApn(int)>
<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>
<android.telephony.SubscriptionPlan: int[] access$802(android.telephony.SubscriptionPlan,int[])>
<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)>
<android.app.slice.Slice: android.app.slice.SliceSpec getSpec()>
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()>
<com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.telephony.SubscriptionManager: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid)>
<android.transition.TransitionSet: int getOrdering()>
<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getProcesses()>
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: int getRequestId()>
<android.app.LoadedApk: java.lang.ClassLoader getSplitClassLoader(java.lang.String)>
<android.view.CutoutSpecification: android.graphics.Rect getLeftBound()>
<android.telephony.TelephonyManager: android.content.ComponentName getAndUpdateDefaultRespondViaMessageApplication()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
<com.android.internal.policy.DecorContext: android.content.AutofillOptions getAutofillOptions()>
<android.os.Handler: java.lang.String getTraceName(android.os.Message)>
<com.android.server.SystemConfig: android.util.ArraySet getDisabledUntilUsedPreinstalledCarrierApps()>
<com.android.internal.widget.LockPatternUtils$1: java.lang.Void doInBackground(java.lang.Void[])>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<android.app.usage.UsageEvents$Event: java.lang.String getClassName()>
<android.permission.IOnPermissionsChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.ICrossProfileApps$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>
<android.view.KeyCharacterMap: int getModifierBehavior()>
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int)>
<android.content.ContentProvider$Transport: android.net.Uri uncanonicalize(java.lang.String,java.lang.String,android.net.Uri)>
<com.android.internal.graphics.palette.Palette: int getDarkMutedColor(int)>
<android.app.IActivityTaskManager$Default: int getPackageScreenCompatMode(java.lang.String)>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
<android.content.ContentProviderOperation: int describeContents()>
<android.transition.Transition: android.transition.PathMotion getPathMotion()>
<android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)>
<android.app.Dialog: android.app.Activity getOwnerActivity()>
<android.location.GnssAntennaInfo$SphericalCorrections: int describeContents()>
<android.telephony.ClientRequestStats$1: android.telephony.ClientRequestStats[] newArray(int)>
<android.os.ShellCommand: android.os.ShellCallback getShellCallback()>
<android.view.Display: android.view.DisplayCutout getCutout()>
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String,java.lang.String)>
<android.widget.TextView: android.text.method.WordIterator getWordIterator()>
<android.os.UserHandle: int hashCode()>
<android.content.pm.SharedLibraryInfo: android.content.pm.VersionedPackage getDeclaringPackage()>
<android.app.ITransientNotificationCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>
<android.view.View: float getRotationY()>
<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()>
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable2gChannels()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getAffiliationIds(android.content.ComponentName)>
<android.telephony.SubscriptionPlan: long access$602(android.telephony.SubscriptionPlan,long)>
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)>
<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getLightVibrantSwatch()>
<android.content.pm.PackageInstaller$SessionInfo: long getUpdatedMillis()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,java.lang.String,int)>
<android.media.IRingtonePlayer$Stub: java.lang.String getTransactionName(int)>
<android.view.IWindowManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$202(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>
<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)>
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()>
<android.hardware.camera2.params.BlackLevelPattern: int hashCode()>
<android.text.PrecomputedText: int checkResultUsable(int,int,android.text.TextDirectionHeuristic,android.text.TextPaint,int,int)>
<android.telephony.TelephonyManager: java.util.List getClientRequestStats(int)>
<android.text.style.TtsSpan: int getSpanTypeId()>
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeMyUidSnapshot()>
<android.net.wifi.nl80211.IWificond$Default: java.util.List GetApInterfaces()>
<android.telephony.UssdResponse: int describeContents()>
<android.accessibilityservice.AccessibilityShortcutInfo: android.content.ComponentName getComponentName()>
<android.renderscript.RenderScript: long nFontCreateFromFile(java.lang.String,float,int)>
<android.media.AudioRecord: int getAudioSessionId()>
<android.content.pm.SharedLibraryInfo: java.lang.String getPackageName()>
<android.net.IEthernetManager$Stub: android.net.IEthernetManager asInterface(android.os.IBinder)>
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int describeContents()>
<android.view.textclassifier.TextLanguage: float getConfidenceScore(android.icu.util.ULocale)>
<android.hardware.location.NanoAppState: long getNanoAppVersion()>
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()>
<android.content.IntentFilter: java.lang.String[] getHosts()>
<com.android.internal.widget.ILockSettings$Default: byte[] getHashFactor(com.android.internal.widget.LockscreenCredential,int)>
<android.content.pm.IShortcutService$Stub$Proxy: int getRemainingCallCount(java.lang.String,int)>
<android.content.pm.parsing.component.ParsedPermission: int calculateFootprint()>
<android.content.pm.parsing.ParsingPackageImpl: int getGwpAsanMode()>
<android.filterfw.core.FilterGraph: java.util.Set getFilters()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>
<android.view.KeyboardShortcutInfo: int getModifiers()>
<android.location.GpsSatellite: int getPrn()>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.media.session.MediaSessionManager: java.lang.Object access$1100(android.media.session.MediaSessionManager)>
<com.google.android.mms.pdu.SendReq: long getMessageSize()>
<android.hardware.ICameraClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Stub$Proxy: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getDeviceOwnerComponent(boolean)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensityNoBackground(android.os.UserHandle,int)>
<android.app.AlertDialog$Builder: android.content.Context getContext()>
<android.text.style.LocaleSpan: int getSpanTypeIdInternal()>
<android.filterfw.core.FrameFormat: int getDimensionCount()>
<com.android.internal.telephony.ITelephony$Default: boolean enableDataConnectivity()>
<android.telephony.CellSignalStrength: int getAsuFromRscpDbm(int)>
<android.hardware.cas.V1_2.ICasListener$Proxy: int hashCode()>
<android.app.Notification$Action: android.app.RemoteInput[] getDataOnlyRemoteInputs()>
<android.os.IServiceManager$Stub: android.os.IServiceManager asInterface(android.os.IBinder)>
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeysNeedingPermission()>
<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()>
<android.app.assist.AssistStructure$ViewNodeBuilder: java.lang.CharSequence getText()>
<android.content.Context: java.lang.CharSequence getText(int)>
<android.os.storage.VolumeInfo: android.os.storage.StorageVolume buildStorageVolume(android.content.Context,int,boolean)>
<android.telecom.TelecomAnalytics: int describeContents()>
<android.os.IThermalService$Stub$Proxy: android.os.Temperature[] getCurrentTemperaturesWithType(int)>
<android.content.pm.PackageParser$Provider: int describeContents()>
<android.view.contentcapture.DataShareRequest: android.content.LocusId getLocusId()>
<android.net.lowpan.ILowpanManagerListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ScrollCaptureTarget: int getHint()>
<android.window.IWindowOrganizerController$Stub$Proxy: android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController()>
<android.view.inputmethod.InputMethodManager: android.view.ImeInsetsSourceConsumer access$900(android.view.inputmethod.InputMethodManager)>
<android.content.pm.PackageManager: int getUserId()>
<android.media.AudioTrack: int access$502(android.media.AudioTrack,int)>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isSmsSimPickActivityNeeded(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>
<android.app.admin.DevicePolicyManager: java.util.List getUserControlDisabledPackages(android.content.ComponentName)>
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanManager getManager()>
<android.database.AbstractCursor: java.util.List getNotificationUris()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$QueueRequest clear()>
<android.hardware.display.BrightnessConfiguration: float getShortTermModelLowerLuxMultiplier()>
<android.app.Notification$MessagingStyle$Message: java.lang.CharSequence getText()>
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<android.util.jar.StrictJarVerifier: java.security.cert.Certificate[][] getCertificateChains(java.lang.String)>
<com.android.internal.telephony.IMms$Default: android.os.IBinder asBinder()>
<com.android.internal.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()>
<android.media.AudioManager: int registerAudioPolicyStatic(android.media.audiopolicy.AudioPolicy)>
<android.app.Notification$BigPictureStyle: android.widget.RemoteViews makeBigContentView()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<android.app.Fragment: android.app.Fragment findFragmentByWho(java.lang.String)>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState: float getAlpha()>
<android.location.ILocationManager$Default: java.lang.String getExtraLocationControllerPackage()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isWorldPhone(int,java.lang.String,java.lang.String)>
<com.android.ims.internal.IImsExternalCallStateListener$Stub: java.lang.String getTransactionName(int)>
<android.app.IActivityManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: int getVibrateSetting(int)>
<android.view.autofill.IAutoFillManager$Stub: android.view.autofill.IAutoFillManager getDefaultImpl()>
<android.security.keystore.ParcelableKeyGenParameterSpec: android.security.keystore.KeyGenParameterSpec getSpec()>
<com.android.internal.app.IBatteryStats$Default: long getAwakeTimeBattery()>
<android.view.View: float getPivotY()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationCallback getDefaultImpl()>
<android.os.BinderProxy: long access$600()>
<android.hardware.radio.TunerAdapter: boolean isAntennaConnected()>
<android.media.session.ISessionManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getResizingBackgroundDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,boolean)>
<android.service.euicc.EuiccProfileInfo: java.lang.String getServiceProviderName()>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>
<android.content.res.FontResourcesParser$FontFileResourceEntry: java.lang.String getVariationSettings()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)>
<android.service.notification.StatusBarNotification: com.android.internal.logging.InstanceId getInstanceId()>
<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()>
<android.renderscript.Short3: short length()>
<android.telephony.CellSignalStrengthTdscdma: int hashCode()>
<android.app.job.IJobCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getPackagesWithCarrierPrivileges(int)>
<android.text.style.EasyEditSpan: int getSpanTypeId()>
<android.util.Property: java.lang.String getName()>
<android.graphics.Typeface: int hashCode()>
<android.view.accessibility.IWindowMagnificationConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.job.JobInfo$TriggerContentUri: android.net.Uri getUri()>
<android.graphics.drawable.ColorStateListDrawable$ColorStateListDrawableState: int getChangingConfigurations()>
<android.telephony.emergency.EmergencyNumber: int getEmergencyNumberSourceBitmask()>
<android.hardware.usb.UsbDevice: java.lang.String getSerialNumber()>
<android.content.UndoOperation: android.content.UndoOwner getOwner()>
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo: byte getDiscriminator()>
<android.hardware.Camera$Parameters: java.lang.String getFlashMode()>
<android.hardware.camera2.impl.CameraMetadataNative$Key: int hashCode()>
<android.app.IActivityManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.ActivityOptions: android.content.Intent getResultData()>
<android.app.Notification$MessagingStyle$Message: java.util.List getMessagesFromBundleArray(android.os.Parcelable[])>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: int access$000(java.lang.Enum)>
<android.app.DisabledWallpaperManager: android.app.DisabledWallpaperManager getInstance()>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>
<android.os.UserManager: android.content.pm.UserInfo createGuest(android.content.Context,java.lang.String)>
<android.view.textclassifier.ConversationActions: int describeContents()>
<android.net.CaptivePortalData: int describeContents()>
<android.app.ITransientNotification$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessBackgroundTime(int)>
<com.android.ims.internal.IImsUtListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioManager: boolean isHdmiSystemAudioSupported()>
<android.content.pm.IPackageManager$Default: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)>
<com.android.internal.graphics.palette.ColorCutQuantizer$1: int compare(java.lang.Object,java.lang.Object)>
<android.net.TrafficStats: long getTotalTxPackets()>
<com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: java.lang.String getInterfaceName()>
<android.hardware.cas.V1_0.ICasListener$Stub: java.lang.String interfaceDescriptor()>
<android.hardware.camera2.ICameraDeviceUser$Default: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.text.Layout: android.text.TextPaint getPaint()>
<android.app.DownloadManager: int remove(long[])>
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdTempWhitelist()>
<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder startOrGetTestNetworkService()>
<android.app.ApplicationPackageManager: boolean isPackageStateProtected(java.lang.String,int)>
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>
<android.os.IHardwarePropertiesManager$Stub: android.os.IBinder asBinder()>
<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: int extraParamToByteArray(byte[],int)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.filterfw.core.Frame: int incRefCount()>
<android.telephony.PhoneNumberUtils: android.net.Uri convertSipUriToTelUri(android.net.Uri)>
<android.telephony.SmsCbLocation: boolean isInLocationArea(java.lang.String,int,int)>
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlgorithm()>
<android.app.IActivityController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IUserSwitchObserver$Stub: android.os.IBinder asBinder()>
<android.telephony.RadioAccessFamily: int compare(long,long)>
<android.database.MatrixCursor: byte[] getBlob(int)>
<android.app.NotificationChannel: int getOriginalImportance()>
<android.media.IMediaRouterClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellInfoGsm$1: void <init>()>
<android.content.IntentFilter: int countDataPaths()>
<android.hardware.radio.ICloseHandle$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyHistogram: int[] getBucketEndPoints()>
<android.view.DisplayCutout: int getSafeInsetTop()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IVibratorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.IConnectivityManager$Default: android.net.ProxyInfo getGlobalProxy()>
<android.content.pm.IPackageManager$Default: java.lang.String getDefaultTextClassifierPackageName()>
<android.hardware.radio.V1_0.CellIdentity: int hashCode()>
<android.content.pm.dex.IArtManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.backup.BackupDataInput: int getDataSize()>
<android.location.GpsMeasurement: int describeContents()>
<android.content.ContentResolver: java.lang.String getAttributionTag()>
<android.net.lowpan.LowpanInterface: boolean isCommissioned()>
<android.content.res.AssetManager: boolean getThemeValue(long,int,android.util.TypedValue,boolean)>
<android.view.View: java.lang.CharSequence getTooltip()>
<com.android.internal.compat.CompatibilityChangeConfig: int describeContents()>
<android.telecom.PhoneAccount: java.lang.CharSequence getLabel()>
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.app.LoadedApk: android.content.res.AssetManager getAssets()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int isMultiSimSupported(java.lang.String,java.lang.String)>
<android.view.InsetsController: android.view.InsetsState getState()>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getAvailableExtraData()>
<android.security.keystore.IKeystoreService$Default: int onKeyguardVisibilityChanged(boolean,int)>
<android.util.MapCollections$MapIterator: java.lang.Object getKey()>
<android.app.IActivityTaskManager$Stub$Proxy: int getLaunchedFromUid(android.os.IBinder)>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ActivityOptions: int getLaunchWindowingMode()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.media.AudioManager: int getRingerMode()>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getProgrammedInfo()>
<android.view.IGraphicsStats$Default: android.os.IBinder asBinder()>
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1300()>
<android.media.MediaDescrambler: android.os.IHwBinder getBinder()>
<android.widget.ArrayAdapter: java.lang.CharSequence[] getAutofillOptions()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailable2gChannels()>
<android.content.RestrictionEntry: java.lang.String[] getChoiceValues()>
<android.graphics.fonts.FontVariationAxis: java.lang.String getTag()>
<android.media.IPlayer$Stub: android.media.IPlayer asInterface(android.os.IBinder)>
<android.security.IKeyChainService$Default: android.content.pm.StringParceledListSlice getUserCaAliases()>
<com.android.internal.os.BatteryStatsImpl: int access$008(com.android.internal.os.BatteryStatsImpl)>
<android.widget.Editor: android.widget.TextView getTextView()>
<android.permission.IPermissionController$Default: android.os.IBinder asBinder()>
<android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>
<android.security.KeyStore: long getmtime(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: boolean isMeteredDataDisabledPackageForUser(android.content.ComponentName,java.lang.String,int)>
<android.content.pm.IPackageDeleteObserver2$Stub: java.lang.String getTransactionName(int)>
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.service.notification.ZenPolicy: int getPriorityCategoryCalls()>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
<android.hardware.face.IFaceServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.Toolbar: int getTitleMarginStart()>
<android.content.pm.IPackageManager$Default: int getInstallReason(java.lang.String,int)>
<android.drm.DrmManagerClient: int access$200(android.drm.DrmManagerClient,int)>
<android.hardware.camera2.params.SessionConfiguration: int describeContents()>
<android.app.IActivityManager$Default: int getUidForIntentSender(android.content.IIntentSender)>
<android.os.UserManager: boolean isSameProfileGroup(android.os.UserHandle,android.os.UserHandle)>
<android.location.ICountryListener$Stub: android.os.IBinder asBinder()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)>
<android.app.Fragment: android.transition.Transition getExitTransition()>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()>
<android.media.IMediaHTTPService$Stub: android.os.IBinder asBinder()>
<android.view.Display: android.view.Display$HdrCapabilities getHdrCapabilities()>
<com.android.internal.compat.IPlatformCompat$Stub: android.os.IBinder asBinder()>
<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean isHigherPriority(android.media.tv.tunerresourcemanager.ResourceClientProfile,android.media.tv.tunerresourcemanager.ResourceClientProfile)>
<android.telephony.ims.ImsSsData: int describeContents()>
<android.view.textclassifier.ConversationActions$Message: int describeContents()>
<android.app.ApplicationPackageManager: int getInstallReason(java.lang.String,android.os.UserHandle)>
<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>
<android.widget.AbsListView: int getBottomEdgeEffectColor()>
<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)>
<android.net.Credentials: int getGid()>
<android.widget.FastScroller$6: java.lang.Integer get(android.view.View)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getRemoteCallProfile()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.security.IFileIntegrityService$Stub$Proxy: boolean isApkVeritySupported()>
<android.os.IIncidentReportStatusListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)>
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>
<android.media.tv.ITvInputClient$Stub: android.media.tv.ITvInputClient asInterface(android.os.IBinder)>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.telephony.CellConfigLte: boolean isEndcAvailable()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getDefaultDialerPackageForUser(int)>
<android.net.wifi.nl80211.IClientInterface$Default: byte[] getMacAddress()>
<android.os.IDeviceIdentifiersPolicyService$Default: java.lang.String getSerial()>
<android.os.StrictMode$AndroidBlockGuardPolicy: int getThreadPolicyMask()>
<android.view.View: int getNextFocusLeftId()>
<android.content.pm.parsing.component.ParsedService: java.lang.String getPermission()>
<android.os.UserManager$EnforcingUser: int describeContents()>
<android.app.Notification$InboxStyle: android.widget.RemoteViews makeBigContentView()>
<android.telephony.TelephonyRegistryManager: void notifyCallStateChangedForAllSubscriptions(int,java.lang.String)>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getRole()>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
<android.provider.FontsContract: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.provider.FontRequest)>
<com.android.internal.widget.IRemoteViewsFactory$Stub: java.lang.String getTransactionName(int)>
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()>
<android.content.res.Configuration: int getLayoutDirection()>
<android.location.GpsClock: byte getType()>
<com.android.internal.net.INetworkWatchlistManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.trust.IStrongAuthTracker$Stub: android.app.trust.IStrongAuthTracker getDefaultImpl()>
<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>
<android.media.session.ISession$Default: android.os.IBinder asBinder()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.hardware.display.Time getNightDisplayCustomStartTime()>
<android.view.DisplayInfo: int findDefaultModeByRefreshRate(float)>
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>
<android.os.Parcel: long getBlobAshmemSize()>
<com.android.internal.content.om.OverlayConfig: int lambda$static$0(com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration,com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration)>
<android.util.EventLog$Event: int getTag()>
<android.os.IDeviceIdentifiersPolicyService$Default: java.lang.String getSerialForPackage(java.lang.String,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: java.util.List getAudioVolumeGroups()>
<android.hardware.camera2.impl.CameraDeviceImpl: int getCameraAudioRestriction()>
<android.view.ScrollCaptureSession: android.graphics.Rect getScrollBounds()>
<android.widget.RemoteViews$BitmapCache: android.graphics.Bitmap getBitmapForId(int)>
<android.os.UserHandle: int getAppId(int)>
<android.media.MediaRecorder: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()>
<android.view.textclassifier.SelectionEvent: int getEventType()>
<android.view.MotionEvent: int getDeviceId()>
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo,android.os.storage.StorageManager)>
<android.content.pm.IPackageManager$Default: java.lang.String getSystemTextClassifierPackageName()>
<android.telephony.SubscriptionPlan$1: void <init>()>
<com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionAsUser(android.content.Context,int)>
<android.view.accessibility.AccessibilityEvent: int getWindowChanges()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getVibrantSwatch()>
<android.content.ContentProviderOperation$BackReference: int describeContents()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.PnoSettings: int hashCode()>
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig getZygoteInstance()>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>
<android.net.NetworkCapabilities: int[] getTransportTypes()>
<com.android.internal.telephony.ITelephony$Default: boolean isDataEnabledForApn(int,int,java.lang.String)>
<com.android.internal.telephony.ISms$Default: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>
<android.media.AudioRecord: int getPositionNotificationPeriod()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>
<android.telephony.TelephonyManager: void <clinit>()>
<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>
<android.os.Parcel: int dataCapacity()>
<android.content.ContentResolver: java.lang.String getPackageName()>
<android.media.IRecordingConfigDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.window.IDisplayAreaOrganizerController$Default: android.os.IBinder asBinder()>
<android.graphics.RectF: int describeContents()>
<android.graphics.drawable.LayerDrawable: int getOpacity()>
<com.android.internal.widget.VerifyCredentialResponse: byte[] getPayload()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
<android.graphics.drawable.VectorDrawable$VGroup$2: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.telephony.UiccAccessRule: java.util.List getSignatures(android.content.pm.PackageInfo)>
<android.app.slice.SliceItem: long getLong()>
<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()>
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.content.UndoOperation: java.lang.Object getOwnerData()>
<android.app.timedetector.ITimeDetectorService$Stub: android.app.timedetector.ITimeDetectorService asInterface(android.os.IBinder)>
<android.os.health.HealthKeys$Constants: int getSize(int)>
<com.android.internal.util.SizedInputStream: int read()>
<android.view.autofill.AutofillValue: java.lang.CharSequence getTextValue()>
<android.util.apk.WrappedX509Certificate: java.util.Set getNonCriticalExtensionOIDs()>
<android.text.style.BulletSpan: int getSpanTypeIdInternal()>
<android.widget.Toolbar: android.view.View getNavigationView()>
<android.app.AlarmManager: long getNextWakeFromIdleTime()>
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconMode(java.lang.String,java.lang.String)>
<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getOetf()>
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgName()>
<android.database.CursorWrapper: int getCount()>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Default: android.os.IBinder asBinder()>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>
<android.content.IContentService$Stub$Proxy: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)>
<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.hdmi.HdmiSwitchClient: java.util.List getDeviceList()>
<android.media.MicrophoneInfo: int getLocation()>
<android.app.admin.DevicePolicyManager: boolean isUniqueDeviceAttestationSupported()>
<com.google.android.mms.pdu.MultimediaMessagePdu: long getDate()>
<android.view.IWindowManager$Default: int getDefaultDisplayRotation()>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.os.IBinder asBinder()>
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>
<android.app.Notification$WearableExtender: java.lang.String getBridgeTag()>
<android.graphics.RenderNode: float getRotationX()>
<android.app.Notification$WearableExtender: android.graphics.Bitmap getBackground()>
<android.database.MatrixCursor: int access$000(android.database.MatrixCursor)>
<android.view.IWindowSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int queryCapabilityStatus()>
<android.app.IActivityManager$Stub$Proxy: android.content.pm.UserInfo getCurrentUser()>
<android.media.midi.IMidiManager$Default: android.os.IBinder asBinder()>
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: byte[] getTriggerAudio()>
<android.app.INotificationManager$Default: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeZoneEnabled(android.content.ComponentName)>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>
<android.view.accessibility.IAccessibilityManager$Default: int getAccessibilityWindowId(android.os.IBinder)>
<com.android.internal.app.IAppOpsStartedCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaDrm: byte[] access$500(android.media.MediaDrm,byte[],byte[],byte[])>
<android.telephony.RadioAccessFamily: int rafTypeFromString(java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)>
<android.filterfw.core.Filter: boolean canProcess()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>
<android.os.BatteryStats: java.lang.String formatBytesLocked(long)>
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<android.widget.RemoteViewsListAdapter: int getItemViewType(int)>
<android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>
<android.net.Uri$Part: boolean isEmpty()>
<android.widget.Magnifier: int getDefaultVerticalSourceToMagnifierOffset()>
<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()>
<android.content.pm.PackageParser$Permission: int describeContents()>
<android.view.inputmethod.InputMethodManager: java.lang.Object lambda$createStubInstance$0(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
<android.graphics.drawable.VectorDrawable$VFullPath$2: java.lang.Object get(java.lang.Object)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)>
<android.telephony.LteVopsSupportInfo$1: void <init>()>
<android.view.IPinnedStackListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList copyMappedViews()>
<android.content.pm.PackageInstaller$SessionParams: int describeContents()>
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()>
<android.content.pm.IDataLoader$Stub: java.lang.String getTransactionName(int)>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.View: int getLabelFor()>
<com.android.internal.widget.LockPatternUtils$RequestThrottledException: int getTimeoutMs()>
<android.os.Bundle: char getChar(java.lang.String,char)>
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()>
<android.app.assist.AssistStructure$ViewNode: int getMinTextEms()>
<android.os.BatterySaverPolicyConfig: boolean getEnableFirewall()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.hardware.cas.V1_1.ICasListener$Proxy: int hashCode()>
<android.net.INetworkStatsSession$Default: android.os.IBinder asBinder()>
<android.os.IHardwarePropertiesManager$Stub$Proxy: float[] getDeviceTemperatures(java.lang.String,int,int)>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
<android.view.InsetsSourceControl: android.view.SurfaceControl getLeash()>
<com.android.internal.app.IBatteryStats$Default: android.os.ParcelFileDescriptor getStatisticsStream()>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)>
<android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>
<android.app.assist.AssistStructure$WindowNode: int getDisplayId()>
<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>
<android.media.session.ISessionController$Stub$Proxy: android.media.session.PlaybackState getPlaybackState()>
<android.net.LinkProperties: java.util.List getAllLinkAddresses()>
<android.net.Proxy: java.lang.String getDefaultHost()>
<android.location.Location: float getBearingAccuracyDegrees()>
<android.hardware.cas.V1_2.ICas$Stub: java.util.ArrayList interfaceChain()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getDrawable()>
<android.os.IIncidentDumpCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.Layout: int getStartHyphenEdit(int)>
<android.media.MediaCodec$MediaImage: int getTransform()>
<android.hardware.camera2.ICameraDeviceUser$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.DisplayAddress$Network: int hashCode()>
<android.app.Vr2dDisplayProperties: int getDpi()>
<android.media.Metadata: int lastSytemId()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getKeySetMapping()>
<android.media.MediaCodec$OutputFrame: long getPresentationTimeUs()>
<android.service.notification.StatusBarNotification: android.content.Context getPackageContext(android.content.Context)>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getText()>
<android.hardware.location.ContextHubManager: int unregisterCallback(android.hardware.location.ContextHubManager$ICallback)>
<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>
<com.google.android.mms.pdu.RetrieveConf: int getRetrieveStatus()>
<android.telephony.SignalStrength: int getWcdmaLevel()>
<android.hardware.face.IFaceService$Stub: android.os.IBinder asBinder()>
<android.view.IWindow$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: boolean canChangeDtmfToneLength()>
<android.net.RouteInfo: android.net.IpPrefix getDestination()>
<android.net.IConnectivityManager$Default: int registerNetworkProvider(android.os.Messenger,java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getAttentionServicePackageName()>
<android.app.INotificationManager$Default: android.content.ComponentName getAllowedNotificationAssistantForUser(int)>
<android.content.IntentFilter$AuthorityEntry: int getPort()>
<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>
<android.print.PrintDocumentInfo: java.lang.String getName()>
<android.location.LocationManager$GnssNavigationMessageListenerManager: boolean registerService(java.lang.Void)>
<android.app.ActivityOptions: boolean getLaunchTaskBehind()>
<android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController asInterface(android.os.IBinder)>
<android.app.SearchableInfo: int getInputType()>
<android.net.TrafficStats: long getLoopbackTxBytes()>
<android.view.MagnificationSpec: int hashCode()>
<android.app.ContextImpl: java.lang.String getSystemServiceName(java.lang.Class)>
<android.app.prediction.AppTargetEvent: int describeContents()>
<android.hardware.camera2.CameraCharacteristics: java.util.Set getPhysicalCameraIds()>
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair jpegProduced()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionState()>
<android.view.InputDevice$MotionRange: float getFlat()>
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: int getSize()>
<android.telephony.UssdResponse$1: android.telephony.UssdResponse[] newArray(int)>
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()>
<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int)>
<android.app.prediction.AppPredictionSessionId: int describeContents()>
<android.app.IActivityManager$Default: int getPackageProcessState(java.lang.String,java.lang.String)>
<android.hardware.display.ColorDisplayManager: boolean isNightDisplayActivated()>
<android.telephony.euicc.EuiccManager: android.telephony.euicc.EuiccManager createForCardId(int)>
<android.hardware.camera2.params.LensShadingMap: int getRowCount()>
<android.graphics.drawable.RippleDrawable: int getOpacity()>
<android.content.pm.IPackageManager$Default: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppPermissions(java.lang.String)>
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)>
<android.print.IPrintManager$Stub: java.lang.String getTransactionName(int)>
<android.graphics.NinePatch: int getDensity()>
<android.app.slice.ISliceManager$Default: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)>
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.app.contentsuggestions.ContentClassification: java.lang.String getId()>
<android.hardware.radio.IAnnouncementListener$Stub: android.hardware.radio.IAnnouncementListener asInterface(android.os.IBinder)>
<com.android.internal.os.PowerProfile: double getAveragePowerOrDefault(java.lang.String,double)>
<android.content.IClipboard$Default: android.content.ClipData getPrimaryClip(java.lang.String,int)>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setNetworkTypes(int[])>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()>
<android.text.Html$HtmlParser: org.ccil.cowan.tagsoup.HTMLSchema access$000()>
<android.content.om.OverlayInfo: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)>
<android.view.View: java.util.ArrayList getTouchables()>
<android.media.tv.TvStreamConfig: int access$102(android.media.tv.TvStreamConfig,int)>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>
<android.app.ApplicationPackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.app.SystemServiceRegistry$16: android.os.IBinder lambda$createService$0()>
<android.view.DragEvent: com.android.internal.view.IDragAndDropPermissions getDragAndDropPermissions()>
<android.app.timezone.ICallback$Stub: android.os.IBinder asBinder()>
<android.app.AppOpsManager$OpEntry: long getLastAccessBackgroundTime(int)>
<android.net.lowpan.LowpanProperty: java.lang.Object getFromMap(java.util.Map)>
<android.view.View: int getAutofillViewId()>
<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaShort()>
<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()>
<android.content.res.GradientColor: int getChangingConfigurations()>
<android.permission.IPermissionController$Stub: android.permission.IPermissionController getDefaultImpl()>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>
<android.os.IRemoteCallback$Stub: android.os.IRemoteCallback getDefaultImpl()>
<android.view.KeyEvent: int getKeyboardDevice()>
<com.android.internal.os.BatteryStatsImpl: long getUahDischarge(int)>
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] access$402(android.security.keystore.recovery.KeyChainProtectionParams,byte[])>
<android.widget.SmartSelectSprite$RoundedRectangleShape: float getRoundRatio()>
<com.android.internal.widget.ToolbarWidgetWrapper: int getNavigationMode()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.text.AutoGrowArray$FloatArray: int size()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()>
<android.net.NetworkCapabilities: java.lang.String getSsid()>
<android.widget.Editor$SuggestionsPopupWindow: int getVerticalLocalPosition(int)>
<com.android.internal.net.INetworkWatchlistManager$Default: android.os.IBinder asBinder()>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.os.IBinder asBinder()>
<android.graphics.Typeface: int access$300(android.graphics.Typeface)>
<android.telecom.VideoProfile$CameraCapabilities: int describeContents()>
<android.view.accessibility.AccessibilityManager: android.util.ArrayMap access$200(android.view.accessibility.AccessibilityManager)>
<android.hardware.display.VirtualDisplayConfig: int getDensityDpi()>
<android.os.IUserManager$Default: int getUserHandle(int)>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.ITetheringStatsProvider$Stub: java.lang.String getTransactionName(int)>
<android.widget.TextView: int getTopPaddingOffset()>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfKeyframe(int[])>
<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>
<android.content.pm.IPackageManager$Default: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.internal.view.IInputMethodSession$Default: android.os.IBinder asBinder()>
<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>
<android.hardware.location.NanoAppBinary: byte[] getBinaryNoHeader()>
<android.view.textclassifier.ConversationActions$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getAllPhoneAccountHandles()>
<android.transition.TransitionSet: int getTransitionCount()>
<android.media.AudioManager: long getAdditionalOutputDeviceDelay(android.media.AudioDeviceInfo)>
<android.view.View: int getWidth()>
<android.util.proto.EncodedBuffer: int getChunkCount()>
<android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener()>
<android.telephony.SmsCbCmasInfo: int describeContents()>
<android.app.IAppTask$Default: android.app.ActivityManager$RecentTaskInfo getTaskInfo()>
<com.android.internal.util.StateMachine: int getLogRecMaxSize()>
<android.net.lowpan.LowpanBeaconInfo: int getLqi()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.CameraDeviceState access$000(android.hardware.camera2.legacy.RequestThreadManager)>
<android.graphics.drawable.VectorDrawable$VGroup: float getPivotY()>
<android.view.contentcapture.ContentCaptureManager: android.content.ComponentName getServiceSettingsComponentName()>
<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>
<android.service.notification.ZenModeConfig: java.lang.String getOwnerCaption(android.content.Context,java.lang.String)>
<android.os.IncidentManager$PendingReport: int getFlags()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyServiceRegisterer()>
<android.location.GnssClock: double getDriftNanosPerSecond()>
<android.service.notification.ZenModeConfig: android.content.ComponentName getScheduleConditionProvider()>
<android.view.contentcapture.ContentCaptureContext: int getDisplayId()>
<android.location.Criteria: int access$302(android.location.Criteria,int)>
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSmartReplies()>
<android.filterfw.core.Frame: int getRefCount()>
<android.view.textclassifier.SelectionEvent: int getStart()>
<android.telephony.CellIdentityWcdma: int hashCode()>
<android.os.ISystemUpdateManager$Default: android.os.IBinder asBinder()>
<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()>
<android.content.pm.IDexModuleRegisterCallback$Stub: android.os.IBinder asBinder()>
<android.app.INotificationManager$Stub$Proxy: int getPackageImportance(java.lang.String)>
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)>
<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()>
<android.net.NetworkStats: int[] getUniqueUids()>
<android.view.View: android.graphics.drawable.Drawable getVerticalScrollbarThumbDrawable()>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotBefore()>
<android.util.Log: int access$000()>
<android.widget.ListPopupWindow: android.widget.ListView getListView()>
<com.android.internal.util.SyncResultReceiver: int getOptionalExtraIntResult(int)>
<android.widget.Editor$SuggestionHelper: int getSuggestionInfo(android.widget.Editor$SuggestionInfo[],android.widget.Editor$SuggestionSpanInfo)>
<android.os.connectivity.WifiBatteryStats: long getLoggingDurationMillis()>
<android.net.wifi.nl80211.IPnoScanEvent$Default: android.os.IBinder asBinder()>
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()>
<android.text.Annotation: int getSpanTypeIdInternal()>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.os.Parcel: float[] createFloatArray()>
<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getModulus()>
<android.media.VolumeShaper: float getVolume()>
<android.app.blob.IBlobCommitCallback$Stub: android.app.blob.IBlobCommitCallback asInterface(android.os.IBinder)>
<android.media.IMediaRouter2$Stub: android.os.IBinder asBinder()>
<android.hardware.input.IInputDevicesChangedListener$Stub: android.os.IBinder asBinder()>
<android.os.BatteryStats$LevelStepTracker: int getInitModeAt(int)>
<android.media.MediaMetadata: android.media.MediaDescription getDescription()>
<android.text.Layout: long getRunRange(int)>
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.os.IBinder asBinder()>
<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String getAlias()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.media.soundtrigger_middleware.ISoundTriggerCallback getDefaultImpl()>
<android.telephony.SignalStrength: int getLteDbm()>
<android.content.ContextWrapper: int getDisplayId()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)>
<android.os.PowerManager: int getDefaultScreenBrightnessForVrSetting()>
<android.provider.ContactsContract$CommonDataKinds$Relation: int getTypeLabelResource(int)>
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>
<android.app.admin.IDevicePolicyManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean needMobileRadioShutdown()>
<android.telephony.UiccAccessRule: byte[] encodeRules(android.telephony.UiccAccessRule[])>
<android.media.tv.TvTrackInfo: int getVideoWidth()>
<android.app.assist.AssistStructure$ViewNode: int getTextSelectionStart()>
<android.service.oemlock.IOemLockService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyDisplayInfo$1: void <init>()>
<android.service.notification.INotificationListener$Stub: android.service.notification.INotificationListener asInterface(android.os.IBinder)>
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectLeft()>
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>
<android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>
<android.graphics.RenderNode: int getHeight()>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()>
<android.net.lowpan.ILowpanInterfaceListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IPowerManager$Stub$Proxy: boolean isAmbientDisplaySuppressed()>
<android.hardware.location.NanoApp: int getNeededReadMemBytes()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowUnthrottledLocation()>
<android.net.INetworkScoreService$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: int getDataActivationState(int,java.lang.String)>
<android.text.DynamicLayout: int getNumberOfBlocks()>
<android.os.IVoldListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>
<android.util.SparseBooleanArray: int indexOfKey(int)>
<android.media.MediaRouter$RouteCategory: int getSupportedTypes()>
<android.view.InputDevice: int getVendorId()>
<android.net.wifi.nl80211.PnoNetwork: byte[] access$102(android.net.wifi.nl80211.PnoNetwork,byte[])>
<android.content.Context: android.content.AutofillOptions getAutofillOptions()>
<android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener asInterface(android.os.IBinder)>
<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView createMoreItemView()>
<android.provider.Settings$NameValueCache: android.util.ArrayMap getStringsForPrefix(android.content.ContentResolver,java.lang.String,java.util.List)>
<android.database.sqlite.SQLiteQueryBuilder: int update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.content.res.AssetManager: java.lang.String getResourceTypeName(int)>
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>
<com.google.android.mms.pdu.NotificationInd: long getExpiry()>
<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents(int)>
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int)>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.permission.IPermissionManager$Default: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>
<android.content.UndoOperation: int describeContents()>
<android.text.Layout: float getLineRight(int)>
<android.telecom.Log: java.lang.String getSessionId()>
<android.telephony.SmsManager: int checkSmsShortCodeDestination(java.lang.String,java.lang.String)>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>
<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>
<android.media.AudioPortEventHandler: android.os.Handler handler()>
<android.hardware.radio.RadioManager$AmBandConfig$Builder: android.hardware.radio.RadioManager$AmBandConfig build()>
<android.media.ExifInterface: long getDateTimeDigitized()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>
<android.content.res.AssetManager: boolean isUpToDate()>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.IMediaHTTPConnection$Stub$Proxy: int readAt(long,int)>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: java.lang.String getSystemCaptionsServicePackageName()>
<android.telephony.ims.aidl.IImsConfigCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IVold$Default: java.lang.String fdeGetPassword()>
<android.telephony.TelephonyManager: boolean getSmsReceiveCapable(boolean)>
<android.content.pm.parsing.ParsingPackageImpl: int[] getSplitFlags()>
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int,boolean)>
<android.view.View: float getHorizontalScrollFactor()>
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)>
<android.telephony.SmsCbEtwsInfo: int describeContents()>
<android.app.WallpaperColors: android.graphics.Color getTertiaryColor()>
<com.android.internal.inputmethod.IIntResultCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioTrack: android.os.PersistableBundle getMetrics()>
<android.content.UndoManager: android.content.UndoManager$UndoState getTopRedo(android.content.UndoOwner[])>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.INumberVerificationCallback$Stub: com.android.internal.telephony.INumberVerificationCallback getDefaultImpl()>
<android.telephony.TelephonyManager: int getPreferredNetworkType(int)>
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>
<android.view.DisplayCutout: int getSafeInsetLeft()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isHearingAidCompatibilitySupported()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndex(int)>
<android.transition.ChangeBounds$2: android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds)>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: int access$300(android.telephony.VisualVoicemailSmsFilterSettings$Builder)>
<android.location.GnssStatus: int getConstellationType(int)>
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()>
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableIfaces()>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.media.IAudioFocusDispatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager asInterface(android.os.IBinder)>
<android.security.IKeyChainService$Stub$Proxy: byte[] getEncodedCaCertificate(java.lang.String,boolean)>
<android.content.SyncAdapterType: java.lang.String getPackageName()>
<android.hardware.display.VirtualDisplayConfig: int getFlags()>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int,int)>
<android.database.CursorWrapper: int getPosition()>
<android.location.Address: double getLongitude()>
<android.hardware.camera2.TotalCaptureResult: java.util.List getPartialResults()>
<android.os.storage.StorageManager: int getProxyFileDescriptorMountPointId()>
<android.content.pm.IPackageManager$Stub$Proxy: int getMoveStatus(int)>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getReenterTransition()>
<android.permission.IPermissionManager$Default: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities getNetworkCapabilities()>
<com.android.internal.widget.ILockSettings$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View: android.graphics.BlendMode getBackgroundTintBlendMode()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getRecognitionModes()>
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>
<android.app.usage.UsageEvents$Event: int getEventType()>
<android.net.RouteInfo: java.lang.String getInterface()>
<android.content.pm.ShortcutManager: java.util.List getPinnedShortcuts()>
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()>
<android.media.IRemoteVolumeController$Default: android.os.IBinder asBinder()>
<android.hardware.contexthub.V1_0.PhysicalSensor: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.text.style.TypefaceSpan: int getSpanTypeIdInternal()>
<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass valueOf(java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>
<android.os.IVibratorStateListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioAttributes: int getFlags()>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>
<android.telephony.CarrierRestrictionRules$1: android.telephony.CarrierRestrictionRules createFromParcel(android.os.Parcel)>
<android.telephony.CellIdentity$1: android.telephony.CellIdentity[] newArray(int)>
<android.content.pm.InstantAppResolveInfo: long getLongVersionCode()>
<android.app.FragmentHostCallback: android.app.FragmentManagerImpl getFragmentManagerImpl()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int)>
<android.net.IConnectivityManager$Default: java.lang.String[] getTetherableWifiRegexs()>
<android.telephony.BarringInfo$1: android.telephony.BarringInfo createFromParcel(android.os.Parcel)>
<android.filterfw.core.FieldPort: java.lang.Object getTarget()>
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()>
<android.app.slice.SliceItem: android.widget.RemoteViews getRemoteView()>
<android.os.incremental.IIncrementalService$Default: int unlink(int,java.lang.String)>
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.TypedArray resolveAttributes(android.content.res.Resources$Theme,int[],int[])>
<android.os.IProgressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: int hashCode()>
<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getUiccCardsInfo(java.lang.String)>
<android.telephony.CellSignalStrengthLte$1: android.telephony.CellSignalStrengthLte[] newArray(int)>
<android.security.keystore.ICredstoreTokenCallback$Stub: android.security.keystore.ICredstoreTokenCallback getDefaultImpl()>
<android.telephony.CellSignalStrengthWcdma$1: void <init>()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.app.INotificationManager$Stub$Proxy: java.util.List getAllowedAssistantAdjustments(java.lang.String)>
<android.telephony.CellIdentityWcdma$1: void <init>()>
<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.view.View getErrorView()>
<android.hardware.lights.Light: int getOrdinal()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>
<android.os.IVoldMountCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: com.android.internal.inputmethod.ICharSequenceResultCallback getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.widget.Editor$HandleView: int getPreferredHeight()>
<android.app.admin.DevicePolicyManager: android.security.AttestedKeyPair generateKeyPair(android.content.ComponentName,java.lang.String,android.security.keystore.KeyGenParameterSpec,int)>
<android.content.res.ApkAssets: java.lang.CharSequence getStringFromPool(int)>
<android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient getDefaultImpl()>
<android.metrics.LogMaker: int getCounterValue()>
<android.widget.AbsSpinner: int getCount()>
<android.view.textclassifier.TextLinksParams: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()>
<com.android.internal.app.ISoundTriggerService$Default: int stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<android.widget.EditorTouchState: float getLastUpY()>
<android.util.jar.StrictJarManifest: android.util.jar.StrictJarManifest$Chunk getChunk(java.lang.String)>
<android.os.BaseBundle: int getInt(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)>
<android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager asInterface(android.os.IBinder)>
<android.app.ContextImpl: android.content.Context getApplicationContext()>
<android.util.jar.StrictJarVerifier: boolean readCertificates()>
<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<android.os.BaseBundle: char getChar(java.lang.String)>
<android.view.InputDevice: android.hardware.input.InputDeviceIdentifier getIdentifier()>
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int calculateMarshalSize(java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ChangedPackages getChangedPackages(int,int)>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.VirtualDisplay createVirtualDisplay(android.content.Context,android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>
<android.widget.Editor$PositionListener: int getPositionXOnScreen()>
<android.widget.ExpandableListConnector: long getItemId(int)>
<android.net.MacAddress: int describeContents()>
<android.location.Location: float getAccuracy()>
<android.graphics.drawable.DrawableWrapper: int getAlpha()>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.content.pm.IPackageManager$Default: byte[] getIntentFilterVerificationBackup(int)>
<android.app.assist.AssistStructure$HtmlInfoNode: java.util.List getAttributes()>
<android.widget.Editor$HandleView: int getIdealFingerToCursorOffset()>
<android.app.AppOpsManager: int resolveLastRestrictedUidState(int)>
<android.util.DisplayMetrics: int hashCode()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<android.os.Environment: java.io.File getPackageCacheDirectory()>
<android.hardware.input.IInputManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.TextView: float getShadowDy()>
<android.widget.AbsListView: int computeVerticalScrollOffset()>
<android.os.IIncidentManager$Stub$Proxy: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>
<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()>
<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<android.graphics.animation.FallbackLUTInterpolator: float getInterpolation(float)>
<com.android.internal.policy.PhoneWindow$PanelFeatureState: android.os.Parcelable onSaveInstanceState()>
<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>
<android.view.ViewConfiguration: int getDoubleTapMinTime()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()>
<android.os.IClientCallback$Stub: android.os.IClientCallback asInterface(android.os.IBinder)>
<android.app.prediction.AppPredictionContext: java.lang.String getUiSurface()>
<android.app.ContextImpl: java.io.File getObbDir()>
<android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<android.app.IServiceConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<android.content.pm.SharedLibraryInfo: int getType()>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.animation.PathKeyframes$FloatKeyframesBase: java.lang.Class getType()>
<android.net.lowpan.LowpanProvision: int describeContents()>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>
<android.renderscript.Int3: int elementSum()>
<android.app.ActivityManager$RunningServiceInfo: int describeContents()>
<com.android.internal.policy.PhoneWindow: java.util.List getSystemGestureExclusionRects()>
<com.android.internal.appwidget.IAppWidgetService$Default: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)>
<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager access$200(android.hardware.lights.LightsManager)>
<android.util.apk.VerityBuilder: byte[] generateApkVerityRootHash(java.io.RandomAccessFile,java.nio.ByteBuffer,android.util.apk.SignatureInfo)>
<android.net.Network: java.net.InetAddress getByName(java.lang.String)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.app.contentsuggestions.IClassificationsCallback asInterface(android.os.IBinder)>
<android.view.IDisplayWindowRotationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.KeyEvent: int getDisplayId()>
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)>
<android.os.IThermalService$Stub$Proxy: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)>
<com.android.internal.widget.ILockSettings$Stub$Proxy: byte[] getHashFactor(com.android.internal.widget.LockscreenCredential,int)>
<android.animation.AnimatorSet: int getChangingConfigurations()>
<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])>
<android.app.ActivityManager$TaskDescription: int getBackgroundColor()>
<android.provider.ContactsContract$CommonDataKinds$Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.app.admin.DevicePolicyManager: boolean isSystemOnlyUser(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.Bundle getUserRestrictions(android.content.ComponentName,boolean)>
<android.telephony._$$Lambda$SubscriptionManager$_V9Pitohq6YI8ab2G44kCDK4K4M: int callMethod(com.android.internal.telephony.ISub)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()>
<android.content.pm.InstantAppResolveInfo: byte[] getDigestBytes()>
<android.net.INetworkPolicyManager$Stub$Proxy: boolean getRestrictBackground()>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>
<android.app.SystemServiceRegistry$114: android.os.incremental.IncrementalManager createService(android.app.ContextImpl)>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)>
<android.view.View: float getRightFadingEdgeStrength()>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String,java.nio.ByteBuffer)>
<android.hardware.display.IColorDisplayManager$Default: int getColorMode()>
<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.RemoteController: long getEstimatedMediaPosition()>
<android.content.res.CompatResources: android.content.res.ColorStateList getColorStateList(int)>
<android.graphics.drawable.RippleDrawable: int getRadius()>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>
<android.app.ContextImpl: java.io.File getCodeCacheDirBeforeBind(java.io.File)>
<android.telephony.ims.feature.CapabilityChangeRequest: int describeContents()>
<android.view.Display: android.view.Display$Mode getMode()>
<android.location.IGnssMeasurementsListener$Stub: android.location.IGnssMeasurementsListener asInterface(android.os.IBinder)>
<android.text.PrecomputedText: int getParagraphEnd(int)>
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()>
<android.content.pm.IShortcutService$Default: int getIconMaxDimensions(java.lang.String,int)>
<android.view.MotionEvent: float getYCursorPosition()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: android.os.IBinder asBinder()>
<android.renderscript.Type: int getY()>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(java.lang.Object[],java.lang.Object)>
<android.widget.AutoCompleteTextView: int getThreshold()>
<android.security.net.config.TrustedCertificateStoreAdapter: java.security.cert.Certificate getCertificate(java.lang.String,boolean)>
<android.os.IVoldTaskListener$Default: android.os.IBinder asBinder()>
<android.security.IKeyChainService$Default: byte[] getCertificate(java.lang.String)>
<android.content.pm.IDexModuleRegisterCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.policy.PhoneWindow: int access$002(com.android.internal.policy.PhoneWindow,int)>
<android.hardware.SerialPort: java.lang.String getName()>
<android.view.View$2: java.lang.Object get(java.lang.Object)>
<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureFeatureEnabled()>
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts(boolean)>
<android.app.ActivityManager: int getLargeMemoryClass()>
<android.telephony.SmsCbMessage: int getMessagePriority()>
<android.net.LinkAddress: int getPrefixLength()>
<android.location.ICountryListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.ComponentInfo: int getLogoResource()>
<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>
<android.hardware.ISensorPrivacyManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<android.webkit.WebView: float getScale()>
<android.media.midi.MidiDeviceInfo: android.os.Bundle getProperties()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getIdleTimeCounter()>
<android.graphics.fonts.SystemFonts: java.util.Map getRawSystemFallbackMap()>
<android.telephony.CarrierRestrictionRules: int access$402(android.telephony.CarrierRestrictionRules,int)>
<android.hardware.display.IDisplayManager$Default: int getPreferredWideGamutColorSpaceId()>
<android.app.LoadedApk: java.lang.String[] getSplitAppDirs()>
<android.os.storage.StorageManager: boolean isCheckpointSupported()>
<android.view.textclassifier.TextLanguage: android.os.Bundle getExtras()>
<android.hardware.radio.RadioManager$BandConfig: int getSpacing()>
<com.android.internal.telephony.ITelephony$Default: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)>
<android.content.pm.split.SplitAssetDependencyLoader: android.content.res.AssetManager getSplitAssetManager(int)>
<android.content.res.XmlBlock$Parser: java.lang.String getIdAttribute()>
<android.widget._$$Lambda$TextView$DJlzb7VS7J_1890Kto7GAApQDN0: java.lang.Object get()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataAllowedInVoiceCall(int)>
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest getSessionParameters()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>
<android.graphics.drawable.LayerDrawable: int getStartPadding()>
<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()>
<android.widget.TextView: int getMarqueeRepeatLimit()>
<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>
<android.net.wifi.nl80211.IPnoScanEvent$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.VolumeRecord[] getVolumeRecords(int)>
<android.telephony.TelephonyManager: java.lang.String getOtaSpNumberSchemaForPhone(int,java.lang.String)>
<android.app.ContextImpl: int getThemeResId()>
<android.hardware.hdmi.HdmiControlManager: java.util.List getConnectedDevicesList()>
<android.app.VrManager: boolean isVrModeEnabled()>
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getConversationId()>
<android.os.IVoldTaskListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.view.menu.ActionMenuItem: int getAlphabeticModifiers()>
<com.android.ims.internal.IImsVideoCallProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<android.media.session.ISessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)>
<android.hardware.SystemSensorManager$BaseEventQueue: int flush()>
<com.android.internal.database.SortCursor: long getLong(int)>
<android.app.prediction.AppPredictionContext: int getPredictedTargetCount()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4400()>
<android.app.WindowConfiguration: int describeContents()>
<android.hardware.radio.ProgramList$Chunk: java.util.Set getModified()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.autofill.AutofillPopupWindow$2: android.os.IBinder getApplicationWindowToken()>
<android.telecom.TelecomManager: java.lang.String getSystemDialerPackage()>
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal()>
<android.app.ContextImpl: android.os.IBinder getActivityToken()>
<com.android.internal.app.LocalePicker: java.util.List getAllAssetLocales(android.content.Context,boolean)>
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.ICameraService$Stub$Proxy: android.hardware.CameraInfo getCameraInfo(int)>
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.text.DynamicLayout: int getLineTop(int)>
<android.graphics.drawable.VectorDrawable$VClipPath: int getNativeSize()>
<android.app.IAlarmCompleteListener$Default: android.os.IBinder asBinder()>
<android.widget.ListPopupWindow: long getSelectedItemId()>
<android.widget.GridView: android.widget.Adapter getAdapter()>
<android.security.KeyStore: int getLastError()>
<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()>
<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.view.SurfaceView: float getCornerRadius()>
<android.widget.FastScroller$5: java.lang.Integer get(android.view.View)>
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.net.TrafficStats: long getMobileRxPackets()>
<android.net.LocalSocketImpl: int available()>
<android.app.VoiceInteractor: android.app.VoiceInteractor$Request getActiveRequest(java.lang.String)>
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage,int)>
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationType()>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>
<android.telephony.ims.ImsExternalCallState: android.net.Uri getAddress()>
<android.net.http.SslError: int getPrimaryError()>
<android.os.ISystemConfig$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()>
<android.hardware.hdmi.HdmiTvClient: int getDeviceType()>
<android.telephony.euicc.EuiccNotification: java.lang.String getTargetAddr()>
<android.app.ApplicationPackageManager: java.util.Set getMimeGroup(java.lang.String)>
<android.media.projection.IMediaProjectionCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$DelegateImpl getDelegate()>
<android.view.textclassifier.TextClassifierEvent: int[] getActionIndices()>
<android.net.ProxyInfo: int describeContents()>
<android.location.AbstractListenerManager: void <init>()>
<android.app.role.IRoleManager$Stub$Proxy: java.lang.String getDefaultSmsPackage(int)>
<android.window.IDisplayAreaOrganizer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.database.CursorWrapper: boolean isAfterLast()>
<android.webkit.IWebViewUpdateService$Default: android.content.pm.PackageInfo getCurrentWebViewPackage()>
<android.telephony.CellSignalStrengthCdma: int hashCode()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getTitle()>
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>
<android.telephony.TelephonyManager: android.content.ComponentName getDefaultRespondViaMessageApplication()>
<android.app.admin.DevicePolicyManager: int logoutUser(android.content.ComponentName)>
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: int release()>
<android.app.blob.IBlobStoreManager$Default: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)>
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<com.google.android.mms.pdu.ReadRecInd: int getReadStatus()>
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateServiceUnchecked()>
<android.media.AudioDeviceInfo: int[] getEncapsulationMetadataTypes()>
<android.app.BackStackRecord: int getTransitionStyle()>
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges(int)>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>
<android.media.AudioManager: int getUiSoundsStreamType()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>
<android.telephony.SmsCbLocation$1: void <init>()>
<android.view.ActionMode: int getType()>
<android.app.INotificationManager$Default: android.app.NotificationHistory getNotificationHistory(java.lang.String,java.lang.String)>
<android.telephony.data.ApnSetting: java.lang.String getUser()>
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.app.VoiceInteractor$Request: android.content.Context getContext()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesLibraries()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getEmergencyNumberListTestMode()>
<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()>
<android.content.IContentService$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.Ikev2VpnProfile: java.lang.String getUserIdentity()>
<android.telephony.CellSignalStrengthNr: int getCsiRsrp()>
<android.media.MediaCodec: android.os.PersistableBundle getMetrics()>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: byte[] getExtendedAddress()>
<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.params.LensShadingMap: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getImplementor()>
<android.hardware.display.DisplayManager: android.graphics.Point getStableDisplaySize()>
<android.net.INetworkPolicyManager$Default: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)>
<android.hardware.camera2.params.Capability: int getMode()>
<android.net.NetworkAgentConfig: int describeContents()>
<android.accounts.IAccountManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: android.telephony.CdmaEriInformation getCdmaEriInformation()>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.CaptureRequest: int getRequestType()>
<android.hardware.radio.V1_4.CellInfoLte: int hashCode()>
<android.widget.ListView: int lookForSelectablePosition(int,boolean)>
<android.telephony.ClientRequestStats: java.lang.String getCallingPackage()>
<android.permission.IPermissionManager$Stub$Proxy: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<android.text.style.LineHeightSpan$Standard: int getHeight()>
<android.service.dreams.IDreamManager$Default: android.content.ComponentName getDefaultDreamComponentForUser(int)>
<android.graphics.drawable.Drawable: int getLevel()>
<android.hardware.radio.RadioManager$BandDescriptor: int getUpperLimit()>
<android.content.rollback.IRollbackManager$Default: android.content.pm.ParceledListSlice getAvailableRollbacks()>
<android.media.IMediaHTTPConnection$Default: java.lang.String getUri()>
<android.media.midi.MidiDeviceStatus: int getOutputPortOpenCount(int)>
<com.android.internal.telephony.ISub$Stub: android.os.IBinder asBinder()>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<android.telephony.SmsCbMessage: int describeContents()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: long flush()>
<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDescriptor()>
<android.app.AppOpsManager$OpEntry: long getLastDuration(int,int,int)>
<android.view.SurfaceControl: android.hardware.display.DisplayedContentSample getDisplayedContentSample(android.os.IBinder,long,long)>
<android.location.ICountryDetector$Stub$Proxy: android.location.Country detectCountry()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CarrierRestrictionRules getAllowedCarriers()>
<android.telephony.TelephonyManager: java.lang.String nvReadItem(int)>
<android.hardware.Camera$Parameters: int getMaxExposureCompensation()>
<com.android.internal.policy.DecorView$2: boolean getPadding(android.graphics.Rect)>
<android.os.ParcelFileDescriptor$Status: java.io.IOException asIOException()>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
<com.google.android.mms.pdu.ReadRecInd: long getDate()>
<android.telephony.ServiceState: java.lang.String getVoiceOperatorAlphaShort()>
<android.os.Build$Partition: java.lang.String getName()>
<android.print.PrintJob: int hashCode()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>
<android.media.MediaSyncEvent: int getAudioSessionId()>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<android.os.BaseBundle: boolean isDefinitelyEmpty()>
<android.view.View: android.view.animation.Animation getAnimation()>
<android.hardware.radio.V1_5.CellInfoNr: int hashCode()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)>
<android.net.INetworkPolicyManager$Default: int getUidPolicy(int)>
<android.media.session.MediaSession$Token: int describeContents()>
<android.telephony.TelephonyManager: int getDataState()>
<android.os.VibrationAttributes: int getFlags()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>
<android.telecom.PhoneAccount: android.net.Uri getSubscriptionAddress()>
<android.telephony.TelephonyManager: com.android.internal.telephony.CellNetworkScanResult getAvailableNetworks()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getFlashlightTurnedOnTimer()>
<android.telephony.SmsMessage: int getStatus()>
<android.hardware.hdmi.IHdmiHotplugEventListener$Default: android.os.IBinder asBinder()>
<android.content.ContextWrapper: android.app.IApplicationThread getIApplicationThread()>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: byte[] getMacAddress()>
<android.app.Notification$BubbleMetadata: android.graphics.drawable.Icon getBubbleIcon()>
<android.media.MediaCodecInfo$EncoderCapabilities: android.util.Range getComplexityRange()>
<android.hardware.usb.UsbAccessory: int describeContents()>
<android.media.MicrophoneInfo: float getMinSpl()>
<android.os.IRemoteCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.session.MediaSessionManager: java.util.List getSession2Tokens(int)>
<android.telephony.ims.ImsCallProfile: int getVideoStateFromImsCallProfile(android.telephony.ims.ImsCallProfile)>
<android.view.IRecentsAnimationController$Stub: android.view.IRecentsAnimationController getDefaultImpl()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>
<android.app.assist.AssistStructure: int getFlags()>
<android.view.IWindowManager$Stub$Proxy: float getCurrentAnimatorScale()>
<android.content.ContentResolver$MimeTypeInfo: android.graphics.drawable.Icon getIcon()>
<android.os.IUserManager$Default: int[] getProfileIds(int,boolean)>
<android.app.slice.SliceItem: java.lang.String getFormat()>
<android.app.IActivityManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>
<android.app.Fragment: android.app.SharedElementCallback getExitTransitionCallback()>
<android.widget.SelectionActionModeHelper$TextClassificationAsyncTask: android.widget.SelectionActionModeHelper$SelectionResult doInBackground(java.lang.Void[])>
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable5gNonDFSChannels()>
<android.view.View: int getScrollBarSize()>
<android.app.IWindowToken$Stub: android.os.IBinder asBinder()>
<android.hardware.SensorPrivacyManager: boolean isSensorPrivacyEnabled()>
<android.media.MediaCas: android.hardware.cas.V1_0.IMediaCasService getService()>
<android.content.SyncRequest: java.lang.String getProvider()>
<android.app.WindowConfiguration: int getWindowingMode()>
<android.os.Temperature: int hashCode()>
<android.view.IRecentsAnimationController$Default: android.os.IBinder asBinder()>
<android.location.IGnssAntennaInfoListener$Stub: android.os.IBinder asBinder()>
<android.os.SystemClock$4: long millis()>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: boolean isHdmiCecVolumeControlEnabled()>
<android.print.ILayoutResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ContentProviderProxy: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)>
<android.app.ApplicationPackageManager: boolean isInstantApp(java.lang.String)>
<android.widget.Magnifier: android.graphics.Point getSourcePosition()>
<android.content.res.ResourcesImpl: android.graphics.Typeface loadFont(android.content.res.Resources,android.util.TypedValue,int)>
<android.graphics.ParcelableColorSpace: int describeContents()>
<android.graphics.drawable.VectorDrawable: int access$5600(long)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfilePackages(android.content.ComponentName)>
<android.os.RecoverySystem$1: int read()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum$MarshalerEnum: int getNativeSize()>
<android.hardware.usb.IUsbSerialReader$Default: java.lang.String getSerial(java.lang.String)>
<android.view.Display$Mode: int hashCode()>
<android.app.IBackupAgent$Default: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature asInterface(android.os.IBinder)>
<android.os.storage.IObbActionListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.google.android.mms.pdu.NotificationInd: int getContentClass()>
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getAllSessions(int)>
<android.text.Layout: int getHeight()>
<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.BaseBundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.hardware.input.InputManager: android.hardware.input.TouchCalibration getTouchCalibration(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)>
<android.hardware.Camera$Parameters: boolean getAutoExposureLock()>
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_5.CellInfo,long)>
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>
<com.android.internal.app.IAppOpsService$Default: java.util.List extractAsyncOps(java.lang.String)>
<android.app.role.IRoleManager$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.params.MeteringRectangle: android.util.Size getSize()>
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<android.text.CharSequenceCharacterIterator: char last()>
<android.security.keystore.IKeystoreExportKeyCallback$Default: android.os.IBinder asBinder()>
<android.content.res.AssetManager: java.lang.String[] getLocales()>
<com.android.internal.app.WindowDecorActionBar: android.view.View getCustomView()>
<android.media.midi.IMidiManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.AudioRecordingConfiguration: int getClientAudioSource()>
<android.media.AudioTrack: float getMinVolume()>
<android.hardware.location.NanoApp: java.lang.String getPublisher()>
<android.util.MergedConfiguration: android.content.res.Configuration getMergedConfiguration()>
<android.telephony.CallForwardingInfo: int describeContents()>
<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>
<android.os.IThermalService$Default: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)>
<android.content.pm.Signature: java.security.PublicKey getPublicKey()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)>
<android.view.IPinnedStackController$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IWindowSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.MediaFormat$PrefixedKeySetWithPrefixRemoved: java.lang.String mapItemToKey(java.lang.String)>
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForUser(java.util.UUID,android.os.UserHandle)>
<com.android.ims.internal.IImsVideoCallProvider$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.IPhoneSubInfo$Default: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int,int,java.lang.String)>
<android.filterfw.core.GLFrame: float[] getFloats()>
<com.android.internal.widget.LockPatternUtils: java.lang.String getDeviceOwnerInfo()>
<android.media.session.PlaybackState: int getState()>
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()>
<android.view.WindowManager$LayoutParams: int getColorMode()>
<android.media.IVolumeController$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.params.OutputConfiguration: int describeContents()>
<android.webkit.WebMessage: java.lang.String getData()>
<android.content.ContentProvider: int enforceWritePermissionInner(android.net.Uri,java.lang.String,java.lang.String,android.os.IBinder)>
<android.content.pm.parsing.component.ParsedComponent: java.lang.CharSequence getNonLocalizedLabel()>
<android.hardware.radio.V1_5.CellInfoTdscdma: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int getEnd()>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForConsumptionEnd()>
<android.content.pm.FeatureGroupInfo: int describeContents()>
<android.telephony.CarrierRestrictionRules: java.util.List getAllowedCarriers()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryEventStats(int,long,long,java.lang.String)>
<android.telephony.ims.ImsRcsManager: boolean isAvailable(int)>
<android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer asInterface(android.os.IBinder)>
<android.app.backup.BackupManager: boolean isBackupEnabled()>
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoListForDomain(int)>
<android.os.BasicShellCommandHandler: int handleDefaultCommands(java.lang.String)>
<android.os.Environment: java.io.File getApexDirectory()>
<android.os.storage.StorageVolume: int getFatVolumeId()>
<android.view.IRemoteAnimationRunner$Stub: android.view.IRemoteAnimationRunner getDefaultImpl()>
<android.os.BatteryStats$Timer: long getCurrentDurationMsLocked(long)>
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getSimCallManagerForUser(int)>
<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)>
<android.text.MeasuredParagraph: char[] getChars()>
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2)>
<android.content.ContextWrapper: java.lang.String getBasePackageName()>
<android.app.PictureInPictureParams: float getAspectRatio()>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String getZoneId()>
<android.app.WallpaperInfo: java.lang.String getPackageName()>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>
<android.os.IClientCallback$Stub: android.os.IBinder asBinder()>
<android.service.notification.ZenPolicy: int getPriorityCategoryMedia()>
<com.android.internal.os.RpmStats: com.android.internal.os.RpmStats$PowerStateSubsystem getSubsystem(java.lang.String)>
<android.hardware.radio.RadioManager$ProgramInfo: int hashCode()>
<android.os.IDeviceIdleController$Stub: java.lang.String getTransactionName(int)>
<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>
<com.android.internal.textservice.ISpellCheckerSession$Default: android.os.IBinder asBinder()>
<android.graphics.RenderNode: float getPivotX()>
<com.android.internal.util.function.pooled.PooledLambdaImpl: long getAsLong()>
<android.hardware.display.DeviceProductInfo$ManufactureDate: int describeContents()>
<com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>
<android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getForegroundActivityTimer()>
<android.content.pm.parsing.component.ParsedComponent: int getLogo()>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.app.LoadedApk: java.lang.String[] getOverlayDirs()>
<android.view.accessibility.AccessibilityRecord: int getScrollDeltaY()>
<android.graphics.drawable.GradientDrawable: float[] getCornerRadii()>
<com.android.internal.telephony.ITelephony$Default: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.view.contentcapture.IDataShareWriteAdapter getDefaultImpl()>
<android.hardware.usb.UsbEndpoint: int getDirection()>
<android.net.RouteInfo: int describeContents()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementExitTransition()>
<android.location.IBatchedLocationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keystore.KeyGenParameterSpec: int getUid()>
<android.text.DynamicLayout: int[] getBlockIndices()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int,int,int)>
<android.os.IRecoverySystem$Stub: android.os.IRecoverySystem asInterface(android.os.IBinder)>
<android.app.TaskInfo: android.window.WindowContainerToken getToken()>
<android.media.AudioGain: int defaultValue()>
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.service.vr.IPersistentVrStateCallbacks asInterface(android.os.IBinder)>
<android.hardware.radio.V1_0.CdmaSignalStrength: int hashCode()>
<android.app.ActivityOptions: java.lang.String getPackageName()>
<android.telephony.ims.ImsMmTelManager: boolean isAdvancedCallingSettingEnabled()>
<android.hardware.biometrics.IAuthService$Stub: android.os.IBinder asBinder()>
<android.app.AppOpsManager: int parseHistoricalMode(java.lang.String)>
<android.app.admin.SystemUpdatePolicy: int describeContents()>
<android.hardware.location.NanoAppState: int describeContents()>
<android.view.ViewDebug$PropertyInfo: android.view.ViewDebug$PropertyInfo forField(java.lang.reflect.Field,java.lang.Class)>
<android.os.IInstalld$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.contentcapture.IContentCaptureManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.PrintAttributes$Resolution: int getVerticalDpi()>
<android.location.IGnssMeasurementsListener$Stub: java.lang.String getTransactionName(int)>
<android.provider.FontsContract$FontFamilyResult: android.provider.FontsContract$FontInfo[] getFonts()>
<android.hardware.radio.ProgramSelector$Identifier: long getValue()>
<com.android.internal.os.PowerProfile: int getNumCpuClusters()>
<android.provider.FontsContract$FontInfo: int getWeight()>
<android.telephony.ServiceState: int getCssIndicator()>
<android.hardware.display.IDisplayManagerCallback$Stub: android.hardware.display.IDisplayManagerCallback getDefaultImpl()>
<android.app.IActivityManager$Default: java.util.List getProcessesInErrorState()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.net.wifi.nl80211.IApInterfaceEventCallback asInterface(android.os.IBinder)>
<com.android.internal.view.IInputSessionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.IScanEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: int getNextIndexToLoad()>
<android.content.res.ResourcesImpl: java.lang.String getResourcePackageName(int)>
<android.hardware.radio.TunerAdapter: int tune(int,int)>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.util.List GetClientInterfaces()>
<android.content.pm.InstallSourceInfo: java.lang.String getInstallingPackageName()>
<android.hardware.location.IContextHubCallback$Stub: android.hardware.location.IContextHubCallback getDefaultImpl()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long forceSecurityLogs()>
<android.security.keystore.IKeystoreService$Default: int onDeviceOffBody()>
<android.security.keymaster.KeymasterCertificateChain: java.util.List getCertificates()>
<android.graphics.drawable.LayerDrawable$LayerState: int access$202(android.graphics.drawable.LayerDrawable$LayerState,int)>
<android.os.UserManager: boolean isUserAGoat()>
<android.net.wifi.nl80211.IApInterface$Default: java.lang.String getInterfaceName()>
<android.util.XmlPullAttributes: int getStyleAttribute()>
<android.content.Context: java.util.concurrent.Executor getMainExecutor()>
<android.app.usage.NetworkStats$Bucket: int access$600(int)>
<android.content.ContentResolver: android.content.IContentService getContentService()>
<android.telephony.ims.aidl.IImsMmTelListener$Default: android.os.IBinder asBinder()>
<android.media.AudioManager: int getStreamMinVolumeInt(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getClassLoaderName()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] getServerParams()>
<android.hardware.camera2.params.StreamConfiguration: android.util.Size getSize()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getCacheQuotaBytes(java.lang.String,int,java.lang.String)>
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean,android.net.Uri,android.net.Uri)>
<android.app.trust.ITrustManager$Stub: android.app.trust.ITrustManager getDefaultImpl()>
<android.view.IInputMonitorHost$Default: android.os.IBinder asBinder()>
<android.os.IVoldMountCallback$Default: android.os.IBinder asBinder()>
<android.telephony.SmsCbLocation: int getCid()>
<android.view.InsetsAnimationControlImpl: float getCurrentFraction()>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.internal.telephony._$$Lambda$SmsApplication$5KAxbm71Dll9xmT5zeXi0i27A10: java.lang.Object apply(java.lang.Object)>
<com.android.internal.view.menu.MenuAdapter: int getCount()>
<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()>
<android.telephony.CellSignalStrengthGsm: int hashCode()>
<android.app.IActivityManager$Default: android.content.pm.UserInfo getCurrentUser()>
<android.net.INetworkPolicyListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.statusbar.IStatusBar$Stub: com.android.internal.statusbar.IStatusBar getDefaultImpl()>
<android.os.BatterySaverPolicyConfig: boolean getDisableAod()>
<android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.os.RemoteCallbackList: java.lang.Object getRegisteredCallbackCookie(int)>
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)>
<android.os.BaseBundle: long[] getLongArray(java.lang.String)>
<android.app.LoadedApk: java.lang.String[] getSplitPaths(java.lang.String)>
<com.android.internal.telephony.INumberVerificationCallback$Default: android.os.IBinder asBinder()>
<android.os.IVibratorStateListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()>
<android.app.timedetector.ITimeDetectorService$Stub: android.app.timedetector.ITimeDetectorService getDefaultImpl()>
<android.telephony.ICellInfoCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: java.lang.String getTransactionName(int)>
<android.view.InsetsSource: int describeContents()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getPopulatedNotificationChannelGroupForPackage(java.lang.String,int,java.lang.String,boolean)>
<android.os.storage.IStorageManager$Stub$Proxy: int getPasswordType()>
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>
<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodListAsUser(int)>
<android.view.Display: int getOwnerUid()>
<android.security.IKeyChainService$Stub$Proxy: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>
<android.app.admin.DevicePolicyManager: boolean isCallerApplicationRestrictionsManagingPackage()>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)>
<android.content.ContextWrapper: android.os.UserHandle getUser()>
<com.google.android.mms.pdu.NotificationInd: long getMessageSize()>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.view.WindowInsets: int getStableInsetLeft()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getDriverVersion()>
<android.net.IConnectivityDiagnosticsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.RcsContactUceCapability: android.net.Uri getContactUri()>
<android.content.pm.IPackageManager$Default: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)>
<android.view.ViewConfiguration: int getJumpTapTimeout()>
<android.util.apk.WrappedX509Certificate: java.util.Date getNotBefore()>
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)>
<android.os.IMessenger$Stub: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: double getElevationUncertaintyInDeg()>
<android.location.GnssStatus: int getSvid(int)>
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>
<android.os.BatterySaverPolicyConfig: boolean getDisableLaunchBoost()>
<android.os.connectivity.WifiBatteryStats: long getIdleTimeMillis()>
<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<com.android.internal.view.menu.StandardMenuPopup: android.widget.ListView getListView()>
<android.net.ConnectivityManager: android.net.NetworkRequest getDefaultRequest()>
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)>
<android.security.IKeyChainService$Stub$Proxy: int generateKeyPair(java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec)>
<android.telephony.ims.aidl.IImsRegistrationCallback$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)>
<android.content.pm.ProviderInfoList: int describeContents()>
<android.telephony.TelephonyDisplayInfo: int getOverrideNetworkType()>
<android.view.View: boolean getFitsSystemWindows()>
<android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<com.android.internal.database.SortCursor: byte[] getBlob(int)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.animation.PathKeyframes: java.lang.Class getType()>
<android.telephony.euicc.DownloadableSubscription: java.lang.String getConfirmationCode()>
<android.telephony.emergency.EmergencyNumber: java.lang.String getCountryIso()>
<android.content.pm.ShortcutManager: long getRateLimitResetTime()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.internal.telephony.IOns$Default: boolean isEnabled(java.lang.String)>
<android.content.om.OverlayInfo: java.lang.String getTargetPackageName()>
<android.content.pm.ShortcutManager$ShareShortcutInfo: android.content.ComponentName getTargetComponent()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Default: android.os.IBinder asBinder()>
<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>
<com.android.internal.os.BatteryStatsHelper: double getMaxPower()>
<com.android.internal.view.IDragAndDropPermissions$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)>
<android.content.res.ApkAssets: android.content.om.OverlayableInfo getOverlayableInfo(java.lang.String)>
<android.os.IInstalld$Default: long[] getExternalSize(java.lang.String,int,int,int[])>
<com.android.internal.database.SortCursor: int getCount()>
<android.app.SyncNotedAppOp: java.lang.String getOp()>
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>
<android.telephony.NetworkRegistrationInfo: boolean isRegistered()>
<com.android.internal.os.BatteryStatsHelper: double getMaxDrainedPower()>
<android.app.ActivityOptions: int getHeight()>
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<android.media.tv.TvStreamConfig: int access$402(android.media.tv.TvStreamConfig,int)>
<android.widget.LinearLayout: int getShowDividers()>
<android.graphics.drawable.shapes.Shape: float getHeight()>
<android.view.IWindow$Stub: android.view.IWindow getDefaultImpl()>
<android.location.LocationProvider: int getAccuracy()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getRowCount()>
<android.hardware.radio.V1_2.CellInfo: int hashCode()>
<android.widget.Toolbar: int getCurrentContentInsetEnd()>
<android.text.MeasuredParagraph: float getCharWidthAt(int)>
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.app.IUriGrantsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.NotificationManager: int zenModeToInterruptionFilter(int)>
<android.telephony.BarringInfo$BarringServiceInfo: int getBarringType()>
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>
<android.location.GnssNavigationMessage: int getSvid()>
<com.android.internal.view.IDragAndDropPermissions$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.WebAddress: int getPort()>
<android.telephony.NetworkScanRequest: int describeContents()>
<android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel: int hashCode()>
<android.app.admin.IDevicePolicyManager$Default: android.os.IBinder asBinder()>
<android.service.euicc.EuiccProfileInfo: java.lang.String getProfileName()>
<android.graphics.drawable.RippleBackground$1: java.lang.Object get(java.lang.Object)>
<android.content.Intent: int getContentUserHint()>
<com.android.internal.telephony.ISub$Stub$Proxy: int removeSubInfo(java.lang.String,int)>
<android.os.image.DynamicSystemManager: android.gsi.GsiProgress getInstallationProgress()>
<com.android.internal.telephony.GsmAlphabet: int[] access$100()>
<android.view.textclassifier.ConversationAction: java.lang.CharSequence getTextReply()>
<android.content.res.AssetManager: int findCookieForPath(java.lang.String)>
<android.telephony.TelephonyManager: boolean isIdle()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getLockTaskFeatures(android.content.ComponentName)>
<android.widget.ListView: int getDividerHeight()>
<android.telecom.TelecomAnalytics: java.util.List getCallAnalytics()>
<com.android.telephony.Rlog: int w(java.lang.String,java.lang.Throwable)>
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>
<com.android.internal.telephony.cdma.SmsMessage: android.telephony.SmsCbMessage parseBroadcastSms(java.lang.String,int,int)>
<android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher getDefaultImpl()>
<android.view.textclassifier.TextLanguage: java.lang.String getId()>
<android.view.WindowInsets: int getSystemWindowInsetRight()>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.net.wifi.nl80211.RadioChainInfo: int hashCode()>
<android.os.incremental.IIncrementalService$Stub$Proxy: byte[] getMetadataById(int,byte[])>
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getEffectsSuppressor()>
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>
<android.view.textclassifier.ConversationActions$Request: java.util.List getConversation()>
<android.telecom.TelecomManager: int getCallState()>
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>
<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock getLinearBlock()>
<android.text.style.CharacterStyle$Passthrough: android.text.style.CharacterStyle getUnderlying()>
<android.media.AudioFocusInfo: int getFlags()>
<android.view.CutoutSpecification: android.graphics.Rect getBottomBound()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ims.feature._$$Lambda$RcsFeature$RcsFeatureBinder$Ca_Lrg0AjuEm0MywLfQlW_OLbac: java.lang.Object get()>
<com.android.internal.view.IInputMethod$Default: android.os.IBinder asBinder()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.hardware.location.ContextHubClientCallback,java.util.concurrent.Executor)>
<android.graphics.drawable.LayerDrawable: int getEndPadding()>
<android.os.IDumpstateListener$Stub: android.os.IDumpstateListener getDefaultImpl()>
<android.view.KeyboardShortcutGroup: int describeContents()>
<android.telephony.CellSignalStrengthNr: int getSsRsrq()>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>
<android.net.nsd.NsdManager: com.android.internal.util.AsyncChannel access$000(android.net.nsd.NsdManager)>
<android.print.IPrintManager$Default: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>
<android.security.IKeyChainService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.Vr2dDisplayProperties: int getWidth()>
<android.media.AudioTrack: int playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>
<android.view.WindowInsets: android.graphics.Insets getStableInsets()>
<android.database.sqlite.SQLiteConnection: byte[] access$400()>
<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()>
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface(java.lang.String)>
<android.telephony.SmsCbMessage: int getMaximumWaitingDuration()>
<android.media.IAudioService$Default: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()>
<android.content.ContentResolver: int getUserId()>
<android.telecom.ParcelableCallAnalytics: int getCallType()>
<android.media.MediaCodecInfo$AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()>
<android.view.IWindowManager$Stub$Proxy: float getAnimationScale(int)>
<android.graphics.Paint: float getRunAdvance(char[],int,int,int,int,boolean,int)>
<android.view.WindowInsetsAnimation: float getFraction()>
<android.view.MotionEvent: float getHistoricalY(int,int)>
<android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$102(com.android.internal.app.MessageSamplingConfig)>
<android.os.Environment: java.io.File getDataDirectory(java.lang.String)>
<android.app.NotificationManager: java.util.List getAllowedAssistantAdjustments()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeDirectories(int,java.lang.String)>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.drm.DrmManagerClient: int access$400(android.drm.DrmManagerClient,int)>
<android.location.GpsMeasurement: float getCarrierFrequencyInHz()>
<android.ddm.DdmHandleAppName: android.ddm.DdmHandleAppName$Names getNames()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getJobStats()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
<android.content.pm.IDataLoader$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.Gravity: int getAbsoluteGravity(int,int)>
<android.telephony.CarrierConfigManager$Ims: android.os.PersistableBundle access$200()>
<android.print.PrintAttributes$Resolution: int getHorizontalDpi()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>
<android.content.pm.IPackageInstallerCallback$Stub: android.content.pm.IPackageInstallerCallback getDefaultImpl()>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<android.text.FontConfig$Family: java.lang.String getName()>
<android.os.IPowerManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()>
<android.app.job.JobParameters: android.net.Uri[] getTriggeredContentUris()>
<android.os.IUserManager$Default: long getUserStartRealtime()>
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>
<android.telephony.UiccSlotInfo: boolean isRemovable()>
<android.app.ITransientNotificationCallback$Default: android.os.IBinder asBinder()>
<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>
<android.widget.AbsListView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.internal.telephony.ISms$Default: int getPreferredSmsSubscription()>
<android.permission.PermissionManager: java.util.Set getAutoRevokeExemptionGrantedPackages()>
<android.telephony.ims.ImsCallForwardInfo: int getTimeSeconds()>
<android.app.blob.IBlobCommitCallback$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Canvas: int getMaximumBitmapHeight()>
<android.app.job.IJobCallback$Stub: android.os.IBinder asBinder()>
<android.media.ExifInterface: long getDateTime()>
<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>
<android.hardware.usb.IUsbManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.euicc.EuiccManager: boolean isSupportedCountry(java.lang.String)>
<com.android.internal.infra.IAndroidFuture$Stub: android.os.IBinder asBinder()>
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)>
<android.os.BasicShellCommandHandler: java.lang.String peekNextArg()>
<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>
<android.telecom.TelecomManager: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.os.INetworkManagementService$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ViewRootInsetsControllerHost: int getSystemBarsBehavior()>
<android.media.IMediaRouter2Manager$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageInstaller$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Bundle: int getSize()>
<android.app.timezone.DistroFormatVersion: int hashCode()>
<android.widget.ListPopupWindow: android.view.View getAnchorView()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.printservice.recommendation.IRecommendationsChangeListener getDefaultImpl()>
<android.view.View: android.view.View getSelfOrParentImportantForA11y()>
<android.app.ActivityManager$RecentTaskInfo: int describeContents()>
<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeyCharacteristics)>
<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)>
<android.app.servertransaction.ResumeActivityItem: int getTargetState()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)>
<android.media.Tokenizer: int access$112(android.media.Tokenizer,int)>
<com.android.internal.app.IAppOpsActiveCallback$Stub: android.os.IBinder asBinder()>
<android.os.StatsServiceManager$ServiceRegisterer: android.os.IBinder getOrThrow()>
<android.security.keystore.IKeystoreService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityWcdma: int getMcc()>
<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>
<android.telecom.PhoneAccountHandle: int hashCode()>
<android.media.tv.TvInputManager: java.util.List access$1000(android.media.tv.TvInputManager)>
<android.media.VolumeShaper$State: int describeContents()>
<android.hardware.usb.UsbEndpoint: int getAttributes()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getFullPowerWhitelist()>
<android.net.INetworkStatsService$Stub$Proxy: long getUidStats(int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>
<android.app.IRequestFinishCallback$Stub: android.app.IRequestFinishCallback getDefaultImpl()>
<android.view.ViewConfiguration: int getHoverTooltipShowTimeout()>
<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)>
<android.view.View$ForegroundInfo: int access$2600(android.view.View$ForegroundInfo)>
<com.android.internal.telephony.IMms$Default: boolean archiveStoredConversation(java.lang.String,long,boolean)>
<android.print.IPrintDocumentAdapterObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.renderscript.Byte4: byte get(int)>
<android.location.ILocationManager$Default: java.util.List getAllProviders()>
<android.os.BatterySaverPolicyConfig: int getLocationMode()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<android.graphics.drawable.ColorStateListDrawable: int getAlpha()>
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest()>
<android.print.PrintManager: java.util.List getPrintServices(int)>
<com.android.internal.widget.ScrollBarUtils: int getThumbOffset(int,int,int,int,int)>
<android.net.NetworkTemplate: int getMatchRule()>
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileCallerIdDisabledForUser(int)>
<android.media.IStrategyPreferredDeviceDispatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: java.util.List getTasks(int)>
<android.media.IRemoteVolumeController$Stub: java.lang.String getTransactionName(int)>
<android.app.ActivityOptions: int getRotationAnimationHint()>
<com.android.internal.app.ToolbarActionBar: boolean isTitleTruncated()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View: int getHeight()>
<android.view.inputmethod.InputMethodManager: boolean isInputMethodPickerShown()>
<android.view.textclassifier.SelectionEvent: boolean isTerminal()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()>
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>
<android.telephony.UiccCardInfo: int describeContents()>
<android.widget.inline.InlinePresentationSpec: int hashCode()>
<android.print.PrintDocumentInfo: long getDataSize()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfilePackages(android.content.ComponentName)>
<android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)>
<android.app.IAlarmManager$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.app.DirectAction: android.os.IBinder getActivityId()>
<android.content.pm.parsing.ParsingPackageImpl: int getTargetSdkVersion()>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>
<android.media.AudioManager: java.util.ArrayList access$200(android.media.AudioManager)>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams)>
<com.android.internal.app.ISoundTriggerService$Default: int unloadSoundModel(android.os.ParcelUuid)>
<android.view.IWindowId$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getTemporaryMetaData()>
<android.service.vr.IPersistentVrStateCallbacks$Stub: java.lang.String getTransactionName(int)>
<android.media.session.ISessionCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.backup.BackupManager: java.lang.String getDataManagementLabel(java.lang.String)>
<android.app.admin.PasswordMetrics: int determineComplexity()>
<android.animation.AnimatorSet$SeekState: long getPlayTime()>
<android.app.NotificationManager: java.util.List getNotificationChannelGroups()>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>
<android.hardware.usb.UsbPortStatus: int getCurrentPowerRole()>
<android.content.ContentProvider: android.os.UserHandle getUserHandleFromUri(android.net.Uri)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isMvnoMatched(int,int,java.lang.String)>
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDataDir(android.content.pm.parsing.ParsingPackageRead,int)>
<android.view.autofill.AutofillValue: int getListValue()>
<android.renderscript.Int4: int length()>
<com.android.internal.widget.ToolbarWidgetWrapper: int getVisibility()>
<android.hardware.input.ITabletModeChangedListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.IInputMethodManager$Default: android.os.IBinder asBinder()>
<android.opengl.GLLogWrapper$PointerInfo: int getStride()>
<android.media.AudioFocusRequest: android.media.AudioAttributes getAudioAttributes()>
<android.media.tv.TvContentRatingSystemInfo: int describeContents()>
<android.os.storage.IStorageManager$Default: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()>
<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>
<android.app.Notification$Action: int getSemanticAction()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean isRequestPinAppWidgetSupported()>
<android.media.tv.tunerresourcemanager.TunerLnbRequest: int describeContents()>
<android.util.SparseBooleanArray: int keyAt(int)>
<android.view.contentcapture.ViewNode: int getMaxTextEms()>
<android.location.GnssMeasurement: long getReceivedSvTimeUncertaintyNanos()>
<android.content.res.XmlBlock$Parser: int nextTag()>
<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>
<android.telephony.TelephonyManager: int getDataActivity()>
<android.location.GnssNavigationMessage: int getMessageId()>
<android.os.IThermalEventListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.os.LocaleList: java.util.Locale getFirstMatchWithEnglishSupported(java.lang.String[])>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient getDefaultImpl()>
<android.app.IActivityTaskManager$Default: int getDisplayId(android.os.IBinder)>
<android.debug.AdbManager: boolean isAdbWifiQrSupported()>
<android.content.pm.SharedLibraryInfo: java.lang.String getPath()>
<android.hardware.display.BrightnessCorrection: int describeContents()>
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.media.session.MediaController: android.media.session.MediaController$TransportControls getTransportControls()>
<android.security.KeyStore: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,android.security.keymaster.KeyCharacteristics)>
<android.print.IWriteResultCallback$Stub: android.print.IWriteResultCallback getDefaultImpl()>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.animation.AnimatorSet$3: int compare(java.lang.Object,java.lang.Object)>
<android.app.IActivityManager$Stub$Proxy: android.content.pm.ParceledListSlice getHistoricalProcessExitReasons(java.lang.String,int,int,int)>
<android.content.res.ResourcesKey: int hashCode()>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerAppOnCallingUser(java.lang.String)>
<android.graphics.Paint: java.lang.String getFontFeatureSettings()>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback asInterface(android.os.IBinder)>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
<android.app.AppOpsManager: android.app.AppOpsManager$PausedNotedAppOpsCollection pauseNotedAppOpsCollection()>
<android.location.Country: int hashCode()>
<android.app.assist.AssistStructure$ViewNode: android.view.ViewStructure$HtmlInfo getHtmlInfo()>
<android.telephony.TelephonyManager: int changeIccLockPassword(java.lang.String,java.lang.String)>
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getFormat()>
<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<android.graphics.drawable.AdaptiveIconDrawable: boolean isStateful()>
<android.widget.ListPopupWindow: int getSelectedItemPosition()>
<android.os.PowerManager$1: java.lang.Boolean recompute(java.lang.Void)>
<android.app.Notification$WearableExtender: java.util.List getPages()>
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)>
<android.net.IConnectivityManager$Default: android.net.Network getActiveNetworkForUid(int,boolean)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.media.IAudioService$Stub$Proxy: int getAllowedCapturePolicy()>
<android.content.pm.IShortcutService$Stub$Proxy: int getMaxShortcutCountPerActivity(java.lang.String,int)>
<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo[] newArray(int)>
<android.view.IWindowManager$Stub$Proxy: boolean isWindowTraceEnabled()>
<android.net.ITetheredInterfaceCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.VerifiedMotionEvent: int hashCode()>
<android.webkit.WebView$PrivateAccess: float getHorizontalScrollFactor()>
<android.view.View: float getElevation()>
<android.telephony._$$Lambda$CbGeoUtils$v_2S4s6H4lfdnoWt9tuWcyrnKkw: java.lang.Object apply(java.lang.Object)>
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getSignatureAlgorithmJcaSignatureAlgorithm(int)>
<android.view.View: int getScrollBarDefaultDelayBeforeFade()>
<com.android.internal.app.IAppOpsService$Default: int checkOperationRaw(int,int,java.lang.String)>
<android.widget.RadioGroup: int access$400(android.widget.RadioGroup)>
<android.telephony.TelephonyManager: java.lang.String getIccAuthentication(int,int,java.lang.String)>
<android.media.MediaPlayer$DrmInfo: java.util.UUID[] getSupportedSchemes()>
<android.content.pm.IPackageManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.INetworkScoreCache$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkStatsHistory: int getIndexBefore(long)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>
<android.os.IUserManager$Stub$Proxy: java.lang.String getSeedAccountType()>
<android.view.DisplayCutout: android.graphics.Rect getSafeInsets()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean disableDataConnectivity()>
<android.graphics.drawable.LayerDrawable: int getRightPadding()>
<com.android.ims.internal.IImsExternalCallStateListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.net.WifiKey: int describeContents()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>
<android.os.IIncidentCompanion$Default: android.os.IBinder asBinder()>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBlockCountRange()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Default: android.os.IBinder asBinder()>
<android.text.BoringLayout: int getParagraphDirection(int)>
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getDeviceOwnerName()>
<android.view.MotionEvent: float getHistoricalY(int)>
<android.content.pm.VerifierDeviceIdentity: int describeContents()>
<android.os.WorkSource$WorkChain: int describeContents()>
<android.app.IActivityTaskManager$Stub: android.app.IActivityTaskManager asInterface(android.os.IBinder)>
<android.os.IIncidentAuthListener$Stub: android.os.IIncidentAuthListener getDefaultImpl()>
<android.view.InputDevice$MotionRange: float getResolution()>
<android.widget.CheckBox: java.lang.CharSequence getAccessibilityClassName()>
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getInFileDescriptor()>
<android.app.admin.PasswordMetrics: int hashCode()>
<android.app.role.IRoleController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IShortcutService$Default: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)>
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()>
<android.view.IDisplayWindowRotationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.print.ILayoutResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.GridView: int getRequestedHorizontalSpacing()>
<android.net.TrafficStats: long getMobileTcpRxPackets()>
<android.hardware.camera2.ICameraOfflineSession$Stub: java.lang.String getTransactionName(int)>
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>
<android.window.WindowContainerTransaction$Change: int getActivityWindowingMode()>
<android.telephony.TelephonyManager: boolean getDataEnabled(int)>
<android.telephony.PreciseDataConnectionState: int describeContents()>
<android.app.prediction.AppTarget: android.app.prediction.AppTargetId getId()>
<android.os.SystemProperties: int access$200(long,int)>
<android.transition.Transition: java.util.List getTargetIds()>
<android.telephony.UiccSlotInfo$1: void <init>()>
<android.database.CursorWrapper: boolean isClosed()>
<android.hardware.ISerialManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.radio.IAnnouncementListener$Stub: java.lang.String getTransactionName(int)>
<android.webkit.WebView: int findAll(java.lang.String)>
<android.telephony.RadioAccessSpecifier: int hashCode()>
<android.media.tv.ITvInputHardware$Stub: java.lang.String getTransactionName(int)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getCallId()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)>
<com.android.internal.graphics.palette.Target: float getSaturationWeight()>
<android.hardware.camera2.utils.SizeAreaComparator: int compare(android.util.Size,android.util.Size)>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: com.android.internal.telephony.euicc.IEuiccCardController getDefaultImpl()>
<android.net.wifi.nl80211.IWificond$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.ColorStateList: int access$000(android.content.res.ColorStateList)>
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.incremental.IIncrementalServiceConnector asInterface(android.os.IBinder)>
<android.content.IOnPrimaryClipChangedListener$Stub: android.content.IOnPrimaryClipChangedListener getDefaultImpl()>
<com.google.android.mms.pdu.CharacterSets: java.lang.String getMimeName(int)>
<android.telecom.TelecomManager: android.content.ComponentName getDefaultPhoneApp()>
<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()>
<android.telephony.ims.ImsCallForwardInfo: int getCondition()>
<android.telephony.SubscriptionManager: void addSubscriptionInfoRecord(java.lang.String,java.lang.String,int,int)>
<android.app.backup.FullBackupDataOutput: int getTransportFlags()>
<android.app.DirectAction: android.content.LocusId getLocusId()>
<android.os.UserManager: boolean isDemoUser()>
<android.os.Environment: java.io.File getStorageDirectory()>
<android.telephony.CarrierRestrictionRules: int describeContents()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)>
<android.os.ParcelableParcel: android.os.Parcel getParcel()>
<android.content.pm.LauncherApps$AppUsageLimit: long getUsageRemaining()>
<android.hardware.display.BrightnessCorrection: int hashCode()>
<android.telephony.TelephonyManager: int getCarrierIdFromMccMnc(java.lang.String)>
<android.widget.Editor: android.graphics.drawable.Drawable getCursorDrawable()>
<android.view.autofill.AutofillValue: int hashCode()>
<android.app.IUidObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getCallingPackage(android.os.IBinder)>
<android.window.WindowContainerTransaction: int describeContents()>
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)>
<android.text.HtmlToSpannedConverter$Foreground: int access$1500(android.text.HtmlToSpannedConverter$Foreground)>
<android.location.GpsMeasurementsEvent: java.util.Collection getMeasurements()>
<com.android.internal.telephony.ITelephony$Default: boolean isDataConnectivityPossible(int)>
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getIndeterminateTintMode()>
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.lang.String interfaceDescriptor()>
<android.telephony.BarringInfo$1: void <init>()>
<android.media.MediaCodecInfo$VideoCapabilities: int getSmallerDimensionUpperLimit()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int transact(android.os.Bundle)>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>
<android.view.DragEvent: int describeContents()>
<android.app.Activity: java.lang.String getLocalClassName()>
<android.app.PendingIntent: java.lang.String getTargetPackage()>
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Point getAppTaskThumbnailSize()>
<android.hardware.face.IFaceService$Default: java.util.List getEnrolledFaces(int,java.lang.String)>
<android.media.soundtrigger.SoundTriggerManager: int getParameter(java.util.UUID,int)>
<android.telephony.TelephonyManager: boolean isApnMetered(int)>
<android.telephony.SubscriptionManager: int lambda$createSubscriptionGroup$7(java.lang.Integer)>
<android.media.AudioFocusRequest: int getFocusGain()>
<android.hardware.display.BrightnessCorrection$ScaleAndTranslateLog: int hashCode()>
<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers(boolean,boolean)>
<com.google.android.mms.pdu.PduPart: byte[] getName()>
<android.content.ContentProvider$Transport: int checkUriPermission(java.lang.String,java.lang.String,android.net.Uri,int,int)>
<com.android.internal.telephony.ITelephony$Default: java.util.List getPackagesWithCarrierPrivileges(int)>
<android.hardware.lights.ILightsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View$7: java.lang.Float get(android.view.View)>
<com.android.internal.widget.ILockSettings$Default: boolean getSeparateProfileChallengeEnabled(int)>
<android.app.IActivityManager$Default: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.view.IWindowManager$Default: int getDockedStackSide()>
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int)>
<android.telephony.data.ApnSetting: int getProfileId()>
<android.view.autofill.AutofillId: int getViewId()>
<android.app.blob.LeaseInfo: java.lang.CharSequence getDescription()>
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraLooper: android.hardware.Camera getCamera()>
<android.graphics.drawable.GradientDrawable: int getShape()>
<android.media.AudioManager: int getRingerModeInternal()>
<android.telephony.SubscriptionManager: int getDefaultDataPhoneId()>
<android.content.ContentProvider: boolean isTemporary()>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: int[] signalPoll()>
<android.view.ViewDebug$HardwareCanvasProvider: android.graphics.Canvas getCanvas(android.view.View,int,int)>
<com.android.internal.telephony.ITelephony$Default: int isMultiSimSupported(java.lang.String,java.lang.String)>
<android.app.ContextImpl: java.lang.String getPackageCodePath()>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPermissionPolicy(android.content.ComponentName)>
<android.content.pm.LauncherApps: android.content.pm.LauncherApps$PinItemRequest getPinItemRequest(android.content.Intent)>
<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int getStreamType()>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int)>
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.view.accessibility.IWindowMagnificationConnection getDefaultImpl()>
<android.location.GeocoderParams: java.util.Locale getLocale()>
<android.app.assist.AssistStructure: int access$202(android.app.assist.AssistStructure,int)>
<android.telephony.SubscriptionManager: android.net.Uri addSubscriptionInfoRecord(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getPidStats()>
<android.widget.TextView: float getShadowRadius()>
<android.content.res.AssetManager: java.util.Map getOverlayableMap(java.lang.String)>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.os.IRecoverySystemProgressListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.permission.IOnPermissionsChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.ICrossProfileApps$Stub$Proxy: java.util.List getTargetUserProfiles(java.lang.String)>
<android.renderscript.FieldPacker: int subI32()>
<android.telephony.ims.aidl.IImsConfigCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.google.android.mms.pdu.PduPart: byte[] getContentId()>
<android.webkit.WebView: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()>
<android.content.pm.IDexModuleRegisterCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getImplicitPermissions()>
<android.content.pm.ShortcutInfo: android.app.Person[] getPersons()>
<android.renderscript.Double3: int length()>
<android.app.contentsuggestions.ContentClassification: int describeContents()>
<android.app.AppOpsManager: int strDebugOpToOp(java.lang.String)>
<android.media.AudioAttributes: int getVolumeControlStream()>
<android.app.usage.NetworkStats$Bucket: int access$200(int)>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationLoaders: java.lang.ClassLoader getSharedLibraryClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>
<android.app.IStopUserCallback$Stub: android.os.IBinder asBinder()>
<android.media.midi.MidiPortImpl: int getPacketType(byte[],int)>
<android.hardware.radio.V1_0.CellIdentityLte: int hashCode()>
<android.view.contentcapture.IContentCaptureDirectManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.InputDevice: int getProductId()>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateBluetoothControllerActivityLocked()>
<android.filterfw.core.FrameFormat: int getBytesPerSample()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)>
<android.view.View: int getBottomPaddingOffset()>
<android.media.AudioManager: int getMode()>
<android.filterpacks.videosrc.MediaSource: int access$402(android.filterpacks.videosrc.MediaSource,int)>
<android.media.AudioPlaybackConfiguration: int hashCode()>
<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getSpanEndCache()>
<android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware asInterface(android.os.IBinder)>
<android.media.MediaFormat$FilteredMappedKeySet: java.util.Iterator iterator()>
<android.os.IThermalService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.usb.UsbDevice: boolean getHasVideoCapture()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.internal.hidl.safe_union.V1_0.Monostate: int hashCode()>
<android.hardware.radio.ITunerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledRunnable asRunnable()>
<android.view.accessibility.AccessibilityManager: boolean isHighTextContrastEnabled()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<com.android.ims.internal.IImsUt$Default: int queryCallBarringForServiceClass(int,int)>
<android.view.IInputMonitorHost$Stub: android.view.IInputMonitorHost getDefaultImpl()>
<android.view.textclassifier.TextLinks$Request: android.os.Bundle getExtras()>
<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<android.widget.TextView: java.util.Locale getTextLocale()>
<android.net.LinkProperties: java.util.List getStackedLinks()>
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback getDefaultImpl()>
<android.widget.TextView: int getBaseline()>
<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
<android.app.Service: android.content.ComponentName contentCaptureClientGetComponentName()>
<android.content.om.OverlayableInfo: int hashCode()>
<android.os.ParcelableParcel: int describeContents()>
<android.filterfw.core.SerializedFrame: int[] getInts()>
<android.service.gatekeeper.GateKeeperResponse: int describeContents()>
<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int getAudioRestriction()>
<android.renderscript.Float3: int length()>
<android.telephony.UiccCardInfo: int hashCode()>
<android.app.IWallpaperManager$Default: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.android.internal.view.InputBindResult: int describeContents()>
<android.app.ApplicationPackageManager: android.os.UserManager getUserManager()>
<android.telephony.PreciseDataConnectionState$1: android.telephony.PreciseDataConnectionState[] newArray(int)>
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>
<android.content.pm.LauncherApps$AppUsageLimit: long getTotalUsageLimit()>
<android.media.IAudioService$Default: int getVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.content.pm.PackageInstaller$Session: boolean isStaged()>
<android.hardware.fingerprint.IFingerprintService$Default: android.os.IBinder asBinder()>
<android.service.notification.ZenPolicy: int getVisualEffectStatusBar()>
<android.content.pm.IPackageMoveObserver$Stub: android.os.IBinder asBinder()>
<android.content.SyncStatusInfo: java.lang.String getEvent(int)>
<android.app.timezone.ICallback$Stub: android.app.timezone.ICallback asInterface(android.os.IBinder)>
<android.view.IWindowManager$Default: int getBaseDisplayDensity(int)>
<android.hardware.Sensor: float getResolution()>
<android.media.session.MediaController: android.media.session.ISessionController getSessionBinder()>
<android.hardware.Sensor: int getMaxDelay()>
<android.media.MediaRouter$RouteInfo: java.lang.Object getTag()>
<android.telephony.CellIdentityWcdma: int getUarfcn()>
<android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: int getScreenOnCount(int)>
<com.android.internal.app.LocalePicker$LocaleInfo: int compareTo(java.lang.Object)>
<android.app.usage.NetworkStats$Bucket: int access$702(android.app.usage.NetworkStats$Bucket,int)>
<android.os.health.HealthKeys$Constants: int getIndex(int,int)>
<android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
<android.content.RestrictionEntry: int hashCode()>
<android.view.View$9: java.lang.Object get(java.lang.Object)>
<android.os.BinderProxy: int getProxyCount()>
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int describeContents()>
<android.telephony.ImsiEncryptionInfo$1: void <init>()>
<android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener getDefaultImpl()>
<android.net.IpPrefix: int describeContents()>
<android.service.textclassifier.ITextClassifierService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.AudioFocusInfo: int describeContents()>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.hardware.ICameraService$Default: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()>
<android.telephony.ims.aidl.IImsConfig$Stub: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanNetScanCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getAttributionTag()>
<android.hardware.usb.IUsbManager$Default: java.util.List getPorts()>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUid(java.util.UUID,int)>
<android.telephony.SignalStrength: int getEvdoDbm()>
<android.content.res.ResourcesImpl: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>
<android.location.GnssClock: int describeContents()>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback getDefaultImpl()>
<android.telephony.PackageChangeReceiver: java.lang.String getPackageName(android.content.Intent)>
<android.webkit.IWebViewUpdateService$Stub: android.os.IBinder asBinder()>
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getShortcutConfigActivities(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.os.IDeviceIdleController$Stub: android.os.IBinder asBinder()>
<android.view.autofill.AutofillPopupWindow: int getAnimationStyle()>
<android.telephony.CarrierConfigManager$Gps: android.os.PersistableBundle access$100()>
<android.media.MicrophoneInfo: java.util.List getFrequencyResponse()>
<android.widget.ActionMenuView: int getPopupTheme()>
<android.hardware.CameraInfo: int describeContents()>
<android.content.UndoManager: int commitState(android.content.UndoOwner)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.internal.graphics.palette.Target: float getMinimumLightness()>
<android.content.ContentResolver$1: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<android.app.RemoteAction: java.lang.CharSequence getTitle()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getProcessStats()>
<android.window.IWindowContainerToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
<android.app.AppOpsManager$HistoricalPackageOps: int getAttributedOpsCount()>
<android.media.IAudioService$Default: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>
<android.content.UndoManager$UndoState: java.lang.CharSequence getLabel()>
<android.hardware.radio.TunerCallbackAdapter: boolean isAntennaConnected()>
<android.os.IUserManager$Default: android.os.PersistableBundle getSeedAccountOptions()>
<android.service.persistentdata.IPersistentDataBlockService$Default: boolean getOemUnlockEnabled()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)>
<android.hardware.ICamera$Stub: java.lang.String getTransactionName(int)>
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>
<android.app.ApplicationPackageManager: java.util.List getDeclaredSharedLibraries(java.lang.String,int)>
<android.text.style.StrikethroughSpan: int getSpanTypeIdInternal()>
<android.widget.FrameLayout: int getPaddingRightWithForeground()>
<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>
<android.service.textclassifier.ITextClassifierService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int available()>
<android.os.Debug$InstructionCount: int globalMethodInvocations()>
<android.app.timezone.DistroRulesVersion: int getRevision()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>
<android.media.MicrophoneInfo: android.media.MicrophoneInfo$Coordinate3F getOrientation()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabledForUser(int)>
<com.android.internal.view.menu.MenuItemImpl: int getNumericModifiers()>
<android.net.NetworkInfo: int getType()>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()>
<android.util.SparseLongArray: long get(int)>
<android.view.View: int getVerticalScrollbarWidth()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getChargeLevelStepTracker()>
<android.graphics.RenderNode: int getBottom()>
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)>
<android.view.autofill.IAutoFillManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.GnssMeasurement: double getTimeOffsetNanos()>
<android.view.textclassifier.ConversationActions: java.util.List getConversationActions()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>
<android.view.View: android.view.View getTooltipView()>
<android.telephony.TelephonyManager: boolean isRinging()>
<android.content.pm.parsing.component.ParsedComponent: android.content.ComponentName getComponentName()>
<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()>
<android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()>
<android.view.ViewRootImpl: android.view.View getView()>
<android.content.pm.IPackageManager$Default: java.lang.String getContentCaptureServicePackageName()>
<android.content.ClipData$Item: java.lang.CharSequence getText()>
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>
<android.app.IWallpaperManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>
<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getDataConnectionLinkProperties()>
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()>
<android.content.AutofillOptions: int describeContents()>
<android.net.NetworkCapabilities: android.net.TransportInfo getTransportInfo()>
<android.app.backup.IBackupManager$Stub$Proxy: android.content.ComponentName getCurrentTransportComponentForUser(int)>
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
<android.os.StrictMode$ViolationInfo: java.lang.String getStackTrace()>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.NetworkScorerAppData: int hashCode()>
<android.text.style.EasyEditSpan: int getSpanTypeIdInternal()>
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri)>
<android.media.session.IOnMediaKeyListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Environment: java.io.File getDataMiscDirectory()>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.style.BackgroundColorSpan: int describeContents()>
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.view.InputEventCompatProcessor: java.util.List processInputEventForCompatibility(android.view.InputEvent)>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>
<android.app.SystemServiceRegistry$119: java.lang.Object createService()>
<android.app.backup.IBackupCallback$Stub: android.os.IBinder asBinder()>
<android.os.image.DynamicSystemManager: boolean isInUse()>
<android.graphics.drawable.GradientDrawable: int getGradientType()>
<android.view.VerifiedInputEvent: int getSource()>
<android.content.pm.DataLoaderManager: android.content.pm.IDataLoader getDataLoader(int)>
<android.location.GnssMeasurementCorrections: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstantAppAndroidId(java.lang.String,int)>
<android.app.usage.IUsageStatsManager$Stub: android.os.IBinder asBinder()>
<android.service.dreams.IDreamManager$Default: android.content.ComponentName[] getDreamComponents()>
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuFreqTimes(int,int)>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes)>
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.hardware.radio.V1_2.CellInfoTdscdma: int hashCode()>
<android.media.midi.MidiDeviceInfo: int getInputPortCount()>
<android.os.Debug$MemoryInfo: int getTotalSharedClean()>
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.hardware.location.NanoAppBinary: byte[] getBinary()>
<android.permission.PermissionManager$SplitPermissionInfo: java.util.List getNewPermissions()>
<android.content.res.Resources: int calcConfigChanges(android.content.res.Configuration)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>
<android.net.ConnectivityManager: android.net.Network getBoundNetworkForProcess()>
<android.content.SyncAdapterType: int describeContents()>
<android.app.assist.AssistStructure$WindowNode: int getTop()>
<com.android.internal.telephony.IIntegerConsumer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.hardware.usb.UsbDevice: int getDeviceId()>
<android.text.AutoGrowArray$IntArray: int[] getRawArray()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppResolverSettingsComponent()>
<android.media.tv.TvInputHardwareInfo: int getType()>
<com.android.internal.policy.PhoneWindow: boolean getSharedElementsUseOverlay()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.hardware.fingerprint.IFingerprintClientActiveCallback getDefaultImpl()>
<android.hardware.lights.LightState: int getColor()>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.media.MediaRouter2Utils: java.lang.String getProviderId(java.lang.String)>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>
<android.graphics.Paint: int getOffsetForAdvance(java.lang.CharSequence,int,int,int,int,boolean,float)>
<android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService asInterface(android.os.IBinder)>
<android.webkit.MimeTypeMap: java.lang.String remapGenericMimeType(java.lang.String,java.lang.String,java.lang.String)>
<android.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()>
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>
<android.media.midi.MidiDeviceStatus: int describeContents()>
<android.app.role.RoleManager: java.util.List getRoleHoldersAsUser(java.lang.String,android.os.UserHandle)>
<com.android.internal.telephony.ITelephony$Default: boolean isConcurrentVoiceAndDataAllowed(int)>
<android.hardware.display.DeviceProductInfo: int hashCode()>
<android.widget.RemoteViews$Action: int describeContents()>
<android.os.IProgressListener$Default: android.os.IBinder asBinder()>
<android.media.tv.TvTrackInfo: int getAudioChannelCount()>
<android.media.IAudioService$Default: java.util.List getActivePlaybackConfigurations()>
<android.view.textclassifier.TextClassifierEvent$Builder: int access$000(android.view.textclassifier.TextClassifierEvent$Builder)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean enableModemForSlot(int,boolean)>
<android.telephony.UiccCardInfo: java.lang.String getIccId()>
<android.content.RestrictionEntry: int describeContents()>
<android.telephony.SubscriptionInfo: int getMnc()>
<android.view.accessibility.AccessibilityWindowInfo: int getType()>
<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int,int)>
<android.view.RemoteAnimationDefinition: android.view.RemoteAnimationAdapter getAdapter(int,android.util.ArraySet)>
<android.app.ContextImpl: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Default: android.os.IBinder asBinder()>
<android.hardware.location.ContextHubInfo: float getPeakMips()>
<com.android.internal.app.IAppOpsStartedCallback$Stub: com.android.internal.app.IAppOpsStartedCallback asInterface(android.os.IBinder)>
<android.content.pm.parsing.ParsingPackageImpl: int getNetworkSecurityConfigRes()>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()>
<com.android.internal.telephony.ISub$Default: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String,java.lang.String)>
<android.location.Criteria: int getVerticalAccuracy()>
<android.app.WallpaperColors: android.graphics.Color getPrimaryColor()>
<android.net.INetworkScoreService$Default: android.os.IBinder asBinder()>
<android.media.VolumePolicy: int hashCode()>
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerScanDurationMillis()>
<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>
<android.os.LocaleList: android.os.LocaleList getDefault()>
<android.os.IBatteryPropertiesRegistrar$Stub: java.lang.String getTransactionName(int)>
<android.location.LocationManager$GnssStatusListenerManager: boolean registerService(java.lang.Void)>
<android.app.assist.AssistStructure$ViewNode: android.view.autofill.AutofillValue getAutofillValue()>
<android.security.keystore.KeyGenParameterSpec: byte[] getAttestationChallenge()>
<android.app.usage.UsageStatsManager: int getUsageSource()>
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>
<android.os.IPowerManager$Stub$Proxy: boolean isScreenBrightnessBoosted()>
<com.android.internal.compat.CompatibilityChangeInfo: int getEnableAfterTargetSdk()>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: int describeContents()>
<com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>
<android.service.autofill.FillEventHistory$Event: java.util.Map getManuallyEnteredField()>
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>
<android.window.IDisplayAreaOrganizerController$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntent(java.lang.String)>
<android.hardware.radio.RadioManager$BandConfig: int getRegion()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureRequestKeys()>
<android.graphics.RenderNode: float getCameraDistance()>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getQuality()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()>
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>
<android.widget.RemoteViews: int access$1300(android.widget.RemoteViews)>
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()>
<android.net.lowpan.LowpanBeaconInfo: int access$102(android.net.lowpan.LowpanBeaconInfo,int)>
<android.media.MediaDrm$KeyRequest: byte[] getData()>
<android.telephony.IccOpenLogicalChannelResponse$1: android.telephony.IccOpenLogicalChannelResponse[] newArray(int)>
<android.hardware.display.IDisplayManager$Stub$Proxy: int[] getDisplayIds()>
<android.media.MediaRouter$RouteInfo: int getDeviceType()>
<android.graphics.RenderNode: int getTop()>
<android.text.FontConfig$Font: int getTtcIndex()>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)>
<android.app.LoadedApk: android.content.res.Resources getResources()>
<android.location.IGnssMeasurementsListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.Utils$2: int compare(android.util.Range,android.util.Range)>
<android.media.Ringtone: boolean isPlaying()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationCallback asInterface(android.os.IBinder)>
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3)>
<android.media.projection.IMediaProjection$Stub: android.os.IBinder asBinder()>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
<android.net.lowpan.LowpanCredential: byte[] getMasterKey()>
<android.widget.AbsListView: android.view.View getSelectedView()>
<android.view.autofill.AutofillManager: android.service.autofill.UserData getUserData()>
<android.location.ICountryDetector$Stub: android.os.IBinder asBinder()>
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.service.notification.ZenModeConfig: java.lang.String getConditionSummary(android.content.Context,android.service.notification.ZenModeConfig,int,boolean)>
<android.transition.TransitionManager: java.util.ArrayList access$000()>
<com.android.ims.internal.IImsEcbm$Default: android.os.IBinder asBinder()>
<android.telephony.SmsManager: com.android.internal.telephony.ISms access$000()>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>
<android.net.IConnectivityManager$Default: com.android.internal.net.VpnConfig getVpnConfig(int)>
<android.view.CutoutSpecification: android.graphics.Rect getTopBound()>
<android.view.IDisplayFoldListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.MergedConfiguration: android.content.res.Configuration getOverrideConfiguration()>
<android.content.ContentProvider: java.lang.String getCallingPackage()>
<android.content.pm.ShortcutInfo$Builder: int access$900(android.content.pm.ShortcutInfo$Builder)>
<com.android.internal.os.IResultReceiver$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName,int)>
<android.telephony.CellInfoLte: android.telephony.CellConfigLte getCellConfig()>
<android.telecom.TelecomManager: int getAllPhoneAccountsCount()>
<android.hardware.camera2.ICameraOfflineSession$Stub: android.os.IBinder asBinder()>
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)>
<android.os.storage.DiskInfo: java.lang.String getDescription()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.view.View: int getScrollX()>
<android.hardware.camera2.impl.CameraMetadataNative: byte[] readValues(int)>
<android.media.tv.TvStreamConfig: int describeContents()>
<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String getSynchronousMode()>
<android.os.PowerManager$WakeLock: java.lang.String getTag()>
<android.graphics.ImageDecoder: android.graphics.ImageDecoder$OnPartialImageListener getOnPartialImageListener()>
<android.os.IIncidentAuthListener$Default: android.os.IBinder asBinder()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float,int)>
<android.os.MemoryFile$MemoryInputStream: int read()>
<android.app.slice.ISliceManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.AppOpsManager$OpEntry: int getProxyUid(int,int)>
<android.view.ViewRootImpl: android.view.ImeFocusController getImeFocusController()>
<android.media.IPlayer$Stub: java.lang.String getTransactionName(int)>
<android.service.autofill.UserData: int describeContents()>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: int[] getSplitRevisionCodes()>
<android.media.MediaFormat$PrefixedKeySetWithPrefixRemoved: java.lang.String mapKeyToItem(java.lang.String)>
<android.net.IEthernetServiceListener$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: boolean handlePinMmi(java.lang.String)>
<android.view.InsetsSourceControl: int describeContents()>
<android.app.KeyguardManager: boolean isKeyguardLocked()>
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnForSubscriber(int,java.lang.String)>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
<android.net.NetworkStatsHistory: long getStart()>
<android.telephony.TelephonyDisplayInfo$1: android.telephony.TelephonyDisplayInfo createFromParcel(android.os.Parcel)>
<android.hardware.face.FaceManager: boolean isHardwareDetected()>
<android.telecom.PhoneAccountHandle: java.lang.String getId()>
<android.app.Activity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
<android.view.FrameMetricsObserver: android.graphics.HardwareRendererObserver getRendererObserver()>
<android.content.res.TypedArray: float getDimension(int,float)>
<android.view.Window: int getDefaultFeatures(android.content.Context)>
<android.os.IUserManager$Default: java.util.List getUsers(boolean,boolean,boolean)>
<com.android.internal.graphics.palette.Palette: int getMutedColor(int)>
<android.view.IWindowManager$Default: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>
<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.service.euicc.EuiccProfileInfo: java.util.List getUiccAccessRules()>
<android.content.Context: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)>
<android.text.Layout: float getPrimaryHorizontal(int)>
<android.hardware.camera2.legacy.RequestHolder: int numPreviewTargets()>
<android.content.pm.parsing.ParsingPackageImpl: int getLabelRes()>
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>
<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,android.os.UserHandle)>
<android.app.FragmentState: int describeContents()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getPhoneSubServiceRegisterer()>
<android.os.IServiceCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.PorterDuffColorFilter: android.graphics.PorterDuff$Mode getMode()>
<android.metrics.LogMaker: java.lang.String getPackageName()>
<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
<android.os.UserManager$CheckedUserOperationException: int getUserOperationResult()>
<android.service.vr.IVrManager$Stub$Proxy: boolean getVrModeState()>
<android.service.notification.IStatusBarNotificationHolder$Default: android.service.notification.StatusBarNotification get()>
<android.accessibilityservice.AccessibilityShortcutInfo: android.content.pm.ActivityInfo getActivityInfo()>
<android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getMobileRadioActiveTime(int)>
<com.android.internal.telephony.ITelephony$Default: boolean nvWriteCdmaPrl(byte[])>
<android.os.IIncidentCompanion$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<android.os.IServiceManager$Default: android.os.IBinder getService(java.lang.String)>
<android.telephony.CellSignalStrengthLte: int getLevel()>
<android.telephony.TelephonyManager: boolean nvWriteItem(int,java.lang.String)>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getWebScheme()>
<android.telecom.Logging.EventManager$EventRecord$EventTiming: java.lang.Object getKey()>
<android.location.Location: double getElapsedRealtimeUncertaintyNanos()>
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage createStorage(java.lang.String,android.os.incremental.IncrementalStorage,int)>
<android.filterfw.geometry.Quad: float getBoundingHeight()>
<android.view.VerifiedInputEvent: long getEventTimeNanos()>
<android.app.PictureInPictureParams: android.util.Rational getAspectRatioRational()>
<android.media.MediaRouter$RouteInfo: int access$000(android.media.MediaRouter$RouteInfo)>
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.app.contentsuggestions.ISelectionsCallback asInterface(android.os.IBinder)>
<android.security.keymaster.ExportResult: int describeContents()>
<android.app.SystemServiceRegistry: int access$008()>
<android.telephony.CellIdentityCdma: int getSystemId()>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>
<android.net.TestNetworkInterface: java.lang.String getInterfaceName()>
<com.android.internal.policy.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback getDefaultImpl()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>
<android.telephony.TelephonyManager: int getCurrentPhoneTypeForSlot(int)>
<android.app.backup.IBackupManager$Default: android.os.IBinder asBinder()>
<android.app.INotificationManager$Stub$Proxy: int getBlockedChannelCount(java.lang.String,int)>
<android.os.IHardwarePropertiesManager$Stub$Proxy: float[] getFanSpeeds(java.lang.String)>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: int getVoiceMessageCount(int)>
<android.hardware.location.IContextHubService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.image.IDynamicSystemService$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()>
<android.app.servertransaction.PauseActivityItem: int hashCode()>
<android.view.MotionEvent: int getAction()>
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>
<android.content.Context: java.lang.String getOpPackageName()>
<com.android.internal.telephony.IBooleanConsumer$Stub: android.os.IBinder asBinder()>
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>
<android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback asInterface(android.os.IBinder)>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowedWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.app.IUiModeManager$Default: int getCurrentModeType()>
<com.android.internal.telephony.SmsAddress: boolean isAlphanumeric()>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char,boolean)>
<android.net.ConnectivityManager: boolean isNetworkSupported(int)>
<android.view.RemoteAnimationAdapter: long getDuration()>
<android.util.AtomicFile: byte[] readFully()>
<com.android.internal.telephony.euicc.IEuiccController$Default: java.util.List getSupportedCountries(boolean)>
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()>
<android.app.KeyguardManager: int getMinLockLength(boolean,int)>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()>
<android.content.pm.PackageInstaller$SessionInfo: int getMode()>
<android.transition.ChangeTransform$2: android.graphics.PointF get(android.transition.ChangeTransform$PathAnimatorMatrix)>
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanCredential getLowpanCredential()>
<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>
<com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(android.net.NetworkTemplate,long,long,int)>
<android.content.IRestrictionsManager$Default: android.content.Intent createLocalApprovalIntent()>
<android.app.assist.AssistStructure$ViewNode: android.app.assist.AssistStructure$ViewNode getChildAt(int)>
<android.telephony.CellIdentityGsm: int getArfcn()>
<android.content.res.Resources$Theme: android.graphics.drawable.Drawable getDrawable(int)>
<android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener getDefaultImpl()>
<android.service.notification.NotificationListenerService$RankingMap: android.service.notification.NotificationListenerService$Ranking getRawRankingObject(java.lang.String)>
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getBadgedIcon(int)>
<android.content.pm.VersionedPackage: int hashCode()>
<android.view.IScrollCaptureController$Stub: java.lang.String getTransactionName(int)>
<android.telephony.emergency.EmergencyNumber: int getEmergencyServiceCategoryBitmask()>
<android.hardware.location.ContextHubManager: int unregisterCallback(android.hardware.location.ContextHubManager$Callback)>
<android.os.IHardwarePropertiesManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IPinnedStackListener$Stub: android.view.IPinnedStackListener getDefaultImpl()>
<android.content.pm.ShortcutManager: int injectMyUserId()>
<android.net.StaticIpConfiguration: android.net.LinkAddress getIpAddress()>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
<com.android.internal.inputmethod.IInputContentUriToken$Default: android.os.IBinder asBinder()>
<android.location.GpsClock: double getDriftUncertaintyInNsPerSec()>
<android.security.KeyStore: android.security.KeyStore getInstance()>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: java.lang.String getInterfaceName()>
<android.content.pm.PackageInstaller$SessionInfo: android.content.Intent getDetailsIntent()>
<android.view.View: int combineVisibility(int,int)>
<android.graphics.drawable.BitmapDrawable: android.graphics.PorterDuff$Mode getTintMode()>
<android.location.Address: java.lang.String getSubLocality()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivationState(int,java.lang.String)>
<com.android.internal.inputmethod.IIntResultCallback$Stub: com.android.internal.inputmethod.IIntResultCallback asInterface(android.os.IBinder)>
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleRight()>
<android.view.WindowMetrics: android.view.WindowInsets getWindowInsets()>
<android.net.ConnectivityManager: int registerNetworkProvider(android.net.NetworkProvider)>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getQueriesProviders()>
<android.media.session.ISession$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>
<android.os.VibrationEffect$Composition$PrimitiveEffect: int describeContents()>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
<android.view.ViewRootImpl: int getTextAlignment()>
<android.widget.Spinner$DropDownAdapter: long getItemId(int)>
<android.hardware.radio.TunerAdapter: boolean getMute()>
<android.net.Ikev2VpnProfile: android.net.ProxyInfo getProxyInfo()>
<android.os.HandlerThread: android.os.Handler getThreadHandler()>
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int shouldProcessCall(java.lang.String[])>
<android.hardware.usb.UsbEndpoint: int getInterval()>
<android.hardware.radio.RadioMetadata: int getBitmapId(java.lang.String)>
<android.net.NetworkPolicyManager: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)>
<android.text.BoringLayout: float getLineMax(int)>
<android.service.gatekeeper.IGateKeeperService$Stub: android.os.IBinder asBinder()>
<android.webkit.WebView: android.webkit.WebViewRenderProcessClient getWebViewRenderProcessClient()>
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getStateName(int)>
<android.filterfw.core.FrameFormat: int getBaseType()>
<android.net.Uri$OpaqueUri: android.net.Uri$Builder buildUpon()>
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: java.util.ArrayList getHashChain()>
<android.service.autofill.FieldClassification: java.util.List getMatches()>
<android.system.suspend.ISuspendControlService$Default: android.system.suspend.WakeLockInfo[] getWakeLockStats()>
<android.content.ContextWrapper: java.io.File getPreloadsFileCache()>
<android.service.notification.StatusBarNotification: android.metrics.LogMaker getLogMaker()>
<com.android.internal.util.ContrastColorUtil: int resolvePrimaryColor(android.content.Context,int,boolean)>
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getIntent()>
<android.hardware.radio.RadioMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>
<android.content.pm.BaseParceledListSlice: java.lang.String access$100()>
<android.app.backup.IRestoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.SystemSensorManager: android.content.Context access$300(android.hardware.SystemSensorManager)>
<android.filterfw.core.SimpleFrame: float[] getFloats()>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>
<android.app.Notification: java.lang.String getGroup()>
<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)>
<android.permission.PermissionManager: int checkPackageNamePermission(java.lang.String,java.lang.String,int)>
<android.text.Annotation: java.lang.String getKey()>
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getFilteredTasks(int,boolean)>
<android.graphics.fonts.FontFamily: long getNativePtr()>
<com.android.internal.content.om.OverlayScanner: java.util.Collection getAllParsedInfos()>
<android.hardware.input.IInputManager$Stub$Proxy: android.view.InputDevice getInputDevice(int)>
<android.graphics.drawable.VectorDrawable$VFullPath$6: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.view.ScrollCaptureTarget: android.view.View getContainingView()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>
<com.android.internal.app.IAppOpsCallback$Stub: android.os.IBinder asBinder()>
<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>
<android.telephony.SubscriptionManager: void clearSubscriptionInfo()>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>
<android.hardware.radio.ITuner$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.NetworkAgentConfig: int getLegacyType()>
<com.android.internal.telephony.SmsRawData: byte[] getBytes()>
<android.hardware.fingerprint.IFingerprintService$Stub: java.lang.String getTransactionName(int)>
<android.media.session.IOnVolumeKeyLongPressListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaRouter: int getRouteCount()>
<android.content.ContentProvider: java.lang.String getCallingAttributionTag()>
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)>
<android.view.textservice.SpellCheckerSubtype: java.util.Locale getLocaleObject()>
<android.media.soundtrigger.SoundTriggerManager: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel)>
<android.media.session.ISessionManager$Stub$Proxy: android.content.pm.ParceledListSlice getSession2Tokens(int)>
<android.hardware.contexthub.V1_0.ContextHub: int hashCode()>
<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.SelectionEvent toSelectionEvent()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder resetNetworkTypes()>
<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
<com.android.ims.internal.IImsUt$Default: int queryCallBarring(int)>
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>
<android.net.ConnectivityManager: android.net.Network getActiveNetworkForUid(int)>
<android.widget.Toolbar: android.widget.ActionMenuPresenter getOuterActionMenuPresenter()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.hardware.lights.ILightsManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.jar.StrictJarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<com.android.internal.telephony.euicc.IEuiccController$Stub: android.os.IBinder asBinder()>
<android.util.Rational: int intValue()>
<android.app.IServiceConnection$Stub: android.app.IServiceConnection asInterface(android.os.IBinder)>
<android.media.MediaDrm$MediaDrmStateException: int getErrorCode()>
<android.app.IActivityManager$Stub$Proxy: int[] getRunningUserIds()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()>
<android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>
<android.app.AppOpsManager: boolean isOperationActive(int,int,java.lang.String)>
<android.app.WindowConfiguration: android.graphics.Rect getAppBounds()>
<android.view.IRemoteAnimationFinishedCallback$Stub: android.view.IRemoteAnimationFinishedCallback getDefaultImpl()>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<com.android.internal.os.ZygoteInit: java.lang.ClassLoader createPathClassLoader(java.lang.String,int)>
<com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>
<android.app.usage.UsageEvents$Event: int getStandbyBucket()>
<android.media.AudioFocusInfo: int hashCode()>
<android.app.ActivityTransitionCoordinator$GhostViewListeners: android.view.View getView()>
<android.app.timezone.IRulesManager$Default: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.ICallback)>
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>
<android.app.compat.ChangeIdStateCache: java.lang.Boolean recompute(android.app.compat.ChangeIdStateQuery)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataEnabledForApn(int,int,java.lang.String)>
<android.app.backup.IBackupManager$Default: android.content.Intent getConfigurationIntentForUser(int,java.lang.String)>
<android.content.pm.parsing.component.ParsedPermission: int getProtection()>
<com.android.internal.view.FloatingActionMode: android.view.View getCustomView()>
<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>
<android.app.backup.IFullBackupRestoreObserver$Stub: android.app.backup.IFullBackupRestoreObserver getDefaultImpl()>
<android.telephony.SmsCbMessage: android.content.ContentValues getContentValues()>
<android.hardware.face.FaceManager: long generateChallenge()>
<android.content.pm.ProviderInfoList: java.util.List getList()>
<android.print.IPrintJobStateChangeListener$Stub: android.print.IPrintJobStateChangeListener asInterface(android.os.IBinder)>
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getClassName()>
<android.location.IBatchedLocationCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getInputFormats()>
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.Drawable)>
<android.net.TrafficStats: long getMobileRxBytes()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getBlockModes()>
<android.os.Environment: java.io.File getDataAppDirectory(java.lang.String)>
<android.content.Loader: android.content.Context getContext()>
<android.app.timedetector.ITimeDetectorService$Stub: android.os.IBinder asBinder()>
<com.android.internal.os._$$Lambda$6_ytl6NLMGWt_iQr4_PfakNWUKQ: java.lang.Object get()>
<android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher getDefaultImpl()>
<android.telephony.CellIdentityNr: int getPci()>
<android.app.ActivityManager$TaskDescription: android.graphics.drawable.Icon loadIcon()>
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getCancelLabel()>
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF$MarshalerSizeF: int getNativeSize()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getCameraTurnedOnTimer()>
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.IContextHubClient createPendingIntentClient(int,android.app.PendingIntent,long)>
<android.hardware.camera2.marshal.Marshaler: android.hardware.camera2.utils.TypeReference getTypeReference()>
<android.hardware.Camera: android.hardware.Camera$Parameters getParametersCopy(android.hardware.Camera$Parameters)>
<android.text.method.ArrowKeyMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>
<android.hardware.camera2.impl.CameraMetadataNative$Key: android.hardware.camera2.utils.TypeReference getTypeReference()>
<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.os.VibrationEffect$Waveform: long getDuration()>
<android.content.IContentService$Default: java.util.List getCurrentSyncs()>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getVideoTurnedOnTimer()>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()>
<com.android.internal.view.StandaloneActionMode: boolean isTitleOptional()>
<com.android.internal.os.RailStats: long getCellularTotalEnergyUseduWs()>
<android.media.midi.IMidiDeviceOpenCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.opengl.EGLObjectHandle: long getNativeHandle()>
<android.app.ApplicationPackageManager: java.util.List getInstantApps()>
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.net.lowpan.LowpanInterface: java.lang.String getRole()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getState()>
<android.content.res.XmlBlock$Parser: java.lang.String getClassAttribute()>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>
<android.view.MotionEvent: float getHistoricalSize(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getQueriesPackages()>
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwner()>
<android.telephony.CellIdentityWcdma: int getChannelNumber()>
<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getAchievableFrameRatesFor(int,int)>
<android.media.tv.ITvInputManager$Default: int getTvInputState(java.lang.String,int)>
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener asInterface(android.os.IBinder)>
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float getInterpolation(float)>
<com.android.internal.os.IResultReceiver$Default: android.os.IBinder asBinder()>
<android.media.AudioTrack: int getPlaybackHeadPosition()>
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>
<android.telephony.SubscriptionManager: int getDefaultVoicePhoneId()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int getGlobalAudioRestriction()>
<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>
<android.telephony.ModemActivityInfo$1: void <init>()>
<android.telephony.SmsCbCmasInfo: int getCategory()>
<android.telephony.ims.feature.CapabilityChangeRequest: java.util.List getCapabilitiesToDisable()>
<android.content.pm.Signature: int describeContents()>
<android.renderscript.Double4: int length()>
<android.content.pm.UserInfo: boolean isDemo()>
<android.app.IActivityManager$Stub$Proxy: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<android.graphics.drawable.LayerDrawable: int getId(int)>
<android.app.timezone.DistroFormatVersion: int describeContents()>
<android.graphics.Rect: int height()>
<android.content.pm.IPackageInstaller$Default: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.hardware.cas.V1_1.IMediaCasService$Proxy: int hashCode()>
<android.hardware.LegacySensorManager: int getSensors()>
<android.telephony.CellIdentityTdscdma: int getCpid()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isOrganizationOwnedDeviceWithManagedProfile()>
<android.telephony.SignalStrength: int getCdmaAsuLevel()>
<android.app.UiModeManager: boolean isUiModeLocked()>
<android.hardware.camera2.impl.CameraMetadataNative$Key: java.lang.Class getType()>
<android.graphics.animation.RenderNodeAnimator: long getTotalDuration()>
<android.app.DisabledWallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<com.android.internal.inputmethod.InputMethodPrivilegedOperationsRegistry: com.android.internal.inputmethod.InputMethodPrivilegedOperations get(android.os.IBinder)>
<android.widget.Spinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.android.internal.app.AlertController: int getIconAttributeResId(int)>
<android.app.trust.ITrustListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.autofill.AutofillManager: int access$2800(android.view.autofill.AutofillManager)>
<android.util.LongArray: int indexOf(long)>
<android.hardware.fingerprint.FingerprintManager: java.util.List getEnrolledFingerprints()>
<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()>
<android.view.IWindowManager$Default: int getPreferredOptionsPanelGravity(int)>
<android.app.LoadedApk: java.lang.String getPackageName()>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback asInterface(android.os.IBinder)>
<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.Display: int[] getSupportedColorModes()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isSaturationActivated()>
<android.media.midi.IMidiDeviceOpenCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.VerifiedMotionEvent: int describeContents()>
<android.content.pm.IPackageDeleteObserver2$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>
<android.app.blob.BlobStoreManager$Session: boolean isSameSignatureAccessAllowed()>
<android.app.ActivityThread$ProviderKey: int hashCode()>
<android.security.FileIntegrityManager: boolean isApkVeritySupported()>
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.util.ArrayList interfaceChain()>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathStart()>
<android.renderscript.RenderScript: long getMinorID()>
<android.webkit.WebView: boolean getRendererPriorityWaivedWhenNotVisible()>
<android.app.job.JobInfo: long getFlexMillis()>
<android.net.Uri$Builder: android.net.Uri$Builder path(android.net.Uri$PathPart)>
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeys()>
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)>
<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder getParent()>
<android.permission.PermissionManager$PermissionQuery: int hashCode()>
<android.content.pm.parsing.component.ParsedActivity: android.content.pm.ActivityInfo$WindowLayout getWindowLayout()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputSizes(int)>
<android.hardware.radio.ICloseHandle$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IPinnedStackController$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: boolean getDataEnabled(int)>
<android.content.ContextWrapper: android.os.Handler getMainThreadHandler()>
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()>
<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>
<android.security.keystore.ArrayUtils: byte[] concat(byte[],byte[])>
<com.android.internal.app.IAppOpsService$Default: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.location.ILocationManager$Default: android.location.LocationTime getGnssTimeMillis()>
<android.telephony.CellSignalStrengthGsm: int describeContents()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()>
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read()>
<android.content.res.ResourcesImpl: java.lang.String getResourceTypeName(int)>
<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] following(int)>
<android.os.incremental.IncrementalStorage: byte[] getFileMetadata(java.lang.String)>
<android.telephony.SubscriptionInfo: java.util.List getAllAccessRules()>
<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContextWrapper: int getNextAutofillId()>
<android.app.IInstrumentationWatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View: android.graphics.drawable.Drawable getHorizontalScrollbarTrackDrawable()>
<android.os.incremental.IIncrementalService$Default: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Default: android.os.IBinder asBinder()>
<android.service.textclassifier.ITextClassifierCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.SystemSensorManager: long access$200(android.hardware.SystemSensorManager)>
<android.metrics.LogMaker: int getCategory()>
<android.transition.Slide$3: float getGoneY(android.view.ViewGroup,android.view.View,float)>
<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()>
<android.os.Environment: java.io.File getDataUserDePackageDirectory(java.lang.String,int,java.lang.String)>
<android.app.usage.NetworkStats$Bucket: int getMetered()>
<android.security.keymaster.KeymasterArguments: boolean getBoolean(int)>
<android.app.ApplicationPackageManager: boolean isPackageAvailable(java.lang.String)>
<android.content.pm.IPinItemRequest$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>
<android.net.INetworkStatsService$Stub$Proxy: long getTotalStats(int)>
<android.content.pm.ILauncherApps$Default: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,java.lang.String,int,android.os.UserHandle)>
<com.android.internal.os.BatteryStatsImpl$Uid: int getUserActivityCount(int,int)>
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getProduct()>
<android.location.ICountryDetector$Stub: android.location.ICountryDetector getDefaultImpl()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal getInstance()>
<android.app.NotificationManager: int zenModeFromInterruptionFilter(int,int)>
<android.app.SystemServiceRegistry$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.widget.LinearLayout: int getDividerWidth()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionApnTypeBitMask()>
<android.telephony.SmsMessage: boolean shouldAppendPageNumberAsPrefix()>
<android.widget.Toast: int getDuration()>
<android.location.GeocoderParams: int describeContents()>
<android.text.style.AccessibilityClickableSpan: int describeContents()>
<android.media.AudioDeviceInfo: int hashCode()>
<android.telephony.UiccAccessRule: byte[] getCertHash(android.content.pm.Signature,java.lang.String)>
<android.view.IDisplayWindowRotationController$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)>
<android.hardware.camera2.CaptureRequest: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>
<android.media.session.ISessionManager$Stub: java.lang.String getTransactionName(int)>
<android.app.usage.StorageStatsManager: boolean isQuotaSupported(java.util.UUID)>
<android.telephony.data.ApnSetting$Builder: int access$2500(android.telephony.data.ApnSetting$Builder)>
<android.graphics.Color: int getHtmlColor(java.lang.String)>
<android.net.INetworkPolicyManager$Stub: android.net.INetworkPolicyManager asInterface(android.os.IBinder)>
<android.content.RestrictionEntry: java.lang.String[] getChoiceEntries()>
<android.telephony.CellIdentityNr$1: android.telephony.CellIdentityNr[] newArray(int)>
<android.text.Layout: int getParagraphRight(int)>
<android.hardware.input.InputDeviceIdentifier: int getProductId()>
<android.hardware.usb.UsbPortStatus: int getContaminantProtectionStatus()>
<com.android.internal.util.SyncResultReceiver: java.util.ArrayList getParcelableListResult()>
<android.net.IpConfiguration: android.net.ProxyInfo getHttpProxy()>
<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getBluetoothContactSharingDisabledForUser(int)>
<android.net.ITestNetworkManager$Stub: android.net.ITestNetworkManager getDefaultImpl()>
<android.telephony.NetworkRegistrationInfo: int getDomain()>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeUncertaintyInMeters()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera$Parameters access$1102(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.Camera$Parameters)>
<android.content.ContextWrapper: java.io.File getCrateDir(java.lang.String)>
<android.hardware.radio.V1_5.CellIdentityNr: int hashCode()>
<android.view.Choreographer: android.view.Choreographer getSfInstance()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.os.IBinder asBinder()>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub$Proxy: android.os.IBinder asBinder()>
<android.provider.DocumentsContract: android.os.Bundle getDocumentMetadata(android.content.ContentResolver,android.net.Uri)>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSystemCaptionsServicePackageName()>
<android.graphics.Paint: long getColorLong()>
<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()>
<android.content.pm.IPackageDeleteObserver2$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.radio.V1_4.CellInfo$Info: int hashCode()>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>
<android.graphics.drawable.VectorDrawable$VGroup$3: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(android.content.pm.ShortcutInfo)>
<android.media.tv.TvContentRating: java.lang.String getDomain()>
<android.app.IBackupAgent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: boolean isEmergencyAssistanceEnabled()>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
<android.app.backup.IBackupManager$Stub$Proxy: long getAvailableRestoreTokenForUser(int,java.lang.String)>
<android.security.net.config.Domain: int hashCode()>
<android.content.pm.ShortcutInfo: int getImplicitRank()>
<android.media.audiopolicy.AudioVolumeGroup: int describeContents()>
<com.android.ims.internal.IImsEcbmListener$Stub: android.os.IBinder asBinder()>
<android.view.WindowManager$LayoutParams: int getFitInsetsSides()>
<android.view.IGraphicsStatsCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.ITaskStackListener$Stub: android.app.ITaskStackListener getDefaultImpl()>
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)>
<android.content.pm.ShortcutManager$ShareShortcutInfo: int describeContents()>
<android.widget.PopupWindow: int getInputMethodMode()>
<android.content.ContentResolver: int checkUriPermission(android.net.Uri,int,int)>
<com.android.internal.widget.ICheckCredentialProgressCallback$Default: android.os.IBinder asBinder()>
<android.service.vr.IVrStateCallbacks$Stub: android.service.vr.IVrStateCallbacks asInterface(android.os.IBinder)>
<android.widget.AbsListView: int getSolidColor()>
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeScreenDoze(int)>
<android.transition.TransitionManager: android.util.ArrayMap access$100()>
<android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)>
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectTop()>
<android.app.AppOpsManager: android.app.AppOpsManager$NoteOpEvent access$400(android.util.LongSparseArray,int,int,int)>
<android.widget.Spinner: int getGravity()>
<android.os.IDeviceIdleController$Default: java.lang.String[] getRemovedSystemPowerWhitelistApps()>
<android.telephony.ims.aidl.IImsRcsFeature$Stub: java.lang.String getTransactionName(int)>
<android.telecom.TelecomManager: java.util.List getAllPhoneAccounts()>
<android.location.LocationManager$GnssStatusListenerManager: int access$1202(android.location.LocationManager$GnssStatusListenerManager,int)>
<android.app.trust.ITrustManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.Window: android.view.Window$WindowControllerCallback getWindowControllerCallback()>
<android.os.ISystemConfig$Default: java.util.List getDisabledUntilUsedPreinstalledCarrierApps()>
<android.os.IVoldMountCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.style.URLSpan: int describeContents()>
<android.net.Uri$OpaqueUri: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getSyncStats()>
<android.graphics.drawable.RotateDrawable: float getToDegrees()>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>
<android.security.keystore.ICredstoreTokenCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.INetworkPolicyManager$Stub: java.lang.String getTransactionName(int)>
<android.widget.AbsListView: android.view.View getAccessibilityFocusedChild(android.view.View)>
<com.android.internal.os.BatteryStatsImpl: int getPowerSaveModeEnabledCount(int)>
<android.widget.LinearLayout: int getDividerPadding()>
<android.os.IUserManager$Default: java.util.List getUserRestrictionSources(java.lang.String,int)>
<android.security.GateKeeper: android.service.gatekeeper.IGateKeeperService getService()>
<android.app.ActivityManager: int getLauncherLargeIconSize()>
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.hardware.radio.ITuner$Default: android.hardware.radio.RadioManager$BandConfig getConfiguration()>
<android.telephony.ims.aidl.IRcsFeatureListener$Default: android.os.IBinder asBinder()>
<android.view.VerifiedKeyEvent: int getKeyCode()>
<android.hardware.camera2.impl.CameraMetadataNative: int getEntryCount()>
<android.view.DragEvent: android.content.ClipData getClipData()>
<android.telephony.CbGeoUtils: android.telephony.CbGeoUtils$LatLng parseLatLngFromString(java.lang.String)>
<android.view.DisplayAdjustments: android.view.DisplayAdjustments$FixedRotationAdjustments getFixedRotationAdjustments()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getScanTimeCounter()>
<com.android.ims.internal.IImsMultiEndpoint$Stub: android.os.IBinder asBinder()>
<android.content.res.ColorStateList: int getDefaultColor()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable getIcon()>
<android.app.INotificationManager$Default: android.app.NotificationManager$Policy getNotificationPolicy(java.lang.String)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
<android.app.blob.BlobHandle: long getExpiryTimeMillis()>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Region getTransparentRegion()>
<android.os.storage.StorageManager: java.util.List getVolumeRecords()>
<android.util.LongSparseArray: int indexOfValueByValue(java.lang.Object)>
<android.telephony.CellInfoTdscdma: android.telephony.CellInfo sanitizeLocationInfo()>
<android.app.ActivityManager: int staticGetMemoryClass()>
<android.hardware.radio.ITuner$Stub$Proxy: android.graphics.Bitmap getImage(int)>
<android.webkit.WebHistoryItem: java.lang.Object clone()>
<android.widget.SmartSelectSprite$RectangleWithTextSelectionLayout: android.graphics.RectF getRectangle()>
<android.media.midi.MidiDeviceServer$1: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)>
<android.telephony.NetworkScanRequest: int hashCode()>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
<android.media.AudioTrack: int getAudioFormat()>
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: android.hardware.biometrics.BiometricAuthenticator$Identifier getId()>
<android.telephony.CellIdentityTdscdma: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()>
<android.graphics.drawable.GradientDrawable: float getGradientCenterX()>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>
<android.graphics.ImageDecoder: boolean getAsAlphaMask()>
<com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass valueOf(java.lang.String)>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(boolean)>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>
<android.util.proto.EncodedBuffer: int getRawVarint64Size(long)>
<android.content.pm.ModuleInfo: int hashCode()>
<android.content.IntentSender: java.lang.String getCreatorPackage()>
<android.view.InsetsSource: int hashCode()>
<android.view.textclassifier.ExtrasUtils: java.lang.String getEntityType(android.os.Bundle)>
<android.app.IActivityManager$Stub$Proxy: boolean isAppFreezerSupported()>
<android.graphics.Bitmap: int getDefaultDensity()>
<android.view.autofill.AutofillManager: java.util.List getAvailableFieldClassificationAlgorithms()>
<android.app.Notification$WearableExtender: int getCustomContentHeight()>
<android.os.HardwarePropertiesManager: float[] getFanSpeeds()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: int getCallWaitingStatus(int)>
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()>
<android.os.IVold$Stub$Proxy: android.os.IBinder asBinder()>
<android.transition.Transition: java.util.List getTargetNames()>
<android.hardware.usb.UsbAccessory: int hashCode()>
<android.view.InputDevice: java.lang.String getDescriptor()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getLaunches(int)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.SyncResultReceiver: android.os.Parcelable getParcelableResult()>
<android.app.ExpandableListActivity: long getSelectedPosition()>
<android.telecom.PhoneAccount: java.lang.String getGroupId()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: com.android.internal.view.IInlineSuggestionsRequestCallback asInterface(android.os.IBinder)>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getCarrierConfigServiceRegisterer()>
<android.telephony.ims.aidl.IImsRegistration$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.PackageManager: java.lang.String[] getUnsuspendablePackages(java.lang.String[])>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.content.pm.ShortcutInfo: int describeContents()>
<android.view.View: java.util.ArrayList getFocusables(int)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setMultiSimPolicy(int)>
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: int describeContents()>
<android.view.Choreographer: long getFrameDelay()>
<android.app.ActivityThread: android.os.Looper getLooper()>
<android.view.MotionEvent: int getPointerId(int)>
<com.android.server.SystemConfig: android.util.ArrayMap getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>
<android.widget.TextView: int getOffsetForPosition(float,float)>
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar$Tab getTabAt(int)>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShortRaw()>
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)>
<android.app.assist.AssistStructure: android.content.ComponentName getActivityComponent()>
<android.app.IActivityManager$Stub$Proxy: int stopUserWithDelayedLocking(int,boolean,android.app.IStopUserCallback)>
<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()>
<android.service.notification.ZenModeConfig$ZenRule: int describeContents()>
<android.os.IProgressListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.os.IBinder asBinder()>
<android.app.KeyguardManager: boolean isDeviceSecure(int)>
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()>
<android.net.LinkProperties: android.net.CaptivePortalData getCaptivePortalData()>
<android.os.ICancellationSignal$Stub: android.os.ICancellationSignal getDefaultImpl()>
<android.renderscript.Short2: short length()>
<android.content.pm.IPackageManager$Default: int movePrimaryStorage(java.lang.String)>
<android.telephony.CellIdentityWcdma: java.lang.String getMobileNetworkOperator()>
<android.location.Location: java.lang.String getProvider()>
<android.widget.RemoteViewsAdapter: long getItemId(int)>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.content.pm.UserInfo: boolean isRestricted()>
<android.os.IPowerManager$Stub$Proxy: int getLastSleepReason()>
<com.android.internal.telephony.ISms$Default: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>
<android.service.gatekeeper.GateKeeperResponse: boolean getShouldReEnroll()>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.Resources$Theme: android.content.res.Resources$ThemeKey getKey()>
<com.android.server.SystemConfig: java.util.ArrayList getSplitPermissions()>
<android.os.IVibratorStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.VolumeShaper$Configuration: int describeContents()>
<android.app.backup.IBackupManager$Stub$Proxy: boolean isBackupEnabled()>
<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo access$1000(android.view.inputmethod.InputMethodManager)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()>
<android.media.AudioManager: boolean isSpeakerphoneOn()>
<android.widget.AbsListView$InputConnectionWrapper: int getCursorCapsMode(int)>
<android.widget.Editor$PositionListener: int getPositionYOnScreen()>
<android.metrics.LogMaker: int getProcessId()>
<android.location.IBatchedLocationCallback$Stub: android.location.IBatchedLocationCallback asInterface(android.os.IBinder)>
<com.android.internal.view.menu.IconMenuView: int getWindowAnimations()>
<android.media.AudioMetadata$AutoGrowByteBuffer: java.nio.ByteBuffer getRawByteBuffer()>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>
<android.os.LocaleList: int getFirstMatchIndexWithEnglishSupported(java.lang.String[])>
<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>
<android.app.contentsuggestions.IClassificationsCallback$Stub: java.lang.String getTransactionName(int)>
<android.security.keystore.recovery.KeyChainSnapshot: int getMaxAttempts()>
<android.hardware.camera2.params.StreamConfigurationDuration: int getWidth()>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.net.netstats.provider.INetworkStatsProviderCallback getDefaultImpl()>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>
<android.print.PrintAttributes$MediaSize: int getHeightMils()>
<android.hardware.display.DeviceProductInfo: java.lang.String getProductId()>
<android.graphics.drawable.RippleDrawable$RippleState: android.graphics.drawable.Drawable newDrawable()>
<com.android.internal.telephony.ISub$Default: int setIconTint(int,int)>
<android.view.View: int getLayoutDirection()>
<android.os.Messenger: int hashCode()>
<android.app.ActivityManager$TaskDescription: int getStatusBarColor()>
<android.widget.PopupWindow: int getWidth()>
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()>
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>
<android.media.session.ISessionController$Default: java.lang.String getTag()>
<android.app.FragmentManagerState: int describeContents()>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText(int)>
<android.location.LocationManager: android.content.Context access$1100(android.location.LocationManager)>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback getDefaultImpl()>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: android.os.IBinder asBinder()>
<android.service.oemlock.IOemLockService$Stub: android.os.IBinder asBinder()>
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.PersistableBundle getConfigForSubId(int,java.lang.String)>
<android.os.Environment: java.io.File getDataSystemCeDirectory()>
<android.filterfw.core.NativeFrame: float[] getFloats()>
<android.app.backup.RestoreSet: int describeContents()>
<android.content.pm.IShortcutService$Stub: android.content.pm.IShortcutService asInterface(android.os.IBinder)>
<android.content.IOnPrimaryClipChangedListener$Stub: android.os.IBinder asBinder()>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.PowerManager: int getLocationPowerSaveMode()>
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int getFrontendType()>
<android.widget.HeaderViewListAdapter: long getItemId(int)>
<android.os.Vibrator: int getDefaultRingVibrationIntensity()>
<android.app.admin.SystemUpdateInfo: int describeContents()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getConversations(boolean)>
<android.hardware.camera2.legacy.RequestThreadManager: long flush()>
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanEnd(java.lang.Object)>
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)>
<android.telephony.CellIdentity: int getType()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)>
<com.android.internal.widget.ActionBarOverlayLayout$5: java.lang.Object get(java.lang.Object)>
<android.content.pm.ILauncherApps$Stub: android.content.pm.ILauncherApps asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
<android.security.keystore.KeyGenParameterSpec: int getKeySize()>
<android.view.DragAndDropPermissions: int describeContents()>
<com.android.internal.telephony.ITelephony$Default: boolean needMobileRadioShutdown()>
<android.app.IActivityManager$Default: int getMemoryTrimLevel()>
<android.graphics.drawable.shapes.Shape: int hashCode()>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList getHashChain()>
<com.google.android.mms.pdu.PduHeaders: int getOctet(int)>
<android.media.AudioTrack: int getTimestampWithStatus(android.media.AudioTimestamp)>
<android.app.timezone.DistroFormatVersion: int getMajorVersion()>
<android.content.pm.IPackageManager$Default: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.internal.view.IInputContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.ImsRcsManager: android.telephony.ims.RcsUceAdapter getUceAdapter()>
<com.android.internal.view.IInputMethodSession$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>
<android.widget.TextView: int computeHorizontalScrollRange()>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getText()>
<android.os.Temperature: int describeContents()>
<android.app.admin.DevicePolicyManager: boolean isEphemeralUser(android.content.ComponentName)>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.ICrossProfileApps$Default: java.util.List getTargetUserProfiles(java.lang.String)>
<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>
<android.app.AppOpsManager$HistoricalOp: long getForegroundAccessCount(int)>
<android.view.View: int getFadingEdgeLength()>
<android.telephony.ModemActivityInfo: long getTimestamp()>
<android.content.Intent: int describeContents()>
<android.service.notification.IStatusBarNotificationHolder$Stub: android.service.notification.IStatusBarNotificationHolder getDefaultImpl()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getOverlayTarget()>
<android.content.ContextWrapper: int getUserId()>
<android.graphics.ColorSpace$Rgb: float[] getInverseTransform()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<android.media.RoutingSessionInfo: int getVolumeHandling()>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
<android.hardware.camera2.impl.CaptureCallbackHolder: int getRequestCount()>
<android.telephony.CellSignalStrengthGsm: int getDbm()>
<android.widget.PopupWindow: float getElevation()>
<android.util.EventLog$Event: int getThreadId()>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>
<android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()>
<com.android.internal.view.menu.ListMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.content.IIntentSender$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(java.lang.Object)>
<android.print.PrintAttributes$MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>
<android.text.StaticLayout: boolean getLineContainsTab(int)>
<android.widget.RemoteViews: int getSequenceNumber()>
<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()>
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int computeCurrentCountLocked()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()>
<com.android.internal.content.ReferrerIntent: int hashCode()>
<android.graphics.Canvas: int saveUnclippedLayer(int,int,int,int)>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.print.PrintJobInfo: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getPowerCounter()>
<android.content.ContextWrapper: java.io.File getSharedPreferencesPath(java.lang.String)>
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()>
<android.content.res.ResourcesImpl: android.content.res.ColorStateList loadColorStateList(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme)>
<android.transition.ChangeBounds$4: android.graphics.PointF get(android.view.View)>
<android.util.XmlPullAttributes: java.lang.String getAttributeNamespace(int)>
<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: boolean equals(java.lang.Object)>
<android.content.ISyncStatusObserver$Stub: android.content.ISyncStatusObserver asInterface(android.os.IBinder)>
<android.content.pm.parsing.component.ComponentParseUtils: java.lang.CharSequence getNonLocalizedLabel(android.content.pm.parsing.component.ParsedComponent)>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getRestrictionsProvider(int)>
<android.widget.OverScroller$SplineOverScroller: int access$300(android.widget.OverScroller$SplineOverScroller)>
<android.telephony.CellIdentityTdscdma: int getCid()>
<android.accessibilityservice.AccessibilityService: int access$002(android.accessibilityservice.AccessibilityService,int)>
<com.android.internal.os.BatteryStatsImpl$DualTimer: android.os.BatteryStats$Timer getSubTimer()>
<android.app.usage.IUsageStatsManager$Stub: java.lang.String getTransactionName(int)>
<android.security.keystore.AndroidKeyStorePublicKey: java.lang.String getFormat()>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>
<android.telephony.ServiceState: boolean getDataRoaming()>
<android.print.PrintAttributes$MediaSize: java.lang.String getId()>
<com.android.internal.util.StateMachine: int getLogRecSize()>
<android.hardware.face.FaceManager$AuthenticationResult: int getUserId()>
<android.os.storage.IStorageManager$Stub$Proxy: long getCacheSizeBytes(java.lang.String,int)>
<android.app.UriGrantsManager: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveTime(long,int)>
<android.view.autofill.IAutofillWindowPresenter$Stub: android.view.autofill.IAutofillWindowPresenter asInterface(android.os.IBinder)>
<android.content.BroadcastReceiver: int getResultCode()>
<android.view.IScrollCaptureClient$Stub: android.view.IScrollCaptureClient getDefaultImpl()>
<android.app.role.RoleManager: java.util.List getRoleHolders(java.lang.String)>
<android.app.DownloadManager$CursorTranslator: int getInt(int)>
<android.telephony.DataSpecificRegistrationInfo$1: void <init>()>
<android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>
<android.hardware.biometrics.CryptoObject: android.security.identity.IdentityCredential getIdentityCredential()>
<android.app.FragmentController: android.app.LoaderManager getLoaderManager()>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$o3geRfUaRT9tnqKKZbu1EbUxw4Q: java.lang.Object createService(android.content.Context)>
<android.os.StrictMode$InstanceTracker: int getInstanceCount(java.lang.Class)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<android.util.KeyValueListParser: int size()>
<android.telephony.PhoneCapability: int describeContents()>
<android.hardware.biometrics.IBiometricServiceReceiver$Default: android.os.IBinder asBinder()>
<android.telephony.CallForwardingInfo$1: void <init>()>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<android.text.style.UnderlineSpan: int getSpanTypeIdInternal()>
<android.view.SurfaceControlViewHost: android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()>
<android.os.IThermalEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.UserManager: int getUserTypeForStatsd(java.lang.String)>
<android.hardware.SensorPrivacyManager: android.hardware.SensorPrivacyManager getInstance(android.content.Context)>
<android.text.style.AccessibilityURLSpan: int getSpanTypeId()>
<android.view.ViewConfiguration: int getScaledMinimumScalingSpan()>
<android.os.SystemConfigManager: java.util.Set getDisabledUntilUsedPreinstalledCarrierApps()>
<android.content.pm.LauncherActivityInfo: java.lang.String getName()>
<android.renderscript.Type: int getYuv()>
<android.text.method.WordIterator: int following(int)>
<android.app.SearchableInfo: int getImeOptions()>
<android.hardware.radio.V1_0.SignalStrength: int hashCode()>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.graphics.palette.Palette: int getLightMutedColor(int)>
<android.os.IIncidentManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>
<android.media.IRemoteVolumeObserver$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.policy.PhoneFallbackEventHandler: android.telephony.TelephonyManager getTelephonyManager()>
<android.text.style.ForegroundColorSpan: int describeContents()>
<android.graphics.ImageDecoder: int getAllocator()>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getViewAt(int)>
<android.hardware.camera2.params.SessionConfiguration: int hashCode()>
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_2.CellIdentity)>
<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.style.SpellCheckSpan: int describeContents()>
<android.telephony.SmsManager: void <clinit>()>
<android.renderscript.Int3: int length()>
<android.telephony.NetworkRegistrationInfo: int describeContents()>
<android.hardware.usb.UsbDevice: java.lang.String getVersion()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath: int getPropertyIndex(java.lang.String)>
<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>
<android.util.LruCache: int size()>
<android.telephony.CellSignalStrengthTdscdma: int getRssi()>
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>
<android.telephony.CellSignalStrengthCdma: int getDbm()>
<android.companion.AssociationRequest: int describeContents()>
<android.telephony.CallForwardingInfo: int hashCode()>
<android.security.IKeyChainAliasCallback$Stub: java.lang.String getTransactionName(int)>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getCacheBytes(java.lang.String,java.lang.String)>
<android.service.notification.Adjustment: int describeContents()>
<android.hardware.radio.RadioMetadata: int putBitmapFromNative(int,byte[])>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierIdListVersion(int)>
<android.content.pm.PackageUserState: java.lang.String[] getOverlayPaths()>
<android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: com.android.internal.telephony.util.HandlerExecutor getHandlerExecutor()>
<android.location.GpsMeasurement: double getCodePhaseInChips()>
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayColorTemperature()>
<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>
<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int,int,int)>
<android.telephony.CellSignalStrengthWcdma: int hashCode()>
<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.Location: double getLatitude()>
<android.view.View: android.graphics.Insets getOpticalInsets()>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.net.wifi.nl80211.ISendMgmtFrameEvent getDefaultImpl()>
<android.transition.Visibility: java.lang.String[] getTransitionProperties()>
<android.telephony.LteVopsSupportInfo: int getEmcBearerSupport()>
<android.view.MotionEvent: int getToolType(int)>
<android.app.ApplicationPackageManager: java.util.List getPrimaryStorageCandidateVolumes()>
<android.view.View: float getRotationX()>
<android.app.ProfilerInfo: int describeContents()>
<android.database.MatrixCursor: long getLong(int)>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>
<android.hardware.radio.V1_0.CellInfoGsm: int hashCode()>
<android.net.RouteInfo: int getMtu()>
<android.content.pm.LauncherApps: java.util.List getShortcutInfo(java.lang.String,java.util.List,android.os.UserHandle)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.internal.view.InputBindResult: android.graphics.Matrix getActivityViewToScreenMatrix()>
<android.hardware.camera2.ICameraDeviceUser$Default: long flush()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>
<android.animation.ValueAnimator: java.lang.String getNameForTrace()>
<android.app.backup.IRestoreObserver$Default: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager$1: java.lang.Boolean recompute(android.app.ApplicationPackageManager$HasSystemFeatureQuery)>
<android.os.UserManager: boolean isRestrictedProfile()>
<com.android.internal.telephony.ITelephony$Default: int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String)>
<android.service.autofill.UserData: int getMaxCategoryCount()>
<android.content.IntentFilter: int getVisibilityToInstantApp()>
<android.os.IInstalld$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.IntArray: int binarySearch(int)>
<android.app.usage.UsageEvents$Event: android.app.usage.UsageEvents$Event getObfuscatedIfInstantApp()>
<android.media.IMediaRouterClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellIdentityLte$1: android.telephony.CellIdentityLte[] newArray(int)>
<android.content.pm.IPackageManager$Default: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean getRcsProvisioningStatusForCapability(int,int)>
<android.view.View: int getTextDirection()>
<android.view.InsetsAnimationControlImpl: android.util.SparseArray getControls()>
<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>
<com.android.internal.policy.IKeyguardDismissCallback$Stub: com.android.internal.policy.IKeyguardDismissCallback asInterface(android.os.IBinder)>
<android.location.IGnssStatusListener$Stub: android.os.IBinder asBinder()>
<android.hardware.display.IDisplayManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.netstats.provider.INetworkStatsProvider$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNode: int getMaxTextEms()>
<android.content.pm.parsing.component.ParsedActivity: boolean getSupportsSizeChanges()>
<android.location.GpsClock: long getTimeInNs()>
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)>
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.net.wifi.nl80211.NativeScanResult[] getScanResults()>
<android.view.autofill.AutofillManager: boolean isAutofillSupported()>
<android.transition.ChangeBounds: boolean getResizeClip()>
<android.app.IAppTask$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.cas.V1_1.ICas$Proxy: int release()>
<android.content.pm.ShortcutInfo$Builder: int access$500(android.content.pm.ShortcutInfo$Builder)>
<android.telephony.TelephonyManager: int invokeOemRilRequestRaw(byte[],byte[])>
<android.net.WifiKey: int hashCode()>
<android.app.ContextImpl: java.io.File getCodeCacheDir()>
<android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)>
<android.os.IVold$Stub: android.os.IVold asInterface(android.os.IBinder)>
<android.view.WindowInsetsAnimation: android.view.animation.Interpolator getInterpolator()>
<com.android.internal.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.telephony.RadioAccessFamily: int getRafFromNetworkType(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getOriginalPackages()>
<com.android.internal.telephony.ITelephony$Default: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<android.app.ITransientNotification$Stub: android.app.ITransientNotification asInterface(android.os.IBinder)>
<android.hardware.camera2.params.StreamConfigurationMap: int imageFormatToInternal(int)>
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.view.MotionEvent: int getActionButton()>
<android.view.View: int[] getAttributeResolutionStack(int)>
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)>
<android.hardware.camera2.impl.CameraMetadataNative$9: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.util.MemoryIntArray: int getMaxSize()>
<android.service.autofill.FillEventHistory: int getSessionId()>
<android.widget.TextView: float getTextSize()>
<com.google.android.mms.pdu.EncodedStringValue: int getCharacterSet()>
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>
<android.net.TrafficStats: long getTxBytes(java.lang.String)>
<android.net.LinkProperties: int hashCode()>
<android.app.ActivityManager: java.util.List getBugreportWhitelistedPackages()>
<android.app.IApplicationThread$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.SmsApplication: boolean isDefaultSmsApplication(android.content.Context,java.lang.String)>
<android.app.ActivityOptions: int getSplitScreenCreateMode()>
<android.app.contentsuggestions.ISelectionsCallback$Default: android.os.IBinder asBinder()>
<android.app.timezone.ICallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdWhitelistExceptIdle()>
<android.net.CaptivePortalData: int hashCode()>
<android.app.timezone.DistroRulesVersion: java.lang.String getRulesVersion()>
<android.os.BatterySaverPolicyConfig: boolean getForceBackgroundCheck()>
<android.telephony.CarrierRestrictionRules: java.lang.Boolean lambda$areCarrierIdentifiersAllowed$0(java.lang.Boolean)>
<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
<android.telephony._$$Lambda$Rj1EhkciYpNb4BkVxAk_tibQjhM: java.lang.Object applyOrThrow(java.lang.Object)>
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()>
<android.webkit.WebBackForwardList: java.lang.Object clone()>
<android.view.ViewConfiguration: int getScrollBarSize()>
<android.telephony.CellIdentityNr$1: void <init>()>
<android.app.DisabledWallpaperManager: int getWallpaperIdForUser(int,int)>
<android.content.pm.PackageManager: java.util.Set getWhitelistedRestrictedPermissions(java.lang.String,int)>
<android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader asInterface(android.os.IBinder)>
<android.app.ActivityManager: int getPackageImportance(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)>
<android.telephony.SmsMessage: int getStatusOnIcc()>
<android.app.usage.UsageEvents$Event: android.app.usage.UsageEvents$Event getObfuscatedNotificationEvent()>
<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,int,int)>
<android.app.IActivityTaskManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<android.app.Activity: android.app.Application getApplication()>
<android.hardware.display.DeviceProductInfo$ManufactureDate: int hashCode()>
<android.app.IAlarmManager$Stub$Proxy: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>
<android.internal.hidl.base.V1_0.IBase$Stub: android.os.IHwBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>
<android.webkit.FindAddress: java.lang.String findAddress(java.lang.String)>
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityConfig$Builder getDefaultBuilder(android.content.pm.ApplicationInfo)>
<android.os.INetworkManagementService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)>
<android.media.WebVttParser$3: android.media.TextTrackRegion parseRegion(java.lang.String)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.content.res._$$Lambda$ResourcesImpl$h3PTRX185BeQl8SVC2_w9arp5Og: java.lang.Object get()>
<android.telecom._$$Lambda$qa4s1Fm2YuohEunaJUJcmJXDXG0: java.lang.String getSessionId()>
<android.app.IActivityManager$Default: java.util.List getAllStackInfos()>
<android.service.persistentdata.PersistentDataBlockManager: byte[] read()>
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector access$102(android.hardware.camera2.legacy.GLThreadManager,android.hardware.camera2.legacy.CaptureCollector)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int addRngEntropy(android.security.keystore.IKeystoreResponseCallback,byte[],int)>
<android.widget.SearchView: int getSuggestionCommitIconResId()>
<android.view.IScrollCaptureController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)>
<android.os.MessageQueue: int postSyncBarrier()>
<android.hardware.display.IColorDisplayManager$Stub: android.hardware.display.IColorDisplayManager asInterface(android.os.IBinder)>
<android.os.IUserManager$Default: int getUserIconBadgeResId(int)>
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()>
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()>
<android.app.IAlarmManager$Stub: android.app.IAlarmManager asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Default: boolean getDoNotAskCredentialsOnBoot()>
<android.hardware.ISensorPrivacyListener$Stub: android.hardware.ISensorPrivacyListener getDefaultImpl()>
<android.app.NotificationChannel: java.lang.String getGroup()>
<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperColors getWallpaperColors(int,int,int)>
<android.telephony.SmsCbMessage: boolean isEmergencyMessage()>
<android.app.slice.ISliceManager$Stub$Proxy: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.window.ITaskOrganizerController$Default: java.util.List getRootTasks(int,int[])>
<android.location.GnssStatus: float getElevationDegrees(int)>
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)>
<android.telephony.CellInfoTdscdma$1: void <init>()>
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumHeight()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean rebootModem(int)>
<android.content.pm.ApplicationInfo: int describeContents()>
<android.os.IUserManager$Stub$Proxy: java.util.List getProfiles(int,boolean)>
<android.content.IntentFilter: java.lang.String getCategory(int)>
<android.location.Address: java.lang.String getCountryCode()>
<android.os.FactoryTest: int getMode()>
<android.content.res.TypedArray: int getType(int)>
<android.media.RingtoneManager: android.net.Uri getCacheForType(int)>
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)>
<com.android.internal.app.IVoiceInteractorCallback$Stub: com.android.internal.app.IVoiceInteractorCallback asInterface(android.os.IBinder)>
<android.media.MediaDescription: java.lang.String getMediaId()>
<android.media.session.ISessionControllerCallback$Default: android.os.IBinder asBinder()>
<android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getSplitPermissions()>
<android.debug.IAdbManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getDriverVersion()>
<android.app.AppOpsManager: java.util.List getPackagesForOps(int[])>
<android.app.IActivityController$Stub: android.os.IBinder asBinder()>
<android.util.RecurrenceRule$NonrecurringIterator: android.util.Range next()>
<android.database.MatrixCursor: int getCount()>
<android.app.BackStackRecord: boolean isEmpty()>
<android.animation.AnimatorSet: long getDuration()>
<android.os.health.HealthStats: java.lang.String getDataType()>
<android.telephony.PinResult: android.telephony.PinResult getDefaultFailedResult()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()>
<android.app.IUriGrantsManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getClusterTimeReaderInstance()>
<android.app.admin.DevicePolicyManager: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)>
<android.app.role.RoleManager: java.util.List getHeldRolesFromController(java.lang.String)>
<android.print.IPrintJobStateChangeListener$Stub: android.print.IPrintJobStateChangeListener getDefaultImpl()>
<android.widget.CompoundButton: android.graphics.PorterDuff$Mode getButtonTintMode()>
<android.content.pm.parsing.component.ParsedComponent: int getLabelRes()>
<android.widget.Editor: android.os.ParcelableParcel saveInstanceState()>
<android.app.Notification$MessagingStyle: java.lang.CharSequence getConversationTitle()>
<com.android.internal.telephony.ISub$Stub$Proxy: int addSubInfoRecord(java.lang.String,int)>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()>
<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>
<android.os.IIncidentCompanion$Default: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>
<android.net.LinkProperties: java.util.List getAllAddresses()>
<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.Drawable newDrawable()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int permissionToOpCode(java.lang.String)>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: android.os.IBinder asBinder()>
<android.content.IRestrictionsManager$Stub: android.content.IRestrictionsManager getDefaultImpl()>
<android.net.lowpan.ILowpanManagerListener$Stub: android.os.IBinder asBinder()>
<android.hardware.display.Curve: int describeContents()>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getZOffsetUncertaintyMm()>
<android.app.role.IRoleManager$Stub: android.app.role.IRoleManager asInterface(android.os.IBinder)>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
<android.service.notification.ZenPolicy: int getVisualEffectNotificationList()>
<android.app.IActivityTaskManager$Default: int getTaskForActivity(android.os.IBinder,boolean)>
<android.app.ISearchManager$Stub: android.app.ISearchManager getDefaultImpl()>
<android.app.RemoteInput: int describeContents()>
<android.accounts.Account: java.lang.String getAccessId()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<android.os.VibrationEffect$OneShot: int getAmplitude()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SignalStrength: int getCdmaEcio()>
<android.hardware.cas.V1_1.ICasListener$Proxy: java.util.ArrayList getHashChain()>
<android.content.pm.IOnAppsChangedListener$Stub: android.os.IBinder asBinder()>
<android.animation.ValueAnimator: android.animation.AnimationHandler getAnimationHandler()>
<android.app.RuntimeAppOpAccessMessage: int describeContents()>
<android.content.pm.ILauncherApps$Stub: java.lang.String getTransactionName(int)>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener getDefaultImpl()>
<android.hardware.radio.ITunerCallback$Stub: android.hardware.radio.ITunerCallback getDefaultImpl()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>
<android.view.autofill.IAutofillWindowPresenter$Stub: java.lang.String getTransactionName(int)>
<android.media.VolumePolicy: int describeContents()>
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.graphics.drawable.ColorStateListDrawable: android.content.res.ColorStateList getColorStateList()>
<android.app.IServiceConnection$Stub: android.app.IServiceConnection getDefaultImpl()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>
<android.app.JobSchedulerImpl: android.app.job.JobInfo getPendingJob(int)>
<android.app.DisabledWallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
<android.media.AudioGain: int maxValue()>
<android.telephony.ModemInfo$1: void <init>()>
<android.text.style.TextAppearanceSpan: int getTextSize()>
<android.view.inputmethod.InlineSuggestionsResponse: int hashCode()>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getDurationMinute()>
<android.hardware.location.ContextHubManager: int[] getContextHubHandles()>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger$MarshalerNativeByteToInteger: int getNativeSize()>
<android.telephony.TelephonyManager: java.lang.String getCdmaPrlVersion()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<android.app.AppOpsManager$HistoricalPackageOps: int getOpCount()>
<android.net.LinkProperties: java.util.List getAllInterfaceNames()>
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.media.midi.IMidiDeviceOpenCallback asInterface(android.os.IBinder)>
<android.media.IAudioFocusDispatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.ITetheredInterfaceCallback$Default: android.os.IBinder asBinder()>
<android.app.ContextImpl: java.lang.String getPackageResourcePath()>
<android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>
<android.print.PrintAttributes$MediaSize: android.util.ArraySet getAllPredefinedSizes()>
<android.view.MotionEvent: float getSize(int)>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>
<android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>
<com.android.internal.widget.LockPatternUtils: byte[] verifyCredential(com.android.internal.widget.LockscreenCredential,long,int)>
<android.app.FragmentManagerImpl: java.util.List getFragments()>
<android.view.InsetsAnimationControlImpl: int getAnimationType()>
<android.internal.hidl.base.V1_0.IBase$Proxy: int hashCode()>
<android.telephony.TelephonyHistogram$1: android.telephony.TelephonyHistogram createFromParcel(android.os.Parcel)>
<android.renderscript.Type: int getArrayCount()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>
<android.util.LongSparseArray: java.lang.Object get(long)>
<android.location.Address: java.lang.String getUrl()>
<android.app.SearchableInfo: int getVoicePromptTextId()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<android.telephony.SubscriptionManager: int[] getSubId(int)>
<android.view.View: android.graphics.Insets computeOpticalInsets()>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Debug: java.lang.String getRuntimeStat(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getText()>
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int countExcessivePowers()>
<android.os.StatFs: long getAvailableBlocksLong()>
<android.media.IAudioService$Default: int getStreamVolume(int)>
<android.security.keystore.KeystoreResponse: int describeContents()>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.app.IActivityTaskManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()>
<android.net.wifi.nl80211.IPnoScanEvent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getOrganizationNameForUser(int)>
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: int hashCode()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanStart(java.lang.Object)>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getPassphrase()>
<android.graphics.ImageDecoder$DecodeException: int getError()>
<android.hardware.camera2.CaptureRequest: int describeContents()>
<android.telephony.TelephonyManager: boolean isVideoCallingEnabled()>
<android.os.Message: int describeContents()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getOrganizationNameForUser(int)>
<android.graphics.fonts.Font: android.os.LocaleList getLocaleList()>
<android.net.TrafficStats: int getAndSetThreadStatsTag(int)>
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()>
<android.view.DisplayCutout: int hashCode()>
<android.os.IVold$Stub$Proxy: int fdeComplete()>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>
<android.media.AudioManager: java.util.List getAudioVolumeGroups()>
<android.hardware.cas.V1_0.ICasListener$Proxy: java.util.ArrayList getHashChain()>
<android.os.incremental.IIncrementalService$Stub: java.lang.String getTransactionName(int)>
<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<android.print.IPrintDocumentAdapterObserver$Stub: android.os.IBinder asBinder()>
<android.companion.ICompanionDeviceManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.Window: float getElevation()>
<android.accounts.Account$1: android.accounts.Account[] newArray(int)>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>
<android.view.textclassifier.TextSelection: int getSelectionEndIndex()>
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getTvInputList(int)>
<android.os.Debug: int getGlobalGcInvocationCount()>
<android.hardware.ICameraService$Stub: android.os.IBinder asBinder()>
<android.widget.RemoteViews$ViewGroupActionAdd: int mergeBehavior()>
<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams: int access$000(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams)>
<android.widget.ExpandableListView: int getPackedPositionType(long)>
<android.app.IApplicationThread$Default: android.os.IBinder asBinder()>
<android.service.vr.IVrManager$Default: android.os.IBinder asBinder()>
<android.media.audiopolicy.AudioMixingRule: int hashCode()>
<android.content.rollback.IRollbackManager$Stub$Proxy: android.content.pm.ParceledListSlice getRecentlyCommittedRollbacks()>
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.util.ArrayList getHashChain()>
<android.view.ViewGroup: android.view.View getDeepestFocusedChild()>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: com.android.ims.internal.IImsFeatureStatusCallback getDefaultImpl()>
<android.net.NetworkScoreManager: java.util.List getAllValidScorers()>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int,long)>
<android.media.session.MediaController: long getFlags()>
<android.view.autofill.IAutoFillManagerClient$Stub: android.view.autofill.IAutoFillManagerClient asInterface(android.os.IBinder)>
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getActiveTimeReaderInstance()>
<android.view.autofill.AutofillPopupWindow$2: android.view.ViewTreeObserver getViewTreeObserver()>
<android.graphics.ColorSpace$Rgb: float getMinValue(int)>
<android.os.Parcel: long[] createLongArray()>
<android.app.IWindowToken$Default: android.os.IBinder asBinder()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: java.lang.String getCurrentWebViewPackageName()>
<android.animation.AnimationHandler: android.animation.AnimationHandler getInstance()>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>
<android.view.autofill.IAutoFillManagerClient$Stub: android.view.autofill.IAutoFillManagerClient getDefaultImpl()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)>
<android.hardware.display.ColorDisplayManager: int getTransformCapabilities()>
<android.content.pm.parsing.ParsingPackageImpl: int getLogo()>
<android.view.MotionEvent: float getOrientation(int)>
<android.hardware.ISerialManager$Default: android.os.IBinder asBinder()>
<android.net.INetworkPolicyManager$Stub$Proxy: int getRestrictBackgroundByCaller()>
<android.view.autofill.AutofillPopupWindow: android.transition.Transition getExitTransition()>
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap(boolean)>
<android.app.VoiceInteractor$Request: android.app.Activity getActivity()>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>
<android.text.style.AlignmentSpan$Standard: int getSpanTypeId()>
<android.os.health.HealthStats: java.util.Map getMeasurements(int)>
<android.service.gatekeeper.IGateKeeperService$Default: long getSecureUserId(int)>
<android.net.RssiCurve: int describeContents()>
<android.widget.LinearLayout: int measureNullChild(int)>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getCarrierName()>
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getInstantAppCookie(java.lang.String,int)>
<android.view.InputDevice: boolean isEnabled()>
<android.view.RemoteAnimationAdapter: long getStatusBarTransitionDelay()>
<android.content.pm.PackageParser$Activity: int describeContents()>
<android.graphics.drawable.VectorDrawable: android.graphics.Insets getOpticalInsets()>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isUp()>
<android.content.pm.VerifierDeviceIdentity: int hashCode()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector$MarshalerRggbChannelVector: int getNativeSize()>
<android.location.GpsSatellite: float getElevation()>
<android.app.SearchableInfo: int getVoiceLanguageId()>
<android.animation.Animator: int getChangingConfigurations()>
<android.location.GpsMeasurement: int getBitNumber()>
<android.provider.DeviceConfig: float getFloat(java.lang.String,java.lang.String,float)>
<android.database.sqlite.SQLiteDatabase$OpenParams: int getOpenFlags()>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean)>
<android.net.IConnectivityManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)>
<android.app.Notification: int getBadgeIconType()>
<android.app.ActivityThread: android.content.res.Configuration getConfiguration()>
<android.content.res.TypedArray: int getInteger(int,int)>
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultDataSubId()>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>
<android.app.job.JobParameters: android.app.job.IJobCallback getCallback()>
<com.android.internal.graphics.palette.Target: float getTargetLightness()>
<android.telephony.TelephonyRegistryManager: void notifySubscriptionInfoChanged()>
<android.view.InputChannel: int describeContents()>
<android.widget.TextView: int getGravity()>
<android.view.SurfaceView: android.view.SurfaceControl getSurfaceControl()>
<android.view.MenuInflater$MenuState: android.view.SubMenu addSubMenuItem()>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String,int)>
<android.view.textclassifier.ConversationActions: java.lang.String getId()>
<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String getTag()>
<android.content.IntentFilter: java.lang.String getDataType(int)>
<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>
<android.view.IRotationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.contentcapture.ContentCaptureContext: android.content.ComponentName getActivityComponent()>
<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale getLocale()>
<android.view.View: java.lang.Object getTag()>
<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map getDabFrequencyTable()>
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>
<android.content.RestrictionsManager: boolean hasRestrictionsProvider()>
<com.android.internal.compat.IOverrideValidator$Stub: java.lang.String getTransactionName(int)>
<android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher getDefaultImpl()>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.os.IBinder asBinder()>
<android.media.IAudioServerStateDispatcher$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()>
<android.app.assist.AssistStructure$ViewNode: android.os.LocaleList getLocaleList()>
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
<android.widget.AbsSpinner: int getChildWidth(android.view.View)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.os.Debug$MemoryInfo: int getTotalRss()>
<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer getBinderInterface()>
<android.view.inputmethod.InputMethodManager: int lambda$getShortcutInputMethodsAndSubtypes$2(android.view.inputmethod.InputMethodInfo)>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>
<android.net.ITetheringStatsProvider$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.INetworkStatsService$Default: android.net.NetworkStats getDetailedUidStats(java.lang.String[])>
<android.app.blob.BlobStoreManager: long getRemainingLeaseQuotaBytes()>
<android.net.IpPrefix$1: int compare(android.net.IpPrefix,android.net.IpPrefix)>
<android.content.res.AssetManager: java.lang.String[] getNonSystemLocales()>
<android.security.net.config.ManifestConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
<android.view.WindowContentFrameStats: int describeContents()>
<android.text.FontConfig$Alias: java.lang.String getToName()>
<android.view.InsetsController: int getSystemBarsBehavior()>
<com.android.internal.app.IBatteryStats$Default: long getAwakeTimePlugged()>
<android.content.pm.IPackageDeleteObserver$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellSignalStrengthGsm$1: void <init>()>
<android.app.ResourcesManager: android.app.ResourcesManager getInstance()>
<android.net.Network: int hashCode()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.media.MediaRoute2Info: int getConnectionState()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>
<android.text.style.LocaleSpan: int getSpanTypeId()>
<android.content.ContextWrapper: android.content.ContentCaptureOptions getContentCaptureOptions()>
<android.hardware.camera2.params.RggbChannelVector: int hashCode()>
<android.view.contentcapture.ViewNode: int getId()>
<android.hardware.radio.ProgramList$Filter: int describeContents()>
<android.location.IGnssNavigationMessageListener$Stub: android.location.IGnssNavigationMessageListener getDefaultImpl()>
<android.hardware.location.IContextHubClient$Stub: java.lang.String getTransactionName(int)>
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>
<android.security.KeyStore$CertificateChainPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>
<android.media.IRecordingConfigDispatcher$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)>
<android.text.style.StrikethroughSpan: int describeContents()>
<android.printservice.recommendation.RecommendationInfo: java.lang.CharSequence getName()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.companion.ICompanionDeviceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>
<android.telephony.PreciseDataConnectionState: int hashCode()>
<android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getTransformCapabilities()>
<android.content.pm.parsing.component.ParsedPermissionGroup: int getPriority()>
<android.app.prediction.IPredictionManager$Stub: android.app.prediction.IPredictionManager asInterface(android.os.IBinder)>
<android.app.servertransaction.ClientTransaction: java.util.List getCallbacks()>
<android.content.pm.InstallSourceInfo: int describeContents()>
<android.app.ApplicationPackageManager: java.lang.String getSystemTextClassifierPackageName()>
<android.app.Notification$CarExtender: android.graphics.Bitmap getLargeIcon()>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.util.List getCerts()>
<android.database.BulkCursorNative: android.os.IBinder asBinder()>
<android.graphics.GraphicBuffer: int getHeight()>
<android.window.WindowContainerTransaction$Change: int access$802(android.window.WindowContainerTransaction$Change,int)>
<android.app.IActivityManager$Default: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<android.os.UserHandle: int getSharedAppGid(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVoWiFiRoamingSettingEnabled(int)>
<android.content.res.ResourcesImpl: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.media.RoutingSessionInfo: java.util.List getDeselectableRoutes()>
<android.widget.RemoteViews$ViewGroupActionAdd: int access$1800(android.widget.RemoteViews$ViewGroupActionAdd)>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>
<android.hardware.input.ITabletModeChangedListener$Stub: android.hardware.input.ITabletModeChangedListener getDefaultImpl()>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)>
<android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer getDefaultImpl()>
<android.security.net.config.ManifestConfigSource$DefaultConfigSource: java.util.Set getPerDomainConfigs()>
<com.android.internal.os.BatteryStatsImpl$Timer: int getCountLocked(int)>
<android.webkit.WebViewProviderInfo: int describeContents()>
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>
<android.view.textclassifier.ConversationAction: int describeContents()>
<android.hardware.usb.UsbInterface: int describeContents()>
<android.permission.IOnPermissionsChangeListener$Stub: android.permission.IOnPermissionsChangeListener asInterface(android.os.IBinder)>
<android.telephony.ims.aidl.IImsMmTelListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.radio.ProgramSelector: int getProgramType()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.ComponentName getDefaultPhoneApp()>
<android.view.IGraphicsStats$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: void toggleRadioOnOff()>
<android.telephony.CellSignalStrengthLte: boolean isValid()>
<android.location.GnssMeasurement: int describeContents()>
<android.app.INotificationManager$Default: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>
<android.media.AudioManager: boolean isMasterMute()>
<android.telephony.CellInfo: boolean isRegistered()>
<android.view.contentcapture.ViewNode: int getWidth()>
<android.graphics.drawable.RippleDrawable: android.graphics.Paint getRipplePaint()>
<android.hardware.usb.UsbManager: java.util.List getPorts()>
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)>
<android.media.MediaDescription: android.net.Uri getIconUri()>
<android.service.textclassifier.ITextClassifierCallback$Default: android.os.IBinder asBinder()>
<android.provider.FontRequest: java.lang.String getProviderAuthority()>
<android.print.IPrintServicesChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.filterfw.core.NativeBuffer: int getElementSize()>
<android.hardware.fingerprint.IFingerprintService$Stub: android.hardware.fingerprint.IFingerprintService asInterface(android.os.IBinder)>
<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: int getRequiredFlags()>
<android.app.RemoteInput: java.util.Set getAllowedDataTypes()>
<android.os.StrictMode$2: java.lang.Object initialValue()>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getId()>
<android.hardware.location.IContextHubClientCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<android.net.lowpan.ILowpanInterfaceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.session.ISession2TokensListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.aidl.IImsCallSessionListener$Default: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure: long getAcquisitionEndTime()>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.os.IBinder asBinder()>
<android.net.INetworkStatsService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.BarringInfo: android.telephony.BarringInfo createLocationInfoSanitizedCopy()>
<android.widget.AbsListView: int getCheckedItemCount()>
<android.widget.Spinner$DropdownPopup: java.lang.CharSequence getHintText()>
<android.telephony.TelephonyHistogram: int getAverageTime()>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,java.lang.String)>
<android.os.IIncidentDumpCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.ContrastColorUtil: int resolveSecondaryColor(android.content.Context,int,boolean)>
<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>
<android.media.AudioPortConfig: int samplingRate()>
<android.content.pm.ShortcutInfo: android.content.Intent[] getIntentsNoExtras()>
<android.view.MotionEvent: float getHistoricalOrientation(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isManagedKiosk()>
<com.android.ims.internal.IImsUt$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ResourcesManager: android.content.res.ResourcesKey access$200(android.app.ResourcesManager,android.content.res.ResourcesImpl)>
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForPackageForUser(long,long,int,java.lang.String,java.lang.String)>
<android.app.NotificationManager: int getImportance()>
<android.os.health.TimerStat: long getTime()>
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector access$100(android.hardware.camera2.legacy.GLThreadManager)>
<android.transition.Transition: long getDuration()>
<android.net.wifi.nl80211.IApInterface$Stub: java.lang.String getTransactionName(int)>
<android.net.UidRange: int count()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte[] newArray(int)>
<android.hardware.usb.IUsbManager$Stub$Proxy: java.util.List getPorts()>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String getId()>
<android.os.image.IDynamicSystemService$Default: boolean getAvbPublicKey(android.gsi.AvbPublicKey)>
<android.content.pm.ShortcutQueryWrapper: android.content.ComponentName getActivity()>
<android.inputmethodservice.SoftInputWindow: int getGravity()>
<android.hardware.radio.TunerAdapter: int cancel()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDischargeLevelStepTracker()>
<android.os.IVibratorStateListener$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)>
<android.accessibilityservice.AccessibilityService: java.lang.Object getSystemService(java.lang.String)>
<android.widget.ArrayAdapter: long getItemId(int)>
<android.app.Notification: java.lang.String getChannelId()>
<android.app.ITaskStackListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.PowerManager: boolean isLightDeviceIdleMode()>
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int)>
<android.telephony.BarringInfo$BarringServiceInfo: int getConditionalBarringTimeSeconds()>
<android.content.ContentProvider: android.net.Uri access$000(android.content.ContentProvider,android.net.Uri)>
<android.view.autofill.AutofillPopupWindow$2: boolean isAttachedToWindow()>
<android.content.res.GradientColor: int access$000(android.content.res.GradientColor)>
<android.location.GnssMeasurement: double getFullInterSignalBiasUncertaintyNanos()>
<android.net.wifi.nl80211.NativeScanResult: byte[] getInformationElements()>
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>
<android.app.Fragment: android.app.Activity getActivity()>
<android.media.MediaCas$1: android.hardware.cas.V1_0.IMediaCasService create()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
<android.database.IContentObserver$Stub: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)>
<android.telephony.UiccSlotInfo: boolean getIsActive()>
<android.media.TimedText: android.graphics.Rect getBounds()>
<android.media.session.PlaybackState: long getActiveQueueItemId()>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.net.netstats.provider.INetworkStatsProviderCallback asInterface(android.os.IBinder)>
<android.os.PowerManager: int getCurrentThermalStatus()>
<android.net.LinkAddress: int getScope()>
<android.telephony.TelephonyManager: int getImsRegTechnologyForMmTel()>
<android.os.SystemClock$3: long millis()>
<android.media.session.PlaybackState: java.util.List getCustomActions()>
<android.telephony.SignalStrength: int getGsmDbm()>
<android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)>
<android.widget.LinearLayout: int getVirtualChildCount()>
<android.os.incremental.V4Signature: byte[] getSigningData(long,android.os.incremental.V4Signature$HashingInfo,android.os.incremental.V4Signature$SigningInfo)>
<android.media.midi.IMidiDeviceListener$Stub: android.media.midi.IMidiDeviceListener asInterface(android.os.IBinder)>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>
<android.view.View: int computeHorizontalScrollExtent()>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback asInterface(android.os.IBinder)>
<android.hardware.camera2.TotalCaptureResult: int getSessionId()>
<android.telecom.PhoneAccountHandle: int describeContents()>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<android.media.AudioRecord: int getAudioSource()>
<android.net.Network$NetworkBoundSocketFactory: java.net.Socket createSocket()>
<android.os.storage.VolumeInfo: int getStateDescription()>
<android.view.textclassifier.ConversationActions$Message: android.app.Person getAuthor()>
<android.media.MediaDrm$CertificateRequest: byte[] getData()>
<android.hardware.location.IContextHubService$Stub$Proxy: int loadNanoApp(int,android.hardware.location.NanoApp)>
<android.graphics.drawable.VectorDrawable$VFullPath$7: java.lang.Object get(java.lang.Object)>
<android.service.notification.IConditionProvider$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1(int)>
<android.app.AutomaticZenRule: android.service.notification.ZenPolicy getZenPolicy()>
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()>
<android.os.IVold$Stub$Proxy: int fdeGetPasswordType()>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$grantDefaultRoles$0(android.app.role.IRoleController)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.renderscript.Int2: int elementSum()>
<com.android.internal.os.IShellCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.CameraManager: boolean isHiddenPhysicalCamera(java.lang.String)>
<android.net.MacAddress: int hashCode()>
<com.android.internal.content.PackageMonitor: int isPackageAppearing(java.lang.String)>
<android.filterfw.geometry.Rectangle: float getWidth()>
<android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider getDefaultImpl()>
<android.hardware.hdmi.HdmiRecordSources$RecordSource: int getDataSize(boolean)>
<android.app.ActivityManager$StackInfo: int describeContents()>
<com.android.internal.view.StandaloneActionMode: android.view.Menu getMenu()>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()>
<android.app.ActivityOptions: int getPendingIntentLaunchFlags()>
<android.print.PrinterId: android.content.ComponentName getServiceName()>
<android.widget.ActionMenuPresenter$SavedState: int describeContents()>
<android.service.autofill.UserData: android.util.ArrayMap getFieldClassificationAlgorithms()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
<android.app.blob.IBlobCommitCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telecom.Logging.Session: long getExecutionStartTimeMilliseconds()>
<android.app.admin.IDevicePolicyManager$Default: long getLastBugReportRequestTime()>
<android.widget.EditorTouchState: float getLastDownY()>
<android.location.GnssNavigationMessage: int getStatus()>
<android.media.IMediaRouterClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.RippleForeground$4: java.lang.Float get(android.graphics.drawable.RippleForeground)>
<android.net.IEthernetServiceListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.iris.IIrisService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.content.pm.IPackageInstallerSessionFileSystemConnector getDefaultImpl()>
<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)>
<com.android.internal.view.IInputMethodSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.print.PrintManager$PrintJobStateChangeListenerWrapper: android.print.PrintManager$PrintJobStateChangeListener getListener()>
<android.content.pm.PackageInstaller$SessionInfo: int getAutoRevokePermissionsMode()>
<android.text.SpannableStringInternal: int length()>
<com.android.internal.graphics.palette.Palette: int getVibrantColor(int)>
<android.graphics.drawable.DrawableWrapper: int getOpacity()>
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)>
<android.net.Uri$OpaqueUri: java.util.List getPathSegments()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.hardware.location.ContextHubClientCallback)>
<com.android.internal.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()>
<android.telephony.TelephonyManager: boolean supplyPuk(java.lang.String,java.lang.String)>
<android.os.storage.StorageManager: java.lang.String getBestVolumeDescription(android.os.storage.VolumeInfo)>
<android.media.soundtrigger.SoundTriggerManager: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(java.util.UUID,int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int abort(android.security.keystore.IKeystoreResponseCallback,android.os.IBinder)>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>
<android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiSupplStateTimer(int)>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>
<android.widget._$$Lambda$etfJkiCJnT2dqM2O4M2TCm9i_oA: java.lang.Object get()>
<android.app.ActivityManager$TaskSnapshot: int describeContents()>
<android.app.IWallpaperManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.renderscript.Allocation: android.renderscript.Allocation$MipmapControl getMipmap()>
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>
<android.view.ViewGroup: android.view.View getTransientView(int)>
<android.widget.TextView$Marquee: float getScroll()>
<android.view.IDisplayWindowRotationController$Default: android.os.IBinder asBinder()>
<android.media.Utils: java.lang.String getFileDisplayNameFromUri(android.content.Context,android.net.Uri)>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.SparseIntArray: int keyAt(int)>
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>
<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane getReflectingPlane()>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwnerNameOnAnyUser()>
<android.view.MotionEvent: float getTouchMinor(int)>
<android.view.IInputMonitorHost$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastBugReportRequestTime()>
<android.media.session.IActiveSessionsListener$Stub: android.os.IBinder asBinder()>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes,int,int)>
<android.telephony.CellSignalStrengthNr: android.telephony.CellSignalStrength copy()>
<android.app.Notification$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.MediaFormat: java.lang.Number getNumber(java.lang.String,java.lang.Number)>
<android.os.Build$Partition: java.lang.String getFingerprint()>
<android.renderscript.Long3: long length()>
<android.content.pm.parsing.component.ParsedMainComponent: int describeContents()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxBufferMillis()>
<android.hardware.face.FaceManager: void getFeature(int,int,android.hardware.face.FaceManager$GetFeatureCallback)>
<android.graphics.ParcelableColorSpace: int hashCode()>
<android.telephony.ims.aidl.IImsConfigCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.storage.VolumeInfo: java.io.File getInternalPath()>
<android.app.INotificationManager$Stub$Proxy: int getZenMode()>
<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>
<android.view.contentcapture.ContentCaptureContext: android.view.contentcapture.ContentCaptureSessionId getParentSessionId()>
<android.media.MediaRoute2Info: java.lang.CharSequence getDescription()>
<android.app.ActivityTransitionCoordinator: boolean isViewsTransitionComplete()>
<android.hardware.Sensor: int getMinDelay()>
<android.permission.IPermissionManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)>
<android.hardware.camera2.impl.CameraMetadataNative$14: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.telephony.SubscriptionInfo: boolean canManageSubscription(android.content.Context,java.lang.String)>
<android.util.SparseIntArray: int indexOfValue(int)>
<android.hardware.biometrics.IAuthService$Default: long[] getAuthenticatorIds()>
<android.os.IBatteryPropertiesRegistrar$Default: int getProperty(int,android.os.BatteryProperty)>
<android.hardware.radio.IRadioService$Stub: java.lang.String getTransactionName(int)>
<android.net.lowpan.LowpanScanner: int lambda$createScanOptionMap$0(java.lang.Integer)>
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace(java.lang.String)>
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>
<android.location.Address: java.lang.String getCountryName()>
<android.telephony.SignalStrength: int getWcdmaAsuLevel()>
<android.app.job.JobInfo: int hashCode()>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastForSubscriber(int,int,int)>
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>
<android.telephony.SmsCbLocation: boolean isInLocationArea(android.telephony.SmsCbLocation)>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.IHdmiControlService access$100(android.hardware.hdmi.HdmiControlManager)>
<android.media.AudioTrack: int getAudioSessionId()>
<android.view.accessibility.IAccessibilityManager$Default: android.os.IBinder getWindowToken(int,int)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>
<android.widget.SearchView: int getSuggestionRowLayout()>
<android.graphics.BlendModeColorFilter: android.graphics.BlendMode getMode()>
<android.os.IInstalld$Stub$Proxy: long[] getUserSize(java.lang.String,int,int,int[])>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.net.StaticIpConfiguration: int hashCode()>
<android.filterfw.core.GLEnvironment: int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
<android.os.ParcelableParcel: java.lang.ClassLoader getClassLoader()>
<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>
<android.telephony.TelephonyManager: boolean getSmsSendCapableForPhone(int,boolean)>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,android.os.UserHandle)>
<android.accounts.IAccountManager$Default: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)>
<android.app.Service: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()>
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()>
<android.service.dreams.IDreamManager$Stub: java.lang.String getTransactionName(int)>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection getDefaultImpl()>
<android.hardware.camera2.ICameraOfflineSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.TextView: java.lang.Object getServiceManagerForUser(java.lang.String,java.lang.Class)>
<android.util.ExceptionUtils: java.lang.Throwable getRootCause(java.lang.Throwable)>
<android.security.keystore.IKeystoreResponseCallback$Stub: android.security.keystore.IKeystoreResponseCallback asInterface(android.os.IBinder)>
<android.app.contentsuggestions.SelectionsRequest: android.os.Bundle getExtras()>
<android.os.storage.IStorageManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IRemoteVolumeObserver$Stub: android.os.IBinder asBinder()>
<android.location.LocationManager: java.lang.String getExtraLocationControllerPackage()>
<android.os.UserHandle: int getSharedAppGid(int,int)>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.appwidget.IAppWidgetHost$Stub: java.lang.String getTransactionName(int)>
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.WifiNl80211Manager$SignalPollResult signalPoll(java.lang.String)>
<android.location.Criteria: int access$002(android.location.Criteria,int)>
<com.android.internal.net.VpnProfile: java.util.List getAllowedAlgorithms()>
<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getName()>
<android.hardware.hdmi.HdmiPortInfo: int getId()>
<android.os.Parcel: int readInt()>
<android.app.IActivityTaskManager$Default: boolean getPackageAskScreenCompat(java.lang.String)>
<android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>
<android.view.View: int getMeasuredWidthAndState()>
<android.content.pm.PackageInstaller$Session: int getParentSessionId()>
<android.view.textclassifier.ConversationActions$Message: java.time.ZonedDateTime getReferenceTime()>
<android.app.IActivityTaskManager$Default: int getMaxNumPictureInPictureActions(android.os.IBinder)>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class,boolean)>
<com.android.internal.telephony.IMms$Stub$Proxy: boolean getAutoPersisting()>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<android.os.IThermalStatusListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$302(android.security.keystore.recovery.WrappedApplicationKey,byte[])>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.NetworkCapabilities getNetworkCapabilities()>
<android.app.ContextImpl: java.io.File getCacheDir()>
<android.content.ContextWrapper: java.io.File[] getObbDirs()>
<com.android.internal.os.BatteryStatsImpl: int describeContents()>
<android.telephony.TelephonyManager: boolean isDataAllowedInVoiceCall()>
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue getAutofillValue()>
<android.os.connectivity.CellularBatteryStats: int hashCode()>
<android.content.pm.BaseParceledListSlice: java.util.List getList()>
<android.net.LinkProperties: java.lang.String getPrivateDnsServerName()>
<android.transition.Transition: android.graphics.Rect getEpicenter()>
<com.android.internal.app.IAppOpsService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedInputMethodsForCurrentUser()>
<com.android.internal.telephony.ITelephony$Default: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)>
<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext getContentCaptureContext()>
<android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>
<android.os.IUserRestrictionsListener$Stub: android.os.IBinder asBinder()>
<android.service.notification.IStatusBarNotificationHolder$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.MediaController: java.util.List getQueue()>
<android.print.PrintAttributes: int hashCode()>
<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()>
<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()>
<android.view.IDisplayWindowRotationCallback$Stub: android.view.IDisplayWindowRotationCallback getDefaultImpl()>
<android.service.textclassifier.ITextClassifierCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.View: int getBottom()>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>
<com.android.internal.view.menu.IconMenuView: int getMaxItems()>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.VrManager: int getVr2dDisplayId()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.view.Surface getInputSurface()>
<android.content.pm.permission.SplitPermissionInfoParcelable: java.util.List getNewPermissions()>
<android.content.pm.LauncherActivityInfo: int getApplicationFlags()>
<android.os.storage.StorageVolume: java.lang.String getUuid()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<com.android.internal.telephony.ISub$Default: android.os.ParcelUuid createSubscriptionGroup(int[],java.lang.String)>
<android.app.ExpandableListActivity: long getSelectedId()>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.media.IAudioService$Default: int getRingerModeExternal()>
<android.media.tv.TvInputManager: java.util.List getHardwareList()>
<com.android.internal.telecom.ITelecomService$Stub: android.os.IBinder asBinder()>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getActiveNetworkForUid(int,boolean)>
<com.android.internal.app.MessageSamplingConfig: int getSampledOpCode()>
<android.view.View: android.view.autofill.AutofillId getAutofillId()>
<android.view.accessibility.IAccessibilityManager$Default: long getRecommendedTimeoutMillis()>
<android.os.IVold$Stub: android.os.IVold getDefaultImpl()>
<android.view.animation.ScaleAnimation: float resolveScale(float,int,int,int,int)>
<com.android.internal.util.FunctionalUtils: java.lang.String getLambdaName(java.lang.Object)>
<android.telephony.data.ApnSetting: int getMvnoTypeIntFromString(java.lang.String)>
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: boolean resetRadioConfig()>
<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int,int)>
<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>
<android.os.IRemoteCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageUserState: int hashCode()>
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>
<android.media.Tokenizer: int access$100(android.media.Tokenizer)>
<android.telephony.TelephonyManager: android.os.PersistableBundle getCarrierConfig()>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.textclassifier.TextLanguage: android.icu.util.ULocale getLocale(int)>
<android.graphics.Color: float[] getComponents(float[])>
<android.net.lowpan.LowpanIdentity: int describeContents()>
<android.service.dreams.IDreamManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>
<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId getParentAutofillId()>
<android.telephony.CallAttributes: android.telephony.CallQuality getCallQuality()>
<android.media.AudioManager: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getInstantAppIcon(java.lang.String)>
<android.telephony.BarringInfo$BarringServiceInfo: int describeContents()>
<android.util.proto.EncodedBuffer: int getRawZigZag32Size(int)>
<android.graphics.ColorSpace$Rgb: float[] getPrimaries()>
<android.telephony.TelephonyManager: int getDataActivationState()>
<android.transition.Visibility: int getMode()>
<android.net.IpPrefix: java.net.InetAddress getAddress()>
<android.util.TimingsTraceLog: java.util.List getUnfinishedTracesForDebug()>
<android.location.GpsNavigationMessage: byte getPrn()>
<android.app.IActivityTaskManager$Stub: java.lang.String getTransactionName(int)>
<android.graphics.RecordingCanvas: int getMaximumBitmapWidth()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>
<android.hardware.location.IContextHubService$Stub$Proxy: java.util.List getContextHubs()>
<android.content.ContentProvider: java.lang.String getCallingFeatureId()>
<android.net.wifi.nl80211.IScanEvent$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Default: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getServiceName()>
<com.android.internal.os.IDropBoxManagerService$Default: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: int getCarrierPrivilegeStatus(int)>
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>
<android.media.MediaCodec: android.media.MediaCodec$OutputFrame getOutputFrame(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getAllPhoneAccountsCount()>
<android.filterfw.core.NativeFrame: int[] getInts()>
<android.app.IActivityTaskManager$Stub$Proxy: android.os.Bundle getActivityOptions(android.os.IBinder)>
<android.content.res.XmlBlock$Parser: java.lang.String nextText()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.app.assist.AssistStructure: long getAcquisitionStartTime()>
<android.view.ViewRootInsetsControllerHost: android.view.inputmethod.InputMethodManager getInputMethodManager()>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: com.android.internal.telephony.euicc.IGetRulesAuthTableCallback getDefaultImpl()>
<android.text.style.SuggestionSpan: int describeContents()>
<android.content.ContentProvider: java.lang.String getReadPermission()>
<android.view.inputmethod.InputConnectionInspector: int getMissingMethodFlags(android.view.inputmethod.InputConnection)>
<android.telephony.data.ApnSetting: int getSkip464Xlat()>
<android.net.IpSecConfig: int describeContents()>
<android.telephony.CellIdentityGsm: int getPsc()>
<android.view.contentcapture.ViewNode: java.lang.String getIdPackage()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.os.IBinder asBinder()>
<android.content.pm.ICrossProfileApps$Stub: java.lang.String getTransactionName(int)>
<android.system.suspend.WakeLockInfo: int describeContents()>
<android.app.ITaskStackListener$Stub: android.os.IBinder asBinder()>
<android.telephony.CellIdentityLte: int[] getBands()>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>
<com.android.internal.os.BatteryStatsImpl: long getWifiActiveTime(long,int)>
<android.hardware.radio.V1_4.CellConfigLte: int hashCode()>
<com.android.internal.view.InlineSuggestionsRequestInfo: int hashCode()>
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomStartTime()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader asInterface(android.os.IBinder)>
<android.app.ActivityOptions: int getStartX()>
<android.content.pm.IDataLoaderStatusListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.print.IWriteResultCallback$Stub: android.print.IWriteResultCallback asInterface(android.os.IBinder)>
<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCache getInstance()>
<com.android.internal.telephony.ITelephony$Default: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)>
<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.MainContentCaptureSession getMainCaptureSession()>
<android.location.ILocationManager$Default: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.app.blob.IBlobStoreManager$Default: java.util.List getLeasedBlobs(java.lang.String)>
<android.app.ActivityOptions: int getCustomInPlaceResId()>
<android.telephony.ServiceState: int describeContents()>
<android.view.Window: boolean getAllowEnterTransitionOverlap()>
<android.view.ViewOverlay$OverlayViewGroup: boolean isEmpty()>
<android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer asInterface(android.os.IBinder)>
<android.telephony._$$Lambda$SubscriptionManager$1QOdrF5xwHkpZ5lglQiEDxcF7RA: int applyAsInt(java.lang.Object)>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance(java.util.Locale)>
<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: int getChangingConfigurations()>
<android.view.ViewGroup$ChildListForAccessibility: android.view.View getChildAt(int)>
<android.content.res.ResourcesImpl$ThemeImpl: java.lang.String[] getTheme()>
<android.os.BaseBundle: float[] getFloatArray(java.lang.String)>
<android.telephony.UiccCardInfo: int getSlotIndex()>
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getDataManagementIntentForUser(int,java.lang.String)>
<android.content.om.OverlayManager: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,android.os.UserHandle)>
<android.telecom.TelecomManager: boolean isInManagedCall()>
<android.app.admin.IDevicePolicyManager$Default: int logoutUser(android.content.ComponentName)>
<android.util.EventLog: java.lang.String getTagName(int)>
<android.net.NetworkState: int describeContents()>
<android.view.textclassifier.TextClassifierEvent: int describeContents()>
<android.os.Debug: int getGlobalExternalFreedCount()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.TextView$CharWrapper: int length()>
<android.telephony.CellSignalStrength: int getRscpDbmFromAsu(int)>
<android.view.IScrollCaptureClient$Stub: android.view.IScrollCaptureClient asInterface(android.os.IBinder)>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
<com.android.internal.policy.PhoneWindow: com.android.internal.policy.DecorView generateDecor(int)>
<android.app.job.IJobScheduler$Stub: android.app.job.IJobScheduler asInterface(android.os.IBinder)>
<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>
<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>
<android.media.MicrophoneInfo: int getGroup()>
<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>
<android.content.ClipData$Item: android.net.Uri getUri()>
<com.google.android.mms.pdu.SendReq: int getDeliveryReport()>
<android.hardware.input.InputDeviceIdentifier: java.lang.String getDescriptor()>
<android.content.pm.IPackageManager$Default: int checkPermission(java.lang.String,java.lang.String,int)>
<android.app.usage.NetworkStats$Bucket: int getState()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getDvbDeviceList()>
<android.os.TestLooperManager: java.util.concurrent.LinkedBlockingQueue access$600(android.os.TestLooperManager)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.MatrixCursor: int getType(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] getSplitClassLoaderNames()>
<android.transition.ChangeBounds$3: android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds)>
<android.graphics.drawable.TransitionDrawable$TransitionState: android.graphics.drawable.Drawable newDrawable()>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>
<android.telephony.SmsCbLocation: java.lang.String getPlmn()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<android.app.ISearchManager$Stub: android.app.ISearchManager asInterface(android.os.IBinder)>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeInfo[] listUIChanges()>
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>
<android.text.Layout: int getLineBaseline(int)>
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.security.keystore.IKeystoreOperationResultCallback getDefaultImpl()>
<android.content.ContentProvider$1: java.lang.Object doInBackground(java.lang.Object[])>
<android.view.textclassifier.TextSelection$Request: int getStartIndex()>
<android.view.contentcapture.ViewNode: android.os.Bundle getExtras()>
<android.view.animation.Transformation: float getAlpha()>
<android.content.pm.IPackageManager$Stub: android.os.IBinder asBinder()>
<android.net.IEthernetServiceListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>
<android.app.admin.FreezePeriod: int getEffectiveEndDay()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>
<com.android.internal.os.KernelSingleUidTimeReader: android.util.SparseArray getLastUidCpuTimeMs()>
<com.android.internal.content.om.OverlayConfig: int lambda$getSortedOverlays$2(com.android.internal.content.om.OverlayConfig$Configuration)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getForegroundServiceTimer()>
<android.telephony.SubscriptionInfo: int getCardId()>
<android.content.pm.parsing.component.ParsedActivity: int getConfigChanges()>
<android.location.GpsMeasurement: double getPseudorangeRateUncertaintyInMetersPerSec()>
<android.location.LocationManager: java.util.List getProviderPackages(java.lang.String)>
<android.graphics.SweepGradient: long createNativeInstance(long)>
<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()>
<android.content.pm.IPackageInstallerSession$Default: android.content.pm.DataLoaderParamsParcel getDataLoaderParams()>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.telephony.SubscriptionInfo: java.util.List getHplmns()>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBatteryPropertiesRegistrar asInterface(android.os.IBinder)>
<android.media.AudioTrack: int getState()>
<android.net.ISocketKeepaliveCallback$Stub: android.os.IBinder asBinder()>
<android.database.sqlite.SQLiteDatabase$OpenParams: int getLookasideSlotSize()>
<android.os.UserManager: int[] getProfileIds(int,boolean)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int configureOutputs(android.util.SparseArray)>
<android.view.accessibility.AccessibilityRequestPreparer: android.view.View getView()>
<android.net.IConnectivityManager$Default: android.net.Network getNetworkForType(int)>
<com.android.internal.view.StandaloneActionMode: android.view.View getCustomView()>
<com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>
<android.widget.TextView: java.lang.CharSequence getHint()>
<android.app.ApplicationPackageManager: int getPackageUidAsUser(java.lang.String,int)>
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerityRootHash(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo$1: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo createFromParcel(android.os.Parcel)>
<android.view.textclassifier.TextSelection: int describeContents()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getPackagesForOps(int[])>
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()>
<android.app.ActivityManager$TaskSnapshot: int getOrientation()>
<android.print.PrintJobInfo: java.lang.CharSequence getStatus(android.content.pm.PackageManager)>
<android.location.LocationRequest: float getSmallestDisplacement()>
<android.renderscript.Type: int getArray(int)>
<android.graphics.Insets: int describeContents()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getFallbackRoute()>
<com.android.internal.telephony.IMms$Default: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<android.location.ILocationManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_5.CellIdentity)>
<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry getNext()>
<android.app.backup.IRestoreSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)>
<android.app.Notification$TvExtender: boolean getSuppressShowOverApps()>
<android.net.nsd.NsdManager: java.util.concurrent.CountDownLatch access$100(android.net.nsd.NsdManager)>
<android.app.AppOpsManager: int extractFlagsFromKey(long)>
<com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>
<android.telephony.TelephonyManager: int getCurrentPhoneType(int)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ims.ImsSsInfo: int getClirOutgoingState()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()>
<android.app.servertransaction.TransactionExecutorHelper: int lastCallbackRequestingState(android.app.servertransaction.ClientTransaction)>
<android.app.admin.DevicePolicyManager: boolean isDeviceIdAttestationSupported()>
<android.telephony.SmsCbEtwsInfo: int getWarningType()>
<android.transition.Recolor: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDailyDischargeLevelStepTracker()>
<android.content.res.XmlBlock$Parser: int getIdAttributeResourceValue(int)>
<android.telephony.UssdResponse$1: android.telephony.UssdResponse createFromParcel(android.os.Parcel)>
<android.view.View$8: java.lang.Float get(android.view.View)>
<android.graphics.drawable.ColorDrawable: android.graphics.Xfermode getXfermode()>
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeLightDoze(int)>
<android.media.RemoteControlClient: int access$800(android.media.RemoteControlClient)>
<android.view.Choreographer$2: android.view.Choreographer initialValue()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String[] getLinkAddresses()>
<android.view.contentcapture.ViewNode: java.lang.String getHint()>
<com.google.android.mms.pdu.SendReq: int getReadReport()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Default: android.os.IBinder asBinder()>
<android.print.PrintManager: java.util.List getPrintServiceRecommendations()>
<com.android.internal.os._$$Lambda$RuntimeInit$ep4ioD9YINkHI5Q1wZ0N_7VFAOg: java.lang.Object get()>
<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getPublicExponent()>
<android.app.Activity: int getNextAutofillId()>
<android.view.ViewGroup: int getChildCount()>
<android.media.IAudioService$Stub$Proxy: boolean isMicrophoneMuted()>
<android.security.keymaster.OperationResult: int describeContents()>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.view.textclassifier.TextClassification$Request: int getEndIndex()>
<android.content.res.Resources$Theme: int getAppliedStyleResId()>
<android.os.BaseBundle: long getLong(java.lang.String)>
<android.util.SparseArray: int indexOfValueByValue(java.lang.Object)>
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int getClientId()>
<android.view.animation.Animation: float getScaleFactor()>
<android.content.pm.PackageInstaller$Session: android.content.pm.DataLoaderParams getDataLoaderParams()>
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: int getTypeLabelResource(int)>
<android.hardware.location.IContextHubCallback$Stub: android.hardware.location.IContextHubCallback asInterface(android.os.IBinder)>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: int getCallState()>
<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline(int)>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: android.os.IBinder asBinder()>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<android.view.View: android.view.autofill.AutofillValue getAutofillValue()>
<android.media.tv.TvInputManager: int getInputState(java.lang.String)>
<android.telephony.SubscriptionPlan: java.lang.CharSequence getTitle()>
<android.app.INotificationManager$Default: int getBlockedChannelCount(java.lang.String,int)>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>
<android.os.BatterySaverPolicyConfig: boolean getDisableAnimation()>
<com.android.internal.logging.InstanceId: int describeContents()>
<android.print.PrintAttributes$Resolution: java.lang.String getLabel()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager(int)>
<android.telephony.CallQuality: int describeContents()>
<android.net.NetworkInfo: java.lang.String getReason()>
<android.media.tv.TvInputManager: java.util.Map access$900(android.media.tv.TvInputManager)>
<android.os.connectivity.CellularBatteryStats: long getTxTimeMillis(int)>
<android.net.wifi.nl80211.IClientInterface$Stub: android.os.IBinder asBinder()>
<android.os.connectivity.WifiActivityEnergyInfo: int describeContents()>
<android.telephony.RadioAccessSpecifier$1: void <init>()>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] getTransportWhitelist()>
<android.os.AsyncTask: java.util.concurrent.ThreadFactory access$200()>
<android.print.IPrinterDiscoveryObserver$Stub: android.print.IPrinterDiscoveryObserver asInterface(android.os.IBinder)>
<android.graphics.drawable.VectorDrawable$VPath$1: android.util.PathParser$PathData get(android.graphics.drawable.VectorDrawable$VPath)>
<android.net.TrafficStats: long getUidRxPackets(int)>
<android.app.admin.DevicePolicyManager: java.util.List getOverrideApns(android.content.ComponentName)>
<android.util.SparseBooleanArray: int hashCode()>
<android.provider.Settings$Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)>
<android.app.admin.SystemUpdateInfo: int hashCode()>
<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getEvdoLevel()>
<android.view.ViewTreeObserver$CopyOnWriteArray: android.view.ViewTreeObserver$CopyOnWriteArray$Access start()>
<android.service.notification.NotificationListenerService: android.content.Context getContext()>
<android.net.wifi.nl80211.WifiNl80211Manager: android.os.Handler access$200(android.net.wifi.nl80211.WifiNl80211Manager)>
<android.location.GnssMeasurement: double getPseudorangeRateUncertaintyMetersPerSecond()>
<android.hardware.location.IContextHubService$Stub$Proxy: int registerCallback(android.hardware.location.IContextHubCallback)>
<android.app.backup.IBackupManager$Default: android.content.Intent getDataManagementIntent(java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String)>
<android.content.pm.PackageManager: java.util.Set getMimeGroup(java.lang.String)>
<android.widget.Spinner$DropDownAdapter: int getCount()>
<android.os.PowerManager: android.os.PowerSaveState getPowerSaveState(int)>
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>
<android.os.storage.VolumeInfo: java.lang.String getEnvironmentForState(int)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()>
<android.telephony.TelephonyManager: int getCarrierIdListVersion()>
<android.widget.AbsListView: int getTranscriptMode()>
<android.text.style.LeadingMarginSpan$Standard: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubscriptionCarrierId(int)>
<com.android.internal.telephony.ITelephony$Default: int getRadioPowerState(int,java.lang.String,java.lang.String)>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>
<com.android.internal.util.ContrastColorUtil: int getMutedColor(int,float)>
<android.content.pm.ShortcutManager: boolean isRateLimitingActive()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)>
<android.accessibilityservice.AccessibilityGestureEvent: int getGestureId()>
<android.telephony.euicc.DownloadableSubscription: java.lang.String getCarrierName()>
<android.app.EnterTransitionCoordinator: boolean isCrossTask()>
<android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>
<android.os.UserHandle: int getCallingUserId()>
<android.app.AppOpsManager: long access$5100(android.util.LongSparseLongArray,int,int,int)>
<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.content.pm.PackageUserState$SuspendParams: android.content.pm.PackageUserState$SuspendParams getInstanceOrNull(android.content.pm.SuspendDialogInfo,android.os.PersistableBundle,android.os.PersistableBundle)>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.view.autofill.IAugmentedAutofillManagerClient getDefaultImpl()>
<android.view.IRecentsAnimationController$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.os.BatterySipper: java.lang.String[] getPackages()>
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getVerticalThumbDrawable()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: android.os.IBinder asBinder()>
<android.view.IRecentsAnimationController$Stub: android.view.IRecentsAnimationController asInterface(android.os.IBinder)>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getDefaultRoute()>
<com.android.internal.view.IInputMethodManager$Default: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.view.AccessibilityInteractionController$PrivateHandler: java.lang.String getMessageName(android.os.Message)>
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProvider getProviderBinder()>
<android.view.View: int getImportantForAccessibility()>
<android.location.LocationRequest: int getQuality()>
<android.app.usage.UsageStats: int describeContents()>
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,java.lang.String,android.view.accessibility.IAccessibilityInteractionConnection)>
<android.graphics.Canvas: int save()>
<android.hardware.camera2.params.RecommendedStreamConfiguration: int getUsecaseBitmap()>
<android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray getWindowsOnAllDisplays(int)>
<com.android.internal.telephony.ITelephony$Default: boolean isInEmergencySmsMode()>
<android.widget.PopupWindow: android.graphics.Rect getEpicenterBounds()>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.location.GnssReflectingPlane: int describeContents()>
<android.os.IncidentManager$IncidentReport: int describeContents()>
<android.content.ContextWrapper: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)>
<android.hardware.radio.TunerAdapter: java.util.Map getParameters(java.util.List)>
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanStart(java.lang.Object)>
<android.app.Fragment: android.content.Context getContext()>
<android.hardware.camera2.params.Capability: android.util.Range getZoomRatioRange()>
<android.hardware.camera2.params.StreamConfigurationDuration: int getFormat()>
<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()>
<android.media.audiopolicy.AudioPolicyConfig: int hashCode()>
<android.hardware.radio.V1_5.CellInfo$CellInfoRatSpecificInfo$hidl_discriminator: java.lang.String getName(byte)>
<android.view.autofill.ParcelableMap: int describeContents()>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSimFullApplication(android.content.Context,boolean)>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>
<android.view.View: java.lang.CharSequence getTooltipText()>
<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray getLifecyclePath(int,int,boolean)>
<android.os.ShellCommand: int handleDefaultCommands(java.lang.String)>
<android.debug.IAdbManager$Stub: android.debug.IAdbManager getDefaultImpl()>
<android.app.timedetector.ManualTimeSuggestion: int hashCode()>
<android.service.textclassifier.ITextClassifierCallback$Stub: android.os.IBinder asBinder()>
<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener getListener()>
<android.app.Notification$WearableExtender: int getGravity()>
<android.security.KeyStore: byte[] get(java.lang.String,int,boolean)>
<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()>
<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.os.DropBoxManager$Entry: java.io.InputStream getInputStream()>
<android.app.ActivityManager$TaskDescription: int getResizeMode()>
<com.android.ims.internal.IImsEcbmListener$Stub: com.android.ims.internal.IImsEcbmListener getDefaultImpl()>
<android.app.servertransaction.PauseActivityItem: int getTargetState()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.os.PowerManager: boolean isPowerSaveMode()>
<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList)>
<android.view.Display: int getColorMode()>
<android.app.ActivityThread: android.os.Bundle getCoreSettings()>
<com.android.server.SystemConfig: android.util.ArrayMap getAvailableFeatures()>
<android.media.tv.TvInputManager$Session: java.util.List getTracks(int)>
<android.app.Notification$Action: android.graphics.drawable.Icon getIcon()>
<com.android.internal.telephony.ITelephony$Default: boolean isWorldPhone(int,java.lang.String,java.lang.String)>
<android.telephony.ims.aidl.IImsRcsFeature$Default: android.os.IBinder asBinder()>
<android.graphics.Bitmap: android.graphics.NinePatch$InsetStruct getNinePatchInsets()>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>
<android.net.IConnectivityManager$Stub$Proxy: int getConnectionOwnerUid(android.net.ConnectionInfo)>
<android.location.ILocationManager$Default: java.util.List getProviderPackages(java.lang.String)>
<android.net.INetworkScoreService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus access$1302(android.location.LocationManager$GnssStatusListenerManager,android.location.GnssStatus)>
<com.android.internal.widget.IRemoteViewsFactory$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()>
<android.widget.Spinner$DialogPopup: int getHorizontalOffset()>
<android.app.ApplicationPackageManager: java.util.List getSharedLibraries(int)>
<android.content.ContentProvider$Transport: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>
<android.content.res.XmlBlock$Parser: int getColumnNumber()>
<android.hardware.radio.TunerCallbackAdapter: android.hardware.radio.RadioManager$ProgramInfo getCurrentProgramInformation()>
<android.content.rollback.IRollbackManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.job.JobInfo: android.os.Bundle getTransientExtras()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getSignaturePaddings()>
<android.view.View: java.util.Map getAttributeSourceResourceMap()>
<android.graphics.animation.RenderNodeAnimator: long getStartDelay()>
<android.media.session.ISessionManager$Stub: android.os.IBinder asBinder()>
<android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>
<android.telephony.TelephonyDisplayInfo: int describeContents()>
<android.content.Entity: android.content.ContentValues getEntityValues()>
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$PhaseCenterOffset getPhaseCenterOffset()>
<android.media.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwner(int)>
<android.text.style.QuoteSpan: int getGapWidth()>
<android.internal.hidl.base.V1_0.IBase$Stub: java.lang.String interfaceDescriptor()>
<com.android.ims.internal.IImsUt$Default: int updateCallWaiting(boolean,int)>
<android.net.ConnectivityManager: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>
<android.renderscript.Allocation: int getBytesSize()>
<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>
<android.hardware.Camera$Parameters: float getExposureCompensationStep()>
<android.hardware.camera2.CameraCharacteristics$Key: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: boolean isRttSupported(int)>
<com.android.internal.telephony.IMms$Default: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<android.telephony.euicc.EuiccNotification: int hashCode()>
<android.widget.RadioGroup: int getAutofillType()>
<android.media.midi.MidiDeviceServer: android.media.midi.MidiReceiver[] getOutputPortReceivers()>
<android.app.VoiceInteractor$PickOptionRequest$Option: int countSynonyms()>
<android.hardware.usb.UsbDevice: boolean getHasVideoPlayback()>
<android.app.IActivityManager$Stub: java.lang.String getTransactionName(int)>
<android.media.session.IOnMediaKeyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.ListPopupWindow: android.graphics.Rect getEpicenterBounds()>
<android.content.pm.IPackageInstallerCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.hdmi.HdmiHotplugEvent: int describeContents()>
<android.content.pm.IDataLoaderStatusListener$Stub: android.content.pm.IDataLoaderStatusListener getDefaultImpl()>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
<android.view.MotionEvent: float getY()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.Scroller: int getStartX()>
<android.hardware.display.DisplayManagerGlobal$1: android.view.DisplayInfo recompute(java.lang.Integer)>
<android.view.InputDevice: android.os.Vibrator getVibrator()>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<android.media.session.ISessionController$Default: android.os.Bundle getExtras()>
<android.widget.AdapterView: int getLastVisiblePosition()>
<android.widget.Spinner: int getBaseline()>
<android.os.BaseBundle: double getDouble(java.lang.String,double)>
<android.widget.EdgeEffect: android.graphics.BlendMode getBlendMode()>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()>
<android.app.blob.BlobInfo: long getId()>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: void enableLocationUpdates()>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point,boolean)>
<android.widget.ProgressBar: int getSecondaryProgress()>
<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.UserManager: boolean isPrimaryUser()>
<android.media.PlaybackParams: int describeContents()>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>
<android.media.tv.TvInputManager$TvInputCallbackRecord: android.media.tv.TvInputManager$TvInputCallback getCallback()>
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderInfo[] getAllWebViewPackages()>
<android.net.ConnectivityManager: android.net.NetworkRequest access$1000()>
<android.graphics.drawable.Icon: int describeContents()>
<android.view.VerifiedMotionEvent: int getActionMasked()>
<android.app.ContextImpl: int checkSelfPermission(java.lang.String)>
<android.media.session.MediaController: int getRatingType()>
<android.telephony.CellIdentityWcdma: int getLac()>
<android.os.VibrationEffect$Composed: int describeContents()>
<com.android.internal.policy.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuView getListMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback)>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.net.wifi.nl80211.IApInterfaceEventCallback getDefaultImpl()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4300()>
<android.graphics.ColorSpace: float[] access$1800()>
<android.app.SearchManager: android.content.Intent getAssistIntent(boolean)>
<android.app.JobSchedulerImpl: java.util.List getStartedJobs()>
<android.media.MediaTimestamp: long getAnchorMediaTimeUs()>
<android.graphics.drawable.AdaptiveIconDrawable: int getIntrinsicHeight()>
<android.hardware.camera2.impl.CaptureResultExtras: int describeContents()>
<android.view.Display$HdrCapabilities: float getDesiredMaxLuminance()>
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>
<android.app.SharedPreferencesImpl: java.util.Map getAll()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: int describeContents()>
<android.content.pm.IPackageDataObserver$Stub: android.content.pm.IPackageDataObserver asInterface(android.os.IBinder)>
<android.media.MediaCasStateException: int getErrorCode()>
<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: int size()>
<android.app.usage.IStorageStatsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.ArraySet$1: int colIndexOfKey(java.lang.Object)>
<android.view.IScrollCaptureClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IRemoteAnimationFinishedCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.ShortcutQueryWrapper: java.util.List getShortcutIds()>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)>
<android.view.textclassifier.TextClassification: android.content.Intent getIntent()>
<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getTvContentRatingSystemList(int)>
<android.hardware.location.ContextHubTransaction$Response: int getResult()>
<android.graphics.RenderNode: boolean getClipToOutline()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: android.media.soundtrigger_middleware.ModelParameterRange queryModelParameterSupport(int,int)>
<com.android.internal.compat.IPlatformCompat$Default: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>
<android.widget.TextView: int getTotalPaddingBottom()>
<android.view.ViewGroup: java.util.ArrayList buildTouchDispatchChildList()>
<android.media.session.IActiveSessionsListener$Stub: java.lang.String getTransactionName(int)>
<android.os.StrictMode$1: java.lang.Object initialValue()>
<android.app.IAssistDataReceiver$Default: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNode: android.graphics.Matrix getTransformation()>
<android.hardware.display.IDisplayManagerCallback$Stub: android.hardware.display.IDisplayManagerCallback asInterface(android.os.IBinder)>
<android.util.ArraySet$1: int colIndexOfValue(java.lang.Object)>
<android.os.Bundle: float getFloat(java.lang.String,float)>
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()>
<android.app.blob.BlobStoreManager$Session: boolean isPublicAccessAllowed()>
<android.renderscript.Float4: int length()>
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterfaceNoCreate(android.net.lowpan.ILowpanInterface)>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdminsAsUser(int)>
<com.android.internal.telephony.SmsHeader$ConcatRef: boolean equals(java.lang.Object)>
<android.os.BaseBundle: int getInt(java.lang.String,int)>
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.service.vr.IPersistentVrStateCallbacks getDefaultImpl()>
<android.os.CoolingDevice: java.lang.String getName()>
<android.service.notification.IConditionProvider$Stub: java.lang.String getTransactionName(int)>
<android.net.Ikev2VpnProfile: java.lang.String getUsername()>
<android.widget.RemoteViews$SetDrawableTint: int getActionTag()>
<android.app.ITransientNotification$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.app.PendingIntent,long)>
<android.widget.Magnifier: int getSourceWidth()>
<com.android.internal.app.IBatteryStats$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellIdentityTdscdma: int getLac()>
<android.content.pm.ServiceInfo: int describeContents()>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>
<android.media.IAudioService$Stub$Proxy: java.util.List getActivePlaybackConfigurations()>
<android.net.wifi.nl80211.IScanEvent$Stub: android.net.wifi.nl80211.IScanEvent asInterface(android.os.IBinder)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<android.hardware.location.NanoAppBinary: long getHwHubType()>
<android.os.health.HealthStats: int getMeasurementKeyCount()>
<android.app.ActivityTaskManager: java.lang.String listAllStacks()>
<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>
<android.hardware.soundtrigger.SoundTrigger: int handleException(java.lang.Exception)>
<android.telephony.IccOpenLogicalChannelResponse: int getChannel()>
<android.os.UserManager: boolean isRestrictedProfile(android.os.UserHandle)>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>
<android.view.ViewTreeObserver$CopyOnWriteArray$Access: int size()>
<android.net.CaptivePortalData: android.net.Uri getUserPortalUrl()>
<android.media.soundtrigger_middleware.RecognitionEvent: int describeContents()>
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getDefaultDialerPackageForUser(int)>
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>
<android.hardware.hdmi.HdmiTvClient$3: byte[] getOneTouchRecordSource(int)>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.telephony.CellIdentity: int inRangeOrUnavailable(int,int,int)>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: android.os.IBinder asBinder()>
<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()>
<android.app.IActivityTaskManager$Default: java.util.List getFilteredTasks(int,boolean)>
<android.app.BackStackRecord: int commit()>
<android.view.IGraphicsStatsCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getLteRsrq()>
<android.net.INetworkScoreService$Stub$Proxy: java.lang.String getActiveScorerPackage()>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.os.UserHandle)>
<android.media.SubtitleController: android.media.SubtitleTrack getSelectedTrack()>
<android.view.KeyEvent: int getMaxKeyCode()>
<android.view.SurfaceControlViewHost: android.view.IWindow getWindowToken()>
<android.app.backup.BackupManager: boolean isAppEligibleForBackup(java.lang.String)>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>
<android.media.AudioManager: java.util.Map getReportedSurroundFormats()>
<android.os.BaseBundle: boolean isEmpty()>
<android.os.IUserRestrictionsListener$Default: android.os.IBinder asBinder()>
<android.telephony.PhoneNumberUtils: java.lang.String convertAndStrip(java.lang.String)>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISms$Default: int getSmsCapacityOnIccForSubscriber(int)>
<android.hardware.location.IContextHubService$Default: int sendMessage(int,int,android.hardware.location.ContextHubMessage)>
<android.media.tv.TvContentRating: int hashCode()>
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getMountedObbPath(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: int getCarrierIdListVersion(int)>
<android.app.admin.DevicePolicyManager: java.util.List retrieveNetworkLogs(android.content.ComponentName,long)>
<android.renderscript.Double2: int length()>
<android.telephony.TelephonyManager: int getVoiceActivationState(int)>
<android.app.AppOpsManager$HistoricalOps: int getUidCount()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.os.IBinder asBinder()>
<android.app.backup.BackupManager: android.content.ComponentName getCurrentTransportComponent()>
<android.net.NetworkStatsHistory: int estimateResizeBuckets(long)>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telecom.PhoneAccountHandle: android.os.UserHandle getUserHandle()>
<android.app.AppOpsManager$NoteOpEvent: int describeContents()>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.telephony.data.ApnSetting: int getNetworkTypeBitmask()>
<android.graphics.drawable.ClipDrawable: int getOpacity()>
<android.media.tv.TvInputManager: java.util.List getDvbDeviceList()>
<android.print.IPrintDocumentAdapterObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.view.contentcapture.IDataShareWriteAdapter asInterface(android.os.IBinder)>
<android.app.usage.NetworkStats$Bucket: long getEndTimeStamp()>
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>
<android.view.View: int getRawLayoutDirection()>
<android.service.notification.NotificationListenerService$RankingMap: java.lang.String[] getOrderedKeys()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.net.lowpan.ILowpanInterface$Default: android.net.IpPrefix[] getLinkNetworks()>
<android.content.pm.IPinItemRequest$Default: android.os.Bundle getExtras()>
<android.location.GnssClock: double getElapsedRealtimeUncertaintyNanos()>
<android.app.Fragment: boolean getRetainInstance()>
<android.app.ApplicationPackageManager: byte[] getInstantAppCookie()>
<android.view.IDisplayWindowRotationController$Stub: android.os.IBinder asBinder()>
<android.telephony.data.ApnSetting$Builder: int access$2000(android.telephony.data.ApnSetting$Builder)>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>
<android.os.ISystemUpdateManager$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature getDefaultImpl()>
<android.view.contentcapture.DataRemovalRequest$LocusIdRequest: int getFlags()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader,int)>
<android.content.res.AssetManager: long access$1000(long)>
<android.app.SearchManager: java.util.List getGlobalSearchActivities()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso(int)>
<android.graphics.drawable.LayerDrawable: int getLayerGravity(int)>
<android.telecom.PhoneAccount: android.net.Uri getAddress()>
<android.media.AudioManager: boolean isMusicActive()>
<android.app.admin.DevicePolicyManager: java.util.Set getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)>
<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String getJournalMode()>
<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>
<com.google.android.mms.util.AbstractCache: java.lang.Object get(java.lang.Object)>
<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)>
<android.util.LruCache: int putCount()>
<android.view.KeyEvent: int getModifiers()>
<android.accessibilityservice.AccessibilityService$MagnificationController: float getCenterX()>
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: byte[] getData()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()>
<android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>
<android.app.admin.DevicePolicyManager: long getLastNetworkLogRetrievalTime()>
<android.telephony.CarrierConfigManager: void <clinit>()>
<android.text.FontConfig$Family: java.lang.String getLanguages()>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
<android.app.IAssistDataReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.inputmethod.InlineSuggestionsResponse: java.util.List getInlineSuggestions()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInDataUsageSave()>
<android.content.om.OverlayInfo: java.lang.String getTargetOverlayableName()>
<android.content.UndoManager: android.content.UndoManager$UndoState getTopUndo(android.content.UndoOwner[])>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiClient getClient(int)>
<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)>
<android.content.res.AssetManager: long access$600(long)>
<android.location.GnssNavigationMessage: int getType()>
<android.net.IpSecSpiResponse: int describeContents()>
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)>
<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>
<android.view.textclassifier.TextClassifier$EntityConfig: java.util.Collection getHints()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>
<android.app.admin.StartInstallingUpdateCallback$Stub: java.lang.String getTransactionName(int)>
<android.util.ArraySet: int size()>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setDefaultCarrierRestriction(int)>
<android.net.IConnectivityManager$Default: java.util.List getVpnLockdownWhitelist(int)>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.IAccessibilityManager$Default: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>
<com.android.internal.policy.DecorContext: java.lang.Object getSystemService(java.lang.String)>
<android.os.storage.StorageVolume: java.io.File getDirectory()>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<android.location.LocationTime: long getElapsedRealtimeNanos()>
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdUserWhitelist()>
<android.security.KeyStore: long getmtime(java.lang.String)>
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.incremental.IStorageHealthListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<com.android.internal.util.FastXmlSerializer: int getDepth()>
<android.view.IPinnedStackListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList interfaceChain()>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo[] newArray(int)>
<android.service.notification.Condition: int hashCode()>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getChannelName()>
<android.view.DragEvent: boolean getResult()>
<android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>
<android.graphics.drawable.RippleBackground$1: java.lang.Float get(android.graphics.drawable.RippleBackground)>
<android.app.ActivityManager: boolean isVrModePackageEnabled(android.content.ComponentName)>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeMeters()>
<com.android.internal.os.BatteryStatsHelper: double getMaxRealPower()>
<android.net.Network: int getNetId()>
<android.telephony.TelephonyManager: boolean isDataConnectionAllowed()>
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag(int)>
<android.app.IActivityManager$Default: int getUidProcessState(int,java.lang.String)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String getTransactionName(int)>
<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()>
<android.content.pm.ShortcutInfo: android.content.Intent getIntent()>
<android.os.IIncidentManager$Stub: java.lang.String getTransactionName(int)>
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.security.keystore.IKeystoreExportKeyCallback asInterface(android.os.IBinder)>
<android.app.job.JobInfo$TriggerContentUri: int hashCode()>
<android.security.keystore.IKeystoreService$Stub: android.security.keystore.IKeystoreService asInterface(android.os.IBinder)>
<android.view.inputmethod.SparseRectFArray: int describeContents()>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.trust.IStrongAuthTracker$Stub: android.os.IBinder asBinder()>
<android.location.ICountryListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>
<android.text.style.StyleSpan: int getSpanTypeId()>
<android.net.INetworkScoreCache$Stub: android.net.INetworkScoreCache getDefaultImpl()>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getRetrieveText()>
<android.os.IDeviceIdentifiersPolicyService$Default: android.os.IBinder asBinder()>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(int)>
<android.transition.ChangeBounds$6: java.lang.Object get(java.lang.Object)>
<android.app.AppOpsManager$HistoricalOp: long getBackgroundAccessDuration(int)>
<android.app.Person: java.lang.String resolveToLegacyUri()>
<android.print.PrinterInfo: java.lang.String getName()>
<android.transition.ChangeTransform: boolean getReparentWithOverlay()>
<android.view.View$8: java.lang.Object get(java.lang.Object)>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.ILocationListener$Stub: java.lang.String getTransactionName(int)>
<android.view.KeyEvent: boolean isSystem()>
<android.view.KeyboardShortcutGroup: java.lang.CharSequence getLabel()>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int calculateMarshalSize(android.hardware.camera2.params.ReprocessFormatsMap)>
<android.hardware.radio.V1_4.CellInfoNr: int hashCode()>
<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getReadFd()>
<android.app.job.JobParameters: android.os.Bundle getTransientExtras()>
<android.net.nsd.NsdManager: java.lang.Object access$300(android.net.nsd.NsdManager)>
<android.hardware.camera2.CaptureRequest$Key: long getVendorId()>
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager getParentProfileInstance(android.content.ComponentName)>
<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>
<android.os.INetworkManagementService$Stub: android.os.INetworkManagementService getDefaultImpl()>
<android.app.ApplicationPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>
<android.os.IVold$Default: int fdeGetPasswordType()>
<android.net.nsd.NsdManager: java.lang.String access$600(android.net.nsd.NsdServiceInfo)>
<android.content.UndoManager: int findPrevState(java.util.ArrayList,android.content.UndoOwner[],int)>
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayPrimaries getDisplayNativePrimaries(android.os.IBinder)>
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForPackage(java.lang.String,java.lang.String,int,java.lang.String)>
<android.content.SyncStatusInfo: int getEventCount()>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.content.pm.IPackageManager$Default: java.lang.String getInstallerPackageName(java.lang.String)>
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.location.IGnssMeasurementsListener$Default: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: android.media.IRingtonePlayer getRingtonePlayer()>
<android.content.pm.IPackageManager$Default: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<android.app.WindowConfiguration: int getRotation()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive$MarshalerPrimitive: int getNativeSize()>
<android.app.IUidObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.TextClassificationSessionId: java.lang.String getValue()>
<android.net.IIpSecService$Stub: android.net.IIpSecService asInterface(android.os.IBinder)>
<android.app.usage.UsageEvents$Event: java.lang.String getPackageName()>
<android.hardware.radio.RadioMetadata: int size()>
<android.view.Display: android.view.DisplayAddress getAddress()>
<android.app.ContextImpl: android.os.Handler getMainThreadHandler()>
<android.app.assist.AssistContent: android.content.ClipData getClipData()>
<android.media.AudioRecord: android.os.PersistableBundle getMetrics()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder asBinder()>
<android.provider.Settings$GenerationTracker: int getCurrentGeneration()>
<android.telephony.ServiceState: int getVoiceNetworkType()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.hardware.input.InputManager: int[] getInputDeviceIds()>
<android.media.soundtrigger_middleware.SoundModel: int describeContents()>
<android.transition.ArcMotion: float getMinimumVerticalAngle()>
<android.service.notification.INotificationListener$Stub: android.service.notification.INotificationListener getDefaultImpl()>
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuPresenter$Callback getCallback()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getPartitionId()>
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String,java.lang.String,java.lang.String)>
<android.view.IRemoteAnimationRunner$Stub: android.view.IRemoteAnimationRunner asInterface(android.os.IBinder)>
<android.app.AppOpsManager$PackageOps: int getUid()>
<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.Layout: int getLineForVertical(int)>
<android.media.AudioDeviceAttributes: int describeContents()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int write(byte[])>
<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int computeCurrentCountLocked()>
<android.animation.StateListAnimator$StateListAnimatorConstantState: android.animation.StateListAnimator newInstance()>
<android.hardware.camera2.params.OutputConfiguration: int getRotation()>
<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.concurrent.Executor getExecutor(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)>
<android.database.sqlite.SQLiteDatabase: int getVersion()>
<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(int,boolean)>
<android.os.IIncidentReportStatusListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.StateListDrawable: int getStateCount()>
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)>
<android.renderscript.BaseObj: int hashCode()>
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()>
<android.app.ApplicationPackageManager: boolean isAutoRevokeWhitelisted()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.ICameraServiceListener$Stub: android.os.IBinder asBinder()>
<android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$000()>
<android.graphics.drawable.VectorDrawable$VGroup$2: java.lang.Object get(java.lang.Object)>
<android.view.WindowManagerGlobal: android.view.View getWindowView(android.os.IBinder)>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>
<android.app.job.IJobCallback$Default: android.os.IBinder asBinder()>
<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getEotf()>
<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams)>
<android.app.usage.StorageStatsManager: long getFreeBytes(java.util.UUID)>
<android.location.ILocationListener$Stub: android.location.ILocationListener asInterface(android.os.IBinder)>
<android.service.vr.IVrManager$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.component.ParsedComponent: java.lang.String getName()>
<android.media.MediaDrm: android.media.MediaDrm$CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)>
<com.android.internal.policy.PhoneWindow: long getTransitionBackgroundFadeDuration()>
<android.app.admin.DevicePolicyManager: boolean isLogoutEnabled()>
<android.app.ContextImpl: android.content.Context createDeviceProtectedStorageContext()>
<com.google.android.mms.pdu.PduPart: byte[] getContentLocation()>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.SyncAdapterType: int hashCode()>
<com.android.internal.app.IAppOpsStartedCallback$Stub: com.android.internal.app.IAppOpsStartedCallback getDefaultImpl()>
<android.telephony.TelephonyManager: java.lang.String getNai()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Default: android.os.IBinder asBinder()>
<android.view.textclassifier.TextClassifierEvent: int getEventIndex()>
<android.view.InputEvent: int describeContents()>
<android.hardware.usb.UsbDevice: java.lang.String getProductName()>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
<android.animation.PathKeyframes$IntKeyframesBase: java.lang.Class getType()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintServices(int,int)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAcceptedNames()>
<android.os.UserManager: boolean isEphemeralUser()>
<android.text.style.SubscriptSpan: int getSpanTypeId()>
<android.app.Notification$TemplateBindResult: int getIconMarginEnd()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayAutoMode()>
<android.widget.ProgressBar: int getMaxHeight()>
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener getDefaultImpl()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean isInputMethodPickerShownForTest()>
<android.content.res.AssetManager$AssetInputStream: int getAssetInt()>
<android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleObject()>
<android.widget.AbsListView: int getTopPaddingOffset()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.IApInterface createApInterface(java.lang.String)>
<android.app.INotificationManager$Default: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>
<android.content.pm.ILauncherApps$Default: android.content.IntentSender getShortcutConfigActivityIntent(java.lang.String,android.content.ComponentName,android.os.UserHandle)>
<android.print.PrintDocumentInfo: int getPageCount()>
<android.graphics.fonts.SystemFonts: java.util.Set getAvailableFonts()>
<android.security.KeyChain: java.security.KeyPair getKeyPair(android.content.Context,java.lang.String)>
<android.text.Layout$Directions: int getRunCount()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.integrity.AppIntegrityManager: android.content.integrity.RuleSet getCurrentRuleSet()>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>
<android.app.role.IRoleManager$Stub$Proxy: java.util.List getHeldRolesFromController(java.lang.String)>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setAllowedCarriers(java.util.List)>
<android.net.TestNetworkInterface: int describeContents()>
<android.media.AudioMetadata$1: java.lang.String getName()>
<android.os.DeviceIdleManager: android.os.IDeviceIdleController getService()>
<android.view.ViewDebug: long getViewRootImplCount()>
<android.content.Context: java.lang.String getAttributionTag()>
<android.net.INetworkPolicyListener$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaMetadataRetriever$BitmapParams: android.graphics.Bitmap$Config getPreferredConfig()>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()>
<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()>
<android.net.LinkProperties: int getMtu()>
<android.database.MatrixCursor: float getFloat(int)>
<android.renderscript.RenderScript: long nFontCreateFromAsset(android.content.res.AssetManager,java.lang.String,float,int)>
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.job.IJobScheduler$Default: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
<android.hardware.display.Time: int describeContents()>
<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: boolean isMultiparty()>
<android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager$CaptionStyle getUserStyle()>
<com.android.internal.telephony.ITelephony$Default: boolean getEmergencyCallbackMode(int)>
<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCallback()>
<android.media.MediaRouter$RouteInfo: int getPlaybackStream()>
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>
<android.os.Messenger: int describeContents()>
<android.app.ITransientNotificationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.net.netstats.provider.INetworkStatsProvider getDefaultImpl()>
<android.view.Window: boolean getAllowReturnTransitionOverlap()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean iccCloseLogicalChannelBySlot(int,int)>
<android.os.Environment: java.io.File getDataPreloadsDemoDirectory()>
<android.graphics.drawable.AdaptiveIconDrawable: int getChangingConfigurations()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.incremental.IIncrementalServiceConnector getDefaultImpl()>
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getFocusedStackInfo()>
<android.app.contentsuggestions.ISelectionsCallback$Stub: android.app.contentsuggestions.ISelectionsCallback getDefaultImpl()>
<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>
<android.drm.DrmUtils: byte[] readBytes(java.io.File)>
<android.renderscript.Double2: double get(int)>
<android.telephony.UiccAccessRule: int hashCode()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: int getParentSessionId()>
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>
<com.android.internal.widget.DecorCaptionView: int getCaptionHeight()>
<android.app.usage.StorageStatsManager: long getFreeBytes(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getProfileOwner(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)>
<android.webkit.WebView: int computeVerticalScrollOffset()>
<android.app.IWallpaperManager$Stub$Proxy: int getHeightHint(int)>
<android.graphics.ImageDecoder: boolean getMutable()>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)>
<android.content.pm.LauncherActivityInfo: java.lang.CharSequence getLabel()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.widget.TextView: int getOffsetAtCoordinate(int,float)>
<android.location.Address: android.os.Bundle getExtras()>
<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$EncoderCapabilities getEncoderCapabilities()>
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserBlacklistedApps()>
<android.telecom.TelecomManager: boolean isTtySupported()>
<android.widget.TextView: boolean canRequestAutofill()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)>
<com.android.internal.telephony.ISms$Default: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)>
<android.telephony.CellConfigLte$1: android.telephony.CellConfigLte[] newArray(int)>
<android.graphics.HardwareRenderer: int copySurfaceInto(android.view.Surface,android.graphics.Rect,android.graphics.Bitmap)>
<android.content.pm.ModuleInfo: int describeContents()>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>
<com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt asInterface(android.os.IBinder)>
<android.media.session.ISessionController$Default: long getFlags()>
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>
<android.app.ApplicationPackageManager: int getInstantAppCookieMaxSize()>
<com.android.internal.telephony.IPhoneSubInfo$Default: android.os.IBinder asBinder()>
<android.media.AudioTrack: int getPositionNotificationPeriod()>
<android.app.backup.IBackupObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>
<android.app.blob.BlobInfo: long getExpiryTimeMs()>
<android.hardware.hdmi.HdmiControlManager: boolean getSystemAudioMode()>
<com.android.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()>
<android.text.style.TtsSpan: android.os.PersistableBundle getArgs()>
<android.hardware.cas.V1_2.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.hardware.hdmi.HdmiControlManager: java.util.List getConnectedDevices()>
<android.telephony.MmsManager: void downloadMultimediaMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long)>
<android.text.PrecomputedText: int getEnd()>
<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.usage.NetworkStats$Bucket: long getTxPackets()>
<android.view.View: int computeVerticalScrollExtent()>
<android.app.ActivityThread: java.util.Map getActivitiesToBeDestroyed()>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: com.android.internal.telephony.euicc.IGetProfileCallback asInterface(android.os.IBinder)>
<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)>
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.hardware.display.VirtualDisplayConfig: java.lang.String getUniqueId()>
<android.os.IUserManager$Stub$Proxy: int getUserBadgeColorResId(int)>
<android.net.IpSecManager$IpSecTunnelInterface: java.lang.String getInterfaceName()>
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()>
<android.os.storage.IStorageShutdownObserver$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.gles_jni.EGLContextImpl: int hashCode()>
<android.hardware.location.NanoAppInstanceInfo: int getNeededReadMemBytes()>
<android.os.Debug: int getThreadExternalAllocCount()>
<android.app.DisabledWallpaperManager: boolean isSetWallpaperAllowed()>
<android.media.session.ISession2TokensListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.MatchAllNetworkSpecifier: int hashCode()>
<com.android.internal.view.IInputMethodManager$Default: java.util.List getEnabledInputMethodList(int)>
<android.filterfw.core.FrameFormat: int getDimension(int)>
<android.text.method.TextKeyListener$NullKeyListener: android.text.method.TextKeyListener$NullKeyListener getInstance()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int changeIccLockPassword(int,java.lang.String,java.lang.String)>
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<android.net.IpPrefix: int hashCode()>
<android.location.IGnssMeasurementsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppGlobals: float getFloatCoreSetting(java.lang.String,float)>
<android.service.notification.ZenModeConfig$ZenRule: int hashCode()>
<com.android.internal.app.WindowDecorActionBar: int access$400(com.android.internal.app.WindowDecorActionBar)>
<android.content.Context: android.view.Display getDisplayNoVerify()>
<android.net.ConnectivityManager: android.net.ProxyInfo getGlobalProxy()>
<android.renderscript.Allocation: android.renderscript.Type getType()>
<android.graphics.Paint: long getShadowLayerColorLong()>
<android.text.FontConfig$Family: int getVariant()>
<android.hardware.camera2.params.Capability: int hashCode()>
<android.location.GpsNavigationMessage: byte[] getData()>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>
<android.net.Uri$StringUri: java.lang.String getEncodedPath()>
<android.os.storage.IStorageManager$Stub$Proxy: int decryptStorage(java.lang.String)>
<android.widget.AbsListView: int getFooterViewsCount()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordComplexity(boolean)>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.Curve getMinimumBrightnessCurve()>
<android.telephony.CarrierConfigManager: java.lang.String getDefaultCarrierServicePackageName()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<android.view.textclassifier.ConversationActions$Request: int getMaxSuggestions()>
<android.app.IActivityManager$Stub$Proxy: boolean isTopActivityImmersive()>
<android.hardware.display.IDisplayManager$Stub: java.lang.String getTransactionName(int)>
<android.app.ActivityManager: long getTotalRam()>
<android.media.midi.MidiDeviceInfo: int getId()>
<android.content.pm.Signature: byte[] toByteArray()>
<android.hardware.radio.V1_5.ClosedSubscriberGroupInfo: int hashCode()>
<android.app.NotificationChannel: java.lang.String getParentChannelId()>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>
<com.android.internal.widget.LockPatternView$Cell: int getRow()>
<android.app.PropertyInvalidatedCache: java.lang.Object refresh(java.lang.Object,java.lang.Object)>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>
<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode()>
<android.service.gatekeeper.IGateKeeperService$Default: android.os.IBinder asBinder()>
<android.text.PrecomputedText: android.text.PrecomputedText$Params getParams()>
<android.widget.ListView$FocusSelector: java.lang.Runnable setupFocusIfValid(int)>
<android.hardware.usb.UsbDevice: boolean getHasMidi()>
<android.os.IThermalEventListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.filterfw.core.Frame: int decRefCount()>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<android.media.IAudioService$Default: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()>
<android.telephony.PhoneNumberRange$1: android.telephony.PhoneNumberRange[] newArray(int)>
<android.print.PrintAttributes$Margins: int getTopMils()>
<android.app.admin.DevicePolicyManager: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.security.IFileIntegrityService$Default: android.os.IBinder asBinder()>
<android.widget.Editor$SelectionHandleView: float getHorizontal(android.text.Layout,int)>
<com.google.android.mms.pdu.ReadOrigInd: long getDate()>
<android.location.LocationManager$GnssMeasurementsListenerManager: java.lang.Object merge(java.lang.Object[])>
<com.android.internal.widget.ILockSettings$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
<android.content.pm.permission.SplitPermissionInfoParcelable: java.lang.String getSplitPermission()>
<android.os.BasicShellCommandHandler: java.io.FileDescriptor getErrFileDescriptor()>
<android.location.LocationManager$GnssStatusListenerManager: int getTtff()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>
<android.telephony.TelephonyManager: void <init>(android.content.Context,int)>
<android.hardware.radio.ProgramList$Chunk: int describeContents()>
<android.os.BinderProxy$ProxyMap: android.os.BinderProxy get(long)>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl asInterface(android.os.IBinder)>
<android.hardware.SystemSensorManager: int configureDirectChannelImpl(android.hardware.SensorDirectChannel,android.hardware.Sensor,int)>
<android.os.IServiceCallback$Stub: android.os.IServiceCallback getDefaultImpl()>
<android.media.IRemoteVolumeController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.hdmi.IHdmiControlCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.window.ITaskOrganizerController$Stub: java.lang.String getTransactionName(int)>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>
<android.hardware.radio.RadioManager$BandConfig: int describeContents()>
<android.os.IDumpstate$Stub: android.os.IDumpstate asInterface(android.os.IBinder)>
<android.content.pm.PackageManager: boolean isDeviceUpgrading()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv newServiceStatsLocked()>
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getOverlayFolder()>
<android.graphics.drawable.AnimatedImageDrawable: int getIntrinsicHeight()>
<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network[] getAllNetworks()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<android.telephony.SmsCbCmasInfo: int getCertainty()>
<com.android.internal.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.app.ActivityOptions: android.graphics.GraphicBuffer getThumbnail()>
<android.renderscript.Byte3: byte get(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.hardware.fingerprint.Fingerprint: int describeContents()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getNotificationChannelGroupForPackage(java.lang.String,java.lang.String,int)>
<android.net.IpSecConfig: int getEncapType()>
<android.os.incremental.IIncrementalService$Default: int openStorage(java.lang.String)>
<android.media.IAudioService$Default: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanTime(long,int)>
<android.view.ActionMode: boolean getTitleOptionalHint()>
<android.app.role.RoleControllerManager$1: android.os.Handler getJobHandler()>
<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int ungrant(java.lang.String,int)>
<com.android.internal.policy.PhoneWindow: android.media.AudioManager getAudioManager()>
<android.hardware.camera2.CaptureResult$Key: long getVendorId()>
<android.content.pm.dex.IArtManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.apk.WrappedX509Certificate: byte[] getSignature()>
<com.android.internal.view.menu.BaseMenuPresenter: int getId()>
<android.widget.RadioGroup: java.lang.CharSequence getAccessibilityClassName()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getAllSessions(java.lang.String)>
<android.print.ILayoutResultCallback$Stub: android.print.ILayoutResultCallback getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>
<android.telephony.TelephonyManager: java.lang.String getEsn(int)>
<com.android.internal.os.IDropBoxManagerService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IAudioService$Stub$Proxy: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)>
<android.graphics.ColorSpace$Rgb$TransferParameters: int hashCode()>
<android.hardware.usb.UsbEndpoint: int getType()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)>
<android.telephony.SubscriptionInfo: boolean equals(java.lang.Object)>
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.graphics.fonts.Font: int hashCode()>
<android.hardware.cas.V1_0.ICas$Stub: android.os.IHwBinder asBinder()>
<android.content.pm.IPackageInstallerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)>
<android.app.IUiModeManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.MediaSessionManager: java.util.Map access$1500(android.media.session.MediaSessionManager)>
<android.view.textclassifier.EntityConfidence: float getConfidenceScore(java.lang.String)>
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.widget.AdapterViewAnimator: int getWindowSize()>
<android.graphics.drawable.AdaptiveIconDrawable: int getIntrinsicWidth()>
<android.graphics.Paint: float getRunAdvance(java.lang.CharSequence,int,int,int,int,boolean,int)>
<android.security.keymaster.KeymasterArguments: int getEnum(int,int)>
<android.security.keymaster.KeymasterArguments: java.util.List getUnsignedLongs(int)>
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int,java.lang.String)>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<android.hardware.Camera$Parameters: int getPreviewFrameRate()>
<android.view.SurfaceControl: android.graphics.ColorSpace[] getCompositionColorSpaces()>
<android.os.storage.VolumeInfo: java.lang.String getNormalizedFsUuid()>
<android.app.PictureInPictureParams: int describeContents()>
<android.telephony.CellSignalStrengthNr: int getAsuLevel()>
<android.content.SyncStatusInfo: int getPeriodicSyncTimesSize()>
<android.media.tv.TvInputInfo: java.lang.String getId()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: int getSoftKeyboardShowMode()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSmsPdu(int,int,java.lang.String,java.lang.String,java.lang.String,long)>
<android.widget.AbsListView$InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.telephony.ims.aidl.IImsConfigCallback$Stub: java.lang.String getTransactionName(int)>
<android.os.storage.StorageManager: java.io.File translateSystemToApp(java.io.File,int,int)>
<android.app.timezone.DistroRulesVersion: int describeContents()>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>
<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>
<android.location.ILocationManager$Default: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.telephony.TelephonyManager: void dial(java.lang.String)>
<android.app.servertransaction.ResumeActivityItem: int hashCode()>
<android.util.jar.StrictJarManifest: java.util.Map getEntries()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>
<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse getDefaultImpl()>
<android.widget.Toast: int getYOffset()>
<android.telephony.PreciseDataConnectionState: android.telephony.data.ApnSetting getApnSetting()>
<com.android.internal.os.BatteryStatsImpl: int getWifiSupplStateCount(int,int)>
<android.content.pm.LauncherApps: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioServerStateDispatcher$Default: android.os.IBinder asBinder()>
<android.telephony.RadioAccessSpecifier: int describeContents()>
<android.widget.GridView: int getStretchMode()>
<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getRpmStats()>
<android.telephony.CellSignalStrengthLte$1: android.telephony.CellSignalStrengthLte createFromParcel(android.os.Parcel)>
<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()>
<android.hardware.radio.TunerAdapter: int getConfiguration(android.hardware.radio.RadioManager$BandConfig[])>
<android.util.jar.StrictJarManifest: int hashCode()>
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()>
<android.app.ActivityManager$1: android.app.IActivityManager create()>
<android.app.IActivityManager$Stub$Proxy: int getProcessLimit()>
<android.graphics.ColorSpace: float[] access$1600()>
<android.app.Notification$WearableExtender: int getHintScreenTimeout()>
<android.view.View: android.animation.StateListAnimator getStateListAnimator()>
<android.app.backup.BackupDataInputStream: int read()>
<android.telephony.data.ApnSetting$Builder: int access$2200(android.telephony.data.ApnSetting$Builder)>
<com.android.internal.telephony.ITelephony$Default: boolean isImsRegistered(int)>
<android.media.session.ISessionController$Stub: android.os.IBinder asBinder()>
<android.filterfw.core.Frame: int getCapacity()>
<android.view.textclassifier.SelectionEvent: int getInvocationMethod()>
<android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)>
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()>
<android.app.DownloadManager$CursorTranslator: long getLong(int)>
<android.media.ExifInterface$ByteOrderedDataInputStream: char readChar()>
<android.media.MediaPlayer: android.media.AudioDeviceInfo getPreferredDevice()>
<android.graphics.drawable.DrawableContainer: int getOpacity()>
<android.telephony.SmsManager: void getSmsMessagesForFinancialApp(android.os.Bundle,java.util.concurrent.Executor,android.telephony.SmsManager$FinancialSmsCallback)>
<android.filterfw.core.Filter: int getSleepDelay()>
<android.view.Display: long getAppVsyncOffsetNanos()>
<android.view.IWindowSession$Stub: android.view.IWindowSession getDefaultImpl()>
<android.media.AudioDeviceInfo: java.lang.String getAddress()>
<android.view.accessibility.IWindowMagnificationConnection$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.PasswordMetrics: int describeContents()>
<android.content.ContentResolver: int resolveUserId(android.net.Uri)>
<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>
<android.content.pm.PackageManager: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)>
<android.app.Activity: android.os.IBinder getAssistToken()>
<android.net.NetworkQuotaInfo: long getHardLimitBytes()>
<android.media.IMediaHTTPConnection$Default: android.os.IBinder asBinder()>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppResolverComponent()>
<android.service.notification.ZenPolicy: int getPriorityCategoryMessages()>
<android.telephony.data.ApnSetting: int getProxyPort()>
<android.view.Window: android.view.Window$Callback getCallback()>
<android.content.pm.IPackageManager$Default: int getIntentVerificationStatus(java.lang.String,int)>
<android.hardware.camera2.CaptureResult$Key: java.lang.String getName()>
<com.android.internal.graphics.SfVsyncFrameCallbackProvider: long getFrameDelay()>
<com.android.internal.appwidget.IAppWidgetHost$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IVoldMountCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.DisplayCutout$ParcelableWrapper: android.view.DisplayCutout get()>
<android.hardware.face.FaceManager: java.util.List getEnrolledFaces(int)>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.widget.Magnifier: int getHeight()>
<android.telephony.LteVopsSupportInfo: int getVopsSupport()>
<android.text.FontConfig$Font: int getWeight()>
<android.app.admin.DevicePolicyManager: int getOrganizationColor(android.content.ComponentName)>
<android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$AutofillClient access$900(android.view.autofill.AutofillManager)>
<com.google.android.mms.pdu.PduPart: int getDataLength()>
<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.net.IConnectivityManager$Stub$Proxy: java.util.List getVpnLockdownWhitelist(int)>
<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()>
<android.telephony.PinResult$1: android.telephony.PinResult[] newArray(int)>
<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()>
<android.os.IIncidentAuthListener$Stub: android.os.IIncidentAuthListener asInterface(android.os.IBinder)>
<android.content.pm.UserInfo: boolean isManagedProfile()>
<android.graphics.drawable.AdaptiveIconDrawable$LayerState: android.graphics.drawable.Drawable newDrawable()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()>
<android.app.NotificationChannel: int hashCode()>
<android.util.SparseLongArray: long get(int,long)>
<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()>
<com.android.internal.database.SortCursor: float getFloat(int)>
<com.android.ims.internal.IImsUt$Default: int queryCallForward(int,java.lang.String)>
<android.os.VibrationAttributes: int getUsageClass()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<android.media.session.ISessionControllerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.net.wifi.nl80211.IPnoScanEvent getDefaultImpl()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<android.media.Utils$1: int compare(android.util.Range,android.util.Range)>
<android.graphics.drawable.VectorDrawable$VFullPath: float getStrokeWidth()>
<com.android.ims.internal.IImsVideoCallCallback$Default: android.os.IBinder asBinder()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()>
<android.app.IStopUserCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.hdmi.IHdmiControlCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean enableDataConnectivity()>
<android.os.StrictMode: int getThreadPolicyMask()>
<android.telephony.CellSignalStrengthTdscdma: boolean isValid()>
<android.view.contentcapture.ViewNode: int getMinTextEms()>
<android.hardware.SystemSensorManager$InjectEventQueue: int injectSensorData(int,float[],int,long)>
<android.graphics.PointF: int describeContents()>
<android.app.IActivityManager$Default: android.content.res.Configuration getConfiguration()>
<android.view.IDisplayWindowRotationCallback$Stub: android.view.IDisplayWindowRotationCallback asInterface(android.os.IBinder)>
<android.hardware.radio.IRadioService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int getLength()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks asInterface(android.os.IBinder)>
<android.widget.TextView: int getLineAtCoordinateUnclamped(float)>
<com.android.internal.policy.IShortcutService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()>
<android.net.INetworkScoreService$Default: java.util.List getAllValidScorers()>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.compat.IOverrideValidator$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: boolean isVoWiFiRoamingSettingEnabled(int)>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Default: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$AmBandConfig: int describeContents()>
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getActivityName(android.os.IBinder,android.app.ClientTransactionHandler)>
<android.telephony.SubscriptionPlan: int getDataLimitBehavior()>
<android.media.audiopolicy.IAudioPolicyCallback$Default: android.os.IBinder asBinder()>
<android.location.GnssSingleSatCorrection: float getCarrierFrequencyHz()>
<android.hardware.camera2.utils.SubmitInfo: int describeContents()>
<android.print.PrinterId: int hashCode()>
<android.content.pm.PackageManager: java.lang.String getIncidentReportApproverPackageName()>
<android.app.IActivityTaskManager$Default: android.os.Bundle getActivityOptions(android.os.IBinder)>
<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$Polygon$Point lambda$new$0$CbGeoUtils$Polygon(android.telephony.CbGeoUtils$LatLng)>
<android.media.session.MediaSession: java.lang.String getCallingPackage()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.hardware.camera2.params.VendorTagDescriptor: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode(java.lang.String,java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath$5: java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>
<android.os.storage.IStorageManager$Default: java.lang.String getField(java.lang.String)>
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.os.IThermalService$Stub$Proxy: android.os.Temperature[] getCurrentTemperatures()>
<android.content.pm.IPinItemRequest$Stub$Proxy: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.os.Environment: java.io.File getDataPreloadsAppsDirectory()>
<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()>
<android.media.MediaCodec$MediaImage: int getFormat()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsForPackage(java.lang.String,int,boolean)>
<android.app.SearchableInfo: int getHintId()>
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)>
<android.app.ApplicationPackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)>
<android.content.ContentProvider$Transport: java.lang.String getType(android.net.Uri)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.companion.IFindDeviceCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)>
<android.webkit.TracingConfig: java.util.List getCustomIncludedCategories()>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback getDefaultImpl()>
<android.media.session.ISessionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.GpsSatellite: float getSnr()>
<android.os.INetworkActivityListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive$MarshalerPrimitive: int calculateMarshalSize(java.lang.Object)>
<android.graphics.ColorSpace: long getNativeInstance()>
<com.android.internal.telephony.SmsHeader$PortAddrs: int hashCode()>
<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: byte[] parseToDtmf(java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getServices()>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimPcscf(int)>
<android.database.CursorWrapper: java.util.List getNotificationUris()>
<android.app.backup.IBackupManagerMonitor$Stub: android.app.backup.IBackupManagerMonitor getDefaultImpl()>
<android.net.Network: java.util.List lambda$maybeInitUrlConnectionFactory$0$Network(java.lang.String)>
<android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry: java.lang.Long getFrameNumber()>
<android.app.Fragment: int getNextAnim()>
<android.telephony.ServiceState: boolean isEmergencyOnly()>
<android.app.Activity: android.net.Uri onProvideReferrer()>
<com.google.android.mms.pdu.PduPart: byte[] getData()>
<android.app.job.JobWorkItem: long getEstimatedNetworkUploadBytes()>
<android.location.GnssMeasurement: int getState()>
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.os.INetworkActivityListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.iris.IIrisService$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
<android.app.usage.UsageEvents$Event: int getStandbyReason()>
<android.hardware.display.ColorDisplayManager: int getNightDisplayAutoModeRaw()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserPasswordChanged(int,java.lang.String)>
<android.view.autofill.AutofillValue: int describeContents()>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.net.wifi.nl80211.IClientInterface$Default: android.os.IBinder asBinder()>
<android.hardware.radio.ITuner$Stub$Proxy: boolean isMuted()>
<android.app.INotificationManager$Stub$Proxy: int getHintsFromListener(android.service.notification.INotificationListener)>
<android.window.WindowContainerTransaction$Change: int getConfigSetMask()>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.view.textclassifier.TextLinks$TextLinkSpan: android.view.textclassifier.TextLinks$TextLink getTextLink()>
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectBottom()>
<android.os.image.DynamicSystemManager: android.os.image.DynamicSystemManager$Session createPartition(java.lang.String,long,boolean)>
<com.android.internal.graphics.palette.Palette$Swatch: int getBodyTextColor()>
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>
<android.os.Handler: android.os.Looper getLooper()>
<android.content.res.AssetManager: java.lang.String getResourcePackageName(int)>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.AvailableNetworkInfo: int getPriority()>
<android.media.PlaybackParams: float getPitch()>
<android.hardware.location.ContextHubInfo: short getChrePatchVersion()>
<android.telephony.CdmaEriInformation$1: android.telephony.CdmaEriInformation createFromParcel(android.os.Parcel)>
<android.app.AppOpsManager$HistoricalUidOps: int getPackageCount()>
<android.hardware.fingerprint.IFingerprintService$Stub: android.hardware.fingerprint.IFingerprintService getDefaultImpl()>
<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int getDataSize()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: int getStrongAuthForUser(int)>
<android.app.ApplicationPackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)>
<android.net.lowpan.LowpanIdentity: byte[] access$402(android.net.lowpan.LowpanIdentity,byte[])>
<android.view.autofill.IAutofillWindowPresenter$Stub: android.view.autofill.IAutofillWindowPresenter getDefaultImpl()>
<android.view.autofill.AutofillManager$CompatibilityBridge: java.util.List getInstalledAccessibilityServiceList(java.util.List)>
<android.app.role.IRoleManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IVoldTaskListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.Layout: float getLineMax(int)>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getPhoneAccountsForPackage(java.lang.String)>
<android.telephony.ServiceState: int getBetterNRFrequencyRange(int,int)>
<android.view.IWindowManager$Stub$Proxy: boolean isRotationFrozen()>
<android.view.textclassifier.TextLanguage$Request: java.lang.String getCallingPackageName()>
<android.app.usage.IStorageStatsManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: com.android.internal.telephony.euicc.IEuiccCardController asInterface(android.os.IBinder)>
<android.view.IRemoteAnimationFinishedCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.IWallpaperVisibilityListener$Default: android.os.IBinder asBinder()>
<android.location.IBatchedLocationCallback$Stub: android.location.IBatchedLocationCallback getDefaultImpl()>
<android.app.IAlarmListener$Stub: java.lang.String getTransactionName(int)>
<android.app.NotificationManager: java.util.List getNotificationChannels()>
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getPreferredActivityBackup(int)>
<android.os.Environment: java.io.File getProductDirectory()>
<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>
<android.media.IMediaRouter2Manager$Stub: android.os.IBinder asBinder()>
<android.graphics.Picture: int getHeight()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.content.pm.DataLoaderParamsParcel getDataLoaderParams()>
<android.hardware.Sensor: int getHandle()>
<android.os.storage.IStorageManager$Default: int verifyEncryptionPassword(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannelBySlot(int,int,int,int,int,int,java.lang.String)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Default: android.os.IBinder asBinder()>
<android.filterfw.core.SyncRunner: int determinePostRunState()>
<android.os.Parcel: byte[] createByteArray()>
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>
<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransportForUser(int)>
<android.view.inputmethod.CursorAnchorInfo: int describeContents()>
<android.app.admin.DnsEvent: int getTotalResolvedAddressCount()>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerIdleDurationMillis()>
<android.view.textclassifier.SelectionEvent: long getEventTime()>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>
<android.os.HidlMemory: android.os.NativeHandle getHandle()>
<android.media.IStrategyPreferredDeviceDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>
<android.os.DropBoxManager$Entry: java.lang.String getText(int)>
<android.print.PrintJobInfo: long getCreationTime()>
<android.view.IOnKeyguardExitResult$Stub: android.os.IBinder asBinder()>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>
<android.net.lowpan.LowpanInterface: java.lang.String[] getSupportedNetworkTypes()>
<android.view.ViewRootImpl: java.util.List getRootSystemGestureExclusionRects()>
<android.hardware.input.ITabletModeChangedListener$Default: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: android.app.ActivityManager$StackInfo getFocusedStackInfo()>
<android.hardware.ICameraService$Default: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getStackInfo(int,int)>
<android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener asInterface(android.os.IBinder)>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)>
<android.telephony.TelephonyManager: int isMultiSimSupported()>
<android.os.TestLooperManager: android.os.MessageQueue getQueue()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.os.Environment: java.io.File getDataMiscDeDirectory(int)>
<android.animation.Animator: android.animation.Animator clone()>
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()>
<android.app.AppOpsManager$HistoricalOps: int hashCode()>
<android.view.IWindowSessionCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.data.ApnSetting: java.net.InetAddress getProxyAddress()>
<android.content.res.GradientColor: int getDefaultColor()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)>
<android.media.tv.TvInputHardwareInfo: int getAudioType()>
<android.service.carrier.CarrierIdentifier: java.lang.String getMnc()>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
<android.view.View: int getVerticalFadingEdgeLength()>
<android.telephony.ServiceState: java.lang.String getDataOperatorAlphaShort()>
<android.app.trust.ITrustManager$Stub: android.app.trust.ITrustManager asInterface(android.os.IBinder)>
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)>
<android.location.GnssAntennaInfo: double getCarrierFrequencyMHz()>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: com.android.internal.telephony.euicc.ISetNicknameCallback getDefaultImpl()>
<android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>
<com.android.internal.app.AlertController$CheckedItemAdapter: long getItemId(int)>
<android.graphics.RenderNode: int getSpotShadowColor()>
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()>
<android.hardware.camera2.params.MeteringRectangle: int hashCode()>
<android.telephony.SignalStrength$1: void <init>()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String[] getIsimImpu(int)>
<android.app.assist.AssistStructure$ViewNode: android.os.Bundle getExtras()>
<android.telephony.SmsCbEtwsInfo: boolean isEmergencyUserAlert()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: com.android.internal.view.IInlineSuggestionsRequestCallback getDefaultImpl()>
<android.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()>
<android.window.ITaskOrganizer$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.Notification$MessagingStyle$Message: android.app.Person getSenderPerson()>
<android.os.VibrationEffect$OneShot: int hashCode()>
<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>
<android.view.MotionEvent: int getPointerCount()>
<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getEnabledSubscriptionId(int)>
<android.telephony.UiccSlotInfo: boolean getIsEuicc()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdPackage()>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>
<android.graphics.drawable.RotateDrawable: float getPivotX()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setTitle(java.lang.CharSequence)>
<android.media.tv.ITvInputClient$Stub: android.media.tv.ITvInputClient getDefaultImpl()>
<android.os.health.HealthStats: java.util.Map getTimers(int)>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()>
<android.view.inputmethod.CursorAnchorInfo: int hashCode()>
<android.print.PrintAttributes: int getDuplexMode()>
<android.view.animation.Animation: boolean getShowWallpaper()>
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)>
<com.android.internal.telephony.ITelephony$Default: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>
<android.hardware.camera2.params.StreamConfiguration: int hashCode()>
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtimeStart()>
<android.app.Notification$BubbleMetadata: int getDesiredHeight()>
<android.telephony._$$Lambda$SubscriptionManager$wql9r4zMYyVpqqNWW9Wt35fzC_w: int applyAsInt(java.lang.Object)>
<android.graphics.Path: long mutateNI()>
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int hashCode()>
<android.view.FocusFinder: long getWeightedDistanceFor(long,long)>
<android.location.Country: int describeContents()>
<android.app.ActivityOptions: int getLaunchDisplayId()>
<android.view.IInputMonitorHost$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<android.os.PersistableBundle: int describeContents()>
<android.os.Process: int getUidForPid(int)>
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<com.android.internal.statusbar.NotificationVisibility$NotificationLocation: int toMetricsEventEnum()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<android.app.backup.FullBackupDataOutput: long getQuota()>
<com.android.internal.telephony.ISub$Default: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid,java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: boolean isRttSupported()>
<android.animation.ValueAnimator: int getCurrentAnimationsCount()>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$mpe0Kh92VEQmEtmo60oqykdvnBE: java.lang.Object createService(android.content.Context)>
<android.net.IConnectivityManager$Default: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<android.net.NetworkCapabilities: int[] getCapabilities()>
<android.net.lowpan.ILowpanInterfaceListener$Stub: java.lang.String getTransactionName(int)>
<android.util.apk.WrappedX509Certificate: byte[] getTBSCertificate()>
<android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
<android.view.IScrollCaptureClient$Stub: java.lang.String getTransactionName(int)>
<android.text.style.LineHeightSpan$Standard: int getSpanTypeId()>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.view.IInputContext$Stub: android.os.IBinder asBinder()>
<android.view.inputmethod.InlineSuggestionsRequest: android.os.Bundle getExtras()>
<android.util.apk.ApkSigningBlockUtils: java.lang.String getContentDigestAlgorithmJcaDigestAlgorithm(int)>
<android.os.IRecoverySystem$Stub: android.os.IRecoverySystem getDefaultImpl()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<android.security.keystore.recovery.KeyDerivationParams: int getAlgorithm()>
<android.media.IPlayer$Stub: android.media.IPlayer getDefaultImpl()>
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getQuery()>
<android.animation.ValueAnimator: long getStartDelay()>
<android.text.Layout$SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)>
<android.window.IWindowOrganizerController$Stub: android.os.IBinder asBinder()>
<android.debug.IAdbManager$Stub$Proxy: boolean isAdbWifiQrSupported()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)>
<android.telephony.ClientRequestStats: long getCompletedRequestsWakelockTime()>
<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()>
<com.android.ims.internal.IImsUtListener$Stub: com.android.ims.internal.IImsUtListener getDefaultImpl()>
<android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>
<android.app.VoiceInteractor$Prompt: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptimeStart()>
<android.view.inputmethod.InputConnectionWrapper: int getMissingMethodFlags()>
<android.media.RoutingSessionInfo: int getVolumeMax()>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics()>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
<android.view.ViewRootImpl: android.view.Surface getOrCreateBLASTSurface(int,int)>
<android.app.NotificationChannelGroup: java.lang.String getDescription()>
<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>
<android.net.lowpan.LowpanIdentity: byte[] access$102(android.net.lowpan.LowpanIdentity,byte[])>
<android.location.GnssMeasurementCorrections: double getAltitudeMeters()>
<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>
<android.content.pm.PackageManager: int deleteStatusToPublicStatus(int)>
<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
<android.graphics.Color: int parseColor(java.lang.String)>
<android.security.keystore.Utils: byte[] cloneIfNotNull(byte[])>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)>
<android.content.res.XmlBlock$Parser: java.lang.Object getProperty(java.lang.String)>
<android.media.soundtrigger.SoundTriggerManager$Model: java.util.UUID getVendorUuid()>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: java.lang.Object getItem(int)>
<android.filterfw.core.Filter: java.util.Collection getInputPorts()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray getWindows()>
<android.app.Notification: long getTimeout()>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUserCached(java.lang.String,int,int)>
<android.graphics.text.LineBreaker$Result: float getLineDescent(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.hardware.cas.V1_0.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.widget.ToastPresenter: android.view.View getView()>
<android.view.accessibility.CaptioningManager: boolean isEnabled()>
<android.hardware.camera2.legacy.RequestHolder: android.hardware.camera2.CaptureRequest getRequest()>
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.internal.telephony.cdma.SmsMessage: java.util.ArrayList getSmsCbProgramData()>
<android.telecom.PhoneAccount: int getHighlightColor()>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.CharSequence getAppLabel()>
<android.app.Notification$CarExtender$UnreadConversation: android.app.RemoteInput getRemoteInput()>
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.telephony.ims.aidl.IImsMmTelListener getDefaultImpl()>
<android.app.usage.StorageStats: long getAppBytes()>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isApplicationVisibleForRole$5(java.lang.String,java.lang.String,android.app.role.IRoleController)>
<android.content.ContentCaptureOptions: int describeContents()>
<android.telephony.CellIdentityTdscdma: java.util.Set getAdditionalPlmns()>
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getLocalCallProfile()>
<android.widget.TextView: int viewportToContentVerticalOffset()>
<android.app.INotificationManager$Default: int getBlockedAppCount(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.view.ViewRootImpl: int getWidth()>
<android.hardware.display.DisplayedContentSamplingAttributes: int getComponentMask()>
<android.media.SubtitleTrack$CueList$EntryIterator: android.util.Pair next()>
<android.window.WindowContainerTransaction$Change: int describeContents()>
<android.animation.Keyframe: java.lang.Object clone()>
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn()>
<com.android.internal.view.IDragAndDropPermissions$Stub: com.android.internal.view.IDragAndDropPermissions getDefaultImpl()>
<android.filterfw.core.FrameFormat: int calcSize(int[])>
<android.hardware.camera2.legacy.RequestHolder: java.util.Collection getHolderTargets()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>
<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>
<android.app.ActivityManager$TaskSnapshot: int getWindowingMode()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>
<android.window.IWindowContainerToken$Stub: android.os.IBinder asBinder()>
<android.hardware.location.NanoApp: long getAppId()>
<android.location.Address: double getLatitude()>
<com.android.internal.app.LocalePicker: java.lang.String[] getSystemAssetLocales()>
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>
<android.service.autofill.FillEventHistory: java.util.List getEvents()>
<android.app.NotificationHistory: java.lang.String[] getPooledStringsToWrite()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileCalendarPackagesForUser(int)>
<android.app.ProfilerInfo: int hashCode()>
<com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>
<android.app.IActivityManager$Stub$Proxy: int restartUserInBackground(int)>
<android.text.style.TypefaceSpan: android.graphics.Typeface getTypeface()>
<android.app.backup.IRestoreSession$Stub: android.os.IBinder asBinder()>
<android.location.GnssNavigationMessage: int describeContents()>
<android.app.PendingIntent: int getCreatorUid()>
<android.view.contentcapture.ViewNode: java.lang.CharSequence getText()>
<android.hardware.ICameraService$Default: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)>
<com.android.internal.policy.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()>
<android.app.Notification$BubbleMetadata: android.app.PendingIntent getBubbleIntent()>
<android.telephony.NetworkRegistrationInfo: int hashCode()>
<android.hardware.location.IContextHubCallback$Default: android.os.IBinder asBinder()>
<android.os.IIncidentAuthListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ResourcesManager: android.view.Display getAdjustedDisplay(int,android.content.res.Resources)>
<android.telephony.data.ApnSetting: int getMaxConns()>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: com.android.ims.internal.IImsFeatureStatusCallback asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnTime(long,int)>
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>
<android.accessibilityservice.GestureDescription$GestureStep: int describeContents()>
<android.app.IActivityManager$Default: int getLaunchedFromUid(android.os.IBinder)>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>
<android.hardware.cas.V1_2.ICas$Stub: java.util.ArrayList getHashChain()>
<android.telephony.CellInfoLte: int describeContents()>
<android.app.IInstrumentationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.Environment: java.io.File getDataMiscCeDirectory(int)>
<android.view.SearchEvent: android.view.InputDevice getInputDevice()>
<android.text.style.TtsSpan: java.lang.String getType()>
<android.app.IActivityManager$Stub$Proxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()>
<android.content.pm.PackageInstaller: java.util.List getStagedSessions()>
<android.media.AudioPlaybackConfiguration: int describeContents()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>
<com.android.internal.os.IShellCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<com.google.android.mms.pdu.PduPart: byte[] getContentTransferEncoding()>
<android.hardware.usb.UsbPortStatus: int getCurrentMode()>
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int hashCode()>
<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>
<android.media.tv.TvInputInfo: int hashCode()>
<android.os.connectivity.WifiBatteryStats: long getKernelActiveTimeMillis()>
<android.os.storage.StorageManager: long getCacheSizeBytes(java.util.UUID)>
<android.view.ViewTreeObserver$CopyOnWriteArray$Access: java.lang.Object get(int)>
<android.telephony.RadioAccessFamily$1: android.telephony.RadioAccessFamily[] newArray(int)>
<android.telephony.TelephonyManager: boolean isImsRegistered()>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int)>
<com.android.ims.internal.IImsCallSession$Default: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>
<android.hardware.camera2.params.MandatoryStreamCombination: java.lang.CharSequence getDescription()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener getUpdateListener()>
<android.view.ViewConfiguration: int getDoubleTapSlop()>
<android.hardware.display.IColorDisplayManager$Default: int getNightDisplayAutoModeRaw()>
<android.net.IConnectivityManager$Default: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>
<android.media.tv.ITvInputHardwareCallback$Default: android.os.IBinder asBinder()>
<android.telecom.VideoProfile: int getVideoState()>
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.view.IAppTransitionAnimationSpecsFuture getDefaultImpl()>
<android.content.ClipDescription: android.os.PersistableBundle getExtras()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int onUserRemoved(int)>
<com.android.internal.graphics.palette.Target: float getPopulationWeight()>
<android.telephony.TelephonyHistogram: int getCategory()>
<android.database.sqlite.SQLiteGlobal: long getWALTruncateSize()>
<android.widget.LinearLayout: int getGravity()>
<android.telephony.SignalStrength: int getLevel()>
<android.app.WindowConfiguration: int compareTo(android.app.WindowConfiguration)>
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback getDefaultImpl()>
<android.media.tv.TvInputManager: java.util.List getTvContentRatingSystemList()>
<android.app.timedetector.NetworkTimeSuggestion: java.util.List getDebugInfo()>
<android.hardware.location.NanoApp: byte[] getAppBinary()>
<android.net.ITetheringStatsProvider$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.NetworkScanRequest$1: void <init>()>
<android.app.Activity: android.content.ComponentName autofillClientGetComponentName()>
<android.telephony._$$Lambda$U5dt9Oz29BpLzJ19WIl50whqAGs: java.lang.Object applyOrThrow(java.lang.Object,java.lang.Object)>
<android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetFraction()>
<com.google.android.mms.util.PduCacheEntry: com.google.android.mms.pdu.GenericPdu getPdu()>
<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo createFromParcel(android.os.Parcel)>
<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int,android.media.MediaMetadataRetriever$BitmapParams)>
<android.location.LocationManager: void getCurrentLocation(java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: int getFeatureState()>
<android.app.IUiModeManager$Default: android.os.IBinder asBinder()>
<android.view.inputmethod.InputMethodManager: int getInputMethodWindowVisibleHeight()>
<com.android.internal.telephony.SmsHeader: boolean equals(java.lang.Object)>
<com.android.internal.statusbar.IStatusBar$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getAidForAppType(int)>
<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage[] newArray(int)>
<android.app.SystemServiceRegistry$30: android.view.inputmethod.InputMethodManager getService(android.app.ContextImpl)>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>
<android.view.contentcapture.ContentCaptureManager: java.lang.String access$200()>
<android.content.res.Resources: float getFraction(int,int,int)>
<android.app.admin.IDevicePolicyManager$Default: long getLastNetworkLogRetrievalTime()>
<android.app.Person: int describeContents()>
<com.android.ims.internal.IImsUt$Default: int updateCallBarringForServiceClass(int,int,java.lang.String[],int)>
<android.net.lowpan.LowpanIdentity: int getPanid()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)>
<android.app.slice.SliceItem: java.util.List getHints()>
<android.app.IActivityManager$Stub$Proxy: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)>
<android.view.KeyEvent: int getSource()>
<android.graphics.fonts.FontVariationAxis: float getStyleValue()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setDataUsage(long,long)>
<android.app.IActivityManager$Stub$Proxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>
<android.printservice.PrintServiceInfo: java.lang.String getId()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorForPhone(int)>
<android.media.MediaPlayer$TrackInfo: int describeContents()>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()>
<android.app.admin.DevicePolicyManager: boolean getForceEphemeralUsers(android.content.ComponentName)>
<android.os.storage.StorageManager: android.os.Looper access$300(android.os.storage.StorageManager)>
<android.telephony.emergency.EmergencyNumber: java.lang.String getMnc()>
<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.net.NetworkPolicyManager: boolean getRestrictBackground()>
<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,int,int)>
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()>
<android.widget.GridView: int computeVerticalScrollOffset()>
<android.net.nsd.NsdServiceInfo: int describeContents()>
<android.app.Notification$WearableExtender: boolean getHintAmbientBigPicture()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationCenterY(int)>
<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String,int)>
<android.window.WindowContainerTransaction$Change: int access$476(android.window.WindowContainerTransaction$Change,int)>
<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer getDeviceServer()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.MergedConfiguration: int describeContents()>
<android.app.Notification: java.util.List getContextualActions()>
<android.hardware.camera2.CameraManager$CameraManagerGlobal$1: int compare(java.lang.String,java.lang.String)>
<android.net.INetworkPolicyManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()>
<android.view.inputmethod.InputMethodManager: int getDisplayId()>
<android.net.ITetheringStatsProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IPinnedStackController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.ChildZygoteProcess: int getPid()>
<android.view.contentcapture.ViewNode: int getScrollX()>
<android.os.ICancellationSignal$Stub: android.os.IBinder asBinder()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List getUidOps(int,int[])>
<android.media.audiopolicy.AudioPolicy: int attachMixes(java.util.List)>
<android.text.style.SuggestionSpan: int getSpanTypeIdInternal()>
<android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>
<com.android.internal.widget.LockPatternUtils: java.lang.String getOwnerInfo(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getUserProvisioningState()>
<android.app.admin.DevicePolicyManager: boolean isBackupServiceEnabled(android.content.ComponentName)>
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()>
<android.media.IPlayer$Default: android.os.IBinder asBinder()>
<android.app.usage.UsageStats: long getTotalTimeForegroundServiceUsed()>
<android.telephony.TelephonyManager: int getSubscriptionId()>
<android.hardware.ICameraServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.LocationManager: android.location.ILocationManager access$000(android.location.LocationManager)>
<com.android.ims.internal.IImsUtListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()>
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceId()>
<android.media.AudioManager: int getDevicesForStream(int)>
<android.net.Uri$Builder: android.net.Uri$Builder query(android.net.Uri$Part)>
<com.android.internal.util.BitUtils: long getUint32(java.nio.ByteBuffer,int)>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int,int,int)>
<android.graphics.Paint: float getLetterSpacing()>
<android.media.AudioManager: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)>
<android.os.ProxyFileDescriptorCallback: int onWrite(long,int,byte[])>
<android.app.ApplicationPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<android.text.style.QuoteSpan: int getSpanTypeIdInternal()>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowStart()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.util.Map getRecoveryStatus()>
<android.os.WorkSource: int get(int)>
<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>
<android.widget.TextView: int getLineAtCoordinate(float)>
<android.view.textclassifier.TextClassification: int getEntityCount()>
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(android.os.UserHandle)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getBackupAgentName()>
<android.media.AudioSystem: int getDefaultStreamVolume(int)>
<android.location.Location: long getElapsedRealtimeAgeNanos()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<com.android.internal.telephony.ITelephony$Default: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)>
<android.app.slice.SliceManager: int checkSlicePermission(android.net.Uri,int,int)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<android.media.MediaCodecInfo$CodecCapabilities: int getMaxSupportedInstances()>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<android.view.View: int getFocusable()>
<android.media.AudioAttributes: int getContentType()>
<com.android.internal.telephony.ITelephony$Default: boolean isMvnoMatched(int,int,java.lang.String)>
<android.accessibilityservice.GestureDescription$StrokeDescription: float getLength()>
<android.hardware.camera2.impl.CameraMetadataNative: java.util.ArrayList getRecommendedStreamConfigurations()>
<android.app.assist.AssistContent: java.lang.String getStructuredData()>
<android.widget.ProgressBar: android.graphics.BlendMode getProgressBackgroundTintBlendMode()>
<android.graphics.drawable.VectorDrawable$VFullPath: int getStrokeColor()>
<android.graphics.ColorSpace$Model: int getComponentCount()>
<android.content.IContentService$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Stub$Proxy: int getMultipathPreference(android.net.Network)>
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.media.midi.IMidiDeviceOpenCallback getDefaultImpl()>
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)>
<android.media.session.ISession$Default: android.media.session.ISessionController getController()>
<android.service.vr.IVrStateCallbacks$Stub: android.service.vr.IVrStateCallbacks getDefaultImpl()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int getParameter(android.os.ParcelUuid,int)>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getOpportunisticNetworkServiceRegisterer()>
<android.app.role.IRoleManager$Stub$Proxy: java.util.List getRoleHoldersAsUser(java.lang.String,int)>
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsManagerServiceRegisterer()>
<android.net.wifi.nl80211.NativeScanResult: int getFrequencyMhz()>
<android.view.ImeFocusController: int onProcessImeInputStage(java.lang.Object,android.view.InputEvent,android.view.WindowManager$LayoutParams,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback)>
<android.view.View: java.lang.String getTransitionName()>
<android.view.textclassifier.TextClassifierEvent$Builder: int access$500(android.view.textclassifier.TextClassifierEvent$Builder)>
<android.security.keystore.ICredstoreTokenCallback$Stub: android.security.keystore.ICredstoreTokenCallback asInterface(android.os.IBinder)>
<android.view.Display$Mode: int describeContents()>
<android.widget.AbsListView: android.view.View obtainView(int,boolean[])>
<android.media.RemoteControlClient: int getRccStateFromState(int)>
<android.net.TrafficStats: long getTotalRxPackets()>
<android.media.MediaCas: android.media.MediaCas$Session createFromSessionId(java.util.ArrayList)>
<android.content.pm.parsing.component.ParsedActivity: int getDocumentLaunchMode()>
<android.text.Layout: int getOffsetToRightOf(int)>
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: float getInterpolation(float)>
<android.text.style.SuggestionSpan: java.util.Locale getLocaleObject()>
<android.telephony.TelephonyManager: int getSlotIndex()>
<android.telephony.ims.ImsSsData: int getServiceType()>
<android.telephony.CellSignalStrength: int inRangeOrUnavailable(int,int,int)>
<android.view.IWindowFocusObserver$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.util.MemInfoReader: long getCachedSize()>
<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.widget.ImageView: android.graphics.BlendMode getImageTintBlendMode()>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
<android.security.IKeyChainService$Stub: android.security.IKeyChainService getDefaultImpl()>
<android.os.IDumpstateListener$Default: android.os.IBinder asBinder()>
<android.net.Uri$PathPart: java.lang.String getEncoded()>
<android.media.midi.IMidiDeviceListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.autofill.IAutoFillManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keystore.recovery.KeyChainSnapshot: java.util.List getKeyChainProtectionParams()>
<android.telephony.ServiceState: boolean getRoaming()>
<android.hardware.camera2.CameraMetadata: java.util.ArrayList getKeys(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[],boolean)>
<android.service.oemlock.IOemLockService$Stub$Proxy: java.lang.String getLockName()>
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceFormat(android.view.Surface)>
<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()>
<android.widget.TextView: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()>
<android.app.backup.IBackupManagerMonitor$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>
<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int toByteArray(byte[],int)>
<android.app.ApplicationPackageManager: int getInstantAppCookieMaxBytes()>
<android.app.blob.IBlobStoreManager$Stub: android.os.IBinder asBinder()>
<android.view.View: android.view.PointerIcon getPointerIcon()>
<android.view.InsetsAnimationThread: android.view.InsetsAnimationThread get()>
<android.widget.PopupWindow: android.view.View getContentView()>
<android.net.NetworkCapabilities: int describeContents()>
<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()>
<com.android.internal.app.ISoundTriggerService$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.RadioManager: int listModules(java.util.List)>
<android.graphics.ColorSpace$Rgb: int hashCode()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.hdmi.HdmiRecordSources$ExternalPlugData: int extraParamToByteArray(byte[],int)>
<com.android.internal.telephony.ITelephony$Default: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)>
<android.webkit.WebView: android.view.textclassifier.TextClassifier getTextClassifier()>
<android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: int getVoWiFiModeSetting(int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int addAuthToken(byte[])>
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>
<android.graphics.Bitmap: int describeContents()>
<android.content.IntentFilter: int countDataAuthorities()>
<android.widget.CursorAdapter: int getCount()>
<android.app.ActivityManager: int getLauncherLargeIconSizeInner(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>
<android.media.IMediaHTTPService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
<com.android.internal.os.StatsdHiddenApiUsageLogger: com.android.internal.os.StatsdHiddenApiUsageLogger getInstance()>
<android.content.pm.IShortcutService$Stub$Proxy: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)>
<android.app.admin.DevicePolicyManager: int checkProvisioningPreCondition(java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMax()>
<android.media.IMediaHTTPService$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.ims.ImsManager: android.telephony.ims.ImsMmTelManager getImsMmTelManager(int)>
<android.app.IAssistDataReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Default: java.util.List getAllPackages()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getSeparateProfileChallengeEnabled(int)>
<android.app.blob.IBlobCommitCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.logging.InstanceId: int hashCode()>
<android.text.style.ScaleXSpan: int getSpanTypeId()>
<android.app.blob.BlobInfo: java.lang.CharSequence getLabel()>
<android.widget.TextView$CharWrapper: int getTextRunCursor(int,int,boolean,int,int,android.graphics.Paint)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.renderscript.Byte2: byte get(int)>
<android.app.ApplicationPackageManager: int getUserId()>
<android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>
<android.os.IUserManager$Stub$Proxy: int getCredentialOwnerProfile(int)>
<android.app.IActivityManager$Default: int getForegroundServiceType(android.content.ComponentName,android.os.IBinder)>
<android.os.FileUtils$MemoryPipe: java.io.FileDescriptor getFD()>
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()>
<android.view.textclassifier.ConversationActions$Request: java.lang.String getCallingPackageName()>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>
<android.telephony.ims.ImsConferenceState: int getConnectionStateForStatus(java.lang.String)>
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String)>
<android.view.textclassifier.TextLinks$TextLink: android.os.Bundle getExtras()>
<android.content.BroadcastReceiver$PendingResult: int getResultCode()>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>
<android.os.storage.StorageVolume: java.lang.String getNormalizedUuid()>
<android.net.MatchAllNetworkSpecifier: int describeContents()>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int,int)>
<android.graphics.Paint: float getTextSkewX()>
<android.widget.TextView: int getHorizontalOffsetForDrawables()>
<android.content.pm.dex.IArtManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.soundtrigger.SoundTriggerModule: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel,int[])>
<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()>
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IBinder asBinder()>
<android.widget.AbsSpinner: java.lang.CharSequence getAccessibilityClassName()>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: com.android.internal.telephony.euicc.IDisableProfileCallback getDefaultImpl()>
<android.app.Activity: boolean isTopOfTask()>
<android.app.role.IRoleController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.ConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isCurrentInputMethodSetByOwner()>
<android.content.pm.IPackageManager$Stub$Proxy: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringMonthly(java.time.ZonedDateTime)>
<android.location.GpsMeasurementsEvent: android.location.GpsClock getClock()>
<android.security.net.config.CertificatesEntryRef: java.util.Set getTrustAnchors()>
<android.content.ContentResolver: java.util.List getCurrentSyncsAsUser(int)>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.os.IBinder asBinder()>
<android.media.AudioPlaybackConfiguration: int getPlayerInterfaceId()>
<android.app.timezone.ICallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IActivityTaskManager$Default: android.graphics.Point getAppTaskThumbnailSize()>
<android.net.WebAddress: java.lang.String getAuthInfo()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<android.view.DragEvent: float getX()>
<android.view.IDisplayFoldListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityGsm$1: android.telephony.CellIdentityGsm createFromParcel(android.os.Parcel)>
<android.window.WindowContainerTransaction$HierarchyOp: int describeContents()>
<android.provider.FontsContract$FontInfo: int getTtcIndex()>
<android.hardware.hdmi.IHdmiControlService$Default: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
<android.graphics.Bitmap: int getWidth()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getIsimIst()>
<android.hardware.Camera$Parameters: java.lang.String getAntibanding()>
<android.telephony.TelephonyManager: android.telephony.NetworkScan requestNetworkScan(android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback)>
<android.media.soundtrigger.SoundTriggerManager$Model: byte[] getModelData()>
<android.service.notification.StatusBarNotification: int getId()>
<android.hardware.SensorManager: android.hardware.SensorDirectChannel createDirectChannel(android.os.MemoryFile)>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature asInterface(android.os.IBinder)>
<android.app.ApplicationErrorReport$ParcelableCrashInfo: int describeContents()>
<android.print.IPrintDocumentAdapter$Stub$Proxy: android.os.IBinder asBinder()>
<android.accounts.IAccountManagerResponse$Stub: android.os.IBinder asBinder()>
<android.security.IKeyChainAliasCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Default: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File,int)>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<android.os.incremental.IIncrementalService$Default: int makeDirectory(int,java.lang.String)>
<android.database.sqlite.SQLiteConnectionPool: java.lang.String getPath()>
<android.os.Parcel: byte[] readBlob()>
<android.view.ScrollCaptureSession: android.graphics.Point getPositionInWindow()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: android.os.IBinder asBinder()>
<android.os.SystemClock$2: long millis()>
<android.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()>
<android.media.AudioDeviceInfo: int getId()>
<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>
<android.security.keystore.recovery.WrappedApplicationKey: int describeContents()>
<android.content.pm.ShortcutQueryWrapper: int describeContents()>
<android.view.textclassifier.TextClassification: java.lang.String getEntity(int)>
<android.telephony.CellIdentityLte: int getMnc()>
<android.graphics.drawable.VectorDrawable$VFullPath$8: java.lang.Object get(java.lang.Object)>
<android.hardware.camera2.CameraAccessException: java.lang.String getDefaultMessage(int)>
<android.widget.Editor: boolean getFlagInsertionHandleGesturesEnabled()>
<android.telephony.SubscriptionManager: long getLongSubscriptionProperty(int,java.lang.String,long,android.content.Context)>
<android.security.keystore.KeyGenParameterSpec: long getBoundToSpecificSecureUserId()>
<android.hardware.usb.UsbPortStatus: int getCurrentDataRole()>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>
<android.hardware.display.DisplayedContentSamplingAttributes: int getPixelFormat()>
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean getAvbPublicKey(android.gsi.AvbPublicKey)>
<android.os.HidlMemory: long getSize()>
<android.media.IMediaHTTPConnection$Stub: android.media.IMediaHTTPConnection asInterface(android.os.IBinder)>
<android.content.pm.ApplicationInfo: java.lang.CharSequence getCategoryTitle(android.content.Context,int)>
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
<android.content.pm.parsing.component.ParsedActivity: int getSoftInputMode()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean nvWriteCdmaPrl(byte[])>
<android.hardware.location.NanoAppInstanceInfo: java.lang.String getPublisher()>
<android.os.Bundle: int describeContents()>
<android.location.GpsMeasurement: double getCn0InDbHz()>
<android.telephony.PinResult: int getAttemptsRemaining()>
<android.app.SystemServiceRegistry$80: android.service.persistentdata.PersistentDataBlockManager createService()>
<android.util.MergedConfiguration: int hashCode()>
<android.media.AudioTrack: int getDualMonoMode()>
<android.webkit.WebView: int getContentWidth()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState: android.graphics.drawable.Drawable newDrawable()>
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: int getActionTag()>
<android.app.assist.AssistStructure$ViewNode: int[] getTextLineBaselines()>
<android.view.InsetsController: android.view.InsetsController$Host getHost()>
<android.graphics.ColorFilter: long createNativeInstance()>
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>
<android.telephony.SubscriptionPlan: java.lang.CharSequence access$302(android.telephony.SubscriptionPlan,java.lang.CharSequence)>
<android.drm.DrmRights: java.lang.String getAccountId()>
<android.print.IPrintManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.IKeyChainAliasCallback$Stub: android.security.IKeyChainAliasCallback getDefaultImpl()>
<android.widget.PopupWindow: android.transition.Transition getEnterTransition()>
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session createSubsession()>
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getVibratorOnTimer()>
<android.text.InputFilter$LengthFilter: int getMax()>
<android.app.BackStackState: int describeContents()>
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.telephony.DataConnectionRealTimeInfo: boolean equals(java.lang.Object)>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$MagnificationController getMagnificationController(int)>
<android.app.ActivityOptions: int getCallerDisplayId()>
<android.app.StatusBarManager: android.app.StatusBarManager$DisableInfo getDisableInfo()>
<android.app.ITaskStackListener$Default: android.os.IBinder asBinder()>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>
<android.telephony.CellSignalStrengthNr: int getSsSinr()>
<android.widget.ExpandableListView: long getSelectedPosition()>
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: java.lang.String getCameraId()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnSpan()>
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
<com.android.internal.app.ToolbarActionBar: int getNavigationMode()>
<android.os.VibrationEffect$Waveform: int hashCode()>
<android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
<android.print.IPrintDocumentAdapter$Stub: android.print.IPrintDocumentAdapter asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: boolean isVoWiFiSettingEnabled(int)>
<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>
<android.util.Base64$Encoder: int maxOutputSize(int)>
<android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertEffectModeFromLegacy(java.lang.String)>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor)>
<android.app.WallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int)>
<android.os.IPowerManager$Default: int getLastSleepReason()>
<android.content.pm.IShortcutService$Stub: android.content.pm.IShortcutService getDefaultImpl()>
<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()>
<android.os.IProgressListener$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: int getVoiceNetworkType(int)>
<android.os.UserManager: int[] getEnabledProfileIds(int)>
<android.widget.BaseAdapter: int getViewTypeCount()>
<android.content.res.loader.ResourcesLoader: java.util.List getApkAssets()>
<android.os.IPowerManager$Stub$Proxy: float getBrightnessConstraint(int)>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeIdInternal()>
<com.android.internal.view.menu.CascadingMenuPopup: android.os.Parcelable onSaveInstanceState()>
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)>
<android.app.NotificationHistory$HistoricalNotification: android.graphics.drawable.Icon getIcon()>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.database.CursorWrapper: double getDouble(int)>
<android.content.IntentFilter: int getPriority()>
<android.telephony.RadioAccessFamily: int getRadioAccessFamily()>
<android.location.LocationManager: boolean isExtraLocationControllerPackageEnabled()>
<android.location.GnssMeasurement: double getFullInterSignalBiasNanos()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener asInterface(android.os.IBinder)>
<android.os.UserHandle: int getAppIdFromSharedAppGid(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols(int)>
<android.service.notification.NotificationListenerService$Ranking: int getUserSentiment()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener getDefaultImpl()>
<android.telephony.CellIdentity$1: void <init>()>
<android.content.rollback.IRollbackManager$Default: int notifyStagedSession(int)>
<android.net.Uri$StringUri: java.lang.String parseAuthority(java.lang.String,int)>
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getNotificationChannelGroupForPackage(java.lang.String,java.lang.String,int)>
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: java.lang.String getSerial(java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] getSlotsMapping()>
<android.hardware.location.IContextHubClientCallback$Stub: android.os.IBinder asBinder()>
<android.net.Uri$Part$EmptyPart: boolean isEmpty()>
<android.view.IPinnedStackListener$Default: android.os.IBinder asBinder()>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderResponse waitForAndGetProvider()>
<android.widget.RemoteViews$ViewPaddingAction: int getActionTag()>
<android.hardware.hdmi.IHdmiControlCallback$Default: android.os.IBinder asBinder()>
<android.hardware.cas.V1_0.IMediaCasService$Proxy: java.util.ArrayList getHashChain()>
<android.telephony.ClosedSubscriberGroupInfo: int getCsgIdentity()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkOperation(int,int,java.lang.String)>
<android.net.IIpSecService$Stub$Proxy: android.net.IpSecTunnelInterfaceResponse createTunnelInterface(java.lang.String,java.lang.String,android.net.Network,android.os.IBinder,java.lang.String)>
<android.graphics.drawable.Icon: int getDataOffset()>
<android.hardware.camera2.impl.CaptureResultExtras: int getAfTriggerId()>
<android.content.pm.dex.IArtManager$Stub: android.content.pm.dex.IArtManager asInterface(android.os.IBinder)>
<android.os.BatterySaverPolicyConfig: boolean getEnableAdjustBrightness()>
<android.hardware.ISensorPrivacyListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getStagedSessions()>
<android.transition.ChangeImageTransform$2: android.graphics.Matrix get(android.widget.ImageView)>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsEcbm getEcbmInterface()>
<android.os.IServiceManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: int getWindowAttachCount()>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()>
<android.print.PrinterCapabilitiesInfo: int describeContents()>
<android.view.IWindow$Stub: android.os.IBinder asBinder()>
<android.media.audiopolicy.AudioProductStrategy: int getId()>
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)>
<android.telecom.Logging.EventManager$EventRecord$EventTiming: long getTime()>
<android.app.backup.IFullBackupRestoreObserver$Stub: android.os.IBinder asBinder()>
<android.widget.Editor: boolean getFlagCursorDragFromAnywhereEnabled()>
<android.app.admin.SystemUpdatePolicy$ValidationFailedException: int getErrorCode()>
<android.companion.ICompanionDeviceManager$Default: java.util.List getAssociations(java.lang.String,int)>
<android.content.IRestrictionsManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: int getPhysicalAddress()>
<android.telephony.ServiceState: int getVoiceRegState()>
<android.media.session.IActiveSessionsListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List getInstalledModules(int)>
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialTextAfterCursor(int,int)>
<android.telecom.Logging.EventManager: java.util.Map getCallEventRecordMap()>
<android.content.IIntentSender$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<android.hardware.radio.ICloseHandle$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>
<android.media.tv.TvTrackInfo: java.lang.String getEncoding()>
<com.android.internal.telephony.ISub$Stub$Proxy: int addSubInfo(java.lang.String,java.lang.String,int,int)>
<android.app.AppOpsManager: int checkAudioOpNoThrow(int,int,int,java.lang.String)>
<com.android.internal.inputmethod.IInputContentUriToken$Stub: com.android.internal.inputmethod.IInputContentUriToken asInterface(android.os.IBinder)>
<android.os.connectivity.CellularBatteryStats: long getNumPacketsTx()>
<android.print.IPrintManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.mms.pdu.PduHeaders: byte[] getTextString(int)>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.media.AudioManager: android.media.AudioPortConfig updatePortConfig(android.media.AudioPortConfig,java.util.ArrayList)>
<android.app.IUserSwitchObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.ICameraDeviceUser$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.ShortcutInfo$Builder: int access$700(android.content.pm.ShortcutInfo$Builder)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int isEmpty(int)>
<android.app.IWallpaperManager$Stub: android.os.IBinder asBinder()>
<android.media.session.ISessionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioRecordingConfiguration: java.util.List getEffects()>
<android.security.keystore.IKeystoreOperationResultCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.IWindowManager$Stub$Proxy: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)>
<android.hardware.biometrics.IAuthService$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioRecord: int getState()>
<android.telephony.CellInfoWcdma: android.telephony.CellInfo sanitizeLocationInfo()>
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.ContextHubInfo getContextHubInfo(int)>
<android.app.AppOpsManager$OpEventProxyInfo: int getUid()>
<android.content.pm.ILauncherApps$Stub: android.content.pm.ILauncherApps getDefaultImpl()>
<android.database.BulkCursorToCursorAdaptor: int getCount()>
<com.android.internal.telephony.ISub$Default: int setDataRoaming(int,int)>
<android.widget.AdapterViewAnimator: int getBaseline()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>
<android.app.IActivityManager$Stub: android.os.IBinder asBinder()>
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: android.widget.RemoteViewsAdapter$LoadingViewTemplate getLoadingTemplate(android.content.Context)>
<android.widget.RemoteViews$SetRippleDrawableColor: int getActionTag()>
<android.telephony.SubscriptionManager: boolean getBooleanSubscriptionProperty(int,java.lang.String,boolean,android.content.Context)>
<android.app.Notification$Builder: int access$2400(android.app.Notification$Builder)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean iccCloseLogicalChannel(int,int)>
<android.app.role.IOnRoleHoldersChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()>
<android.os.BatterySaverPolicyConfig: int describeContents()>
<android.app.ApplicationPackageManager: java.lang.String[] getUnsuspendablePackages(java.lang.String[])>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDisplayOptions()>
<android.app.usage.AppStandbyInfo: int describeContents()>
<android.location.ILocationManager$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: int getUidForSharedUser(java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isCaCertApproved(java.lang.String,int)>
<android.media.tv.TvInputManager: android.media.tv.ITvInputManager access$400(android.media.tv.TvInputManager)>
<android.security.IKeyChainAliasCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Notification: android.app.Notification$BubbleMetadata getBubbleMetadata()>
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getAccessibilityShortcutTargets(int)>
<android.app.ApplicationPackageManager: int checkSignatures(int,int)>
<android.media.MediaDrm: int getMaxSecurityLevel()>
<android.widget.ExpandableListPosition: long getPackedPosition()>
<android.telephony.SubscriptionPlan: long getDataUsageBytes()>
<android.media.tv.TvStreamConfig: int getMaxWidth()>
<android.graphics.ColorSpace: float[] access$1100()>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults()>
<android.media.IRemoteVolumeController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageManager$Default: int checkUidSignatures(int,int)>
<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedByte()>
<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)>
<android.net.NetworkProvider: java.lang.String getName()>
<android.hardware.camera2.CaptureRequest$Key: java.lang.String getName()>
<android.content.pm.IPinItemRequest$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.legacy.PerfMeasurement: int getCompletedQueryCount()>
<android.os.IDeviceIdleController$Default: int[] getAppIdWhitelist()>
<com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService getDefaultImpl()>
<android.media.AudioTrack: int getOffloadDelay()>
<android.hardware.display.IVirtualDisplayCallback$Stub: android.hardware.display.IVirtualDisplayCallback asInterface(android.os.IBinder)>
<android.app.ISearchManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.SubscriptionInfo: java.lang.String givePrintableIccid(java.lang.String)>
<android.database.CursorWrapper: int getColumnCount()>
<android.net.lowpan.ILowpanNetScanCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.PendingIntent: boolean isBroadcast()>
<android.net.IConnectivityManager$Default: java.lang.String getMobileProvisioningUrl()>
<android.content.pm.parsing.component.ParsedPermissionGroup: int getBackgroundRequestResourceId()>
<android.content.pm.IPackageManager$Default: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getSelfManagedPhoneAccounts(java.lang.String,java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: java.util.List getEnabledNotificationListeners(int)>
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()>
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.net.INetworkScoreService$Stub$Proxy: android.os.IBinder asBinder()>
<android.printservice.recommendation.IRecommendationsChangeListener$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int getNativeSize()>
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getState()>
<android.widget.Editor$PositionListener: int getPositionX()>
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.hardware.cas.V1_2.ICas$Proxy: int release()>
<android.hardware.radio.V1_2.CellInfoLte: int hashCode()>
<android.view.VerifiedKeyEvent: int getFlags()>
<android.app.admin.IDevicePolicyManager$Default: boolean getStorageEncryption(android.content.ComponentName,int)>
<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>
<android.view.SurfaceControl: android.view.SurfaceControl$DisplayInfo getDisplayInfo(android.os.IBinder)>
<android.app.AppOpsManager: java.util.List getPackagesForOps(java.lang.String[])>
<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)>
<android.app.AsyncNotedAppOp: java.lang.String getMessage()>
<android.app.Activity: boolean isActivityTransitionRunning()>
<android.view.InputDevice: int getControllerNumber()>
<android.graphics.Paint: float getShadowLayerDx()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallStateForSlot(int)>
<android.location.ILocationManager$Stub$Proxy: java.util.List getTestProviderCurrentRequests(java.lang.String)>
<android.animation.PathKeyframes: java.lang.Object getValue(float)>
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$Callback)>
<android.telephony.SignalStrength: int getLteCqi()>
<android.telephony.CellIdentityLte: int getEarfcn()>
<android.media.tv.TvInputManager$Session: java.lang.String getSelectedTrack(int)>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>
<android.app.AppOpsManager$HistoricalOp: long getForegroundAccessDuration(int)>
<android.widget.RemoteViews$ViewContentNavigation: int getActionTag()>
<android.location.GpsClock: long getFullBiasInNs()>
<android.media.AudioDeviceAttributes: int hashCode()>
<android.view.IRecentsAnimationRunner$Stub: android.os.IBinder asBinder()>
<android.view.View: int getNextFocusRightId()>
<android.widget.TextView: boolean getLinksClickable()>
<android.net.RouteInfo: int hashCode()>
<android.content.pm.PackageInstaller$SessionInfo: long getCreatedMillis()>
<android.telephony.ModemInfo: boolean equals(java.lang.Object)>
<android.view.WindowInsetsAnimation: float getAlpha()>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<android.app.slice.ISliceManager$Stub$Proxy: android.net.Uri[] getPinnedSlices(java.lang.String)>
<android.telephony.NeighboringCellInfo: int describeContents()>
<android.app.AppOpsManager$NoteOpEvent: long getDuration()>
<android.media.Utils: int divUp(int,int)>
<android.content.pm.IPackageInstallerSession$Stub: java.lang.String getTransactionName(int)>
<android.app.IActivityManager$Default: int stopUser(int,boolean,android.app.IStopUserCallback)>
<android.view.autofill.AutofillId: int describeContents()>
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.app.DisabledWallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int)>
<com.android.ims.internal.IImsUt$Default: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getMimeGroups()>
<android.widget.TextView: int getTotalPaddingStart()>
<com.android.internal.os.BatteryStatsImpl: boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)>
<android.hardware.location.IContextHubService$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isConcurrentVoiceAndDataAllowed(int)>
<android.security.net.config.UserCertificateSource: android.security.net.config.UserCertificateSource getInstance()>
<android.os.UserManager: java.util.List getUserHandles(boolean)>
<android.media.Metadata: long getLong(int)>
<android.media.MediaDescription: android.os.Bundle getExtras()>
<android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.UiccAccessRule$1: android.telephony.UiccAccessRule createFromParcel(android.os.Parcel)>
<android.media.session.MediaSession$QueueItem: long getQueueId()>
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubscriptionSpecificCarrierId(int)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.content.Context: android.app.IApplicationThread getIApplicationThread()>
<android.service.dreams.IDreamManager$Default: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsCallSession createCallSession(android.telephony.ims.ImsCallProfile)>
<android.app.ActivityOptions: boolean getTaskAlwaysOnTop()>
<com.android.internal.telephony.IOns$Stub: com.android.internal.telephony.IOns asInterface(android.os.IBinder)>
<android.hardware.camera2.impl.CameraMetadataNative$8: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)>
<android.hardware.camera2.params.MeteringRectangle: int getX()>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1400()>
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>
<android.telephony.AvailableNetworkInfo$1: android.telephony.AvailableNetworkInfo[] newArray(int)>
<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getHardwareList()>
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getUserRestrictions(int)>
<android.net.LinkProperties: java.lang.String getInterfaceName()>
<android.view.MotionEvent: float getX(int)>
<android.app.AppOpsManager: void getHistoricalOps(android.app.AppOpsManager$HistoricalOpsRequest,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.media.AudioManager: java.util.List getHwOffloadEncodingFormatsSupportedForA2DP()>
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: android.media.AudioFormat getCaptureFormat()>
<android.widget.Editor$EasyEditPopupWindow: int clipVertically(int)>
<android.telephony.ims.ImsSsData: int getServiceClass()>
<android.os.IHardwarePropertiesManager$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledLockingShiftTables()>
<android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)>
<android.net.wifi.nl80211.RadioChainInfo: int describeContents()>
<android.content.ClipData$Item: android.content.Intent getIntent()>
<android.media.session.ISessionCallback$Default: android.os.IBinder asBinder()>
<android.app.ActivityThread: java.lang.String getProcessName()>
<android.os.SystemProperties: java.lang.String get(java.lang.String)>
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>
<android.location.ILocationManager$Stub$Proxy: long getGnssCapabilities()>
<android.hardware.radio.TunerCallbackAdapter: java.util.List getLastCompleteList()>
<android.text.style.AccessibilityReplacementSpan: int getSpanTypeId()>
<android.media.soundtrigger.SoundTriggerManager$Model: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getGenericSoundModel()>
<android.view.MotionEvent: int getHistorySize()>
<com.android.internal.os.BatteryStatsHelper: long getStatsPeriod()>
<android.content.pm.IPackageManager$Default: java.lang.String getPermissionControllerPackageName()>
<android.widget.GridView: int getHorizontalSpacing()>
<android.telephony.SignalStrength: java.util.List getCellSignalStrengths(java.lang.Class)>
<android.os.storage.VolumeInfo: java.lang.String getDescription()>
<android.net.EthernetManager: boolean isAvailable(java.lang.String)>
<android.os.incremental.IncrementalNewFileParams: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>
<android.telephony.TelephonyManager: int getPreferredOpportunisticDataSubscription()>
<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncsAsUser(int)>
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>
<android.telephony.ServiceState: int hashCode()>
<com.android.internal.app.ISoundTriggerService$Default: int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)>
<android.security.KeyStore: int insert(java.lang.String,byte[],int,int)>
<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder asBinder()>
<android.view.contentcapture.DataRemovalRequest: int describeContents()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isEnabled()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName(int)>
<android.telephony.TelephonyManager: int getSimState()>
<android.os.IIncidentDumpCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageDeleteObserver2$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxUsers()>
<com.android.internal.os.BatteryStatsImpl: long getPowerSaveModeEnabledTime(long,int)>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForPackageForUser(long,long,int,java.lang.String,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: boolean isMasterMute()>
<android.graphics.drawable.VectorDrawable$VGroup: java.lang.String getGroupName()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo[] newArray(int)>
<android.print.PrintJobInfo: float getProgress()>
<android.os.BugreportManager: android.content.Context access$000(android.os.BugreportManager)>
<android.view.AccessibilityIterators$AbstractTextSegmentIterator: int[] getRange(int,int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int is_hardware_backed(java.lang.String)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>
<android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession asInterface(android.os.IBinder)>
<android.app.Notification$WearableExtender: java.util.List getActions()>
<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>
<android.media.tv.tunerresourcemanager.TunerDemuxRequest: int describeContents()>
<android.print.PrintAttributes: int getColorMode()>
<android.net.NetworkStats: int size()>
<android.media.RingtoneManager: android.net.Uri addCustomExternalRingtone(android.net.Uri,int)>
<android.net.NetworkIdentity: boolean getMetered()>
<android.telephony.data.ApnSetting$Builder: int access$600(android.telephony.data.ApnSetting$Builder)>
<android.os.storage.StorageManager: java.util.UUID getUuidForPath(java.io.File)>
<com.android.internal.app.IVoiceInteractorRequest$Stub: android.os.IBinder asBinder()>
<android.os.IThermalEventListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SmsManager$4: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int)>
<android.media.audio.common.AudioConfig: int describeContents()>
<com.android.internal.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()>
<android.app.ActivityManager: java.util.List getAppTasks()>
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()>
<android.content.pm.IPackageStatsObserver$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellInfoWcdma: int hashCode()>
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,boolean,int,int)>
<android.view.GestureExclusionTracker: java.util.List computeChangedRects()>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallBarring(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getAllPhoneAccountHandles()>
<android.net.ConnectivityManager: int registerNetworkFactory(android.os.Messenger,java.lang.String)>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: android.os.IBinder asBinder()>
<android.app.ActivityManager: java.util.List getRunningExternalApplications()>
<android.app.admin.IDevicePolicyManager$Default: boolean getForceEphemeralUsers(android.content.ComponentName)>
<android.app.assist.AssistStructure$ViewNode: float getElevation()>
<android.app.usage.StorageStats: long getCodeBytes()>
<com.android.internal.telephony.ITelephony$Default: boolean isAvailable(int,int,int)>
<android.view.inputmethod.SparseRectFArray: int getFlags(int,int)>
<android.hardware.usb.IUsbSerialReader$Stub: android.hardware.usb.IUsbSerialReader asInterface(android.os.IBinder)>
<android.telephony.UssdResponse: java.lang.CharSequence getReturnMessage()>
<android.location.GpsMeasurement: double getDopplerShiftUncertaintyInHz()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$ChildDrawable addLayer(android.graphics.drawable.Drawable,int[],int,int,int,int,int)>
<android.animation.Keyframe: float getFraction()>
<com.google.android.mms.pdu.ReadOrigInd: int getReadStatus()>
<android.media.MediaRecorder: int getAudioSourceMax()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.hardware.cas.V1_2.ICas$Proxy: java.util.ArrayList getHashChain()>
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialSelectedText(int)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigByComponentForSubId(java.lang.String,int)>
<android.media.RoutingSessionInfo: java.lang.String getId()>
<android.app.WallpaperManager: boolean isWallpaperBackupEligible(int)>
<android.renderscript.RenderScript: long nProgramFragmentCreate(java.lang.String,java.lang.String[],long[])>
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int describeContents()>
<com.android.internal.app.LocalePicker: android.os.LocaleList getLocales()>
<android.os.storage.IStorageShutdownObserver$Stub: android.os.storage.IStorageShutdownObserver asInterface(android.os.IBinder)>
<android.telephony.NeighboringCellInfo: int getPsc()>
<android.content.pm.SharedLibraryInfo: java.util.List getDependentPackages()>
<com.android.internal.telephony.ISms$Default: boolean isSMSPromptEnabled()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings build()>
<android.net.ScoredNetwork: int calculateBadge(int)>
<android.content.IClipboard$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.ViewGroup: boolean pointInHoveredChild(android.view.MotionEvent)>
<android.app.LoadedApk$SplitDependencyLoaderImpl: java.lang.ClassLoader getClassLoaderForSplit(java.lang.String)>
<android.view.View: android.view.ViewParent getParent()>
<android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>
<android.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>
<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()>
<android.os.WorkSource: int size()>
<android.filterfw.core.InputPort: java.lang.Object getTarget()>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,int,java.lang.String)>
<com.android.server.NetworkManagementSocketTagger$1: com.android.server.NetworkManagementSocketTagger$SocketTags initialValue()>
<android.app.Activity: android.net.Uri getReferrer()>
<android.app.servertransaction.PendingTransactionActions: android.os.Bundle getOldState()>
<android.telephony.SignalStrength: long getTimestampMillis()>
<com.android.internal.util.ArrayUtils: byte[] newUnpaddedByteArray(int)>
<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()>
<android.net.NetworkRequest: int hashCode()>
<android.telephony.PhoneNumberRange: boolean matches(java.lang.String)>
<android.os.BatterySaverPolicyConfig: boolean getDisableVibration()>
<android.os.VibrationEffect$Composed: int hashCode()>
<android.media.AudioPresentation: int getPresentationId()>
<android.service.notification.ZenModeConfig: java.lang.String getDescription(android.content.Context,boolean,android.service.notification.ZenModeConfig,boolean)>
<android.view.textclassifier.TextSelection$Request: int describeContents()>
<android.widget.TextView: java.lang.String getFontVariationSettings()>
<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>
<android.text.DynamicLayout: int getBottomPadding()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.telephony.RadioAccessSpecifier$1: android.telephony.RadioAccessSpecifier createFromParcel(android.os.Parcel)>
<android.view.ViewRootImpl: android.view.WindowInsets getWindowInsets(boolean)>
<android.telephony.CellSignalStrengthCdma: int describeContents()>
<android.app.IWallpaperManagerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyHistogram: int getMaxTime()>
<android.os.VibrationEffect: int describeContents()>
<android.media.PlaybackParams: int getAudioFallbackMode()>
<android.content.pm.parsing.component.ParsedPermissionGroup: int getRequestRes()>
<android.app.usage.UsageEvents$Event: java.lang.String getTaskRootPackageName()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String,java.lang.String)>
<android.util.apk.ApkSigningBlockUtils: long getCentralDirOffset(java.nio.ByteBuffer,long)>
<android.os.IClientCallback$Stub: android.os.IClientCallback getDefaultImpl()>
<android.app.RemoteAction: int describeContents()>
<android.hardware.hdmi.IHdmiRecordListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.TypedProperties: long getLong(java.lang.String)>
<android.os.IThermalService$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.gles_jni.EGLDisplayImpl: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getMeid(int)>
<android.os.Environment: java.io.File getDataUserCePackageDirectory(java.lang.String,int,java.lang.String)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int,boolean)>
<android.view.ViewDebug: long getViewInstanceCount()>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()>
<android.view.ViewGroup: int getNestedScrollAxes()>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isImsSmsSupportedForSubscriber(int)>
<android.media.session.PlaybackState$CustomAction: java.lang.CharSequence getName()>
<android.app.AppOpsManager$OpEntry: long getDuration()>
<android.app.slice.SliceSpec: java.lang.String getType()>
<com.google.android.mms.pdu.MultimediaMessagePdu: int getPriority()>
<android.view.IWindowManager$Stub$Proxy: float[] getAnimationScales()>
<android.content.pm.IPackageManager$Stub$Proxy: int getApplicationEnabledSetting(java.lang.String,int)>
<android.database.BulkCursorDescriptor: int describeContents()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxSoundModels()>
<android.app.ActivityThread: java.util.concurrent.Executor getExecutor()>
<android.view.InsetsState: android.graphics.Rect getDisplayFrame()>
<android.app.admin.DevicePolicyManager: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read(byte[],int,int)>
<android.app.job.IJobScheduler$Default: android.app.job.JobInfo getPendingJob(int)>
<android.net.IConnectivityManager$Default: android.os.IBinder asBinder()>
<android.os.PowerManager: int getLastShutdownReason()>
<android.media.MediaPlayer: android.media.MediaTimestamp getTimestamp()>
<android.content.pm.UserInfo: boolean isSystemOnly()>
<android.telephony.ims.aidl.IImsRcsFeature$Default: int queryCapabilityStatus()>
<android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager getDefaultImpl()>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>
<android.hardware.ICameraClient$Stub: android.hardware.ICameraClient getDefaultImpl()>
<android.telephony.ims.ImsExternalCallState: android.net.Uri getLocalAddress()>
<android.telephony.CellConfigLte: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()>
<android.app.usage.StorageStats: int describeContents()>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.style.StyleSpan: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstallerPackageName(java.lang.String)>
<android.hardware.Camera: int cameraInitUnspecified(int)>
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.Object getResult()>
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>
<android.telephony.ims.aidl.IImsMmTelListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IUiAutomationConnection$Default: android.os.IBinder asBinder()>
<android.webkit.WebView: android.webkit.PluginList getPluginList()>
<android.app.ActivityManager$TaskSnapshot$Builder: int getPixelFormat()>
<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: long getItemId(int)>
<android.app.ActivityOptions: android.view.RemoteAnimationAdapter getRemoteAnimationAdapter()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>
<android.accessibilityservice.AccessibilityServiceInfo: int getAnimatedImageRes()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.widget.ScrollBarDrawable: android.graphics.ColorFilter getColorFilter()>
<android.app.prediction.AppPredictionContext: android.os.Bundle getExtras()>
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedFrameNumber()>
<android.view.ImeFocusController: android.view.View getServedView()>
<android.graphics.drawable.VectorDrawable: long getNativeTree()>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.os.PowerManager: int getLastSleepReason()>
<android.view.InsetsState: int getSourcesCount()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getOrganizationColorForUser(int)>
<com.android.internal.inputmethod.IInputContentUriToken$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.PnoSettings: int getMin6gRssiDbm()>
<android.view.ViewRootImpl: java.lang.CharSequence getTitle()>
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.app.contentsuggestions.IClassificationsCallback getDefaultImpl()>
<android.app.timezone.IRulesManager$Default: int requestUninstall(byte[],android.app.timezone.ICallback)>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>
<android.hardware.fingerprint.IFingerprintService$Default: java.util.List getEnrolledFingerprints(int,java.lang.String)>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>
<android.graphics.drawable.VectorDrawable$VPath: android.util.Property getProperty(java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ISub$Default: int setDisplayNameUsingSrc(java.lang.String,int,int)>
<android.content.res.AssetManager: long access$200(android.content.res.AssetManager)>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer mutableCopy()>
<com.android.internal.textservice.ITextServicesSessionListener$Default: android.os.IBinder asBinder()>
<android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener getDefaultImpl()>
<com.android.internal.graphics.palette.Target: float getMinimumSaturation()>
<android.accessibilityservice.AccessibilityShortcutInfo: java.lang.String getSettingsActivityName()>
<android.widget.TextView: int computeVerticalScrollRange()>
<android.hardware.lights.LightsManager: android.hardware.lights.LightState getLightState(android.hardware.lights.Light)>
<android.view.textclassifier.SystemTextClassifierMetadata: java.lang.String getCallingPackageName()>
<android.os.MessageQueue: android.os.Message next()>
<android.telephony.data.ApnSetting$Builder: int access$1700(android.telephony.data.ApnSetting$Builder)>
<android.app.ContextImpl: java.lang.String[] databaseList()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int getState(int)>
<android.hardware.radio.RadioManager$AmBandConfig: int hashCode()>
<com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient asInterface(android.os.IBinder)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>
<android.graphics.Rect: int width()>
<android.view.autofill.AutofillId: int getSessionId()>
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>
<android.security.net.config.Pin: int hashCode()>
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)>
<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTimeLocked(long,int)>
<android.content.pm.LauncherApps$PinItemRequest: int describeContents()>
<android.telephony.ServiceState: java.lang.String getVoiceOperatorNumeric()>
<com.android.internal.telephony.INumberVerificationCallback$Stub: android.os.IBinder asBinder()>
<android.text.BoringLayout: int getLineDescent(int)>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)>
<android.media.AudioManager: int getFocusRampTimeMs(int,android.media.AudioAttributes)>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IAppTransitionAnimationSpecsFuture$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>
<android.content.pm.parsing.ParsingPackageImpl: int getOverlayPriority()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.net.TrafficStats: long getTxPackets(java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: int getActivePhoneTypeForSlot(int)>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)>
<android.telephony.SignalStrength: int getEvdoAsuLevel()>
<android.widget.TextView: int getLeftPaddingOffset()>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference getComponentType()>
<android.content.pm.dex.ArtManager: java.lang.String getCurrentProfilePath(java.lang.String,int,java.lang.String)>
<android.os.DropBoxManager$Entry: int getFlags()>
<android.app.INotificationManager$Default: android.service.notification.ZenModeConfig getZenModeConfig()>
<com.android.internal.telephony.ISub$Default: int[] getSubId(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.text.StaticLayout: int unpackStartHyphenEdit(int)>
<android.hardware.radio.RadioManager$FmBandConfig$Builder: android.hardware.radio.RadioManager$FmBandConfig build()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataEnabled(int)>
<com.google.android.mms.ContentType: java.util.ArrayList getVideoTypes()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()>
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.Object getTag()>
<android.telephony.TelephonyManager: java.lang.String getManufacturerCode(int)>
<android.media.AudioRoutesInfo: int describeContents()>
<android.net.NetworkWatchlistManager: byte[] getWatchlistConfigHash()>
<android.app.timezone.ICallback$Stub: android.app.timezone.ICallback getDefaultImpl()>
<android.os.IInstalld$Stub: java.lang.String getTransactionName(int)>
<android.media.tv.TvInputManager: java.util.List getTvInputList()>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: java.util.List getAvailableMandatoryStreamCombinations()>
<android.media.AudioGain: int rampDurationMinMs()>
<android.os.IIncidentAuthListener$Stub: java.lang.String getTransactionName(int)>
<android.media.IAudioService$Default: int getFocusRampTimeMs(int,android.media.AudioAttributes)>
<android.graphics.ImageDecoder: android.util.Size getSampledSize(int)>
<android.app.role.RoleManager: android.content.Intent createRequestRoleIntent(java.lang.String)>
<android.graphics.RenderNode: float getTranslationY()>
<android.security.net.config.ManifestConfigSource$DefaultConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()>
<com.android.internal.os.BatteryStatsImpl: long getNextMinDailyDeadline()>
<android.app.usage.IStorageStatsManager$Default: android.os.IBinder asBinder()>
<android.graphics.Insets: int hashCode()>
<android.telephony.ICellInfoCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataConnectivityPossible(int)>
<android.view.SurfaceView$2: android.graphics.Rect getSurfaceFrame()>
<com.android.internal.content.om.OverlayConfigParser: java.util.ArrayList getConfigurations(com.android.internal.content.om.OverlayConfigParser$OverlayPartition,com.android.internal.content.om.OverlayScanner)>
<android.net.wifi.nl80211.IApInterface$Stub: android.os.IBinder asBinder()>
<android.os.storage.StorageManager: java.lang.String getPrimaryStorageUuid()>
<android.content.pm.parsing.component.ParsedComponent: int getFlags()>
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>
<android.content.pm.ILauncherApps$Default: int getShortcutIconResId(java.lang.String,java.lang.String,java.lang.String,int)>
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()>
<android.app.IActivityManager$Default: java.util.List getRunningExternalApplications()>
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<android.hardware.cas.V1_0.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>
<android.view.ISystemGestureExclusionListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.compat.IOverrideValidator$Stub: com.android.internal.compat.IOverrideValidator getDefaultImpl()>
<android.app.trust.ITrustListener$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioTrack: int getPlayState()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileContactsSearchDisabledForUser(int)>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.app.KeyguardManager: boolean getPrivateNotificationsAllowed()>
<android.media.MediaRouter$RouteGroup: android.media.MediaRouter$RouteInfo getRouteAt(int)>
<com.android.internal.telephony.ISms$Default: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>
<android.hardware.usb.UsbDevice: int getDeviceProtocol()>
<android.media.MediaFormat: java.util.Set getKeys()>
<android.app.ActivityOptions: int getResultCode()>
<android.hardware.camera2.impl.CameraDeviceImpl: int access$1000(android.hardware.camera2.impl.CameraDeviceImpl)>
<com.android.internal.telephony.ITelephony$Default: int getNetworkSelectionMode(int)>
<android.telephony.TelephonyManager: java.util.Map getEmergencyNumberList(int)>
<android.view.View$13: java.lang.Float get(android.view.View)>
<com.android.internal.os.BatteryStatsHelper: double getTotalPower()>
<android.media.IMediaRouterService$Stub$Proxy: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)>
<android.app.admin.DevicePolicyManager: int getProfileWithMinimumFailedPasswordsForWipe(int)>
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback asInterface(android.os.IBinder)>
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()>
<com.android.internal.telecom.ITelecomService$Stub: java.lang.String getTransactionName(int)>
<android.os.UserManager: java.lang.String getUserName()>
<android.text.DynamicLayout: android.util.ArraySet getBlocksAlwaysNeedToBeRedrawn()>
<android.net.lowpan.ILowpanManager$Stub: android.net.lowpan.ILowpanManager asInterface(android.os.IBinder)>
<android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
<android.view.View: int getWindowVisibility()>
<com.android.ims.internal.IImsExternalCallStateListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.tv.TvInputManager: boolean isSingleSessionActive()>
<android.telephony.gsm.GsmCellLocation: int getPsc()>
<android.widget.AbsListView: int reconcileSelectedPosition()>
<android.view.textclassifier.SystemTextClassifierMetadata: int getUserId()>
<android.widget.OverScroller$SplineOverScroller: int access$500(android.widget.OverScroller$SplineOverScroller)>
<android.hardware.camera2.legacy.RequestHolder: int getSubsequeceId()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.Bundle getAppWidgetOptions(java.lang.String,int)>
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()>
<android.widget.Toast: android.view.View getView()>
<com.android.internal.view.IInputSessionCallback$Stub: android.os.IBinder asBinder()>
<android.media.MediaRouterClientState$RouteInfo: int describeContents()>
<android.net.TrafficStats: long getLoopbackTxPackets()>
<android.media.VolumeProvider: java.lang.String getVolumeControlId()>
<android.app.admin.IDevicePolicyManager$Default: int getGlobalPrivateDnsMode(android.content.ComponentName)>
<android.app.admin.DevicePolicyManager: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getOutputSizes(java.lang.Class)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>
<android.os.storage.IStorageManager$Default: int encryptStorage(int,java.lang.String)>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>
<android.net.Uri$StringUri: java.lang.String getEncodedFragment()>
<android.view.IWindowSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma copy()>
<android.view.DisplayInfo: int getNaturalHeight()>
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuFreqTimes(int)>
<android.os.health.HealthStats: int getTimerKeyCount()>
<android.provider.ContactsContract$CommonDataKinds$Phone: int getTypeLabelResource(int)>
<android.content.res.Resources: android.graphics.drawable.DrawableInflater getDrawableInflater()>
<android.app.ActivityManager$TaskDescription: android.graphics.drawable.Icon getRawIcon()>
<android.media.AudioSystem: java.util.ArrayList getDevicesForAttributes(android.media.AudioAttributes)>
<android.media.IAudioService$Stub$Proxy: boolean isCameraSoundForced()>
<android.media.MediaCas: android.os.IHwBinder getBinder()>
<android.app.usage.UsageStats: long getLastTimeForegroundServiceUsed()>
<android.app.NotificationChannel: int getImportance()>
<android.os.Bundle: char getChar(java.lang.String)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.IConnectivityManager$Default: int checkMobileProvisioning(int)>
<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int,boolean)>
<android.app.slice.SliceItem: android.os.Bundle getBundle()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.app.INotificationManager$Stub$Proxy: java.lang.String getNotificationDelegate(java.lang.String)>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.telephony.CellIdentityLte: int getPci()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstantApps(int)>
<android.app.AppOpsManager: int noteProxyOpNoThrow(int,java.lang.String,int,java.lang.String,java.lang.String)>
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getSerial()>
<android.hardware.radio.V1_0.CellIdentityTdscdma: int hashCode()>
<android.app.Service: android.app.Application getApplication()>
<android.telephony.TelephonyManager: int getCallState()>
<android.media.IStrategyPreferredDeviceDispatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()>
<android.widget.ProgressBar: java.lang.CharSequence getAccessibilityClassName()>
<android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait()>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.hardware.SystemSensorManager: int access$500(android.hardware.SystemSensorManager)>
<android.app.AppOpsManager$HistoricalOp: long getBackgroundRejectCount(int)>
<android.content.Intent: short getShortExtra(java.lang.String,short)>
<android.graphics.drawable.ColorStateListDrawable: android.graphics.drawable.Drawable getCurrent()>
<android.app.Notification: boolean getAllowSystemGeneratedContextualActions()>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiTvClient getTvClient()>
<com.android.internal.app.IAppOpsService$Default: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)>
<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)>
<android.telephony.TelephonyManager: boolean isModemEnabledForSlot(int)>
<android.view.InputMonitor: android.view.InputChannel getInputChannel()>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.os.IBinder asBinder()>
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaFormat getDefaultFormat()>
<android.view.autofill.IAutoFillManagerClient$Default: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter(int)>
<android.app.blob.IBlobCommitCallback$Stub: android.app.blob.IBlobCommitCallback getDefaultImpl()>
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForLegacyStreamType(int)>
<android.location.LocationTime: long getTime()>
<android.hardware.location.IContextHubTransactionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.IGnssMeasurementsListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.animation.Transformation: android.graphics.Rect getClipRect()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getDefaultDialerPackage()>
<android.os.IUserManager$Stub$Proxy: int getUserBadgeDarkColorResId(int)>
<android.permission.IPermissionController$Stub: android.permission.IPermissionController asInterface(android.os.IBinder)>
<android.hardware.ISensorPrivacyManager$Stub: android.os.IBinder asBinder()>
<android.telephony.SmsManager: java.lang.String createAppSpecificSmsToken(android.app.PendingIntent)>
<android.app.Instrumentation: boolean isProfiling()>
<android.app.SystemServiceRegistry$StaticApplicationContextServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isRoleVisible$6(java.lang.String,android.app.role.IRoleController)>
<android.content.res.Resources: android.content.res.Configuration[] getSizeConfigurations()>
<android.app.Notification$CarExtender$UnreadConversation: android.os.Bundle getBundleForUnreadConversation()>
<android.media.IMediaRouterService$Default: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)>
<android.view.accessibility.CaptioningManager: java.lang.String getRawLocale()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getAppPredictionServicePackageName()>
<android.telephony.DataConnectionRealTimeInfo$1: android.telephony.DataConnectionRealTimeInfo createFromParcel(android.os.Parcel)>
<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId getAutofillId()>
<android.os.storage.StorageVolume: java.lang.String getUserLabel()>
<android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback getDefaultImpl()>
<android.os.BatteryStats$LevelStepTracker: long computeTimePerLevel()>
<com.android.internal.util.ContrastColorUtil: boolean isGrayscaleIcon(android.graphics.Bitmap)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.app.IActivityTaskManager$Stub: android.app.IActivityTaskManager getDefaultImpl()>
<android.widget.ActionMenuView: android.view.Menu getMenu()>
<android.app.assist.AssistStructure: int getTaskId()>
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraLooper: int waitForOpen(int)>
<android.content.LoggingContentInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.app.backup.IRestoreSession$Default: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>
<android.app.usage.ExternalStorageStats: int describeContents()>
<com.android.internal.telephony.ISms$Default: android.os.Bundle getCarrierConfigValuesForSubscriber(int)>
<android.net.ITestNetworkManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityManager: android.os.Handler$Callback getCallback()>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean,boolean)>
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>
<android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: java.lang.String getTypeAllocationCode(int)>
<android.widget.AbsSpinner: int getChildHeight(android.view.View)>
<android.view.IWindowSession$Stub$Proxy: int addToDisplayAsUser(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])>
<android.media.VolumeShaper$Configuration: int getAllOptionFlags()>
<android.os.IncidentManager$IncidentReport: long getTimestamp()>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>
<android.util.SparseArray: java.lang.Object get(int)>
<android.content.pm.parsing.ParsingPackageImpl: byte[] getRestrictUpdateHash()>
<android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()>
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryEventStats(int,long,long,java.lang.String)>
<android.app.timezone.DistroRulesVersion: int hashCode()>
<android.telephony.DataSpecificRegistrationInfo: android.telephony.LteVopsSupportInfo getLteVopsSupportInfo()>
<android.view.ViewStub: int getInflatedId()>
<android.os.PowerManager: int getMaximumScreenBrightnessForVrSetting()>
<android.app.timezone.RulesManager: android.app.timezone.RulesState getRulesState()>
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveDataSubscriptionId()>
<com.android.internal.midi.MidiDispatcher: int getReceiverCount()>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$sQClc4rjc9ydh0nXpY79gr33av4: java.lang.Object createService(android.content.Context)>
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getTitle()>
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()>
<android.hardware.location.NanoAppInstanceInfo: java.lang.String getName()>
<android.widget.FastScroller$4: java.lang.Integer get(android.view.View)>
<android.content.pm.IPackageManager$Default: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.graphics.drawable.VectorDrawable$VFullPath: long getNativePtr()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.VerifiedInputEvent: int getDisplayId()>
<android.util.RecurrenceRule$RecurringIterator: android.util.Range next()>
<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassificationSession()>
<com.android.internal.widget.VerifyCredentialResponse: int getTimeout()>
<android.service.notification.NotificationRankingUpdate: android.service.notification.NotificationListenerService$RankingMap getRankingMap()>
<android.hardware.usb.UsbInterface: int getId()>
<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.filterfw.core.FrameFormat: int[] getDimensions()>
<android.location.ILocationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants valueOf(java.lang.String)>
<android.content.res.ApkAssets: java.lang.String getAssetPath()>
<android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>
<com.android.internal.view.menu.MenuPopup: int getId()>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>
<android.security.keystore.recovery.WrappedApplicationKey: byte[] getEncryptedKeyMaterial()>
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<android.app.admin.DevicePolicyManager: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)>
<android.app.Notification$InboxStyle: java.util.ArrayList getLines()>
<android.app.KeyguardManager: boolean isKeyguardSecure()>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Rect getRect()>
<android.graphics.Paint: float getStrokeMiter()>
<android.net.INetworkStatsService$Default: java.lang.String[] getMobileIfaces()>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>
<android.content.pm.IPackageStatsObserver$Default: android.os.IBinder asBinder()>
<android.text.AutoGrowArray$ByteArray: byte[] getRawArray()>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>
<android.app.contentsuggestions.IClassificationsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaCodec$CryptoInfo$Pattern: int getSkipBlocks()>
<android.telecom.Logging.EventManager$EventRecord: java.util.List getEvents()>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale)>
<android.print.IPrintJobStateChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.app.trust.ITrustListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.IConnectivityManager$Default: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<android.graphics.NinePatch: android.graphics.Paint getPaint()>
<com.android.internal.telephony.ITelephony$Default: int getLteOnCdmaMode(java.lang.String,java.lang.String)>
<android.media.AudioTrack: int write(byte[],int,int,int)>
<android.hardware.camera2.CaptureResult: long getFrameNumber()>
<android.content.res.Resources: java.lang.String getLastResourceResolution()>
<android.telephony.ims.ImsCallProfile: android.os.Bundle getProprietaryCallExtras()>
<android.telephony.SmsCbLocation: int getLac()>
<android.telephony.ims.ImsCallProfile: android.os.Bundle getCallExtras()>
<android.renderscript.RenderScript: int nFileA3DGetNumIndexEntries(long)>
<android.hardware.location.ContextHubMessage: int getVersion()>
<android.text.Layout: int getIndentAdjust(int,android.text.Layout$Alignment)>
<android.app.admin.IDevicePolicyManager$Default: int getStorageEncryptionStatus(java.lang.String,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<android.telecom.ParcelableCallAnalytics: long getCallDurationMillis()>
<com.android.internal.view.IInputSessionCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.app.IAppOpsService$Default: int checkPackage(int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: boolean enableModemForSlot(int,boolean)>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
<android.service.notification.ZenModeConfig: int describeContents()>
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma createFromParcelBody(android.os.Parcel)>
<com.android.internal.widget.LockPatternUtils: int getMaximumPasswordLength(int)>
<android.app.ActivityTaskManager: int getMaxRecentTasksStatic()>
<android.view.View: float getTranslationZ()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()>
<android.os.Debug: int getGlobalExternalAllocSize()>
<android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>
<android.location.LocationRequest: int getNumUpdates()>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: java.lang.String getTransactionName(int)>
<android.net.Ikev2VpnProfile: java.lang.String getPassword()>
<android.app.WindowContext: java.lang.Object getSystemService(java.lang.String)>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForPackage(long,long,java.lang.String)>
<android.util.Singleton: java.lang.Object get()>
<android.os.incremental.IStorageHealthListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.permission.PermissionManager: java.util.List getSplitPermissions()>
<com.android.internal.os.BatteryStatsImpl: long getScreenDozeTime(long,int)>
<android.security.net.config.NetworkSecurityConfig$1: int compare(java.lang.Object,java.lang.Object)>
<android.media.AudioFocusInfo: int getClientUid()>
<android.filterfw.core.NativeBuffer: int count()>
<android.widget.CursorAdapter: long getItemId(int)>
<android.net.ITestNetworkManager$Stub$Proxy: android.net.TestNetworkInterface createTunInterface(android.net.LinkAddress[])>
<android.media.SubtitleTrack: int getTrackType()>
<android.os.UserManager: java.lang.String getUserAccount(int)>
<android.renderscript.Matrix3f: float[] getArray()>
<android.hardware.location.NanoAppFilter: int describeContents()>
<android.view.KeyEvent: int getAction()>
<android.media.tv.ITvInputManager$Stub: java.lang.String getTransactionName(int)>
<android.widget.inline.InlinePresentationSpec: int describeContents()>
<android.security.keystore.IKeystoreService$Default: int onUserAdded(int,int)>
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()>
<android.window.WindowContainerTransaction$Change: android.view.SurfaceControl$Transaction getBoundsChangeTransaction()>
<android.net.NetworkStats: long getTotalBytes()>
<android.hardware.location.IContextHubService$Default: int[] getContextHubHandles()>
<android.app.VoiceInteractor$PickOptionRequest$Option: java.lang.CharSequence getSynonymAt(int)>
<android.text.StaticLayout: int packHyphenEdit(int,int)>
<android.content.pm.parsing.component.ParsedPermission: int getProtectionLevel()>
<com.android.internal.app.IAppOpsService$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageDeleteObserver$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getActivities()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getOpportunisticSubscriptions(java.lang.String,java.lang.String)>
<android.content.pm.InstantAppResolveInfo: int getDigestPrefix()>
<android.hardware.camera2.params.Face: int getScore()>
<android.content.IntentFilter: int countMimeGroups()>
<android.util.KeyValueListParser$LongValue: long getValue()>
<android.view.View: int getMinimumWidth()>
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)>
<android.security.keystore.IKeystoreService$Default: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoListForTransportType(int)>
<android.telephony.euicc.EuiccInfo: java.lang.String getOsVersion()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityButtonController getAccessibilityButtonController()>
<android.content.res.ResourcesImpl: android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache()>
<android.view.textclassifier.TextLinks: java.util.Collection getLinks()>
<android.content.pm.LauncherApps$PinItemRequest: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo(android.content.Context)>
<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(android.hardware.camera2.CaptureResult$Key)>
<android.content.rollback.IRollbackManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getSimCallManager(int)>
<com.android.internal.appwidget.IAppWidgetService$Default: int[] getAppWidgetIds(android.content.ComponentName)>
<android.content.res.Resources: android.view.DisplayAdjustments getDisplayAdjustments()>
<android.graphics.RecordingCanvas: int getMaximumBitmapHeight()>
<android.media.IPlayer$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.SubscriptionManager: java.util.List getAvailableSubscriptionInfoList()>
<android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback getDefaultImpl()>
<android.net.INetworkPolicyManager$Stub$Proxy: int getUidPolicy(int)>
<android.view.IDisplayFoldListener$Stub: java.lang.String getTransactionName(int)>
<android.os.IServiceManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.ISessionManager$Stub$Proxy: java.util.List getSessions(android.content.ComponentName,int)>
<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.transition.Slide$6: float getGoneY(android.view.ViewGroup,android.view.View,float)>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>
<android.renderscript.Matrix2f: float get(int,int)>
<android.view.IWindowManager$Stub$Proxy: int getWindowingMode(int)>
<com.android.internal.policy.DecorView: int getColorViewLeftInset(int,int)>
<android.app.AppOpsManager: int noteProxyOp(int,java.lang.String)>
<android.app.job.JobInfo: long getIntervalMillis()>
<android.app.Instrumentation$ActivityMonitor: android.app.Activity getLastActivity()>
<com.android.internal.policy.PhoneWindow: int getLocalFeaturesPrivate()>
<com.android.internal.policy.DecorContext: boolean isUiContext()>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
<android.media.MediaRoute2Info: int getVolumeHandling()>
<android.content.pm.ApplicationInfo: int getHiddenApiEnforcementPolicy()>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: com.android.internal.view.IInlineSuggestionsResponseCallback asInterface(android.os.IBinder)>
<android.content.pm.PackageManager: java.lang.CharSequence getBackgroundPermissionOptionLabel()>
<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.blob.LeaseInfo: int getDescriptionResId()>
<android.media.projection.IMediaProjectionCallback$Stub: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.app.WallpaperManager: boolean isWallpaperSupported()>
<android.app.UiAutomation: int getFlags()>
<android.app.SystemServiceRegistry$CachedServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.telecom.ParcelableCallAnalytics: java.lang.String getConnectionService()>
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>
<android.app.slice.SliceItem: int getInt()>
<android.app.job.IJobScheduler$Default: android.os.IBinder asBinder()>
<android.view.CutoutSpecification: android.graphics.Path getPath()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.util.List getBlockedRatings(int)>
<android.telephony.PreciseCallState: int getForegroundCallState()>
<android.graphics.drawable.BitmapDrawable$BitmapState: int getChangingConfigurations()>
<android.view.WindowInsets: android.graphics.Insets getSystemWindowInsets()>
<android.app.IWindowToken$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ResourcesManager: android.content.res.AssetManager createAssetManager(android.content.res.ResourcesKey)>
<android.widget.PopupWindow: android.transition.Transition getExitTransition()>
<android.telephony.CellInfoCdma$1: void <init>()>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyRcsMessageServiceRegisterer()>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.app.ApplicationLoaders: java.lang.ClassLoader getCachedNonBootclasspathSystemLib(java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>
<android.media.tv.ITvInputManager$Stub$Proxy: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)>
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()>
<com.android.internal.policy.PhoneWindow: int getNavigationBarColor()>
<android.app.admin.DevicePolicyManager: int getDeviceOwnerUserId()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getPermission()>
<android.hardware.SensorManager: boolean isDynamicSensorDiscoverySupported()>
<com.android.internal.statusbar.RegisterStatusBarResult: int describeContents()>
<android.hardware.radio.ProgramList$Filter: java.util.Set getIdentifiers()>
<android.view.ViewRootImpl$UnhandledKeyManager: boolean dispatch(android.view.View,android.view.KeyEvent)>
<android.content.pm.ShortcutInfo: java.lang.String getDisabledMessageResName()>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)>
<android.app.IUiAutomationConnection$Stub: android.app.IUiAutomationConnection getDefaultImpl()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)>
<android.graphics.Bitmap: int getScaledHeight(int)>
<android.app.NotificationChannel: int getUserLockedFields()>
<com.android.internal.net.VpnProfile: byte[] encode()>
<android.app.INotificationManager$Default: int getDeletedChannelCount(java.lang.String,int)>
<android.app.IAlarmCompleteListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.UiccCardInfo$1: void <init>()>
<android.app.VoiceInteractor$Prompt: java.lang.CharSequence getVisualPrompt()>
<com.android.internal.widget.ILockSettings$Default: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)>
<android.telephony.euicc.EuiccInfo: int describeContents()>
<android.telephony.BarringInfo$BarringServiceInfo: int hashCode()>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.view.DisplayInfo getDisplayInfo(int)>
<android.hardware.camera2.CameraMetadata: long getNativeMetadataPtr()>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int hashCode()>
<android.telephony.SmsMessage: boolean isReplyPathPresent()>
<android.app.backup.IBackupManager$Default: java.lang.CharSequence getDataManagementLabelForUser(int,java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger$ModelParamRange: int describeContents()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.autofill.AutofillValue: long getDateValue()>
<android.accounts.IAccountManager$Default: android.os.IBinder asBinder()>
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>
<android.hardware.radio.RadioManager$ProgramInfo: int getSignalStrength()>
<android.os.Environment: java.io.File getOdmDirectory()>
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int[] getDigestPrefixSecure()>
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.app.LoadedApk)>
<android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwner()>
<android.os.BatterySaverPolicyConfig: float getAdjustBrightnessFactor()>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.telephony.SubscriptionInfo: int getSimSlotIndex()>
<android.view.textclassifier.TextClassification$Request: java.lang.String getCallingPackageName()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.telephony.TelephonyManager: int getNetworkSelectionMode()>
<android.hardware.Camera$Parameters: int getPreviewFormat()>
<android.widget.GridView: int getRequestedColumnWidth()>
<android.os.connectivity.CellularBatteryStats: int describeContents()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppResolverComponent()>
<android.net.LocalSocketAddress: java.lang.String getName()>
<android.media.MediaTimestamp: long getAnchorSytemNanoTime()>
<android.media.tv.TvInputManager$Session: android.media.tv.TvTrackInfo getVideoTrackToNotify()>
<android.app.INotificationManager$Default: int getAppsBypassingDndCount(int)>
<android.debug.IAdbManager$Default: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.Paint: int getColor()>
<android.view.accessibility.IAccessibilityManagerClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.PeriodicSync: int describeContents()>
<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.telephony.TelephonyManager: boolean getSmsReceiveCapableForPhone(int,boolean)>
<android.view.InsetsController$InternalAnimationControlListener$1: android.animation.AnimationHandler initialValue()>
<android.widget.ProgressBar$1: java.lang.Float get(android.widget.ProgressBar)>
<android.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.telephony.BarringInfo$BarringServiceInfo: boolean isConditionallyBarred()>
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.RadioMetadata getMetadata()>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.display.ColorDisplayManager: int getNightDisplayAutoMode()>
<android.telephony.SubscriptionManager: int[] getSubscriptionIds(int)>
<android.os.IPowerManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: int getLastAudibleStreamVolume(int)>
<com.android.internal.telephony.ISub$Default: boolean canDisablePhysicalSubscription()>
<android.view.accessibility.CaptioningManager: int getRawUserStyle()>
<android.view.View: int getAccessibilitySelectionEnd()>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>
<android.net.netstats.provider.INetworkStatsProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.feature.ImsFeature$Capabilities: int hashCode()>
<android.print.PrintAttributes$Margins: int getLeftMils()>
<android.database.AbstractCursor: int getPosition()>
<android.database.CursorWrapper: short getShort(int)>
<android.telephony.CellInfo$1: void <init>()>
<android.os.storage.VolumeInfo$1: int compare(android.os.storage.VolumeInfo,android.os.storage.VolumeInfo)>
<android.widget.TextView: int getAutoSizeStepGranularity()>
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.session.MediaController$PlaybackInfo: java.lang.String getVolumeControlId()>
<android.net.LinkProperties: int describeContents()>
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback getDefaultImpl()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Default: android.os.IBinder asBinder()>
<android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig getDefaultInstance()>
<android.print.IPrintDocumentAdapter$Default: android.os.IBinder asBinder()>
<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureContext getContentCaptureContext()>
<android.telephony.CallAttributes: int getNetworkType()>
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int encode(int,int)>
<android.net.Uri$Builder: android.net.Uri$Builder authority(android.net.Uri$Part)>
<android.media.IPlayer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.Signature,java.lang.String)>
<android.content.BroadcastReceiver: int getSendingUserId()>
<android.telephony.data.ApnSetting$Builder: int access$2700(android.telephony.data.ApnSetting$Builder)>
<android.content.pm.ModuleInfo: java.lang.String getPackageName()>
<android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>
<android.media.IAudioService$Default: int getStreamMinVolume(int)>
<android.view.View: int getAccessibilityWindowId()>
<android.net.IConnectivityManager$Default: int getMultipathPreference(android.net.Network)>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String,int)>
<com.android.internal.policy.PhoneWindow: android.view.View getStatusBarBackgroundView()>
<android.media.AudioManager: java.util.Map getSurroundFormats()>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<android.telephony.UiccAccessRule: int describeContents()>
<android.view.IDisplayWindowRotationCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)>
<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>
<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()>
<android.security.net.config.TrustedCertificateStoreAdapter: java.util.Date getCreationDate(java.lang.String)>
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
<android.app.assist.AssistStructure$ViewNode: int getInputType()>
<android.app.PendingIntent: boolean isForegroundService()>
<android.accounts.IAccountAuthenticatorResponse$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.AudioManager: int getLastAudibleStreamVolume(int)>
<android.hardware.soundtrigger.SoundTriggerModule: int getParameter(int,int)>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: java.lang.String getTransactionName(int)>
<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus$Callback convertKey(java.lang.Object)>
<android.os.WorkSource: int getAttributionUid()>
<android.media.AudioRecordingConfiguration: int getClientPortId()>
<android.util.LauncherIcons$ShadowDrawable$MyConstantState: int getChangingConfigurations()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int,android.media.MediaMetadataRetriever$BitmapParams)>
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector$Identifier getPhysicallyTunedTo()>
<android.media.AudioManager: int getStreamMinVolume(int)>
<android.widget.ListView: int getFooterViewsCount()>
<android.os.DeviceIdleManager: java.lang.String[] getSystemPowerWhitelistExceptIdle()>
<android.media.IRecordingConfigDispatcher$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaCodec: android.media.MediaCodec$QueueRequest getQueueRequest(int)>
<android.app.VrManager: boolean isPersistentVrModeEnabled()>
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)>
<android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>
<android.net.UidRange: int getEndUser()>
<android.text.StaticLayout: int getBottomPadding()>
<android.net.ConnectivityThread$Singleton: android.net.ConnectivityThread access$100()>
<android.app.job.JobInfo: int describeContents()>
<android.text.Layout: int getOffsetToLeftOf(int)>
<android.os.IVoldListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.policy.DecorContext: android.content.ContentCaptureOptions getContentCaptureOptions()>
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier[] getAllIds(int)>
<android.os.UserManager: int getUserBadgeDarkColor(int)>
<android.media.midi.MidiManager: android.media.midi.IMidiManager access$100(android.media.midi.MidiManager)>
<android.app.admin.DevicePolicyManager: java.util.List retrieveSecurityLogs(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsHistory: android.os.Parcel getNextParcel(android.os.BatteryStats$HistoryItem)>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>
<android.app.ActivityManager: boolean isInLockTaskMode()>
<android.window.IWindowOrganizerController$Stub$Proxy: android.window.ITaskOrganizerController getTaskOrganizerController()>
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<android.telephony.TelephonyHistogram: int[] getBucketCounters()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>
<android.location.GpsStatus: int getMaxSatellites()>
<android.content.pm.parsing.ParsingPackageImpl: int getRequiresSmallestWidthDp()>
<android.util.Size: int getWidth()>
<android.view.IDisplayWindowInsetsController$Default: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure: int access$102(android.app.assist.AssistStructure,int)>
<android.inputmethodservice.InlineSuggestionSession: boolean isCallbackInvoked()>
<android.webkit.WebResourceResponse: int getStatusCode()>
<android.util.EventLog$Event: java.lang.Exception getLastError()>
<android.webkit.WebView: java.lang.CharSequence getAccessibilityClassName()>
<android.app.backup.IRestoreSession$Default: int restorePackages(long,android.app.backup.IRestoreObserver,java.lang.String[],android.app.backup.IBackupManagerMonitor)>
<android.hardware.camera2.params.VendorTagDescriptorCache: int describeContents()>
<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>
<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<android.os.IUserRestrictionsListener$Stub: java.lang.String getTransactionName(int)>
<android.app.slice.Slice: java.util.List getItems()>
<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer getIPlayer()>
<android.view.IWindowSessionCallback$Stub: android.view.IWindowSessionCallback asInterface(android.os.IBinder)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(java.lang.Object)>
<android.widget.TextView: int getImeOptions()>
<android.app.blob.IBlobStoreManager$Default: java.util.List queryBlobsForUser(int)>
<android.hardware.camera2.params.BlackLevelPattern: int getOffsetForIndex(int,int)>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<android.graphics.text.LineBreaker$Result: float getLineWidth(int)>
<android.text.Layout: float getLineLeft(int)>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>
<com.android.internal.telephony.ISms$Default: android.os.IBinder asBinder()>
<android.graphics.text.LineBreaker$ParagraphConstraints: float getDefaultTabStop()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getReqFeatures()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.media.audiopolicy.AudioPolicyConfig: int describeContents()>
<android.app.WallpaperManager: android.app.WallpaperManager$ColorManagementProxy getColorManagementProxy()>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: java.lang.Object get(java.lang.Object)>
<android.location.GpsMeasurement: double getCarrierPhaseUncertainty()>
<android.os.BaseBundle: float getFloat(java.lang.String)>
<android.app.IAlarmListener$Stub: android.app.IAlarmListener asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: long getBluetoothScanTime(long,int)>
<android.media.tv.DvbDeviceInfo: int getDeviceId()>
<android.os.BaseBundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<android.graphics.drawable.LayerDrawable: int findIndexByLayerId(int)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
<android.view.accessibility.AccessibilityManager: boolean isAccessibilityVolumeStreamActive()>
<android.graphics.drawable.RippleForeground$3: java.lang.Float get(android.graphics.drawable.RippleForeground)>
<android.os.BaseBundle: long getLong(java.lang.String,long)>
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.media.tv.TvTrackInfo: byte getVideoActiveFormatDescription()>
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>
<android.app.timedetector.TelephonyTimeSuggestion: int getSlotIndex()>
<android.app.admin.SystemUpdatePolicy: int getPolicyType()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,android.security.keymaster.KeyCharacteristics)>
<android.hardware.camera2.impl.CameraMetadataNative$13: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)>
<android.os.UserManager: android.os.PersistableBundle getSeedAccountOptions()>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.ims.ImsManager lambda$registerServiceWrappers$5(android.content.Context)>
<android.telephony.data.ApnSetting: android.net.Uri getMmsc()>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int getDetectionMethod()>
<android.content.pm.IPackageInstaller$Default: android.os.IBinder asBinder()>
<android.widget.TextView: float getScaledTextSize()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.FingerprintGestureController getFingerprintGestureController()>
<android.net.ConnectivityManager: int untether(java.lang.String)>
<android.app.backup.IBackupManager$Stub$Proxy: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>
<android.os.IDeviceIdleController$Default: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager: android.hardware.radio.RadioTuner openTuner(int,android.hardware.radio.RadioManager$BandConfig,boolean,android.hardware.radio.RadioTuner$Callback,android.os.Handler)>
<android.media.AudioGainConfig: int rampDurationMs()>
<android.hardware.radio.ITunerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
<android.accessibilityservice.AccessibilityService$SoftKeyboardController: int getShowMode()>
<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo getDefaultImpl()>
<android.telephony.VoiceSpecificRegistrationInfo: int describeContents()>
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevicesStatic(int)>
<android.media.IRemoteVolumeObserver$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyManager: java.lang.String[] getIsimPcscf()>
<android.service.vr.IVrManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.timezone.IRulesManager$Stub: android.os.IBinder asBinder()>
<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()>
<android.telephony.CdmaEriInformation$1: void <init>()>
<android.os.Parcel: java.io.FileDescriptor[] createRawFileDescriptorArray()>
<android.telephony.PhoneCapability: int hashCode()>
<android.content.pm.PackageInstaller$SessionInfo: boolean getAllocateAggressive()>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState()>
<android.widget.Spinner$DropDownAdapter: int getViewTypeCount()>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.os.IPowerManager$Stub: android.os.IPowerManager asInterface(android.os.IBinder)>
<android.content.pm.IPackageManager$Default: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneDataConnectionTimer(int)>
<android.telephony.data.ApnSetting: int getMmsProxyPort()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()>
<android.content.ContextWrapper: boolean isCredentialProtectedStorage()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>
<android.telephony.CellSignalStrengthCdma: boolean isValid()>
<android.telephony.CellInfo: int describeContents()>
<android.hardware.radio.IAnnouncementListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.animation.ValueAnimator: float getDurationScale()>
<android.app.AppOpsManager: android.util.LongSparseArray access$5400(android.util.LongSparseLongArray,android.util.LongSparseArray)>
<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getMulticastWakelockStats()>
<android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Default: long getManagedProfileMaximumTimeOff(android.content.ComponentName)>
<android.view.MotionEvent$PointerCoords: float getAxisValue(int)>
<android.net.IEthernetManager$Stub: android.net.IEthernetManager getDefaultImpl()>
<android.content.pm.IPackageDataObserver$Stub: java.lang.String getTransactionName(int)>
<android.view.WindowInsetsAnimation: float getInterpolatedFraction()>
<android.filterfw.core.FrameFormat: int getWidth()>
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()>
<com.android.internal.database.SortCursor: int getType(int)>
<android.widget.Editor$HandleView: float getIdealVerticalOffset()>
<android.app.contentsuggestions.ContentClassification: android.os.Bundle getExtras()>
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastBackgroundProxyInfo(int)>
<android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$TrackedViews access$1000(android.view.autofill.AutofillManager)>
<com.android.internal.app.ISoundTriggerService$Default: int stopRecognitionForService(android.os.ParcelUuid)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetRight(int)>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Integer)>
<android.os.IDumpstateListener$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>
<android.os.Parcel: int readCallingWorkSourceUid()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4100()>
<android.security.IFileIntegrityService$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid$3: com.android.internal.os.BatteryStatsImpl$DualTimer instantiateObject()>
<android.hardware.iris.IIrisService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<android.view.textclassifier.TextSelection$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.widget._$$Lambda$aOGBsMC_jnvTDjezYLRtz35nAPI: java.lang.Object get()>
<android.net.wifi.nl80211.NativeScanResult: android.net.MacAddress getBssid()>
<android.hardware.display.VirtualDisplay: android.view.Surface getSurface()>
<android.view.contentcapture.ViewNode: java.lang.String getClassName()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int getDataBlockSize()>
<android.content.pm.InstallSourceInfo: android.content.pm.SigningInfo getInitiatingPackageSigningInfo()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int noteProxyOperation(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.media.VolumeShaper$Configuration: int hashCode()>
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>
<android.renderscript.Long2: long length()>
<android.content.pm.IPinItemRequest$Default: android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo()>
<android.telephony.ClosedSubscriberGroupInfo$1: void <init>()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>
<android.hardware.biometrics.BiometricSourceType: int describeContents()>
<android.location.GnssMeasurement: double getSnrInDb()>
<android.app.AsyncNotedAppOp: java.lang.String getOp()>
<android.media.AudioManager: boolean isBluetoothScoOn()>
<android.hardware.input.IInputManager$Stub$Proxy: int[] getInputDeviceIds()>
<android.view.contentcapture.ContentCaptureEvent: int getType()>
<android.text.style.TextAppearanceSpan: float getShadowDy()>
<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int)>
<android.telephony.euicc.EuiccManager: int getOtaStatus()>
<android.os.IPowerManager$Default: android.os.PowerSaveState getPowerSaveState(int)>
<android.app.admin.SystemUpdatePolicy$InstallationOption: int getType()>
<android.app.AppOpsManager$HistoricalUidOps: android.app.AppOpsManager$HistoricalPackageOps getPackageOpsAt(int)>
<android.content.res.TypedArray: int getThemeAttributeId(int,int)>
<android.net.Ikev2VpnProfile: byte[] getPresharedKey()>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.content.pm.ICrossProfileApps$Stub: android.os.IBinder asBinder()>
<android.content.pm.ILauncherApps$Default: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.telephony.TelephonyManager: boolean isTetheringApnRequired(int)>
<android.os.connectivity.WifiActivityEnergyInfo: long getTimeSinceBootMillis()>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>
<android.media.session.MediaController: android.os.Bundle getExtras()>
<android.media.IMediaRouterService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageInstallerCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultMmsApplication(android.content.Context,boolean)>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<com.android.internal.telephony.ISub$Default: int[] getActiveSubIdList(boolean)>
<android.graphics.drawable.VectorDrawable$VGroup$4: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.view.View$MeasureSpec: int adjust(int,int)>
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>
<com.google.android.mms.pdu.PduPart: android.net.Uri getDataUri()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>
<android.app.Activity: android.transition.Scene getContentScene()>
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.os.WorkSource: int getUid(int)>
<android.app.admin.FactoryResetProtectionPolicy: java.util.List getFactoryResetProtectionAccounts()>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
<android.view.ContextThemeWrapper: int getThemeResId()>
<android.telephony.ims.ImsMmTelManager$CapabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()>
<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isApplicationOnUicc(int,int)>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>
<android.hardware.location.IContextHubService$Stub$Proxy: int[] getContextHubHandles()>
<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getScreenBrightnessTimer(int)>
<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.ISetNicknameCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<android.telephony.CellInfoLte: android.telephony.CellInfoLte createFromParcelBody(android.os.Parcel)>
<android.widget.Editor$PositionListener: int getPositionY()>
<android.telephony.ClosedSubscriberGroupInfo: int hashCode()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isAdvancedCallingSettingEnabled(int)>
<android.media.session.ISessionController$Default: android.content.pm.ParceledListSlice getQueue()>
<android.os.health.HealthStats: java.util.Map getStats(int)>
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_0.CellInfo)>
<android.media.IAudioService$Default: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$b_92_3ZijRrdEa9yLyFA5xu19OM: java.lang.Object createService(android.content.Context)>
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>
<android.provider.FontRequest: java.lang.String getQuery()>
<android.telephony.emergency.EmergencyNumber: int describeContents()>
<android.app.contentsuggestions.ISelectionsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>
<android.telephony.euicc.EuiccRulesAuthTable: int describeContents()>
<com.android.internal.telephony.ITelephony$Default: boolean isVtSettingEnabled(int)>
<android.text.method.BaseKeyListener: int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean)>
<android.graphics.fonts.Font: java.io.File getFile()>
<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()>
<android.net.ISocketKeepaliveCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.SingleScanSettings: int hashCode()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>
<android.view.KeyCharacterMap: int get(int,int)>
<android.app.blob.IBlobStoreSession$Default: android.os.IBinder asBinder()>
<android.hardware.fingerprint.Fingerprint: int getGroupId()>
<android.view.IOnKeyguardExitResult$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.job.JobInfo: long getInitialBackoffMillis()>
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager getTrustManager()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>
<android.location.Address: java.lang.String getSubAdminArea()>
<android.view.IGraphicsStats$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)>
<android.widget.GridView: int computeVerticalScrollRange()>
<android.hardware.radio.RadioTuner: java.util.Map getParameters(java.util.List)>
<com.android.internal.os.BatteryStatsImpl: int getHistoryTagPoolUid(int)>
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.telephony.CallQuality$1: android.telephony.CallQuality createFromParcel(android.os.Parcel)>
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.view.InsetsController$InternalAnimationControlListener: long getDurationMs()>
<android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager asInterface(android.os.IBinder)>
<android.webkit.WebView: android.content.pm.PackageInfo getCurrentWebViewPackage()>
<android.app.AppOpsManager: int extractUidStateFromKey(long)>
<android.util.KeyValueListParser: int getInt(java.lang.String,int)>
<android.view.ViewGroup$1: java.lang.CharSequence getSubtitle()>
<android.app.Notification$Style: android.app.Notification build()>
<android.content.pm.IPackageManager$Stub$Proxy: int getRuntimePermissionsVersion(int)>
<android.view.ViewRootImpl$ViewRootHandler: java.lang.String getMessageName(android.os.Message)>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<android.hardware.location.ContextHubInfo: int[] getSupportedSensors()>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.InputDevice$MotionRange: int getSource()>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>
<android.app.WallpaperManager: boolean isSetWallpaperAllowed()>
<android.content.pm.PackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,java.lang.String)>
<com.android.internal.app.IAppOpsStartedCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: int[] getDisableFlags(android.os.IBinder,int)>
<android.security.keymaster.KeymasterArgument: int describeContents()>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>
<android.graphics.ColorSpace: int getId()>
<android.hardware.iris.IIrisService$Stub: android.hardware.iris.IIrisService asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)>
<android.view.MotionEvent: float getOrientation()>
<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>
<android.view.IRecentsAnimationController$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>
<android.net.IpSecConfig: int getNattKeepaliveInterval()>
<android.location.GpsMeasurement: long getReceivedGpsTowUncertaintyInNs()>
<android.app.backup.IBackupManager$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerAppOnAnyUser(java.lang.String)>
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.os.IBinder asBinder()>
<android.hardware.cas.V1_1.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()>
<android.telephony.CellIdentityCdma$1: void <init>()>
<android.app.ActivityOptions: android.os.ResultReceiver getResultReceiver()>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<android.renderscript.RenderScript: long nScriptCCreate(java.lang.String,java.lang.String,byte[],int)>
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)>
<android.view.IRecentsAnimationRunner$Stub: java.lang.String getTransactionName(int)>
<android.app.AppOpsManager: java.lang.String access$200()>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()>
<android.util.ArrayMap$1: java.util.Map colGetMap()>
<android.app.NotificationChannelGroup: int getUserLockedFields()>
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>
<android.service.notification.IConditionProvider$Default: android.os.IBinder asBinder()>
<android.telephony.CellInfoWcdma$1: void <init>()>
<android.media.MediaCodecInfo$AudioCapabilities: int getMaxInputChannelCount()>
<android.location.Location: double getLongitude()>
<android.media.AudioTrack: android.media.AudioDeviceInfo getPreferredDevice()>
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getOutputs(int)>
<android.app.INotificationManager$Default: boolean getPrivateNotificationsAllowed()>
<android.os.storage.StorageManager: int access$200(android.os.storage.StorageManager)>
<android.os.connectivity.CellularBatteryStats: long getNumBytesRx()>
<com.android.internal.telephony.ITelephony$Default: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>
<com.android.internal.view.IInputSessionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.metrics.LogMaker: java.lang.String getCounterName()>
<android.graphics.ColorSpace: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: int getVoWiFiRoamingModeSetting(int)>
<com.google.android.mms.pdu.RetrieveConf: byte[] getContentType()>
<android.app.ContextImpl: java.io.File getSharedPreferencesPath(java.lang.String)>
<android.os.IIncidentCompanion$Stub: java.lang.String getDefaultTransactionName(int)>
<android.filterfw.core.Filter: android.filterfw.core.Frame pullInput(java.lang.String)>
<android.telephony.CellIdentityGsm: int getBsic()>
<android.app.IUriGrantsManager$Stub: android.app.IUriGrantsManager asInterface(android.os.IBinder)>
<android.telephony.ims.ImsCallProfile: java.util.List getEmergencyUrns()>
<android.media.SubtitleData: long getDurationUs()>
<android.telephony.CbGeoUtils$Polygon: java.util.List getVertices()>
<android.os.IVoldMountCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.provider.DocumentsContract$Path: int describeContents()>
<android.internal.hidl.base.V1_0.IBase$Stub: java.util.ArrayList interfaceChain()>
<android.content.res.ColorStateList: int getChangingConfigurations()>
<android.app.Activity: android.app.ActivityOptions getActivityOptions()>
<com.android.internal.policy.IShortcutService$Stub: com.android.internal.policy.IShortcutService getDefaultImpl()>
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()>
<android.os.IVold$Stub$Proxy: java.lang.String createStubVolume(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager: int opToDefaultMode(java.lang.String)>
<android.hardware.soundtrigger.SoundTriggerModule: int stopRecognition(int)>
<android.telephony.TelephonyManager: int getSimSpecificCarrierId()>
<com.android.internal.telephony.ISub$Default: int getActiveDataSubscriptionId()>
<android.content.pm.IDataLoaderStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRadioApWakeupCount(int)>
<android.net.wifi.nl80211.IWificond$Default: java.util.List GetClientInterfaces()>
<com.android.internal.widget.ILockSettings$Default: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()>
<android.app.role.IRoleManager$Default: java.util.List getHeldRolesFromController(java.lang.String)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String getDisplayName()>
<android.net.IEthernetManager$Stub$Proxy: android.net.IpConfiguration getConfiguration(java.lang.String)>
<android.os.connectivity.WifiBatteryStats: long getNumBytesRx()>
<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray getBandwidthEntries()>
<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int)>
<android.app.timezone.IRulesManager$Stub$Proxy: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.ICallback)>
<android.text.Layout$Directions: int getRunLength(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)>
<android.content.res.XmlBlock$Parser: int getStyleAttribute()>
<android.telecom.TelecomManager: android.telecom.TelecomAnalytics dumpAnalytics()>
<android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner asInterface(android.os.IBinder)>
<com.android.server.SystemConfig: android.util.ArraySet getBugreportWhitelistedPackages()>
<android.app.AppOpsManager: int unsafeCheckOpRaw(java.lang.String,int,java.lang.String)>
<android.content.pm.ShortcutInfo: java.lang.String getResourceEntryName(java.lang.String)>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: int getWindowIdForLeashToken(android.os.IBinder)>
<android.view.autofill.Helper: java.lang.String getRedacted(java.lang.CharSequence)>
<android.media.audiopolicy.AudioProductStrategy: int describeContents()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getEncryptionPaddings()>
<android.widget.AutoCompleteTextView: int getInputMethodMode()>
<android.metrics.LogMaker: int getSubtype()>
<android.text.Layout: int getLineVisibleEnd(int)>
<android.net.TrafficStats: long getLoopbackRxPackets()>
<android.content.pm.parsing.component.ParsedProcess: int describeContents()>
<android.debug.IAdbManager$Stub: java.lang.String getTransactionName(int)>
<android.animation.StateListAnimator: int getChangingConfigurations()>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int getNativeSize()>
<com.android.internal.net.INetworkWatchlistManager$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioTrack: int getLatency()>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$countPermissionApps$17(java.util.List,int,android.permission.IPermissionController)>
<android.hardware.camera2.utils.CameraIdAndSessionConfiguration: int describeContents()>
<android.telephony.TelephonyManager: java.lang.String getEsn()>
<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()>
<android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource: int toByteArray(byte[],int)>
<android.app.ResourcesManager: android.content.res.Resources getResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)>
<android.telephony.CellSignalStrengthTdscdma: int getLevel()>
<android.security.IKeyChainService$Default: android.os.IBinder asBinder()>
<android.os.Binder: android.os.UserHandle getCallingUserHandle()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int stopRecognitionForService(android.os.ParcelUuid)>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: com.android.internal.inputmethod.IExtractedTextResultCallback asInterface(android.os.IBinder)>
<android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>
<com.android.internal.os.BatteryStatsImpl: long getNextMaxDailyDeadline()>
<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)>
<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager asInterface(android.os.IBinder)>
<android.hardware.display.DisplayManager: boolean isMinimalPostProcessingRequested(int)>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>
<android.app.blob.LeaseInfo: int describeContents()>
<android.app.IUiAutomationConnection$Default: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<com.android.internal.telephony.ISub$Default: int removeSubInfo(java.lang.String,int)>
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>
<android.view.textclassifier.TextClassification: java.lang.String getId()>
<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String,int)>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>
<android.telephony.PreciseCallState: int getPreciseDisconnectCause()>
<android.net.Uri: android.net.Uri getCanonicalUri()>
<android.media.midi.IMidiDeviceServer$Default: android.os.IBinder asBinder()>
<android.service.notification.NotificationListenerService$Ranking: int getImportance()>
<android.telephony.CellIdentityGsm: int getLac()>
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getIdEntry()>
<android.security.net.config.PinSet: java.util.Set getPinAlgorithms()>
<android.location.ILocationManager$Stub$Proxy: android.location.LocationTime getGnssTimeMillis()>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub: android.os.IBinder asBinder()>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: android.graphics.Rect getViewCoordinates(android.view.autofill.AutofillId)>
<android.hardware.camera2.params.LensShadingMap: float getGainFactor(int,int,int)>
<android.text.method.DialerKeyListener: int getInputType()>
<com.google.android.mms.pdu.EncodedStringValue: byte[] getTextString()>
<android.telephony.TelephonyManager: boolean enableModemForSlot(int,boolean)>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: int getBaseline()>
<android.widget.Scroller: float getCurrVelocity()>
<com.android.internal.infra.RemoteStream: java.lang.Void lambda$sendBytes$1(byte[],java.io.OutputStream)>
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.AppFuseMount: int describeContents()>
<android.view.autofill.AutofillValue: boolean getToggleValue()>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.util.List getWhitelistedRuleProviders()>
<android.app.NotificationManager: android.content.ComponentName getEffectsSuppressor()>
<android.content.ContentProvider: android.app.AppOpsManager getAppOpsManager()>
<android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager asInterface(android.os.IBinder)>
<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()>
<android.renderscript.Sampler: float getAnisotropy()>
<android.media.IAudioService$Stub$Proxy: boolean isBluetoothA2dpOn()>
<android.telephony.IccOpenLogicalChannelResponse: int describeContents()>
<android.telephony.SubscriptionInfo: boolean isGroupDisabled()>
<android.net.LinkAddress: int getNetworkPrefixLength()>
<android.view.KeyCharacterMap: char getNumber(int)>
<android.app.backup.IBackupManager$Default: android.content.ComponentName getCurrentTransportComponentForUser(int)>
<com.android.internal.widget.ScrollingTabContainerView$TabView: java.lang.CharSequence getAccessibilityClassName()>
<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthCdma: int getEvdoAsuLevel()>
<android.app.slice.SliceSpec: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivityForSubId(int)>
<android.app.usage.StorageStatsManager: long getCacheBytes(java.lang.String)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.app.ContextImpl: android.content.res.Resources createWindowContextResources()>
<com.android.internal.telephony.ISms$Stub$Proxy: int getPreferredSmsSubscription()>
<android.telephony.TelephonyManager: boolean isIccLockEnabled()>
<android.app.backup.IBackupCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.hardware.fingerprint.IFingerprintServiceReceiver asInterface(android.os.IBinder)>
<android.app.Notification$Builder: android.app.Notification$Style getStyle()>
<android.media.midi.MidiPortImpl: int getDataSize(byte[],int)>
<android.net.IEthernetManager$Stub: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Stub$Proxy: boolean isActivityStartAllowedOnDisplay(int,android.content.Intent,java.lang.String,int)>
<android.content.ContentProvider$Transport: android.net.Uri canonicalize(java.lang.String,java.lang.String,android.net.Uri)>
<android.telephony.CellInfoTdscdma$1: android.telephony.CellInfoTdscdma createFromParcel(android.os.Parcel)>
<android.location.GpsClock: int describeContents()>
<android.os.IThermalStatusListener$Stub: android.os.IThermalStatusListener asInterface(android.os.IBinder)>
<android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoFpsRanges()>
<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)>
<android.telephony.NeighboringCellInfo: int getRssi()>
<android.view.autofill.AutofillPopupWindow$2: int getAccessibilityViewId()>
<android.hardware.cas.V1_1.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.app.assist.AssistStructure$ViewNode: int getTextColor()>
<android.app.job.IJobScheduler$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.Ikev2VpnProfile: int hashCode()>
<com.android.internal.app.IAppOpsNotedCallback$Stub: com.android.internal.app.IAppOpsNotedCallback asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.telephony.CdmaEriInformation$1: android.telephony.CdmaEriInformation[] newArray(int)>
<android.net.netstats.provider.INetworkStatsProviderCallback$Default: android.os.IBinder asBinder()>
<android.media.MediaRouterClientState: int describeContents()>
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getQueryActionMsg()>
<android.view.autofill.IAutoFillManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String)>
<android.app.ActivityManager$TaskDescription: int getIconResource()>
<android.text.StaticLayout: int getLineStart(int)>
<android.telephony.ModemInfo$1: android.telephony.ModemInfo createFromParcel(android.os.Parcel)>
<com.android.internal.graphics.palette.Target: float getLightnessWeight()>
<android.content.pm.parsing.ParsingPackageImpl: int getInstallLocation()>
<android.os.Parcel: int[] createIntArray()>
<android.view.textservice.SuggestionsInfo: int describeContents()>
<android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<android.app.Application: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>
<com.android.internal.app.ToolbarActionBar: int getSelectedNavigationIndex()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: android.os.IBinder asBinder()>
<android.app.usage.NetworkStats$Bucket: long getRxPackets()>
<android.os.Parcel: java.lang.String[] createString16Array()>
<android.view.IWindowId$Stub: android.view.IWindowId asInterface(android.os.IBinder)>
<android.os._$$Lambda$Binder$aNRcHb8WfLrWjcSlV42Wu5psFwU: java.lang.Object get()>
<android.telephony.VisualVoicemailSmsFilterSettings$1: void <init>()>
<com.android.internal.os.PowerProfile: int getNumCoresInCpuCluster(int)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerityRootHash(java.lang.String)>
<android.content.IntentFilter: int describeContents()>
<android.telephony.TelephonyManager: int getSimCardState()>
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.slice.ISliceManager$Default: byte[] getBackupPayload(int)>
<android.widget.Spinner$DialogPopup: int getVerticalOffset()>
<android.view.View: int getHorizontalScrollbarHeight()>
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int createInputStream(int,int,int)>
<android.security.IKeyChainService$Default: int generateKeyPair(java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec)>
<android.app.ContextImpl: int getUserId()>
<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>
<android.telephony.data.ApnSetting: int getApnTypeBitmask()>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>
<android.telecom.Logging.Session: java.lang.String printFullSessionTree()>
<android.view.IWindowSession$Stub$Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])>
<android.view.Window: long getTransitionBackgroundFadeDuration()>
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>
<android.app.AppOpsManager: java.lang.String[] getOpStrs()>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.display.DeviceProductInfo$ManufactureDate: java.lang.Integer getWeek()>
<android.content.pm.IShortcutService$Default: int getMaxShortcutCountPerActivity(java.lang.String,int)>
<com.android.internal.policy.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuView getIconMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback)>
<android.os.BaseBundle: char[] getCharArray(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$Uid$1: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock instantiateObject()>
<android.media.MediaMetadataEditor: int[] getEditableKeys()>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>
<android.widget.TextView: float getShadowDx()>
<android.text.style.LocaleSpan: android.os.LocaleList getLocales()>
<android.webkit.IWebViewUpdateService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ClipData: int describeContents()>
<android.widget.RemoteViews$SetEmptyView: int getActionTag()>
<android.os.PooledStringReader: int getStringCount()>
<android.renderscript.Byte4: byte length()>
<android.content.rollback.IRollbackManager$Stub$Proxy: android.content.pm.ParceledListSlice getAvailableRollbacks()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.content.pm.ShortcutQueryWrapper: java.util.List getLocusIds()>
<android.service.gatekeeper.GateKeeperResponse: int getResponseCode()>
<android.util.apk.ZipUtils: android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile)>
<android.hardware.usb.UsbDeviceConnection: android.content.Context getContext()>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1000()>
<android.os.connectivity.CellularBatteryStats: long getEnergyConsumedMaMillis()>
<android.view.IWindowManager$Stub$Proxy: int getBaseDisplayDensity(int)>
<android.app.role.IRoleController$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)>
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>
<android.telephony.SignalStrength: int getWcdmaRscp()>
<com.android.internal.telephony.INumberVerificationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.blob.BlobHandle: java.lang.CharSequence getLabel()>
<com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub: com.android.internal.telephony.IOnSubscriptionsChangedListener asInterface(android.os.IBinder)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>
<android.telephony.TelephonyManager: java.lang.String getIccAuthentication(int,int,int,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getConnectionId()>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
<android.media.MediaCodecInfo: java.lang.String getCanonicalName()>
<android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>
<android.os.IServiceCallback$Stub: android.os.IBinder asBinder()>
<android.media.IRingtonePlayer$Default: java.lang.String getTitle(android.net.Uri)>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>
<android.app.timezone.RulesManager: int requestUninstall(byte[],android.app.timezone.Callback)>
<com.android.ims.internal.IImsUt$Default: int transact(android.os.Bundle)>
<com.android.internal.appwidget.IAppWidgetService$Default: int allocateAppWidgetId(java.lang.String,int)>
<android.telephony.CdmaEriInformation: int describeContents()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: com.android.internal.telephony.ISetOpportunisticDataCallback getDefaultImpl()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.content.pm.UserInfo: boolean isGuest()>
<com.android.internal.util.function.pooled.PooledLambdaImpl: java.lang.String getTraceName()>
<android.net.LocalSocketImpl: int access$200(android.net.LocalSocketImpl,java.io.FileDescriptor)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getHeight()>
<android.content.Context: android.content.ContentCaptureOptions getContentCaptureOptions()>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>
<android.os.connectivity.WifiBatteryStats: long getRxTimeMillis()>
<com.android.internal.app.IBatteryStats$Default: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()>
<android.accounts.IAccountAuthenticatorResponse$Default: android.os.IBinder asBinder()>
<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation getAnimation()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: java.lang.String getTransactionName(int)>
<android.view.textclassifier.ConversationAction: android.app.RemoteAction getAction()>
<com.android.internal.net.LegacyVpnInfo: int describeContents()>
<android.permission.IPermissionManager$Stub: android.permission.IPermissionManager getDefaultImpl()>
<android.widget.Scroller$ViscousFluidInterpolator: float getInterpolation(float)>
<android.os.Process: int getParentPid(int)>
<android.net.IConnectivityManager$Stub$Proxy: byte[] getNetworkWatchlistConfigHash()>
<android.net.IConnectivityManager$Default: int getLastTetherError(java.lang.String)>
<android.widget.ScrollBarDrawable: int getAlpha()>
<android.location.ILocationManager$Default: int getGnssYearOfHardware()>
<android.widget.TextView: int getMinHeight()>
<android.app.ApplicationPackageManager: int movePrimaryStorage(android.os.storage.VolumeInfo)>
<com.android.internal.telephony.gsm.SmsMessage: int getRelativeValidityPeriod(int)>
<android.os.WorkSource: int describeContents()>
<com.android.internal.util.StatLogger: long getTime()>
<android.telephony.TelephonyHistogram: int getSampleCount()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaRoamingMode(int)>
<android.content.IClipboard$Stub$Proxy: android.content.ClipDescription getPrimaryClipDescription(java.lang.String,int)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)>
<android.app.ApplicationPackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<android.hardware.SensorManager: float getAltitude(float,float)>
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher asInterface(android.os.IBinder)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.PersistableBundle getTransferOwnershipBundle()>
<android.webkit.WebView: java.lang.ClassLoader getWebViewClassLoader()>
<android.view.contentcapture.ViewNode: int getTextBackgroundColor()>
<android.media.session.ISession$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ViewRootImpl: android.view.SurfaceControl getBoundsLayer()>
<android.media.IMediaRouter2$Stub$Proxy: android.os.IBinder asBinder()>
<android.renderscript.Double3: double get(int)>
<android.os.IIncidentManager$Stub: android.os.IIncidentManager getDefaultImpl()>
<android.os.IPowerManager$Default: int getPowerSaveModeTrigger()>
<android.content.Context: java.lang.String getFeatureId()>
<com.android.internal.view.menu.ListMenuPresenter: int access$000(com.android.internal.view.menu.ListMenuPresenter)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond asInterface(android.os.IBinder)>
<android.net.nsd.INsdManager$Stub: android.net.nsd.INsdManager getDefaultImpl()>
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)>
<com.android.internal.policy.DecorView: int getAccessibilityViewId()>
<android.telephony.SignalStrength: int getLteRssnr()>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
<android.app.AppOpsManager: int noteProxyOp(int,java.lang.String,int,java.lang.String,java.lang.String)>
<com.android.ims.internal.IImsExternalCallStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.timedetector.ManualTimeSuggestion: java.util.List getDebugInfo()>
<android.view.View$7: java.lang.Object get(java.lang.Object)>
<android.os.IncidentManager: java.util.List getPendingReports()>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getAppPermissions$13(java.lang.String,android.permission.IPermissionController)>
<android.media.projection.IMediaProjectionCallback$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4200()>
<android.content.IContentService$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioManager: boolean isCallScreeningModeSupported()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.app.usage.IStorageStatsManager$Stub: android.app.usage.IStorageStatsManager getDefaultImpl()>
<android.os.IServiceManager$Stub: android.os.IBinder asBinder()>
<android.net.INetworkScoreCache$Stub: java.lang.String getTransactionName(int)>
<android.telephony.VisualVoicemailSmsFilterSettings: int describeContents()>
<android.content.IntentFilter: int countCategories()>
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiRoamingSettingEnabled()>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>
<android.app.IAlarmManager$Default: long currentNetworkTimeMillis()>
<android.widget.AdapterView: int getCount()>
<android.app.ApplicationPackageManager: java.lang.String getIncidentReportApproverPackageName()>
<android.net.ConnectivityManager: android.net.ConnectivityManager getInstanceOrNull()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,java.lang.String,long)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.net.Uri$OpaqueUri: java.lang.String getQuery()>
<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()>
<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributes()>
<android.os.IInstalld$Stub$Proxy: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])>
<android.content.res.Resources: java.util.List getLoaders()>
<android.telephony.CellSignalStrengthNr: int describeContents()>
<android.media.audiopolicy.AudioMixingRule: int getTargetMixType()>
<android.media.IPlaybackConfigDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ContextImpl: java.io.File getCrateDir(java.lang.String)>
<android.graphics.drawable.GradientDrawable: android.content.res.ColorStateList getColor()>
<android.media.ExifInterface$1: int readAt(long,byte[],int,int)>
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastBackgroundProxyInfo(int)>
<com.google.android.mms.util.AbstractCache: int size()>
<android.app.NotificationChannel: android.net.Uri getSound()>
<android.accessibilityservice.GestureDescription: int getMaxStrokeCount()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)>
<android.telephony.ModemInfo: int hashCode()>
<android.location.ICountryListener$Default: android.os.IBinder asBinder()>
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntentForUser(int,java.lang.String)>
<com.android.internal.os.BatteryStatsHelper: android.content.Intent getBatteryBroadcast()>
<android.view.IWindowFocusObserver$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getVersionName()>
<android.hardware.cas.V1_1.ICas$Stub: java.lang.String interfaceDescriptor()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.ImageDecoder$InputStreamSource: int getDensity()>
<com.android.internal.net.INetworkWatchlistManager$Stub: com.android.internal.net.INetworkWatchlistManager asInterface(android.os.IBinder)>
<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int insert(java.lang.String,byte[],int,int)>
<android.app.ApplicationPackageManager: boolean isUpgrade()>
<android.hardware.input.ITabletModeChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: java.util.List getSystemActions()>
<android.os.UserManager: int getUserSwitchability()>
<android.view.autofill.IAutoFillManagerClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.TextClassification: android.os.Bundle getExtras()>
<android.media.MediaCodec$MediaImage: int getWidth()>
<android.telephony.TelephonyManager: boolean isDataConnectivityPossible()>
<com.android.internal.telephony.ITelephony$Default: boolean handlePinMmiForSubscriber(int,java.lang.String)>
<android.app.VoiceInteractor$Prompt: int countVoicePrompts()>
<com.android.internal.app.IAppOpsStartedCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.IMms$Default: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<android.media.AudioTrack: int getChannelConfiguration()>
<android.view.contentcapture.ChildContentCaptureSession: boolean isContentCaptureEnabled()>
<android.media.VolumeShaper$Configuration: float[] getTimes()>
<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IUserManager$Default: java.lang.String getSeedAccountType()>
<android.app.IActivityTaskManager$Default: int startActivityFromRecents(int,android.os.Bundle)>
<android.app.INotificationManager$Stub: java.lang.String getTransactionName(int)>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()>
<android.transition.Transition$ArrayListManager: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>
<android.telephony.ServiceState: int getCdmaRoamingIndicator()>
<android.media.tv.TvInputInfo: int getTunerCount()>
<android.content.pm.KeySet: int hashCode()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.PackageUserState: android.util.Pair getOverrideLabelIconForComponent(android.content.ComponentName)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.android.internal.view.AppearanceRegion: int describeContents()>
<android.hardware.camera2.impl.CameraMetadataNative$2: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<com.android.internal.telephony.GsmAlphabet: char gsmExtendedToChar(int)>
<com.android.internal.telephony.ITelephony$Default: int checkCarrierPrivilegesForPackage(int,java.lang.String)>
<android.widget.TextView: int getCompoundPaddingBottom()>
<android.telephony.SmsMessage: boolean hasEmsSupport()>
<android.os.IIncidentReportStatusListener$Stub: android.os.IIncidentReportStatusListener getDefaultImpl()>
<android.telephony.ims.aidl.IImsMmTelListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.app.IAppOpsNotedCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbConfiguration getConfiguration(int)>
<android.os.connectivity.WifiBatteryStats: long getNumBytesTx()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.IMms$Default: boolean getAutoPersisting()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()>
<android.os.Bundle: char[] getCharArray(java.lang.String)>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>
<android.telephony.CarrierConfigManager$Wifi: android.os.PersistableBundle access$300()>
<android.content.res.XmlBlock$Parser: java.lang.String getPrefix()>
<android.app.admin.FactoryResetProtectionPolicy: int describeContents()>
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
<android.view.InsetsState: int describeContents()>
<android.hardware.radio.RadioManager$BandDescriptor: int getSpacing()>
<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)>
<android.content.ContentResolver$MimeTypeInfo: java.lang.CharSequence getLabel()>
<android.media.IVolumeController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SubscriptionManager: void invalidateActiveDataSubIdCaches()>
<android.media.MediaCodecInfo$CodecCapabilities: java.lang.String getMimeType()>
<android.widget.ActionMenuPresenter$ActionMenuPopupCallback: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.security.IKeyChainService$Default: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>
<android.os.IHardwarePropertiesManager$Default: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>
<android.app._$$Lambda$AppOpsManager$HistoricalOp$DkVcBvqB32SMHlxw0sWQPh3GL1A: java.lang.Object get()>
<android.content.Intent: java.lang.String getAction()>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<android.telephony.SmsMessage: boolean isMWIClearMessage()>
<android.content.pm.IShortcutChangeCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.print.ILayoutResultCallback$Stub: android.os.IBinder asBinder()>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.SearchableInfo$ActionKeyInfo: int getKeyCode()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.ImageDecoder$AssetInputStreamSource: int getDensity()>
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()>
<android.os.storage.VolumeInfo: java.lang.String getBroadcastForEnvironment(java.lang.String)>
<android.app.assist.AssistStructure$WindowNode: int resolveViewAutofillFlags(android.content.Context,int)>
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.net.lowpan.ILowpanNetScanCallback asInterface(android.os.IBinder)>
<android.net.wifi.nl80211.IPnoScanEvent$Stub: android.os.IBinder asBinder()>
<android.security.net.config.NetworkSecurityConfig$1: int compare(android.security.net.config.CertificatesEntryRef,android.security.net.config.CertificatesEntryRef)>
<android.app.job.JobParameters: int getJobId()>
<android.content.Context: android.view.Display getDisplay()>
<android.hardware.location.ContextHubManager: java.util.List getContextHubs()>
<android.telephony.TelephonyManager: boolean hasIccCard()>
<android.media.AudioManager$BlockingFocusResultReceiver: int requestResult()>
<android.graphics.RenderNode: boolean getUseCompositingLayer()>
<android.util.SparseBooleanArray: boolean get(int)>
<com.android.internal.telephony.ITelephony$Default: int setIccLockEnabled(int,boolean,java.lang.String)>
<com.android.internal.view.menu.ActionMenuItem: int getOrder()>
<android.telephony.TelephonyManager: boolean isLteCdmaEvdoGsmWcdmaEnabled()>
<android.media.session.MediaSessionLegacyHelper: android.os.Bundle getOldMetadata(android.media.MediaMetadata,int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<com.android.internal.app.IVoiceInteractorRequest$Stub: java.lang.String getTransactionName(int)>
<android.app.Notification$BubbleMetadata: boolean getAutoExpandBubble()>
<android.telephony.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String,boolean)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.util.jar.StrictJarManifest: java.util.jar.Attributes getMainAttributes()>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>
<android.telephony.ServiceState: int getNrState()>
<android.media.AudioTrack: int attachAuxEffect(int)>
<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri,boolean)>
<android.security.keystore.IKeystoreExportKeyCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.telephony.ims.ImsCallProfile getLocalCallProfile()>
<android.accounts.IAccountManagerResponse$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: boolean isDataRoamingEnabled(int)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)>
<android.telephony.SmsCbMessage: int getDataCodingScheme()>
<android.os.StrictMode$ViolationInfo: int hashCode()>
<android.content.pm.IDataLoaderStatusListener$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int,java.lang.String)>
<android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] getActiveRequests()>
<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IMediaRouter2Manager$Stub: android.media.IMediaRouter2Manager getDefaultImpl()>
<android.app.usage.NetworkStats$Bucket: int access$1102(android.app.usage.NetworkStats$Bucket,int)>
<android.os.IVibratorService$Stub: android.os.IBinder asBinder()>
<android.view.IWindowId$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsExternalCallStateListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats getDefaultImpl()>
<com.android.internal.app.IBatteryStats$Default: android.os.IBinder asBinder()>
<android.view.View: boolean isVisibleToUserForAutofill(int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap: int calculateMarshalSize(java.lang.Object)>
<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)>
<com.android.internal.widget.LockPatternView$Cell: int getColumn()>
<android.net.INetworkStatsSession$Default: int[] getRelevantUids()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<android.app.AppOpsManager: int leftCircularDistance(int,int,int)>
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getDeviceList()>
<android.internal.hidl.base.V1_0.IBase$Proxy: java.util.ArrayList getHashChain()>
<android.view.InsetsController$InternalAnimationControlListener: android.view.animation.Interpolator getAlphaInterpolator()>
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()>
<android.text.style.BulletSpan: int getColor()>
<android.telecom.TelecomManager: android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)>
<android.os.IUserManager$Default: android.os.IBinder asBinder()>
<android.telephony.CellInfo: int getCellConnectionStatus()>
<android.hardware.display.IVirtualDisplayCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: boolean isComplete()>
<android.view.View: int getPaddingTop()>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback getDefaultImpl()>
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassificationConstants getSettings(android.content.Context)>
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)>
<android.view.animation.Animation: long getDuration()>
<android.os.IRecoverySystemProgressListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IDisplayWindowListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
<android.database.sqlite.SQLiteQueryBuilder: java.util.Collection getProjectionGreylist()>
<android.os.ThreadLocalWorkSource: int getUid()>
<android.net.INetworkStatsSession$Stub$Proxy: int[] getRelevantUids()>
<android.content.IntentSender: java.lang.String getTargetPackage()>
<android.app.backup.IBackupObserver$Stub: android.os.IBinder asBinder()>
<android.view.MotionEvent: int getFlags()>
<android.app.ActivityManager$TaskDescription: int getNavigationBarColor()>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Default: android.os.IBinder asBinder()>
<android.media.AudioTrack: float getAudioDescriptionMixLeveldB()>
<android.app.contentsuggestions.ContentSelection: int describeContents()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.media.soundtrigger_middleware.ISoundTriggerModule getDefaultImpl()>
<android.app.trust.TrustManager: android.os.Handler access$000(android.app.trust.TrustManager)>
<android.content.IContentService$Default: boolean getMasterSyncAutomaticallyAsUser(int)>
<android.location.GnssStatus: float getBasebandCn0DbHz(int)>
<android.media.AudioMetadata$BaseMap: int hashCode()>
<android.telephony.data.ApnSetting: int getProtocol()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackage(int)>
<android.telephony.ims.ImsCallProfile: int describeContents()>
<android.app.ActivityOptions: android.view.AppTransitionAnimationSpec[] getAnimSpecs()>
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>
<android.net.lowpan.LowpanInterface: boolean isUp()>
<com.android.internal.telephony.IOns$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.BatterySipper: int compareTo(com.android.internal.os.BatterySipper)>
<android.content.pm.IPackageDeleteObserver$Stub: android.content.pm.IPackageDeleteObserver getDefaultImpl()>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeEnabled(android.content.ComponentName)>
<android.view.IWindowFocusObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IOnAppsChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.Address: int describeContents()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<com.android.internal.telephony.IOns$Stub: android.os.IBinder asBinder()>
<android.hardware.hdmi.HdmiTvClient: java.util.List getDeviceList()>
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.PersistableBundle getConfigForSubId(int,java.lang.String)>
<android.system.suspend.ISuspendCallback$Stub: android.system.suspend.ISuspendCallback getDefaultImpl()>
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace$RenderIntent getRenderIntent()>
<android.os.incremental.IIncrementalService$Default: byte[] getMetadataById(int,byte[])>
<android.view.contentcapture.IContentCaptureManager$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: int getUserId()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getEmergencyNumberDbVersion(int)>
<android.app.AppOpsManager$HistoricalOp: long getAccessCount(int,int,int)>
<android.media.AudioAttributes: int hashCode()>
<android.location.GnssStatus: int getSatelliteCount()>
<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()>
<android.telephony.TelephonyManager: int getActiveModemCount()>
<android.media.VolumeShaper$Configuration: int getMaximumCurvePoints()>
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>
<android.view.MotionEvent: int getId()>
<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)>
<android.net.NetworkIdentity: boolean getDefaultNetwork()>
<android.view.DisplayAdjustments: android.view.DisplayCutout getDisplayCutout(android.view.DisplayCutout)>
<android.app.blob.IBlobStoreSession$Stub: java.lang.String getTransactionName(int)>
<android.view.IDisplayWindowRotationCallback$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.hardware.cas.V1_0.IMediaCasService$Stub: java.lang.String interfaceDescriptor()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>
<android.app.blob.IBlobStoreSession$Stub$Proxy: boolean isSameSignatureAccessAllowed()>
<android.content.om.IOverlayManager$Stub: java.lang.String getTransactionName(int)>
<android.app.IUiModeManager$Default: long getCustomNightModeStart()>
<android.content.pm.PackageUserState: java.util.Map getSharedLibraryOverlayPaths()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,int,java.lang.String)>
<android.media.session.MediaSession: android.media.session.MediaController getController()>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hideLargeIcon(boolean)>
<android.media.MediaMetadata: int size()>
<com.android.internal.app.ISoundTriggerService$Default: int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>
<android.widget.Scroller: int getFinalY()>
<android.hardware.biometrics.BiometricAuthenticator$Identifier: long getDeviceId()>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>
<android.app.backup.IBackupCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.ViewGroup: android.view.View findViewTraversal(int)>
<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()>
<android.telephony.TelephonyManager: int[] supplyPinReportResult(java.lang.String)>
<android.os.IDumpstateListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.legacy.LegacyRequestMapper: int filterSupportedCaptureIntent(int)>
<android.media.ExifInterface$ExifAttribute: int size()>
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>
<android.media.tv.tunerresourcemanager.ResourceClientProfile: java.lang.String getTvInputSessionId()>
<android.view.View: int getVisibility()>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.os.PowerManager: float getThermalHeadroom(int)>
<android.os.ISystemConfig$Stub$Proxy: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>
<android.hardware.cas.V1_2.ICas$Stub: java.lang.String interfaceDescriptor()>
<android.app.WallpaperManager$FastBitmapDrawable: int getOpacity()>
<android.app.ApplicationPackageManager: java.lang.String getSystemCaptionsServicePackageName()>
<android.hardware.input.IInputManager$Stub$Proxy: int isInTabletMode()>
<android.os.BaseBundle: short getShort(java.lang.String,short)>
<android.net.NetworkInfo: int describeContents()>
<android.telephony.SmsManager: java.lang.String getImsSmsFormat()>
<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>
<android.os.Debug$MemoryInfo: int getSummaryJavaHeapRss()>
<android.app.IActivityTaskManager$Stub$Proxy: boolean getPackageAskScreenCompat(java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isCurrentInputMethodSetByOwner()>
<android.os.IThermalEventListener$Stub: android.os.IBinder asBinder()>
<android.view.IWindowId$Stub: java.lang.String getTransactionName(int)>
<android.app.JobSchedulerImpl: java.util.List getAllPendingJobs()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.app.backup.IBackupManager$Default: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: long getFreeBytes(java.lang.String,java.lang.String)>
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.Throwable)>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.CharSequence getDataManagementLabelForUser(int,java.lang.String)>
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getRequestedVrComponent()>
<android.location.GnssReflectingPlane: double getLongitudeDegrees()>
<android.text.Layout: float getSecondaryHorizontal(int)>
<android.app.role.IOnRoleHoldersChangedListener$Default: android.os.IBinder asBinder()>
<android.app.usage.NetworkStats$Bucket: int access$502(android.app.usage.NetworkStats$Bucket,int)>
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>
<android.hardware.hdmi.IHdmiRecordListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList(int)>
<android.security.keystore.IKeystoreService$Stub$Proxy: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>
<android.os.storage.IStorageManager$Stub$Proxy: int getEncryptionState()>
<android.widget.FastScroller$5: java.lang.Object get(java.lang.Object)>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>
<android.hardware.location.ContextHubInfo: android.hardware.location.MemoryRegion[] getMemoryRegions()>
<android.security.keystore.recovery.WrappedApplicationKey: byte[] access$202(android.security.keystore.recovery.WrappedApplicationKey,byte[])>
<android.media.AudioDeviceInfo: java.lang.CharSequence getProductName()>
<android.service.notification.IConditionProvider$Stub: android.service.notification.IConditionProvider getDefaultImpl()>
<android.telecom.PhoneAccount: int describeContents()>
<android.location.IGnssStatusListener$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.hardware.radio.TunerAdapter: int scan(int,boolean)>
<android.location.ILocationManager$Stub$Proxy: java.lang.String getExtraLocationControllerPackage()>
<android.os.storage.StorageManager: boolean isCacheBehaviorGroup(java.io.File)>
<com.android.internal.app.WindowDecorActionBar: float getElevation()>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics(int,android.view.DisplayAdjustments)>
<android.media.midi.IMidiManager$Stub: android.os.IBinder asBinder()>
<android.app.NotificationManager: boolean isNotificationPolicyAccessGrantedForPackage(java.lang.String)>
<android.text.style.TtsSpan: int getSpanTypeIdInternal()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.CallForwardingInfo getCallForwarding(int,int)>
<android.content.pm.IPackageInstaller$Stub: android.os.IBinder asBinder()>
<android.filterfw.core.GLFrame: int getFboId()>
<android.permission.IPermissionManager$Default: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<com.android.ims.internal.IImsEcbmListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.lowpan.ILowpanManagerListener$Default: android.os.IBinder asBinder()>
<android.hardware.display.IVirtualDisplayCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.proto.EncodedBuffer: int getRawZigZag64Size(long)>
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)>
<android.app.RuntimeAppOpAccessMessage: java.lang.String getAttributionTag()>
<android.view.View: int getSystemUiVisibility()>
<android.security.keystore.AndroidKeyStoreKey: int getUid()>
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int hashCode()>
<android.view.InsetsAnimationControlImpl: float getCurrentAlpha()>
<android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback asInterface(android.os.IBinder)>
<android.print.IPrintManager$Stub: android.print.IPrintManager getDefaultImpl()>
<android.net.lowpan.LowpanChannelInfo: int describeContents()>
<android.content.pm.ResolveInfo: int resolveIconResId()>
<com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>
<android.security.keystore.AndroidKeyStoreLoadStoreParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()>
<android.net.Uri$OpaqueUri: java.lang.String getHost()>
<android.content.pm.SharedLibraryInfo: int getVersion()>
<com.google.android.mms.pdu.NotificationInd: int getDeliveryReport()>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()>
<android.renderscript.RenderScript: int nScriptGetVarI(long,int)>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>
<android.app.Notification$MessagingStyle: java.util.List getHistoricMessages()>
<android.media.AudioTrack: android.media.AudioFormat getFormat()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.telephony.CarrierRestrictionRules: int access$502(android.telephony.CarrierRestrictionRules,int)>
<android.media.IAudioService$Stub$Proxy: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)>
<android.graphics.fonts.FontStyle: int getSlant()>
<android.media.IMediaRouter2Manager$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.MapCollections$ValuesCollection: int size()>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>
<android.view.textclassifier.TextLanguage: int getLocaleHypothesisCount()>
<android.view.IDisplayWindowListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.IIntentReceiver$Stub: android.content.IIntentReceiver asInterface(android.os.IBinder)>
<android.app.timezone.IRulesManager$Default: android.os.IBinder asBinder()>
<android.text.style.LeadingMarginSpan$Standard: int getLeadingMargin(boolean)>
<android.telephony.ims.ImsReasonInfo: int getExtraCode()>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.content.om.IOverlayManager$Stub: android.content.om.IOverlayManager asInterface(android.os.IBinder)>
<android.hardware.camera2.impl.CameraMetadataNative$17: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.location.GpsClock: double getTimeUncertaintyInNs()>
<android.view.View: int getMeasuredHeightAndState()>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>
<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo makeGlobalRoute(android.media.MediaRouterClientState$RouteInfo)>
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>
<android.content.UndoManager: boolean isInUndo()>
<android.widget.TextView: int getCurrentTextColor()>
<android.widget.ImageView: android.graphics.PorterDuff$Mode getImageTintMode()>
<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>
<android.util.SparseIntArray: int indexOfKey(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getOriginalText()>
<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,android.os.UserHandle)>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Default: android.os.IBinder asBinder()>
<android.app.Notification$Builder: android.os.Bundle getExtras()>
<com.android.internal.util.StateMachine$LogRec: long getWhat()>
<android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>
<android.widget.ToastPresenter: android.view.View getTextToastView(android.content.Context,java.lang.CharSequence)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<android.app.Notification$WearableExtender: boolean getHintShowBackgroundOnly()>
<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()>
<android.widget.Scroller: int getCurrX()>
<android.media.IRemoteVolumeObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.ZygoteConnection: boolean isClosedByPeer()>
<android.view.PointerIcon$1: android.view.PointerIcon createFromParcel(android.os.Parcel)>
<android.renderscript.Type: int getZ()>
<android.telephony.CallQuality: int getNumRtpPacketsTransmittedLost()>
<com.android.internal.os.BatteryStatsImpl: int getWifiStateCount(int,int)>
<android.telephony.CbGeoUtils$Polygon$Point: android.telephony.CbGeoUtils$Polygon$Point subtract(android.telephony.CbGeoUtils$Polygon$Point)>
<android.net.TrafficStats: long getLoopbackRxBytes()>
<android.telephony.ModemActivityInfo: int getIdleTimeMillis()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Map getOverlayables()>
<android.util.apk.ZipUtils: long getZipEocdCentralDirectoryOffset(java.nio.ByteBuffer)>
<android.media.AudioManager$ServiceEventHandlerDelegate: android.os.Handler getHandler()>
<android.widget.ExpandableListConnector: int getViewTypeCount()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: byte[] getMacAddress()>
<android.hardware.radio.RadioManager$ModuleProperties: int getNumTuners()>
<android.hardware.display.BrightnessConfiguration: int describeContents()>
<android.os.INetworkManagementService$Stub$Proxy: int removeRoutesFromLocalNetwork(java.util.List)>
<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()>
<com.android.internal.view.menu.IconMenuView: int[] getLayout()>
<android.os.ParcelFileDescriptor: int getFd()>
<android.telephony.SubscriptionManager: java.util.List getAccessibleSubscriptionInfoList()>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
<android.media.ExifInterface: long getGpsDateTime()>
<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isDeviceProvisioned()>
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)>
<android.view.Display: int getHeight()>
<android.media.projection.IMediaProjection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GnssSingleSatCorrection: int getSingleSatelliteCorrectionFlags()>
<com.android.internal.view.IDragAndDropPermissions$Stub: android.os.IBinder asBinder()>
<android.widget.RemoteViews$SetPendingIntentTemplate: int getActionTag()>
<android.media.tv.ITvInputManagerCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.Camera$Parameters: int getMinExposureCompensation()>
<android.content.Intent$FilterComparison: int hashCode()>
<android.view.accessibility.IAccessibilityManager$Stub: java.lang.String getTransactionName(int)>
<android.os.Parcel: int dataPosition()>
<android.graphics.drawable.ColorStateListDrawable: int getChangingConfigurations()>
<android.view.View: float getVerticalScrollFactor()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getSystemSharedLibraryNames()>
<android.app.admin.IDevicePolicyManager$Default: boolean getScreenCaptureDisabled(android.content.ComponentName,int,boolean)>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>
<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.params.RecommendedStreamConfigurationMap getRecommendedStreamConfigurationMap(int)>
<android.content.UndoManager: int undo(android.content.UndoOwner[],int)>
<android.animation.IntKeyframeSet: int getIntValue(float)>
<android.app.DirectAction: int describeContents()>
<android.content.pm.SuspendDialogInfo: int getNeutralButtonAction()>
<android.app.IInstrumentationWatcher$Stub: android.os.IBinder asBinder()>
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>
<android.window.IDisplayAreaOrganizerController$Stub: android.os.IBinder asBinder()>
<android.app.UiModeManager: boolean isNightModeLocked()>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsUt getUtInterface()>
<android.view.textclassifier.TextSelection$Request: android.os.Bundle getExtras()>
<android.text.Annotation: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveUnknownCount(int)>
<android.app.admin.DevicePolicyManager: int stopUser(android.content.ComponentName,android.os.UserHandle)>
<android.app.usage.NetworkStats$Bucket: int access$102(android.app.usage.NetworkStats$Bucket,int)>
<android.widget.TextView: int getImeActionId()>
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>
<android.os.storage.IStorageManager$Stub$Proxy: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()>
<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int hashCode()>
<android.media.RemoteControlClient: int getRccControlFlagsFromActions(long)>
<com.android.internal.telephony.ITelephony$Default: int getImsRegTechnologyForMmTel(int)>
<android.app.admin.IDevicePolicyManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
<android.media.IRingtonePlayer$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.KeySet: int describeContents()>
<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>
<android.view.KeyEvent: int getId()>
<android.telephony.ims.ImsCallProfile: int getEmergencyServiceCategories()>
<com.android.internal.view.IInputContext$Stub: java.lang.String getTransactionName(int)>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>
<android.telephony.CellInfoLte: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.telephony.SmsManager: java.lang.String createAppSpecificSmsTokenWithPackageInfo(java.lang.String,android.app.PendingIntent)>
<android.telecom.TelecomAnalytics$SessionTiming: long getTime()>
<android.media.MediaTimestamp: float getMediaClockRate()>
<android.drm.DrmInfo: int getInfoType()>
<android.security.net.config.NetworkSecurityConfig: java.util.Set getTrustAnchors()>
<com.android.internal.telephony.ISms$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.RuntimeAppOpAccessMessage: int getSamplingStrategy()>
<android.widget.RadioButton: java.lang.CharSequence getAccessibilityClassName()>
<android.view.contentcapture.ContentCaptureContext: android.content.LocusId getLocusId()>
<android.view.IWindowManager$Stub$Proxy: boolean isLayerTracing()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData[] newArray(int)>
<android.view.IAppTransitionAnimationSpecsFuture$Default: android.view.AppTransitionAnimationSpec[] get()>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<android.content.pm.parsing.ParsingPackageImpl: int getCategory()>
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeSuggestedWordEndIndex()>
<android.provider.ContactsContract$CommonDataKinds$SipAddress: int getTypeLabelResource(int)>
<android.media.AudioRecord: android.media.AudioDeviceInfo getPreferredDevice()>
<android.service.vr.IVrManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.content.pm.ShortcutInfo: int getTitleResId()>
<android.view.RemoteAnimationAdapter: int getCallingUid()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.SignalStrength getSignalStrength(int)>
<android.net.UidRange: int getStartUser()>
<android.telecom.Logging.Session: java.lang.String getFullMethodPath(boolean)>
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>
<android.os.IVold$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.storage.StorageManager: long getCacheQuotaBytes(java.util.UUID)>
<android.net.IpPrefix: byte[] getRawAddress()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.view.Surface getInputSurface()>
<android.database.AbstractWindowedCursor: int getType(int)>
<android.window.WindowContainerTransaction$Change: boolean getHidden()>
<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()>
<android.util.SparseIntArray: int valueAt(int)>
<android.graphics.drawable.VectorDrawable$VPath: android.util.PathParser$PathData getPathData()>
<android.text.method.WordIterator: int nextBoundary(int)>
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()>
<android.os.VibrationAttributes: int getUsage()>
<android.view.textclassifier.TextClassificationContext: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>
<com.android.internal.telecom.ITelecomService$Default: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String)>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Default: android.os.IBinder asBinder()>
<android.view.View: android.graphics.Matrix getAnimationMatrix()>
<android.database.AbstractWindowedCursor: long getLong(int)>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: java.lang.String getTransactionName(int)>
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getFullWifiLockTime(long,int)>
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.telephony.data.ApnSetting: int describeContents()>
<android.view.textclassifier.TextClassificationContext: java.lang.String getWidgetVersion()>
<android.hardware.location.ContextHubInfo: int getPlatformVersion()>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>
<com.google.android.mms.pdu.PduPart: byte[] getContentType()>
<android.service.euicc.EuiccProfileInfo: android.service.carrier.CarrierIdentifier getCarrierIdentifier()>
<android.app.backup.IBackupManagerMonitor$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkCapabilities: java.util.Set getUids()>
<android.telephony.CellIdentityLte$1: android.telephony.CellIdentityLte createFromParcel(android.os.Parcel)>
<android.view.InsetsController: int getSystemBarsAppearance()>
<android.view.SurfaceView: int getImportantForAccessibility()>
<android.app.assist.AssistStructure$ViewNode: int getAutofillType()>
<android.net.NetworkStatsHistory: long getBucketDuration()>
<android.content.pm.LauncherApps: int getShortcutIconResId(android.content.pm.ShortcutInfo)>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultSmsSubscriptionInfo()>
<android.os.IProgressListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ServiceState: boolean isUsingCarrierAggregation()>
<android.app.IActivityController$Default: int systemNotResponding(java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,int)>
<android.telephony.SmsCbMessage: int getSerialNumber()>
<com.android.internal.util.BitUtils: int getUint16(java.nio.ByteBuffer,int)>
<android.view.DisplayAddress$Physical: long getPhysicalDisplayId()>
<android.webkit.WebSettings: int getForceDark()>
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>
<android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener getDefaultImpl()>
<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()>
<android.util.TypedValue: float getFloat()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<android.security.AttestedKeyPair: java.util.List getAttestationRecord()>
<android.app.IAppTask$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession getDefaultImpl()>
<android.hardware.location.NanoAppBinary: int getHeaderVersion()>
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
<android.os.IIncidentManager$Default: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>
<android.media.AudioManager: boolean isMicrophoneMute()>
<android.hardware.usb.UsbPort: int getSupportedContaminantProtectionModes()>
<android.util.SizeF: float getHeight()>
<com.android.internal.os.PowerProfile: int getNumElements(java.lang.String)>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Default: android.os.IBinder asBinder()>
<android.accounts.IAccountManagerResponse$Default: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsUtListener$Stub: java.lang.String getTransactionName(int)>
<android.os.Parcel: char[] createCharArray()>
<android.transition.Slide$5: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.app.IBackupAgent$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.V1_4.CellIdentityNr: int hashCode()>
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<android.content.res.Resources: int getAttributeSetSourceResId(android.util.AttributeSet)>
<android.net.INetworkStatsSession$Stub: java.lang.String getTransactionName(int)>
<android.app.IActivityTaskManager$Stub$Proxy: int getTaskForActivity(android.os.IBinder,boolean)>
<android.media.AudioPort: int id()>
<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.GnssRequest merge(android.location.GnssRequest[])>
<android.print.IPrintManager$Default: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId,int)>
<android.content.res.AssetManager: android.content.res.AssetManager getSystem()>
<android.os.PowerSaveState: int describeContents()>
<android.net.ConnectivityManager: int tether(java.lang.String)>
<android.widget.TextView: int getAccessibilitySelectionEnd()>
<android.hardware.display.VirtualDisplayConfig: int describeContents()>
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.graphics.Region getRegionAt(int)>
<android.app.slice.SliceItem: android.app.RemoteInput getRemoteInput()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getPermissionControllerPackageName()>
<android.os.storage.IStorageManager$Default: int getPasswordType()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()>
<android.hardware.hdmi.IHdmiControlCallback$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: int getInstallReason(java.lang.String,int)>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
<android.hardware.face.FaceManager$AuthenticationResult: android.hardware.face.Face getFace()>
<android.os.connectivity.GpsBatteryStats: long[] getTimeInGpsSignalQualityLevel()>
<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)>
<android.location.GpsMeasurement: double getCodePhaseUncertaintyInChips()>
<android.telephony.PreciseCallState$1: void <init>()>
<com.android.internal.os.BatteryStatsImpl: boolean isOnBatteryLocked()>
<android.media.projection.IMediaProjectionWatcherCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowIndex()>
<android.graphics.Paint: float getTextSize()>
<android.media.tv.ITvInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.ISensorPrivacyListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.euicc.EuiccManager: java.lang.String getEid()>
<android.telephony.TelephonyManager: long getAllowedNetworkTypes()>
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: byte[][] getDigestBytes()>
<android.app.ActivityManager: int getMemoryClass()>
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>
<android.companion.ICompanionDeviceManager$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getSystemTextClassifierPackageName()>
<com.android.internal.telephony.ITelephony$Default: boolean isMmTelCapabilityProvisionedInCache(int,int,int)>
<android.media.AudioPort: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn(int)>
<android.hardware.usb.UsbPort: int getSupportedModes()>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyUrns()>
<android.content.ContextWrapper: java.io.File getObbDir()>
<android.view.ViewGroup: int getTransientViewIndex(int)>
<android.content.pm.ILauncherApps$Default: android.content.pm.ParceledListSlice getLauncherActivities(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.security.net.config.NetworkSecurityConfig$Builder: java.util.List getCertificatesEntryRefs()>
<android.app.assist.AssistStructure$ViewNode: int getTop()>
<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.content.res.XmlBlock$Parser: char[] getTextCharacters(int[])>
<android.util.KeyValueListParser$FloatValue: java.lang.String getKey()>
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.media.session.IOnVolumeKeyLongPressListener asInterface(android.os.IBinder)>
<android.hardware.cas.V1_1.ICas$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.security.keystore.IKeystoreKeyCharacteristicsCallback asInterface(android.os.IBinder)>
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<android.app.NotificationHistory$HistoricalNotification: int getUid()>
<android.hardware.display.ColorDisplayManager: java.time.LocalTime getNightDisplayCustomStartTime()>
<android.app.AppOpsManager$HistoricalOp: long getForegroundRejectCount(int)>
<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()>
<android.app.RemoteInput: boolean getAllowFreeFormInput()>
<android.view.View: float getZ()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)>
<android.telephony.ModemInfo: int describeContents()>
<android.net.INetworkScoreCache$Stub: android.os.IBinder asBinder()>
<android.view.contentcapture.ViewNode: int[] getTextLineCharOffsets()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringWeekly(java.time.ZonedDateTime)>
<android.view.textservice.TextInfo: int getSequence()>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.IPackageManager$Default: int checkUidPermission(java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()>
<android.graphics.drawable.VectorDrawable$VFullPath$9: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.ScoredNetwork: int describeContents()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
<android.widget.TextView: float getTextScaleX()>
<android.app.NotificationChannelGroup: int hashCode()>
<android.os.ICancellationSignal$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<com.android.internal.app.MessageSamplingConfig: int describeContents()>
<android.telephony.data.ApnSetting$Builder: int access$1000(android.telephony.data.ApnSetting$Builder)>
<android.media.AudioPlaybackConfiguration: android.media.IPlayer getIPlayer()>
<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>
<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()>
<android.content.pm.PackageInfo: long getLongVersionCode()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.media.IVolumeController$Stub: java.lang.String getTransactionName(int)>
<android.app.IActivityTaskManager$Default: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<android.telephony.SubscriptionManager: int getPreferredDataSubscriptionId()>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>
<android.view.textclassifier.TextClassification: android.graphics.drawable.Drawable getIcon()>
<android.os.IServiceCallback$Stub: java.lang.String getTransactionName(int)>
<android.service.textclassifier.ITextClassifierCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.ICameraDeviceUser$Stub: android.os.IBinder asBinder()>
<android.net.nsd.INsdManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.LowpanCredential: int access$102(android.net.lowpan.LowpanCredential,int)>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IUserManager$Default: int getProfileParentId(int)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationScale(int)>
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledConsumer asConsumer()>
<android.app.Activity: android.content.Intent getIntent()>
<android.app.IApplicationThread$Stub: android.app.IApplicationThread asInterface(android.os.IBinder)>
<android.app.IActivityManager$Default: int getLockTaskModeState()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>
<android.view.ViewGroup: void getScrollIndicatorBounds(android.graphics.Rect)>
<android.media.IMediaHTTPConnection$Default: int readAt(long,int)>
<android.content.pm.PackageStats: int hashCode()>
<android.os.BinderProxy: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.content.pm.VersionedPackage: long getLongVersionCode()>
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)>
<android.hardware.radio.ITuner$Stub: android.hardware.radio.ITuner asInterface(android.os.IBinder)>
<android.os.IIncidentDumpCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>
<android.view.WindowInsets$Type: int ime()>
<android.app.IServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Default: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroupsForPackage(java.lang.String,int,boolean)>
<android.telephony.SubscriptionInfo$1: void <init>()>
<android.telephony.CarrierRestrictionRules$1: void <init>()>
<android.content.res.AssetManager: android.content.res.loader.ResourcesLoader[] access$402(android.content.res.AssetManager,android.content.res.loader.ResourcesLoader[])>
<android.renderscript.Allocation: int getUsage()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()>
<android.view.View: boolean getHasOverlappingRendering()>
<android.net.wifi.nl80211.NativeWifiClient: android.net.MacAddress getMacAddress()>
<android.content.pm.IPackageManager$Default: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<android.net.lowpan.ILowpanManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.BoringLayout: boolean getLineContainsTab(int)>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>
<android.hardware.input.IInputManager$Stub: java.lang.String getTransactionName(int)>
<android.util.SparseIntArray: int[] copyKeys()>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName lambda$replacePreferredActivity$1(android.content.pm.ResolveInfo)>
<android.telephony.ServiceState: int getDataRegState()>
<android.app.INotificationManager$Stub$Proxy: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>
<android.net.lowpan.LowpanIdentity: int access$502(android.net.lowpan.LowpanIdentity,int)>
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: int getCount()>
<android.os.ISystemUpdateManager$Stub: android.os.ISystemUpdateManager getDefaultImpl()>
<android.app.IActivityManager$Stub$Proxy: int getTaskForActivity(android.os.IBinder,boolean)>
<android.app.IAlarmListener$Stub: android.os.IBinder asBinder()>
<android.print.IPrintManager$Stub$Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>
<android.telephony.DataConnectionRealTimeInfo$1: android.telephony.DataConnectionRealTimeInfo[] newArray(int)>
<android.telephony.NetworkScanRequest: int getScanType()>
<android.app.IBackupAgent$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.IClipboard$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ITransientNotification$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.IOns$Default: android.os.IBinder asBinder()>
<android.os.StrictMode$ViolationInfo: int describeContents()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeDirectory(int,java.lang.String)>
<android.security.keystore.KeyGenParameterSpec: int getPurposes()>
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.SurfaceTextureRenderer access$000(android.hardware.camera2.legacy.GLThreadManager)>
<android.hardware.location.IContextHubTransactionCallback$Stub: android.hardware.location.IContextHubTransactionCallback getDefaultImpl()>
<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getStagedSessionErrorMessage()>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()>
<com.android.internal.util.StateMachine$LogRec: long getTime()>
<android.webkit.WebView: int getRendererRequestedPriority()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getTelephonyHistograms()>
<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()>
<android.app.AppOpsManager: int noteOp(int)>
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.internal.app.IVoiceInteractorRequest$Stub: com.android.internal.app.IVoiceInteractorRequest asInterface(android.os.IBinder)>
<android.app.slice.SliceManager: android.net.Uri mapIntentToUri(android.content.Intent)>
<android.debug.IAdbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm copy()>
<android.metrics.LogMaker: int getUid()>
<android.webkit.WebView: android.view.View getZoomControls()>
<android.print.IPrintJobStateChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.SystemProperties$Handle: java.lang.String get()>
<android.os.storage.IObbActionListener$Stub: android.os.IBinder asBinder()>
<android.hardware.fingerprint.FingerprintManager$CryptoObject: android.security.identity.IdentityCredential getIdentityCredential()>
<android.telephony.TelephonyManager: boolean matchesCurrentSimOperator(java.lang.String,int,java.lang.String)>
<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()>
<android.media.Image: boolean isAttachable()>
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageId()>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint$FontMetrics)>
<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>
<android.app.ApplicationPackageManager: boolean isAllow3rdPartyOnInternal(android.content.Context)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>
<android.view.contentcapture.ContentCaptureSession: int getId()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPermissions()>
<android.net.IEthernetServiceListener$Stub: android.os.IBinder asBinder()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$402(android.security.keystore.recovery.KeyChainSnapshot,byte[])>
<android.app.Notification$WearableExtender: boolean getHintHideIcon()>
<android.app.ITaskStackListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>
<android.util.LruCache: int maxSize()>
<android.provider.FontsContract: android.graphics.Typeface getFontSync(android.provider.FontRequest)>
<android.widget.ListPopupWindow: boolean isShowing()>
<android.hardware.camera2.ICameraDeviceUser$Default: int getGlobalAudioRestriction()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementEnterTransition()>
<android.content.res.Configuration: int describeContents()>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>
<android.filterpacks.videosrc.MediaSource: int access$200(android.filterpacks.videosrc.MediaSource)>
<android.telephony.TelephonyManager: android.telephony.SignalStrength getSignalStrength()>
<com.android.internal.widget.ILockSettings$Stub: java.lang.String getTransactionName(int)>
<android.media.tv.ITvInputClient$Stub: java.lang.String getTransactionName(int)>
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
<android.debug.AdbManager: boolean isAdbWifiSupported()>
<android.os.BasicShellCommandHandler: java.lang.String getNextArgRequired()>
<android.os.UserManager: android.os.Bundle getUserRestrictions()>
<android.net.lowpan.LowpanIdentity: java.lang.String getType()>
<android.hardware.radio.RadioManager$ModuleProperties: int getClassId()>
<android.util.SparseIntArray: int size()>
<android.view.accessibility.AccessibilityNodeInfo: long getLeashedParentNodeId()>
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>
<android.service.notification.ZenPolicy: int getPriorityCategorySystem()>
<android.hardware.camera2.params.ColorSpaceTransform: android.util.Rational getElement(int,int)>
<android.app.timedetector.TelephonyTimeSuggestion: int hashCode()>
<android.app.VoiceInteractor$ConfirmationRequest: java.lang.String getRequestTypeName()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>
<android.drm.DrmEvent: java.lang.String getMessage()>
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()>
<android.view.ViewGroup$ViewLocationHolder: int compareTo(java.lang.Object)>
<android.accounts.Account: int describeContents()>
<android.net.INetworkPolicyManager$Stub$Proxy: int[] getUidsWithPolicy(int)>
<android.os.BaseBundle: double getDouble(java.lang.String)>
<android.telephony.BarringInfo$BarringServiceInfo$1: void <init>()>
<android.app.backup.IFullBackupRestoreObserver$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.os.UserHandle)>
<android.hardware.cas.V1_2.ICasListener$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.location.NanoAppBinary: int getFlags()>
<android.content.res.CompatResources: android.graphics.drawable.Drawable getDrawable(int)>
<android.app.IActivityManager$Default: android.os.ParcelFileDescriptor getLifeMonitor()>
<android.os.IDeviceIdentifiersPolicyService$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.LauncherApps: java.util.List getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.euicc.EuiccCardManager lambda$registerServiceWrappers$4(android.content.Context)>
<android.inputmethodservice.InputMethodService: int access$1100(android.inputmethodservice.InputMethodService)>
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
<android.app.Notification$CarExtender$UnreadConversation: long getLatestTimestamp()>
<android.os.IUserManager$Default: java.lang.String getUserAccount(int)>
<com.android.internal.net.VpnConfig: int describeContents()>
<android.hardware.location.NanoAppInstanceInfo: int[] getOutputEvents()>
<android.net.Proxy: int getDefaultPort()>
<android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats$Bucket)>
<android.location.GnssMeasurementsEvent: android.location.GnssClock getClock()>
<android.service.notification.INotificationListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: int getAccessibilityTraversalBefore()>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,int,java.lang.String)>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: boolean isMultiPackage()>
<android.graphics.drawable.Icon: int getDataLength()>
<android.telephony.CellIdentityNr$1: android.telephony.CellIdentityNr createFromParcel(android.os.Parcel)>
<android.view.contentcapture.IContentCaptureManager$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Default: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<android.net.wifi.nl80211.WifiNl80211Manager: android.app.AlarmManager access$300(android.net.wifi.nl80211.WifiNl80211Manager)>
<android.hardware.camera2.params.TonemapCurve: int hashCode()>
<android.media.midi.MidiInputPort: int getPortNumber()>
<android.app.IWallpaperManager$Default: java.lang.String getName()>
<android.database.CursorWindow: java.lang.String getName()>
<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$AudioCapabilities getAudioCapabilities()>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>
<android.media.Metadata: java.util.Date getDate(int)>
<android.os.StatsServiceManager: android.os.StatsServiceManager$ServiceRegisterer getStatsdServiceRegisterer()>
<android.app.AppOpsManager$OpEntry: int getOp()>
<android.debug.IAdbManager$Stub: android.os.IBinder asBinder()>
<android.view.SurfaceView: android.os.IBinder getHostToken()>
<android.app.NotificationHistory: int getHistoryCount()>
<android.service.persistentdata.IPersistentDataBlockService$Stub: android.os.IBinder asBinder()>
<android.app.blob.BlobStoreManager: java.util.List getLeasedBlobs()>
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig$Configuration getConfiguration(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()>
<android.media.session.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>
<android.net.Uri$HierarchicalUri: java.lang.String getScheme()>
<android.telephony.NetworkRegistrationInfo$1: android.telephony.NetworkRegistrationInfo[] newArray(int)>
<android.media.midi.MidiDeviceInfo: int getType()>
<android.net.EthernetManager: boolean isAvailable()>
<android.hardware.camera2.impl.CameraDeviceImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureCallback,java.util.concurrent.Executor)>
<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails getSigningDetails()>
<android.os.Debug: int getLoadedClassCount()>
<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector$Identifier getLogicallyTunedTo()>
<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()>
<android.os.Debug: int getThreadAllocCount()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>
<android.content.ClipboardManager: android.os.Handler access$000(android.content.ClipboardManager)>
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<android.hardware.lights.ILightsManager$Stub: android.hardware.lights.ILightsManager asInterface(android.os.IBinder)>
<android.hardware.cas.V1_2.ICas$Stub: android.os.IHwBinder asBinder()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()>
<android.media.session.MediaController$PlaybackInfo: int getCurrentVolume()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getLengthPrefixedSlice(java.nio.ByteBuffer)>
<android.content.pm.dex.IArtManager$Stub: android.os.IBinder asBinder()>
<android.net.InterfaceConfiguration: int describeContents()>
<android.app.blob.BlobInfo: java.util.List getLeases()>
<android.graphics.Paint: long getNativeInstance()>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodListAsUser(int)>
<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)>
<com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>
<android.view.inputmethod.CorrectionInfo: int describeContents()>
<com.android.internal.policy.PhoneWindow: com.android.internal.policy.PhoneWindow$PanelFeatureState getPanelState(int,boolean)>
<android.view.inputmethod.EditorInfo$InitialSurroundingText: int describeContents()>
<android.os.IThermalService$Default: android.os.Temperature[] getCurrentTemperaturesWithType(int)>
<android.os.Parcel: java.lang.Object getClassCookie(java.lang.Class)>
<android.view.textclassifier.SelectionEvent: long getDurationSincePreviousEvent()>
<android.widget.AbsListView: int getCheckedItemPosition()>
<android.telephony.SmsMessage: boolean isMWISetMessage()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>
<android.app.timezone.IRulesManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.euicc.EuiccNotification: byte[] getData()>
<android.telephony.CellIdentityLte: int getCi()>
<android.widget.HorizontalScrollView: int getRightEdgeEffectColor()>
<android.telephony.TelephonyHistogram$1: void <init>()>
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.content.Intent,java.util.Set)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)>
<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>
<com.android.internal.app.ToolbarActionBar: int getNavigationItemCount()>
<android.app.timezone.ICallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IMediaRouter2$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.PermissionInfo: int getProtection()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDozeSinceCharge()>
<android.window.ITaskOrganizerController$Stub$Proxy: java.util.List getRootTasks(int,int[])>
<android.view.View: int getLeftPaddingOffset()>
<android.app.admin.DevicePolicyManager: int myUserId()>
<android.print.PrintAttributes$MediaSize: int getWidthMils()>
<android.media.IAudioService$Stub$Proxy: int trackRecorder(android.os.IBinder)>
<android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
<android.view.contentcapture.ViewNode: int getTextSelectionEnd()>
<android.net.lowpan.ILowpanInterfaceListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo$hidl_discriminator: java.lang.String getName(byte)>
<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()>
<android.hardware.location.IContextHubService$Default: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: long getReportTimestamp()>
<android.net.IpSecConfig: int getXfrmInterfaceId()>
<android.util.LruCache: int missCount()>
<android.os.IUserManager$Default: int getUserRestrictionSource(java.lang.String,int)>
<android.app.IActivityTaskManager$Default: java.lang.String getPackageForToken(android.os.IBinder)>
<android.content.res.TypedArray: int length()>
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>
<android.print.IPrintManager$Default: android.os.IBinder asBinder()>
<android.media.AudioRecord: java.util.List getActiveMicrophones()>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.content.rollback.IRollbackManager$Default: android.content.pm.ParceledListSlice getRecentlyCommittedRollbacks()>
<android.security.keymaster.KeymasterArguments: long getUnsignedInt(int,long)>
<android.service.dreams.IDreamManager$Default: android.content.ComponentName[] getDreamComponentsForUser(int)>
<android.hardware.cas.V1_0.ICas$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.media.IAudioService$Default: int getMode()>
<android.accessibilityservice.AccessibilityService: java.util.List getSystemActions()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionNetworkType()>
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)>
<android.view.DisplayAddress$Physical: byte getPort()>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.permission.IPermissionManager$Default: java.util.List getSplitPermissions()>
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)>
<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<com.android.internal.telephony.ITelephony$Default: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)>
<com.android.internal.appwidget.IAppWidgetHost$Default: android.os.IBinder asBinder()>
<android.os.AsyncTask: java.util.concurrent.LinkedBlockingQueue access$100()>
<android.content.UndoManager$UndoState: int countOperations()>
<android.telephony.SubscriptionManager: android.os.ParcelUuid createSubscriptionGroup(java.util.List)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getCompileSdkVersionCodeName()>
<android.print.IPrintManager$Default: java.util.List getPrintServiceRecommendations(int)>
<android.widget.TextView: int getLineCount()>
<android.app.Activity: android.view.Window getWindow()>
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>
<android.view.View$9: java.lang.Float get(android.view.View)>
<android.hardware.radio.V1_0.LteSignalStrength: int hashCode()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isUnattendedManagedKiosk()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTag(int,java.lang.String,long,long,int,int)>
<android.telephony.CbGeoUtils$Circle: boolean equals(java.lang.Object)>
<com.android.internal.telephony.IOns$Default: int getPreferredDataSubscriptionId(java.lang.String,java.lang.String)>
<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State valueOf(java.lang.String)>
<android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getSharedUserId()>
<android.location.GnssSingleSatCorrection: float getExcessPathLengthUncertaintyMeters()>
<android.view.IGraphicsStatsCallback$Stub: android.view.IGraphicsStatsCallback getDefaultImpl()>
<android.transition.ArcMotion: float getMaximumAngle()>
<android.app.NotificationChannel: long[] getVibrationPattern()>
<android.os.INetworkManagementService$Default: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<android.location.GnssMeasurement: float getCarrierFrequencyHz()>
<android.service.notification.IConditionProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.ISocketKeepaliveCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.UiccSlotInfo: int hashCode()>
<android.accessibilityservice.GestureDescription: long getMaxGestureDuration()>
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyFocusStateMapper access$1700(android.hardware.camera2.legacy.RequestThreadManager)>
<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()>
<android.telephony.NetworkRegistrationInfo: int getRoamingType()>
<android.media.midi.MidiDeviceServer$OutputPortClient: android.media.midi.MidiInputPort getInputPort()>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>
<android.media.tv.ITvInputManager$Stub: android.media.tv.ITvInputManager asInterface(android.os.IBinder)>
<android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface asInterface(android.os.IBinder)>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>
<android.service.dreams.IDreamManager$Stub$Proxy: boolean isDreaming()>
<android.database.CursorWindow: int describeContents()>
<android.media.RoutingSessionInfo: java.util.List getSelectableRoutes()>
<android.telephony.CallQuality: boolean isOutgoingSilenceDetectedAtCallSetup()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedAccessibilityServicesForUser(int)>
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int describeContents()>
<android.app.NotificationHistory: android.app.NotificationHistory$HistoricalNotification getNextNotification()>
<android.telephony.DataSpecificRegistrationInfo$1: android.telephony.DataSpecificRegistrationInfo createFromParcel(android.os.Parcel)>
<android.hardware.input.InputManager: int isMicMuted()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetLeft(int)>
<android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener asInterface(android.os.IBinder)>
<android.hardware.radio.V1_2.CellInfoWcdma: int hashCode()>
<android.hardware.radio.RadioManager$AmBandDescriptor: int describeContents()>
<android.telephony.ims.ImsCallProfile: int getCallType()>
<android.content.pm.IPackageManager$Default: android.content.pm.ChangedPackages getChangedPackages(int,int)>
<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()>
<android.view.InsetsSourceConsumer: int requestShow(boolean)>
<android.app.IRequestFinishCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreOperationResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
<android.webkit.WebView: android.webkit.WebViewClient getWebViewClient()>
<android.service.notification.INotificationListener$Stub: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getTdScdmaAsuLevel()>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getAppPackageName()>
<android.telephony.TelephonyManager: java.lang.Throwable access$100(java.lang.String,java.lang.String)>
<android.hardware.location.IContextHubClientCallback$Stub: android.hardware.location.IContextHubClientCallback getDefaultImpl()>
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.view.contentcapture.IContentCaptureDirectManager asInterface(android.os.IBinder)>
<com.android.internal.telephony.OperatorInfo$1: void <init>()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid,java.lang.String,java.lang.String)>
<android.view.WindowInsetsAnimation: int getTypeMask()>
<android.graphics.fonts.FontFamily: android.graphics.fonts.Font getFont(int)>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List getDebugInfo()>
<android.net.Uri$PathSegments: int size()>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.app.backup.IBackupManager$Default: long getAvailableRestoreTokenForUser(int,java.lang.String)>
<android.view.WindowId: android.view.IWindowId getTarget()>
<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager getDefaultImpl()>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ITransientNotificationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.ResolveInfo: int getIconResource()>
<android.util.Rational: int getDenominator()>
<android.net.INetworkStatsService$Default: long getUidStats(int,int)>
<android.widget.RemoteViews$LayoutParamAction: int getActionTag()>
<android.hardware.cas.V1_1.ICas$Stub: android.os.IHwBinder asBinder()>
<android.app.servertransaction.StopActivityItem: int hashCode()>
<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String,int)>
<android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>
<android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>
<android.view.ViewConfiguration: int getHoverTooltipHideTimeout()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getWifiScanBackgroundTimer()>
<com.android.internal.app.ISoundTriggerService$Stub: android.os.IBinder asBinder()>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
<android.app.usage.NetworkStats$Bucket: int access$800(int)>
<android.service.textclassifier.ITextClassifierService$Stub: android.service.textclassifier.ITextClassifierService asInterface(android.os.IBinder)>
<android.app.ApplicationPackageManager: java.util.Set getWhitelistedRestrictedPermissions(java.lang.String,int)>
<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher,int)>
<android.content.ContentProviderNative: android.content.IContentProvider asInterface(android.os.IBinder)>
<android.view.View: boolean getRevealOnFocusHint()>
<com.android.internal.graphics.palette.Palette$Swatch: int hashCode()>
<android.app.LoadedApk: java.io.File getDeviceProtectedDataDirFile()>
<android.widget.RemoteViews: java.lang.String getPackage()>
<android.view.IWindowManager$Default: android.os.IBinder asBinder()>
<android.os.IIncidentManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.PendingIntent: boolean isTargetedToPackage()>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>
<android.graphics.ColorSpace$Rgb: float[] getWhitePoint()>
<android.view.ViewTreeObserver$InternalInsetsInfo: int hashCode()>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
<android.app.ITaskStackListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECPoint getW()>
<android.hardware.input.IInputDevicesChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.ImageView: int getImageAlpha()>
<android.app.ActivityOptions: int getCustomExitResId()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getKey(java.lang.String)>
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getPackage()>
<android.media.MediaCodecInfo$AudioCapabilities: int[] getSupportedSampleRates()>
<android.security.keystore.recovery.RecoveryCertPath: java.security.cert.CertPath getCertPath()>
<android.content.RestrictionEntry: java.lang.String getKey()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<android.view.Window: int getFeatures()>
<android.graphics.ImageDecoder$ImageInfo: android.util.Size getSize()>
<android.app.ApplicationPackageManager: android.content.ComponentName getInstantAppInstallerComponent()>
<android.content.pm.IPackageManager$Stub$Proxy: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>
<android.net.Uri$StringUri: java.lang.String getQuery()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<android.service.notification.ZenPolicy: int getPriorityMessageSenders()>
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String,java.lang.String,int,boolean)>
<android.os.Parcel: double[] createDoubleArray()>
<android.os.VibrationEffect$Waveform: int[] getAmplitudes()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>
<android.view.VelocityTracker: float getYVelocity()>
<android.media.projection.MediaProjection: android.media.projection.IMediaProjection getProjection()>
<android.media.session.MediaSession: android.media.session.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>
<android.graphics.Paint: int getHinting()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)>
<android.telephony.CellIdentityCdma: int getBasestationId()>
<android.os.IDeviceIdleController$Default: java.lang.String[] getUserPowerWhitelist()>
<android.view.View: android.view.ViewOverlay getOverlay()>
<com.android.internal.telephony.CellNetworkScanResult: java.util.List getOperators()>
<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.StartInstallingUpdateCallback$Default: android.os.IBinder asBinder()>
<android.hardware.location.IContextHubClient$Default: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)>
<android.os.INetworkActivityListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>
<android.media.IRingtonePlayer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.service.notification.NotificationListenerService: boolean isBound()>
<android.hardware.HardwareBuffer: int getWidth()>
<android.view.InsetsSource: android.graphics.Rect getFrame()>
<android.location.GnssClock: double getBiasUncertaintyNanos()>
<android.os.ISystemUpdateManager$Stub: android.os.IBinder asBinder()>
<android.app.ContextImpl: java.io.File[] getObbDirs()>
<android.content.pm.PackageManager: java.util.List getInstalledModules(int)>
<android.widget.RemoteViews$RemoteViewsContextWrapper: java.lang.String getPackageName()>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo createFromParcel(android.os.Parcel)>
<android.telephony.ims.ImsReasonInfo: int getCode()>
<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getTextIdEntry()>
<android.app.VoiceInteractor$AbortVoiceRequest: java.lang.String getRequestTypeName()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getConversationsForPackage(java.lang.String,int)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getProcessName()>
<android.net.LinkAddress: java.net.InetAddress getAddress()>
<android.app.usage.NetworkStats$Bucket: int getTag()>
<android.hardware.location.ContextHubInfo: java.lang.String getName()>
<android.content.pm.LauncherApps$AppUsageLimit: int describeContents()>
<android.media.AudioAttributes: int getSystemUsage()>
<android.telephony.SubscriptionManager: int getAllSubscriptionInfoCount()>
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.String,java.lang.Throwable)>
<android.service.textclassifier.ITextClassifierService$Stub: android.service.textclassifier.ITextClassifierService getDefaultImpl()>
<android.telephony.NetworkRegistrationInfo: boolean isEmergencyEnabled()>
<android.window.IDisplayAreaOrganizer$Stub: java.lang.String getTransactionName(int)>
<android.location.ILocationManager$Stub$Proxy: java.util.List getAllProviders()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setSummary(java.lang.CharSequence)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoFpsRangesFor(android.util.Size)>
<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>
<android.location.GnssMeasurement: double getCn0DbHz()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
<android.media.ExifInterface: long[] getAttributeRange(java.lang.String)>
<android.os.BasicShellCommandHandler: java.io.InputStream getRawInputStream()>
<android.hardware.camera2.CaptureFailure: int getSequenceId()>
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getAllowedNotificationAssistantForUser(int)>
<android.security.keystore.IKeystoreOperationResultCallback$Default: android.os.IBinder asBinder()>
<android.location.ILocationListener$Stub: android.os.IBinder asBinder()>
<android.hardware.display.DeviceProductInfo: java.lang.Integer getModelYear()>
<android.app.AppOpsManager$HistoricalOp: long getAccessDuration(int,int,int)>
<com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms getDefaultImpl()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: boolean getSystemAudioMode()>
<android.app.IInstrumentationWatcher$Default: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: double getCarrierPhase()>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int calculateMarshalSize(java.lang.Object)>
<android.telephony.TelephonyHistogram: int getMinTime()>
<android.app.Notification$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)>
<android.hardware.radio.RadioManager$FmBandConfig: boolean getEa()>
<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<android.app.KeyguardManager: boolean isDeviceLocked()>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsEcbm getEcbmInterface()>
<android.app.ContextImpl: java.lang.String[] fileList()>
<com.android.internal.content.PackageMonitor: int isPackageDisappearing(java.lang.String)>
<android.service.notification.IConditionProvider$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)>
<android.telephony.CellIdentityGsm: int getChannelNumber()>
<android.os.BaseBundle: byte[] getByteArray(java.lang.String)>
<android.hardware.input.IInputManager$Default: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: int getIconRes()>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hideReplyIcon(boolean)>
<android.view.View: int getAccessibilityTraversalAfter()>
<android.security.IKeyChainService$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: int getCompatibleWidthLimitDp()>
<android.hardware.location.MemoryRegion: int getFreeCapacityBytes()>
<com.android.internal.telephony.ITelephony$Default: int[] supplyPinReportResultForSubscriber(int,java.lang.String)>
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap getServiceStats()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getBugreportWhitelistedPackages()>
<android.hardware.radio.IAnnouncementListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: boolean isImsRegistered(int)>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>
<android.app.admin.DevicePolicyManager: android.os.UserHandle getDeviceOwnerUser()>
<android.location.LocationManager$GetCurrentLocationTransport: java.lang.String getListenerId()>
<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig retainNonConfig()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.content.pm.PackageInfo getCurrentWebViewPackage()>
<android.media.tv.TvInputHardwareInfo: java.lang.String getAudioAddress()>
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.filterfw.core.SerializedFrame: float[] getFloats()>
<android.renderscript.Element: android.renderscript.Element getSubElement(int)>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>
<com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()>
<android.service.persistentdata.IPersistentDataBlockService$Default: long getMaximumDataBlockSize()>
<android.os.IThermalService$Stub$Proxy: android.os.CoolingDevice[] getCurrentCoolingDevices()>
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<android.telephony.data.ApnSetting: int getMtu()>
<android.service.vr.IVrStateCallbacks$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.Person: java.lang.CharSequence getName()>
<android.widget.AbsListView$InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<com.android.internal.telephony.ISub$Stub$Proxy: android.os.ParcelUuid createSubscriptionGroup(int[],java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isIccLockEnabled(int)>
<android.hardware.ISerialManager$Stub: android.hardware.ISerialManager getDefaultImpl()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService asInterface(android.os.IBinder)>
<android.renderscript.Long3: long get(int)>
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])>
<android.content.ISyncStatusObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.ActivityManager$MemoryInfo: int describeContents()>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeInfo[] listAllChanges()>
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(int)>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>
<android.window.IDisplayAreaOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IInstalld$Default: android.os.IBinder asBinder()>
<android.app.prediction.AppTarget: android.os.UserHandle getUser()>
<android.view.textclassifier.EntityConfidence: int describeContents()>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.hardware.soundtrigger.IRecognitionStatusCallback getDefaultImpl()>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
<android.app.timezone.RulesState: android.app.timezone.DistroRulesVersion getStagedDistroRulesVersion()>
<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionFailCause()>
<android.app.Vr2dDisplayProperties: int getAddedFlags()>
<android.content.pm.LauncherApps: java.util.List getAllPackageInstallerSessions()>
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>
<android.widget.FrameLayout: java.lang.CharSequence getAccessibilityClassName()>
<android.os.IIncidentCompanion$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IAudioService$Stub$Proxy: int getUiSoundsStreamType()>
<android.app.usage.UsageEvents: int describeContents()>
<android.os.UserManager: int getUserRestrictionSource(java.lang.String,android.os.UserHandle)>
<android.app.usage.ExternalStorageStats: long getVideoBytes()>
<android.widget.Editor$PinnedPopupWindow: boolean isShowing()>
<android.media.session.ISessionController$Default: android.app.PendingIntent getLaunchPendingIntent()>
<com.android.internal.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.radio.RadioManager$AmBandDescriptor: int hashCode()>
<android.hardware.camera2.params.OisSample: int hashCode()>
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>
<android.view.inputmethod.InputMethodSubtype: int getSubtypeId()>
<android.os.IVold$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()>
<android.os.storage.StorageVolume: java.io.File getPathFile()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<android.app.servertransaction.ActivityResultItem: int hashCode()>
<android.content.pm.PackageInstaller$SessionInfo: int getStagedSessionErrorCode()>
<android.view.InputDevice: int getKeyboardType()>
<android.app.AppOpsManager: java.lang.String getUidStateName(int)>
<android.app.IActivityTaskManager$Default: java.util.List getTasks(int)>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.hardware.biometrics.IBiometricServiceReceiverInternal asInterface(android.os.IBinder)>
<android.provider.DeviceConfig: java.util.List getPublicNamespaces()>
<android.animation.ValueAnimator: long getCurrentPlayTime()>
<com.android.internal.os.IDropBoxManagerService$Stub: com.android.internal.os.IDropBoxManagerService getDefaultImpl()>
<android.text.style.SpellCheckSpan: int getSpanTypeIdInternal()>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern$MarshalerBlackLevelPattern: int getNativeSize()>
<android.view.View: float getTranslationX()>
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()>
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()>
<android.net.wifi.nl80211.SingleScanSettings: int describeContents()>
<android.media.MediaDrm$CryptoSession: byte[] decrypt(byte[],byte[],byte[])>
<android.hardware.location.ContextHubInfo: java.lang.String getVendor()>
<android.app.Notification$Builder: int access$4000(android.app.Notification$Builder,android.app.Notification$StandardTemplateParams)>
<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()>
<android.telephony.RadioAccessSpecifier: int[] getBands()>
<android.view.WindowInsets$Type: int captionBar()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: int[] getSupportedTypes()>
<android.security.keystore.IKeystoreService$Default: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)>
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,int)>
<android.view.GestureExclusionTracker$GestureExclusionViewInfo: android.view.View getView()>
<com.android.internal.policy.PhoneWindow: int getNavigationBarDividerColor()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])>
<android.os.IThermalEventListener$Stub: android.os.IThermalEventListener getDefaultImpl()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: java.lang.String getTransactionName(int)>
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()>
<android.telephony.UiccSlotInfo$1: android.telephony.UiccSlotInfo createFromParcel(android.os.Parcel)>
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)>
<android.telephony.SignalStrength: int getTdScdmaDbm()>
<android.media.AudioRecord: int getChannelConfiguration()>
<android.content.pm.parsing.component.ParsedProcess: java.util.Set getDeniedPermissions()>
<android.app.admin.DevicePolicyManager: boolean isSeparateProfileChallengeAllowed(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality(int)>
<android.media.AudioPlaybackConfiguration: android.media.PlayerProxy getPlayerProxy()>
<android.permission.PermissionControllerManager: void getPermissionUsages(boolean,long,java.util.concurrent.Executor,android.permission.PermissionControllerManager$OnPermissionUsageResultCallback)>
<android.os.incremental.IIncrementalService$Default: android.os.IBinder asBinder()>
<com.android.internal.policy.IKeyguardDismissCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.health.HealthStats: android.os.health.TimerStat getTimer(int)>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)>
<com.android.internal.textservice.ISpellCheckerSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.SelectionEvent: android.view.textclassifier.TextClassificationSessionId getSessionId()>
<android.widget.Magnifier: int getWidth()>
<android.os.StatFs: long getBlockSizeLong()>
<android.app.Notification$MessagingStyle$Message: android.net.Uri getDataUri()>
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: long getItemId(int)>
<android.app.Notification$MessagingStyle: android.app.Person getUser()>
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackagesAsUser(int,int)>
<android.app.timezone.RulesManager: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.Callback)>
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getDataManagementIntent(java.lang.String)>
<android.os.IUserRestrictionsListener$Stub: android.os.IUserRestrictionsListener getDefaultImpl()>
<android.media.audiopolicy.AudioPolicy: int getStatus()>
<android.content.pm.parsing.component.ParsedPermission: java.lang.String getGroup()>
<android.util.jar.StrictJarManifestReader: int getEndOfMainSection()>
<android.os.WorkSource: int hashCode()>
<android.media.Metadata: boolean getBoolean(int)>
<android.widget.Magnifier: android.graphics.Bitmap getContent()>
<android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService asInterface(android.os.IBinder)>
<android.permission.PermissionManager: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)>
<android.app.Fragment: android.app.SharedElementCallback getEnterTransitionCallback()>
<android.os.incremental.IIncrementalService$Default: int makeDirectories(int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)>
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsVirtualPreload()>
<android.view.textclassifier.TextClassification: java.lang.String getText()>
<android.net.lowpan.ILowpanNetScanCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ITransientNotification$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ISub$Default: int setUiccApplicationsEnabled(boolean,int)>
<android.os.storage.IStorageManager$Default: long getCacheSizeBytes(java.lang.String,int)>
<android.media.session.IOnMediaKeyListener$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.LockPatternUtils: byte[] verifyTiedProfileChallenge(com.android.internal.widget.LockscreenCredential,long,int)>
<com.android.internal.app.IAppOpsService$Default: java.util.List getUidOps(int,int[])>
<android.telephony.CellIdentityLte: java.util.Set getAdditionalPlmns()>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>
<com.android.internal.policy.PhoneWindow: android.transition.Scene getContentScene()>
<android.media.ExifInterface: byte[] getAttributeBytes(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getMaxDurationMsLocked(long)>
<android.view.ViewGroup$1: android.view.MenuInflater getMenuInflater()>
<android.location.GnssRequest: int hashCode()>
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$AttributedHistoricalOps getAttributedOpsAt(int)>
<android.provider.DeviceConfig: android.provider.DeviceConfig$Properties getProperties(java.lang.String,java.lang.String[])>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.Editor: int access$6800(android.widget.Editor,int)>
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_2.CellInfo)>
<android.app.admin.DevicePolicyManager: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)>
<android.media.AudioRecord: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()>
<android.media.tv.TvStreamConfig: int getStreamId()>
<android.app.backup.IFullBackupRestoreObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.Rating: float getStarRating()>
<android.service.autofill.FillEventHistory$Event: java.util.Map getChangedFields()>
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getAppFolder()>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getWakelockStats()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForUser(java.lang.String,int,java.lang.String)>
<android.graphics.drawable.GradientDrawable: float getCornerRadius()>
<android.view.textclassifier.TextClassifier$EntityConfig: int describeContents()>
<com.android.server.SystemConfig: android.util.ArraySet getAppDataIsolationWhitelistedApps()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(android.net.NetworkTemplate,long,long,int,int,int)>
<android.media.AudioFocusRequest: android.os.Handler getOnAudioFocusChangeListenerHandler()>
<android.os.IThermalService$Default: android.os.IBinder asBinder()>
<android.net.IpConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>
<android.widget.OverScroller: int getStartX()>
<android.app.Notification$Action: android.app.RemoteInput[] getRemoteInputs()>
<android.view.contentcapture.ViewNode: int getTextColor()>
<android.hardware.face.IFaceService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ICellInfoCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.print.IPrintManager$Default: java.util.List getPrintServices(int,int)>
<android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isCapable(int,int,int)>
<android.os.TimestampedValue: long getReferenceTimeMillis()>
<android.content.pm.SharedLibraryInfo: java.lang.String getName()>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean,int)>
<android.telephony.SubscriptionManager: void <clinit>()>
<android.view.MotionEvent: int getClassification()>
<android.graphics.RenderNode: int getLeft()>
<android.view.inputmethod.InlineSuggestionsRequest: int describeContents()>
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: android.hardware.fingerprint.Fingerprint getFingerprint()>
<android.content.pm.IShortcutService$Stub$Proxy: int getIconMaxDimensions(java.lang.String,int)>
<android.print.PrinterInfo: int getStatus()>
<android.content.pm.DataLoaderParams: java.lang.String getArguments()>
<com.android.internal.telephony.ITelephonyRegistry$Default: android.os.IBinder asBinder()>
<android.os.IIncidentManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPinForSubscriber(int,java.lang.String)>
<android.os.Process: long getStartElapsedRealtime()>
<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] following(int)>
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.print.PrintAttributes$Margins: int hashCode()>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForDevice(int,java.lang.String,long,long)>
<android.media.VolumeShaper$Operation: int describeContents()>
<android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor: int describeContents()>
<android.security.keystore.ArrayUtils: byte[] subarray(byte[],int,int)>
<android.content.pm.LauncherApps$PinItemRequest: int getRequestType()>
<android.transition.ArcMotion: float getMinimumHorizontalAngle()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastNetworkLogRetrievalTime()>
<android.telecom.Logging.Session: java.lang.String getNextChildId()>
<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo findGlobalRoute(java.lang.String)>
<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandle()>
<android.content.ISyncStatusObserver$Default: android.os.IBinder asBinder()>
<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)>
<android.media.AudioTrack: int write(byte[],int,int)>
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence[] getAutofillOptions()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int exist(java.lang.String,int)>
<android.widget.Editor: android.view.ActionMode getTextActionMode()>
<android.widget.ScrollView: java.lang.CharSequence getAccessibilityClassName()>
<android.animation.StateListAnimator$StateListAnimatorConstantState: int getChangingConfigurations()>
<android.os.HwBinder: android.os.IHwBinder getService(java.lang.String,java.lang.String)>
<android.net.IpSecAlgorithm: int getTruncationLengthBits()>
<android.app.job.JobInfo: long getTriggerContentMaxDelay()>
<android.content.UndoOwner: java.lang.Object getData()>
<android.view.View: int getFadeHeight(boolean)>
<android.view.IAppTransitionAnimationSpecsFuture$Stub: android.os.IBinder asBinder()>
<android.security.keystore.AndroidKeyStorePublicKey: byte[] getEncoded()>
<android.media.tv.ITvInputClient$Stub: android.os.IBinder asBinder()>
<android.app.SystemServiceRegistry$96: android.view.contentcapture.ContentCaptureManager createService(android.app.ContextImpl)>
<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.app.Notification$Builder: java.lang.CharSequence getHeadsUpStatusBarText(boolean)>
<android.widget.CompoundButton: java.lang.CharSequence getAccessibilityClassName()>
<android.text.style.TypefaceSpan: int getSpanTypeId()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.hardware.camera2.ICameraOfflineSession$Default: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub: android.os.IBinder asBinder()>
<android.graphics.Rect: int hashCode()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getPhoneSignalStrengthTimer(int)>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>
<android.print.IPrintDocumentAdapterObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.GsmAlphabet: int charToGsmExtended(char)>
<android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCaches()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileCalendarPackagesForUser(int)>
<android.net.ConnectivityManager: void getLatestTetheringEntitlementResult(int,boolean,java.util.concurrent.Executor,android.net.ConnectivityManager$OnTetheringEntitlementResultListener)>
<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()>
<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub: android.os.IBinder asBinder()>
<android.app.INotificationManager$Stub$Proxy: int getAppsBypassingDndCount(int)>
<android.net.NetworkStats: int findIndex(java.lang.String,int,int,int,int,int,int)>
<android.net.INetworkStatsService$Default: long getTotalStats(int)>
<android.graphics.drawable.ColorStateListDrawable: android.graphics.ColorFilter getColorFilter()>
<android.hardware.display.IColorDisplayManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength(int)>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>
<android.view.KeyEvent: java.lang.String getCharacters()>
<android.hardware.usb.IUsbManager$Default: android.os.ParcelFileDescriptor getControlFd(long)>
<android.drm.DrmInfoRequest: int getInfoType()>
<android.media.MediaMetadataEditor: long getLong(int,long)>
<android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>
<android.hardware.display.IDisplayManager$Stub: android.os.IBinder asBinder()>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int getModelParameter(int,int)>
<android.content.ContextWrapper: android.os.IBinder getActivityToken()>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>
<android.content.pm.IShortcutService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.TextView: float getLineSpacingExtra()>
<android.net.lowpan.LowpanBeaconInfo: byte[] access$302(android.net.lowpan.LowpanBeaconInfo,byte[])>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.telephony.ims.aidl.IImsCallSessionListener asInterface(android.os.IBinder)>
<android.widget.SmartSelectSprite$RectangleList: int access$600(android.widget.SmartSelectSprite$RectangleList)>
<com.android.internal.telephony.ISub$Default: int addSubInfoRecord(java.lang.String,int)>
<android.os.INetworkActivityListener$Default: android.os.IBinder asBinder()>
<android.telephony.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getConnectionManager()>
<android.media.SyncParams: float getFrameRate()>
<android.os.storage.VolumeRecord: java.lang.String getNormalizedFsUuid()>
<android.os.storage.IStorageManager$Default: android.os.IBinder asBinder()>
<android.graphics.ImageDecoder$ResourceSource: int getDensity()>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Default: android.os.IBinder asBinder()>
<android.net.Uri: android.net.Uri normalizeScheme()>
<android.hardware.usb.UsbEndpoint: int getAddress()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.android.internal.os.BatteryStatsImpl: int getScreenDozeCount(int)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<android.companion.CompanionDeviceManager: java.util.List getAssociations()>
<android.net.EthernetManager: android.os.Handler access$100(android.net.EthernetManager)>
<android.content.pm.IPinItemRequest$Stub$Proxy: android.os.Bundle getExtras()>
<android.content.pm.InstallSourceInfo: java.lang.String getOriginatingPackageName()>
<android.widget.ExpandableListView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.internal.util.AsyncService: android.os.Handler getHandler()>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>
<android.app.admin.PasswordMetrics$ComplexityBucket$2: int getMinimumLength(boolean)>
<android.content.ContextWrapper: int getThemeResId()>
<android.telephony.CellSignalStrengthNr$1: android.telephony.CellSignalStrengthNr[] newArray(int)>
<android.os.storage.IStorageEventListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<android.view.inputmethod.InlineSuggestionsRequest: int getMaxSuggestionCount()>
<android.hardware.camera2.CameraManager: java.util.Set getConcurrentCameraIds()>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
<android.widget.PopupWindow: android.view.View getAnchor()>
<android.view.contentcapture.DataShareRequest: int describeContents()>
<android.telephony.ims.RcsUceAdapter: boolean isUceSettingEnabled()>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.compat.CompatibilityChangeInfo: boolean getLoggingOnly()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<android.view.View: int getAccessibilityViewId()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.IntentSender getShortcutConfigActivityIntent(java.lang.String,android.content.ComponentName,android.os.UserHandle)>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbPortStatus getPortStatus(android.hardware.usb.UsbPort)>
<android.media.tv.TvInputManager: java.util.List getBlockedRatings()>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>
<android.os.storage.StorageManager: android.os.storage.DiskInfo findDiskById(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<android.telephony.TelephonyManager: void updateServiceLocation()>
<android.content.ContentProvider$Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.internal.statusbar.IStatusBarService$Stub: java.lang.String getTransactionName(int)>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>
<android.hardware.display.IColorDisplayManager$Default: android.hardware.display.Time getNightDisplayCustomStartTime()>
<android.content.SyncRequest: android.accounts.Account getAccount()>
<android.content.res.GradientColor: android.content.res.ConstantState getConstantState()>
<android.content.pm.PackageInstaller$SessionInfo: boolean getRequestDowngrade()>
<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()>
<android.telephony.CallQuality: boolean isRtpInactivityDetected()>
<android.telecom.TelecomManager: boolean endCall()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getFolder()>
<android.content.pm.IPackageInstallerSession$Default: int[] getChildSessionIds()>
<android.content.pm.InstallSourceInfo: java.lang.String getInitiatingPackageName()>
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<android.view.InsetsAnimationControlImpl: android.graphics.Insets getShownStateInsets()>
<android.media.IPlaybackConfigDispatcher$Stub: android.os.IBinder asBinder()>
<android.widget.Magnifier: float getElevation()>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
<android.telephony.data.ApnSetting$Builder: android.telephony.data.ApnSetting build()>
<android.graphics.drawable.VectorDrawable$VGroup$7: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
<android.app.admin.DevicePolicyManager: long getLastBugReportRequestTime()>
<android.content.pm.PermissionInfo: int getProtectionFlags()>
<android.filterfw.core.FilterPort: java.lang.String getName()>
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationValidityDurationSeconds()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getSnoozedNotifications()>
<android.telephony.CellIdentityGsm: int getCid()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService getDefaultImpl()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)>
<android.telephony.CellIdentityWcdma$1: android.telephony.CellIdentityWcdma createFromParcel(android.os.Parcel)>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<android.net.lowpan.LowpanChannelInfo: java.lang.String getName()>
<android.text.style.SubscriptSpan: int getSpanTypeIdInternal()>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>
<android.app.admin.NetworkEvent: long getTimestamp()>
<android.hardware.usb.UsbDevice: java.lang.String getManufacturerName()>
<android.app.NotificationManager: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule)>
<android.text.style.BulletSpan: int getSpanTypeId()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()>
<android.database.CursorWindow: int getType(int,int)>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>
<android.view.IWindowSession$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: int getSimCount()>
<com.google.android.mms.pdu.CharacterSets: int getMibEnumValue(java.lang.String)>
<android.os.FileUtils$MemoryPipe: java.io.FileDescriptor getInternalFD()>
<android.telephony.data.ApnSetting$Builder: int access$2300(android.telephony.data.ApnSetting$Builder)>
<android.content.res.FontResourcesParser$FontFamilyFilesResourceEntry: android.content.res.FontResourcesParser$FontFileResourceEntry[] getEntries()>
<android.view.HandlerActionQueue: int size()>
<android.os.Debug: int getThreadExternalAllocSize()>
<android.telecom.PhoneAccount: java.lang.CharSequence getShortDescription()>
<android.database.sqlite.SQLiteDatabase$OpenParams: int getLookasideSlotCount()>
<com.android.net.IProxyService$Stub: com.android.net.IProxyService asInterface(android.os.IBinder)>
<android.app.ActivityTaskManager: int getMaxAppRecentsLimitStatic()>
<android.view.accessibility.IAccessibilityManager$Default: android.os.IBinder asBinder()>
<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>
<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ViewNode getViewNode()>
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>
<android.media.session.MediaSessionManager: android.media.session.ISession createSession(android.media.session.MediaSession$CallbackStub,java.lang.String,android.os.Bundle)>
<android.widget.FastScroller$3: java.lang.Integer get(android.view.View)>
<android.view.Window: int getColorMode()>
<android.os.storage.IStorageManager$Default: int changeEncryptionPassword(int,java.lang.String)>
<android.net.NetworkCapabilities: android.net.NetworkSpecifier getNetworkSpecifier()>
<android.media.MediaRouter$Static: android.view.Display[] getAllPresentationDisplays()>
<android.widget.RemoteViews$OverrideTextColorsAction: int getActionTag()>
<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int)>
<android.content.pm.permission.SplitPermissionInfoParcelable: int hashCode()>
<android.hardware.face.IFaceService$Default: long getAuthenticatorId(int)>
<android.graphics.text.LineBreaker$Result: int getStartLineHyphenEdit(int)>
<android.app.admin.DnsEvent: java.lang.String getHostname()>
<android.hardware.radio.V1_2.CellInfoCdma: int hashCode()>
<android.hardware.location.NanoAppInstanceInfo: int[] getNeededSensors()>
<android.content.ClipboardManager: java.lang.CharSequence getText()>
<android.widget.Editor$SuggestionHelper$SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)>
<android.filterfw.core.GLFrame: int[] getInts()>
<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>
<android.media.session.ISessionController$Default: android.os.Bundle getSessionInfo()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getTextSelectionStart()>
<com.android.internal.database.SortCursor: int access$002(com.android.internal.database.SortCursor,int)>
<android.widget.Editor$HandleView: int getCursorHorizontalPosition(android.text.Layout,int)>
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>
<android.accounts.IAccountManager$Default: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveUnknownTime(int)>
<android.widget.ArrayAdapter: int getCount()>
<android.media.MediaDrm: byte[] access$300(android.media.MediaDrm,byte[],byte[],byte[],byte[])>
<android.media.MicrophoneInfo: java.lang.String getDescription()>
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>
<com.android.internal.telephony.ISub$Default: int setOpportunistic(boolean,int,java.lang.String)>
<android.media.tv.ITvInputManagerCallback$Default: android.os.IBinder asBinder()>
<android.hardware.radio.IRadioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IRotationWatcher$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Rect: int centerY()>
<android.content.pm.parsing.component.ParsedActivity: int getColorMode()>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getStartPlatformVersion()>
<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.content.pm.IPackageDeleteObserver2$Stub: android.content.pm.IPackageDeleteObserver2 asInterface(android.os.IBinder)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.util.List getSystemActions()>
<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)>
<android.content.pm.IPackageManager$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()>
<android.util.EventLog$Event: int getProcessId()>
<android.os.IInstalld$Stub$Proxy: android.os.storage.CrateMetadata[] getAppCrates(java.lang.String,java.lang.String[],int)>
<android.app.timezone.IRulesManager$Stub$Proxy: int requestUninstall(byte[],android.app.timezone.ICallback)>
<android.telephony.SignalStrength: int getDbm()>
<android.telephony.UiccSlotInfo: int getCardStateInfo()>
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeRequired()>
<android.app.ActivityManager: java.util.Collection getSupportedLocales()>
<android.os.UserManager: int getUserBadgeColor(int)>
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>
<android.content.pm.PackageInstaller$SessionInfo: int[] getChildSessionIds()>
<android.text.Layout: int getOffsetForHorizontal(int,float,boolean)>
<android.net.Uri: java.lang.String access$300()>
<android.widget.TextView: int getCompoundPaddingLeft()>
<android.telephony.TelephonyManager: java.util.List getTelephonyHistograms()>
<android.widget.RemoteViews$AsyncApplyTask: android.widget.RemoteViews$ViewTree doInBackground(java.lang.Void[])>
<android.service.notification.NotificationStats: int getDismissalSentiment()>
<android.widget.Editor$InsertionHandleView: int getCurrentCursorOffset()>
<android.app.FragmentController: java.util.List retainNonConfig()>
<com.android.internal.telephony.ITelephony$Default: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)>
<android.location.GnssClock: double getTimeUncertaintyNanos()>
<android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
<android.view.View: float getLeftFadingEdgeStrength()>
<android.media.MediaRouter$RouteInfo: int getStatusCode()>
<android.app.NotificationChannel: int getLightColor()>
<android.telephony.PhoneCapability$1: android.telephony.PhoneCapability[] newArray(int)>
<android.view.IRemoteAnimationFinishedCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioPresentation: int getMasteringIndication()>
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeRequired()>
<android.content.pm.dex.ArtManager: boolean isRuntimeProfilingEnabled(int)>
<android.hardware.biometrics.IAuthService$Stub$Proxy: long[] getAuthenticatorIds()>
<android.net.NetworkCapabilities: java.lang.String getRequestorPackageName()>
<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>
<android.hardware.face.IFaceServiceReceiver$Stub: java.lang.String getTransactionName(int)>
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: int getUserId()>
<android.widget.AbsListView: long[] getCheckedItemIds()>
<android.hardware.ISerialManager$Stub: android.hardware.ISerialManager asInterface(android.os.IBinder)>
<com.android.server.SystemConfig: int[] getGlobalGids()>
<com.android.internal.view.menu.MenuBuilder: int size()>
<android.location.ICountryListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.location.ContextHubInfo: long getChrePlatformId()>
<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>
<android.content.pm.IDataLoaderStatusListener$Stub: android.os.IBinder asBinder()>
<android.os.ZygoteProcess: int getZygotePid(java.lang.String)>
<android.view.MotionEvent: int getPointerIdBits()>
<android.view.contentcapture.ViewNode: int getTop()>
<android.service.vr.IVrStateCallbacks$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.autofill.AutofillManager: android.content.ComponentName getAutofillServiceComponentName()>
<android.content.res.CompatResources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.ParcelFileDescriptor getStatisticsStream()>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.view.contentcapture.ContentCaptureEvent: java.lang.CharSequence getText()>
<android.view.View: int getWindowSystemUiVisibility()>
<android.telephony.CellIdentityGsm: int getMnc()>
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String)>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiMulticastTime(long,int)>
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getUri()>
<android.media.IRingtonePlayer$Stub$Proxy: android.os.ParcelFileDescriptor openRingtone(android.net.Uri)>
<android.net.lowpan.LowpanCredential: byte[] access$002(android.net.lowpan.LowpanCredential,byte[])>
<android.telecom.Logging._$$Lambda$L5F_SL2jOCUETYvgdB36aGwY50E: int get()>
<android.view.IRemoteAnimationRunner$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isNightDisplayActivated()>
<android.net.NetworkUtils: int getImplicitNetmask(java.net.Inet4Address)>
<android.database.sqlite.SQLiteCompatibilityWalFlags: java.lang.String getWALSyncMode()>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan build()>
<android.telephony.TelephonyManager: int getCarrierPrivilegeStatus(int)>
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitCodePaths()>
<android.content.IIntentReceiver$Stub: java.lang.String getTransactionName(int)>
<android.os.BasicShellCommandHandler: java.lang.String getNextArg()>
<android.widget.FastScroller: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<android.content.pm.ShortcutInfo: long getLastChangedTimestamp()>
<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration getInputConfiguration()>
<android.content.res.Configuration: int hashCode()>
<android.location.GpsNavigationMessageEvent: android.location.GpsNavigationMessage getNavigationMessage()>
<android.telephony.ImsiEncryptionInfo: int describeContents()>
<android.content.pm.PackageParser$PermissionGroup: int describeContents()>
<android.view.contentcapture.ContentCaptureEvent: java.util.List getIds()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkPackage(int,java.lang.String)>
<android.media.AudioManager: android.media.MicrophoneInfo microphoneInfoFromAudioDeviceInfo(android.media.AudioDeviceInfo)>
<android.app.usage.StorageStatsManager: long getCacheQuotaBytes(java.lang.String,int)>
<android.app.usage.IUsageStatsManager$Stub$Proxy: int getUsageSource()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCOLP()>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.view.DisplayCutout: int getSafeInsetRight()>
<android.hardware.location.IContextHubCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GnssMeasurement: int getMultipathIndicator()>
<android.media.AudioTrack: int playerSetAuxEffectSendLevel(boolean,float)>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.UiccCardInfo: android.telephony.UiccCardInfo getUnprivileged()>
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>
<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>
<android.app.WallpaperManager: int getWallpaperId(int)>
<android.media.IMediaRouterClient$Stub: android.media.IMediaRouterClient getDefaultImpl()>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>
<android.content.pm.ResolveInfo: int describeContents()>
<android.app.FragmentManagerImpl: android.app.Fragment getPrimaryNavigationFragment()>
<android.media.Image: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.telephony.SubscriptionManager: boolean lambda$getActiveSubscriptionInfoList$1$SubscriptionManager(android.telephony.SubscriptionInfo)>
<android.util.proto.EncodedBuffer: byte[] getBytes(int)>
<android.telephony.VoiceSpecificRegistrationInfo$1: void <init>()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder createRecurringDaily(java.time.ZonedDateTime)>
<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>
<com.android.internal.telephony.ITelephony$Default: boolean isApnMetered(int,int)>
<android.view.contentcapture.ContentCaptureEvent: android.view.autofill.AutofillId getId()>
<android.hardware.camera2.impl.CameraMetadataNative$16: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<com.android.internal.os.PowerProfile: double getAveragePowerForCpuCore(int,int)>
<android.security.AttestedKeyPair: java.security.KeyPair getKeyPair()>
<android.media.tv.tunerresourcemanager.TunerLnbRequest: int getClientId()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getConversations(boolean)>
<android.hardware.usb.UsbManager: long usbFunctionsFromString(java.lang.String)>
<android.os.LocaleList: int getFirstMatchIndex(java.lang.String[])>
<android.util.apk.WrappedX509Certificate: boolean[] getKeyUsage()>
<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>
<android.telecom.Logging.Session$Info: android.telecom.Logging.Session$Info getInfo(android.telecom.Logging.Session)>
<android.telephony.ims.aidl.IImsMmTelListener$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long,java.lang.String)>
<android.app.backup.ISelectBackupTransportCallback$Stub: android.app.backup.ISelectBackupTransportCallback asInterface(android.os.IBinder)>
<android.os.IVibratorService$Stub: java.lang.String getTransactionName(int)>
<android.app.servertransaction.TransactionExecutorHelper: java.lang.String getShortActivityName(android.os.IBinder,android.app.ClientTransactionHandler)>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: java.lang.String getTransactionName(int)>
<android.window.IWindowContainerTransactionCallback$Stub: android.window.IWindowContainerTransactionCallback getDefaultImpl()>
<android.window.IDisplayAreaOrganizer$Default: android.os.IBinder asBinder()>
<android.companion.ICompanionDeviceManager$Stub: android.companion.ICompanionDeviceManager asInterface(android.os.IBinder)>
<android.view.WindowInsets$Type: int displayCutout()>
<android.app.INotificationManager$Stub$Proxy: int getDeletedChannelCount(java.lang.String,int)>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>
<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()>
<android.location.GpsStatus: int getTimeToFirstFix()>
<android.text.PrecomputedText: android.text.MeasuredParagraph getMeasuredParagraph(int)>
<android.view.contentcapture.IContentCaptureManager$Stub: android.view.contentcapture.IContentCaptureManager getDefaultImpl()>
<android.print.PrinterDiscoverySession: java.util.List getPrinters()>
<android.view.Display: int getPixelFormat()>
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char,boolean)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)>
<android.content.pm.LauncherActivityInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle getAdditionalInfo()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int shouldProcessCall(java.lang.String[])>
<android.app.Notification$Style: java.lang.CharSequence getHeadsUpStatusBarText()>
<com.android.internal.telephony.ITelephony$Default: android.os.IBinder asBinder()>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.os.IHwBinder asBinder()>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>
<android.os.Environment: java.io.File getExpandDirectory()>
<android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener getDefaultImpl()>
<android.media.AudioPortConfig: int format()>
<android.hardware.location.NanoAppBinary: long getNanoAppId()>
<android.database.CursorWrapper: android.os.Bundle getExtras()>
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] access$400(android.security.keystore.recovery.KeyChainProtectionParams)>
<android.app.trust.ITrustListener$Stub: android.app.trust.ITrustListener asInterface(android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<android.os.incremental.IStorageHealthListener$Stub: android.os.IBinder asBinder()>
<android.app.trust.ITrustManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.Environment: java.io.File getDataPreloadsDirectory()>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>
<android.app.IWallpaperManager$Default: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<com.android.internal.graphics.palette.Palette$Builder$1: com.android.internal.graphics.palette.Palette doInBackground(android.graphics.Bitmap[])>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>
<android.telephony.ims.ImsCallForwardInfo: int getStatus()>
<android.telephony.ims.aidl.IImsRcsFeature$Default: int getFeatureState()>
<android.telephony.ims.aidl.IImsRegistration$Stub: android.telephony.ims.aidl.IImsRegistration asInterface(android.os.IBinder)>
<com.android.internal.telephony.ISms$Stub$Proxy: android.os.Bundle getCarrierConfigValuesForSubscriber(int)>
<android.security.keystore.ICredstoreTokenCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.ClipDescription: java.lang.String getMimeType(int)>
<android.view.IDisplayWindowInsetsController$Stub: android.view.IDisplayWindowInsetsController asInterface(android.os.IBinder)>
<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>
<android.hardware.hdmi.HdmiTimerRecordSources$ExternalSourceDecorator: int extraParamToByteArray(byte[],int)>
<com.android.internal.graphics.palette.Target: float getTargetSaturation()>
<android.os.connectivity.WifiBatteryStats: long getTxTimeMillis()>
<android.view.contentcapture.ViewNode: java.lang.CharSequence getContentDescription()>
<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>
<android.app.IActivityTaskManager$Default: android.os.Bundle getAssistContextExtras(int)>
<android.os.UserManager: int getUserHandle(int)>
<android.net.lowpan.LowpanIdentity: byte[] getXpanid()>
<android.graphics.HardwareRenderer: int access$500(long)>
<android.permission.PermissionManager: int checkPermission(java.lang.String,int,int)>
<android.telephony.ims.ImsRcsManager$AvailabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()>
<android.net.NetworkQuotaInfo: long getEstimatedBytes()>
<android.content.pm.IDexModuleRegisterCallback$Default: android.os.IBinder asBinder()>
<android.util.SparseSetArray: android.util.ArraySet get(int)>
<android.os.incremental.IIncrementalServiceConnector$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.ICameraDeviceUser$Default: int createInputStream(int,int,int)>
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo: int hashCode()>
<android.media.AudioManager: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])>
<android.app.admin.StartInstallingUpdateCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.style.LineBackgroundSpan$Standard: int getSpanTypeId()>
<android.view.autofill.AutofillPopupWindow$2: android.view.View getRootView()>
<android.os.Handler: java.lang.String getMessageName(android.os.Message)>
<android.telephony.ImsiEncryptionInfo$1: android.telephony.ImsiEncryptionInfo createFromParcel(android.os.Parcel)>
<android.hardware.cas.V1_2.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.window.WindowContainerToken: int describeContents()>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>
<android.view.View: boolean getFilterTouchesWhenObscured()>
<android.security.KeyStore: byte[] get(java.lang.String,boolean)>
<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse createFromParcel(android.os.Parcel)>
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform$MarshalerColorSpaceTransform: int getNativeSize()>
<android.app.DirectAction: java.lang.String getId()>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.os.storage.DiskInfo: java.lang.String getShortDescription()>
<android.hardware.camera2.params.ColorSpaceTransform: int hashCode()>
<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>
<android.telecom.ParcelableCallAnalytics$EventTiming: int getName()>
<android.widget.Editor$SelectionHandleView: int getCurrentCursorOffset()>
<android.os.RemoteCallbackList: int beginBroadcast()>
<android.media.SyncParams: int getAudioAdjustMode()>
<android.app.ContextImpl: android.os.UserHandle getUser()>
<android.hardware.face.IFaceService$Default: android.os.IBinder asBinder()>
<com.android.internal.policy.DecorContext: android.content.res.AssetManager getAssets()>
<android.content.pm.IPackageStatsObserver$Stub: android.content.pm.IPackageStatsObserver asInterface(android.os.IBinder)>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.telephony.ims.aidl.IRcsFeatureListener asInterface(android.os.IBinder)>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<android.os.BatteryStats$1: int compare(android.os.BatteryStats$TimerEntry,android.os.BatteryStats$TimerEntry)>
<android.net.TrafficStats: long getMobileTxBytes()>
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>
<android.telephony.SignalStrength: int hashCode()>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: java.lang.String getTransactionName(int)>
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: byte[] getByteArray()>
<com.android.internal.util.function.pooled.OmniFunction: java.lang.Object getOrThrow()>
<android.graphics.drawable.InsetDrawable: int getOpacity()>
<android.security.net.config.XmlConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()>
<android.hardware.fingerprint.FingerprintManager$AuthenticationResult: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>
<android.location.GnssAntennaInfo: int describeContents()>
<android.graphics.BlendModeColorFilter: int hashCode()>
<android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.Layout$Ellipsizer: int length()>
<android.print.PrintJobId: int describeContents()>
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)>
<android.telephony.ServiceState: boolean getIsManualSelection()>
<android.content.pm.IPackageInstaller$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.ToolbarActionBar: android.view.View getCustomView()>
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()>
<android.app.IActivityTaskManager$Stub$Proxy: int getLastResumedActivityUserId()>
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)>
<com.google.android.mms.pdu.PduPart: byte[] getFilename()>
<android.view.textclassifier.TextLinks$Request: android.os.LocaleList getDefaultLocales()>
<android.view.autofill.AutofillPopupWindow: android.view.WindowManager$LayoutParams getDecorViewLayoutParams()>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
<com.android.internal.telecom.ITelecomService$Default: java.lang.String getSystemDialerPackage()>
<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
<android.app.NotificationChannel: java.lang.CharSequence getName()>
<android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession()>
<com.android.internal.telephony.ITelephony$Default: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)>
<android.os.storage.IStorageManager$Default: long lastMaintenance()>
<android.os.IUserManager$Default: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getNumCrashes(int)>
<android.widget.ListView: int findMotionRow(int)>
<android.provider.Settings$Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)>
<com.android.ims.internal.IImsMultiEndpoint$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IVoldListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getContentDescription()>
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int nextSpanTransition(int,int,java.lang.Class)>
<android.media.IVolumeController$Stub: android.media.IVolumeController asInterface(android.os.IBinder)>
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getSerial()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: android.os.IBinder asBinder()>
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()>
<android.app.prediction.AppTarget: int getRank()>
<android.accessibilityservice.AccessibilityService$MagnificationController: float getCenterY()>
<android.widget.RemoteViews$RemoteResponse: android.util.Pair getLaunchOptions(android.view.View)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.view.accessibility.IAccessibilityInteractionConnection$Default: android.os.IBinder asBinder()>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.os.UserManager: boolean isProfile()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getUsesStaticLibraries()>
<android.graphics.ImageDecoder: boolean getRequireUnpremultiplied()>
<android.view.Display$Mode: int getPhysicalWidth()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onAddRoleHolder$1(java.lang.String,java.lang.String,int,android.app.role.IRoleController)>
<android.net.lowpan.ILowpanInterface$Default: android.os.IBinder asBinder()>
<android.widget._$$Lambda$GgAIoNUUH8pNRbtcqGeR1oLuEXw: java.lang.Object get()>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.view.accessibility.IAccessibilityEmbeddedConnection asInterface(android.os.IBinder)>
<android.location.ILocationManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.Announcement: int getType()>
<android.media.session.ISessionController$Stub$Proxy: android.media.MediaMetadata getMetadata()>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiSwitchClient getSwitchClient()>
<android.text.method.CharacterPickerDialog$OptionsAdapter: java.lang.Object getItem(int)>
<android.app.Activity: int getMaxNumPictureInPictureActions()>
<android.location.GnssReflectingPlane: double getAltitudeMeters()>
<android.graphics.Bitmap: android.graphics.ColorSpace getColorSpace()>
<android.telephony.ims.RcsContactUceCapability: java.util.List getCapableExtensionTags()>
<android.app.WallpaperColors: android.graphics.Color getSecondaryColor()>
<android.permission.PermissionControllerManager: void getRuntimePermissionBackup(android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationListCallback asInterface(android.os.IBinder)>
<android.content.pm.IPackageManager$Default: int getUidForSharedUser(java.lang.String)>
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>
<android.os.storage.DiskInfo: int describeContents()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<android.hardware.biometrics.IAuthService$Default: android.os.IBinder asBinder()>
<android.telephony.data.ApnSetting: int getId()>
<android.app.AppOpsManager$HistoricalOps: long getDurationMillis()>
<android.hardware.soundtrigger.SoundTriggerModule: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int,int)>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.om.IOverlayManager$Default: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconIndex(java.lang.String,java.lang.String)>
<android.telephony.CellIdentityCdma: int getNetworkId()>
<android.os.IUserManager$Stub$Proxy: long getUserStartRealtime()>
<android.webkit.IWebViewUpdateService$Default: java.lang.String getCurrentWebViewPackageName()>
<android.content.res.TypedArray: int getInt(int,int)>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.app.ActivityOptions: android.window.WindowContainerToken getLaunchTaskDisplayArea()>
<android.hardware.display.IDisplayManager$Default: android.view.DisplayInfo getDisplayInfo(int)>
<com.android.internal.os.Zygote: java.io.FileDescriptor getUsapPoolEventFD()>
<android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager getDefaultImpl()>
<android.hardware.display.DisplayManagerGlobal: java.util.List getAmbientBrightnessStats()>
<android.location.GpsNavigationMessage: int describeContents()>
<android.view.View: android.view.View$ListenerInfo getListenerInfo()>
<android.os.IUserManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.Loader: int getId()>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>
<android.view.IDisplayWindowRotationController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keystore.recovery.RecoveryCertPath: int describeContents()>
<android.view.IDisplayWindowListener$Default: android.os.IBinder asBinder()>
<android.hardware.biometrics.IBiometricServiceLockoutResetCallback$Stub: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNodeBuilder: int getTextSelectionStart()>
<android.security.keystore.IKeystoreResponseCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementReenterTransition()>
<android.text.StaticLayout: int getLineForVertical(int)>
<com.google.android.mms.pdu.DeliveryInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: int getTextSizeUnit()>
<android.telecom.Logging.EventManager: long lambda$dumpEventsTimeline$0(android.util.Pair)>
<android.os.UserHandle: int getUid(int,int)>
<android.media.AudioTrack: android.media.PlaybackParams getPlaybackParams()>
<android.security.net.config.ResourceCertificateSource: java.util.Set getCertificates()>
<android.app.DisabledWallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.hardware.camera2.params.LensShadingMap: int getGainFactorCount()>
<android.widget.TextView: int getLastBaselineToBottomHeight()>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>
<android.view.KeyboardShortcutGroup: java.util.List getItems()>
<android.text.method.CharacterPickerDialog$OptionsAdapter: long getItemId(int)>
<android.media.RingtoneManager: android.database.Cursor getCursor()>
<android.app.trust.IStrongAuthTracker$Stub: java.lang.String getTransactionName(int)>
<android.content.UndoManager: int getUpdateNestingLevel()>
<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: long getAllowedNetworkTypes(int)>
<android.location.Geofence: int describeContents()>
<android.telephony.NetworkRegistrationInfo: android.telephony.VoiceSpecificRegistrationInfo getVoiceSpecificInfo()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.DisplayAdjustments: int hashCode()>
<android.telephony.CellSignalStrengthNr$1: void <init>()>
<android.os.SharedMemory: android.os.ParcelFileDescriptor getFdDup()>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>
<android.util.apk.WrappedX509Certificate: int getBasicConstraints()>
<android.animation.StateListAnimator: android.animation.Animator getRunningAnimator()>
<android.view.IWindowId$Stub$Proxy: boolean isFocused()>
<com.android.internal.app.IAppOpsActiveCallback$Default: android.os.IBinder asBinder()>
<android.service.gatekeeper.IGateKeeperService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: long getSecureUserId(int)>
<android.content.pm.parsing.ParsingPackageImpl: float getMaxAspectRatio()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getRequiredAccountType()>
<android.app.blob.IBlobStoreManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
<com.android.net.IProxyService$Stub: com.android.net.IProxyService getDefaultImpl()>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()>
<android.telephony.data.ApnSetting: int getProtocolIntFromString(java.lang.String)>
<android.app.IActivityTaskManager$Stub$Proxy: int getDisplayId(android.os.IBinder)>
<android.permission.IPermissionManager$Stub: android.permission.IPermissionManager asInterface(android.os.IBinder)>
<com.android.internal.graphics.palette.Palette$Swatch: int getTitleTextColor()>
<android.net.NetworkStats$Entry: int hashCode()>
<android.os.BaseBundle: java.lang.String getPairValue()>
<android.hardware.ISensorPrivacyListener$Default: android.os.IBinder asBinder()>
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: android.hardware.biometrics.CryptoObject getCryptoObject()>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getMatchType()>
<android.os.WorkSource$WorkChain: java.lang.String[] getTags()>
<android.content.res.ResourcesImpl: android.content.res.Configuration getConfiguration()>
<android.media.AudioManager: boolean isSilentMode()>
<android.net.NetworkScorerAppData: android.content.ComponentName getEnableUseOpenWifiActivity()>
<android.app.role.RoleManager: boolean isRoleHeld(java.lang.String)>
<android.net.ISocketKeepaliveCallback$Default: android.os.IBinder asBinder()>
<android.widget.AbsListView: int getRightPaddingOffset()>
<android.net.ITestNetworkManager$Default: android.os.IBinder asBinder()>
<android.hardware.ICameraService$Stub$Proxy: android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds()>
<android.view._$$Lambda$Y3lG3v_J32_xL0IjMGgNorZjESw: java.lang.Object get()>
<com.android.internal.view.menu.ExpandedMenuView: int getWindowAnimations()>
<android.view.contentcapture.ViewNode: int getMaxTextLength()>
<com.android.internal.infra.IAndroidFuture$Default: android.os.IBinder asBinder()>
<android.hardware.cas.V1_0.IDescramblerBase$Proxy: int hashCode()>
<android.content.integrity.AppIntegrityManager: java.util.List getWhitelistedRuleProviders()>
<android.provider.Settings: java.lang.String getPackageNameForUid(android.content.Context,int)>
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.Bitmap: int getHeight()>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>
<android.os.ISystemUpdateManager$Stub$Proxy: android.os.Bundle retrieveSystemUpdateInfo()>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>
<android.animation.AnimationHandler: long getFrameDelay()>
<android.animation.Keyframe$IntKeyframe: android.animation.Keyframe$IntKeyframe clone()>
<android.media.tv.TvInputHardwareInfo: int getDeviceId()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.view.contentcapture.ViewNode getNode()>
<android.os.UserManager: java.util.List getProfiles(int)>
<android.os.ISystemConfig$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreOperationResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.ISensorPrivacyManager$Stub: java.lang.String getTransactionName(int)>
<android.view.Window: java.util.List getSystemGestureExclusionRects()>
<android.app.Activity: int getVolumeControlStream()>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams forceDefaultColor()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.net.IEthernetManager$Default: android.os.IBinder asBinder()>
<android.hardware.usb.UsbConfiguration: int getAttributes()>
<android.app.FragmentHostCallback: android.os.Handler getHandler()>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>
<android.widget.ProgressBar: int getMinHeight()>
<android.telephony.CellIdentityLte: int getTac()>
<android.app.Notification$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()>
<android.widget.PopupWindow: boolean getOverlapAnchor()>
<android.os.WorkSource$WorkChain: java.lang.String getAttributionTag()>
<android.app.ContextImpl: java.io.File getPreloadsFileCache()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()>
<android.app.ActivityManager$ProcessErrorStateInfo: int describeContents()>
<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)>
<android.view.MotionEvent: float getPressure()>
<android.service.notification.ZenPolicy: int getPriorityConversationSenders()>
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()>
<com.android.internal.os.BatteryStatsImpl$Uid$2: com.android.internal.os.BatteryStatsImpl$DualTimer instantiateObject()>
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier createTextClassificationSession(android.view.textclassifier.TextClassificationContext)>
<android.view.IDisplayFoldListener$Stub: android.os.IBinder asBinder()>
<com.android.server.SystemConfig: android.util.ArrayMap getAllowedAssociations()>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>
<com.google.android.mms.pdu.PduBody: int getPartsNum()>
<android.security.KeyStore: int attestKey(java.lang.String,android.security.keymaster.KeymasterArguments,android.security.keymaster.KeymasterCertificateChain)>
<android.app.usage.IStorageStatsManager$Default: long getCacheQuotaBytes(java.lang.String,int,java.lang.String)>
<android.telephony.euicc.EuiccManager: void getDownloadableSubscriptionMetadata(android.telephony.euicc.DownloadableSubscription,android.app.PendingIntent)>
<android.content.pm.parsing.component.ParsedComponent: android.os.Bundle getMetaData()>
<android.content.res.AssetManager: java.util.List getLoaders()>
<com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>
<android.location.IGnssNavigationMessageListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.Choreographer$1: android.view.Choreographer initialValue()>
<android.print.IPrintDocumentAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: com.android.internal.telephony.euicc.IResetMemoryCallback asInterface(android.os.IBinder)>
<android.media.midi.IMidiDeviceServer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IRequestFinishCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>
<android.service.vr.IVrManager$Stub: android.service.vr.IVrManager getDefaultImpl()>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String[] getGrantedRuntimePermissions()>
<android.graphics.drawable.RippleDrawable$RippleState: int getChangingConfigurations()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>
<android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
<android.hardware.fingerprint.FingerprintManager: java.util.List getEnrolledFingerprints(int)>
<android.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.content.pm.dex.ISnapshotRuntimeProfileCallback asInterface(android.os.IBinder)>
<android.telephony.SubscriptionManager: void invalidateDefaultSubIdCaches()>
<com.android.internal.view.menu.MenuBuilder: int findItemIndex(int)>
<android.text.MeasuredParagraph: float getWidth(int,int)>
<com.google.android.mms.util.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)>
<android.net.netstats.provider.INetworkStatsProvider$Stub: java.lang.String getTransactionName(int)>
<android.telephony.UiccCardInfo: java.lang.String getEid()>
<android.util.MapCollections$EntrySet: int size()>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>
<android.os.BaseBundle: java.lang.Object deepCopyValue(java.lang.Object)>
<android.net.TestNetworkManager: android.net.TestNetworkInterface createTapInterface()>
<android.net.IpSecConfig: int getMarkValue()>
<android.net.WebAddress: java.lang.String getScheme()>
<android.telecom.PhoneAccount: int hashCode()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)>
<android.media.IMediaHTTPService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isManualNetworkSelectionAllowed(int)>
<android.animation.KeyframeSet: java.util.List getKeyframes()>
<android.content.pm.LauncherApps: android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)>
<android.app.ContextImpl: android.content.res.Resources getResources()>
<android.app.Notification$CarExtender$UnreadConversation: android.app.Notification$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>
<android.util.LauncherIcons$ShadowDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.app.backup.IRestoreObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.fingerprint.FingerprintManager: android.os.Handler access$400(android.hardware.fingerprint.FingerprintManager)>
<android.security.net.config.SystemCertificateSource: java.util.Set getCertificates()>
<android.telecom.Logging.Session: android.telecom.Logging.Session$Info getExternalInfo(java.lang.String)>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<android.media.tv.ITvInputManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.assist.AssistContent: android.content.Intent getIntent()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
<android.app.SystemServiceRegistry$81: android.service.oemlock.OemLockManager createService()>
<android.hardware.cas.V1_0.ICasListener$Stub: java.util.ArrayList interfaceChain()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getFeatureGroups()>
<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties getLinkProperties()>
<android.widget.TextView: android.view.textservice.TextServicesManager getTextServicesManagerForUser()>
<android.media.IAudioService$Default: java.util.List getAudioVolumeGroups()>
<android.os.INetworkManagementService$Default: boolean getIpForwardingEnabled()>
<android.graphics.drawable.Drawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int createInputStream(int,int,int)>
<android.media.soundtrigger.SoundTriggerManager: boolean isRecognitionActive(java.util.UUID)>
<android.os.IUserManager$Stub$Proxy: int getUserBadgeNoBackgroundResId(int)>
<android.app.IActivityManager$Stub$Proxy: java.util.List getRunningAppProcesses()>
<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)>
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getTasks(int)>
<android.telephony.SubscriptionPlan: long getDataUsageTime()>
<android.net.Uri$Part: java.lang.String getEncoded()>
<android.telephony.TelephonyManager: boolean isHearingAidCompatibilitySupported()>
<com.android.internal.net.VpnProfile: int hashCode()>
<android.media.AudioManager: java.util.List getAudioProductStrategies()>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.media.session.MediaController: java.lang.String getPackageName()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation createFromParcel(android.os.Parcel)>
<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPart(int)>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance(java.util.Locale)>
<android.os.connectivity.WifiBatteryStats: long getEnergyConsumedMaMillis()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordQuality(android.content.ComponentName,int,boolean)>
<android.media.tv.ITvInputManagerCallback$Stub: android.media.tv.ITvInputManagerCallback asInterface(android.os.IBinder)>
<com.android.ims.internal.IImsUt$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.connectivity.GpsBatteryStats: int describeContents()>
<android.print.IWriteResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.component.ParsedActivity: int getUiOptions()>
<android.graphics.Bitmap: int getGenerationId()>
<android.net.IEthernetManager$Stub: java.lang.String getTransactionName(int)>
<android.content.LocusId: int describeContents()>
<android.view.contentcapture.IContentCaptureDirectManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()>
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeDeepDoze(int)>
<android.telephony.ims.ImsSsInfo: int getStatus()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>
<android.telephony.ModemActivityInfo: int[] getTransmitTimeMillis()>
<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>
<android.content.pm.IPackageManager$Default: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<android.renderscript.Double4: double get(int)>
<android.content.IIntentSender$Stub: android.content.IIntentSender getDefaultImpl()>
<android.util.EventLog$Event: int hashCode()>
<android.media.MediaHTTPConnection: int readAt(long,int)>
<android.hardware.camera2.params.Capability: android.util.Size getMaxStreamingSize()>
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>
<android.media.WebVttRenderingWidget$CueLayout: android.media.TextTrackCue getCue()>
<android.net.IConnectivityDiagnosticsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.location.ContextHubInfo: int getMaxPacketLengthBytes()>
<android.util.proto.EncodedBuffer: int getRawFixed32At(int)>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallBarringForServiceClass(int,int)>
<android.filterfw.core.Scheduler: boolean finished()>
<android.app.Activity: int getRequestedOrientation()>
<android.view.accessibility.CaptioningManager$CaptionStyle: android.view.accessibility.CaptioningManager$CaptionStyle getCustomStyle(android.content.ContentResolver)>
<android.os.IUserManager$Default: java.util.List getProfiles(int,boolean)>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsUt$Default: int updateCOLP(boolean)>
<android.media.AudioDeviceInfo: int getType()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ISearchManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.LinkProperties: java.util.List getDnsServers()>
<android.os.UserManager: boolean isLinkedUser()>
<android.app.Notification$MessagingStyle: java.util.List getMessages()>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner,int)>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSave()>
<android.graphics.text.LineBreaker: int access$700(long,int)>
<android.app.backup.IBackupManager$Default: android.content.Intent getConfigurationIntent(java.lang.String)>
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)>
<android.hardware.SensorManager: int getSensors()>
<android.net.StaticIpConfiguration: java.lang.String getDomains()>
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)>
<android.net.EthernetManager: android.net.IpConfiguration getConfiguration(java.lang.String)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getCurrentTtyMode(java.lang.String,java.lang.String)>
<android.view.autofill.IAutoFillManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.gles_jni.EGLSurfaceImpl: int hashCode()>
<android.content.pm.PackageInstaller$SessionInfo: boolean getDontKillApp()>
<android.animation.PathKeyframes$1: float getFloatValue(float)>
<android.media.midi.IMidiDeviceServer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaDrm$ListenerArgs: int access$1400(android.media.MediaDrm$ListenerArgs)>
<android.graphics.Paint: float getShadowLayerDy()>
<android.widget.TextView$Marquee: float getGhostOffset()>
<android.hardware.location.ContextHubManager: int loadNanoApp(int,android.hardware.location.NanoApp)>
<android.content.pm.PackageInstaller$Session: int[] getChildSessionIds()>
<android.util.LruCache: int createCount()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName(int)>
<android.net.INetworkStatsService$Default: long getIfaceStats(java.lang.String,int)>
<android.text.method.ArrowKeyMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.telephony.CellIdentityWcdma: int getCid()>
<android.app.Notification: android.content.LocusId getLocusId()>
<android.security.keystore.IKeystoreService$Default: int onUserPasswordChanged(int,java.lang.String)>
<android.hardware.input.InputManager: int isInTabletMode()>
<android.app.job.JobParameters: int describeContents()>
<android.telephony.NetworkScanRequest: int getMaxSearchTime()>
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()>
<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)>
<android.app.admin.FreezePeriod: java.time.MonthDay getEnd()>
<android.telephony.SubscriptionManager: void invalidateSlotIndexCaches()>
<com.android.internal.compat.OverrideAllowedState: int describeContents()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
<android.hardware.lights.Light: int describeContents()>
<android.widget.RemoteViews: int getLayoutId()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>
<android.graphics.text.LineBreaker$ParagraphConstraints: int access$900(android.graphics.text.LineBreaker$ParagraphConstraints)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
<android.app.role.IRoleManager$Default: java.util.List getRoleHoldersAsUser(java.lang.String,int)>
<android.content.ISyncStatusObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>
<android.net.lowpan.LowpanChannelInfo: float getSpectrumBandwidth()>
<android.view.View: android.view.ViewRootImpl getViewRootImpl()>
<android.hardware.display.DisplayManager: java.util.List getAmbientBrightnessStats()>
<com.android.internal.telephony.SmsMessageBase: void parseMessageBody()>
<com.android.internal.compat.IOverrideValidator$Default: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>
<android.view.textclassifier.ExtrasUtils: java.lang.String getModelName(android.os.Bundle)>
<android.drm.DrmUtils$ExtendedMetadataParser: java.lang.String get(java.lang.String)>
<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidDataDirs()>
<android.filterpacks.videosrc.MediaSource: int access$502(android.filterpacks.videosrc.MediaSource,int)>
<android.hardware.camera2.impl.CameraMetadataNative$Key: int getTag()>
<android.telephony.data.ApnSetting: int getWaitTime()>
<android.view.textclassifier.TextClassificationSession: int getMaxGenerateLinksTextLength()>
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()>
<android.media.session.ISessionController$Stub$Proxy: java.lang.CharSequence getQueueTitle()>
<android.permission.IPermissionManager$Stub$Proxy: java.util.List getAutoRevokeExemptionGrantedPackages(int)>
<android.renderscript.Short2: short get(int)>
<android.media.midi.MidiDeviceInfo: int hashCode()>
<android.security.keymaster.KeymasterDefs: int getTagType(int)>
<android.widget.Toast: int getGravity()>
<android.graphics.Interpolator: int getKeyFrameCount()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>
<android.view.WindowlessWindowManager: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
<android.view._$$Lambda$InsetsController$InternalAnimationControlListener$JCR0O3j9NxyNcNRXO181IWLmsto: float getInterpolation(float)>
<android.app.admin.DevicePolicyManager: android.content.Intent createAdminSupportIntent(java.lang.String)>
<com.android.internal.statusbar.IStatusBarService$Default: android.os.IBinder asBinder()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: int getSpanEnd(java.lang.Object)>
<android.view.InsetsController$InternalAnimationControlListener: android.view.animation.Interpolator getInterpolator()>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
<android.app.backup.IBackupObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int del(java.lang.String,int)>
<com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.view.SurfaceView$2: android.graphics.Canvas lockHardwareCanvas()>
<android.window.IWindowContainerTransactionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getExtraError()>
<android.widget.Scroller: int timePassed()>
<android.telephony.ims.ImsSsData: java.util.List getCallForwardInfo()>
<android.graphics.ColorSpace$Rgb: float[] getTransform(float[])>
<android.view.VerifiedKeyEvent: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,java.lang.String)>
<android.database.AbstractCursor: byte[] getBlob(int)>
<android.text.Layout: float getDesiredWidthWithLimit(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic,float)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>
<android.telephony.TelephonyManager: boolean isWifiCallingAvailable()>
<android.graphics.fonts.Font: android.graphics.fonts.FontVariationAxis[] getAxes()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isUserDataEnabled(int)>
<android.view.ViewGroup$1: android.view.Menu getMenu()>
<com.android.ims.internal.IImsUtListener$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName)>
<android.content.ContentValues: int describeContents()>
<android.app.INotificationManager$Default: byte[] getBackupPayload(int)>
<android.telephony.PinResult: int hashCode()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.net.wifi.nl80211.IInterfaceEventCallback asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolBytes()>
<android.view.IWindowManager$Default: int getRemoveContentMode(int)>
<android.view.ViewGroup: java.util.ArrayList buildOrderedChildList()>
<com.android.internal.statusbar.NotificationVisibility: int hashCode()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$SoftKeyboardController getSoftKeyboardController()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcutConfigActivities(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.app.IUriGrantsManager$Stub: android.app.IUriGrantsManager getDefaultImpl()>
<android.view.accessibility.AccessibilityWindowInfo: int getId()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<android.telephony.TelephonyManager: java.util.List getDevicePolicyOverrideApns(android.content.Context)>
<android.app.contentsuggestions.ContentSelection: java.lang.String getId()>
<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.app.role.IRoleManager$Default: java.lang.String getDefaultSmsPackage(int)>
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IIncidentCompanion$Stub$Proxy: java.util.List getPendingReports()>
<android.content.res.ResourcesImpl: void getValueForDensity(int,int,android.util.TypedValue,boolean)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.content.pm.IPackageMoveObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.slice.ISliceManager$Stub$Proxy: byte[] getBackupPayload(int)>
<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>
<android.graphics.text.LineBreaker$ParagraphConstraints: float getWidth()>
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int getMaxNumberRxSpatialStreams()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Activity: android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()>
<android.view.InsetsAnimationThreadControlRunner: android.view.WindowInsetsAnimation getAnimation()>
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)>
<android.hardware.camera2.params.StreamConfiguration: int getHeight()>
<android.view.IPinnedStackController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>
<android.animation.LayoutTransition: long getStartDelay(int)>
<android.webkit.WebView$HitTestResult: java.lang.String getExtra()>
<android.app.IActivityTaskManager$Default: android.window.IWindowOrganizerController getWindowOrganizerController()>
<android.app.Fragment: int getTargetRequestCode()>
<android.filterfw.core.Filter: java.lang.String getFilterClassName()>
<com.android.internal.app.AlertController: android.widget.ListView getListView()>
<android.view.InputDevice$MotionRange: float getFuzz()>
<android.location.Geofence: float getRadius()>
<android.net.Ikev2VpnProfile: java.security.PrivateKey getRsaPrivateKey()>
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
<android.graphics.PathMeasure: float getLength()>
<android.text.Layout: int getLineAscent(int)>
<android.net.wifi.nl80211.PnoSettings: int getMin5gRssiDbm()>
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Stub: android.os.IBinder asBinder()>
<android.os.UserManager: android.content.pm.UserInfo findCurrentGuestUser()>
<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String interfaceDescriptor()>
<android.hardware.display.VirtualDisplayConfig: int getWidth()>
<android.hardware.radio.RadioMetadata$Clock: int getTimezoneOffsetMinutes()>
<android.widget.TextView: boolean getIncludeFontPadding()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAllSubInfoList(java.lang.String,java.lang.String)>
<android.media.IAudioRoutesObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IAudioService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: int getCallStateForSlot(int)>
<android.content.res.XmlBlock$Parser: java.lang.String getInputEncoding()>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<android.text.PrecomputedText: int getSpanFlags(java.lang.Object)>
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForUser(java.lang.String,int,java.lang.String)>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.security.keystore.IKeystoreCertificateChainCallback asInterface(android.os.IBinder)>
<android.app.IActivityTaskManager$Default: int getRequestedOrientation(android.os.IBinder)>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.os.IInstalld$Stub: android.os.IBinder asBinder()>
<android.os.IDumpstate$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.params.InputConfiguration: int getHeight()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: android.os.IBinder asBinder()>
<android.view.ViewGroup: android.graphics.Insets computeOpticalInsets()>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion(int)>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<android.app.assist.AssistStructure$ViewNodeBuilder: java.lang.CharSequence getHint()>
<android.hardware.radio.RadioMetadata: int putIntFromNative(int,int)>
<com.android.ims.internal.IImsMultiEndpoint$Default: android.os.IBinder asBinder()>
<android.content.ContentProvider$Transport: android.net.Uri insert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)>
<android.hardware.radio.V1_5.CellInfoWcdma: int hashCode()>
<android.window.ITaskOrganizer$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher getDefaultImpl()>
<android.app.backup.IBackupManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IEuiccController$Default: int getOtaStatus(int)>
<android.graphics.drawable.VectorDrawable$VGroup: float getTranslateX()>
<android.media.AudioFormat: int describeContents()>
<android.app.INotificationManager$Stub: android.app.INotificationManager getDefaultImpl()>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.net.lowpan.ILowpanEnergyScanCallback getDefaultImpl()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>
<com.android.internal.telephony.ISub$Default: int getDefaultDataSubId()>
<android.app.Activity: java.lang.String getCallingPackage()>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.Network getNetwork()>
<android.app.PendingIntent: android.content.Intent getIntent()>
<android.os.Environment: java.io.File getUserSystemDirectory(int)>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<android.app.job.JobInfo: long getEstimatedNetworkDownloadBytes()>
<android.content.ComponentName: int hashCode()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(int)>
<android.view.RemoteAnimationAdapter: int getCallingPid()>
<android.media.soundtrigger.SoundTriggerManager: int unloadSoundModel(java.util.UUID)>
<com.android.internal.telephony.IMms$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getAggregatedPartialWakelockTimer()>
<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>
<android.service.voice.IVoiceInteractionSession$Stub: android.service.voice.IVoiceInteractionSession getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.telephony.CellIdentityLte: android.telephony.ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()>
<android.text.DynamicLayout: int getLineExtra(int)>
<android.net.RouteInfo: android.net.RouteInfo$RouteKey getRouteKey()>
<android.media.midi.MidiInputPort: android.os.IBinder getToken()>
<android.graphics.drawable.LayerDrawable: int getLayerWidth(int)>
<android.telephony.ModemActivityInfo: boolean isValid()>
<android.graphics.drawable.VectorDrawable$VGroup$5: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.location.ICountryDetector$Default: android.location.Country detectCountry()>
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.view.InsetsState: int hashCode()>
<android.view.autofill.AutofillManager: boolean isEnabled()>
<android.os.SystemClock$1: long millis()>
<android.content.pm.IPackageManager$Default: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.app.usage.UsageStatsManager: java.util.Map getAppStandbyBuckets()>
<android.content.pm.PackageInstaller$SessionInfo: boolean getEnableRollback()>
<android.app.IWallpaperManagerCallback$Default: android.os.IBinder asBinder()>
<android.media.AudioAttributes: int getAllFlags()>
<android.view.View: android.view.View getRootView()>
<android.hardware.lights.ILightsManager$Default: java.util.List getLights()>
<android.content.pm.IDataLoaderManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.AlertController: int access$800(com.android.internal.app.AlertController)>
<android.app.IAssistDataReceiver$Stub: android.app.IAssistDataReceiver getDefaultImpl()>
<android.content.pm.parsing.ParsingPackageImpl: int getRoundIconRes()>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>
<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getAllPhoneAccounts()>
<android.view.WindowInsets: android.graphics.Insets getInsets(android.graphics.Insets[],int)>
<android.text.style.RelativeSizeSpan: int describeContents()>
<android.app.backup.IBackupManager$Default: java.lang.String[] getTransportWhitelist()>
<android.ddm.DdmHandleAppName$Names: java.lang.String getAppName()>
<android.app.slice.ISliceManager$Default: android.net.Uri[] getPinnedSlices(java.lang.String)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: com.android.internal.telephony.euicc.IDeleteProfileCallback getDefaultImpl()>
<android.location.ICountryDetector$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.Intent: android.net.Uri getData()>
<android.graphics.drawable.VectorDrawable$VFullPath$5: java.lang.Object get(java.lang.Object)>
<android.widget.OverScroller: int getCurrX()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.view.Display: java.lang.String getOwnerPackageName()>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>
<android.provider.FontRequest: java.util.List getCertificates()>
<android.security.net.config.TrustedCertificateStoreAdapter: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>
<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()>
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.PduHeaders getPduHeaders()>
<android.net.Uri$HierarchicalUri: java.lang.String getFragment()>
<android.content.pm.parsing.component.ParsedInstrumentation: java.lang.String getTargetProcesses()>
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<android.view.accessibility.AccessibilityNodeIdManager: android.view.accessibility.AccessibilityNodeIdManager getInstance()>
<android.app.Notification$WearableExtender: int getContentAction()>
<android.app.ActivityManager: boolean isUserRunning(int)>
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.os.IHwBinder asBinder()>
<android.view.animation.GridLayoutAnimationController: int getDirection()>
<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile getMediaProfile()>
<android.content.IRestrictionsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.timezone.RulesState: int getStagedOperationType()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getHorizontalThumbDrawable()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.app.servertransaction.PendingTransactionActions: android.app.servertransaction.PendingTransactionActions$StopInfo getStopInfo()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModules()>
<android.view.View: int computeHorizontalScrollRange()>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.ContentValues: int size()>
<android.print.IPrintServicesChangeListener$Stub: android.print.IPrintServicesChangeListener asInterface(android.os.IBinder)>
<android.view.IGraphicsStats$Stub: android.view.IGraphicsStats asInterface(android.os.IBinder)>
<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>
<android.os.IDumpstateListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiBatchedScanTime(int,long,int)>
<android.content.pm.ResolveInfo: int getIconResourceInternal()>
<android.os.incremental.IIncrementalService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IRecoverySystem$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.job.IJobScheduler$Stub$Proxy: java.util.List getStartedJobs()>
<android.app.INotificationManager$Default: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String)>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.app.IActivityManager$Stub$Proxy: int checkPermission(java.lang.String,int,int)>
<android.content.pm.PackageParser$Component: android.content.ComponentName getComponentName()>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>
<android.telephony.AvailableNetworkInfo: int getSubId()>
<android.telephony.CarrierConfigManager: boolean isConfigForIdentifiedCarrier(android.os.PersistableBundle)>
<com.android.internal.view.menu.StandardMenuPopup: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.textservice.ITextServicesManager$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ims.aidl.IImsRegistration$Stub: android.telephony.ims.aidl.IImsRegistration getDefaultImpl()>
<android.view.inputmethod.InputMethodManager: int access$200(android.view.inputmethod.InputMethodManager,android.view.View,int)>
<android.graphics.Paint: int getOffsetForAdvance(char[],int,int,int,int,boolean,float)>
<android.util.LongSparseLongArray: int indexOfKey(long)>
<android.app.admin.FreezePeriod: java.time.MonthDay getStart()>
<android.telephony.TelephonyManager: android.telephony.ServiceState getServiceStateForSubscriber(int)>
<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()>
<android.hardware.display.IDisplayManagerCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.IShortcutChangeCallback$Stub: android.content.pm.IShortcutChangeCallback getDefaultImpl()>
<android.telephony.CellInfoGsm: android.telephony.CellInfo sanitizeLocationInfo()>
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.os.IBinder asBinder()>
<android.view.IWindowManager$Default: float getAnimationScale(int)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
<android.app.AppOpsManager: android.os.IBinder getClientId()>
<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>
<android.net.NetworkScoreManager: java.lang.String getActiveScorerPackage()>
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getUriShortcutIconFd(android.content.pm.ShortcutInfo)>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.textclassifier.TextLanguage$Request: java.lang.CharSequence getText()>
<com.android.internal.statusbar.IStatusBar$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.proto.EncodedBuffer: int getRawVarint32Size(int)>
<android.os.LocaleList: android.os.LocaleList getEmptyLocaleList()>
<android.companion.IFindDeviceCallback$Stub: android.companion.IFindDeviceCallback getDefaultImpl()>
<android.text.Layout: int getHeight(boolean)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName,int,boolean)>
<android.hardware.Camera$Parameters: int getMaxZoom()>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<android.media.audiopolicy.AudioPolicy: android.media.projection.MediaProjection getMediaProjection()>
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration$MarshalerHighSpeedVideoConfiguration: int getNativeSize()>
<android.hardware.radio.ProgramSelector: long[] getVendorIds()>
<android.hardware.display.IDisplayManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SmsCbMessage: android.telephony.SmsCbMessage createFromCursor(android.database.Cursor)>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>
<android.hardware.IConsumerIrService$Stub: android.hardware.IConsumerIrService getDefaultImpl()>
<android.hardware.biometrics.BiometricManager: long[] getAuthenticatorIds()>
<android.telephony.CellSignalStrengthTdscdma: int getRscp()>
<android.telephony.CellIdentityTdscdma$1: android.telephony.CellIdentityTdscdma[] newArray(int)>
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.SearchableInfo: int getSearchButtonText()>
<android.app.AppOpsManager$NoteOpEvent: long getNoteTime()>
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>
<android.app.assist.AssistStructure$ViewNode: int getImportantForAutofill()>
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte createFromParcelBody(android.os.Parcel)>
<android.telephony.RadioAccessFamily: int singleRafTypeFromString(java.lang.String)>
<android.net.lowpan.LowpanIdentity: int getChannel()>
<android.location.Address: java.lang.String getThoroughfare()>
<android.telephony.CellSignalStrengthLte: int getRsrq()>
<android.graphics.Bitmap: int getAllocationByteCount()>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: java.lang.String getTransactionName(int)>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.telephony.TelephonyManager: void notifyUserActivity()>
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter getSleepTimeCounter()>
<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()>
<com.android.internal.infra.RemoteStream$1: java.io.Closeable createStream(android.os.ParcelFileDescriptor)>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>
<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean,android.content.pm.PackageParser$SigningDetails,int)>
<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.app.prediction.IPredictionCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.ims.ImsSsInfo: java.lang.String getIncomingCommunicationBarringNumber()>
<android.text.Layout: android.text.Layout$Alignment getAlignment()>
<android.telephony.ClientRequestStats: int describeContents()>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)>
<android.os.INetworkManagementService$Default: java.lang.String[] getDnsForwarders()>
<android.os.IUserManager$Stub$Proxy: java.util.List getUserRestrictionSources(java.lang.String,int)>
<android.media.IMediaRouterClient$Stub: android.media.IMediaRouterClient asInterface(android.os.IBinder)>
<android.location.LocationManager: java.lang.String[] getBackgroundThrottlingWhitelist()>
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)>
<android.app.IUiModeManager$Stub$Proxy: boolean isNightModeLocked()>
<android.telephony.ims.aidl.IImsRcsController$Stub: android.os.IBinder asBinder()>
<android.app.usage.UsageEvents$Event: java.lang.String getTaskRootClassName()>
<android.net.IpConfiguration: int describeContents()>
<android.app.ActivityOptions: java.util.ArrayList getSharedElementNames()>
<android.media.MediaCodec: java.lang.String getName()>
<android.content.om.IOverlayManager$Stub$Proxy: java.util.List getOverlayInfosForTarget(java.lang.String,int)>
<android.view.View: android.os.Handler getHandler()>
<android.content.pm.LauncherApps$PinItemRequest: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.content.IContentService$Default: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<android.net.nsd.INsdManager$Stub: android.net.nsd.INsdManager asInterface(android.os.IBinder)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>
<android.content.pm.IPackageDataObserver$Stub: android.os.IBinder asBinder()>
<android.telephony.ims.ImsRcsManager: boolean isCapable(int,int)>
<android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.apk.ApkSigningBlockUtils: int getSignatureAlgorithmContentDigestAlgorithm(int)>
<android.content.pm.ApplicationInfo: java.lang.String[] getAllApkPaths()>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.admin.DevicePolicyManager: boolean isOrganizationOwnedDeviceWithManagedProfile()>
<android.hardware.camera2.utils.ConcurrentCameraIdCombination: int describeContents()>
<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.PackageInfo)>
<android.graphics.ImageDecoder$ImageInfo: java.lang.String getMimeType()>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.health.HealthKeys$Constants: java.lang.String getDataType()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback asInterface(android.os.IBinder)>
<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] preceding(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getAttributions()>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>
<android.view.IDisplayWindowInsetsController$Stub$Proxy: android.os.IBinder asBinder()>
<android.print.ILayoutResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.IFileIntegrityService$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: int getIntentVerificationStatusAsUser(java.lang.String,int)>
<android.hardware.ISensorPrivacyManager$Default: android.os.IBinder asBinder()>
<android.app.DisabledWallpaperManager: boolean isWallpaperSupported()>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>
<android.view.SurfaceControl: android.os.IBinder getInternalDisplayToken()>
<android.content.pm.PackageParser$Package: long getLatestPackageUseTimeInMills()>
<android.media.tv.TvContentRatingSystemInfo: android.net.Uri getXmlUri()>
<com.android.ims.internal.IImsVideoCallCallback$Stub: com.android.ims.internal.IImsVideoCallCallback getDefaultImpl()>
<android.content.pm.IShortcutService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: boolean rebootRadio()>
<android.telephony.ModemActivityInfo$TransmitPower: android.util.Range getPowerRangeInDbm()>
<android.telephony.ClosedSubscriberGroupInfo: java.lang.String getHomeNodebName()>
<android.os.incremental.IIncrementalServiceConnector$Default: android.os.IBinder asBinder()>
<android.util.TypedValue: float getFraction(float,float)>
<android.location.Criteria: int getPowerRequirement()>
<android.animation.Keyframe$FloatKeyframe: float getFloatValue()>
<android.util.proto.ProtoInputStream: int getFieldNumber()>
<android.media.AudioMetadata$1: int hashCode()>
<android.service.autofill.UserData: int getMinValueLength()>
<com.android.internal.widget.BackgroundFallback: android.graphics.drawable.Drawable getDrawable()>
<android.view.View$DragShadowBuilder: android.view.View getView()>
<android.media.audiopolicy.AudioProductStrategy: java.util.List getAudioProductStrategies()>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>
<android.app.IActivityManager$Stub$Proxy: int getMemoryTrimLevel()>
<android.telephony.NeighboringCellInfo$1: void <init>()>
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()>
<android.hardware.hdmi.HdmiRecordSources$OwnSource: int extraParamToByteArray(byte[],int)>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>
<com.android.internal.telephony.IBooleanConsumer$Stub: com.android.internal.telephony.IBooleanConsumer getDefaultImpl()>
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)>
<android.media.projection.IMediaProjectionWatcherCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setClientPrefix(java.lang.String)>
<android.app.usage.NetworkStats$Bucket: long getTxBytes()>
<android.hardware.ICameraService$Default: android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds()>
<android.widget.Editor$HandleView: int getPreferredWidth()>
<android.app.IAlarmCompleteListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.V1_5.CellIdentityGsm: int hashCode()>
<android.telecom.TelecomManager: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network getNetwork()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: com.android.internal.telephony.euicc.IListNotificationsCallback asInterface(android.os.IBinder)>
<android.view.MotionEvent: float getAxisValue(int)>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback asInterface(android.os.IBinder)>
<android.view.WindowId: int describeContents()>
<android.view.autofill.IAutoFillManager$Default: android.os.IBinder asBinder()>
<android.widget.TextView: int getLineHeight()>
<android.hardware.soundtrigger.SoundTrigger: java.lang.String getCurrentOpPackageName()>
<android.app.INotificationManager$Default: android.content.ComponentName getEffectsSuppressor()>
<android.location.GnssClock: long getTimeNanos()>
<android.os.health.HealthStats: long getTimerTime(int)>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: int[] getPacketCounters()>
<android.renderscript.Type: int getX()>
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>
<android.telephony.TelephonyManager: boolean isDataCapable()>
<android.text.util.Linkify$4: int compare(android.text.util.LinkSpec,android.text.util.LinkSpec)>
<android.security.keystore.recovery.KeyChainSnapshot: java.security.cert.CertPath getTrustedHardwareCertPath()>
<android.media.projection.IMediaProjectionCallback$Stub: android.media.projection.IMediaProjectionCallback getDefaultImpl()>
<android.view.View: android.view.WindowInsets getRootWindowInsets()>
<android.telephony.RadioAccessFamily: int getNetworkTypeFromRaf(int)>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>
<android.net.Uri$OpaqueUri: int getPort()>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>
<android.security.keystore.ParcelableKeyGenParameterSpec: int describeContents()>
<android.app.IAlarmCompleteListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.inputmethod.EditorInfo$InitialSurroundingText: int access$100(android.view.inputmethod.EditorInfo$InitialSurroundingText)>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: int postEnroll(android.os.IBinder)>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$MLDtRnX1dj1RKFdjgIsOvcQxhA0: java.lang.Object createService(android.content.Context)>
<android.app.servertransaction.ClientTransactionItem: int describeContents()>
<android.media.IMediaRouter2Manager$Stub: android.media.IMediaRouter2Manager asInterface(android.os.IBinder)>
<android.os.Debug: java.lang.String getCaller()>
<android.view.inputmethod.InputBinding: int describeContents()>
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()>
<android.telephony.BarringInfo: int describeContents()>
<android.opengl.EGLObjectHandle: int getHandle()>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoModeRaw()>
<com.android.server.SystemConfig: android.util.ArraySet getDefaultVrComponents()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getZygotePreloadName()>
<android.media.MediaDrm$ListenerArgs: byte[] access$1200(android.media.MediaDrm$ListenerArgs)>
<android.hardware.display.VirtualDisplayConfig: int getDisplayIdToMirror()>
<android.graphics.drawable.VectorDrawable$VGroup: int getPropertyIndex(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)>
<android.os.Environment: java.util.Collection getInternalMediaDirectories()>
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>
<android.app.usage.IStorageStatsManager$Default: android.content.pm.ParceledListSlice queryCratesForUid(java.lang.String,int,java.lang.String)>
<android.app.VoiceInteractor$PickOptionRequest$Option: int getIndex()>
<com.android.internal.appwidget.IAppWidgetHost$Stub: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNode: int getChildCount()>
<android.text.PackedIntVector: int width()>
<android.app.Activity: android.view.SearchEvent getSearchEvent()>
<android.view.FrameMetrics: long getMetric(int)>
<android.text.Layout: float getSpacingMultiplier()>
<android.widget.TextView: android.view.textclassifier.TextClassificationManager getTextClassificationManagerForUser()>
<android.util.KeyValueListParser$StringValue: java.lang.String getKey()>
<android.content.res.XmlBlock$Parser: int nextToken()>
<android.app.ActivityOptions: android.os.IRemoteCallback getAnimationFinishedListener()>
<com.android.internal.view.IInputMethod$Stub: java.lang.String getTransactionName(int)>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<android.app.trust.IStrongAuthTracker$Default: android.os.IBinder asBinder()>
<android.hardware.IConsumerIrService$Stub: java.lang.String getTransactionName(int)>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.os.IBinder asBinder()>
<android.content.pm.FileSystemControlParcel: int describeContents()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getLightMutedSwatch()>
<android.location.LocationManager: int getGnssBatchSize()>
<android.app.IAssistDataReceiver$Stub: android.app.IAssistDataReceiver asInterface(android.os.IBinder)>
<android.telephony.CellInfo: void <clinit>()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroupsForPackage(java.lang.String,int,boolean)>
<android.hardware.radio.V1_0.EvdoSignalStrength: int hashCode()>
<android.app.LoadedApk$SplitDependencyLoaderImpl: java.lang.String[] getSplitPathsForSplit(java.lang.String)>
<android.app.SystemServiceRegistry$27: android.hardware.input.InputManager createService()>
<android.os.PowerManager: boolean isDeviceIdleMode()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanActualTime(long)>
<android.service.euicc.EuiccProfileInfo: int getPolicyRules()>
<android.debug.IAdbManager$Stub$Proxy: java.util.Map getPairedDevices()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getCaptivePortalServerUrl()>
<android.content.pm.parsing.component.ComponentParseUtils: int getIcon(android.content.pm.parsing.component.ParsedComponent)>
<android.media.session.PlaybackState$CustomAction: int describeContents()>
<android.net.lowpan.ILowpanManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.Debug$MemoryInfo: int getTotalPss()>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>
<com.android.internal.graphics.palette.Target: float getMaximumLightness()>
<android.telephony.TelephonyManager: int[] supplyPukReportResult(java.lang.String,java.lang.String)>
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>
<android.text.TextDirectionHeuristics$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.media.AudioManager: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(android.media.audiopolicy.AudioProductStrategy)>
<android.provider.FontsContract$FontInfo: android.net.Uri getUri()>
<android.telephony.ims.ImsCallForwardInfo: int getToA()>
<android.service.notification.Adjustment: android.os.UserHandle getUserHandle()>
<com.android.internal.net.INetworkWatchlistManager$Stub: com.android.internal.net.INetworkWatchlistManager getDefaultImpl()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] getEncryptedRecoveryKeyBlob()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String,java.lang.String,java.lang.String)>
<android.security.KeyStore$ExportKeyPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.net.ConnectivityManager: android.net.IConnectivityManager access$400(android.net.ConnectivityManager)>
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.filterfw.geometry.Quad: float getBoundingWidth()>
<android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>
<android.view.ViewRootImpl$EarlyPostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice getAppStandbyBuckets(java.lang.String,int)>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>
<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.hardware.camera2.impl.CameraMetadataNative$18: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.media.IAudioService$Stub$Proxy: int getCurrentAudioFocus()>
<android.transition.Transition: java.lang.String getName()>
<android.os.IDumpstateListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int hashCode()>
<android.app.backup.BackupManager: java.lang.CharSequence getDataManagementIntentLabel(java.lang.String)>
<android.app.ITransientNotificationCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.display.WifiDisplay: int describeContents()>
<android.telephony.ClientRequestStats: java.util.List getRequestHistograms()>
<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>
<android.media.PlayerBase$PlayerIdCard: int describeContents()>
<android.hardware.input.TouchCalibration: float[] getAffineTransform()>
<android.view.Display: float[] getSupportedRefreshRates()>
<android.net.lowpan.LowpanBeaconInfo: int getRssi()>
<android.app.servertransaction.ClientTransaction: int hashCode()>
<android.media.MicrophoneInfo: float getSensitivity()>
<android.hardware.input.InputManager: android.view.InputMonitor monitorGestureInput(java.lang.String,int)>
<android.app.IActivityManager$Stub$Proxy: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String)>
<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass[] values()>
<android.graphics.BitmapFactory$Options: long nativeInBitmap(android.graphics.BitmapFactory$Options)>
<android.telecom.ParcelableCallAnalytics: long getStartTimeMillis()>
<android.os.storage.VolumeRecord: int getType()>
<android.hardware.usb.UsbPortStatus: int getSupportedRoleCombinations()>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getForeground()>
<android.accessibilityservice.GestureDescription$StrokeDescription: int getContinuedStrokeId()>
<android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver asInterface(android.os.IBinder)>
<android.hardware.display.Curve: float[] getY()>
<android.telephony.TelephonyManager: java.lang.String getAidForAppType(int,int)>
<android.util.SparseSetArray: int keyAt(int)>
<android.graphics.drawable.VectorDrawable$VFullPath$6: java.lang.Object get(java.lang.Object)>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
<android.view.View: java.util.List getSystemGestureExclusionRects()>
<android.telephony.SmsCbMessage$1: void <init>()>
<android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>
<android.widget.RtlSpacingHelper: int getStart()>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<com.android.server.SystemConfig: java.util.Set getWhitelistedStagedInstallers()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForUser(java.lang.String,int,java.lang.String)>
<android.app.Notification$BubbleMetadata: android.graphics.drawable.Icon getIcon()>
<android.content.res.CompatResources: int getColor(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getProviders()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getSecondaryUsers(android.content.ComponentName)>
<android.app.ApplicationPackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<android.hardware.location.NanoAppInstanceInfo: int getHandle()>
<android.os.StatFs: long getFreeBlocksLong()>
<android.app.ApplicationPackageManager: int installExistingPackageAsUser(java.lang.String,int)>
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.IBinder asBinder()>
<android.net.Uri$OpaqueUri: java.lang.String getFragment()>
<android.view.contentcapture.ViewNode: java.lang.String[] getAutofillHints()>
<android.database.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.MotionEvent: int getActionMasked()>
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: byte[] getData()>
<com.android.internal.telephony.ITelephony$Default: boolean isCapable(int,int,int)>
<android.app.backup.BackupManager: android.os.UserHandle getUserForAncestralSerialNumber(long)>
<android.content.IClipboard$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IInputMonitorHost$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.contentcapture.ViewNode: int[] getTextLineBaselines()>
<android.telephony.data.ApnSetting$Builder: int access$1300(android.telephony.data.ApnSetting$Builder)>
<com.android.internal.app.IVoiceInteractorRequest$Stub: com.android.internal.app.IVoiceInteractorRequest getDefaultImpl()>
<android.hardware.radio.IRadioService$Stub$Proxy: java.util.List listModules()>
<android.os.ShellCallback: int describeContents()>
<android.view.IDisplayWindowRotationController$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.PackageInstaller$SessionInfo: int getSessionId()>
<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse getDefaultImpl()>
<android.drm.DrmManagerClient: int removeAllRights()>
<android.media.IAudioFocusDispatcher$Stub: android.os.IBinder asBinder()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)>
<android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
<android.os.WorkSource: java.lang.String getPackageName(int)>
<android.content.pm.IPackageManager$Default: byte[] getPreferredActivityBackup(int)>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<android.location.GpsMeasurement: byte getPrn()>
<android.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()>
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDefaultDreamComponentForUser(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()>
<android.telephony.CellIdentityTdscdma: void updateGlobalCellId()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()>
<android.view.ViewRootImpl$TrackballAxis: float collect(float,long,java.lang.String)>
<android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)>
<android.content.IRestrictionsManager$Stub: android.os.IBinder asBinder()>
<android.view.textclassifier.TextClassificationContext: java.lang.String getPackageName()>
<android.media.AudioDeviceInfo: int[] getSampleRates()>
<android.graphics.RadialGradient: long createNativeInstance(long)>
<android.media.IMediaRouter2Manager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<android.os.INetworkManagementService$Stub$Proxy: boolean isFirewallEnabled()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getColumnCount()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()>
<android.widget.ImageView: boolean getCropToPadding()>
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>
<android.content.pm.parsing.ParsingPackageImpl: int getAutoRevokePermissions()>
<android.hardware.camera2.ICameraDeviceUser$Default: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.app.admin.DevicePolicyManager: boolean isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<android.view.IGraphicsStatsCallback$Default: android.os.IBinder asBinder()>
<android.content.Intent: java.lang.Object getExtra(java.lang.String)>
<android.telephony.ims.feature._$$Lambda$45UAFJHVNK8x4IbCIjJCvNdDYHU: java.lang.Object get()>
<android.content.pm.PackageParser$Service: int describeContents()>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ContextWrapper: java.io.File getCodeCacheDir()>
<android.database.sqlite.SQLiteQueryBuilder: java.util.Map getProjectionMap()>
<android.text.PackedIntVector: int size()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName,int,boolean)>
<android.content.pm.IPinItemRequest$Stub: android.content.pm.IPinItemRequest asInterface(android.os.IBinder)>
<android.content.pm.parsing.ParsingPackageImpl: int getUiOptions()>
<android.graphics.drawable.VectorDrawable$VFullPath: float getTrimPathOffset()>
<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect getBoundsInScreen()>
<android.os.BaseBundle: short getShort(java.lang.String)>
<android.content.res.CompatibilityInfo: int hashCode()>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>
<android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.soundtrigger_middleware.ModelParameterRange: int describeContents()>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>
<android.os.IIncidentReportStatusListener$Stub: android.os.IIncidentReportStatusListener asInterface(android.os.IBinder)>
<android.content.pm.SuspendDialogInfo: int getIconResId()>
<com.android.internal.telephony.GsmAlphabet: int access$000()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)>
<android.content.SyncRequest: android.os.Bundle getBundle()>
<android.view.contentcapture.ContentCaptureSessionId: int hashCode()>
<android.net.LinkProperties: java.util.List getValidatedPrivateDnsServers()>
<android.app.Notification$WearableExtender: boolean getHintContentIntentLaunchesActivity()>
<android.net.IConnectivityManager$Default: int getRestoreDefaultNetworkDelay(int)>
<android.location.AbstractListenerManager$Registration: java.lang.Object getRequest()>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int findSplitPoint()>
<android.app.ExitTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.view.WindowManagerImpl: android.graphics.Region getCurrentImeTouchRegion()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.inputmethod.BaseInputConnection: android.os.Handler getHandler()>
<android.os.BatterySaverPolicyConfig: java.util.Map getDeviceSpecificSettings()>
<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.ListView: android.view.View findViewWithTagInHeadersOrFooters(java.util.ArrayList,java.lang.Object)>
<android.os.Debug: int getGlobalExternalAllocCount()>
<android.content.res.Resources: android.graphics.Typeface getFont(android.util.TypedValue,int)>
<android.view.WindowInsets$Type: int all()>
<android.media.MediaMetadata: int describeContents()>
<android.app.NotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<android.view.VerifiedMotionEvent: int getButtonState()>
<android.content.res.ConfigurationBoundResourceCache: java.lang.Object get(long,android.content.res.Resources$Theme)>
<android.media.MediaRouter$RouteInfo: int getVolumeMax()>
<android.hardware.radio.ITunerCallback$Stub: android.os.IBinder asBinder()>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>
<android.view.IWindow$Stub: java.lang.String getTransactionName(int)>
<android.media.session.ISessionManager$Default: int getSessionPolicies(android.media.session.MediaSession$Token)>
<com.android.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>
<android.hardware.ISerialManager$Default: java.lang.String[] getSerialPorts()>
<android.net.LocalSocketAddress$Namespace: int getId()>
<android.net.netstats.provider.INetworkStatsProvider$Default: android.os.IBinder asBinder()>
<android.telephony.SubscriptionPlan: int access$502(android.telephony.SubscriptionPlan,int)>
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.textclassifier.SelectionEvent: java.lang.String getWidgetVersion()>
<android.animation.PropertyValuesHolder$1: java.lang.Object getValueAtFraction(float)>
<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()>
<android.app.IActivityTaskManager$Default: java.lang.String getCallingPackage(android.os.IBinder)>
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.app.role.IOnRoleHoldersChangedListener asInterface(android.os.IBinder)>
<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>
<android.view.Window: android.view.WindowInsetsController getInsetsController()>
<android.telephony.ims.ImsSuppServiceNotification: int describeContents()>
<android.widget.RemoteViews: android.widget.RemoteViews getDarkTextViews()>
<com.android.internal.os.BatteryStatsImpl: long getUahDischargeScreenOff(int)>
<android.app.IProcessObserver$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.ITunerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Vibrator: int getDefaultHapticFeedbackIntensity()>
<android.view.contentcapture.ContentCaptureSessionId: int getValue()>
<android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>
<android.os.Environment: java.io.File getDataPreloadsFileCacheDirectory(java.lang.String)>
<android.content.ClipData$Item: java.lang.String getHtmlText()>
<android.app.SearchDialog: android.os.Bundle onSaveInstanceState()>
<android.view.IWindowId$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CellIdentityNr: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeByUuid(java.lang.String)>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<android.transition.Slide$4: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.content.pm.parsing.component.ParsedService: int describeContents()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<com.android.internal.database.SortCursor: double getDouble(int)>
<android.app.INotificationManager$Default: int getZenMode()>
<android.view.Window: android.transition.Transition getReenterTransition()>
<android.window.IWindowOrganizerController$Stub: java.lang.String getTransactionName(int)>
<android.view.Surface: long getNextFrameNumber()>
<android.media.MediaDrm$ListenerArgs: byte[] access$800(android.media.MediaDrm$ListenerArgs)>
<android.hardware.camera2.params.LensShadingMap: int getColumnCount()>
<android.telephony.RadioAccessFamily$1: void <init>()>
<android.telecom.TelecomManager: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object recompute(java.lang.Void)>
<android.graphics.drawable.DrawableContainer: int getCurrentIndex()>
<com.android.ims.internal.IImsCallSession$Stub: android.os.IBinder asBinder()>
<com.android.internal.widget.ILockSettings$Default: boolean getBoolean(java.lang.String,boolean,int)>
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRcsFeature getImsRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: int getFeatureState()>
<android.telephony.TelephonyManager: boolean isManualNetworkSelectionAllowed()>
<android.telephony.SubscriptionInfo: int getMcc()>
<com.android.internal.os.IShellCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.FrameStats: long getStartTimeNano()>
<android.graphics.ColorSpace$Rgb: long getNativeInstance()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<android.telephony.TelephonyManager: int getVoiceMessageCount()>
<android.os.health.TimerStat: int getCount()>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>
<android.os.incremental.V4Signature: byte[] access$000(java.nio.ByteBuffer)>
<android.view.textclassifier.SelectionEvent: java.lang.String getEntityType()>
<android.telephony.ServiceState: android.telephony.ServiceState mergeServiceStates(android.telephony.ServiceState,android.telephony.ServiceState)>
<android.security.keystore.IKeystoreOperationResultCallback$Stub: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsVideoCallCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.IMediaRouterService$Stub: android.media.IMediaRouterService asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: boolean isAnyRadioPoweredOn()>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<android.graphics.drawable.RippleForeground$4: java.lang.Object get(java.lang.Object)>
<android.app.slice.Slice: int describeContents()>
<android.net.Uri$HierarchicalUri: java.lang.String getQuery()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getDeviceList()>
<android.content.om.IOverlayManager$Default: java.util.List getOverlayInfosForTarget(java.lang.String,int)>
<android.net.lowpan.ILowpanManager$Stub$Proxy: java.lang.String[] getInterfaceList()>
<android.media.session.MediaSessionManager$RemoteUserInfo: int getPid()>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String)>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.view.IWindowFocusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackage(java.lang.String)>
<android.net.lowpan.LowpanBeaconInfo: int access$202(android.net.lowpan.LowpanBeaconInfo,int)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker getDailyChargeLevelStepTracker()>
<android.hardware.radio.RadioMetadata$Clock: int describeContents()>
<android.app.PendingIntent: android.os.IBinder getWhitelistToken()>
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedZslStillFrameNumber()>
<android.widget.TextView: int getMinWidth()>
<android.view.IWindowId$Stub: android.view.IWindowId getDefaultImpl()>
<android.hardware.radio.TunerAdapter: int getProgramInformation(android.hardware.radio.RadioManager$ProgramInfo[])>
<android.hardware.display.ColorDisplayManager: int getNightDisplayColorTemperature()>
<android.media.tv.ITvInputHardwareCallback$Stub: java.lang.String getTransactionName(int)>
<android.os.UserManager: android.os.UserHandle createProfile(java.lang.String,java.lang.String,java.util.Set)>
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponents()>
<android.os.IncidentManager$DumpCallback: int access$100(android.os.IncidentManager$DumpCallback)>
<android.permission.IPermissionManager$Stub: java.lang.String getTransactionName(int)>
<android.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()>
<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>
<android.widget.Toolbar: int getContentInsetStartWithNavigation()>
<com.android.internal.app.WindowDecorActionBar: android.content.Context getThemedContext()>
<android.telephony.ImsiEncryptionInfo: java.security.PublicKey getPublicKey()>
<android.os.BugreportParams: int getMode()>
<android.filterfw.core.Filter: int getNumberOfOutputs()>
<android.media.projection.MediaProjectionInfo: android.os.UserHandle getUserHandle()>
<android.location.IGnssAntennaInfoListener$Default: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: android.content.pm.dex.ISnapshotRuntimeProfileCallback getDefaultImpl()>
<android.hardware.location.IContextHubCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>
<android.os.Debug: java.lang.String[] getVmFeatureList()>
<android.app.Notification$TvExtender: java.lang.String getChannel()>
<android.view.View: int getDrawingCacheBackgroundColor()>
<android.util.TimeUtils: java.util.List getTimeZoneIdsForCountryCode(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>
<android.media.AudioFocusInfo: java.lang.String getClientId()>
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()>
<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)>
<android.location.AbstractListenerManager: java.lang.Object convertKey(java.lang.Object)>
<android.media.SubtitleData: byte[] getData()>
<android.text.style.AccessibilityURLSpan: int getSpanTypeIdInternal()>
<android.hardware.radio.RadioManager$FmBandDescriptor: int describeContents()>
<android.media.session.IActiveSessionsListener$Default: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: long getGpsSignalQualityTime(int,long,int)>
<android.hardware.radio.ITuner$Default: java.util.Map getParameters(java.util.List)>
<android.media.IMediaRouterService$Default: android.media.RoutingSessionInfo getSystemSessionInfo()>
<android.media.MediaDrm: android.media.MediaDrm$CertificateRequest getCertificateRequest(int,java.lang.String)>
<android.media.soundtrigger_middleware.ConfidenceLevel: int describeContents()>
<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()>
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentityWcdma createFromParcelBody(android.os.Parcel)>
<android.app.ContextImpl: android.content.AutofillOptions getAutofillOptions()>
<android.graphics.GraphicBuffer: int describeContents()>
<android.media.tv.ITvInputManagerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IOnKeyguardExitResult$Stub: java.lang.String getTransactionName(int)>
<android.system.suspend.ISuspendControlService$Default: android.os.IBinder asBinder()>
<android.location.GpsClock: double getDriftInNsPerSec()>
<android.telephony.TelephonyManager: java.lang.String[] getMergedSubscriberIds()>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(int,java.lang.String)>
<android.content.ContentResolver$1: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.service.autofill.FillEventHistory$Event: java.util.Map getFieldsClassification()>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
<android.app.backup.IBackupCallback$Stub: android.app.backup.IBackupCallback getDefaultImpl()>
<android.media.VolumeProvider: int getMaxVolume()>
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()>
<android.app.IUiModeManager$Stub: android.app.IUiModeManager asInterface(android.os.IBinder)>
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)>
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()>
<android.os.IRecoverySystemProgressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource: int extraParamToByteArray(byte[],int)>
<android.widget.Editor: float getLastUpPositionX()>
<android.hardware.location.ContextHubInfo: byte getChreApiMajorVersion()>
<android.app.AlarmManager$AlarmClockInfo: int describeContents()>
<android.util.apk.MemoryMappedFileDataSource: long size()>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
<android.os.INetworkManagementService$Stub$Proxy: boolean isTetheringStarted()>
<android.graphics.RenderNode: float getScaleX()>
<android.view.View: int getFadeTop(boolean)>
<android.os.Debug$MemoryInfo: int getOtherPss(int)>
<android.app.Notification: java.lang.Class getNotificationStyle()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>
<android.content.Entity: java.util.ArrayList getSubValues()>
<android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener asInterface(android.os.IBinder)>
<android.view.textclassifier.SelectionEvent: int getAbsoluteStart()>
<android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCorks()>
<android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>
<android.net.IConnectivityManager$Stub$Proxy: int registerNetworkFactory(android.os.Messenger,java.lang.String)>
<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)>
<android.app.NotificationChannel: int describeContents()>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.telephony.TelephonyManager: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>
<android.os.CoolingDevice: int hashCode()>
<android.location.IGnssStatusListener$Stub: android.location.IGnssStatusListener asInterface(android.os.IBinder)>
<android.telephony.ims.RcsContactUceCapability: android.net.Uri getServiceUri(long)>
<android.net.wifi.nl80211.IScanEvent$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)>
<android.app.job.JobWorkItem: android.content.Intent getIntent()>
<android.security.keystore.recovery.KeyDerivationParams: byte[] getSalt()>
<android.hardware.location.IContextHubService$Stub: android.os.IBinder asBinder()>
<android.content.pm.parsing.component.ParsedProvider: int getInitOrder()>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getSharedElementReturnTransition()>
<android.telephony.SmsMessage: boolean isEmail()>
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>
<android.app.blob.IBlobStoreManager$Stub: java.lang.String getTransactionName(int)>
<android.telecom.VideoProfile$CameraCapabilities: int getWidth()>
<android.view.SurfaceView$2: android.graphics.Canvas lockCanvas()>
<android.media.MediaCas$Session: byte[] getSessionId()>
<android.os.storage.IStorageManager$Default: int decryptStorage(java.lang.String)>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>
<android.content.pm.parsing.component.ParsedPermission: int getProtectionFlags()>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>
<android.view.View: android.content.res.ColorStateList getForegroundTintList()>
<android.app.assist.AssistStructure$ViewNode: float getAlpha()>
<android.hardware.location.NanoAppMessage: byte[] getMessageBody()>
<android.net.WebAddress: java.lang.String getHost()>
<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: int getMeasuredState()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.telecom.Logging.SessionManager: long lambda$new$1$SessionManager()>
<android.widget.TextView: int getCompoundDrawablePadding()>
<android.view.SurfaceControl: android.os.IBinder getPhysicalDisplayToken(long)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<android.media.MediaRoute2Info: int getType()>
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: int queryCapabilityStatus()>
<android.net.lowpan.ILowpanManagerListener$Stub: android.net.lowpan.ILowpanManagerListener asInterface(android.os.IBinder)>
<android.media.AudioRecord: int getChannelCount()>
<android.telephony.CallAttributes$1: void <init>()>
<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater()>
<android.media.MediaFormat: java.lang.Number getNumber(java.lang.String)>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount(java.lang.String)>
<com.google.android.mms.pdu.AcknowledgeInd: int getReportAllowed()>
<android.hardware.camera2.CaptureRequest: java.util.Collection getTargets()>
<android.app.IActivityController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[],int,int)>
<android.hardware.radio.IRadioService$Stub: android.hardware.radio.IRadioService asInterface(android.os.IBinder)>
<android.os.IVoldListener$Default: android.os.IBinder asBinder()>
<android.net.IConnectivityManager$Default: android.os.IBinder startOrGetTestNetworkService()>
<android.media.tv.DvbDeviceInfo: int describeContents()>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setAllCarriersAllowed()>
<android.content.pm.ShortcutQueryWrapper: long getChangedSince()>
<android.content.pm.IPackageManager$Stub$Proxy: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: android.util.Size getMinSize(android.util.Size,android.util.Size)>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)>
<android.service.notification.NotificationListenerService: java.util.List getNotificationChannels(java.lang.String,android.os.UserHandle)>
<android.app.SystemServiceRegistry$118: java.lang.Object createService()>
<android.graphics.Paint: float getUnderlineThickness()>
<android.telephony.IccOpenLogicalChannelResponse$1: android.telephony.IccOpenLogicalChannelResponse createFromParcel(android.os.Parcel)>
<android.service.persistentdata.IPersistentDataBlockService$Default: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getPackageName()>
<com.android.internal.telephony.ITelephony$Default: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)>
<android.service.notification.IConditionProvider$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.trust.IStrongAuthTracker$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.animation.BaseInterpolator: int getChangingConfiguration()>
<android.widget.Button: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Default: android.os.IBinder asBinder()>
<android.telephony.data.ApnSetting: int getAuthType()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4500()>
<android.location.ILocationManager$Stub$Proxy: java.lang.String[] getBackgroundThrottlingWhitelist()>
<com.android.internal.view.FloatingActionMode: java.lang.CharSequence getTitle()>
<android.graphics.fonts.FontStyle: int hashCode()>
<android.text.style.TextAppearanceSpan: android.graphics.Typeface getTypeface()>
<android.window.ITaskOrganizerController$Stub: android.os.IBinder asBinder()>
<android.content.pm.LauncherApps: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,android.os.UserHandle)>
<android.os.ISystemConfig$Stub$Proxy: java.util.List getDisabledUntilUsedPreinstalledCarrierApps()>
<android.hardware.face.IFaceService$Stub$Proxy: int revokeChallenge(android.os.IBinder)>
<android.content.pm.parsing.component.ParsedMainComponent: int getOrder()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.IInputMethodSession$Stub: android.os.IBinder asBinder()>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>
<android.location.GnssRequest: int describeContents()>
<android.app.servertransaction.TransactionExecutorHelper: int getClosestPreExecutionState(android.app.ActivityThread$ActivityClientRecord,int)>
<android.telephony.SmsCbCmasInfo: int getResponseType()>
<android.view.textclassifier.TextLinks$TextLink: int getEnd()>
<android.hardware.iris.IIrisService$Stub: android.hardware.iris.IIrisService getDefaultImpl()>
<android.net.NetworkProvider: int getProviderId()>
<android.webkit.IWebViewUpdateService$Stub: android.webkit.IWebViewUpdateService getDefaultImpl()>
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Stub: android.os.IBinder asBinder()>
<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
<android.view.GhostView: android.view.GhostView getGhost(android.view.View)>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationHistory getNotificationHistory(java.lang.String,java.lang.String)>
<com.android.internal.widget.LockscreenCredential: int hashCode()>
<android.widget.LinearLayout: int getLocationOffset(android.view.View)>
<android.text.MeasuredParagraph: float getWholeWidth()>
<android.location.IBatchedLocationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Default: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)>
<android.hardware.ICamera$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean isManagedKiosk()>
<android.content.pm.IOnAppsChangedListener$Default: android.os.IBinder asBinder()>
<android.net.Ikev2VpnProfile: int getMaxMtu()>
<com.android.internal.infra.AndroidFuture: int describeContents()>
<android.location.GpsNavigationMessageEvent: int describeContents()>
<android.net.INetworkPolicyManager$Default: java.lang.String getSubscriptionPlansOwner(int)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
<android.content.ClipData: android.graphics.Bitmap getIcon()>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int loadModel(android.media.soundtrigger_middleware.SoundModel)>
<android.content.pm.ILauncherApps$Stub: android.os.IBinder asBinder()>
<android.os.PowerManager: boolean isScreenOn()>
<android.content.res.AssetManager$AssetInputStream: int read()>
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastForegroundProxyInfo(int)>
<android.provider.ContactsContract$CommonDataKinds$Organization: int getTypeLabelResource(int)>
<android.webkit.WebView: android.webkit.WebChromeClient getWebChromeClient()>
<android.graphics.drawable.BitmapDrawable: int getAlpha()>
<android.app.IUserSwitchObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>
<android.media.AudioManager: boolean isAudioServerRunning()>
<android.content.pm.Signature: android.content.pm.Signature[] getChainSignatures()>
<android.telephony._$$Lambda$CarrierRestrictionRules$LmZXhiwgp1w_MAHEuZsMgdCVMiU: java.lang.Object apply(java.lang.Object)>
<android.view.MotionEvent: float getSize()>
<com.android.internal.widget.ScrollBarUtils: int getThumbLength(int,int,int,int)>
<android.view.accessibility.CaptioningManager$CaptionStyle: android.graphics.Typeface getTypeface()>
<android.media.MediaTimestamp: long getAnchorSystemNanoTime()>
<android.hardware.display.ColorDisplayManager: boolean isSaturationActivated()>
<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>
<android.hardware.cas.V1_1.ICas$Proxy: int hashCode()>
<android.telephony.TelephonyManager: void resetCarrierKeysForImsiEncryption()>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.app.timezonedetector.ITimeZoneDetectorService asInterface(android.os.IBinder)>
<android.app.NotificationManager: boolean isNotificationPolicyAccessGranted()>
<android.app.timezone.RulesState: int getDistroStatus()>
<android.service.carrier.CarrierIdentifier: int getCarrierId()>
<android.app.slice.SliceManager: java.util.Set getPinnedSpecs(android.net.Uri)>
<android.graphics.drawable.VectorDrawable: float getPixelSize()>
<android.os.IDumpstate$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.location.IContextHubTransactionCallback$Stub: android.hardware.location.IContextHubTransactionCallback asInterface(android.os.IBinder)>
<android.telephony.SubscriptionPlan: int[] getNetworkTypes()>
<android.view.LayoutInflater: android.content.Context getContext()>
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getReadPermission()>
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowedByUser()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: android.os.IBinder asBinder()>
<android.database.CursorWrapper: boolean isBeforeFirst()>
<android.app.usage.StorageStatsManager: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.lang.String,android.os.UserHandle)>
<android.telephony.RadioAccessFamily: int getPhoneId()>
<android.app.Notification$MessagingStyle$Message: java.lang.String getDataMimeType()>
<android.net.LocalSocketImpl$SocketInputStream: int available()>
<android.view.inputmethod.InlineSuggestionsRequest: int hashCode()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(int)>
<android.security.keystore.IKeystoreService$Default: long getmtime(java.lang.String,int)>
<com.android.internal.os.Zygote: int getUsapPoolCount()>
<android.hardware.location.ContextHubInfo: float getStoppedPowerDrawMw()>
<android.net.ITestNetworkManager$Stub: android.os.IBinder asBinder()>
<android.media.tv.ITvInputManager$Default: java.util.List getHardwareList()>
<android.media.session.PlaybackState: android.os.Bundle getExtras()>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>
<com.android.internal.widget.LockPatternUtils: int getCurrentFailedPasswordAttempts(int)>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>
<android.net.IConnectivityManager$Default: java.lang.String getCaptivePortalServerUrl()>
<android.view.View: java.lang.CharSequence getAccessibilityClassName()>
<com.android.internal.policy.IShortcutService$Stub: com.android.internal.policy.IShortcutService asInterface(android.os.IBinder)>
<android.view.textclassifier.TextClassification$Request: android.os.LocaleList getDefaultLocales()>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()>
<android.location.ILocationManager$Default: java.util.List getTestProviderCurrentRequests(java.lang.String)>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>
<android.telecom.ParcelableCallAnalytics: int getCallTechnologies()>
<android.content.res.AssetManager: int access$800(long,byte[],int,int)>
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsg()>
<android.print.IPrintServicesChangeListener$Default: android.os.IBinder asBinder()>
<android.permission.PermissionManager: int access$100(java.lang.String,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isApnMetered(int,int)>
<android.content.pm.PackageInstaller$SessionInfo: int describeContents()>
<android.app.assist.AssistStructure$ViewNode: java.lang.CharSequence getContentDescription()>
<com.android.internal.telephony.ITelephony$Default: boolean isManualNetworkSelectionAllowed(int)>
<android.net.IpSecConfig: int getEncapSocketResourceId()>
<android.location.LocationManager: java.lang.String getGnssHardwareModelName()>
<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry: android.hardware.camera2.legacy.BurstHolder getBurstHolder()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()>
<android.app.ActivityThread: android.app.servertransaction.TransactionExecutor getTransactionExecutor()>
<android.transition.ChangeTransform$PathAnimatorMatrix: android.graphics.Matrix getMatrix()>
<android.os.DropBoxManager$Entry: java.lang.String getTag()>
<android.app.WallpaperInfo: java.lang.String getServiceName()>
<android.content.pm.ShortcutManager: int getMaxShortcutCountForActivity()>
<com.android.internal.telephony.ITelephony$Default: boolean nvWriteItem(int,java.lang.String)>
<android.os.Binder: int getCallingUidOrThrow()>
<android.hardware.HardwareBuffer: long getUsage()>
<android.app.prediction.IPredictionManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.security.keystore.KeyGenParameterSpec: javax.security.auth.x500.X500Principal getCertificateSubject()>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)>
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)>
<android.app.UiModeManager: int getCurrentModeType()>
<android.app.IActivityTaskManager$Default: android.graphics.Rect getTaskBounds(int)>
<android.print.IPrinterDiscoveryObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.Magnifier: android.graphics.Bitmap getOriginalContent()>
<android.os.IVibratorStateListener$Stub: android.os.IVibratorStateListener getDefaultImpl()>
<android.app.IActivityController$Default: android.os.IBinder asBinder()>
<android.view.WindowManagerGlobal: java.lang.String[] getViewRootNames()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub: android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback getDefaultImpl()>
<android.companion.IFindDeviceCallback$Stub: android.companion.IFindDeviceCallback asInterface(android.os.IBinder)>
<android.os.IInstalld$Stub: android.os.IInstalld getDefaultImpl()>
<android.view.ImeFocusController: android.view.View getNextServedView()>
<android.view.textclassifier.TextLinks$Request: int describeContents()>
<android.util.KeyValueListParser$IntValue: int getValue()>
<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>
<android.hardware.IConsumerIrService$Stub: android.hardware.IConsumerIrService asInterface(android.os.IBinder)>
<android.app.IWallpaperManagerCallback$Stub: android.os.IBinder asBinder()>
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: int getId()>
<android.os.PowerManager: boolean isRebootingUserspaceSupported()>
<android.net.lowpan.ILowpanManagerListener$Stub: java.lang.String getTransactionName(int)>
<android.service.notification.ZenPolicy: int getVisualEffectAmbient()>
<android.hardware.radio.V1_5.OptionalCsgInfo: int hashCode()>
<android.widget.AutoCompleteTextView: int getListSelection()>
<android.app.WindowConfiguration: int compareTo(java.lang.Object)>
<android.text.Layout$SpannedEllipsizer: int getSpanStart(java.lang.Object)>
<android.net.wifi.nl80211.IApInterface$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ActivityTransitionState: int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator)>
<android.view.Window: int getForcedWindowFlags()>
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()>
<android.telephony.CellIdentityWcdma: int getPsc()>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.app.NotificationManager: android.service.notification.ZenModeConfig getZenModeConfig()>
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>
<com.android.ims.internal.IImsVideoCallCallback$Stub: com.android.ims.internal.IImsVideoCallCallback asInterface(android.os.IBinder)>
<android.view.IWindowSessionCallback$Default: android.os.IBinder asBinder()>
<android.print.PrinterInfo: int describeContents()>
<android.view.textclassifier.ConversationAction: java.lang.String getType()>
<android.view.contentcapture.IDataShareWriteAdapter$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.IProcessObserver$Stub: android.app.IProcessObserver asInterface(android.os.IBinder)>
<android.os.Environment: java.io.File getSystemExtDirectory()>
<android.renderscript.Element: java.lang.String getSubElementName(int)>
<android.location.IGnssStatusListener$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SignalStrength: int getGsmAsuLevel()>
<android.widget.AbsListView: boolean isVerticalScrollBarHidden()>
<android.net.ConnectivityManager: int checkMobileProvisioning(int)>
<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean,int)>
<android.security.keystore.IKeystoreExportKeyCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsInstantApp(boolean)>
<android.view.View: float getTransitionAlpha()>
<android.util.SparseLongArray: int indexOfValue(long)>
<android.hardware.radio.V1_5.CellIdentityTdscdma: int hashCode()>
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.telephony.ims.aidl.IImsSmsListener getDefaultImpl()>
<android.app.ApplicationPackageManager: boolean isPackageSuspended(java.lang.String)>
<android.app.IWallpaperManagerCallback$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.ProgramSelector$Identifier: int getType()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getTasks(int)>
<android.widget.Editor$InsertionHandleView: boolean isShowing()>
<android.app.IActivityTaskManager$Stub$Proxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.permission.IPermissionController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String[] getSerialPorts()>
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageClass()>
<android.telephony.CellIdentityNr: int getChannelNumber()>
<android.content.pm.Signature: int getFlags()>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>
<android.provider.ContactsContract$CommonDataKinds$Im: int getTypeLabelResource(int)>
<android.telephony.CellIdentityTdscdma$1: android.telephony.CellIdentityTdscdma createFromParcel(android.os.Parcel)>
<android.media.tv.ITvInputManager$Stub$Proxy: int getTvInputState(java.lang.String,int)>
<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ViewRootImpl: int getLastTouchSource()>
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int)>
<android.telephony.SmsCbCmasInfo: int getUrgency()>
<android.graphics.drawable.TransitionDrawable$TransitionState: int getChangingConfigurations()>
<android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>
<android.hardware.radio.IAnnouncementListener$Default: android.os.IBinder asBinder()>
<android.app.IActivityController$Default: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>
<android.hardware.cas.V1_0.IMediaCasService$Proxy: int hashCode()>
<android.view.VelocityTracker: float getXVelocity()>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.view.View: float getTopFadingEdgeStrength()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>
<android.media.session.IOnVolumeKeyLongPressListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.telephony.ims.aidl.IRcsUceControllerCallback asInterface(android.os.IBinder)>
<android.permission.IPermissionManager$Stub$Proxy: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)>
<android.media.SyncParams: int getSyncSource()>
<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()>
<android.app.Notification$Action: android.app.Notification$Action clone()>
<android.location.Criteria: int access$102(android.location.Criteria,int)>
<android.os.IIncidentDumpCallback$Stub: android.os.IIncidentDumpCallback getDefaultImpl()>
<android.net.lowpan.LowpanInterface: boolean isConnected()>
<android.security.keystore.recovery.KeyChainSnapshot: int describeContents()>
<android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener getDefaultImpl()>
<android.text.AutoGrowArray$ByteArray: int size()>
<android.app.trust.ITrustManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AsyncNotedAppOp: int getNotingUid()>
<android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager$RemoteUserInfo)>
<android.app.job.JobParameters: int[] getJobStopReasonCodes()>
<android.app.job.JobInfo: android.content.ComponentName getService()>
<android.widget.AbsListView: int getChoiceMode()>
<android.text.Layout: int getEndHyphenEdit(int)>
<android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource: int getDataSize()>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()>
<android.view.IInputMonitorHost$Stub: java.lang.String getTransactionName(int)>
<android.app.IUriGrantsManager$Default: android.os.IBinder asBinder()>
<android.telephony.VoiceSpecificRegistrationInfo: boolean equals(java.lang.Object)>
<android.graphics.drawable.VectorDrawable$VFullPath$7: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.hardware.ICameraService$Default: java.lang.String getLegacyParameters(int)>
<android.app.admin.IDevicePolicyManager$Default: boolean getBluetoothContactSharingDisabledForUser(int)>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: java.lang.String[] setDistractingPackageRestrictions(java.lang.String[],int)>
<android.telephony.SmsMessage: long getTimestampMillis()>
<android.media.IMediaRouterService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.BasicShellCommandHandler: java.io.InputStream getBufferedInputStream()>
<android.os.IThermalService$Stub: android.os.IThermalService asInterface(android.os.IBinder)>
<android.content.pm.parsing.result.ParseTypeImpl: int getErrorCode()>
<android.view.MotionEvent: float getTouchMajor()>
<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$Callback,android.os.Handler)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getAudioTurnedOnTimer()>
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioManager: java.util.List getActiveRecordingConfigurations()>
<android.telephony.CellSignalStrengthTdscdma$1: void <init>()>
<android.content.pm.PackageParser: int getActivityConfigChanges(int,int)>
<android.os.connectivity.WifiBatteryStats: long getNumPacketsRx()>
<android.app.AppOpsManager$HistoricalUidOps: android.app.AppOpsManager$HistoricalPackageOps getPackageOps(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDoze()>
<android.media.IAudioService$Default: int[] getSupportedSystemUsages()>
<android.widget.RemoteViews$ReflectionAction: java.lang.String getUniqueKey()>
<android.os.SystemUpdateManager: android.os.Bundle retrieveSystemUpdateInfo()>
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>
<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.SyncNotedAppOp: int hashCode()>
<android.text.StaticLayout: int getParagraphDirection(int)>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getServicesSystemSharedLibraryPackageName()>
<android.content.pm.IPackageManager$Default: java.lang.String getAttentionServicePackageName()>
<android.app.usage.StorageStatsManager: boolean isReservedSupported(java.util.UUID)>
<android.widget.TextView: int getFirstBaselineToTopHeight()>
<android.content.res.XmlBlock$Parser: int getEventType()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledProvidersForProfile(int,int,java.lang.String)>
<android.hardware.camera2.params.SessionConfiguration: int getSessionType()>
<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.ColorSpace$Rgb: float[] getTransform()>
<android.os.IUserManager$Default: java.lang.String getSeedAccountName()>
<android.text.DynamicLayout: int getParagraphDirection(int)>
<android.content.res.Resources$Theme: android.content.res.Resources getResources()>
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)>
<android.media.AudioTrack: int write(float[],int,int,int)>
<android.hardware.usb.IUsbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener getDefaultImpl()>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener asInterface(android.os.IBinder)>
<android.app.Notification$Action$WearableExtender: boolean getHintLaunchesActivity()>
<android.hardware.radio.V1_0.CellInfoLte: int hashCode()>
<android.os.IncidentManager$PendingReport: android.net.Uri getUri()>
<com.android.internal.util.StateMachine$SmHandler: int access$2200(com.android.internal.util.StateMachine$SmHandler)>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace getSource()>
<android.os.BatteryProperty: int describeContents()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getMaxKeyphrases()>
<android.content.IOnPrimaryClipChangedListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.SmsMessageBase: void <clinit>()>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>
<android.telephony.CellSignalStrengthGsm: android.telephony.CellSignalStrength copy()>
<android.graphics.text.MeasuredText: int getMemoryUsage()>
<android.text.DynamicLayout: int getLineDescent(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)>
<android.app.slice.SliceItem: long getTimestamp()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice getAppStandbyBuckets(java.lang.String,int)>
<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>
<android.os.Vibrator: int getDefaultNotificationVibrationIntensity()>
<android.hardware.camera2.legacy.RequestHolder: int numJpegTargets()>
<android.net.IConnectivityManager$Stub$Proxy: int getRestoreDefaultNetworkDelay(int)>
<android.view.textclassifier.SelectionEvent: int hashCode()>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>
<android.hardware.Sensor: int getMaxLengthValuesArray(android.hardware.Sensor,int)>
<com.android.internal.telephony.ISub$Default: int getEnabledSubscriptionId(int)>
<android.app.TaskInfo: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(boolean)>
<android.telephony.ICellInfoCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.ParcelFileDescriptor: int detachFd()>
<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
<android.telephony.SignalStrength: int getLteLevel()>
<android.telephony.SignalStrength$1: android.telephony.SignalStrength[] newArray(int)>
<android.media.ExifInterface: byte[] getThumbnailBytes()>
<android.view.View: int getImportantForContentCapture()>
<android.view.InputEventReceiver: android.os.IBinder getToken()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getSystemPowerWhitelist()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)>
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAllStackInfosOnDisplay(int)>
<android.location.Country: java.lang.String getCountryIso()>
<android.hardware.cas.V1_1.ICasListener$Stub: java.util.ArrayList interfaceChain()>
<com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getSmsApplicationData(java.lang.String,android.content.Context)>
<com.android.ims.internal.IImsEcbm$Stub: com.android.ims.internal.IImsEcbm asInterface(android.os.IBinder)>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo1Callback asInterface(android.os.IBinder)>
<android.view.PointerIcon: int describeContents()>
<android.widget.AbsListView: int getVerticalScrollbarWidth()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,java.lang.String,int)>
<android.content.UndoManager: java.lang.CharSequence getRedoLabel(android.content.UndoOwner[])>
<android.widget.AbsListView: int getBottomPaddingOffset()>
<android.app.PendingIntent: java.lang.String getTag(java.lang.String)>
<android.security.keymaster.KeyCharacteristics: java.util.Date getDate(int)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBitrateRange()>
<android.metrics.LogMaker: android.util.SparseArray getEntries()>
<android.media.AudioFormat: int getSampleRate()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: int getFeatureState()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.CallForwardingInfo getCallForwarding(int,int)>
<android.content.res.XmlBlock$Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.telephony.TelephonyManager: boolean isApplicationOnUicc(int)>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IMediaRouterService$Stub$Proxy: android.media.RoutingSessionInfo getSystemSessionInfo()>
<android.hardware.radio.RadioManager$BandDescriptor: int getLowerLimit()>
<android.app.Notification$Style: android.widget.RemoteViews makeBigContentView()>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>
<android.view.ThreadedRenderer: int getWidth()>
<android.hardware.display.DisplayManagerGlobal: android.graphics.ColorSpace getPreferredWideGamutColorSpace()>
<android.view.inputmethod.InputMethodSubtypeArray: int getCount()>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowed(java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()>
<android.telephony._$$Lambda$Vaai8Sbs2IpNs9Mr8tx6u3YoWp4: java.lang.Object applyOrThrow(java.lang.Object,java.lang.Object)>
<android.os.VibrationEffect: android.os.VibrationEffect get(int)>
<android.content.pm.SharedLibraryInfo: int describeContents()>
<android.content.IntentFilter: int countStaticDataTypes()>
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)>
<com.android.internal.app.IAppOpsCallback$Stub: com.android.internal.app.IAppOpsCallback getDefaultImpl()>
<android.media.projection.IMediaProjectionWatcherCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.om.OverlayInfo: java.lang.String getPackageName()>
<android.location.Location: float getSpeed()>
<android.os.RecoverySystem$1: int read(byte[],int,int)>
<android.app.DisabledWallpaperManager: android.graphics.Bitmap getBitmapAsUser(int,boolean)>
<android.net.IEthernetServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SubscriptionManager: void removeSubscriptionInfoRecord(java.lang.String,int)>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String)>
<android.graphics.drawable.VectorDrawable$VPath: java.lang.String getPathName()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getCodePath()>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>
<com.android.internal.os.RpmStats: com.android.internal.os.RpmStats$PowerStatePlatformSleepState getAndUpdatePlatformState(java.lang.String,long,int)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$302(android.hardware.camera2.legacy.LegacyFocusStateMapper,int)>
<android.telephony.CellInfoTdscdma: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.telephony.CellConfigLte$1: void <init>()>
<android.app.IWindowToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.Display$HdrCapabilities: int[] getSupportedHdrTypes()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: com.android.internal.app.IVoiceInteractionSessionShowCallback getDefaultImpl()>
<com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager asInterface(android.os.IBinder)>
<android.hardware.radio.V1_0.CellInfoCdma: int hashCode()>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getYOffsetMm()>
<android.hardware.camera2.legacy.CameraDeviceState: int access$100(android.hardware.camera2.legacy.CameraDeviceState)>
<android.app.Notification$BubbleMetadata: java.lang.String getShortcutId()>
<android.view.accessibility.AccessibilityCache: android.util.SparseArray getWindowsOnAllDisplays()>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.storage.StorageManager$ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)>
<android.location.IGnssNavigationMessageListener$Stub: android.os.IBinder asBinder()>
<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int)>
<android.window.WindowContainerTransaction$Change: android.graphics.Rect getEnterPipBounds()>
<android.app.IActivityTaskManager$Stub$Proxy: int getPackageScreenCompatMode(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getSecondaryUsers(android.content.ComponentName)>
<android.app.backup.IBackupManagerMonitor$Stub: android.os.IBinder asBinder()>
<android.media.AudioTrack: int write(short[],int,int)>
<android.hardware.Camera$Parameters: int getInt(java.lang.String)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: boolean isInEmergencyCall()>
<android.net.Uri$StringUri: java.lang.String getScheme()>
<android.os.IIncidentCompanion$Stub: android.os.IIncidentCompanion getDefaultImpl()>
<android.content.res.AssetManager$AssetInputStream: long getNativeAsset()>
<android.media.AudioManager: int[] getSupportedSystemUsages()>
<android.net.NetworkCapabilities: int[] getUnwantedCapabilities()>
<android.hardware.lights.ILightsManager$Stub$Proxy: java.util.List getLights()>
<android.util.KeyValueListParser$FloatValue: float getDefaultValue()>
<android.hardware.hdmi.IHdmiControlService$Default: boolean getSystemAudioMode()>
<android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection getDefaultImpl()>
<android.media.audiopolicy.AudioProductStrategy: int getLegacyStreamTypeForStrategyWithAudioAttributes(android.media.AudioAttributes)>
<android.net.NetworkAgentConfig: java.lang.String getLegacyExtraInfo()>
<android.telephony.CellSignalStrengthWcdma: boolean isValid()>
<android.view.ViewGroup: int getLayoutMode()>
<android.app.assist.AssistStructure$ViewNode: float getTextSize()>
<android.view.MotionEvent: float getToolMajor(int)>
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>
<android.app.ApplicationPackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo,android.os.storage.StorageManager,android.content.pm.IPackageManager)>
<android.media.audiopolicy.AudioMix: int getMixType()>
<com.android.internal.util.AsyncService: android.os.IBinder onBind(android.content.Intent)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForPackage(java.lang.String,android.os.UserHandle)>
<android.media.ExifInterface: boolean getLatLong(float[])>
<com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService getDefaultImpl()>
<android.hardware.camera2.utils.SubmitInfo: int getRequestId()>
<android.service.notification.ZenModeConfig: android.content.ComponentName getEventConditionProvider()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>
<android.app.backup.IBackupCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IAssistDataReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>
<android.permission.IPermissionManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.marshal.Marshaler: int getNativeType()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>
<android.net.wifi.nl80211.IClientInterface$Default: android.net.wifi.nl80211.IWifiScannerImpl getWifiScannerImpl()>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUser(java.lang.String,android.os.UserHandle)>
<android.content.ContentResolver$UriResultListener: android.net.Uri getResultFromBundle(android.os.Bundle)>
<android.view.Window: android.transition.Transition getEnterTransition()>
<android.view.InputDevice$MotionRange: float getMin()>
<android.hardware.SensorManager: android.hardware.SensorDirectChannel createDirectChannel(android.hardware.HardwareBuffer)>
<com.android.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()>
<android.hardware.radio.TunerAdapter: android.graphics.Bitmap getMetadataImage(int)>
<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: android.util.SparseArray getAllUidCpuFreqTimeMs()>
<android.os.health.HealthStats: int getMeasurementKeyAt(int)>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: android.os.IBinder asBinder()>
<android.view.animation.LayoutAnimationController: int getOrder()>
<android.os.IDeviceIdleController$Default: java.lang.String[] getFullPowerWhitelist()>
<android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>
<android.view.View$12: java.lang.Object get(java.lang.Object)>
<android.graphics.Paint: int getBidiFlags()>
<android.content.pm.PackageUserState: java.lang.String[] getAllOverlayPaths()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: java.lang.String getTransactionName(int)>
<android.widget.Spinner: int getDropDownVerticalOffset()>
<android.net.wifi.nl80211.ChannelSettings: int hashCode()>
<android.media.MediaCodecInfo$EncoderCapabilities: android.util.Range getQualityRange()>
<android.net.TelephonyNetworkSpecifier: int getSubscriptionId()>
<android.app.prediction.AppTargetId: int hashCode()>
<com.android.internal.app.AlertController: android.widget.Button getButton(int)>
<com.android.internal.telephony.ITelephony$Default: int getImsProvisioningInt(int,int)>
<android.security.net.config.WfaCertificateSource: java.util.Set getCertificates()>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>
<android.filterfw.core.Frame: long getTimestamp()>
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int queryCapabilityStatus()>
<android.hardware.IConsumerIrService$Stub$Proxy: int[] getCarrierFrequencies()>
<android.os.UserManager: android.graphics.Bitmap getUserIcon()>
<android.graphics.text.LineBreaker$ParagraphConstraints: int getFirstWidthLineCount()>
<android.app.ActivityManager$TaskDescription: int describeContents()>
<android.location.GnssClock: double getBiasNanos()>
<android.filterfw.core.FrameFormat: int getDepth()>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: android.view.contentcapture.DataShareWriteAdapter getAdapter(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object getPhysicalCameraKey(android.hardware.camera2.CaptureRequest$Key,java.lang.String)>
<com.android.internal.compat.IPlatformCompat$Default: int enableTargetSdkChanges(java.lang.String,int)>
<android.view.inputmethod.InlineSuggestionsRequest: java.lang.String getHostPackageName()>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
<android.content.res.ResourcesImpl: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<android.media.session.PlaybackState: long getPosition()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String)>
<android.window.IWindowContainerToken$Stub: android.window.IWindowContainerToken getDefaultImpl()>
<android.os.Environment: java.io.File getProductServicesDirectory()>
<android.view.SurfaceControl: int getActiveConfig(android.os.IBinder)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<android.view.IWindow$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.SubtitleData: int getTrackIndex()>
<android.os.Bundle: android.util.Size getSize(java.lang.String)>
<android.media.AudioRecord: int getNotificationMarkerPosition()>
<android.os.IRemoteCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.PackageInstaller$SessionInfo: int getOriginatingUid()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()>
<android.webkit.WebView: android.os.Looper getWebViewLooper()>
<android.app.AppOpsManager$OpEntry: long getTime()>
<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>
<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>
<android.hardware.camera2.CameraCaptureSession: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<com.android.internal.widget.ILockSettings$Default: int[] getRecoverySecretTypes()>
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()>
<android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)>
<android.telephony.SmsMessage: int getIndexOnSim()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.security.GateKeeper: long getSecureUserId()>
<android.os.CoolingDevice: long getValue()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int attestDeviceIds(android.security.keystore.IKeystoreCertificateChainCallback,android.security.keymaster.KeymasterArguments)>
<android.hardware.camera2.params.OutputConfiguration: java.util.List getSurfaces()>
<android.view.WindowAnimationFrameStats: int describeContents()>
<android.content.pm.parsing.ParsingPackageImpl: int getFullBackupContent()>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>
<android.widget.Magnifier: int getSourceHeight()>
<android.app.usage.UsageEvents$Event: java.lang.String getLocusId()>
<android.app.ActionBar: float getElevation()>
<android.text.PrecomputedText: int findParaIndex(int)>
<com.android.ims.internal.IImsUtListener$Stub: android.os.IBinder asBinder()>
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.widget.TextView: android.view.autofill.AutofillValue getAutofillValue()>
<android.view.KeyCharacterMap: char getMatch(int,char[])>
<com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub getDefaultImpl()>
<android.telephony.CellSignalStrength: int getEcNoDbFromAsu(int)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams)>
<android.net.ITetheringStatsProvider$Stub$Proxy: android.net.NetworkStats getTetherStats(int)>
<android.os.UserManager: java.util.List getAllProfiles()>
<com.android.internal.graphics.palette.ColorCutQuantizer: java.util.List getQuantizedColors()>
<android.media.midi.MidiInputPort: java.io.FileDescriptor claimFileDescriptor()>
<android.os.MemoryFile: java.io.InputStream getInputStream()>
<android.app.DirectAction: int hashCode()>
<android.widget.TextView: float getLineSpacingMultiplier()>
<android.security.keystore.IKeystoreExportKeyCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.health.HealthStats: int getTimersKeyCount()>
<android.graphics.drawable.Icon: java.lang.String getResPackage()>
<android.media.RemoteControlClient: int access$600(android.media.RemoteControlClient)>
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()>
<com.android.ims.internal.IImsCallSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IRemoteAnimationFinishedCallback$Stub: android.os.IBinder asBinder()>
<android.util.LongSparseLongArray: long get(long,long)>
<android.telephony._$$Lambda$0NbX5ZB4Wdogc_DUyrSlzFoDHvU: java.lang.Object applyOrThrow(java.lang.Object)>
<android.telephony._$$Lambda$NetworkRegistrationInfo$1JuZmO5PoYGZY8bHhZYwvmqwOB0: java.lang.Object apply(java.lang.Object)>
<android.content.res.AssetManager: int addAssetPath(java.lang.String)>
<android.media.MediaDescription: int describeContents()>
<android.hardware.location.ContextHubTransaction: int getType()>
<android.app.DisabledWallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int,int)>
<com.android.internal.os.BatteryStatsHistory: int getHistoryUsedSize()>
<android.security.keystore.IKeystoreService$Default: int isEmpty(int)>
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>
<android.view.animation.Animation: boolean getDetachWallpaper()>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getDefaultTextClassifierPackageName()>
<android.media.MediaPlayer: android.media.MediaPlayer$DrmInfo getDrmInfo()>
<com.android.internal.view.menu.MenuPopup: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.os.incremental.IIncrementalService$Stub$Proxy: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)>
<android.graphics.drawable.Drawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>
<android.app.admin.DnsEvent: int describeContents()>
<android.util.proto.ProtoInputStream: byte[] readBytes(long)>
<android.view.Surface: int getGenerationId()>
<android.os.storage.IStorageManager$Default: java.lang.String getPrimaryStorageUuid()>
<android.view.textclassifier.TextLinks$TextLink: int describeContents()>
<android.service.autofill.UserData: java.lang.String getFieldClassificationAlgorithmForCategory(java.lang.String)>
<android.hardware.camera2.CaptureRequest: int getReprocessableSessionId()>
<android.service.persistentdata.IPersistentDataBlockService$Default: int getDataBlockSize()>
<android.os.UserManager: int getUserBadgeResId(int)>
<android.app.backup.IFullBackupRestoreObserver$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Color: android.graphics.ColorSpace$Model getModel()>
<android.text.style.SuggestionSpan: int getFlags()>
<android.security.keystore.IKeystoreService$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.res.Resources$ThemeKey: android.content.res.Resources$ThemeKey clone()>
<android.app.Dialog: android.content.Context getContext()>
<android.widget.TextView: int getSelectionEnd()>
<android.view.contentcapture.IDataShareWriteAdapter$Default: android.os.IBinder asBinder()>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentId(java.lang.String)>
<android.os.storage.DiskInfo: int hashCode()>
<android.content.IIntentReceiver$Stub: android.content.IIntentReceiver getDefaultImpl()>
<android.text.method.DateTimeKeyListener: int getInputType()>
<android.media.MediaPlayer$TrackInfo: int getTrackType()>
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read()>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(android.content.Context,int,java.lang.String)>
<android.view.autofill.AutofillPopupWindow$2: int getLayoutDirection()>
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderResponse waitForAndGetProvider()>
<android.media.WebVttParser: int parseIntPercentage(java.lang.String)>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo2Callback asInterface(android.os.IBinder)>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>
<android.hardware.camera2.impl.CameraMetadataNative$3: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<com.android.internal.policy.DecorView: int getCaptionInsetsHeight()>
<android.content.pm.ILauncherApps$Default: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,java.lang.String,int)>
<android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback getDefaultImpl()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.hardware.display.WifiDisplaySessionInfo: int getSessionId()>
<android.view.View: android.os.IBinder getApplicationWindowToken()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)>
<android.location.LocationManager: android.location.Location getLastLocation()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubInfo getContextHubInfo(int)>
<android.app.blob.BlobStoreManager$Session: long getSize()>
<android.os.UserManager: long getUserStartRealtime()>
<android.app.ApplicationPackageManager: java.util.List getAllIntentFilters(java.lang.String)>
<android.widget.ScrollView: int computeVerticalScrollOffset()>
<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)>
<android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener asInterface(android.os.IBinder)>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>
<android.os.UserManager: boolean isUserNameSet()>
<android.net.EthernetManager: java.util.ArrayList access$000(android.net.EthernetManager)>
<android.content.pm.parsing.ParsingPackageImpl: int getLargestWidthLimitDp()>
<android.window.IDisplayAreaOrganizer$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IImsConfig$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.EditorTouchState: float getLastUpX()>
<android.graphics.PointF: int hashCode()>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.IOverrideValidator getOverrideValidator()>
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IRcsFeatureListener getListener()>
<android.net.wifi.nl80211.IScanEvent$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>
<android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
<android.content.Intent: java.lang.String getIdentifier()>
<android.content.pm.parsing.result.ParseInput$DeferredError: int getTargetSdkForChange(long)>
<android.net.IpSecManager$UdpEncapsulationSocket: java.io.FileDescriptor getFileDescriptor()>
<android.util.ContainerHelpers: int binarySearch(long[],int,long)>
<android.content.pm.parsing.ParsingPackageImpl: int lambda$static$0(android.content.pm.parsing.component.ParsedMainComponent,android.content.pm.parsing.component.ParsedMainComponent)>
<android.filterfw.core.FrameFormat: int getLength()>
<android.view.AppTransitionAnimationSpec: int describeContents()>
<android.os.ParcelUuid: int describeContents()>
<android.os.UserManager$EnforcingUser: android.os.UserHandle getUserHandle()>
<android.telephony.TelephonyManager: boolean handlePinMmiForSubscriber(int,java.lang.String)>
<android.filterfw.core.Frame: int getBindingType()>
<com.android.internal.os.IDropBoxManagerService$Stub: com.android.internal.os.IDropBoxManagerService asInterface(android.os.IBinder)>
<android.os.incremental.IIncrementalService$Default: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)>
<android.os.Message: long getWhen()>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator: int compare(android.util.Size,android.util.Size)>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayColorTemperature()>
<android.app.assist.AssistStructure$WindowNode: int getWidth()>
<android.content.pm.LauncherApps$PinItemRequest: android.os.Bundle getExtras()>
<android.graphics.HardwareRenderer: int syncAndDrawFrame(android.graphics.FrameInfo)>
<android.content.rollback.IRollbackManager$Stub: android.os.IBinder asBinder()>
<android.hardware.cas.V1_0.ICas$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.widget.GridView: int findMotionRow(int)>
<android.renderscript.Int2: int length()>
<android.app.timedetector.ITimeDetectorService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellIdentityTdscdma: android.telephony.CellIdentityTdscdma createFromParcelBody(android.os.Parcel)>
<android.media.tv.TvInputInfo: int getHdmiConnectionRelativePosition()>
<android.view.textservice.SpellCheckerSubtype: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>
<android.graphics.BlendModeColorFilter: long createNativeInstance()>
<android.media.session.ISessionController$Default: android.media.session.MediaController$PlaybackInfo getVolumeAttributes()>
<android.text.util.Linkify$4: int compare(java.lang.Object,java.lang.Object)>
<android.net.TrafficStats: int getThreadStatsUid()>
<android.widget.TextView: int getExtendedPaddingBottom()>
<android.graphics.drawable.Icon: int getType()>
<android.util.StateSet: int[] get(int)>
<android.media.MediaCodecList: int getCodecCount()>
<android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int)>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<android.media.midi.MidiDeviceInfo$PortInfo: int getPortNumber()>
<com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings getDefaultImpl()>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>
<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>
<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.TextClassificationContext getEventContext()>
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getOpticalInsets()>
<android.telephony.SignalStrength: int getCdmaLevel()>
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>
<android.hardware.camera2.params.InputConfiguration: int hashCode()>
<android.media.session.PlaybackState: long getBufferedPosition()>
<com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.service.notification.ZenPolicy: int getPriorityCallSenders()>
<android.widget.RadioGroup: android.view.autofill.AutofillValue getAutofillValue()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>
<com.android.internal.view.IInputMethodClient$Default: android.os.IBinder asBinder()>
<android.os.Debug$MemoryInfo: int getSummarySystem()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>
<android.os.UserManager: boolean isManagedProfile()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getName()>
<android.os.incremental.IStorageHealthListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.RadioAccessSpecifier$1: android.telephony.RadioAccessSpecifier[] newArray(int)>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.os.IncidentManager$PendingReport: java.lang.String getRequestingPackage()>
<android.os.IDumpstateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.PackageStats: int describeContents()>
<android.app.NotificationManager: int getCurrentInterruptionFilter()>
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceInfo[] getDevices()>
<android.media.AudioRecord: int getTimestamp(android.media.AudioTimestamp,int)>
<android.window.IDisplayAreaOrganizerController$Stub: java.lang.String getTransactionName(int)>
<android.database.IContentObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.lowpan.ILowpanManager$Default: android.os.IBinder asBinder()>
<android.service.notification.ZenPolicy: int getVisualEffectFullScreenIntent()>
<android.location.IBatchedLocationCallback$Default: android.os.IBinder asBinder()>
<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>
<android.app.ActivityOptions: int getCustomEnterResId()>
<android.text.PrecomputedText: float getWidth(int,int)>
<android.os.image.DynamicSystemManager: android.os.image.IDynamicSystemService access$000(android.os.image.DynamicSystemManager)>
<android.media.session.ISessionManager$Default: java.util.List getSessions(android.content.ComponentName,int)>
<android.graphics.Paint: float getFontSpacing()>
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getVersion()>
<android.view.View: boolean getNotifiedContentCaptureAppeared()>
<android.os.FileUtils$1: int compare(java.lang.Object,java.lang.Object)>
<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>
<android.net.nsd.INsdManager$Stub: java.lang.String getTransactionName(int)>
<android.os.StatFs: long getAvailableBytes()>
<android.graphics.text.LineBreaker$Result: int getLineCount()>
<android.security.keystore.ArrayUtils: byte[] concat(byte[],int,int,byte[],int,int)>
<android.media.ExifInterface: byte[] getThumbnail()>
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsMmTelFeature getImsMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: int calculateMarshalSize(java.lang.Object)>
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>
<android.content.UndoManager: int countUndos(android.content.UndoOwner[])>
<android.accessibilityservice.GestureDescription$StrokeDescription: int getId()>
<android.os.IDumpstate$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.PhoneNumberRange$1: void <init>()>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)>
<android.content.pm.IShortcutChangeCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.app.AppOpsManager$OpEntry: long getLastRejectForegroundTime(int)>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>
<android.hardware.location.NanoAppBinary: byte getTargetChreApiMinorVersion()>
<android.graphics.drawable.GradientDrawable: int getOpacity()>
<android.os.Parcel: int getExceptionCode(java.lang.Throwable)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannelBySlot(int,int)>
<android.accounts.IAccountAuthenticatorResponse$Stub: android.os.IBinder asBinder()>
<android.content.integrity.IAppIntegrityManager$Default: java.util.List getWhitelistedRuleProviders()>
<android.renderscript.Element: int getSubElementArraySize(int)>
<android.media.midi.IMidiDeviceOpenCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.VectorDrawable$VGroup: float getScaleY()>
<android.security.KeyStore: int importWrappedKey(java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long,int,android.security.keymaster.KeyCharacteristics)>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallForward(int,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()>
<android.hardware.cas.V1_0.ICasListener$Proxy: int hashCode()>
<android.telephony.TelephonyManager: void call(java.lang.String,java.lang.String)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()>
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4)>
<android.net.shared.Inet4AddressUtils: int getImplicitNetmask(java.net.Inet4Address)>
<android.telephony.CellIdentityGsm$1: android.telephony.CellIdentityGsm[] newArray(int)>
<android.telephony.DataConnectionRealTimeInfo: long getTime()>
<android.app.ApplicationPackageManager: boolean isSafeMode()>
<android.provider.ContactsContract$StatusUpdates: int getPresencePrecedence(int)>
<android.view.accessibility.IWindowMagnificationConnection$Stub: android.os.IBinder asBinder()>
<android.graphics.GraphicBuffer: int getWidth()>
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session createSubsession(boolean)>
<android.hardware.radio.IAnnouncementListener$Stub: android.os.IBinder asBinder()>
<android.service.notification.SnoozeCriterion: java.lang.CharSequence getConfirmation()>
<android.security.KeyStore: int[] listUidsOfAuthBoundKeys()>
<android.content.pm.PackageParser: int lambda$parseBaseApplication$0(android.content.pm.PackageParser$Activity,android.content.pm.PackageParser$Activity)>
<android.view.View: long getDrawingTime()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()>
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManagerForSubscription(int)>
<android.telephony.TelephonyManager: boolean isMultiSimEnabled()>
<android.filterfw.core.VertexFrame: int getVboId()>
<android.net.NetworkCapabilities: int getSignalStrength()>
<android.app.IActivityManager$Stub$Proxy: boolean isInLockTaskMode()>
<android.text.MeasuredParagraph: int breakText(int,boolean,float)>
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.String getErrorMessage()>
<com.android.internal.view.IInputMethod$Stub: android.os.IBinder asBinder()>
<android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>
<android.net.ScoredNetwork: int hashCode()>
<android.os.StatFs: long getBlockCountLong()>
<android.os.connectivity.WifiBatteryStats: int describeContents()>
<com.android.internal.telecom.ITelecomService$Default: int getCallState()>
<android.net.INetworkScoreService$Stub: android.net.INetworkScoreService asInterface(android.os.IBinder)>
<android.net.lowpan.LowpanEnergyScanResult: int getChannel()>
<android.net.ISocketKeepaliveCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String[] getSupportedNetworkTypes()>
<android.graphics.Paint: int getEndHyphenEdit()>
<android.location.IGnssNavigationMessageListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ICarrierConfigLoader$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: boolean isFirstBoot()>
<android.media.MediaHTTPConnection: long getSize()>
<android.app.admin.IDevicePolicyManager$Default: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothScanBackgroundTimer()>
<android.text.PrecomputedText: android.text.PrecomputedText$ParagraphInfo[] getParagraphInfo()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.lang.String[] getCameraIdList()>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.ProgressBar: int getMaxWidth()>
<android.hardware.radio.RadioManager$BandDescriptor: int describeContents()>
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
<android.media.tv.TvInputHardwareInfo: int getCableConnectionStatus()>
<android.view.VerifiedKeyEvent: int getMetaState()>
<android.telephony.TelephonyManager: android.telephony.NetworkScan requestNetworkScan(android.telephony.NetworkScanRequest,android.telephony.TelephonyScanManager$NetworkScanCallback)>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)>
<android.hardware.Camera$Parameters: java.util.List getFocusAreas()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLongRaw()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<android.app.Notification$Action: boolean getAllowGeneratedReplies()>
<com.android.internal.util.ContrastColorUtil: com.android.internal.util.ContrastColorUtil getInstance(android.content.Context)>
<android.graphics.Canvas: int getDensity()>
<android.accessibilityservice.GestureDescription$MotionEventGenerator: java.util.List getGestureStepsFromGestureDescription(android.accessibilityservice.GestureDescription,int)>
<android.location.Location: double getAltitude()>
<android.widget.RemoteViews$MethodKey: int hashCode()>
<android.view.View: float getX()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegisteredPlmn(java.lang.String)>
<android.media.Metadata: byte[] getByteArray(int)>
<android.widget.TextView: android.text.Layout getLayout()>
<android.service.persistentdata.IPersistentDataBlockService$Default: int getFlashLockState()>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<android.service.voice.IVoiceInteractionSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String getParticipant()>
<android.telephony.ServiceState: int getBitmaskFromString(java.lang.String)>
<android.net.ConnectivityManager: java.util.HashMap access$800()>
<android.view.Display$HdrCapabilities: int hashCode()>
<android.print.IPrintManager$Stub: android.print.IPrintManager asInterface(android.os.IBinder)>
<com.android.internal.policy.PhoneWindow: android.view.View getNavigationBarBackgroundView()>
<android.telephony.SubscriptionInfo: boolean areUiccApplicationsEnabled()>
<android.hardware.cas.V1_0.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.os.HidlMemory: java.lang.String getName()>
<android.text.Layout: int getLineBottom(int)>
<android.hardware.camera2.params.StreamConfigurationDuration: long getDuration()>
<android.animation.AnimatorSet: boolean isInitialized()>
<android.graphics.drawable.ColorDrawable: int getOpacity()>
<android.graphics.RenderNode: float getRotationY()>
<android.util.SparseLongArray: int indexOfKey(int)>
<android.service.autofill.FieldClassification$Match: java.lang.String getCategoryId()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>
<android.hardware.hdmi.HdmiSwitchClient: java.util.List getPortInfo()>
<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>
<android.os.storage.DiskInfo: java.lang.String getId()>
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)>
<android.media.tv.TvStreamConfig: int access$302(android.media.tv.TvStreamConfig,int)>
<android.webkit.WebViewFactory: java.lang.Class getWebViewProviderClass(java.lang.ClassLoader)>
<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(android.util.Range)>
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdListNoLazy()>
<android.hardware.radio.RadioManager$ModuleProperties: int getNumAudioSources()>
<android.telephony.SmsCbMessage: int getMessageFormat()>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerName()>
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.view.View getDefaultView()>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>
<android.media.audiopolicy.AudioPolicy: int getFocusDuckingBehavior()>
<android.os.Debug: int getGlobalClassInitTime()>
<android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<android.widget.EditText: android.text.Editable getText()>
<android.app.Notification$WearableExtender: java.lang.String getDismissalId()>
<android.hardware.display.Time: java.time.LocalTime getLocalTime()>
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getPackageName()>
<android.view.View: int getDefaultSize(int,int)>
<com.android.internal.app.IAppOpsService$Default: android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.appwidget.IAppWidgetService$Default: android.os.Bundle getAppWidgetOptions(java.lang.String,int)>
<android.filterfw.core.Frame: long getBindingId()>
<android.media.AudioManager: int generateAudioSessionId()>
<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>
<android.app.AppOpsManager$OpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastForegroundProxyInfo(int)>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Default: android.os.IBinder asBinder()>
<android.widget.ListView: android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,java.util.function.Predicate,android.view.View)>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.telephony.NetworkScanRequest$1: android.telephony.NetworkScanRequest[] newArray(int)>
<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()>
<android.view.Display$Mode: float getRefreshRate()>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Default: android.os.IBinder asBinder()>
<android.service.euicc.EuiccProfileInfo: int getProfileClass()>
<android.media.AudioSystem: int getPlatformType(android.content.Context)>
<android.telephony.ims.aidl.IImsConfig$Stub: android.telephony.ims.aidl.IImsConfig getDefaultImpl()>
<android.hardware.IConsumerIrService$Default: android.os.IBinder asBinder()>
<android.util.proto.EncodedBuffer: int getWriteIndex()>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>
<android.app.prediction.AppTargetId: java.lang.String getId()>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: com.android.internal.telephony.euicc.IGetAllProfilesCallback getDefaultImpl()>
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.IRecentsAnimationRunner$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyScanManager: android.util.SparseArray access$000(android.telephony.TelephonyScanManager)>
<android.media.IMediaHTTPConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()>
<android.media.AudioTrack: int getNotificationMarkerPosition()>
<android.graphics.drawable.VectorDrawable$VectorDrawableState$1: java.lang.Float get(android.graphics.drawable.VectorDrawable$VectorDrawableState)>
<android.app.usage.ExternalStorageStats: long getTotalBytes()>
<android.view.ViewDebug$PropertyInfo: android.view.ViewDebug$PropertyInfo forMethod(java.lang.reflect.Method,java.lang.Class)>
<android.widget.SmartSelectSprite$RectangleWithTextSelectionLayout: int getTextSelectionLayout()>
<com.android.internal.app.IAppOpsNotedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.CrossProfileApps: java.util.List getTargetUserProfiles()>
<android.widget.OverScroller$SplineOverScroller: int access$400(android.widget.OverScroller$SplineOverScroller)>
<android.view.DisplayAdjustments$FixedRotationAdjustments: int hashCode()>
<android.view.WindowInsets$Type: int tappableElement()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCardIdForDefaultEuicc(int,java.lang.String)>
<android.location.IBatchedLocationCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.display.BrightnessConfiguration: float getShortTermModelUpperLuxMultiplier()>
<android.os.IBatteryPropertiesRegistrar$Default: android.os.IBinder asBinder()>
<android.text.AutoText: int getSize(android.view.View)>
<com.android.internal.telephony.ITelephony$Default: boolean hasIccCard()>
<android.hardware.Sensor: java.lang.String getName()>
<android.media.MediaDrm$Certificate: byte[] getContent()>
<android.hardware.camera2.CaptureResult: java.util.List getKeys()>
<android.app.IUiModeManager$Stub$Proxy: long getCustomNightModeEnd()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.text.DynamicLayout: int getBlockIndex(int)>
<android.widget.CheckedTextView: android.graphics.BlendMode getCheckMarkTintBlendMode()>
<android.hardware.camera2.params.OutputConfiguration: int getSurfaceGroupId()>
<com.android.internal.view.menu.IconMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] preceding(int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration$MarshalerStreamConfiguration: int getNativeSize()>
<android.content.pm.IPackageManager$Default: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.telephony.TelephonyManager: long getBitMaskForNetworkType(int)>
<android.telephony.TelephonyManager: boolean disableDataConnectivity()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryStorageVolume()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: android.hardware.display.Time getNightDisplayCustomEndTime()>
<android.telephony.SubscriptionPlan$Builder: android.telephony.SubscriptionPlan$Builder setDataLimit(long,int)>
<android.location.LocationProvider: java.lang.String getName()>
<android.app.prediction.AppTargetEvent: int getAction()>
<android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioAttributes: android.os.Bundle getBundle()>
<android.hardware.face.IFaceService$Stub: android.hardware.face.IFaceService asInterface(android.os.IBinder)>
<android.app.admin.DevicePolicyManager: java.util.Set getAffiliationIds(android.content.ComponentName)>
<android.telephony.CarrierRestrictionRules: int getMultiSimPolicy()>
<android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: com.android.internal.telephony.euicc.IGetEuiccChallengeCallback asInterface(android.os.IBinder)>
<android.content.pm.IPackageManager$Stub$Proxy: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.app.Activity: android.app.Activity getParent()>
<android.view.ISystemGestureExclusionListener$Stub: android.os.IBinder asBinder()>
<android.net.ITestNetworkManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.session.ISession$Stub: java.lang.String getTransactionName(int)>
<android.app.role.IOnRoleHoldersChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.CameraCharacteristics$Key: long getVendorId()>
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.media.Image: java.lang.Object getOwner()>
<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()>
<android.os.Debug$MemoryInfo: int getOtherRss(int)>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getUserInfo(int)>
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>
<android.app.WallpaperInfo: android.net.Uri getSettingsSliceUri()>
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag(int)>
<android.app.admin.DevicePolicyManager: boolean isAlwaysOnVpnLockdownEnabled()>
<com.android.internal.app.IAppOpsService$Default: int checkOperation(int,int,java.lang.String)>
<android.os.ICancellationSignal$Stub: java.lang.String getTransactionName(int)>
<android.net.TestNetworkManager: android.net.TestNetworkInterface createTunInterface(android.net.LinkAddress[])>
<android.hardware.usb.IUsbSerialReader$Stub: android.hardware.usb.IUsbSerialReader getDefaultImpl()>
<android.media.session.ISession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.statusbar.IStatusBar$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context)>
<android.hardware.input.InputManager: boolean isInputDeviceEnabled(int)>
<android.content.pm.PackagePartitions$SystemPartition: java.io.File getPrivAppFolder()>
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()>
<android.app.Notification: java.lang.String getSortKey()>
<com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession asInterface(android.os.IBinder)>
<android.net.LinkProperties: java.util.List getRoutes()>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
<android.telephony.CellIdentityWcdma: int getMnc()>
<android.media.IAudioService$Stub$Proxy: java.util.List getActiveRecordingConfigurations()>
<android.content.IIntentSender$Stub: java.lang.String getDefaultTransactionName(int)>
<android.service.notification.Condition: int describeContents()>
<android.app.IActivityTaskManager$Default: int getFrontActivityScreenCompatMode()>
<android.view.textservice.TextInfo: int getCookie()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getProfileOwnerName(int)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
<android.view.accessibility.AccessibilityRecord: int getScrollDeltaX()>
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getAlwaysOnVpnPackageForUser(int)>
<android.content.pm.IPinItemRequest$Stub: java.lang.String getTransactionName(int)>
<android.view.ViewRootImpl$ImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1500()>
<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()>
<android.app.usage.StorageStats: long getCacheBytes()>
<android.media.soundtrigger.SoundTriggerManager$Model: java.util.UUID getModelUuid()>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.UserHandle: int getCallingAppId()>
<android.media.MediaPlayer: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.Map)>
<android.hardware.SystemSensorManager: boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean)>
<com.android.internal.compat.IPlatformCompat$Stub: com.android.internal.compat.IPlatformCompat asInterface(android.os.IBinder)>
<android.telephony.PreciseDataConnectionState: int getLastCauseCode()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.net.wifi.nl80211.IClientInterface createClientInterface(java.lang.String)>
<android.os.RemoteCallbackList: android.os.IInterface getRegisteredCallbackItem(int)>
<android.telephony.TelephonyManager: boolean switchSlots(int[])>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$900()>
<android.telephony.PinResult$1: void <init>()>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(int)>
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: java.lang.String getSerialForPackage(java.lang.String,java.lang.String)>
<android.media.session.MediaController$PlaybackInfo: int getVolumeControl()>
<android.security.keystore.IKeystoreResponseCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.params.LensShadingMap: android.hardware.camera2.params.RggbChannelVector getGainFactorVector(int,int)>
<android.content.pm.IPackageInstaller$Default: android.content.pm.ParceledListSlice getAllSessions(int)>
<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlias()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessForegroundTime(int)>
<android.view.IScrollCaptureController$Default: android.os.IBinder asBinder()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>
<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>
<android.content.IIntentReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.window.IWindowContainerToken$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.fonts.SystemFonts: android.text.FontConfig$Alias[] getAliases()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: int loadPhraseModel(android.media.soundtrigger_middleware.PhraseSoundModel)>
<android.view.ViewConfiguration: int getMultiPressTimeout()>
<android.app.VoiceInteractor$Request: java.lang.String getName()>
<android.content.pm.ShortcutQueryWrapper: java.lang.String getPackage()>
<android.content.pm.parsing.component.ParsedProvider: android.os.PatternMatcher[] getUriPermissionPatterns()>
<android.telephony.SmsCbMessage: boolean needGeoFencingCheck()>
<com.android.internal.view.IDragAndDropPermissions$Default: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getLaunchTimeToNowLocked(long)>
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])>
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma[] newArray(int)>
<android.view.IGraphicsStatsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyScanManager: void <init>()>
<android.media.MediaFormat: java.util.Map getMap()>
<android.content.pm.PackageParser$SplitNameComparator: int compare(java.lang.Object,java.lang.Object)>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.util.Locale getLocale()>
<android.app.AppOpsManager: boolean isOpActive(java.lang.String,int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: boolean isVideoTelephonyAvailable(int)>
<android.media.soundtrigger.SoundTriggerManager: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()>
<android.graphics.ImageDecoder$ResourceSource: android.content.res.Resources getResources()>
<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.Spinner: android.content.Context getPopupContext()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>
<android.telephony.SubscriptionInfo: java.lang.String getGroupOwner()>
<android.view.View: float getScaleY()>
<com.android.internal.telephony.SmsHeader: int hashCode()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)>
<android.webkit.TracingConfig: int getTracingMode()>
<android.widget.ListPopupWindow: int getWidth()>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Default: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)>
<android.net.CaptivePortalData: android.net.Uri getVenueInfoUrl()>
<android.app.IActivityManager$Default: android.app.ActivityManager$StackInfo getFocusedStackInfo()>
<android.renderscript.Element: android.renderscript.Element$DataType getDataType()>
<com.android.internal.telephony.ITelephony$Default: boolean needsOtaServiceProvisioning()>
<android.telephony.TelephonyManager: long getPreferredNetworkTypeBitmask()>
<android.net.nsd.NsdServiceInfo: int getPort()>
<android.app.Fragment: android.app.Fragment getParentFragment()>
<android.widget.TextView: java.lang.CharSequence getError()>
<android.webkit.WebView$PrivateAccess: int getHorizontalScrollbarHeight()>
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager getParentProfileInstance(android.content.pm.UserInfo)>
<android.media.tv.TvInputManager: android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int,android.media.tv.TvInputInfo,java.lang.String,int,java.util.concurrent.Executor,android.media.tv.TvInputManager$HardwareCallback)>
<android.app.Activity: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getSystemCpuTimeUs(int)>
<android.companion.ICompanionDeviceManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ContextImpl: int getDisplayId()>
<android.transition.TransitionManager: android.transition.Transition getDefaultTransition()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: com.android.internal.textservice.ISpellCheckerSessionListener asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: void resetSettings()>
<android.app.AutomaticZenRule: long getCreationTime()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
<android.transition.Scene: android.view.ViewGroup getSceneRoot()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.os.Debug$MemoryInfo: int describeContents()>
<android.media.session.ISessionManager$Stub$Proxy: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>
<android.media.IMediaHTTPService$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.GsmAlphabet: boolean isGsmSeptets(char)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioAccessFamily(int,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isSecurityLoggingEnabled(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>
<android.telephony.TelephonyManager: boolean isSmsCapable()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectForegroundTime(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.location.LocationManager: android.util.ArrayMap access$800(android.location.LocationManager)>
<android.hardware.location.IContextHubService$Default: int unloadNanoApp(int)>
<android.app.ISearchManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IUserManager$Default: android.content.pm.UserInfo getPrimaryUser()>
<android.view.DisplayInfo: float[] getDefaultRefreshRates()>
<com.android.internal.policy.DecorView: int getColorViewBottomInset(int,int)>
<android.widget.ExpandableListConnector: int getCount()>
<android.media.AudioManager: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.hardware.camera2.TotalCaptureResult: java.util.Map getPhysicalCameraResults()>
<android.os.BasicShellCommandHandler: int getRemainingArgsCount()>
<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>
<android.content.pm.ILauncherApps$Default: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,java.lang.String,int)>
<android.database.CursorWrapper: long getLong(int)>
<android.telephony.CellIdentityGsm: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.view.accessibility.IAccessibilityManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: boolean enableDataConnectivity()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<android.view.textclassifier.TextSelection: float getConfidenceScore(java.lang.String)>
<android.telephony.IccOpenLogicalChannelResponse$1: void <init>()>
<android.location.IGnssMeasurementsListener$Stub: android.os.IBinder asBinder()>
<android.telephony.SubscriptionPlan: java.lang.CharSequence access$202(android.telephony.SubscriptionPlan,java.lang.CharSequence)>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>
<android.location.LocationRequest: int describeContents()>
<android.widget.TextView: android.text.InputFilter[] getFilters()>
<com.android.ims.internal.IImsVideoCallProvider$Stub: android.os.IBinder asBinder()>
<android.app.KeyguardManager: android.content.Context access$000(android.app.KeyguardManager)>
<android.telephony.ims.ImsCallForwardInfo: int getServiceClass()>
<android.media.audiopolicy.IAudioPolicyCallback$Stub: android.os.IBinder asBinder()>
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)>
<android.companion.ICompanionDeviceManager$Stub: android.companion.ICompanionDeviceManager getDefaultImpl()>
<android.net.lowpan.LowpanIdentity: int access$702(android.net.lowpan.LowpanIdentity,int)>
<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()>
<android.app.INotificationManager$Stub$Proxy: byte[] getBackupPayload(int)>
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor,java.lang.String[])>
<android.graphics.Canvas: int getHeight()>
<android.content.pm.ModuleInfo: java.lang.CharSequence getName()>
<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager getSplitAssetManager(int)>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.IInputContext$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.component.ParsedPermission: android.content.pm.parsing.component.ParsedPermissionGroup getParsedPermissionGroup()>
<android.graphics.drawable.VectorDrawable$VGroup: int access$100(android.graphics.drawable.VectorDrawable$VGroup)>
<android.telephony.CarrierRestrictionRules: int getDefaultCarrierRestriction()>
<android.os.storage.StorageManager: java.util.List getDisks()>
<android.location.ICountryDetector$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: java.lang.String[] getPcscfAddress(java.lang.String)>
<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData createFromParcel(android.os.Parcel)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataRoamingEnabled(int)>
<android.widget.ExpandableListConnector: int getItemViewType(int)>
<android.os.image.IDynamicSystemService$Stub: java.lang.String getTransactionName(int)>
<android.text.MeasuredParagraph: int getTextLength()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber(int)>
<com.android.internal.os.ZygoteServer: java.io.FileDescriptor getZygoteSocketFileDescriptor()>
<android.os.SynchronousResultReceiver: java.lang.String getName()>
<android.location.AbstractListenerManager: java.lang.Object merge(java.lang.Object[])>
<android.net.Ikev2VpnProfile: java.security.cert.X509Certificate getServerRootCaCert()>
<android.util.ArraySet$1: java.util.Map colGetMap()>
<android.print.IWriteResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.AppOpsManager$OnOpNotedCallback: java.util.concurrent.Executor getAsyncNotedExecutor()>
<android.view.GestureExclusionTracker: java.util.List getRootSystemGestureExclusionRects()>
<android.text.style.AccessibilityReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.os.health.HealthKeys$Constants: int[] getKeys(int)>
<android.view.DisplayAdjustments$FixedRotationAdjustments: int describeContents()>
<android.app.IWindowToken$Stub: java.lang.String getTransactionName(int)>
<android.telephony.CellInfoNr: android.telephony.CellInfo sanitizeLocationInfo()>
<android.telephony.ClosedSubscriberGroupInfo: int describeContents()>
<android.telephony.TelephonyManager: boolean putIntAtIndex(android.content.ContentResolver,java.lang.String,int,int)>
<android.content.pm.ShortcutInfo: android.content.LocusId getLocusId()>
<android.app.timezone.IRulesManager$Stub: android.app.timezone.IRulesManager getDefaultImpl()>
<android.hardware.input.IInputManager$Stub$Proxy: int isMicMuted()>
<android.widget.TextView: int getAutoSizeMinTextSize()>
<android.animation.AnimationHandler: int getAnimationCount()>
<android.hardware.radio.V1_5.OptionalCsgInfo: byte getDiscriminator()>
<android.media.ExifInterface: byte[] access$300()>
<com.android.internal.telephony.SmsMessageBase: boolean isEmailAddress(java.lang.String)>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>
<android.app.NotificationManager: boolean isNotificationListenerAccessGranted(android.content.ComponentName)>
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.net.Uri)>
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
<android.transition.Scene: android.transition.Scene getCurrentScene(android.view.ViewGroup)>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<android.telephony.SmsMessage: byte[] getPdu()>
<android.print.PrintJobInfo: java.lang.String getPrinterName()>
<android.app.NotificationHistory$HistoricalNotification: int getUserId()>
<android.view.IDisplayWindowRotationController$Stub: android.view.IDisplayWindowRotationController getDefaultImpl()>
<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>
<android.app.ActivityOptions: android.app.ActivityOptions forTargetActivity()>
<android.content.pm.PackageParser$ApkLite: long getLongVersionCode()>
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.os.IDeviceIdleController$Default: java.lang.String[] getSystemPowerWhitelist()>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.content.IContentService$Default: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)>
<android.content.pm.IPackageInstallerCallback$Stub: android.os.IBinder asBinder()>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
<android.util.jar.StrictJarFile$JarFileInputStream: int read(byte[],int,int)>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>
<android.hardware.biometrics.BiometricAuthenticator$AuthenticationResult: int getAuthenticationType()>
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getEocd(java.io.RandomAccessFile)>
<android.content.pm.IPackageManager$Default: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.telephony.ServiceState: boolean getDataRoamingFromRegistration()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.graphics.Rect getTempRect()>
<android.hardware.input.KeyboardLayout: android.os.LocaleList getLocales()>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener asInterface(android.os.IBinder)>
<android.media.MediaCodec$CodecException: int getErrorCode()>
<android.util.jar.StrictJarFile$ZipInflaterInputStream: int read(byte[],int,int)>
<android.os.ParcelFileDescriptor$1: int onFileDescriptorEvents(java.io.FileDescriptor,int)>
<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable newDrawable()>
<android.hardware.radio.RadioManager$FmBandDescriptor: int hashCode()>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>
<android.widget.TextView: int getCompoundPaddingStart()>
<android.os.UserManager: android.os.Bundle getDefaultGuestRestrictions()>
<android.widget.AbsListView: int computeVerticalScrollRange()>
<android.media.AudioRecord: int getPortId()>
<android.window.IWindowOrganizerController$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()>
<android.widget.OverScroller: int getFinalY()>
<android.net.NetworkCapabilities: int getOwnerUid()>
<com.android.internal.telephony.ISms$Stub$Proxy: boolean isSMSPromptEnabled()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getQueriesIntents()>
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeWordEndIndex()>
<android.text.style.TextAppearanceSpan: float getShadowRadius()>
<android.media.midi.MidiManager: android.media.midi.MidiDeviceInfo[] getDevices()>
<android.util.jar.StrictJarFile$ZipInflaterInputStream: int available()>
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Point getUpperLeftPoint()>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAccessNetworkTechnology(int)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.content.pm.IDexModuleRegisterCallback$Stub: android.content.pm.IDexModuleRegisterCallback asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: android.telephony.CallForwardingInfo getCallForwarding(int)>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()>
<android.net.lowpan.ILowpanInterface$Default: byte[] getExtendedAddress()>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>
<android.net.netstats.provider.INetworkStatsProvider$Stub: android.os.IBinder asBinder()>
<android.media.Rating: float getPercentRating()>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,android.net.Uri,android.net.Uri)>
<android.view.SurfaceControl$DesiredDisplayConfigSpecs: int hashCode()>
<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>
<android.app.ActivityOptions: int getWidth()>
<android.security.keystore.IKeystoreResponseCallback$Stub: java.lang.String getTransactionName(int)>
<android.widget.ListPopupWindow: int getInputMethodMode()>
<android.os.storage.IStorageEventListener$Stub: android.os.IBinder asBinder()>
<android.security.net.config.DirectoryCertificateSource: java.util.Set getCertificates()>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
<android.text.style.SubscriptSpan: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoWiFiRoamingModeSetting(int)>
<android.view.animation.Animation: boolean getFillAfter()>
<android.media.IAudioRoutesObserver$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: int getPreferredNetworkType(int)>
<android.telephony.TelephonyHistogram: int getId()>
<android.view.View: float getAlpha()>
<android.telephony.BarringInfo$BarringServiceInfo: boolean isBarred()>
<android.view.textclassifier.TextClassificationContext: int describeContents()>
<android.location.LocationRequest: long getInterval()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getHint()>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<android.view.View$AttachInfo: com.android.internal.view.ScrollCaptureInternal getScrollCaptureInternal()>
<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList()>
<android.telephony.euicc.DownloadableSubscription: java.lang.String getEncodedActivationCode()>
<android.os.UserManager: boolean isUserUnlocked()>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>
<android.media.IAudioService$Stub$Proxy: int getRingerModeExternal()>
<android.content.RestrictionEntry: boolean getSelectedState()>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: com.android.internal.telephony.euicc.IGetSmdsAddressCallback asInterface(android.os.IBinder)>
<android.security.keystore.IKeystoreService$Default: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfTransition(int,int)>
<android.content.pm.PackageInstaller$SessionInfo: boolean getInstallAsFullApp(boolean)>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getWindows(int)>
<android.app.WallpaperInfo: int describeContents()>
<android.util.KeyValueListParser$LongValue: java.lang.String getKey()>
<android.hardware.hdmi.IHdmiControlCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.drm.DrmEvent: int getUniqueId()>
<android.location.LocationManager$GnssMeasurementsListenerManager: boolean registerService(android.location.GnssRequest)>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int,int)>
<android.telecom.VideoProfile$CameraCapabilities: float getMaxZoom()>
<android.service.textclassifier.TextClassifierService: android.os.Parcelable getResponse(android.os.Bundle)>
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getLoadingView()>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)>
<android.app.admin.ConnectEvent: java.net.InetAddress getInetAddress()>
<android.os.health.TimerStat: int describeContents()>
<android.media.session.IOnVolumeKeyLongPressListener$Stub: android.media.session.IOnVolumeKeyLongPressListener getDefaultImpl()>
<android.app.IUiAutomationConnection$Stub$Proxy: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForAudioAttributes(android.media.AudioAttributes)>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<android.telephony._$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw: int applyAsInt(java.lang.Object)>
<android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getSubscriptionPlansOwner(int)>
<com.android.internal.graphics.palette.Target: float getMaximumSaturation()>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray$MarshalerArray: int getNativeSize()>
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: java.lang.Integer getCaptureSession()>
<android.telephony.SubscriptionInfo: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getDeviceOwnerComponentOnAnyUser()>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: android.net.wifi.nl80211.IWifiScannerImpl getWifiScannerImpl()>
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)>
<android.content.res.ResourcesImpl$ThemeImpl: int[] getAttributeResolutionStack(int,int,int)>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>
<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinderOrThrow()>
<android.media.tv.ITvInputManager$Default: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>
<android.hardware.location.NanoAppBinary: byte getTargetChreApiMajorVersion()>
<android.media.AudioFormat: int getChannelIndexMask()>
<android.os.image.IDynamicSystemService$Stub: android.os.image.IDynamicSystemService asInterface(android.os.IBinder)>
<android.telephony.ServiceState: int rilRadioTechnologyToAccessNetworkType(int)>
<android.os.BaseBundle: byte getByte(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getDeviceOwnerComponent(boolean)>
<android.content.IClipboard$Stub: android.content.IClipboard asInterface(android.os.IBinder)>
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>
<android.animation.TypeConverter: java.lang.Class getTargetType()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>
<android.app.INotificationManager$Default: android.service.notification.StatusBarNotification[] getHistoricalNotificationsWithAttribution(java.lang.String,java.lang.String,int,boolean)>
<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()>
<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()>
<android.telephony.PinResult: int describeContents()>
<android.os.IInstalld$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()>
<android.location.GnssClock: int getHardwareClockDiscontinuityCount()>
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: android.telephony.euicc.EuiccInfo getEuiccInfo(int)>
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()>
<android.text.style.AbsoluteSizeSpan: int describeContents()>
<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>
<android.net.Ikev2VpnProfile: java.util.List getAllowedAlgorithms()>
<android.webkit.WebView: int computeHorizontalScrollOffset()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getRunningExternalApplications()>
<android.content.pm.ShortcutInfo: java.lang.String getIconUri()>
<android.hardware.radio.V1_0.GsmSignalStrength: int hashCode()>
<android.widget.Toolbar: int getTitleMarginEnd()>
<android.app.IUiModeManager$Default: int getNightMode()>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
<android.telephony.SmsManager: boolean isSMSPromptEnabled()>
<android.security.keystore.ArrayUtils: byte[] cloneIfNotEmpty(byte[])>
<android.renderscript.Short3: short get(int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeType(int)>
<com.android.internal.telephony.ITelephony$Default: int getVoiceActivationState(int,java.lang.String)>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeById(java.lang.String)>
<android.text.method.TextKeyListener: int getInputType()>
<android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager asInterface(android.os.IBinder)>
<com.android.ims.internal.IImsCallSession$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.ISub$Default: java.util.List getOpportunisticSubscriptions(java.lang.String,java.lang.String)>
<android.view.MotionEvent: long getEventTimeNano()>
<android.media.midi.MidiManager: android.os.IBinder access$200(android.media.midi.MidiManager)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap getJobCompletionStats()>
<android.telephony.TelephonyManager: long getSupportedRadioAccessFamily()>
<android.accounts.IAccountManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IMessenger$Stub: java.lang.String getTransactionName(int)>
<android.os.IThermalService$Default: float getThermalHeadroom(int)>
<android.os.connectivity.WifiBatteryStats: long getNumPacketsTx()>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>
<android.net.IConnectivityManager$Stub$Proxy: boolean isCallerCurrentAlwaysOnVpnApp()>
<android.telephony.SmsMessage: byte[] getSubmitPduEncodedMessage(boolean,java.lang.String,java.lang.String,int,int,int,int,int,int)>
<android.hardware.display.IColorDisplayManager$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: int getTargetSandboxVersion()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>
<android.hardware.usb.UsbAccessory$1: java.lang.String getSerial(java.lang.String)>
<android.content.IRestrictionsManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.location.MemoryRegion: int describeContents()>
<android.hardware.radio.ITuner$Stub$Proxy: java.util.Map getParameters(java.util.List)>
<android.os.IUserManager$Stub$Proxy: java.util.List getUsers(boolean,boolean,boolean)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Counter getBluetoothScanResultBgCounter()>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>
<android.location.Location: long getElapsedRealtimeNanos()>
<android.content.pm.ShortcutInfo: java.lang.String getResourceTypeAndEntryName(java.lang.String)>
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.transition.Transition: java.util.List getTargetViewNames()>
<android.content.ContentProviderOperation: int getType()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.os.IBinder getOverlayWindowToken(int)>
<android.view.accessibility.WeakSparseArray: java.lang.Object get(int)>
<android.text.style.URLSpan: int getSpanTypeIdInternal()>
<android.widget.EdgeEffect: int getMaxHeight()>
<android.telephony.TelephonyManager: boolean canConnectTo5GInDsdsMode()>
<android.app.role.IRoleController$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: void resetOtaEmergencyNumberDbFilePath()>
<android.telephony.data.ApnSetting$Builder: int access$2600(android.telephony.data.ApnSetting$Builder)>
<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier(int)>
<android.app.contentsuggestions.SelectionsRequest: int getTaskId()>
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
<android.view.Window: android.transition.Transition getExitTransition()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>
<android.hardware.display.DeviceProductInfo: android.hardware.display.DeviceProductInfo$ManufactureDate getManufactureDate()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<com.android.internal.telephony.ISms$Default: boolean isImsSmsSupportedForSubscriber(int)>
<com.android.internal.app.IVoiceInteractor$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.CarrierConfigManager lambda$registerServiceWrappers$2(android.content.Context)>
<android.content.pm.ShortcutInfo: java.lang.String getResourceTypeName(java.lang.String)>
<android.content.res.ResourcesImpl: int getAttributeSetSourceResId(android.util.AttributeSet)>
<android.view.ViewRootImpl: android.view.SurfaceControl$Transaction getBLASTSyncTransaction()>
<android.widget.AbsListView: int findClosestMotionRow(int)>
<android.app.job.JobInfo: int getFlags()>
<android.telephony.ims.aidl.IImsSmsListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.Configuration: android.os.LocaleList getLocales()>
<android.telephony.SignalStrength: int getWcdmaDbm()>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>
<android.animation.ValueAnimator: float getAnimatedFraction()>
<android.view.ActionMode: java.lang.Object getTag()>
<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>
<android.window.IWindowOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>
<com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>
<android.telephony.ims.RcsContactUceCapability: int describeContents()>
<android.view.VerifiedKeyEvent: int getRepeatCount()>
<android.app.INotificationManager$Default: android.app.NotificationChannel getConversationNotificationChannel(java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.app.assist.AssistStructure$ViewNode: int getScrollY()>
<android.service.vr.IVrStateCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.SystemSensorManager: java.util.HashMap access$400(android.hardware.SystemSensorManager)>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getProfileOwnerName(int)>
<com.android.internal.widget.LockscreenCredential: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>
<android.media.MediaRecorder: android.media.AudioDeviceInfo getPreferredDevice()>
<android.provider.ContactsContract$StatusUpdates: int getPresenceIconResourceId(int)>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
<android.os.Debug$MemoryInfo: int getSummaryCode()>
<android.view.Display$HdrCapabilities: int describeContents()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getPartitionId()>
<android.app.ApplicationPackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.telephony.ims.ImsSsInfo: int[] getCompatArray(int)>
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>
<android.webkit.WebSettings$ZoomDensity: int getValue()>
<android.text.SpannableStringBuilder: int getTextWatcherDepth()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)>
<android.media.AudioGainConfig: int mode()>
<android.app.blob.BlobInfo: long getSizeBytes()>
<android.app.BackStackRecord: int getId()>
<android.net.wifi.nl80211.IClientInterface$Stub: android.net.wifi.nl80211.IClientInterface getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>
<android.os.SimpleClock$1: long millis()>
<android.service.notification.StatusBarNotification: java.lang.String getGroupLogTag()>
<android.view.View: int getPaddingEnd()>
<android.telecom.TelecomManager: java.util.List getSelfManagedPhoneAccounts()>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()>
<android.widget.CompoundButton: int getAutofillType()>
<android.content.pm.LauncherApps: java.util.List getActivityList(java.lang.String,android.os.UserHandle)>
<android.widget.AdapterView: boolean isInFilterMode()>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>
<android.media.IAudioService$Stub$Proxy: java.util.List getAudioProductStrategies()>
<android.net.RouteInfo: int getType()>
<android.telephony.CallQuality: int getDownlinkCallQualityLevel()>
<com.android.internal.widget.LockPatternUtils: com.android.internal.widget.ILockSettings getLockSettings()>
<android.os.UserManager: int getCredentialOwnerProfile(int)>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>
<android.content.pm.IShortcutService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.CaptureResult: int getSequenceId()>
<android.hardware.hdmi.HdmiPortInfo: int describeContents()>
<android.telephony.CellIdentityTdscdma: int hashCode()>
<android.net.StringNetworkSpecifier: int hashCode()>
<android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
<android.hardware.SystemSensorManager$BaseEventQueue: int injectSensorDataBase(int,float[],int,long)>
<android.app.Notification: int describeContents()>
<android.app.Instrumentation: java.lang.String getProcessName()>
<android.hardware.SensorManager: java.util.List getDynamicSensorList(int)>
<android.content.UndoManager: int findNextState(java.util.ArrayList,android.content.UndoOwner[],int)>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.om.IOverlayManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.storage.VolumeRecord: java.lang.String getNickname()>
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.hardware.Sensor: float getPower()>
<android.media.AudioPatch: int id()>
<android.transition.TransitionValues: int hashCode()>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioFocusRequest: int getFlags()>
<com.android.internal.os.BatteryStatsImpl: int getMinLearnedBatteryCapacity()>
<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>
<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>
<android.hardware.usb.IUsbManager$Default: android.os.IBinder asBinder()>
<android.view.autofill.IAugmentedAutofillManagerClient$Stub: android.os.IBinder asBinder()>
<android.view.DisplayCutout$Bounds: int hashCode()>
<android.media.tv.ITvInputHardwareCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.Uri$StringUri: java.lang.String getFragment()>
<android.accessibilityservice.AccessibilityService$MagnificationController: android.graphics.Region getMagnificationRegion()>
<android.graphics.drawable.VectorDrawable$VGroup$8: java.lang.Object get(java.lang.Object)>
<android.app.Fragment: int getStateAfterAnimating()>
<android.hardware.camera2.impl.CameraMetadataNative$15: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
<android.app._$$Lambda$AppOpsManager$HistoricalOp$Vs6pDL0wjOBTquwNnreWVbPQrn4: java.lang.Object get()>
<android.util.SparseBooleanArray: boolean get(int,boolean)>
<android.widget.ScrollView: int getBottomEdgeEffectColor()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray getWindows()>
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey getKey()>
<android.os.storage.IStorageManager$Default: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)>
<android.widget.Toolbar: java.lang.CharSequence getLogoDescription()>
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.net.lowpan.ILowpanInterface$Default: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>
<android.app.ActivityThread: float getFloatCoreSetting(java.lang.String,float)>
<android.widget.ListView: int lookForSelectablePositionAfter(int,int,boolean)>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.IntentSender createAppWidgetConfigIntentSender(java.lang.String,int,int)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(int,java.lang.String,long,long,int)>
<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(int,int,java.lang.String)>
<android.app.usage.IUsageStatsManager$Stub: android.app.usage.IUsageStatsManager getDefaultImpl()>
<android.os.image.IDynamicSystemService$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.ILockSettings$Default: long getLong(java.lang.String,long,int)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>
<android.text.style.QuoteSpan: int describeContents()>
<android.app.IActivityTaskManager$Stub$Proxy: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>
<android.app.timezonedetector.ITimeZoneDetectorService$Default: android.os.IBinder asBinder()>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.hardware.display.IDisplayManager$Default: android.os.IBinder asBinder()>
<android.location.GnssStatus: float getAzimuthDegrees(int)>
<android.net.lowpan.LowpanCommissioningSession: android.net.lowpan.LowpanBeaconInfo getBeaconInfo()>
<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()>
<android.app.LoadedApk: java.lang.String[] getSplitResDirs()>
<android.util.apk.ApkSignatureVerifier: int getMinimumSignatureSchemeVersionForTargetSdk(int)>
<android.print.IPrintDocumentAdapter$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.ConnectivityManager: android.net.Network getNetworkForType(int)>
<android.media.IMediaHTTPService$Stub: android.media.IMediaHTTPService asInterface(android.os.IBinder)>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)>
<com.android.internal.inputmethod.IIntResultCallback$Default: android.os.IBinder asBinder()>
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyRegistryManager: void listenForSubscriber(int,java.lang.String,java.lang.String,android.telephony.PhoneStateListener,int,boolean)>
<com.android.internal.app.ISoundTriggerService$Default: int startRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>
<com.android.internal.policy.PhoneWindow: int getVolumeControlStream()>
<android.hardware.camera2.marshal.MarshalHelpers: int getPrimitiveTypeSize(int)>
<android.app.AppOpsManager$HistoricalUidOps: int describeContents()>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char)>
<android.app.LoadedApk$ServiceDispatcher: int getFlags()>
<com.android.internal.telephony.ITelephony$Default: int getRadioHalVersion()>
<android.view.RemoteAnimationDefinition$RemoteAnimationAdapterEntry: android.os.Parcelable$Creator access$000()>
<com.android.internal.content.om.OverlayConfig: java.lang.String[] createImmutableFrameworkIdmapsInZygote()>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: long getAuthenticatorId(int)>
<android.webkit.WebViewDelegate: int getPackageId(android.content.res.Resources,java.lang.String)>
<android.telephony.TelephonyManager: boolean nvResetConfig(int)>
<android.content.pm.IPackageManager$Default: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.statusbar.NotificationVisibility: int describeContents()>
<android.content.pm.SharedLibraryInfo: java.util.List getDependencies()>
<android.security.keystore.IKeystoreService$Default: int addAuthToken(byte[])>
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>
<android.view.IWindowManager$Stub$Proxy: int getDockedStackSide()>
<android.os.Debug$MemoryInfo: int getTotalUss()>
<android.widget.FastScroller$6: java.lang.Object get(java.lang.Object)>
<android.service.textclassifier.ITextClassifierCallback$Stub: android.service.textclassifier.ITextClassifierCallback getDefaultImpl()>
<android.telephony.ims.ImsExternalCallState: int getCallType()>
<com.google.android.mms.pdu.PduHeaders: long getLongInteger(int)>
<android.os.UserManager: long[] getSerialNumbersOfUsers(boolean)>
<android.os.IUserManager$Stub$Proxy: boolean isRestricted()>
<com.android.ims.internal.IImsServiceFeatureCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.face.IFaceServiceReceiver$Stub: android.hardware.face.IFaceServiceReceiver getDefaultImpl()>
<android.app.IAlarmCompleteListener$Stub: android.os.IBinder asBinder()>
<android.media.tv.ITvInputHardware$Default: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthNr: int hashCode()>
<com.android.internal.app.IAppOpsActiveCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.AssetManager: int[] getResourceIntArray(int)>
<android.util.KeyValueListParser$IntValue: int getDefaultValue()>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>
<android.view.View: android.view.IWindow getWindow()>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.BatterySaverPolicyConfig: boolean getEnableQuickDoze()>
<android.content.IntentFilter: int countActions()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<android.view.ViewGroup: android.view.View findFocus()>
<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()>
<android.content.pm.IPackageManager$Default: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)>
<android.telephony.BarringInfo: int hashCode()>
<android.hardware.cas.V1_0.HidlCasPluginDescriptor: int hashCode()>
<android.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()>
<android.app.admin.IDevicePolicyManager$Default: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>
<android.app.usage.UsageEvents$Event: long getTimeStamp()>
<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()>
<android.media.MediaMetadata: int hashCode()>
<android.service.textclassifier.ITextClassifierService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>
<android.widget.AbsSpinner: int pointToPosition(int,int)>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isNightDisplayActivated()>
<android.telephony.ClientRequestStats: long getPendingRequestsWakelockTime()>
<com.android.internal.telephony.ITelephony$Default: boolean isTetheringApnRequiredForSubscriber(int)>
<android.accessibilityservice.AccessibilityGestureEvent: int getDisplayId()>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>
<android.hardware.usb.UsbConfiguration: android.hardware.usb.UsbInterface getInterface(int)>
<android.view.Display$HdrCapabilities: float getDesiredMaxAverageLuminance()>
<android.media.projection.IMediaProjectionManager$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: int stopUser(android.content.ComponentName,android.os.UserHandle)>
<android.app.ContextImpl: java.lang.String getBasePackageName()>
<android.media.MediaRoute2Info: java.util.List getFeatures()>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(java.lang.Object)>
<android.media.MediaPlayer: int playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>
<android.content.res.ResourcesImpl: android.util.DisplayMetrics getDisplayMetrics()>
<com.android.internal.os.BatteryStatsHelper: android.os.BatteryStats getStats()>
<android.graphics.drawable.Icon: android.content.res.Resources getResources()>
<android.net.ITestNetworkManager$Stub: java.lang.String getTransactionName(int)>
<android.location.IGnssAntennaInfoListener$Stub: android.location.IGnssAntennaInfoListener getDefaultImpl()>
<android.accessibilityservice.AccessibilityServiceInfo: int getInteractiveUiTimeoutMillis()>
<android.hardware.radio.V1_2.WcdmaSignalStrength: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: int getEmergencyNumberDbVersion(int)>
<android.widget.LinearLayout: int getBaseline()>
<android.app.AppOpsManager$OpEntry: long getLastAccessForegroundTime(int)>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: java.lang.String getTransactionName(int)>
<android.view.textservice.SpellCheckerSubtype: int describeContents()>
<android.view.IWindowManager$Stub$Proxy: int getNavBarPosition(int)>
<android.content.pm.BaseParceledListSlice: java.util.List access$200(android.content.pm.BaseParceledListSlice)>
<com.android.internal.infra.IAndroidFuture$Stub: java.lang.String getTransactionName(int)>
<android.app.assist.AssistStructure$ViewNode: int getHeight()>
<android.os.image.DynamicSystemManager$Session: boolean getAvbPublicKey(android.gsi.AvbPublicKey)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getUserControlDisabledPackages(android.content.ComponentName)>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>
<com.android.internal.os.BatteryStatsImpl: int getNumConnectivityChange(int)>
<android.provider.DocumentsContract: java.lang.String[] getHandledQueryArguments(android.os.Bundle)>
<android.view.textservice.TextInfo: int describeContents()>
<android.app.backup.BackupAgent: android.os.Handler getHandler()>
<android.security.net.config.UserCertificateSource: java.util.Set getCertificates()>
<android.net.IpSecConfig: int getMode()>
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getWebDomain()>
<android.widget.GridView: int computeVerticalScrollExtent()>
<android.telephony.SubscriptionManager: int lambda$removeSubscriptionsFromGroup$9(java.lang.Integer)>
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolSize()>
<android.widget.Spinner$DropDownAdapter: boolean isEnabled(int)>
<android.os.IMessenger$Stub: android.os.IMessenger asInterface(android.os.IBinder)>
<android.media.AudioManager: int dispatchAudioFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.AudioPolicy)>
<android.content.LocusId: int hashCode()>
<android.hardware.location.NanoAppInstanceInfo: int describeContents()>
<android.media.Metadata: double getDouble(int)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Default: android.os.IBinder asBinder()>
<android.widget.Toolbar: int getCurrentContentInsetRight()>
<android.telephony.SubscriptionManager: java.util.List getCompleteActiveSubscriptionInfoList()>
<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: int describeContents()>
<android.os.ProxyFileDescriptorCallback: int onRead(long,int,byte[])>
<android.app.AppGlobals: android.app.Application getInitialApplication()>
<android.view.ViewGroup: boolean getClipChildren()>
<android.app.usage.IUsageStatsManager$Default: int getAppStandbyBucket(java.lang.String,java.lang.String,int)>
<android.service.vr.IVrManager$Stub: java.lang.String getTransactionName(int)>
<android.util.SparseLongArray: int keyAt(int)>
<android.media.IRemoteVolumeController$Stub: android.os.IBinder asBinder()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int openStorage(java.lang.String)>
<android.app.ActivityManager: android.app.IActivityManager getService()>
<android.app.BackStackRecord: int getTransition()>
<android.os.GraphicsEnvironment: android.os.GraphicsEnvironment getInstance()>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromNativeSmsSubmitPdu(byte[],boolean)>
<android.view.View: int getSuggestedMinimumWidth()>
<android.content.ContentResolver: int getTargetSdkVersion()>
<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getBackground()>
<android.view.View$6: java.lang.Object get(java.lang.Object)>
<android.telephony.data.ApnSetting$Builder: int access$1800(android.telephony.data.ApnSetting$Builder)>
<android.content.pm.IPackageManager$Stub$Proxy: boolean isOnlyCoreApps()>
<android.animation.Animator$AnimatorConstantState: int getChangingConfigurations()>
<android.service.notification.NotificationListenerService: java.util.List getNotificationChannelGroups(java.lang.String,android.os.UserHandle)>
<android.hardware.display.IDisplayManager$Default: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<android.app.IUserSwitchObserver$Stub: android.app.IUserSwitchObserver asInterface(android.os.IBinder)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>
<android.drm.ProcessedData: byte[] getData()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.view.accessibility.IWindowMagnificationConnectionCallback asInterface(android.os.IBinder)>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<android.location.GpsNavigationMessage: short getStatus()>
<android.util.MapCollections: java.util.Set getKeySet()>
<android.content.IContentService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.IConnectivityDiagnosticsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>
<android.os.IThermalStatusListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: java.util.Set getCrossProfilePackages(android.content.ComponentName)>
<android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager getDefaultImpl()>
<android.location.Location: long getElapsedRealtimeAgeNanos(long)>
<android.hardware.radio.V1_4.NrSignalStrength: int hashCode()>
<com.android.ims.internal.IImsEcbm$Stub: java.lang.String getTransactionName(int)>
<android.animation.PathKeyframes$IntKeyframesBase: java.lang.Object getValue(float)>
<android.app.IStopUserCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>
<com.android.internal.net.INetworkWatchlistManager$Default: byte[] getWatchlistConfigHash()>
<android.media.midi.IMidiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence getTitle()>
<android.telephony.ims.feature._$$Lambda$RcsFeature$RcsFeatureBinder$M_Xsfh7yLPmebDSvMzAvEPPUmE0: java.lang.Object get()>
<android.content.res.GradientColor: android.graphics.Shader getShader()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getWellbeingPackageName()>
<android.hardware.input.ITabletModeChangedListener$Stub: java.lang.String getTransactionName(int)>
<android.service.vr.IPersistentVrStateCallbacks$Stub: android.os.IBinder asBinder()>
<android.widget.AbsSpinner: int getAutofillType()>
<android.graphics.Paint: int getTextRunCursor(char[],int,int,boolean,int,int)>
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>
<android.os.IRemoteCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ServiceState: int getRadioTechnology()>
<android.telephony.SubscriptionManager: java.util.List getAllSubscriptionInfoList()>
<android.net.IIpSecService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.UserManager: int getUserCount()>
<android.app.WindowConfiguration: int getActivityType()>
<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder)>
<android.view.InputDevice$MotionRange: float getMax()>
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>
<android.app.admin.PasswordMetrics$ComplexityBucket$3: int getMinimumLength(boolean)>
<android.net.lowpan.LowpanScanner: java.util.Collection getChannelMask()>
<android.view.View: android.view.contentcapture.ContentCaptureSession getContentCaptureSession()>
<android.media.tv.TvInputInfo: java.lang.String getParentId()>
<android.security.keystore.AndroidKeyStoreProvider: java.security.KeyStore getKeyStoreForUid(int)>
<android.net.wifi.nl80211.IApInterface$Stub: android.net.wifi.nl80211.IApInterface getDefaultImpl()>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.hardware.cas.V1_2.IMediaCasService$Proxy: java.util.ArrayList getHashChain()>
<android.os.IUserManager$Stub$Proxy: int getUserHandle(int)>
<android.os.storage.VolumeInfo: java.util.Comparator getDescriptionComparator()>
<com.android.internal.widget.LockPatternUtils: int getMaximumFailedPasswordsForWipe(int)>
<android.app.servertransaction.TransactionExecutorHelper: int getClosestOfStates(android.app.ActivityThread$ActivityClientRecord,int[])>
<android.net.NetworkStats: int describeContents()>
<android.view.autofill.IAutofillWindowPresenter$Stub: android.os.IBinder asBinder()>
<android.view.DisplayCutout: java.util.List getBoundingRects()>
<android.app.backup.IBackupObserver$Stub: java.lang.String getTransactionName(int)>
<android.telephony.UiccCardInfo: boolean isRemovable()>
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()>
<android.view.VerifiedMotionEvent: float getRawY()>
<android.hardware.location.IContextHubClientCallback$Default: android.os.IBinder asBinder()>
<android.net.NetworkPolicy: int compareTo(java.lang.Object)>
<android.view.textclassifier.TextClassifierEvent: android.icu.util.ULocale getLocale()>
<android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePublicKey getAndroidKeyStorePublicKey(java.lang.String,int,java.lang.String,byte[])>
<android.content.pm.parsing.component.ParsedActivity: int getMaxRecents()>
<android.content.om.IOverlayManager$Default: java.lang.String[] getDefaultOverlayPackages()>
<com.android.internal.os.BatteryStatsImpl: long getLongestDeviceIdleModeTime(int)>
<android.window.ITaskOrganizerController$Default: android.window.WindowContainerToken getImeTarget(int)>
<android.hardware.radio.RadioManager$BandDescriptor: int hashCode()>
<android.media.audiopolicy.AudioPolicyConfig: java.lang.String getRegistration()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getWidth()>
<com.android.server.SystemConfig: java.util.Map getNamedActors()>
<android.hardware.SystemSensorManager: android.hardware.SensorDirectChannel createDirectChannelImpl(android.os.MemoryFile,android.hardware.HardwareBuffer)>
<com.android.internal.os.BatteryStatsImpl: long getWifiSignalStrengthTime(int,long,int)>
<android.os.UserManager: int getUserSerialNumber(int)>
<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>
<android.media.Metadata: int firstCustomId()>
<android.content.IClipboard$Stub$Proxy: android.content.ClipData getPrimaryClip(java.lang.String,int)>
<android.util.Half: int getExponent(short)>
<android.widget.Magnifier: float getCornerRadius()>
<android.view.textclassifier.TextClassification: java.lang.CharSequence getLabel()>
<android.widget.Spinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>
<android.app.backup.BackupAgent: int access$200(android.app.backup.BackupAgent)>
<android.telephony.CellIdentityNr: void updateGlobalCellId()>
<android.text.style.StyleSpan: int getSpanTypeIdInternal()>
<android.view.IWindowManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IInputMonitorHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.RemoteViewsListAdapter: java.lang.Object getItem(int)>
<android.webkit.IWebViewUpdateService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
<android.renderscript.Float2: int length()>
<android.widget.SelectionActionModeHelper$TextClassificationHelper: int getTimeoutDuration()>
<android.hardware.radio.ICloseHandle$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.ComponentInfo: int getIconResource()>
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getPackage()>
<android.os.IUserManager$Stub$Proxy: int getUserBadgeLabelResId(int)>
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)>
<android.telephony.TelephonyManager: boolean endCall()>
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.webkit.WebView$HitTestResult: int getType()>
<android.graphics.Color: int hashCode()>
<android.os.IInstalld$Default: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.IpPrefix[] getLinkNetworks()>
<com.android.internal.view.TooltipPopup: android.view.View getContentView()>
<android.view.View: int getMinimumHeight()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getProfileOwnerAsUser(int)>
<android.app.IActivityManager$Stub$Proxy: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)>
<android.telephony.BarringInfo$BarringServiceInfo: int getConditionalBarringFactor()>
<android.renderscript.Long4: long get(int)>
<android.hardware.radio.ICloseHandle$Stub: android.hardware.radio.ICloseHandle asInterface(android.os.IBinder)>
<android.os.SystemProperties$Handle: long getLong(long)>
<android.telephony._$$Lambda$SubscriptionManager$vEkhQSELvddUPjZ7BQuik8uCACE: int callMethod(com.android.internal.telephony.ISub)>
<android.content.pm.InstantAppResolveInfo: java.lang.String getPackageName()>
<android.view.animation.AnimationSet: long getStartTime()>
<android.content.ContextWrapper: java.lang.String getSystemServiceName(java.lang.Class)>
<android.view.VerifiedKeyEvent: int getScanCode()>
<android.view.ViewGroup$ViewLocationHolder: int compareTo(android.view.ViewGroup$ViewLocationHolder)>
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.view.InsetsController: int getAnimationType(int)>
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getTitle()>
<android.hardware.ICameraService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()>
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()>
<android.content.pm.InstallationFileParcel: int describeContents()>
<android.accounts.Account$1: android.accounts.Account createFromParcel(android.os.Parcel)>
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
<android.view.ViewRootImpl$ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.view.View: int getAccessibilityLiveRegion()>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Default: android.os.IBinder asBinder()>
<android.view.textclassifier.ExtrasUtils: float getScore(android.os.Bundle)>
<android.app.AppOpsManager: android.util.LongSparseLongArray access$5000(android.os.Parcel)>
<android.app.admin.DevicePolicyManager: boolean isAdminActiveAsUser(android.content.ComponentName,int)>
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>
<android.telecom.Logging.Session: android.telecom.Logging.Session getParentSession()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int checkCarrierPrivilegesForPackage(int,java.lang.String)>
<android.view.textclassifier.TextLinks: java.lang.CharSequence getText()>
<android.app.LoadedApk: java.lang.String getLibDir()>
<android.net.UidRange: int describeContents()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Default: android.os.IBinder asBinder()>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()>
<android.app.admin.StartInstallingUpdateCallback$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()>
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)>
<android.os.Looper: android.os.MessageQueue getQueue()>
<android.window.WindowContainerTransaction$HierarchyOp: boolean getToTop()>
<android.app.usage.NetworkStats$Bucket: int access$1200(int)>
<android.transition.ChangeScroll: java.lang.String[] getTransitionProperties()>
<android.os.IInstalld$Stub$Proxy: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)>
<com.android.internal.view.IInputSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ITransientNotificationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ActivityOptions: boolean getTaskOverlay()>
<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>
<android.view.ViewRootImpl: android.view.SurfaceControl getRenderSurfaceControl()>
<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()>
<android.net.Uri$HierarchicalUri: int describeContents()>
<android.graphics.Paint: android.graphics.Paint$Style getStyle()>
<android.text.style.UnderlineSpan: int describeContents()>
<android.security.keymaster.KeymasterCertificateChain: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>
<android.app.IProcessObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.View: int getHorizontalFadingEdgeLength()>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub: android.os.IBinder asBinder()>
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>
<com.android.internal.policy.PhoneWindow: android.transition.TransitionManager getTransitionManager()>
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$SphericalCorrections getSignalGainCorrections()>
<android.net.wifi.nl80211.NativeScanResult: long getTsf()>
<android.view.View$ForegroundInfo: int access$2602(android.view.View$ForegroundInfo,int)>
<com.android.internal.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()>
<android.media.AudioTrack: int getPerformanceMode()>
<android.content.pm.ShortcutManager: int getIconMaxWidth()>
<android.media.AudioFocusInfo: int getGainRequest()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<android.app.IActivityManager$Stub$Proxy: int getUidProcessState(int,java.lang.String)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int hashCode()>
<android.app.DisabledWallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCOLR()>
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient asInterface(android.os.IBinder)>
<android.telephony.CellSignalStrengthNr: int getDbm()>
<android.window.ITaskOrganizerController$Default: java.util.List getChildTasks(android.window.WindowContainerToken,int[])>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getDisplayName()>
<android.net.INetworkManagementEventObserver$Stub: java.lang.String getTransactionName(int)>
<android.os.DropBoxManager$Entry: int describeContents()>
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.util.ArrayList interfaceChain()>
<android.util.IntArray: int indexOf(int)>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>
<android.media.MediaFormat$FilteredMappedKeySet: int size()>
<android.net.CaptivePortalData: long getByteLimit()>
<android.text.StaticLayout: int getLineDescent(int)>
<android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)>
<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>
<android.telephony.CellIdentity: java.lang.String getPlmn()>
<android.content.ClipDescription: int getMimeTypeCount()>
<android.security.keystore.IKeystoreService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.ParcelableException: int describeContents()>
<android.window.WindowContainerTransaction$Change: android.graphics.Rect getBoundsChangeSurfaceBounds()>
<com.android.internal.telephony.euicc.IEuiccCardController$Default: android.os.IBinder asBinder()>
<android.util.ArrayMap$1: int colGetSize()>
<android.os.IVoldListener$Stub: android.os.IVoldListener getDefaultImpl()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)>
<android.telephony.SmsManager: int getSubscriptionId()>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4700()>
<android.webkit.WebViewDelegate: boolean isMultiProcessEnabled()>
<android.media.WebVttRenderingWidget: int access$400(int,int)>
<android.telephony.TelephonyManager: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>
<android.view.SurfaceControl$Transaction: int describeContents()>
<android.os.health.HealthStats: int getStatsKeyCount()>
<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String getImplementor()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.android.internal.telephony.IPhoneStateListener$Default: android.os.IBinder asBinder()>
<android.permission.PermissionManager: java.util.Set getAutoRevokeExemptionRequestedPackages()>
<android.app.assist.AssistStructure$ViewNodeBuilder: android.os.Bundle getExtras()>
<android.widget.TextView: int viewportToContentHorizontalOffset()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int getNativeSize()>
<android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>
<android.view.IRemoteAnimationRunner$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: int getState()>
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getStagedSessions()>
<com.android.internal.util.StateMachine$LogRecords: com.android.internal.util.StateMachine$LogRec get(int)>
<android.app.timedetector.ITimeDetectorService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>
<android.media.Metadata: int getInt(int)>
<android.os.VibrationEffect$Waveform: int getRepeatIndex()>
<android.telephony.CallQuality: int getAverageRoundTripTime()>
<android.view.Choreographer: long getFrameIntervalNanos()>
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar$Tab getTabAt(int)>
<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.Resources getResources()>
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>
<android.telephony.SmsCbMessage: int getGeographicalScope()>
<android.content.pm.PackageParser: int lambda$parseBaseApplication$2(android.content.pm.PackageParser$Service,android.content.pm.PackageParser$Service)>
<android.window.ITaskOrganizer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIsoForPhone(int)>
<android.hardware.input.InputManager: android.hardware.input.IInputManager access$400(android.hardware.input.InputManager)>
<android.telephony.ServiceState: int getVoiceRoamingType()>
<android.telephony.CellIdentityGsm: int getMcc()>
<android.media.IPlaybackConfigDispatcher$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.V1_2.CellIdentityGsm: int hashCode()>
<android.app.NotificationManager$Policy: int describeContents()>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>
<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>
<android.view.IWindowId$Default: android.os.IBinder asBinder()>
<android.telephony.DataFailCause: int getFailCause(int)>
<android.content.pm.parsing.component.ParsedComponent: java.lang.String getPackageName()>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()>
<android.location.Geofence: int hashCode()>
<android.os.StatFs: int getFreeBlocks()>
<android.security.IKeyChainService$Stub$Proxy: android.content.pm.StringParceledListSlice getSystemCaAliases()>
<android.view.IWindowManager$Stub$Proxy: android.graphics.Region getCurrentImeTouchRegion()>
<android.media.session.ISessionController$Default: android.os.IBinder asBinder()>
<android.animation.IntKeyframeSet: java.lang.Class getType()>
<android.hardware.radio.RadioManager$FmBandConfig: boolean getStereo()>
<com.android.internal.util.BitUtils: int getUint8(java.nio.ByteBuffer,int)>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>
<android.app.admin.DnsEvent: java.util.List getInetAddresses()>
<android.content.pm.DataLoaderParams: android.content.ComponentName getComponentName()>
<android.view.IWindowSession$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.CaptureRequest: int hashCode()>
<android.os.IPowerManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.util.MergedConfiguration: android.content.res.Configuration getGlobalConfiguration()>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.app.AppOpsManager: int unsafeCheckOp(java.lang.String,int,java.lang.String)>
<android.util.LongSparseArray: int access$000(android.util.LongSparseArray)>
<android.location.GpsMeasurement: double getAzimuthUncertaintyInDeg()>
<com.android.internal.view.InlineSuggestionsRequestInfo: android.os.Bundle getUiExtras()>
<android.content.res.ResourcesImpl: java.lang.String getResourceName(int)>
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
<android.app.IUiAutomationConnection$Stub: android.app.IUiAutomationConnection asInterface(android.os.IBinder)>
<android.telephony.data.ApnSetting$Builder: int access$1100(android.telephony.data.ApnSetting$Builder)>
<android.telephony.ims.aidl.IImsRegistration$Default: android.os.IBinder asBinder()>
<com.android.internal.os.IShellCallback$Stub: android.os.IBinder asBinder()>
<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)>
<android.app.IUidObserver$Stub: android.app.IUidObserver asInterface(android.os.IBinder)>
<android.telephony.CellSignalStrengthWcdma: int getRscp()>
<android.app.prediction.AppTargetId: int describeContents()>
<android.net.INetworkStatsService$Default: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<android.view.WindowInsets$Side: int all()>
<android.text.StaticLayout: int getEllipsizedWidth()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: byte[] getWatchlistConfigHash()>
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>
<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] following(int)>
<android.service.autofill.FieldClassification$1: int compare(java.lang.Object,java.lang.Object)>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int)>
<android.view.IWindowManager$Stub$Proxy: int getRemoveContentMode(int)>
<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>
<android.media.tv.TvInputManager: int access$500(android.media.tv.TvInputManager)>
<android.system.suspend.ISuspendControlService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IDumpstate$Default: android.os.IBinder asBinder()>
<android.view.IPinnedStackController$Default: android.os.IBinder asBinder()>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>
<android.hardware.location.ContextHubMessage: int describeContents()>
<android.app.ActivityOptions: int getAnimationType()>
<android.media.IAudioService$Default: int removePreferredDeviceForStrategy(int)>
<android.app.job.IJobCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.Editor$InsertionPointCursorController: android.widget.Editor$InsertionHandleView getHandle()>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataStateForSubId(int)>
<android.location.IGnssAntennaInfoListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.PlaybackState: long getActions()>
<android.app.job.JobParameters: java.lang.String getReasonCodeDescription(int)>
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)>
<com.android.net.IProxyService$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.content.pm.ILauncherApps$Default: android.os.IBinder asBinder()>
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.os.CoolingDevice: int describeContents()>
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>
<android.net.NetworkInfo: int getSubtype()>
<android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getUserControlDisabledPackages(android.content.ComponentName)>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int describeContents()>
<android.content.pm.ShortcutInfo$Builder: int access$1400(android.content.pm.ShortcutInfo$Builder)>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: java.lang.String getTransactionName(int)>
<android.app.job.JobInfo: int getConstraintFlags()>
<android.hardware.location.NanoAppState: long getNanoAppId()>
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<com.android.internal.widget.DecorCaptionView: android.view.View getCaption()>
<com.android.internal.telephony.IPhoneSubInfo$Stub: android.os.IBinder asBinder()>
<android.media.audiopolicy.AudioMix: int getMixState()>
<android.graphics.text.MeasuredText: float getCharWidthAt(int)>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub: android.os.IBinder asBinder()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float getMagnificationCenterY(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: boolean canDisablePhysicalSubscription()>
<android.view.WindowInsets$Type: int indexOf(int)>
<com.android.internal.os.BatteryStatsHelper$1: int compare(java.lang.Object,java.lang.Object)>
<android.os.incremental.IIncrementalServiceConnector$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: boolean isEmergencyNumber(java.lang.String,boolean)>
<android.content.pm.IShortcutService$Default: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,int,int)>
<android.os.Temperature: int getType()>
<android.app.ActivityTaskManager$1: android.app.IActivityTaskManager create()>
<android.content.pm.ParceledListSlice: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int getType()>
<android.telephony.CellSignalStrengthWcdma: int getRssi()>
<android.os.IIncidentCompanion$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.radio.IRadioService$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IDeviceIdentifiersPolicyService$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isMmTelCapabilityProvisionedInCache(int,int,int)>
<android.telephony.TelephonyManager: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.service.notification.NotificationListenerService$Ranking: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)>
<android.app.IRequestFinishCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.IntentFilter: java.lang.String getMimeGroup(int)>
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getTitle()>
<android.media.projection.IMediaProjectionWatcherCallback$Default: android.os.IBinder asBinder()>
<android.os.BaseBundle: java.lang.ClassLoader getClassLoader()>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<android.hardware.display.WifiDisplayStatus: int getFeatureState()>
<android.view.contentcapture.DataShareRequest: int hashCode()>
<android.net.INetworkStatsSession$Default: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onRemoveRoleHolder$2(java.lang.String,java.lang.String,int,android.app.role.IRoleController)>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.widget.LinearLayout: java.lang.CharSequence getAccessibilityClassName()>
<android.content.pm.ICrossProfileApps$Stub: android.content.pm.ICrossProfileApps getDefaultImpl()>
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
<android.security.keystore.AndroidKeyStoreProvider: long getKeyStoreOperationHandle(java.lang.Object)>
<android.util.PackageUtils: byte[] computeSha256DigestBytes(byte[])>
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>
<android.net.IConnectivityManager$Default: java.lang.String[] getTetheringErroredIfaces()>
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()>
<com.android.internal.telephony.ITelephony$Default: boolean isTtyModeSupported()>
<android.app.usage.UsageStatsManager: int getAppStandbyBucket(java.lang.String)>
<android.app.WallpaperManager: int getWallpaperIdForUser(int,int)>
<android.content.res.ColorStateList: android.content.res.ConstantState getConstantState()>
<android.text.StaticLayout: int getStartHyphenEdit(int)>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>
<android.view.IWindowManager$Stub$Proxy: boolean isSafeModeEnabled()>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)>
<android.view.textclassifier.TextClassifierEvent: int getEventCategory()>
<android.renderscript.Long4: long length()>
<android.text.DynamicLayout: int getStartHyphenEdit(int)>
<android.view.textclassifier.TextSelection$Request: java.lang.CharSequence getText()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isWifiCallingAvailable(int)>
<android.view.accessibility.AccessibilityNodeIdManager: android.view.View findView(int)>
<android.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)>
<android.content.om.OverlayManager: java.util.List getOverlayInfosForTarget(java.lang.String,android.os.UserHandle)>
<android.text.AutoGrowArray$FloatArray: float get(int)>
<android.app.blob.IBlobCommitCallback$Default: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: boolean isPasswordSufficientAfterProfileUnification(int,int)>
<android.printservice.recommendation.RecommendationInfo: java.util.List getDiscoveredPrinters()>
<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder getOrThrow()>
<android.widget.SearchView: int getImeOptions()>
<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: float getTextSizeInPx()>
<android.content.IContentService$Default: android.os.IBinder asBinder()>
<android.telephony.CellInfoCdma: android.telephony.CellIdentity getCellIdentity()>
<android.view.contentcapture.ViewNode: int getAutofillType()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)>
<android.hardware.cas.V1_0.IMediaCasService$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<com.android.internal.telephony.IIntegerConsumer$Default: android.os.IBinder asBinder()>
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
<android.content.ComponentName: int describeContents()>
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.database.CursorWrapper: float getFloat(int)>
<android.telephony.CellInfo$1: android.telephony.CellInfo[] newArray(int)>
<android.app.usage.IUsageStatsManager$Default: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)>
<android.os.Debug$MemoryInfo: java.lang.String getMemoryStat(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: boolean isOnBatteryScreenOffLocked()>
<android.app.timedetector.NetworkTimeSuggestion: int hashCode()>
<com.android.internal.view.menu.ListMenuPresenter$MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>
<android.renderscript.Allocation: android.view.Surface getSurface()>
<android.view.IRemoteAnimationFinishedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.LongSparseLongArray: int size()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(android.net.Uri)>
<android.view.IOnKeyguardExitResult$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkTemplate: java.lang.String getSubscriberId()>
<android.os.IHardwarePropertiesManager$Default: float[] getDeviceTemperatures(java.lang.String,int,int)>
<android.graphics.Paint: float getWordSpacing()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getRemovedSystemPowerWhitelistApps()>
<android.widget.OverScroller$SplineOverScroller: boolean continueWhenFinished()>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>
<android.os.storage.IStorageManager$Default: long getCacheQuotaBytes(java.lang.String,int)>
<android.app.backup.IBackupManagerMonitor$Default: android.os.IBinder asBinder()>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannel getNotificationChannelForPackage(java.lang.String,int,java.lang.String,java.lang.String,boolean)>
<com.android.internal.app.IAppOpsService$Default: java.util.List getPackagesForOps(int[])>
<android.widget.Editor$InsertionHandleView: int getCursorHorizontalPosition(android.text.Layout,int)>
<android.os.incremental.IIncrementalService$Default: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)>
<android.util.proto.EncodedBuffer: int getWriteBufIndex()>
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>
<android.os.IIncidentManager$Stub$Proxy: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(int)>
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>
<android.window.WindowMetricsHelper: android.graphics.Rect getBoundsExcludingNavigationBarAndCutout(android.view.WindowMetrics)>
<android.content.pm.parsing.component.ParsedActivity: int getLaunchMode()>
<android.graphics.drawable.VectorDrawable$VGroup$6: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.hardware.radio.ITuner$Stub: android.hardware.radio.ITuner getDefaultImpl()>
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getItalic()>
<android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession asInterface(android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>
<android.hardware.Camera$Parameters: java.lang.String getColorEffect()>
<android.view.View$2: java.lang.Float get(android.view.View)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getCallCapablePhoneAccounts(boolean,java.lang.String,java.lang.String)>
<android.view.View: android.graphics.drawable.Drawable getHorizontalScrollbarThumbDrawable()>
<android.os.SharedMemory: int getFd()>
<android.telephony.CarrierRestrictionRules$Builder: android.telephony.CarrierRestrictionRules$Builder setExcludedCarriers(java.util.List)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getFileTimestamps(java.lang.String)>
<android.telephony.AvailableNetworkInfo$1: void <init>()>
<com.android.internal.telephony.ISub$Default: int addSubInfo(java.lang.String,java.lang.String,int,int)>
<android.net.wifi.nl80211.IClientInterface$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.PrintJobId: int hashCode()>
<android.app.IActivityManager$Default: int startActivityFromRecents(int,android.os.Bundle)>
<android.service.notification.StatusBarNotification: java.lang.String getGroup()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCLIR()>
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted()>
<android.location.LocationManager$BatchedLocationCallbackManager: boolean registerService(java.lang.Void)>
<android.content.res.Resources$Theme: int[] getAllAttributes()>
<android.content.ClipDescription: long getTimestamp()>
<android.media.MediaHTTPConnection: java.lang.String getMIMEType()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.app.IActivityManager$Default: java.util.List getServices(int,int)>
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getImsRegTechnologyForMmTel(int)>
<android.location.LocationManager$LocationListenerTransport: android.location.LocationListener getKey()>
<android.location.Location: int access$1102(android.location.Location,int)>
<com.android.internal.net.VpnConfig: java.lang.CharSequence getVpnLabel(android.content.Context,java.lang.String)>
<android.app.IWallpaperManager$Default: int getWallpaperIdForUser(int,int)>
<android.net.LinkAddress: long getExpirationTime()>
<android.view.VerifiedKeyEvent: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: boolean getBlockUninstallForUser(java.lang.String,int)>
<android.telephony.CarrierRestrictionRules: java.util.List getExcludedCarriers()>
<android.app.ApplicationPackageManager: boolean isDeviceUpgrading()>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>
<android.app.IRequestFinishCallback$Stub: android.os.IBinder asBinder()>
<android.view.autofill.AutofillManager: int getRequestIdFromAuthenticationId(int)>
<android.view.ViewRootInsetsControllerHost: int getSystemBarsAppearance()>
<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>
<android.hardware.camera2.params.MeteringRectangle: int getMeteringWeight()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: java.lang.String[] getNames()>
<android.telephony.ims.ImsStreamMediaProfile: int getAudioQuality()>
<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>
<android.net.lowpan.LowpanInterface: java.lang.String getState()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.Set getUpgradeKeySets()>
<android.media.IAudioService$Default: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>
<android.widget.ListPopupWindow: int getPromptPosition()>
<android.net.NetworkStats: long getTotalPackets()>
<com.android.internal.widget.IRemoteViewsFactory$Default: android.widget.RemoteViews getViewAt(int)>
<android.content.IContentService$Default: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<android.hardware.location.ContextHubTransaction$Response: java.lang.Object getContents()>
<android.app.ApplicationPackageManager: android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String)>
<android.media.session.ISession$Stub: android.media.session.ISession asInterface(android.os.IBinder)>
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getScreenOffCpuFreqTimes(int,int)>
<android.telecom.TelecomManager: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle)>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic)>
<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgeDrawable(int,int)>
<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.content.res.XmlBlock$Parser: java.lang.String getText()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId(int)>
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<android.hardware.radio.IAnnouncementListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.storage.IStorageShutdownObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.ICameraDeviceUser$Default: android.view.Surface getInputSurface()>
<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()>
<android.media.midi.MidiOutputPort: int getPortNumber()>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptetsUsingTables(java.lang.CharSequence,boolean,int,int)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)>
<android.app.IAlarmManager$Stub$Proxy: long currentNetworkTimeMillis()>
<android.permission.IPermissionManager$Default: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)>
<android.telecom.VideoProfile: int describeContents()>
<com.android.internal.telephony.ISub$Stub$Proxy: int[] getActiveSubIdList(boolean)>
<android.telephony.CellInfoWcdma: android.telephony.CellIdentity getCellIdentity()>
<android.view.SurfaceControlViewHost: android.view.View getView()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)>
<android.security.keystore.ICredstoreTokenCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageInstallerSession$Stub$Proxy: int[] getChildSessionIds()>
<com.android.internal.content.PackageMonitor: int getChangingUserId()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator(int)>
<android.view.contentcapture.ContentCaptureContext: int getTaskId()>
<android.media.AudioRecordingConfiguration: int getClientUid()>
<android.security.keystore.recovery.KeyDerivationParams: int describeContents()>
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuClusterTimes()>
<android.hardware.hdmi.HdmiPlaybackClient: int getDeviceType()>
<android.permission.PermissionControllerManager$1: android.os.Handler getJobHandler()>
<com.android.internal.graphics.palette.Palette$Swatch: float[] getHsl()>
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.Sensor: int getFifoReservedEventCount()>
<android.content.integrity.IAppIntegrityManager$Stub: java.lang.String getTransactionName(int)>
<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.List)>
<android.view.IWallpaperVisibilityListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.FontConfig: android.text.FontConfig$Alias[] getAliases()>
<android.app.FragmentHostCallback: android.content.Context getContext()>
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.Notification$BubbleMetadata: int getDesiredHeightResId()>
<android.graphics.Rect: int describeContents()>
<android.accessibilityservice.AccessibilityServiceInfo: int getNonInteractiveUiTimeoutMillis()>
<android.location.LocationManager: java.lang.String[] getIgnoreSettingsWhitelist()>
<android.app.ActivityOptions: android.os.IRemoteCallback getAnimationStartedListener()>
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()>
<android.view.textclassifier.SelectionEvent: int getEnd()>
<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace getDestination()>
<com.android.internal.view.IInputMethodClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.Paint: float getShadowLayerRadius()>
<android.transition.ChangeBounds$1: java.lang.Object get(java.lang.Object)>
<android.graphics.drawable.Drawable: int getLayoutDirection()>
<com.android.internal.view.IInputMethodManager$Default: java.util.List getInputMethodList(int)>
<android.telephony.TelephonyManager: int getEmergencyNumberDbVersion()>
<android.content.pm.IDataLoaderManager$Default: android.content.pm.IDataLoader getDataLoader(int)>
<android.app.prediction.IPredictionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IRemoteVolumeObserver$Default: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.IWificond$Default: int[] getAvailable6gChannels()>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.hardware.hdmi.IHdmiDeviceEventListener getDefaultImpl()>
<android.os.storage.IStorageShutdownObserver$Stub: android.os.storage.IStorageShutdownObserver getDefaultImpl()>
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver,android.app.backup.BackupManagerMonitor)>
<com.android.internal.content.om.OverlayScanner: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo getParsedInfo(java.lang.String)>
<android.database.CursorWindow: byte[] getBlob(int,int)>
<android.media.MediaRouter: int getWifiDisplayStatusCode(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)>
<android.media.session.ISessionController$Stub$Proxy: android.os.Bundle getSessionInfo()>
<android.telephony.ims.aidl.IImsConfig$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.ILocationManager$Stub$Proxy: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>
<android.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()>
<android.os.Bundle: short[] getShortArray(java.lang.String)>
<android.text.FontConfig$Family: android.text.FontConfig$Font[] getFonts()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.util.UUID getUuid()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int invokeOemRilRequestRaw(byte[],byte[])>
<android.view.ViewGroup: android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View)>
<android.hardware.display.BrightnessConfiguration: android.hardware.display.BrightnessCorrection getCorrectionByCategory(int)>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.cdma.CdmaSmsCbProgramData: int describeContents()>
<android.app.IActivityTaskManager$Stub$Proxy: boolean isTopActivityImmersive()>
<com.google.android.mms.pdu.RetrieveConf: int getReadReport()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: int captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>
<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>
<android.os.PowerManager: boolean isInteractive()>
<android.content.res.XmlBlock$Parser: java.lang.String getName()>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>
<android.os.ISystemConfig$Stub: java.lang.String getTransactionName(int)>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
<android.hardware.Camera$Parameters: int getExposureCompensation()>
<android.app.DirectAction: int getTaskId()>
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnCount(int)>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.IInputSessionCallback$Stub: com.android.internal.view.IInputSessionCallback getDefaultImpl()>
<android.os.storage.IStorageManager$Default: java.lang.String getMountedObbPath(java.lang.String)>
<android.hardware.Sensor: int getFifoMaxEventCount()>
<android.os.IUserManager$Default: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: int getMinSdkVersion()>
<android.os.UserManager: long getUserCreationTime(android.os.UserHandle)>
<android.text.CharSequenceCharacterIterator: char next()>
<android.content.pm.LauncherActivityInfo: long getFirstInstallTime()>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>
<android.app.ActivityManager: boolean isUserAMonkey()>
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calcUnicodeEncodingDetails(java.lang.CharSequence)>
<android.telephony.CellSignalStrengthWcdma: int getLevel()>
<android.content.IClipboard$Default: android.os.IBinder asBinder()>
<android.view.VerifiedKeyEvent: long getDownTimeNanos()>
<com.android.internal.compat.IOverrideValidator$Stub: android.os.IBinder asBinder()>
<android.media.session.ISessionController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ClosedSubscriberGroupInfo$1: android.telephony.ClosedSubscriberGroupInfo[] newArray(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: int[] getSubId(int)>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>
<android.media.VolumeShaper$Operation: int hashCode()>
<android.hardware.camera2.params.RggbChannelVector: float getRed()>
<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfoService()>
<android.view.ViewConfiguration: int getScaledMinScrollbarTouchTarget()>
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: android.content.Context getRemoteContext()>
<android.media.IAudioServerStateDispatcher$Stub: java.lang.String getTransactionName(int)>
<android.renderscript.FieldPacker: byte[] getData()>
<com.android.internal.os.BatteryStatsImpl: long getDeviceIdlingTime(int,long,int)>
<android.view.MotionEvent: float getRawY()>
<com.android.internal.app.IAppOpsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.CaptureRequest: java.lang.Class getKeyClass()>
<android.media.projection.IMediaProjection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telecom.Logging.Session$Info: android.telecom.Logging.Session$Info getExternalInfo(android.telecom.Logging.Session,java.lang.String)>
<android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>
<android.content.res.Resources$Theme: long getNativeTheme()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keymaster.KeymasterCertificateChain getCertificateChain()>
<android.telephony.LteVopsSupportInfo: int hashCode()>
<android.content.pm.parsing.component.ParsedComponent: int getDescriptionRes()>
<android.text.BoringLayout: int getBottomPadding()>
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemCategory()>
<android.telephony.ims.ImsManager: android.telephony.ims.ImsRcsManager getImsRcsManager(int)>
<android.text.style.SuggestionSpan: int getSpanTypeId()>
<android.telephony.ims.ImsCallProfile: int getRestrictCause()>
<android.app.IUriGrantsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.radio.V1_4.SignalStrength: int hashCode()>
<android.os.BatteryManager: long getLongProperty(int)>
<android.view.Window: android.media.session.MediaController getMediaController()>
<android.widget.FastScroller: int getWidth()>
<com.android.internal.policy.DecorView: int getCaptionHeight()>
<android.view.View: android.graphics.BlendMode getForegroundTintBlendMode()>
<android.app.AutomaticZenRule: int getInterruptionFilter()>
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.IContextHubClient createClient(int,android.hardware.location.IContextHubClientCallback)>
<android.content.pm.ConfigurationInfo: int describeContents()>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>
<android.telephony.TelephonyManager: android.util.Pair getRadioHalVersion()>
<android.net.IIpSecService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.SystemProperties$Handle: int getInt(int)>
<android.transition.Transition: java.lang.String[] getTransitionProperties()>
<android.os.VibrationEffect$Waveform: long[] getTimings()>
<android.content.Context: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>
<android.os.incremental.IIncrementalService$Stub$Proxy: int deleteBindMount(int,java.lang.String)>
<android.app.backup.BackupManager: android.content.Intent getConfigurationIntent(java.lang.String)>
<com.android.internal.util.VirtualRefBasePtr: long get()>
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] following(int)>
<android.net.Ikev2VpnProfile: java.lang.String getServerAddr()>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: com.android.internal.telephony.IUpdateAvailableNetworksCallback getDefaultImpl()>
<android.animation.PathKeyframes$2: float getFloatValue(float)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu(int)>
<android.net.lowpan.ILowpanManager$Stub: android.net.lowpan.ILowpanManager getDefaultImpl()>
<android.content.pm.InstantAppResolveInfo: int describeContents()>
<android.app.IBackupAgent$Stub: android.app.IBackupAgent asInterface(android.os.IBinder)>
<android.app.IActivityManager$Default: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.widget.CheckedTextView: java.lang.CharSequence getAccessibilityClassName()>
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>
<android.location.GnssSingleSatCorrection: int describeContents()>
<android.hardware.ISensorPrivacyManager$Stub: android.hardware.ISensorPrivacyManager getDefaultImpl()>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<com.android.internal.telephony.ISms$Stub$Proxy: int getSmsCapacityOnIccForSubscriber(int)>
<android.app.AutomaticZenRule: android.content.ComponentName getConfigurationActivity()>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>
<android.app.IActivityTaskManager$Stub: android.os.IBinder asBinder()>
<android.app.UriGrantsManager$1: android.app.IUriGrantsManager create()>
<com.android.internal.infra.RemoteStream$2: java.io.Closeable createStream(android.os.ParcelFileDescriptor)>
<android.app.IUiAutomationConnection$Default: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.telephony.ims.aidl.IImsRcsController$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager$Default: boolean getAutoTimeZoneEnabled(android.content.ComponentName)>
<android.telephony.CellInfoGsm: int describeContents()>
<android.location.LocationProvider: int getPowerRequirement()>
<android.view.DragEvent: int getAction()>
<com.android.internal.telephony.ITelephony$Default: boolean resetModemConfig(int)>
<android.drm.DrmEvent: int getType()>
<android.media.AudioDeviceInfo: int[] getEncapsulationModes()>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeNamespace(int)>
<android.app.Notification$Action$Builder: android.os.Bundle getExtras()>
<android.view.View: int computeVerticalScrollOffset()>
<android.net.lowpan.LowpanBeaconInfo: byte[] access$300(android.net.lowpan.LowpanBeaconInfo)>
<android.app.usage.UsageStats: long getLastTimeStamp()>
<android.companion.AssociationRequest: int hashCode()>
<com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>
<android.view.accessibility.AccessibilityEvent: int describeContents()>
<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<android.app.Notification$WearableExtender: int getContentIcon()>
<android.telephony.TelephonyManager: boolean isVideoTelephonyAvailable()>
<android.app.ITaskStackListener$Stub: java.lang.String getTransactionName(int)>
<android.app.IActivityManager$Default: int restartUserInBackground(int)>
<android.location.GnssMeasurementCorrections: double getLatitudeDegrees()>
<android.util.jar.StrictJarFile$JarFileInputStream: int available()>
<android.hardware.camera2.ICameraDeviceUser$Default: android.os.IBinder asBinder()>
<android.view.InsetsState: android.view.InsetsSource getSource(int)>
<android.graphics.text.LineBreaker$ParagraphConstraints: float[] getTabStops()>
<android.telephony.SubscriptionManager: int getPhoneId(int)>
<android.content.ClipDescription: int describeContents()>
<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>
<android.location.GnssSingleSatCorrection: int getConstellationType()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.media.MediaRouter$UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>
<android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>
<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream getSocketOutputStream()>
<android.content.pm.IDataLoaderManager$Stub: java.lang.String getTransactionName(int)>
<android.graphics.ParcelableColorSpace: float getMinValue(int)>
<android.telephony.SubscriptionManager: int getSimStateForSlotIndex(int)>
<android.media.MediaFormat: int getInteger(java.lang.String)>
<android.media.session.ISessionControllerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.CellInfoNr: int hashCode()>
<android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>
<android.hardware.ICameraClient$Stub: android.hardware.ICameraClient asInterface(android.os.IBinder)>
<android.net.http.SslCertificate$DName: java.lang.String getDName()>
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicWidth()>
<android.media.tv.ITvInputHardwareCallback$Stub: android.media.tv.ITvInputHardwareCallback asInterface(android.os.IBinder)>
<android.app.AppOpsManager: com.android.internal.app.IAppOpsService access$300()>
<android.service.notification.StatusBarNotification: int getUserId()>
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)>
<android.os.connectivity.CellularBatteryStats: long getKernelActiveTimeMillis()>
<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
<android.location.GpsMeasurement: short getTimeFromLastBitInMs()>
<android.net.Uri$OpaqueUri: java.lang.String getScheme()>
<com.android.internal.telephony.SmsHeader$PortAddrs: boolean equals(java.lang.Object)>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.net.NetworkTemplate: byte[] getBytesForBackup()>
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)>
<android.filterfw.core.NativeFrame: int getCapacity()>
<android.app.usage.StorageStatsManager: boolean isQuotaSupported(java.lang.String)>
<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig getConfigForHostname(java.lang.String)>
<android.view.WindowManagerImpl: android.view.WindowMetrics getMaximumWindowMetrics()>
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.system.suspend.ISuspendCallback$Stub: android.system.suspend.ISuspendCallback asInterface(android.os.IBinder)>
<android.hardware.radio.RadioMetadata: int putStringFromNative(int,java.lang.String)>
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getFreqTimeReaderInstance()>
<android.app.admin.DevicePolicyManager: boolean isAffiliatedUser()>
<android.media.projection.IMediaProjectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>
<android.os.storage.VolumeInfo: java.io.File getPathForUser(int)>
<android.app.IActivityManager$Default: int getProcessLimit()>
<android.graphics.drawable.AnimatedImageDrawable: int getLoopCount(int)>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: com.android.internal.telephony.euicc.ICancelSessionCallback getDefaultImpl()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
<android.app.NotificationManager: java.lang.String getNotificationDelegate()>
<android.view.ViewRootImpl$InputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>
<android.hardware.ICamera$Stub: android.hardware.ICamera asInterface(android.os.IBinder)>
<android.util.MapCollections$EntrySet: int hashCode()>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>
<android.app.prediction.IPredictionCallback$Stub: java.lang.String getTransactionName(int)>
<android.widget.ListPopupWindow: int getVerticalOffset()>
<android.text.Layout$Directions: int getRunStart(int)>
<android.app.ApplicationPackageManager: boolean getSyntheticAppDetailsActivityEnabled(java.lang.String)>
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: com.android.internal.compat.OverrideAllowedState getOverrideAllowedState(long,java.lang.String)>
<com.android.internal.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IEuiccController$Default: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreService$Default: int unlock(int,java.lang.String)>
<android.media.MediaDrm$CryptoSession: byte[] sign(byte[],byte[])>
<android.transition.Transition$1: android.graphics.Path getPath(float,float,float,float)>
<android.app.prediction.IPredictionManager$Default: android.os.IBinder asBinder()>
<android.app.AppOpsManager$HistoricalPackageOps: int describeContents()>
<android.os.incremental.V4Signature: byte[] toByteArray()>
<android.media.Tokenizer: int access$102(android.media.Tokenizer,int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getWifiScanTimer()>
<android.hardware.HardwareBuffer: int getLayers()>
<android.view.IDisplayWindowListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.service.textclassifier.TextClassifierService: android.content.ComponentName getServiceComponentName(android.content.Context,java.lang.String,int)>
<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>
<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)>
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char)>
<android.service.gatekeeper.GateKeeperResponse: int getTimeout()>
<android.os.Environment: java.io.File getVendorDirectory()>
<android.content.res.ColorStateList: int describeContents()>
<android.view.View: int getSourceLayoutResId()>
<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>
<android.media.IMediaRouter2Manager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri,boolean)>
<android.view.WindowInsets: int hashCode()>
<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>
<android.permission.IPermissionManager$Default: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.compat.CompatibilityChangeInfo: long getId()>
<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioVolumeGroups()>
<com.android.internal.inputmethod.IInputContentUriToken$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.ConnectivityManager: java.util.List getVpnLockdownWhitelist(int)>
<android.net.Uri$StringUri: java.lang.String parsePath(java.lang.String,int)>
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.util.List queryBlobsForUser(int)>
<android.animation.StateListAnimator: android.view.View getTarget()>
<android.telephony.ServiceState$1: android.telephony.ServiceState createFromParcel(android.os.Parcel)>
<android.location.ILocationManager$Default: boolean getCurrentLocation(android.location.LocationRequest,android.os.ICancellationSignal,android.location.ILocationListener,java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: int getLayerType()>
<android.media.Ringtone: float getVolume()>
<android.widget.Editor$EasyEditPopupWindow: int getVerticalLocalPosition(int)>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<android.hardware.camera2.impl.CaptureResultExtras: int getPartialResultCount()>
<android.telephony.data.ApnSetting$Builder: int access$2100(android.telephony.data.ApnSetting$Builder)>
<android.graphics.ImageDecoder$Source: int computeDstDensity()>
<android.animation.AnimationHandler$MyFrameCallbackProvider: long getFrameDelay()>
<android.telephony.CellSignalStrengthCdma: android.telephony.CellSignalStrength copy()>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>
<android.widget.RemoteViews$ViewGroupActionAdd: int getActionTag()>
<android.util.LongSparseArray: int indexOfKey(long)>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$100(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>
<android.view.MotionEvent: float getRawY(int)>
<android.media.session.MediaController: android.media.session.MediaSession$Token getSessionToken()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.utils.SubmitInfo submitCaptureRequests(android.hardware.camera2.CaptureRequest[],boolean)>
<com.android.internal.telephony.ITelephony$Default: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)>
<com.android.internal.app.IAppOpsNotedCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.ViewConfiguration: float getScaledAmbiguousGestureMultiplier()>
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>
<com.android.internal.telephony.ISub$Default: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)>
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String getDescription()>
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(android.hardware.Camera$Size,android.hardware.Camera$Size)>
<android.hardware.display.IColorDisplayManager$Default: int getTransformCapabilities()>
<android.view.MotionEvent: long getEventTime()>
<android.app.admin.ConnectEvent: int describeContents()>
<android.app.admin.IDevicePolicyManager$Default: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>
<android.telephony.SubscriptionManager: int[] getCompleteActiveSubscriptionIdList()>
<android.window.IDisplayAreaOrganizer$Stub: android.window.IDisplayAreaOrganizer asInterface(android.os.IBinder)>
<android.webkit.WebViewFactory: java.lang.String getWebViewLibrary(android.content.pm.ApplicationInfo)>
<android.content.ContentProvider: int checkUriPermission(android.net.Uri,int,int)>
<android.net.IpSecAlgorithm: int describeContents()>
<android.telephony.CarrierRestrictionRules: java.util.List areCarrierIdentifiersAllowed(java.util.List)>
<android.media.session.MediaSessionManager$Session2TokensChangedWrapper: android.media.session.ISession2TokensListener$Stub getStub()>
<android.content.pm.IDataLoaderManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.style.ScaleXSpan: int getSpanTypeIdInternal()>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.PduBody getBody()>
<android.telephony.SmsMessage: int getSubId()>
<android.os.Temperature: java.lang.String getName()>
<android.security.keystore.recovery.KeyChainProtectionParams: int getLockScreenUiFormat()>
<android.content.pm.ShortcutInfo: java.lang.String getId()>
<android.hardware.camera2.params.OisSample: float getYshift()>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.backup.IRestoreObserver$Stub: java.lang.String getTransactionName(int)>
<android.app.timezonedetector.ManualTimeZoneSuggestion: java.lang.String getZoneId()>
<android.content.pm.IOnAppsChangedListener$Stub: java.lang.String getTransactionName(int)>
<android.app.backup.BackupManager: java.lang.String getCurrentTransport()>
<android.widget.AbsListView: int computeVerticalScrollExtent()>
<android.media.AudioRecord: android.media.AudioDeviceInfo getRoutedDevice()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric(int)>
<android.content.Intent: android.os.Bundle getExtras()>
<android.hardware.radio.V1_2.SignalStrength: int hashCode()>
<android.content.pm.ShortcutInfo: int getFlags()>
<com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling get(java.lang.Class)>
<android.content.res.TypedArray: android.graphics.Typeface getFont(int)>
<android.text.Editable$Factory: android.text.Editable$Factory getInstance()>
<android.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()>
<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAccessibleSubscriptionInfoList(java.lang.String)>
<android.net.lowpan.LowpanCredential: int hashCode()>
<android.app.admin.IDevicePolicyManager$Default: int getPermissionPolicy(android.content.ComponentName)>
<android.app.SearchManager: boolean isVisible()>
<android.service.oemlock.IOemLockService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GnssReflectingPlane: double getAzimuthDegrees()>
<android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver asInterface(android.os.IBinder)>
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getLibraryNames()>
<android.net.INetworkScoreService$Stub$Proxy: android.net.NetworkScorerAppData getActiveScorer()>
<android.app.job.IJobScheduler$Default: java.util.List getStartedJobs()>
<android.telephony.AvailableNetworkInfo: int hashCode()>
<android.view.InputDevice: java.util.List getMotionRanges()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Default: android.os.IBinder asBinder()>
<android.os.connectivity.WifiBatteryStats: long getAppScanRequestCount()>
<android.app.job.IJobScheduler$Default: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>
<android.os.IIncidentCompanion$Default: android.os.IncidentManager$IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>
<android.app.admin.NetworkEvent: java.lang.String getPackageName()>
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)>
<android.graphics.fonts.FontVariationAxis: int getOpenTypeTagValue()>
<android.hardware.ICameraService$Default: int getNumberOfCameras(int)>
<com.android.internal.os.BatteryStatsImpl: int getWifiSignalStrengthCount(int,int)>
<android.content.pm.PackageInstaller$SessionInfo: boolean getAllowDowngrade()>
<android.text.style.AccessibilityReplacementSpan: int describeContents()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String getState()>
<android.hardware.display.IDisplayManager$Default: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>
<android.widget.Editor: int access$4900(android.widget.Editor)>
<android.hardware.camera2.CaptureFailure: java.lang.String getPhysicalCameraId()>
<android.telephony.ims.aidl.IImsRcsController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
<android.hardware.cas.V1_0.ICasListener$Stub: java.util.ArrayList getHashChain()>
<com.android.internal.os.PowerProfile$CpuClusterKey: int access$100(com.android.internal.os.PowerProfile$CpuClusterKey)>
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo: byte getDiscriminator()>
<android.app.IActivityTaskManager$Default: int getLastResumedActivityUserId()>
<android.graphics.RenderNode: float getElevation()>
<com.android.internal.telephony.IPhoneStateListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener getDefaultImpl()>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage getStorage(int)>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityStart()>
<com.android.internal.midi.MidiDispatcher: android.media.midi.MidiSender getSender()>
<android.location.ILocationManager$Default: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>
<android.provider.ContactsContract$CommonDataKinds$Email: int getTypeLabelResource(int)>
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()>
<android.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.media.tv.tunerresourcemanager.ITunerResourceManager getDefaultImpl()>
<android.net.wifi.nl80211.PnoSettings: long getIntervalMillis()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertSceneModeFromLegacy(java.lang.String)>
<android.media.audiopolicy.AudioVolumeGroup: int getId()>
<android.hardware.location.ContextHubInfo: float getSleepPowerDrawMw()>
<android.app.Fragment: android.transition.Transition getReturnTransition()>
<android.net.IpSecConfig: java.lang.String getDestinationAddress()>
<android.media.session.ISessionControllerCallback$Stub: java.lang.String getTransactionName(int)>
<android.provider.ContactsContract$RawContacts: java.lang.String getLocalAccountName(android.content.Context)>
<android.telephony.PhoneNumberUtils: boolean isInternationalNumber(java.lang.String,java.lang.String)>
<android.os.health.HealthStats: int getTimersKeyAt(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getDeviceOwnerName()>
<com.android.internal.telephony.ITelephony$Default: int getRadioAccessFamily(int,java.lang.String)>
<android.telephony.CellIdentityNr: java.util.Set getAdditionalPlmns()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>
<android.app.role.IOnRoleHoldersChangedListener$Stub: android.app.role.IOnRoleHoldersChangedListener getDefaultImpl()>
<android.graphics.ImageDecoder: boolean getDecodeAsAlphaMask()>
<android.view.textclassifier.TextSelection: int getSelectionStartIndex()>
<android.widget.ImageView: int getMaxWidth()>
<android.view.IWindowManager$Stub$Proxy: int getDefaultDisplayRotation()>
<android.view.View: int getScrollCaptureHint()>
<com.android.internal.policy.IShortcutService$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View$11: java.lang.Object get(java.lang.Object)>
<android.os.IRecoverySystemProgressListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.RadioManager$FmBandConfig: int hashCode()>
<com.android.internal.widget.LockPatternUtils: android.app.admin.PasswordMetrics getRequestedPasswordMetrics(int)>
<android.media.MediaCodecList: android.media.MediaCodecInfo getInfoFor(java.lang.String)>
<android.media.projection.IMediaProjectionManager$Stub: android.os.IBinder asBinder()>
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)>
<com.google.android.mms.pdu.RetrieveConf: byte[] getTransactionId()>
<com.google.android.mms.pdu.PduPart: byte[] getContentDisposition()>
<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumWidth()>
<android.app.ActivityManager: java.util.List getHistoricalProcessExitReasons(java.lang.String,int,int)>
<android.app.ServiceStartArgs: int describeContents()>
<android.app.ActivityOptions: android.view.IAppTransitionAnimationSpecsFuture getSpecsFuture()>
<android.security.keystore.IKeystoreService$Default: int onUserRemoved(int)>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
<android.app.admin.IDevicePolicyManager$Default: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)>
<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int,int,int)>
<android.view.textclassifier.SelectionEvent: int getEventIndex()>
<android.view.MotionEvent: int getEdgeFlags()>
<android.net.NetworkTemplate: java.lang.String getNetworkId()>
<android.print.PrintJob: android.print.PrintJobId getId()>
<android.telephony.ims.ImsMmTelManager: int getVoWiFiModeSetting()>
<android.widget.TextView: int getShadowColor()>
<android.security.KeyStore: int abort(android.os.IBinder)>
<android.net.lowpan.LowpanScanner: int getTxPower()>
<android.telephony.CellSignalStrengthCdma$1: void <init>()>
<android.view.textclassifier.TextClassifierEvent: android.os.Bundle getExtras()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo()>
<android.net.RouteInfo: android.net.LinkAddress getDestinationLinkAddress()>
<android.telephony.DataConnectionRealTimeInfo: int getDcPowerState()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>
<android.content.pm.ShortcutInfo: java.util.Set getCategories()>
<android.util.KeyValueListParser$StringValue: java.lang.String getDefaultValue()>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] preceding(int)>
<android.text.CharSequenceCharacterIterator: int getIndex()>
<android.permission.PermissionManager$SplitPermissionInfo: int getTargetSdk()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForUid(java.lang.String,int,java.lang.String)>
<android.widget.TextView: java.util.Locale getSpellCheckerLocale()>
<android.app.IBackupAgent$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.VectorDrawable: int access$6100(long)>
<android.app.assist.AssistStructure$ViewNode: int getLeft()>
<com.android.internal.telephony.ITelephony$Default: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>
<android.location.GpsMeasurementsEvent: int describeContents()>
<android.app.backup.IBackupCallback$Stub: android.app.backup.IBackupCallback asInterface(android.os.IBinder)>
<android.location.ILocationManager$Default: long getGnssCapabilities()>
<android.app.RemoteInput: int getResultsSource(android.content.Intent)>
<android.telephony.CbGeoUtils$LatLng: double distance(android.telephony.CbGeoUtils$LatLng)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<com.android.ims.internal.IImsEcbmListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
<android.media.MediaSyncEvent: int getType()>
<android.telephony.CellIdentity: android.telephony.CellIdentity create(android.hardware.radio.V1_0.CellIdentity)>
<android.telecom.ParcelableCallAnalytics: java.util.List analyticsEvents()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCLIP()>
<android.os.Environment: java.io.File getDataMiscCeDirectory()>
<android.media.VolumeShaper$Configuration: int getOptionFlags()>
<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.sqlite.SQLiteDatabase$CursorFactory getCursorFactory()>
<android.app.admin.IDevicePolicyManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.compat.CompatibilityChangeInfo: int describeContents()>
<com.android.internal.view.InlineSuggestionsRequestInfo: android.content.ComponentName getComponentName()>
<android.os.UserManager: boolean isSystemUser()>
<android.telephony.ims.aidl.IImsConfig$Stub: android.telephony.ims.aidl.IImsConfig asInterface(android.os.IBinder)>
<android.app.assist.AssistStructure$ViewNode: java.lang.String getHintIdEntry()>
<android.app.admin.IDevicePolicyManager$Default: boolean getCrossProfileContactsSearchDisabledForUser(int)>
<android.hardware.face.IFaceServiceReceiver$Default: android.os.IBinder asBinder()>
<android.telephony.data.ApnSetting: java.lang.String getMvnoMatchData()>
<android.app.prediction.AppPredictionContext: int describeContents()>
<android.telephony.SignalStrength$1: android.telephony.SignalStrength createFromParcel(android.os.Parcel)>
<android.app.admin.DevicePolicyManager: boolean isPackageAllowedToAccessCalendar(java.lang.String)>
<android.provider.DeviceConfig$Properties: java.lang.String getNamespace()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelsForPackage(java.lang.String,int,boolean)>
<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()>
<android.widget.Editor$SelectionHandleView: int getOffsetAtCoordinate(android.text.Layout,int,float)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)>
<android.net.NetworkStatsHistory: long getTotalBytes()>
<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.DatabaseErrorHandler getErrorHandler()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayColorTemperature()>
<android.util.RecurrenceRule: int describeContents()>
<android.app.job.IJobScheduler$Stub$Proxy: android.content.pm.ParceledListSlice getAllPendingJobs()>
<android.media.session.ISessionController$Default: java.lang.String getPackageName()>
<android.media.MediaCodec$MediaImage: long getTimestamp()>
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.lang.String[] getCameraIdListNoLazy()>
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int calculateMarshalSize(android.util.Pair)>
<android.telecom.Logging.Session: java.lang.String getShortMethodName()>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryCratesForPackage(java.lang.String,java.lang.String,int,java.lang.String)>
<android.net.lowpan.LowpanBeaconInfo: byte[] getBeaconAddress()>
<android.view.VerifiedMotionEvent: int getFlags()>
<android.telephony.SubscriptionManager: void lambda$addOnSubscriptionsChangedListener$0(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>
<android.app.Dialog: int getVolumeControlStream()>
<android.app.ContextImpl: java.util.concurrent.Executor getMainExecutor()>
<android.view.textclassifier.ConversationAction: android.os.Bundle getExtras()>
<android.app.admin.DevicePolicyManager: boolean isDeviceManaged()>
<android.view.InputDevice: java.lang.String getName()>
<com.android.internal.telephony.IBooleanConsumer$Stub: com.android.internal.telephony.IBooleanConsumer asInterface(android.os.IBinder)>
<android.content.res.AssetManager: int access$700(long)>
<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$applyStagedRuntimePermissionBackup$10(java.lang.String,android.os.UserHandle,android.permission.IPermissionController)>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setPackageName(java.lang.String)>
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()>
<com.android.internal.app.IAppOpsService$Default: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.app.SystemServiceRegistry$70: android.app.trust.TrustManager createService()>
<android.app.admin.DevicePolicyManager: boolean isResetPasswordTokenActive(android.content.ComponentName)>
<android.hardware.hdmi.IHdmiControlService$Default: java.util.List getInputDevices()>
<android.hardware.camera2.CameraManager$CameraManagerGlobal: android.hardware.ICameraService getCameraService()>
<com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass[] values()>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>
<android.print.IPrintJobStateChangeListener$Default: android.os.IBinder asBinder()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<com.android.internal.view.IInlineSuggestionsResponseCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Default: boolean supplyPinForSubscriber(int,java.lang.String)>
<android.content.res.ResourcesImpl$ThemeImpl: int getAppliedStyleResId()>
<android.os.IVoldListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.WebVttTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Default: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.WifiNl80211Manager: java.util.concurrent.atomic.AtomicBoolean access$100(android.net.wifi.nl80211.WifiNl80211Manager)>
<android.telephony.PreciseDataConnectionState$1: void <init>()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getHighSpeedVideoSizes()>
<android.media.IMediaRouter2$Stub: android.media.IMediaRouter2 asInterface(android.os.IBinder)>
<android.location.IGnssStatusListener$Stub: android.location.IGnssStatusListener getDefaultImpl()>
<android.hardware.camera2.legacy.ParameterUtils: int getClosestAvailableZoomCrop(android.hardware.Camera$Parameters,android.graphics.Rect,android.util.Size,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>
<android.os.IServiceCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>
<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.google.android.mms.util.DrmConvertSession: int close(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long getAnimatorNativePtr()>
<android.content.pm.IOnAppsChangedListener$Stub: android.content.pm.IOnAppsChangedListener asInterface(android.os.IBinder)>
<com.android.internal.telephony.ISub$Default: int clearSubInfo()>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>
<android.transition.Transition: android.util.ArrayMap getNameOverrides()>
<android.view.MotionEvent: float getTouchMajor(int)>
<android.app.admin.DevicePolicyManager: java.util.List retrievePreRebootSecurityLogs(android.content.ComponentName)>
<android.telephony.TelephonyManager: int getDataNetworkType()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.content.Intent createManageBlockedNumbersIntent()>
<android.content.pm.ServiceInfo: int getForegroundServiceType()>
<android.os.IUserManager$Stub: java.lang.String getTransactionName(int)>
<android.net.Uri: int compareTo(java.lang.Object)>
<android.media.RingtoneManager: android.net.Uri getCacheForType(int,int)>
<android.content.pm.IPackageMoveObserver$Stub: java.lang.String getTransactionName(int)>
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)>
<android.os.IRecoverySystemProgressListener$Stub: android.os.IRecoverySystemProgressListener asInterface(android.os.IBinder)>
<android.content.res.XmlBlock$Parser: int getAttributeNameResource(int)>
<android.app.usage.NetworkStats$Bucket: long getRxBytes()>
<android.hardware.camera2.impl.CaptureResultExtras: int getPrecaptureTriggerId()>
<android.view.View: int getScrollBarFadeDuration()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int[] supplyPinReportResultForSubscriber(int,java.lang.String)>
<android.media.session.ISessionCallback$Stub: android.media.session.ISessionCallback asInterface(android.os.IBinder)>
<android.media.IAudioService$Default: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<android.content.Context: android.os.IBinder getActivityToken()>
<android.app.backup.IBackupManager$Default: java.lang.String[] listAllTransports()>
<android.app.assist.AssistStructure$HtmlInfoNode: java.lang.String getTag()>
<android.telephony.ims.aidl.IImsConfig$Stub: java.lang.String getTransactionName(int)>
<android.service.euicc.EuiccProfileInfo: java.lang.String getNickname()>
<android.os.storage.StorageManager: long getAllocatableBytes(java.util.UUID,int)>
<android.net.lowpan.ILowpanInterface$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)>
<android.permission.IPermissionManager$Default: java.lang.String getDefaultBrowser(int)>
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioningConfigApplied()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.View: float getPivotX()>
<com.android.internal.database.SortCursor: short getShort(int)>
<android.widget.Scroller: int getDuration()>
<android.webkit.WebStorage$Origin: long getQuota()>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeZoneEnabled(android.content.ComponentName)>
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.os.IHwBinder asBinder()>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String,int)>
<android.media.midi.IMidiDeviceServer$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub: com.android.internal.telephony.euicc.IListNotificationsCallback getDefaultImpl()>
<android.view.InputDevice: int[] getDeviceIds()>
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceType()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAvailableServices(java.util.List)>
<android.app.ISearchManager$Stub: android.os.IBinder asBinder()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.IPackageDataObserver$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.IEuiccController$Stub: com.android.internal.telephony.euicc.IEuiccController asInterface(android.os.IBinder)>
<android.location.GnssClock: long getElapsedRealtimeNanos()>
<android.media.AudioManager: android.media.AudioManager$AudioServerStateCallback access$1700(android.media.AudioManager)>
<android.hardware.display.IDisplayManager$Default: android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String)>
<android.hardware.radio.V1_2.CellIdentityTdscdma: int hashCode()>
<android.content.res.GradientColor$GradientColorFactory: int getChangingConfigurations()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Default: android.os.IBinder asBinder()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(int,java.lang.String,long,long,int,int,int)>
<android.view.KeyboardShortcutInfo: int describeContents()>
<android.text.InputFilter$AllCaps$CharSequenceWrapper: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<com.android.internal.inputmethod.IIntResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CallQuality: int getMaxRelativeJitter()>
<android.app.assist.AssistStructure: int access$200(android.app.assist.AssistStructure)>
<android.app.contentsuggestions.IClassificationsCallback$Stub: android.os.IBinder asBinder()>
<com.android.ims.internal.IImsMultiEndpoint$Stub: java.lang.String getTransactionName(int)>
<android.net.LinkAddress: boolean isIPv6()>
<com.android.internal.telephony.ISub$Default: int setDisplayNumber(java.lang.String,int)>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>
<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int,int,int)>
<android.media.RouteDiscoveryPreference: android.os.Bundle getExtras()>
<android.os.Parcel$2: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.hardware.hdmi.IHdmiInputChangeListener asInterface(android.os.IBinder)>
<android.hardware.display.DeviceProductInfo$ManufactureDate: java.lang.Integer getYear()>
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry getDefaultImpl()>
<android.animation.PathKeyframes$SimpleKeyframes: android.animation.Keyframes clone()>
<android.view.IWindowSession$Stub$Proxy: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String,int)>
<android.animation.Keyframe: java.lang.Class getType()>
<android.app.Notification$CarExtender$UnreadConversation: java.lang.String[] getParticipants()>
<android.os.BatteryStats$LevelStepTracker: long getDurationAt(int)>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getVendorUuid()>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: com.android.internal.telephony.euicc.ISwitchToProfileCallback getDefaultImpl()>
<com.android.internal.app.IVoiceInteractorCallback$Stub: android.os.IBinder asBinder()>
<android.widget.ProgressBar: int getProgress()>
<android.hardware.usb.UsbDevice: int hashCode()>
<android.net.wifi.nl80211.IClientInterface$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>
<android.content.Context: int getThemeResId()>
<android.os.Environment: java.io.File getRootDirectory()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
<android.media.MediaRoute2Info: java.lang.String getClientPackageName()>
<android.telephony.UiccAccessRule: java.lang.String getPackageName()>
<android.app.AppOpsManager$HistoricalOp: long getRejectCount(int,int,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getTelephonyHistograms()>
<android.os.Debug$MemoryInfo: int getSummaryNativeHeapRss()>
<android.media.IPlayer$Stub: android.os.IBinder asBinder()>
<android.media.IMediaRouterService$Stub: android.media.IMediaRouterService getDefaultImpl()>
<android.content.pm.IPinItemRequest$Stub: android.content.pm.IPinItemRequest getDefaultImpl()>
<android.telephony.CellIdentity: long inRangeOrUnavailable(long,long,long)>
<android.hardware.location.NanoAppInstanceInfo: int getAppVersion()>
<android.database.sqlite._$$Lambda$RBWjWVyGrOTsQrLCYzJ_G8Uk25Q: java.lang.Object get()>
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>
<android.app.INotificationManager$Default: android.os.IBinder asBinder()>
<android.telecom.Log: java.lang.String getPackageAbbreviation(android.content.ComponentName)>
<android.os.VibrationAttributes: int hashCode()>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<android.view.Display$HdrCapabilities: float getDesiredMinLuminance()>
<android.os.IIncidentDumpCallback$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getOpticalInsets()>
<android.util.proto.EncodedBuffer: int readRawFixed32()>
<android.view.animation.Animation: int getZAdjustment()>
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)>
<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()>
<android.app.admin.DevicePolicyManager: boolean isProfileActivePasswordSufficientForParent(int)>
<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()>
<android.app.NotificationManager$Policy: int allowConversationsFrom()>
<android.telephony.CellIdentityTdscdma: int describeContents()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)>
<android.telephony.TelephonyManager: int getSimApplicationState(int)>
<android.content.pm.ShortcutInfo: java.lang.String getTitleResName()>
<android.location.GpsMeasurement: byte getMultipathIndicator()>
<android.media.session.ISessionController$Default: java.lang.CharSequence getQueueTitle()>
<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
<android.view.MotionEvent: long getHistoricalEventTime(int)>
<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>
<android.app.IAlarmManager$Default: long getNextWakeFromIdleTime()>
<android.app.IActivityTaskManager$Stub$Proxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.telecom.Logging.Session: java.lang.String getOwnerInfo()>
<android.hardware.display.BrightnessConfiguration: long getShortTermModelTimeoutMillis()>
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiScanBackgroundCount(int)>
<android.net.ConnectionInfo: int describeContents()>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,int,java.lang.String)>
<android.widget.ListView: android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int)>
<android.graphics.drawable.RippleForeground$3: java.lang.Object get(java.lang.Object)>
<android.telephony.CellIdentityNr: int getTac()>
<android.os.IPowerManager$Default: int getLastShutdownReason()>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>
<android.content.pm.IPackageMoveObserver$Default: android.os.IBinder asBinder()>
<android.media.AudioTrack: int getStreamType()>
<android.hardware.radio.ProgramList: java.util.List toList()>
<android.media.tv.ITvInputHardware$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
<android.renderscript.Element: int getSubElementOffsetBytes(int)>
<android.content.res.TypedArray: float getFloat(int,float)>
<android.content.IIntentReceiver$Default: android.os.IBinder asBinder()>
<android.media.midi.IMidiDeviceOpenCallback$Stub: android.os.IBinder asBinder()>
<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()>
<android.database.CursorWrapper: int getType(int)>
<android.content.pm.PackageInstaller$SessionInfo: float getProgress()>
<android.app.ContextImpl: java.lang.String getOpPackageName()>
<android.hardware.usb.IUsbSerialReader$Default: android.os.IBinder asBinder()>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>
<android.graphics.Paint: android.graphics.Shader getShader()>
<android.app.job.JobParameters: android.net.Network getNetwork()>
<android.content.pm.IDataLoaderStatusListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsEcbmListener$Stub: com.android.ims.internal.IImsEcbmListener asInterface(android.os.IBinder)>
<android.media.tv.tunerresourcemanager.ResourceClientProfile: int describeContents()>
<com.android.internal.view.menu.MenuItemImpl: char getShortcut()>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.view.WindowInsets$Type: int mandatorySystemGestures()>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>
<android.telephony.BarringInfo$1: android.telephony.BarringInfo[] newArray(int)>
<android.os.NativeHandle: java.io.FileDescriptor getFileDescriptor()>
<android.app.backup.IBackupObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.SyncRequest: long getSyncFlexTime()>
<com.android.internal.telephony.euicc.IGetAllProfilesCallback$Stub: com.android.internal.telephony.euicc.IGetAllProfilesCallback asInterface(android.os.IBinder)>
<android.hardware.camera2.impl.CameraMetadataNative: int describeContents()>
<android.os.IThermalEventListener$Default: android.os.IBinder asBinder()>
<android.view.ViewConfiguration: int getScaledScrollFactor()>
<android.app.ResourcesManager$ApkKey: int hashCode()>
<android.net.ConnectivityManager: java.lang.String[] getTetheredDhcpRanges()>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>
<android.os.IIncidentReportStatusListener$Default: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsHelper: int getStatsType()>
<android.opengl.EGLObjectHandle: int hashCode()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()>
<android.widget.GridView: int getNumColumns()>
<android.app.ListFragment: android.widget.ListView getListView()>
<android.animation.Animator: boolean isInitialized()>
<android.hardware.camera2.impl.PhysicalCaptureResultInfo: java.lang.String getCameraId()>
<android.hardware.radio.V1_5.BarringInfo: int hashCode()>
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)>
<android.os.storage.IStorageManager$Default: java.lang.String getPassword()>
<android.content.res.loader.ResourcesLoader: java.util.List getProviders()>
<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>
<android.hardware.camera2.params.SessionConfiguration: java.util.List getOutputConfigurations()>
<com.android.ims.internal.IImsUt$Default: int updateCLIP(boolean)>
<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList getDailyPackageChanges()>
<android.telephony.SubscriptionManager: java.util.List getSubscriptionPlans(int)>
<android.hardware.camera2.impl.CaptureCallbackHolder: int getSessionId()>
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)>
<android.telephony.TelephonyManager: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>
<android.location.Geofence: double getLatitude()>
<android.view.IWindowManager$Default: int getWindowingMode(int)>
<android.content.res.AssetManager: android.content.res.Configuration[] getSizeConfigurations()>
<android.os.Debug: java.lang.String getCallers(int,int)>
<android.app.IWallpaperManager$Stub$Proxy: int getWidthHint(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] getUsesStaticLibrariesCertDigests()>
<android.os.SystemProperties: int getInt(java.lang.String,int)>
<android.net.INetworkScoreCache$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageStatsObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioPresentation: java.util.Locale getLocale()>
<android.security.net.config.ConfigNetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<android.media.VolumeShaper$Configuration: int getId()>
<com.android.internal.policy.PhoneWindow: boolean getAllowEnterTransitionOverlap()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<android.telephony.TelephonyManager: java.util.List getUiccCardsInfo()>
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.dex.ArtManager: java.io.File getProfileSnapshotFileForName(java.lang.String,java.lang.String)>
<android.graphics.drawable.LayerDrawable: int getTopPadding()>
<android.app.backup.IBackupCallback$Stub: java.lang.String getTransactionName(int)>
<android.os.connectivity.CellularBatteryStats: long getIdleTimeMillis()>
<android.app.backup.BackupProgress: int describeContents()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetEnd(int)>
<android.telephony.SignalStrength: int getLteAsuLevel()>
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: boolean isTracing()>
<android.app.admin.DevicePolicyManager: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>
<android.content.pm.IPackageMoveObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.ConnectivityManager: boolean isTetheringSupported()>
<android.widget.Editor$InsertionHandleView: int getCursorOffset()>
<com.android.internal.telephony.SmsHeader$ConcatRef: int hashCode()>
<android.app.INotificationManager$Stub$Proxy: int getNumNotificationChannelsForPackage(java.lang.String,int,boolean)>
<android.view.DisplayInfo: int getNaturalWidth()>
<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: java.util.List getSupportedCountries(boolean)>
<android.net.ProxyInfo: java.lang.String[] getExclusionList()>
<android.media.AudioFocusInfo: android.media.AudioAttributes getAttributes()>
<android.content.pm.IPackageDeleteObserver2$Default: android.os.IBinder asBinder()>
<android.media.AudioManager: boolean isStreamMute(int)>
<android.telephony.TelephonyManager: boolean isConcurrentVoiceAndDataSupported()>
<android.app.admin.DevicePolicyManager: boolean isCommonCriteriaModeEnabled(android.content.ComponentName)>
<android.view.IRemoteAnimationFinishedCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.view.IInputSessionCallback$Stub: com.android.internal.view.IInputSessionCallback asInterface(android.os.IBinder)>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getEuiccCardControllerServiceRegisterer()>
<android.app.VoiceInteractor$Prompt: java.lang.CharSequence getVoicePromptAt(int)>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<android.view.autofill.IAutoFillManagerClient$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getAllStackInfos()>
<android.graphics.drawable.shapes.RoundRectShape: int hashCode()>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>
<android.app.WindowConfiguration: android.graphics.Rect getBounds()>
<com.android.internal.telephony.util.TelephonyUtils: android.content.pm.ComponentInfo getComponentInfo(android.content.pm.ResolveInfo)>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.widget.inline.InlinePresentationSpec: android.os.Bundle getStyle()>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>
<android.app.slice.ISliceManager$Stub$Proxy: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)>
<android.os.connectivity.CellularBatteryStats: long getTimeInRatMicros(int)>
<android.media.tv.TvInputManager: int getClientPid(java.lang.String)>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>
<android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
<android.hardware.face.IFaceServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<android.content.pm.IPackageInstallerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.CameraDevice: int getCameraAudioRestriction()>
<android.security.keystore.IKeystoreService$Default: byte[] get(java.lang.String,int)>
<android.telephony.CbGeoUtils: java.util.List parseGeometriesFromString(java.lang.String)>
<android.transition.ChangeImageTransform$2: java.lang.Object get(java.lang.Object)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int describeContents()>
<android.net.wifi.nl80211.PnoNetwork: byte[] getSsid()>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>
<android.app.PictureInPictureParams: android.graphics.Rect getSourceRectHint()>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>
<android.hardware.usb.UsbInterface: java.lang.String getName()>
<android.content.pm.ChangedPackages: int describeContents()>
<android.util.KeyValueListParser: float getFloat(java.lang.String,float)>
<android.widget.Spinner: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.input.ITabletModeChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.ColorDrawable: int getColor()>
<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()>
<android.location.GpsMeasurement: double getAzimuthInDeg()>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: android.os.IBinder asBinder()>
<android.net.wifi.nl80211.NativeWifiClient: int hashCode()>
<android.view.contentcapture.IDataShareWriteAdapter$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure$ViewNodeBuilder: android.view.autofill.AutofillId getAutofillId()>
<android.content.res.AssetManager: java.lang.String getLastResourceResolution()>
<android.app.usage.UsageEvents$Event: java.lang.String getNotificationChannelId()>
<android.hardware.location.NanoAppMessage: int describeContents()>
<android.util.ArrayMap: int hashCode()>
<android.content.res.AssetManager: java.lang.String getResourceName(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric(int)>
<android.telephony.ims.ImsStreamMediaProfile: int getVideoQuality()>
<android.view.IRecentsAnimationRunner$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.role.RoleManager: java.lang.String getDefaultSmsPackage(int)>
<android.view.ViewRootImpl: android.view.SurfaceControl getSurfaceControl()>
<android.app.UiModeManager: int getNightMode()>
<android.net.MacAddress: byte[] toByteArray()>
<android.media.PlaybackParams: int getAudioStretchMode()>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>
<android.app.ApplicationPackageManager: java.lang.String getContentCaptureServicePackageName()>
<android.app.Notification: java.lang.String getShortcutId()>
<android.util.LongSparseLongArray: int access$000(android.util.LongSparseLongArray)>
<android.view.textclassifier.SelectionEvent: int getSmartEnd()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getColorMode()>
<android.net.INetworkScoreService$Stub: android.net.INetworkScoreService getDefaultImpl()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>
<android.location.GnssMeasurement: double getAutomaticGainControlLevelDb()>
<com.android.internal.view.IInputSessionCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.IPackageManager$Stub$Proxy: int getPackageUid(java.lang.String,int,int)>
<android.view.SurfaceControl: long[] getPhysicalDisplayIds()>
<android.content.ContentResolver: java.util.List getCurrentSyncs()>
<android.animation.StateListAnimator: android.animation.StateListAnimator clone()>
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>
<com.android.internal.policy.PhoneWindow: android.view.WindowInsetsController getInsetsController()>
<android.view.ViewGroup$1: java.lang.CharSequence getTitle()>
<android.content.BroadcastReceiver: java.lang.String getResultData()>
<android.telephony.CellSignalStrengthGsm: int getBitErrorRate()>
<android.os.NativeHandle: int[] getInts()>
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeIdInternal()>
<android.content.ContentResolver: java.util.List getOutgoingUriPermissions()>
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IActivityManager$Stub: android.app.IActivityManager getDefaultImpl()>
<android.widget.Magnifier: android.graphics.drawable.Drawable getOverlay()>
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: int getMappedViewType(int)>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>
<android.content.pm.IPackageManager$Stub$Proxy: int movePackage(java.lang.String,java.lang.String)>
<android.hardware.usb.IUsbManager$Default: long getCurrentFunctions()>
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getClientFormat()>
<android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback asInterface(android.os.IBinder)>
<android.hardware.display.IVirtualDisplayCallback$Stub: android.os.IBinder asBinder()>
<android.content.pm.SuspendDialogInfo: int getNeutralButtonTextResId()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int hashCode()>
<android.app.INotificationManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.GnssClock: double getReferenceCarrierFrequencyHzForIsb()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair: int calculateMarshalSize(java.lang.Object)>
<android.hardware.IConsumerIrService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: com.android.internal.telephony.euicc.IPrepareDownloadCallback getDefaultImpl()>
<android.text.PrecomputedText: float getCharWidthAt(int)>
<com.android.internal.widget.LockscreenCredential: int getType()>
<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()>
<android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>
<android.util.MemoryIntArray: int describeContents()>
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>
<android.app.backup.IRestoreObserver$Stub: android.app.backup.IRestoreObserver asInterface(android.os.IBinder)>
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(java.lang.String,int,java.lang.String)>
<android.telephony.TelephonyRegistryManager: void notifyCallStateChanged(int,int,int,java.lang.String)>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>
<android.telephony.CellIdentityNr: int hashCode()>
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeName(int)>
<android.hardware.radio.TunerAdapter: java.util.List getProgramList(java.util.Map)>
<android.app.RemoteInput: android.os.Bundle getExtras()>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getActiveStagedSession()>
<android.telephony._$$Lambda$VoWbarPy40APZWYZ2AqZZxi_Jm8: java.lang.Object applyOrThrow(java.lang.Object)>
<com.android.internal.view.menu.IconMenuPresenter: int getNumActualItemsShown()>
<android.hardware.camera2.params.MeteringRectangle: int getY()>
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>
<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.util.Size getLayoutSize()>
<android.view.View: int getTopPaddingOffset()>
<android.view.WindowlessWindowManager: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.telephony.TelephonyManager: java.lang.CharSequence getSimCarrierIdName()>
<android.os.UserManager$2: java.lang.Boolean recompute(java.lang.Integer)>
<android.view.inputmethod.InputMethodManager: android.view.ImeFocusController access$300(android.view.inputmethod.InputMethodManager)>
<android.view.KeyEvent: int getUnicodeChar()>
<android.hardware.location.ContextHubManager: android.os.Handler access$100(android.hardware.location.ContextHubManager)>
<android.hardware.camera2.legacy.RequestThreadManager: android.os.ConditionVariable access$400(android.hardware.camera2.legacy.RequestThreadManager)>
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)>
<android.view.WindowInsets: int getStableInsetBottom()>
<android.content.res.XmlBlock$Parser: int getAttributeCount()>
<android.media.AudioRecord: int read(byte[],int,int,int)>
<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.hardware.camera2.params.OisSample: long getTimestamp()>
<android.hardware.display.IColorDisplayManager$Default: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrength: int getRssiDbmFromAsu(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>
<android.telephony.TelephonyManager: com.android.internal.telephony.ISms getSmsService()>
<android.view.IWindowSession$Default: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.content.pm.ShortcutQueryWrapper: int getQueryFlags()>
<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotWallpaper()>
<android.provider.DeviceConfig$Properties: boolean getBoolean(java.lang.String,boolean)>
<android.app.Person: android.net.Uri getIconUri()>
<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>
<android.os.UserManager: boolean isUserOfType(java.lang.String)>
<android.app.Dialog: android.view.Window getWindow()>
<android.app.ApplicationPackageManager: void getPackageSizeInfoAsUser(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.text.Layout: int getLineForOffset(int)>
<android.telephony.ims.feature.CapabilityChangeRequest: java.util.List getCapabilitiesToEnable()>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<android.net.IEthernetManager$Default: java.lang.String[] getAvailableInterfaces()>
<android.app.trust.IStrongAuthTracker$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.legacy.GLThreadManager: java.lang.String access$200(android.hardware.camera2.legacy.GLThreadManager)>
<android.content.pm.PackageParser$Instrumentation: int describeContents()>
<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String describeCurrentOperation()>
<android.os.storage.StorageManager: java.util.List getVolumes()>
<android.app.prediction.AppTargetEvent: android.app.prediction.AppTarget getTarget()>
<android.hardware.hdmi.HdmiSwitchClient: int getDeviceType()>
<android.media.session.ISessionController$Stub$Proxy: int getRatingType()>
<android.graphics.drawable.GradientDrawable: float getGradientCenterY()>
<com.android.internal.telephony.ITelephony$Default: boolean switchSlots(int[])>
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()>
<android.content.pm.IPackageManager$Default: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)>
<android.hardware.radio.ProgramSelector: int describeContents()>
<android.os.incremental.IIncrementalService$Default: int createLinkedStorage(java.lang.String,int,int)>
<com.android.internal.view.menu.ActionMenuItem: int getGroupId()>
<android.view.textclassifier.TextLinks$Request: java.time.ZonedDateTime getReferenceTime()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getAllCellInfo(java.lang.String,java.lang.String)>
<android.app.IWallpaperManager$Default: int getHeightHint(int)>
<android.content.pm.SuspendDialogInfo: int describeContents()>
<android.text.style.QuoteSpan: int getSpanTypeId()>
<android.app.ActivityManager$TaskDescription: java.lang.String getIconResourcePackage()>
<android.net.LinkProperties: java.net.Inet4Address getDhcpServerAddress()>
<android.os.health.HealthStatsParceler: int describeContents()>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents$Event)>
<android.view.ViewConfiguration: int getScaledHoverSlop()>
<android.content.LoggingContentInterface: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.Drawable newDrawable()>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.hardware.hdmi.IHdmiVendorCommandListener getDefaultImpl()>
<android.os.Parcel: int readExceptionCode()>
<android.print.PrintManager: android.print.PrintManager getGlobalPrintManagerForUser(int)>
<com.android.internal.telephony.IBooleanConsumer$Default: android.os.IBinder asBinder()>
<android.media.AudioManager: int getRouting(int)>
<android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult getDefaultImpl()>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()>
<android.content.pm.IPackageInstaller$Stub$Proxy: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>
<android.app.admin.IDevicePolicyManager$Default: long forceSecurityLogs()>
<android.telephony.TelephonyManager: java.lang.String[] getMergedImsisFromGroup()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Timer getBluetoothScanTimer()>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>
<android.media.AudioFormat: int getEncoding()>
<android.location.GnssMeasurement: double getSatelliteInterSignalBiasNanos()>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>
<android.util.Range: int hashCode()>
<android.media.MediaPlayer: byte[] provideKeyResponse(byte[],byte[])>
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()>
<com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession getDefaultImpl()>
<android.hardware.display.ColorDisplayManager: int getMaximumColorTemperature(android.content.Context)>
<com.android.internal.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>
<com.android.internal.util.ContrastColorUtil$ColorUtilsFromCompat: int LABToColor(double,double,double)>
<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>
<android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>
<android.content.pm.PackageManager: java.lang.String[] setPackagesSuspended(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo)>
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.media.session.ISessionCallback$Stub: android.os.IBinder asBinder()>
<android.graphics.Paint: int getAlpha()>
<android.location.LocationRequest: java.lang.String getProvider()>
<android.content.Intent: char getCharExtra(java.lang.String,char)>
<android.net.IEthernetManager$Stub$Proxy: java.lang.String[] getAvailableInterfaces()>
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>
<android.graphics.drawable.BitmapDrawable: int getGravity()>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
<com.android.internal.os.ZygoteServer: java.lang.Runnable fillUsapPool(int[],boolean)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.telephony.CellIdentity$1: android.telephony.CellIdentity createFromParcel(android.os.Parcel)>
<android.view.DisplayCutout: android.graphics.Rect getBoundingRectRight()>
<android.content.res.ResourcesImpl: void getValue(int,android.util.TypedValue,boolean)>
<android.app.ContextImpl: android.content.Context getOuterContext()>
<android.telephony.data.ApnSetting: java.lang.String getEntryName()>
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
<android.app.AppOpsManager: void getHistoricalOpsFromDiskRaw(android.app.AppOpsManager$HistoricalOpsRequest,java.util.concurrent.Executor,java.util.function.Consumer)>
<android.view.DisplayInfo: android.view.Display$Mode getMode()>
<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>
<android.widget.RemoteViews: int describeContents()>
<com.android.internal.telephony.ITelephony$Default: boolean isIccLockEnabled(int)>
<android.view.ScrollCaptureTarget: android.graphics.Point getPositionInWindow()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getTitle(android.net.Uri)>
<android.net.lowpan.LowpanChannelInfo: int getIndex()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)>
<android.net.IpSecTunnelInterfaceResponse: int describeContents()>
<android.telephony.TelephonyManager: java.lang.String getNetworkSpecifier()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.SignalStrength getSignalStrength(int)>
<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()>
<android.media.tv.ITvInputHardwareCallback$Stub: android.media.tv.ITvInputHardwareCallback getDefaultImpl()>
<android.content.ContentProviderResult: int describeContents()>
<android.app.WaitResult: int describeContents()>
<android.security.net.config.SystemCertificateSource: android.security.net.config.SystemCertificateSource getInstance()>
<android.net.ConnectivityManager: java.lang.String getAlwaysOnVpnPackageForUser(int)>
<android.hardware.hdmi.IHdmiRecordListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.Bitmap: android.graphics.Color getColor(int,int)>
<com.android.internal.view.menu.MenuItemImpl: int getAlphabeticModifiers()>
<android.util.proto.EncodedBuffer: int getSize()>
<android.content.pm.parsing.result.ParseTypeImpl: java.lang.Exception getException()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub$Proxy: android.media.soundtrigger_middleware.ModelParameterRange queryModelParameterSupport(int,int)>
<com.android.internal.telecom.ITelecomService$Default: android.os.IBinder asBinder()>
<android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.widget.CompoundButton: int getCompoundPaddingRight()>
<android.renderscript.RenderScript: int nMeshGetVertexBufferCount(long)>
<android.util.proto.EncodedBuffer: int getWritePos()>
<android.media.MediaCodecInfo$CodecProfileLevel: int hashCode()>
<android.hardware.radio.V1_5.CellIdentityLte: int hashCode()>
<android.content.IIntentReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<android.media.tv.tunerresourcemanager.TunerDemuxRequest: int getClientId()>
<android.view._$$Lambda$FocusFinder$Pgx6IETuqCkrhJYdiBes48tolG4: android.view.View get(android.view.View,android.view.View)>
<android.net.PlatformVpnProfile: int getType()>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,android.text.method.DigitsKeyListener)>
<android.provider.FontsContract$FontFamilyResult: int getStatusCode()>
<android.widget.TextView: int getMaxEms()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()>
<android.view.IDisplayWindowListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,boolean,int,int,android.graphics.Paint)>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>
<android.view.MotionEvent: float getY(int)>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int describeContents()>
<android.widget.TextView: int getPaintFlags()>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$getPermissionUsages$20(boolean,long,android.permission.IPermissionController)>
<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>
<android.telephony.CellIdentityLte: java.lang.String getMobileNetworkOperator()>
<android.print.IPrintManager$Default: java.util.List getPrintJobInfos(int,int)>
<android.net.wifi.nl80211.ChannelSettings: int describeContents()>
<android.graphics.RecordingCanvas: long finishRecording()>
<android.view.animation.Transformation: int getTransformationType()>
<android.accounts.IAccountManagerResponse$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.ContextWrapper: java.lang.String getAttributionTag()>
<com.android.internal.telephony.ITelephony$Default: long getAllowedNetworkTypes(int)>
<android.app.blob.IBlobStoreSession$Stub$Proxy: boolean isPublicAccessAllowed()>
<com.android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>
<android.view.MotionEvent: float getRawX(int)>
<android.view.contentcapture.ContentCaptureManager: android.content.ComponentName getServiceComponentName()>
<com.android.internal.policy.PhoneLayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<android.view.ViewGroup: android.view.View dispatchUnhandledKeyEvent(android.view.KeyEvent)>
<android.view.DisplayCutout: int getSafeInsetBottom()>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>
<android.window.ITaskOrganizer$Stub: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreService$Default: int del(java.lang.String,int)>
<android.graphics.drawable.ColorDrawable: int getAlpha()>
<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.TypedArray obtainStyledAttributes(android.content.res.Resources$Theme,android.util.AttributeSet,int[],int,int)>
<android.location.Address: java.lang.String getAdminArea()>
<android.service.autofill.FillEventHistory$Event: int getType()>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()>
<android.hardware.location.ContextHubInfo: int getStaticSwVersion()>
<android.telephony.CellSignalStrengthWcdma$1: android.telephony.CellSignalStrengthWcdma createFromParcel(android.os.Parcel)>
<android.view.MenuInflater: android.content.Context getContext()>
<android.widget.ArrayAdapter: android.content.res.Resources$Theme getDropDownViewTheme()>
<android.app.timedetector.NetworkTimeSuggestion: int describeContents()>
<com.android.internal.app.IAppOpsService$Default: int permissionToOpCode(java.lang.String)>
<android.os.IVibratorService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.sqlite.SQLiteDatabase$CursorFactory getCursorFactory()>
<android.app.NotificationManager: java.util.List getEnabledNotificationListenerPackages()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()>
<android.app.AppOpsManager$HistoricalPackageOps: android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)>
<android.view.IRemoteAnimationRunner$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioGain: int mode()>
<com.android.internal.app.IVoiceInteractorRequest$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SmsMessage: int getIndexOnIcc()>
<android.media.audiopolicy.AudioMix: java.lang.String getRegistration()>
<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.media.RoutingSessionInfo: java.lang.String getOwnerPackageName()>
<android.telecom.Logging.EventManager: java.util.Map access$000(android.telecom.Logging.EventManager)>
<com.android.internal.infra.IAndroidFuture$Stub: com.android.internal.infra.IAndroidFuture asInterface(android.os.IBinder)>
<android.hardware.camera2.CaptureResult: java.lang.Class getKeyClass()>
<android.content.pm.InstrumentationInfo: int describeContents()>
<android.media.audiopolicy.AudioPolicy: android.media.AudioRecord createAudioRecordSink(android.media.audiopolicy.AudioMix)>
<android.media.MediaRecorder: int getPortId()>
<android.view.IWindowFocusObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue getSubject()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getOverrideApns(android.content.ComponentName)>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setOriginatingNumbers(java.util.List)>
<android.view.View: int getVerticalScrollbarPosition()>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex(java.lang.String,java.lang.String)>
<android.widget.PopupWindow: int getHeight()>
<android.accounts.IAccountManager$Default: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)>
<android.os.PowerManager: int getMinimumScreenBrightnessForVrSetting()>
<android.net.shared.Inet4AddressUtils: java.net.Inet4Address getPrefixMaskAsInet4Address(int)>
<android.media.AudioDeviceInfo: int[] getEncodings()>
<android.widget.RemoteViews$BitmapReflectionAction: int getActionTag()>
<com.android.ims.internal.IImsEcbm$Stub: com.android.ims.internal.IImsEcbm getDefaultImpl()>
<android.media.projection.IMediaProjection$Stub: java.lang.String getTransactionName(int)>
<android.widget.RemoteViewsListAdapter: int getCount()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<android.os.Debug$InstructionCount: int globalTotal()>
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getInstalledAccessibilityServiceList(int)>
<android.hardware.ICamera$Stub: android.os.IBinder asBinder()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean isFingerprintGestureDetectionAvailable()>
<android.view.animation.Animation: long getStartTime()>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.net.ConnectivityManager: android.net.SocketKeepalive createSocketKeepalive(android.net.Network,java.net.Socket,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>
<android.hardware.display.IDisplayManager$Stub$Proxy: android.content.pm.ParceledListSlice getAmbientBrightnessStats()>
<android.widget.TextView: int getMinLines()>
<android.graphics.drawable.LayerDrawable: int getBottomPadding()>
<com.android.internal.telephony.ISub$Default: int setSubscriptionProperty(int,java.lang.String,java.lang.String)>
<com.android.internal.os.Zygote: java.lang.String getWrapProperty(java.lang.String)>
<android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback asInterface(android.os.IBinder)>
<com.android.internal.telephony.OperatorInfo: int getRan()>
<com.android.internal.statusbar.IStatusBar$Default: android.os.IBinder asBinder()>
<android.view.View: android.view.View$OnLongClickListener getOnLongClickListener()>
<android.window.WindowContainerTransaction$Change: int access$176(android.window.WindowContainerTransaction$Change,int)>
<android.drm.DrmManagerClient: java.util.Collection getAvailableDrmSupportInfo()>
<android.window.IWindowContainerToken$Stub: java.lang.String getTransactionName(int)>
<android.location.Location: long getTime()>
<android.app.admin.DevicePolicyManager: java.util.List getKeepUninstalledPackages(android.content.ComponentName)>
<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>
<android.os.IMessenger$Default: android.os.IBinder asBinder()>
<android.view.textclassifier.TextSelection: java.lang.String getId()>
<android.telephony.TelephonyFrameworkInitializer: android.telephony.SubscriptionManager lambda$registerServiceWrappers$1(android.content.Context)>
<android.companion.CompanionDeviceManager: boolean isDeviceAssociatedForWifiConnection(java.lang.String,android.net.MacAddress,android.os.UserHandle)>
<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ComponentName: java.lang.String getShortClassName()>
<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage createStorage(java.lang.String,android.content.pm.DataLoaderParams,int,boolean,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)>
<android.util.MemoryIntArray: int hashCode()>
<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] getBands()>
<android.content.ContextWrapper: boolean isRestricted()>
<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)>
<android.media.AudioDeviceInfo: int[] getChannelIndexMasks()>
<android.print.PrintDocumentInfo: int hashCode()>
<android.app.AppOpsManager$PackageOps: java.util.List getOps()>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
<android.content.pm.SharedLibraryInfo: long getLongVersion()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getSelectionMode()>
<android.view.IScrollCaptureClient$Stub: android.os.IBinder asBinder()>
<android.media.MediaPlayer$DrmInfo: java.util.Map getPssh()>
<android.net.wifi.nl80211.IClientInterface$Default: int[] getPacketCounters()>
<com.android.internal.os.Zygote: int[] getUsapPipeFDs()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()>
<android.companion.IFindDeviceCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.policy.DecorView: android.view.View getStatusBarBackgroundView()>
<android.widget.EditText: boolean getFreezesText()>
<android.webkit.WebSyncManager: java.lang.Object clone()>
<android.view.InputMonitor: android.view.IInputMonitorHost getHost()>
<android.os.IIncidentCompanion$Stub: java.lang.String getTransactionName(int)>
<android.content.res.ColorStateList: int[][] getStates()>
<android.hardware.location.IContextHubService$Stub$Proxy: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>
<android.graphics.drawable.VectorDrawable$VFullPath: android.util.Property access$4000()>
<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>
<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription createFromParcel(android.os.Parcel)>
<com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub: com.android.internal.app.IVoiceInteractionSessionShowCallback asInterface(android.os.IBinder)>
<android.app.IUriGrantsManager$Default: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
<android.debug.IAdbManager$Stub$Proxy: int getAdbWirelessPort()>
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()>
<android.media.IRecordingConfigDispatcher$Default: android.os.IBinder asBinder()>
<android.app.Notification: android.graphics.drawable.Icon getLargeIcon()>
<android.os.storage.IStorageManager$Default: int getEncryptionState()>
<android.view.KeyEvent: char getNumber()>
<android.net.NetworkTemplate: int[] getAllCollapsedRatTypes()>
<android.media.AudioManager: boolean isAudioFocusExclusive()>
<android.text.style.LineHeightSpan$Standard: int describeContents()>
<android.os.IRecoverySystem$Stub: android.os.IBinder asBinder()>
<android.app.blob.LeaseInfo: long getExpiryTimeMillis()>
<android.os.UserManager: long getUserUnlockRealtime()>
<android.app.prediction.AppPredictionSessionId: int getUserId()>
<android.media.AudioRecordingConfiguration: android.media.AudioDeviceInfo getAudioDevice()>
<android.view.View: android.graphics.Matrix getMatrix()>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>
<android.os.UserManager: java.util.List getEnabledProfiles(int)>
<android.security.IKeyChainAliasCallback$Stub: android.os.IBinder asBinder()>
<android.app.SyncNotedAppOp: int describeContents()>
<android.widget.TextView: boolean getFreezesText()>
<android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants[] values()>
<android.view.inputmethod.InputBinding: int getPid()>
<android.security.net.config.ApplicationConfig: javax.net.ssl.X509TrustManager getTrustManager()>
<android.hardware.face.IFaceService$Stub$Proxy: java.util.List getEnrolledFaces(int,java.lang.String)>
<android.service.notification.NotificationStats: int hashCode()>
<android.hardware.radio.V1_5.CellInfo: int hashCode()>
<android.content.pm.IPackageManager$Default: android.os.Bundle getSuspendedPackageAppExtras(java.lang.String,int)>
<android.telephony.TelephonyRegistryManager: void notifyOpportunisticSubscriptionInfoChanged()>
<android.telephony.TelephonyManager: int setIccLockEnabled(boolean,java.lang.String)>
<android.content.om.OverlayInfo: int getUserId()>
<android.hardware.display.DeviceProductInfo: java.lang.String getName()>
<android.os.IRecoverySystem$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Default: int getOrganizationColor(android.content.ComponentName)>
<android.filterfw.core.Filter: int getNumberOfInputs()>
<android.hardware.ConsumerIrManager$CarrierFrequencyRange: int getMinFrequency()>
<android.location.IGnssStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.session.IOnVolumeKeyLongPressListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<android.app.blob.IBlobCommitCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String,java.lang.String)>
<android.provider.ContactsContract$CommonDataKinds$Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.os.BatteryStats$LevelStepTracker: int getModModeAt(int)>
<android.view.InputDevice: int getSources()>
<android.view.ViewConfiguration: float getScrollFriction()>
<android.app.IActivityTaskManager$Stub$Proxy: boolean isInLockTaskMode()>
<android.app.Activity: boolean isTaskRoot()>
<android.view.autofill.AutofillPopupWindow$2: android.os.IBinder getWindowToken()>
<android.text.SpannableString: int nextSpanTransition(int,int,java.lang.Class)>
<android.net.StringNetworkSpecifier: int describeContents()>
<android.location.GnssStatus: float getCarrierFrequencyHz(int)>
<android.hardware.camera2.CaptureRequest$Key: int hashCode()>
<android.view.InputDevice: int describeContents()>
<android.content.pm.parsing.ParsingPackageImpl: float getMinAspectRatio()>
<com.android.internal.util.SyncResultReceiver: java.lang.String[] getStringArrayResult()>
<android.app.prediction.IPredictionCallback$Default: android.os.IBinder asBinder()>
<android.media.AudioDeviceInfo: android.media.AudioDevicePort getPort()>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>
<android.widget.AbsListView: int getSelectionModeForAccessibility()>
<android.media.RouteDiscoveryPreference: int hashCode()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()>
<android.os.WorkSource: java.lang.String getName(int)>
<android.os.IPowerManager$Stub$Proxy: boolean isAmbientDisplayAvailable()>
<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace getColorSpace()>
<android.widget.FastScroller$3: java.lang.Object get(java.lang.Object)>
<android.content.UndoManager: int redo(android.content.UndoOwner[],int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<com.android.internal.os.BatteryStatsHelper: java.util.List getUsageList()>
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.filterfw.geometry.Rectangle: float getHeight()>
<android.app.backup.IBackupManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsUt$Default: int updateCallBarringWithPassword(int,int,java.lang.String[],int,java.lang.String)>
<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<android.app.LoaderManager: android.app.FragmentHostCallback getFragmentHostCallback()>
<com.android.server.SystemConfig: android.util.ArrayMap getAndClearPackageToUserTypeBlacklist()>
<android.telephony.ClosedSubscriberGroupInfo$1: android.telephony.ClosedSubscriberGroupInfo createFromParcel(android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECParameterSpec getParams()>
<android.app.usage.NetworkStats$Bucket: int getDefaultNetworkStatus()>
<android.telephony.CellIdentityCdma: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.webkit.WebViewFactory: android.content.pm.PackageInfo getLoadedPackageInfo()>
<android.app.Vr2dDisplayProperties: int describeContents()>
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()>
<android.os.DropBoxManager$Entry: long getTimeMillis()>
<com.android.internal.policy.PhoneWindow: int getDecorCaptionShade()>
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)>
<android.telephony.ModemActivityInfo: int getSleepTimeMillis()>
<android.net.CaptivePortalData: long getRefreshTimeMillis()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsImpl$BatchTimer: int computeCurrentCountLocked()>
<android.hardware.camera2.CameraCharacteristics: java.lang.Class getKeyClass()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String,java.lang.String)>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
<android.net.lowpan.LowpanChannelInfo: android.net.lowpan.LowpanChannelInfo getChannelInfoForIeee802154Page0(int)>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPersonalAppsSuspendedReasons(android.content.ComponentName)>
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getProcessName()>
<android.os.incremental.IIncrementalService$Default: int makeBindMount(int,java.lang.String,java.lang.String,int)>
<android.content.pm.ApplicationInfo: int getGwpAsanMode()>
<android.app.IActivityTaskManager$Default: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.security.keystore.recovery.KeyChainProtectionParams: byte[] getSecret()>
<android.view.IDisplayWindowInsetsController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()>
<android.app.backup.RestoreSession: int restorePackages(long,android.app.backup.RestoreObserver,java.util.Set)>
<android.os.storage.StorageManager: long benchmark(java.lang.String)>
<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: int access$2102(android.location.GpsMeasurement,int)>
<android.view.ViewRootInsetsControllerHost: java.lang.String getRootViewTitle()>
<android.app.job.IJobScheduler$Stub: android.os.IBinder asBinder()>
<android.content.pm.dex.IArtManager$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>
<android.app.ActivityManager: boolean isLowRamDevice()>
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(java.lang.Object,java.lang.Object)>
<android.os.IUserManager$Stub$Proxy: java.lang.String getUserName()>
<com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService asInterface(android.os.IBinder)>
<android.hardware.cas.V1_2.ICas$Proxy: int hashCode()>
<android.telephony.SubscriptionPlan: java.lang.CharSequence getSummary()>
<com.android.internal.content.om.OverlayConfig: java.util.ArrayList getImmutableFrameworkOverlayIdmapInvocations()>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<android.telephony.CellInfo: void <init>()>
<android.view.ViewRootImpl: android.os.IBinder getInputToken()>
<android.text.style.TextAppearanceSpan: int getTextStyle()>
<android.media.IRemoteVolumeObserver$Stub: android.media.IRemoteVolumeObserver asInterface(android.os.IBinder)>
<android.telephony.SmsCbMessage: long getReceivedTime()>
<android.media.MediaCodec$MediaImage$MediaPlane: int getPixelStride()>
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceDataspace(android.view.Surface)>
<android.media.MediaRouter$RouteGroup: int getRouteCount()>
<android.net.LinkAddress: int hashCode()>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()>
<android.location.GnssMeasurementCorrections: java.util.List getSingleSatelliteCorrectionList()>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
<android.graphics.RenderNode: int getWidth()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: long getMaximumDataBlockSize()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getMutedSwatch()>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String,java.lang.String,java.lang.String)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$FmBandConfig: boolean getRds()>
<android.graphics.drawable.GradientDrawable: boolean getUseLevel()>
<android.telephony.ImsiEncryptionInfo: java.lang.String getKeyIdentifier()>
<android.media.AudioTrack: int getBufferCapacityInFrames()>
<android.security.net.config.RootTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<android.permission.IPermissionManager$Default: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.media.midi.IMidiDeviceServer$Stub: java.lang.String getTransactionName(int)>
<android.text.DynamicLayout: int getEndHyphenEdit(int)>
<android.media.session.IOnMediaKeyEventDispatchedListener$Default: android.os.IBinder asBinder()>
<android.app.IUserSwitchObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>
<android.content.pm.PackageInstaller$SessionInfo: long getSize()>
<android.media.session.ISession$Stub: android.media.session.ISession getDefaultImpl()>
<android.net.NetworkIdentity: boolean getRoaming()>
<android.content.om.IOverlayManager$Default: android.os.IBinder asBinder()>
<android.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.view.textclassifier.SelectionEvent: java.lang.String getPackageName()>
<android.hardware.display.Curve: float[] getX()>
<android.app.timezone.RulesState: int hashCode()>
<android.hardware.radio.V1_2.CellInfoGsm: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)>
<android.view.View: int getRawTextDirection()>
<android.net.TrafficStats: long getRxBytes(java.lang.String)>
<android.util.apk.WrappedX509Certificate: int getVersion()>
<android.media.tv.TvTrackInfo: java.lang.CharSequence getDescription()>
<android.os.UserManager: boolean isGuestUser()>
<android.app.ISearchManager$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.widget.VerifyCredentialResponse: int describeContents()>
<android.os.strictmode.InstanceCountViolation: long getNumberOfInstances()>
<android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>
<android.app.job.IJobScheduler$Stub: java.lang.String getTransactionName(int)>
<android.location.LocationManager$GnssAntennaInfoListenerManager: boolean registerService(java.lang.Void)>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
<android.widget.ProgressBar: boolean getMirrorForRtl()>
<android.telephony.ims.aidl.IImsSmsListener$Stub: java.lang.String getTransactionName(int)>
<android.os.IServiceManager$Default: android.os.IBinder asBinder()>
<android.content.CursorEntityIterator: android.content.Entity next()>
<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>
<android.telephony.SignalStrength: int getEvdoSnr()>
<android.net.IEthernetManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.permission.IPermissionManager$Default: java.util.List getAutoRevokeExemptionGrantedPackages(int)>
<android.renderscript.Matrix2f: float[] getArray()>
<android.text.style.TextAppearanceSpan: android.os.LocaleList getTextLocales()>
<android.graphics.Canvas: int save(int)>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int)>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableSessionKeys()>
<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)>
<android.app.VoiceInteractor$CompleteVoiceRequest: java.lang.String getRequestTypeName()>
<android.app.SearchableInfo: int getVoiceMaxResults()>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>
<android.view.autofill.AutofillManager$CompatibilityBridge: int getRelevantEventTypes(int)>
<android.content.pm.ProviderInfo: int describeContents()>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>
<android.hardware.location.NanoAppInstanceInfo: int getNeededWriteMemBytes()>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeights()>
<android.content.ContentResolver$StringResultListener: java.lang.Object getResultFromBundle(android.os.Bundle)>
<android.hardware.hdmi.HdmiPortInfo: int getType()>
<android.view.Display: int getType()>
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitResourcePaths()>
<android.telephony.CellIdentityLte: int getMcc()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>
<android.webkit.IWebViewUpdateService$Stub: java.lang.String getTransactionName(int)>
<android.os.IClientCallback$Stub: java.lang.String getTransactionName(int)>
<android.text.Layout: int getWidth()>
<android.view.contentcapture.ContentCaptureContext: int getFlags()>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
<android.media.AudioFormat: int getChannelMask()>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener getDefaultImpl()>
<android.media.AudioGainConfig: int channelMask()>
<android.os.IIncidentCompanion$Default: java.util.List getPendingReports()>
<android.media.tv.ITvInputManager$Default: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>
<android.animation.Animator: java.util.ArrayList getListeners()>
<android.telephony.SignalStrength: int getAsuLevel()>
<android.content.pm.ShortcutInfo: java.lang.String getIconResName()>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>
<android.text.style.SuggestionRangeSpan: int getSpanTypeIdInternal()>
<android.hardware.radio.V1_2.CellIdentity: int hashCode()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSmsServiceRegisterer()>
<com.android.internal.os.BatteryStatsImpl: int getStartCount()>
<android.telephony.SmsManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByName(java.lang.String)>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>
<android.content.res.FontResourcesParser$FontFileResourceEntry: java.lang.String getFileName()>
<android.telephony.TelephonyManager: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)>
<android.telephony.SubscriptionManager: boolean isNetworkRoaming(int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()>
<android.graphics.NinePatch: int getWidth()>
<android.net.lowpan.LowpanChannelInfo: int getMaxTransmitPower()>
<android.app.usage.UsageStats: int getAppLaunchCount()>
<android.view.ViewGroup: boolean isLayoutModeOptical()>
<android.util.apk.WrappedX509Certificate: java.util.Set getCriticalExtensionOIDs()>
<android.view.View: android.view.ThreadedRenderer getThreadedRenderer()>
<android.os.IUserManager$Default: android.os.ParcelFileDescriptor getUserIcon(int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(android.net.Network)>
<android.media.session.ISessionControllerCallback$Stub: android.os.IBinder asBinder()>
<android.net.netstats.provider.INetworkStatsProvider$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)>
<android.app.Notification$Builder: int getSecondaryTextColor()>
<android.app.Activity: android.media.session.MediaController getMediaController()>
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: int getStrongAuthForUser(int)>
<android.app.NotificationManager: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<android.telephony.CellIdentity: int getChannelNumber()>
<android.os.IUserManager$Default: int getCredentialOwnerProfile(int)>
<android.widget.PopupWindow: int getSoftInputMode()>
<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation[] newArray(int)>
<android.widget.inline.InlinePresentationSpec: android.util.Size getMaxSize()>
<android.location.LocationManager: android.location.GnssCapabilities getGnssCapabilities()>
<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()>
<android.os.WorkSource: java.util.List getWorkChains()>
<android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver getDefaultImpl()>
<android.graphics.drawable.Icon: int getResId()>
<android.os.BatteryManager: long computeChargeTimeRemaining()>
<android.media.AudioGain: int channelMask()>
<android.window.IWindowOrganizerController$Default: android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController()>
<android.window.WindowContainerTransaction$Change: int access$702(android.window.WindowContainerTransaction$Change,int)>
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)>
<android.os.IUserManager$Default: long getUserCreationTime(int)>
<android.telephony.CellSignalStrengthWcdma: android.telephony.CellSignalStrength copy()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: int[] getRecoverySecretTypes()>
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.net.lowpan.ILowpanInterfaceListener getDefaultImpl()>
<android.app.IActivityManager$Default: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.content.pm.ShortcutInfo: int getIconResourceId()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)>
<android.net.LocalSocket: java.io.InputStream getInputStream()>
<android.animation.LayoutTransition: long getStagger(int)>
<android.view.textclassifier.ConversationActions$Message: android.os.Bundle getExtras()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ApplicationPackageManager: android.content.Intent getCarLaunchIntentForPackage(java.lang.String)>
<android.app.slice.ISliceManager$Default: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>
<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList$Filter)>
<com.android.internal.telecom.ITelecomService$Default: int getCurrentTtyMode(java.lang.String,java.lang.String)>
<android.view.inputmethod.CompletionInfo: int describeContents()>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Default: int loadModel(android.media.soundtrigger_middleware.SoundModel)>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>
<android.content.Intent: int getFlags()>
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>
<android.service.oemlock.OemLockManager: java.lang.String getLockName()>
<android.net.ConnectivityManager: boolean isAlwaysOnVpnPackageSupportedForUser(int,java.lang.String)>
<android.app.IActivityTaskManager$Stub$Proxy: android.window.IWindowOrganizerController getWindowOrganizerController()>
<android.net.lowpan.ILowpanManagerListener$Stub: android.net.lowpan.ILowpanManagerListener getDefaultImpl()>
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastReprocessFrameNumber()>
<android.content.pm.IPackageManager$Default: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<android.widget.RemoteViews$ViewGroupActionRemove: int mergeBehavior()>
<com.android.internal.telephony.ITelephony$Default: boolean isUserDataEnabled(int)>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid,int)>
<android.content.pm.PackageParser$SigningDetails: int describeContents()>
<android.os.HidlSupport: int lambda$deepHashCode$2(java.lang.Object)>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.LocationManager: java.util.List getTestProviderCurrentRequests(java.lang.String)>
<android.hardware.input.IInputManager$Default: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.widget.TextView: int getAccessibilitySelectionStart()>
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>
<android.app.IWindowToken$Stub: android.app.IWindowToken asInterface(android.os.IBinder)>
<android.telephony.TelephonyHistogram: int getBucketCount()>
<android.media.AudioAttributes: int getUsage()>
<android.telephony.UiccSlotInfo$1: android.telephony.UiccSlotInfo[] newArray(int)>
<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View getView(android.view.MenuItem,int,android.view.View)>
<android.telephony.ServiceState: int getCdmaNetworkId()>
<android.telephony.AccessNetworkUtils: int getDuplexModeForEutranBand(int)>
<android.app.AppOpsManager$HistoricalOp: long getBackgroundAccessCount(int)>
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar$Tab getSelectedTab()>
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getNetworkInfo(int)>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation(int)>
<android.app.servertransaction.ClientTransaction: android.app.servertransaction.ActivityLifecycleItem getLifecycleStateRequest()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.os.Bundle getExtras()>
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>
<com.android.internal.telephony.ITelephony$Default: int invokeOemRilRequestRaw(byte[],byte[])>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
<android.app.job.IJobCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.StatFs: long getFreeBytes()>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getGroupId()>
<android.location.GnssMeasurement: double getSatelliteInterSignalBiasUncertaintyNanos()>
<android.app.IActivityController$Stub: android.app.IActivityController getDefaultImpl()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)>
<android.hardware.cas.V1_0.ICas$Proxy: java.util.ArrayList getHashChain()>
<android.transition.ChangeBounds$5: android.graphics.PointF get(android.view.View)>
<android.hardware.camera2.legacy.RequestThreadManager: int getAudioRestriction()>
<android.telephony.SmsCbLocation: int hashCode()>
<android.app.IActivityTaskManager$Stub$Proxy: android.graphics.Rect getTaskBounds(int)>
<android.window.WindowContainerTransaction$Change: android.content.res.Configuration getConfiguration()>
<android.os.IPowerManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.Sensor: int getVersion()>
<android.location.Address: int getMaxAddressLineIndex()>
<android.app.IActivityTaskManager$Stub$Proxy: int getRequestedOrientation(android.os.IBinder)>
<android.util.jar.StrictJarManifest: int getMainAttributesEnd()>
<com.android.internal.telephony.IOns$Stub$Proxy: boolean isEnabled(java.lang.String)>
<android.os.IRecoverySystem$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SubscriptionPlan$1: android.telephony.SubscriptionPlan createFromParcel(android.os.Parcel)>
<android.os.ZygoteProcess: java.util.List access$000(java.io.BufferedWriter,java.io.DataInputStream)>
<android.view.contentcapture.DataShareRequest: java.lang.String getMimeType()>
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()>
<android.os.Message: android.os.Handler getTarget()>
<android.view.animation.Animation: long computeDurationHint()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.impl.CameraMetadataNative: java.util.ArrayList getAllVendorKeys(java.lang.Class)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.content.res.TypedArray: android.content.res.ComplexColor getComplexColor(int)>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getNotProgammedError()>
<android.graphics.Color: int getComponentCount()>
<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)>
<android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>
<android.net.INetworkStatsService$Default: android.os.IBinder asBinder()>
<android.hardware.radio.RadioManager$FmBandConfig: int describeContents()>
<android.hardware.location.IContextHubService$Stub$Proxy: int unloadNanoApp(int)>
<android.app.backup.ISelectBackupTransportCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.BatteryStats$HistoryTag: int hashCode()>
<com.android.internal.app.IAppOpsActiveCallback$Stub: com.android.internal.app.IAppOpsActiveCallback getDefaultImpl()>
<android.hardware.cas.V1_0.ICas$Stub: java.util.ArrayList getHashChain()>
<com.android.internal.os.BatteryStatsImpl: java.lang.String[] getMobileIfaces()>
<android.app.job.JobParameters: int getStopReason()>
<android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
<android.service.oemlock.IOemLockService$Stub: android.service.oemlock.IOemLockService asInterface(android.os.IBinder)>
<android.widget.RemoteViewsAdapter: int getCount()>
<android.telephony.NetworkRegistrationInfo: int getRejectCause()>
<android.animation.StateListAnimator$Tuple: int[] getSpecs()>
<android.os.VibrationEffect$Prebaked: int hashCode()>
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>
<android.renderscript.Allocation: long getTimeStamp()>
<android.view.IPinnedStackController$Stub: java.lang.String getTransactionName(int)>
<android.telephony._$$Lambda$MLKtmRGKP3e0WU7x_KyS5_Vg8q4: java.lang.Object apply(java.lang.Object)>
<android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>
<android.os.connectivity.WifiBatteryStats: int hashCode()>
<com.android.internal.telephony.euicc.ILoadBoundProfilePackageCallback$Stub: android.os.IBinder asBinder()>
<android.widget.ExpandableListConnector: boolean isEmpty()>
<android.location.GnssMeasurement: double getCarrierPhase()>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>
<android.app.RemoteInput: java.lang.String getResultKey()>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>
<android.media.MediaRoute2Info: int getVolume()>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
<android.media.session.ISessionController$Stub: android.media.session.ISessionController getDefaultImpl()>
<android.net.lowpan.LowpanProvision: android.net.lowpan.LowpanCredential getLowpanCredential()>
<android.telephony.ServiceState: boolean isSearching()>
<android.media.tv.tunerresourcemanager.IResourcesReclaimListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.image.IDynamicSystemService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.CallQuality: int getNumRtpPacketsTransmitted()>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>
<android.app.DisabledWallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int)>
<android.util.SparseLongArray: int size()>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>
<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.ColorSpace getColorSpace()>
<android.media.audio.common.AudioOffloadInfo: int describeContents()>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>
<android.service.notification.ZenModeConfig: java.lang.CharSequence getFormattedTime(android.content.Context,long,boolean,int)>
<android.net.NetworkIdentity: java.lang.String getSubscriberId()>
<android.view.textclassifier.TextSelection: android.os.Bundle getExtras()>
<android.telecom.ParcelableCallAnalytics: int describeContents()>
<android.media.AudioManager: boolean isHapticPlaybackSupported()>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: java.lang.String getSmsFormat()>
<android.app.EnterTransitionCoordinator: android.transition.Transition getEnterViewsTransition()>
<android.media.Image: android.graphics.Rect getCropRect()>
<android.os.IThermalStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.LinkAddress: int getFlags()>
<android.telecom.PhoneAccount: int getCapabilities()>
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()>
<android.media.SubtitleData: long getStartTimeUs()>
<android.location.Address: java.lang.String getPhone()>
<android.view.autofill.AutofillPopupWindow: android.view.View getContentView()>
<android.content.pm.PackageParser$SigningDetails: int hashCode()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getBatchSizeMax()>
<android.app.ISearchManager$Default: android.os.IBinder asBinder()>
<android.app.PendingIntent: android.content.IIntentSender getTarget()>
<android.content.pm.IPackageManager$Stub$Proxy: byte[] getIntentFilterVerificationBackup(int)>
<android.window.ITaskOrganizer$Stub: java.lang.String getTransactionName(int)>
<android.app.INotificationManager$Stub$Proxy: android.service.notification.StatusBarNotification[] getActiveNotificationsWithAttribution(java.lang.String,java.lang.String)>
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.telephony.ServiceState: int getCdmaEriIconMode()>
<android.app.Activity: int getTaskId()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>
<com.android.internal.widget.ILockSettings$Stub$Proxy: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()>
<android.view.Display: int getMaximumSizeDimension()>
<android.media.tv.TvInputInfo$TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>
<android.media.session.MediaController$PlaybackInfo: int getMaxVolume()>
<android.util.Pools$SimplePool: java.lang.Object acquire()>
<android.media.MediaRecorder: android.os.PersistableBundle getMetrics()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getStaticSharedLibName()>
<android.view.DisplayCutout: android.graphics.Rect[] getBoundingRectsAll()>
<android.service.gatekeeper.IGateKeeperService$Stub: java.lang.String getTransactionName(int)>
<android.hardware.usb.IUsbManager$Default: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.net.DataUsageRequest: int describeContents()>
<android.database.CursorWrapper: boolean isFirst()>
<android.util.LongSparseLongArray: int indexOfValue(long)>
<android.webkit.Plugin: java.lang.String getName()>
<android.net.NetworkAgentConfig: java.lang.String getSubscriberId()>
<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.euicc.EuiccManager: android.telephony.euicc.EuiccInfo getEuiccInfo()>
<android.hardware.input.InputDeviceIdentifier: int hashCode()>
<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>
<android.provider.DeviceConfig$Properties: float getFloat(java.lang.String,float)>
<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMaxAspectRatio()>
<android.os.IUserManager$Stub$Proxy: int getProfileParentId(int)>
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowSpan()>
<android.os.Debug: java.lang.String getCallers(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.text.method.WordIterator: int getPrevWordBeginningOnTwoWordsBoundary(int)>
<android.app.TaskInfo: android.content.res.Configuration getConfiguration()>
<android.widget.RemoteViewsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.renderscript.Byte2: byte length()>
<android.telephony.AvailableNetworkInfo$1: android.telephony.AvailableNetworkInfo createFromParcel(android.os.Parcel)>
<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int,int,java.lang.String)>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property access$1200()>
<android.widget.OverScroller$SplineOverScroller: int access$700(android.widget.OverScroller$SplineOverScroller)>
<android.telephony.CellInfo: boolean equals(java.lang.Object)>
<android.media.AudioRecordingConfiguration: int hashCode()>
<android.hardware.hdmi.HdmiDeviceInfo: int getAdopterId()>
<android.graphics.Paint: int getFlags()>
<android.app.UiAutomation: int getConnectionId()>
<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteConnection createNewConnection(android.net.LocalSocket,java.lang.String)>
<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>
<android.util.LongArray: int size()>
<android.telephony.TelephonyManager: int getVoiceActivationState()>
<android.widget.ListView: long[] getCheckItemIds()>
<android.content.pm.IPackageManager$Stub$Proxy: int getFlagsForUid(int)>
<android.app.ActionBar: android.content.Context getThemedContext()>
<android.app.IStopUserCallback$Stub: android.app.IStopUserCallback getDefaultImpl()>
<android.app.ActivityManager: int getCurrentUser()>
<android.content.UndoManager: int forgetRedos(android.content.UndoOwner[],int)>
<android.hardware.display.ColorDisplayManager: boolean isDisplayWhiteBalanceEnabled()>
<android.security.keymaster.KeymasterArguments: java.util.Date getDate(int,java.util.Date)>
<android.os.incremental.IncrementalStorage: int getId()>
<android.view.WindowlessWindowManager: android.os.IBinder performDrag(android.view.IWindow,int,android.view.SurfaceControl,int,float,float,float,float,android.content.ClipData)>
<android.telephony.PhoneCapability$1: android.telephony.PhoneCapability createFromParcel(android.os.Parcel)>
<com.android.internal.app.IAppOpsCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup getGroup()>
<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map getVendorInfo()>
<android.media.session.MediaController: android.os.Bundle getSessionInfo()>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.text.Layout$SpannedEllipsizer: int getSpanFlags(java.lang.Object)>
<android.media.session.MediaSessionManager: boolean isGlobalPriorityActive()>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks getCallbacks()>
<android.net.LinkAddress: long getDeprecationTime()>
<android.webkit.PluginList: java.util.List getList()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.telephony.SubscriptionInfo: android.graphics.Bitmap createIconBitmap(android.content.Context)>
<android.hardware.usb.UsbManager: long getCurrentFunctions()>
<android.os.IVibratorStateListener$Stub: android.os.IVibratorStateListener asInterface(android.os.IBinder)>
<android.graphics.HardwareRenderer$FrameRenderRequest: int syncAndDraw()>
<android.widget.Editor$SelectionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.view.IScrollCaptureController$Stub: android.os.IBinder asBinder()>
<android.os.IClientCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.security.keystore.IKeystoreService$Default: int getState(int)>
<android.view.ViewRootInsetsControllerHost: android.os.Handler getHandler()>
<android.provider.FontsContract$FontInfo: int getResultCode()>
<android.telephony.ImsiEncryptionInfo$1: android.telephony.ImsiEncryptionInfo[] newArray(int)>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<android.view.contentcapture.ViewNode: java.lang.String getHintIdEntry()>
<android.app.KeyguardManager: boolean isDeviceLocked(int)>
<android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>
<android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.os.IBinder asBinder()>
<android.content.pm.PackageManager$ApplicationInfoQuery: int hashCode()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getPersistentApplications(int)>
<android.app.ActivityManager$TaskDescription: int getPrimaryColor()>
<android.app.DownloadManager$Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)>
<android.graphics.drawable.shapes.Shape: float getWidth()>
<android.renderscript.RenderScript: long nElementCreate2(long[],java.lang.String[],int[])>
<android.net.TrafficStats: long getUidRxBytes(int)>
<android.media.AudioManager: java.util.HashMap access$600(android.media.AudioManager)>
<android.telephony.ims.ImsSsInfo: int describeContents()>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>
<android.hardware.radio.V1_2.CellIdentityLte: int hashCode()>
<android.util.jar.StrictJarManifest: java.util.jar.Attributes getAttributes(java.lang.String)>
<android.app.LoadedApk: java.lang.String getResDir()>
<android.os.IIncidentDumpCallback$Stub: android.os.IIncidentDumpCallback asInterface(android.os.IBinder)>
<android.media.tv.ITvInputManager$Default: java.util.List getBlockedRatings(int)>
<android.telephony.LteVopsSupportInfo$1: android.telephony.LteVopsSupportInfo createFromParcel(android.os.Parcel)>
<android.util.RecurrenceRule: int hashCode()>
<android.os.Parcel: byte[] marshall()>
<android.util.KeyValueListParser: long getLong(java.lang.String,long)>
<android.widget.RemoteViews$Action: int mergeBehavior()>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>
<android.widget.Spinner$DialogPopup: java.lang.CharSequence getHintText()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()>
<android.view.Display: android.view.Display$Mode[] getSupportedModes()>
<android.os.PatternMatcher: int describeContents()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount(java.lang.String)>
<android.view.View: android.view.WindowInsetsController getWindowInsetsController()>
<android.view.VerifiedKeyEvent: int getAction()>
<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()>
<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks(int)>
<android.widget.ListView: boolean getItemsCanFocus()>
<android.app.VoiceInteractor$PickOptionRequest$Option: android.os.Bundle getExtras()>
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>
<com.android.internal.app.IAppOpsNotedCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsVideoCallProvider$Stub: com.android.ims.internal.IImsVideoCallProvider asInterface(android.os.IBinder)>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>
<android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)>
<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
<android.app.slice.SliceItem: android.graphics.drawable.Icon getIcon()>
<android.net.ProxyInfo: java.net.InetSocketAddress getSocketAddress()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()>
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>
<android.util.MapCollections$KeySet: int size()>
<com.android.internal.telephony.euicc.IGetDefaultSmdpAddressCallback$Stub: android.os.IBinder asBinder()>
<android.view.View: int getFadingEdge()>
<android.hardware.fingerprint.IFingerprintService$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Default: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>
<android.app.prediction.IPredictionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.ParsingPackageImpl: int getBaseRevisionCode()>
<android.net.TrafficStats: long getUidTxPackets(int)>
<android.telephony.SignalStrength: java.util.List getCellSignalStrengths()>
<android.os.Build$Partition: int hashCode()>
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)>
<android.media.MediaDescription: java.lang.CharSequence getTitle()>
<com.android.internal.content.om._$$Lambda$TnMimLdK_xwmEZLrRzFg7LG1Yfg: java.lang.Object get()>
<android.hardware.usb.UsbDevice: int getConfigurationCount()>
<android.hardware.camera2.impl.CameraMetadataNative$5: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.camera2.params.MandatoryStreamCombination$MandatoryStreamInformation: int getFormat()>
<android.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readUTF()>
<android.net.lowpan.ILowpanManager$Default: android.net.lowpan.ILowpanInterface getInterface(java.lang.String)>
<android.view.ViewConfiguration: int getHoverTooltipHideShortTimeout()>
<android.util.proto.EncodedBuffer: int getReadableSize()>
<android.graphics.ColorSpace: float[] access$1000()>
<android.media.session.MediaSessionManager$RemoteUserInfo: int getUid()>
<com.android.internal.util.function.pooled.OmniFunction: java.util.function.BiPredicate negate()>
<android.telephony.TelephonyManager: android.telephony.PinResult supplyPukReportPinResult(java.lang.String,java.lang.String)>
<android.media.VolumeShaper$State: float getXOffset()>
<android.security.IFileIntegrityService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getOrganizationColor(android.content.ComponentName)>
<android.app.IProcessObserver$Stub: android.app.IProcessObserver getDefaultImpl()>
<com.android.internal.os.IDropBoxManagerService$Default: android.os.IBinder asBinder()>
<android.view.ContextThemeWrapper: android.content.res.Configuration getOverrideConfiguration()>
<android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()>
<android.view.FrameStats: long getEndTimeNano()>
<android.media.projection.IMediaProjectionCallback$Stub: android.media.projection.IMediaProjectionCallback asInterface(android.os.IBinder)>
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$TaskDescription getTaskDescription(int)>
<android.os.StrictMode$8: android.os.StrictMode$ThreadSpanState initialValue()>
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>
<android.content.SyncRequest$Builder: int access$600(android.content.SyncRequest$Builder)>
<android.service.oemlock.IOemLockService$Default: android.os.IBinder asBinder()>
<android.content.pm.IShortcutService$Default: long getRateLimitResetTime(java.lang.String,int)>
<android.app.AppOpsManager: java.lang.String getFlagName(int)>
<android.net.ConnectivityManager: java.lang.String getMobileProvisioningUrl()>
<android.text.method.TimeKeyListener: int getInputType()>
<android.telephony.CellSignalStrengthGsm: boolean isValid()>
<android.os.IMessenger$Stub: android.os.IMessenger getDefaultImpl()>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<com.android.server.SystemConfig: android.util.ArraySet getAllowIgnoreLocationSettings()>
<android.graphics.drawable.VectorDrawable$VGroup: float getPivotX()>
<android.net.INetworkStatsSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IRingtonePlayer$Default: android.os.IBinder asBinder()>
<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String)>
<android.media.AudioFormat: int getFrameSizeInBytes()>
<android.view.IDisplayWindowRotationCallback$Stub: android.os.IBinder asBinder()>
<android.content.res.AssetManager: java.lang.String[] getApkPaths()>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: boolean isCommissioned()>
<android.os.SimpleClock: java.time.Instant instant()>
<android.text.Layout$SpannedEllipsizer: int getSpanEnd(java.lang.Object)>
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()>
<android.content.pm.parsing.component.ParsedPermissionGroup: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getIncidentReportApproverPackageName()>
<com.android.internal.policy.DecorView: android.content.res.Resources getResources()>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>
<android.os.health.HealthStats: int getMeasurementsKeyCount()>
<android.telephony.euicc.EuiccManager: java.util.List getUnsupportedCountries()>
<android.text.SpannedString: int getSpanFlags(java.lang.Object)>
<android.telephony.CellSignalStrengthTdscdma: android.telephony.CellSignalStrength copy()>
<android.app.IStopUserCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.DevicePolicyManager: long forceNetworkLogs()>
<android.service.vr.IVrStateCallbacks$Default: android.os.IBinder asBinder()>
<android.app.ITaskStackListener$Stub: android.app.ITaskStackListener asInterface(android.os.IBinder)>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>
<android.app.admin.NetworkEvent: int describeContents()>
<android.telephony.CellIdentityLte$1: void <init>()>
<android.util.ArrayMap$1: int colIndexOfKey(java.lang.Object)>
<android.location.Address: java.lang.String getSubThoroughfare()>
<android.media.tv.TvInputInfo$TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>
<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri getOriginatingUri()>
<android.database.CursorWindow: int getStartPosition()>
<android.app.contentsuggestions.IContentSuggestionsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.euicc.IGetRulesAuthTableCallback$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,long)>
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeImpl()>
<android.app.servertransaction.ClientTransaction: int describeContents()>
<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>
<android.app.INotificationManager$Stub$Proxy: int getBlockedAppCount(int)>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int describeContents()>
<com.android.net.IProxyService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.permission.IOnPermissionsChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.ShortcutInfo: int getDisabledMessageResourceId()>
<android.content.pm.IPackageInstallerSession$Default: java.lang.String[] getNames()>
<android.text.style.TextAppearanceSpan: int getTextFontWeight()>
<android.app.admin.DevicePolicyManager: int getPermissionPolicy(android.content.ComponentName)>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>
<android.hardware.Sensor: int getId()>
<com.android.internal.app.IVoiceInteractor$Default: android.os.IBinder asBinder()>
<android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher asInterface(android.os.IBinder)>
<android.os.Binder: int handleShellCommand(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,java.lang.String[])>
<com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>
<android.view.Display: float getRefreshRate()>
<android.content.res.TypedArray: int getSourceResourceId(int,int)>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: java.lang.String getTransactionName(int)>
<android.os.Debug$MemoryInfo: int getSummaryStackRss()>
<android.app.contentsuggestions.ISelectionsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.BoringLayout: int getLineTop(int)>
<android.app.DisabledWallpaperManager: int getDesiredMinimumWidth()>
<android.telephony.ims.aidl.IImsCapabilityCallback$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getDoNotAskCredentialsOnBoot()>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)>
<android.telephony.CallForwardingInfo$1: android.telephony.CallForwardingInfo[] newArray(int)>
<android.os.BasicShellCommandHandler: java.lang.String getNextOption()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getOverrideApns(android.content.ComponentName)>
<android.location.IGnssNavigationMessageListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.view.menu.MenuPopupHelper: int getGravity()>
<android.hardware.display.DisplayedContentSample: long getNumFrames()>
<com.android.internal.telephony.ISms$Default: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)>
<android.app.WallpaperManager$ColorManagementProxy: java.util.Set getSupportedColorSpaces()>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getField(java.lang.String)>
<android.app.backup.IBackupManagerMonitor$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.VoiceInteractor$PickOptionRequest: java.lang.String getRequestTypeName()>
<android.app.AppOpsManager$OpEntry: java.lang.String getOpStr()>
<android.app.assist.AssistStructure: int describeContents()>
<android.app.admin.DevicePolicyManager: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)>
<android.widget.OverScroller: int getDuration()>
<android.os.WorkSource$WorkChain: int getAttributionUid()>
<android.os.IUserRestrictionsListener$Stub: android.os.IUserRestrictionsListener asInterface(android.os.IBinder)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForDevice(android.net.NetworkTemplate,long,long)>
<android.content.BroadcastReceiver: android.os.UserHandle getSendingUser()>
<android.telephony.PreciseCallState: int getBackgroundCallState()>
<com.android.internal.telephony.ITelephony$Default: boolean isAdvancedCallingSettingEnabled(int)>
<android.content.res.ResourcesImpl: android.content.res.Configuration[] getSizeConfigurations()>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: boolean isAborting()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.CharSequence getOrganizationNameForUser(int)>
<android.os.StrictMode$9: android.view.IWindowManager create()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRejectCause(int)>
<com.android.internal.util.function.pooled.OmniFunction: com.android.internal.util.function.pooled.PooledConsumer recycleOnUse()>
<android.location.LocationManager: java.util.List getAllProviders()>
<android.app.WallpaperInfo: boolean getShowMetadataInPreview()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>
<android.os.ShellCommand: android.os.ResultReceiver adoptResultReceiver()>
<android.widget.AdapterView: java.lang.CharSequence getAccessibilityClassName()>
<android.media.MediaCodecInfo$VideoCapabilities: int getWidthAlignment()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String[] getLinkAddresses()>
<android.telephony.CellSignalStrengthLte: int getAsuLevel()>
<android.app.ActivityOptions: int getLaunchActivityType()>
<android.os.AsyncTask: java.lang.Object get()>
<android.view.FocusFinder$UserSpecifiedFocusComparator: int compare(android.view.View,android.view.View)>
<android.location.Location: float getBearing()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>
<android.util.SparseArray: int keyAt(int)>
<android.view.View$5: java.lang.Object get(java.lang.Object)>
<com.android.internal.ml.clustering.KMeans$Mean: float[] getCentroid()>
<android.service.autofill.FillEventHistory$Event: java.util.Set getIgnoredDatasetIds()>
<android.content.res.Resources$Theme: int[] getAttributeResolutionStack(int,int,int)>
<com.android.internal.os.BatteryStatsImpl$Uid: int getMobileRadioActiveCount(int)>
<android.view.contentcapture.ContentCaptureSessionId: int describeContents()>
<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String getLabel()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.app.usage.UsageEvents$Event: java.lang.String getShortcutId()>
<com.android.internal.telephony.ISub$Default: int getAllSubInfoCount(java.lang.String,java.lang.String)>
<android.os.incremental.IIncrementalServiceConnector$Stub$Proxy: android.os.IBinder asBinder()>
<android.service.vr.IVrManager$Stub$Proxy: boolean getPersistentVrModeEnabled()>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityShortcutListAsUser(android.content.Context,int)>
<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache()>
<android.app.admin.DevicePolicyManager: java.util.Set getAllCrossProfilePackages()>
<android.security.net.config.Pin: int getDigestLength(java.lang.String)>
<android.print.PrintJobInfo: int getCopies()>
<android.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>
<android.graphics.ImageDecoder$ImageInfo: android.graphics.ColorSpace getColorSpace()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomEndTime()>
<android.content.ContentProvider$Transport: int bulkInsert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues[])>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)>
<android.location.ILocationManager$Default: java.lang.String[] getIgnoreSettingsWhitelist()>
<android.service.vr.IPersistentVrStateCallbacks$Default: android.os.IBinder asBinder()>
<android.companion.CompanionDeviceManager: java.lang.String access$200(android.companion.CompanionDeviceManager)>
<android.os.Message: android.os.Bundle getData()>
<android.location.ICountryListener$Stub: android.location.ICountryListener asInterface(android.os.IBinder)>
<android.telephony.ims.aidl.IImsRcsController$Default: int getUcePublishState(int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int,boolean)>
<com.android.internal.telephony.IMms$Default: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()>
<android.content.res.ResourcesImpl: java.lang.String getLastResourceResolution()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.RequestQueue access$800(android.hardware.camera2.legacy.RequestThreadManager)>
<android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler handler()>
<android.media.MediaRouter$Static: boolean isPlaybackActive()>
<android.app.slice.SliceItem: java.lang.CharSequence getText()>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Stub: java.lang.String getDefaultTransactionName(int)>
<android.location.ICountryDetector$Stub: android.location.ICountryDetector asInterface(android.os.IBinder)>
<android.media.MediaCodecInfo: java.lang.String getName()>
<android.app.Notification$Builder: java.lang.String loadHeaderAppName()>
<android.content.res.ResourcesImpl: android.view.DisplayAdjustments getDisplayAdjustments()>
<android.util.ArrayMap: int indexOfNull()>
<android.location.LocationManager: boolean isLocationEnabled()>
<android.app.Notification: int access$902(android.app.Notification,int)>
<android.hardware.display.IVirtualDisplayCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.INetworkPolicyManager$Stub: android.net.INetworkPolicyManager getDefaultImpl()>
<android.app.timezone.IRulesManager$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.GradientDrawable: int getThickness()>
<android.view.textclassifier.TextLanguage$Request: android.os.Bundle getExtras()>
<android.net.Proxy: int getPort(android.content.Context)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)>
<android.text.Layout: java.lang.CharSequence getText()>
<com.android.internal.app.ToolbarActionBar: int getHeight()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.telephony.CellInfoLte$1: void <init>()>
<android.os.HardwarePropertiesManager: float[] getDeviceTemperatures(int,int)>
<android.accessibilityservice.AccessibilityShortcutInfo: int getAnimatedImageRes()>
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransport()>
<android.hardware.camera2.impl.CameraMetadataNative$4: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.app.job.IJobCallback$Stub: android.app.job.IJobCallback getDefaultImpl()>
<android.media.session.MediaSessionManager: java.util.Map access$1200(android.media.session.MediaSessionManager)>
<android.content.rollback.RollbackManager: java.util.List getRecentlyCommittedRollbacks()>
<android.hardware.cas.V1_0.ICas$Proxy: int release()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getProcessStateTime(int,long,int)>
<android.media.IAudioService$Default: int getAllowedCapturePolicy()>
<android.hardware.display.DisplayManagerGlobal: java.util.List getBrightnessEvents(java.lang.String)>
<android.telephony.SubscriptionInfo: boolean isOpportunistic()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getSystemDialerPackage()>
<android.app.servertransaction.TransactionExecutorHelper: android.app.servertransaction.ActivityLifecycleItem getLifecycleRequestForCurrentState(android.app.ActivityThread$ActivityClientRecord)>
<android.telephony.ClosedSubscriberGroupInfo: boolean getCsgIndicator()>
<android.webkit.WebViewZygote: java.lang.String getPackageName()>
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()>
<android.os.storage.IStorageManager$Stub$Proxy: long lastMaintenance()>
<android.view.KeyEvent: boolean isWakeKey()>
<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener getDefaultImpl()>
<android.net.LocalSocket: int getReceiveBufferSize()>
<android.view.inputmethod.InlineSuggestionsRequest: android.os.LocaleList getSupportedLocales()>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>
<com.android.internal.statusbar.IStatusBarService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.style.ScaleXSpan: float getScaleX()>
<android.app.IWindowToken$Stub: android.app.IWindowToken getDefaultImpl()>
<android.hardware.hdmi.IHdmiVendorCommandListener$Default: android.os.IBinder asBinder()>
<android.app._$$Lambda$AppOpsManager$HistoricalOp$HUOLFYs8TiaQIOXcrq6JzjxA6gs: java.lang.Object get()>
<android.content.RestrictionsManager: java.util.List getManifestRestrictions(java.lang.String)>
<android.telephony.CarrierConfigManager$Apn: android.os.PersistableBundle access$000()>
<android.util.KeyValueListParser: int[] getIntArray(java.lang.String,int[])>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
<android.widget.RemoteViewsListAdapter: int getViewTypeCount()>
<android.view.WindowlessWindowManager: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.content.IContentService$Default: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()>
<android.location.IGnssAntennaInfoListener$Stub: java.lang.String getTransactionName(int)>
<android.database.MatrixCursor: short getShort(int)>
<android.app.prediction.AppPredictionContext: java.lang.String getPackageName()>
<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>
<android.media.session.MediaSessionManager: android.media.session.MediaSession$Token access$1402(android.media.session.MediaSessionManager,android.media.session.MediaSession$Token)>
<android.service.autofill.UserData: android.os.Bundle getDefaultFieldClassificationArgs()>
<android.app.ActivityManager: int processStateAmToProto(int)>
<android.media.MicrophoneInfo: int getInternalDeviceType()>
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellIdentityNr: android.telephony.CellIdentityNr createFromParcelBody(android.os.Parcel)>
<com.android.internal.os.BatteryStatsImpl$Uid: long getNetworkActivityPackets(int,int)>
<android.app.trust.ITrustListener$Default: android.os.IBinder asBinder()>
<android.view.accessibility.AccessibilityManager: java.util.List getRequestPreparersForAccessibilityId(int)>
<android.print.PrintAttributes$Resolution: int hashCode()>
<android.view.IWindowManager$Stub$Proxy: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)>
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)>
<android.os.IVoldListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue[] getEncodedStringValues(int)>
<android.os.image.DynamicSystemManager: boolean isInstalled()>
<android.location.GpsMeasurement: double getDopplerShiftInHz()>
<android.net.StaticIpConfiguration: java.net.InetAddress getGateway()>
<android.telephony.SubscriptionManager: int getActiveDataSubscriptionId()>
<android.app.ApplicationPackageManager: int getMoveStatus(int)>
<android.view.View: android.view.WindowId getWindowId()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<android.content.pm.IPackageManager$Default: int checkSignatures(java.lang.String,java.lang.String)>
<android.security.keystore.KeyGenParameterSpec: java.lang.String getKeystoreAlias()>
<android.telephony.TelephonyManager: boolean isWorldPhone()>
<android.widget.AdapterView: android.view.View getEmptyView()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>
<android.telephony.SubscriptionInfo: java.util.List getEhplmns()>
<android.app.IActivityTaskManager$Stub$Proxy: int getFrontActivityScreenCompatMode()>
<android.content.res.ResourcesImpl$ThemeImpl: long getNativeTheme()>
<android.app.ApplicationPackageManager: java.lang.String getPermissionControllerPackageName()>
<android.view.contentcapture.ViewNode: int getLeft()>
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()>
<android.permission.IPermissionManager$Default: int checkPermission(java.lang.String,java.lang.String,int)>
<android.view.Display: int getState()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.net.TrafficStats: long getUidTxBytes(int)>
<android.view.View: java.lang.CharSequence getStateDescription()>
<android.telephony._$$Lambda$SubscriptionManager$3xL3VvVeihgpLYlVgAuAtdlfmlo: int callMethod(com.android.internal.telephony.ISub)>
<android.app.Fragment: boolean isPostponed()>
<android.inputmethodservice.InlineSuggestionSession: com.android.internal.view.InlineSuggestionsRequestInfo getRequestInfo()>
<android.view.autofill.IAutofillWindowPresenter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.ThemedResourceCache: java.lang.Object get(long,android.content.res.Resources$Theme)>
<android.media.tv.TvInputManager: android.util.SparseArray access$300(android.media.tv.TvInputManager)>
<com.android.internal.telephony.euicc.ISetDefaultSmdpAddressCallback$Default: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getCdmaDbm()>
<android.view.animation.AnimationSet: long computeDurationHint()>
<android.view.ViewPropertyAnimator: long getStartDelay()>
<android.content.IRestrictionsManager$Default: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.os.BaseBundle: java.io.Serializable getSerializable(java.lang.String)>
<android.transition.Transition: long getStartDelay()>
<android.hardware.lights.LightState: int describeContents()>
<android.view.ViewTreeObserver: java.util.ArrayList captureFrameCommitCallbacks()>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()>
<com.android.internal.util.StateMachine$LogRecords: int count()>
<android.hardware.camera2.legacy.RequestThreadManager: java.lang.Object access$900(android.hardware.camera2.legacy.RequestThreadManager)>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<com.android.internal.telephony.ISub$Default: int getDefaultSmsSubId()>
<android.filterfw.core.Filter: java.lang.String getName()>
<android.content.pm.IPackageManager$Stub$Proxy: int getPrivateFlagsForUid(int)>
<android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>
<com.android.internal.telephony.ITelephony$Default: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.telephony.TelephonyManager: java.lang.String getBasebandVersionForPhone(int)>
<com.android.internal.os.ZygoteServer: java.lang.Runnable setUsapPoolStatus(boolean,android.net.LocalSocket)>
<com.android.internal.app.IAppOpsService$Default: int noteProxyOperation(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<android.view.accessibility.AccessibilityEvent: int getAction()>
<android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>
<android.view.InputEvent: int getSequenceNumber()>
<android.net.IpSecManager$IpSecTunnelInterface: int getResourceId()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getDigests()>
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] following(int)>
<android.hardware.cas.V1_1.IMediaCasService$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.print.PrintAttributes$MediaSize: int hashCode()>
<android.os.IDeviceIdleController$Default: int[] getAppIdTempWhitelist()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[],int)>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkOperationRaw(int,int,java.lang.String)>
<android.telephony.NetworkRegistrationInfo: boolean isRoaming()>
<android.view.ViewGroup: android.view.View findViewWithTagTraversal(java.lang.Object)>
<android.view.contentcapture.ContentCaptureHelper: int getDefaultLoggingLevel()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getUserCpuTimeUs(int)>
<android.view.PendingInsetsController: int getSystemBarsBehavior()>
<android.telephony.ServiceState: int getDataRoamingType()>
<android.print.IWriteResultCallback$Stub: android.os.IBinder asBinder()>
<android.media.AudioRecordingConfiguration: int describeContents()>
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getTargetActivity()>
<android.app.blob.BlobStoreManager: long createSession(android.app.blob.BlobHandle)>
<android.widget.AdapterViewAnimator: int getNumActiveViews()>
<android.print.IPrintJobStateChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$onClearRoleHolders$3(java.lang.String,int,android.app.role.IRoleController)>
<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getTotalDurationMsLocked(long)>
<android.content.LoggingContentInterface: java.lang.String getType(android.net.Uri)>
<android.content.res.FontResourcesParser$FontFileResourceEntry: int getTtcIndex()>
<android.os.IUserManager$Default: android.content.pm.UserInfo getUserInfo(int)>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.LongSparseArray: int size()>
<android.app.backup.ISelectBackupTransportCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.os.BatteryStatsImpl: boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)>
<android.content.UndoManager: boolean matchOwners(android.content.UndoManager$UndoState,android.content.UndoOwner[])>
<android.view.KeyEvent: int access$076(android.view.KeyEvent,int)>
<android.app.IAppTask$Stub$Proxy: android.app.ActivityManager$RecentTaskInfo getTaskInfo()>
<android.telephony.SmsMessage: boolean isReplace()>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance(java.util.Locale)>
<android.util.LongArray: long get(int)>
<android.widget.AbsSpinner: android.view.autofill.AutofillValue getAutofillValue()>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.view.contentcapture.IContentCaptureDirectManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SmsCbMessage: int getSlotIndex()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()>
<android.util.MapCollections: java.util.Collection getValues()>
<com.android.ims.internal.IImsVideoCallCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getIntProp()>
<android.telephony.CellInfoGsm: int hashCode()>
<android.app.IActivityTaskManager$Default: java.util.List getAllStackInfosOnDisplay(int)>
<android.hardware.usb.UsbDevice: int getProductId()>
<android.media.MediaFormat: int getValueTypeForKey(java.lang.String)>
<android.content.om.IOverlayManager$Stub$Proxy: java.lang.String[] getDefaultOverlayPackages()>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager$MultiSimVariants getMultiSimConfiguration()>
<com.android.internal.telephony.euicc.IListNotificationsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ViewGroup: boolean getClipToPadding()>
<android.content.ContentResolver: android.os.Bundle getCache(android.net.Uri)>
<com.android.internal.compat.CompatibilityChangeInfo: java.lang.String getName()>
<android.telecom.TelecomAnalytics$SessionTiming: java.lang.Integer getKey()>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.storage.StorageManager: java.util.List getStorageVolumes()>
<android.hardware.ICameraClient$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>
<android.os.incremental.IIncrementalServiceConnector$Stub: android.os.IBinder asBinder()>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.view.IDisplayWindowInsetsController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.RemoteViews$SetIntTagAction: int getActionTag()>
<android.telecom.VideoProfile$CameraCapabilities: int getHeight()>
<com.android.internal.telephony.euicc.IResetMemoryCallback$Stub: com.android.internal.telephony.euicc.IResetMemoryCallback getDefaultImpl()>
<android.telephony.CellIdentityGsm: java.lang.String getMobileNetworkOperator()>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()>
<android.hardware.usb.UsbPort: java.lang.String getId()>
<android.view.MotionEvent: float getYPrecision()>
<com.android.internal.os.BatteryStatsImpl: long getDeviceIdleModeTime(int,long,int)>
<android.hardware.Camera$Parameters: java.lang.String getSceneMode()>
<android.content.pm.IPackageManager$Default: java.util.List getMimeGroup(java.lang.String,java.lang.String)>
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>
<android.app.ISearchManager$Stub$Proxy: java.util.List getGlobalSearchActivities()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: int getRecommendedUseCase()>
<android.hardware.radio.ProgramSelector: long getFirstId(int)>
<android.os.VibrationAttributes: android.media.AudioAttributes getAudioAttributes()>
<android.hardware.location.ContextHubInfo: float getPeakPowerDrawMw()>
<android.telephony.ModemActivityInfo$1: android.telephony.ModemActivityInfo[] newArray(int)>
<android.media.MediaRouter2Utils: java.lang.String getOriginalId(java.lang.String)>
<android.content.pm.ActivityInfo: int getRealConfigChanged()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.legacy.LegacyRequest access$1000(android.hardware.camera2.legacy.RequestThreadManager)>
<android.hardware.biometrics.IAuthService$Stub$Proxy: int canAuthenticate(java.lang.String,int,int)>
<com.android.internal.app.IVoiceInteractorCallback$Default: android.os.IBinder asBinder()>
<android.hardware.input.IInputManager$Default: int isMicMuted()>
<android.hardware.hdmi.HdmiDeviceInfo: int describeContents()>
<android.text.FontConfig$Font: android.net.Uri getUri()>
<android.app.role.RoleControllerManager: java.util.concurrent.CompletableFuture lambda$isApplicationQualifiedForRole$4(java.lang.String,java.lang.String,android.app.role.IRoleController)>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Default: android.os.IBinder asBinder()>
<com.android.internal.app.WindowDecorActionBar: int getDisplayOptions()>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<android.hardware.camera2.CameraMetadata: java.util.List getKeys()>
<android.app.job.JobInfo: int getId()>
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.security.keystore.IKeystoreCertificateChainCallback$Default: android.os.IBinder asBinder()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.app.IUiAutomationConnection$Stub: java.lang.String getTransactionName(int)>
<android.view.MotionEvent: float getPressure(int)>
<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] getCountsLocked(int)>
<android.view.View: android.view.IWindowSession getWindowSession()>
<android.app.slice.SliceItem: int describeContents()>
<android.app.admin.DevicePolicyManager: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)>
<android.content.pm.parsing.ParsingPackageImpl: int getDescriptionRes()>
<android.app.ApplicationPackageManager: boolean isWirelessConsentModeEnabled()>
<android.view.IGraphicsStatsCallback$Stub: android.view.IGraphicsStatsCallback asInterface(android.os.IBinder)>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowedByCarrier()>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getProfileParent(int)>
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>
<android.util.TypedValue: int getComplexUnit()>
<android.view.autofill.IAutoFillManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub: android.os.IBinder asBinder()>
<android.widget.ListView$ArrowScrollFocusResult: int getSelectedPosition()>
<android.app.NotificationManager: java.util.List getEnabledNotificationListeners(int)>
<android.hardware.location.NanoApp: int[] getOutputEvents()>
<com.android.internal.util.ContrastColorUtil: int resolveDefaultColor(android.content.Context,int,boolean)>
<android.telephony.ims.ImsStreamMediaProfile: int getAudioDirection()>
<android.content.res.ResourcesImpl: android.content.res.ComplexColor loadComplexColor(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme)>
<android.service.notification.ZenModeConfig$ScheduleInfo: int hashCode()>
<android.widget.RemoteViewsAdapter: int getViewTypeCount()>
<com.android.internal.telephony.ITelephony$Default: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.os.IIncidentManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.IPlaybackConfigDispatcher$Default: android.os.IBinder asBinder()>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>
<android.view.textclassifier.TextClassification: android.view.View$OnClickListener getOnClickListener()>
<android.view.View: int getScrollIndicators()>
<android.view.ViewRootImpl: int getHostVisibility()>
<android.os.IVibratorService$Stub$Proxy: boolean isVibrating()>
<android.media.MicrophoneInfo: int getId()>
<android.hardware.display.VirtualDisplayConfig: android.view.Surface getSurface()>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()>
<android.view.ViewRootImpl: android.view.ScrollCaptureClient getScrollCaptureClient()>
<android.widget.TextView: int getHyphenationFrequency()>
<android.service.autofill.UserData: java.lang.String getId()>
<android.view.IRecentsAnimationController$Stub: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.FactoryResetProtectionPolicy getFactoryResetProtectionPolicy(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int getHandle()>
<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.drawable.GradientDrawable: float getGradientRadius()>
<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getInMemoryIcon()>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.hardware.input.IInputManager$Default: int isInTabletMode()>
<android.media.MediaRoute2Info: java.lang.String getProviderId()>
<android.internal.hidl.base.V1_0.IBase$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<com.android.internal.telephony.ISms$Default: boolean setSmscAddressOnIccEfForSubscriber(java.lang.String,int,java.lang.String)>
<android.hardware.input.InputDeviceIdentifier: int describeContents()>
<com.android.ims.internal.IImsUt$Default: int updateCOLR(int)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByFileName(java.lang.String)>
<android.os.Handler: android.os.Handler getMain()>
<android.service.notification.SnoozeCriterion: java.lang.String getId()>
<android.security.keymaster.KeyCharacteristics: java.util.List getUnsignedLongs(int)>
<android.graphics.fonts.Font: long getNativePtr()>
<android.widget.TextView: int getTotalPaddingEnd()>
<android.os.PowerManager: boolean isAmbientDisplaySuppressed()>
<android.webkit.CookieManager: java.lang.Object clone()>
<android.view.MotionEvent: int getSource()>
<android.debug.IAdbManager$Default: java.util.Map getPairedDevices()>
<android.hardware.display.WifiDisplay: int hashCode()>
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviderPackages(java.lang.String)>
<android.telephony.euicc.DownloadableSubscription: java.util.List getAccessRules()>
<android.view.Choreographer: long getLastFrameTimeNanos()>
<android.content.pm.IPackageManager$Default: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
<com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>
<android.telephony.CellSignalStrengthLte: int describeContents()>
<android.telephony.TelephonyRegistryManager: void notifyPreciseDataConnectionFailed(int,int,int,java.lang.String,int)>
<android.net.IpSecConfig: java.lang.String getSourceAddress()>
<android.permission.IPermissionManager$Default: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>
<android.widget.RemoteViews$TextViewDrawableAction: int getActionTag()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,int)>
<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfiguration()>
<android.text.PrecomputedText: int getMemoryUsage()>
<android.location.ILocationManager$Default: android.os.IBinder asBinder()>
<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getDefaultTextClassifierImplementation(android.content.Context)>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForPhoneAccountHandle(android.telecom.PhoneAccountHandle)>
<android.net.wifi.nl80211.RadioChainInfo: int getChainId()>
<android.media.VolumeProvider: int getCurrentVolume()>
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.net.LinkAddress: int describeContents()>
<android.widget.TextView: java.lang.CharSequence getTransformed()>
<android.graphics.drawable.GradientDrawable: int getInnerRadius()>
<android.location.ICountryListener$Stub: java.lang.String getTransactionName(int)>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<android.media.MediaRoute2Info: int getVolumeMax()>
<android.content.pm.IPackageManager$Default: java.lang.String getAppPredictionServicePackageName()>
<android.util.apk.WrappedX509Certificate: boolean[] getSubjectUniqueID()>
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>
<android.net.lowpan.LowpanInterface: boolean isEnabled()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
<android.view.ViewConfiguration: long getDefaultActionModeHideDuration()>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>
<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSubId()>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)>
<android.app.IApplicationThread$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>
<android.os.incremental.IStorageHealthListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.ISystemConfig$Stub: android.os.ISystemConfig asInterface(android.os.IBinder)>
<android.text.Layout: int getOffsetForHorizontal(int,float)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidths()>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Default: java.util.List getAppTasks(java.lang.String)>
<android.view.Window: boolean getSharedElementsUseOverlay()>
<android.content.pm.IPackageManager$Default: java.lang.String getSetupWizardPackageName()>
<android.app.admin.IDevicePolicyManager$Default: int getLockTaskFeatures(android.content.ComponentName)>
<android.media.tv.DvbDeviceInfo: int getAdapterId()>
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>
<android.telephony.SubscriptionInfo: int getSubscriptionId()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getDefaultImpl()>
<android.app.VoiceInteractor$Request: java.lang.String getRequestTypeName()>
<android.security.IKeyChainService$Default: int attestKey(java.lang.String,byte[],int[],android.security.keymaster.KeymasterCertificateChain)>
<android.content.pm.dex.ISnapshotRuntimeProfileCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.INetworkPolicyListener$Default: android.os.IBinder asBinder()>
<android.text.BoringLayout: float getLineWidth(int)>
<android.media.AudioPort: int role()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCarrierPrivilegeStatusForUid(int,int)>
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)>
<android.view.IPinnedStackListener$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.BitmapDrawable: android.content.res.ColorStateList getTint()>
<android.text.style.URLSpan: java.lang.String getURL()>
<android.media.audiopolicy.AudioMix: int getRouteFlags()>
<android.security.keystore.IKeystoreService$Default: int ungrant(java.lang.String,int)>
<android.view.textclassifier.SelectionEvent: int describeContents()>
<android.media.IMediaHTTPService$Stub: java.lang.String getTransactionName(int)>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.content.ClipData: android.content.ClipDescription getDescription()>
<android.graphics.drawable.VectorDrawable$VObject: boolean isTreeValid()>
<android.app.admin.IDevicePolicyManager$Default: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.accessibilityservice.GestureDescription$TouchPoint: int describeContents()>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String,int)>
<com.android.internal.telephony.ISub$Default: int getSimStateForSlotIndex(int)>
<android.net.IpSecManager$SpiUnavailableException: int getSpi()>
<android.permission.IPermissionManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: java.lang.Integer lambda$queryCapabilityStatus$0$RcsFeature$RcsFeatureBinder()>
<android.os.IDeviceIdleController$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>
<android.location.Criteria: int getAccuracy()>
<com.android.internal.telephony.ITelephony$Default: boolean handlePinMmi(java.lang.String)>
<android.webkit.TracingConfig: int getPredefinedCategories()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)>
<android.security.IKeyChainService$Stub$Proxy: byte[] getCaCertificates(java.lang.String)>
<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>
<android.app.IActivityManager$Default: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>
<android.telephony.TelephonyManager: int getMaxNumberOfSimultaneouslyActiveSims()>
<android.media.tv.ITvInputManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOn(java.lang.String)>
<android.print.IPrintDocumentAdapter$Stub: java.lang.String getTransactionName(int)>
<android.media.IPlaybackConfigDispatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator: int getTotalDuration()>
<android.telephony.TelephonyManager: boolean isVolteAvailable()>
<android.graphics.ImageDecoder$Source: int getDensity()>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<android.permission.IOnPermissionsChangeListener$Stub: android.os.IBinder asBinder()>
<android.app.WallpaperManager: java.lang.String access$000()>
<android.print.IPrinterDiscoveryObserver$Default: android.os.IBinder asBinder()>
<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getSplitName()>
<android.media.MediaCas$PluginDescriptor: int getSystemId()>
<android.view.contentcapture.ContentCaptureContext: int describeContents()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: android.telephony.ims.aidl.IRcsFeatureListener getDefaultImpl()>
<android.hardware.usb.UsbDevice: int getInterfaceCount()>
<android.media.projection.IMediaProjection$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.util.UserIcons: android.graphics.drawable.Drawable getDefaultUserIcon(android.content.res.Resources,int,boolean)>
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)>
<com.android.internal.policy.IKeyguardDismissCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.MediaRouter$Static: boolean isBluetoothA2dpOn()>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>
<android.app.INotificationManager$Stub$Proxy: android.service.notification.ZenModeConfig getZenModeConfig()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.view.Surface getInputSurface()>
<android.webkit.WebView: int computeHorizontalScrollRange()>
<android.content.res.Resources: int getColor(int)>
<android.webkit.WebView: int getVisibleTitleHeight()>
<android.location.GnssAntennaInfo$SphericalCorrections: double getDeltaPhi()>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub: android.content.pm.IPackageInstallerSessionFileSystemConnector asInterface(android.os.IBinder)>
<android.telecom.ParcelableCallAnalytics: int getCallTerminationCode()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int clear_uid(long)>
<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>
<android.net.ConnectivityManager: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>
<com.android.server.SystemConfig: android.util.ArraySet getBackupTransportWhitelist()>
<android.media.session.MediaSessionManager: java.lang.String access$1302(android.media.session.MediaSessionManager,java.lang.String)>
<android.content.res.AssetManager: java.lang.String getResourceEntryName(int)>
<android.telephony.LteVopsSupportInfo: int describeContents()>
<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppDenyPermissions(java.lang.String)>
<com.android.internal.policy.PhoneWindow: android.transition.Transition getExitTransition()>
<android.net.NetworkKey: int describeContents()>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>
<android.webkit.JsResult: boolean getResult()>
<android.media.VolumeProvider: int getVolumeControl()>
<android.graphics.BitmapShader: long createNativeInstance(long)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>
<android.media.IRingtonePlayer$Stub: android.os.IBinder asBinder()>
<android.window.ITaskOrganizer$Default: android.os.IBinder asBinder()>
<android.provider.DocumentsContract: java.lang.String getRootId(android.net.Uri)>
<android.net.IpSecConfig: int getMarkMask()>
<android.hardware.radio.V1_2.CellIdentityCdma: int hashCode()>
<android.app.ContextImpl: int checkCallingPermission(java.lang.String)>
<android.hardware.usb.UsbInterface: int getEndpointCount()>
<android.hardware.location.IContextHubCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.LocalePicker$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage createFromParcel(android.os.Parcel)>
<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()>
<android.media.MediaCodecInfo$VideoCapabilities: java.util.List getSupportedPerformancePoints()>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createRestrictedProfileWithThrow(java.lang.String,int)>
<android.text.style.BulletSpan: int getBulletRadius()>
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeInMeters()>
<android.service.notification.IStatusBarNotificationHolder$Stub$Proxy: android.service.notification.StatusBarNotification get()>
<android.telephony.CellInfoNr$1: android.telephony.CellInfoNr createFromParcel(android.os.Parcel)>
<android.media.tv.ITvInputManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.IPrintDocumentAdapterObserver$Stub: android.print.IPrintDocumentAdapterObserver asInterface(android.os.IBinder)>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Size getSize()>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>
<android.media.MediaRecorder: android.media.AudioDeviceInfo getRoutedDevice()>
<android.media.AudioPortConfig: int channelMask()>
<android.content.pm.IShortcutService$Stub: java.lang.String getTransactionName(int)>
<android.widget.SearchView: int getInputType()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
<com.android.internal.telephony.ISub$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ICarrierConfigLoader$Default: android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Default: android.net.NetworkState[] getAllNetworkState()>
<android.media.VolumeShaper$Configuration: int getInterpolatorType()>
<android.os.IVibratorStateListener$Default: android.os.IBinder asBinder()>
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()>
<android.app.prediction.AppTarget: int describeContents()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: android.hardware.soundtrigger.IRecognitionStatusCallback asInterface(android.os.IBinder)>
<android.telephony.emergency.EmergencyNumber: int getEmergencyServiceCategoryBitmaskInternalDial()>
<android.net.NetworkIdentity: java.lang.String getNetworkId()>
<android.os.VibrationEffect$Prebaked: int getId()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: java.util.List extractAsyncOps(java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>
<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.GraphicBuffer getGraphicBuffer()>
<android.location.GnssAntennaInfo$SphericalCorrections: double[][] getCorrectionsArray()>
<android.net.IConnectivityManager$Default: android.net.NetworkInfo getActiveNetworkInfo()>
<android.view.WindowlessWindowManager: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InsetsState)>
<android.location.GnssMeasurementsEvent: java.util.Collection getMeasurements()>
<android.content.IClipboard$Default: android.content.ClipDescription getPrimaryClipDescription(java.lang.String,int)>
<android.hardware.biometrics.IAuthService$Stub: android.hardware.biometrics.IAuthService asInterface(android.os.IBinder)>
<android.hardware.camera2.params.MandatoryStreamCombination: java.util.List getStreamsInformation()>
<android.os.storage.IStorageManager$Stub$Proxy: int changeEncryptionPassword(int,java.lang.String)>
<android.app.Notification$Builder: int getPrimaryTextColor()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoMode()>
<android.os.IUserManager$Stub$Proxy: long getUserUnlockRealtime()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)>
<android.view.contentcapture.ContentCaptureContext: android.os.Bundle getExtras()>
<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: int getFlashLockState()>
<com.android.internal.os.FuseAppLoop: int getMountPointId()>
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getCallProfile()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.StartInstallingUpdateCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.telephony.ITelephony$Default: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$400(android.security.keystore.recovery.KeyChainSnapshot)>
<com.android.internal.telephony.ITelephony$Default: boolean isApplicationOnUicc(int,int)>
<android.app.INotificationManager$Default: int getBubblePreferenceForPackage(java.lang.String,int)>
<android.text.MeasuredParagraph: int getParagraphDir()>
<android.widget.TextView: int getBaselineOffset()>
<android.view.IWindowSessionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>
<com.google.android.mms.pdu.ReadRecInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.os.connectivity.WifiActivityEnergyInfo: int getStackState()>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<com.android.internal.policy.DecorView: int getColorViewRightInset(int,int)>
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getMetaData()>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getViewTypeCount()>
<android.location.GnssStatus: int hashCode()>
<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>
<com.android.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)>
<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<android.hardware.location.IContextHubService$Default: android.hardware.location.ContextHubInfo getContextHubInfo(int)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<android.app.Fragment: int hashCode()>
<android.media.AudioPort: android.media.AudioGain gain(int)>
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])>
<android.graphics.drawable.RippleForeground$2: java.lang.Object get(java.lang.Object)>
<android.telephony.RadioAccessFamily$1: android.telephony.RadioAccessFamily createFromParcel(android.os.Parcel)>
<android.security.keystore.KeyGenParameterSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>
<android.media.tv.ITvInputManager$Stub: android.media.tv.ITvInputManager getDefaultImpl()>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getXOffsetMm()>
<android.hardware.usb.UsbDevice: int describeContents()>
<android.telephony.DataSpecificRegistrationInfo$1: android.telephony.DataSpecificRegistrationInfo[] newArray(int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.media.MediaPlayer: android.media.AudioDeviceInfo getRoutedDevice()>
<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.view.SurfaceControl: int getWidth()>
<android.os.IUserManager$Default: int getUserBadgeNoBackgroundResId(int)>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>
<android.telephony.PhoneNumberUtils: java.lang.CharSequence ttsSpanAsPhoneNumber(java.lang.CharSequence)>
<com.android.internal.telephony.ITelephony$Default: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)>
<com.android.internal.app.ToolbarActionBar: int getTabCount()>
<android.net.lowpan.LowpanCredential: int getMasterKeyIndex()>
<android.service.vr.IPersistentVrStateCallbacks$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>
<android.graphics.Bitmap: int getScaledWidth(int)>
<android.telephony.UiccCardInfo$1: android.telephony.UiccCardInfo createFromParcel(android.os.Parcel)>
<android.location.GnssSingleSatCorrection: float getProbabilityLineOfSight()>
<android.net.NetworkAgentConfig: int hashCode()>
<com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplicationAsUser(android.content.Context,boolean,int)>
<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)>
<android.view.ViewGroup: int getNumChildrenForAccessibility()>
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkScorerAppData: java.lang.String getRecommendationServiceLabel()>
<android.service.vr.IVrStateCallbacks$Stub: java.lang.String getTransactionName(int)>
<android.app.AppOpsManager$OpEntry: java.lang.String getProxyPackageName()>
<android.media.MediaCodec: android.media.Image getInputImage(int)>
<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int getValue()>
<android.view.IRemoteAnimationRunner$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getSensorStats()>
<android.media.tv.ITvInputManager$Default: java.util.List getTvInputList(int)>
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()>
<android.telephony.ims.ImsCallProfile: boolean isVideoCall()>
<android.hardware.biometrics.IBiometricEnabledOnKeyguardCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.policy.PhoneWindow: android.media.session.MediaController getMediaController()>
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>
<android.widget.ActionMenuPresenter$OverflowMenuButton$1: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.telephony._$$Lambda$TelephonyFrameworkInitializer$3Kis6wL1IbLustWe9A2o4_2YpGo: java.lang.Object createService(android.content.Context)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>
<android.app.NotificationHistory$HistoricalNotification: java.lang.String getChannelId()>
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int getRadioTech()>
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted(java.lang.String)>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.os.IBinder getOverlayWindowToken(int)>
<android.view.WindowInsets: int getStableInsetRight()>
<android.content.pm.ShortcutInfo: java.lang.String getBitmapPath()>
<android.view.MotionEvent: float getHistoricalPressure(int)>
<android.media.PlayerBase: boolean isRestricted_sync()>
<android.permission.IPermissionController$Stub: java.lang.String getTransactionName(int)>
<android.view.View: android.view.View findKeyboardNavigationCluster()>
<android.telephony.ServiceState: int getBitmaskForTech(int)>
<android.location.IGnssAntennaInfoListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telecom.Logging.EventManager$EventRecord: java.util.List extractEventTimings()>
<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>
<android.media.AudioHandle: int hashCode()>
<android.app.usage.ExternalStorageStats: long getImageBytes()>
<android.security.keystore.IKeystoreExportKeyCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.radio.ITunerCallback$Default: android.os.IBinder asBinder()>
<android.security.keystore.AndroidKeyStorePublicKey: int hashCode()>
<com.android.internal.inputmethod.IIntResultCallback$Stub: android.os.IBinder asBinder()>
<android.service.notification.NotificationListenerService$Ranking: android.app.NotificationChannel getChannel()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String)>
<android.permission.PermissionManager$SplitPermissionInfo: int hashCode()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()>
<android.net.INetworkStatsService$Stub$Proxy: long getIfaceStats(java.lang.String,int)>
<android.app.NotificationManager: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>
<android.hardware.location.NanoAppInstanceInfo: int getNeededExecMemBytes()>
<android.text.PrecomputedText: int getStart()>
<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsetsAsRect()>
<android.net.ConnectivityManager: android.net.SocketKeepalive createNattKeepalive(android.net.Network,android.os.ParcelFileDescriptor,java.net.InetAddress,java.net.InetAddress,java.util.concurrent.Executor,android.net.SocketKeepalive$Callback)>
<android.app.timedetector.TelephonyTimeSuggestion: java.util.List getDebugInfo()>
<android.os.IVold$Stub: android.os.IBinder asBinder()>
<android.content.res.CompatibilityInfo$Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)>
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getProgressTintMode()>
<android.telephony.TelephonyManager: android.telephony.PinResult supplyPinReportPinResult(java.lang.String)>
<android.text.style.BulletSpan: int getGapWidth()>
<android.service.notification.NotificationListenerService$Ranking: java.lang.CharSequence getImportanceExplanation()>
<android.content.pm.IOnAppsChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.Half: int getSignificand(short)>
<android.animation.PathKeyframes: java.util.ArrayList getKeyframes()>
<android.graphics.drawable.DrawableWrapper: android.graphics.Insets getOpticalInsets()>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
<android.net.NetworkStatsHistory: int size()>
<android.security.KeyStore: boolean isEmpty()>
<android.os.StrictMode$ViolationInfo: java.lang.String getViolationDetails()>
<android.hardware.input.IInputDevicesChangedListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.cas.V1_2.IMediaCasService$Proxy: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<com.android.internal.policy.IKeyguardDismissCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IBatteryStats$Default: long computeBatteryTimeRemaining()>
<com.android.internal.app.IAppOpsStartedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.textclassifier.TextLinks$Request: java.lang.CharSequence getText()>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.ims.internal.IImsUt$Stub$Proxy: int queryCallWaiting()>
<android.provider.FontsContract: android.provider.FontsContract$FontInfo[] getFontFromProvider(android.content.Context,android.provider.FontRequest,java.lang.String,android.os.CancellationSignal)>
<android.media.AudioHandle: int id()>
<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setCellIdentity(android.telephony.CellIdentity)>
<android.app.IActivityTaskManager$Stub$Proxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.app.blob.IBlobStoreManager$Stub$Proxy: java.util.List getLeasedBlobs(java.lang.String)>
<android.net.INetworkScoreService$Stub: android.os.IBinder asBinder()>
<android.telephony.SmsCbCmasInfo: int getMessageClass()>
<android.widget.Toolbar$ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.webkit.WebView$PrivateAccess: float getVerticalScrollFactor()>
<android.os.DeviceIdleManager: java.lang.String[] getSystemPowerWhitelist()>
<com.android.internal.app.IVoiceInteractor$Stub: android.os.IBinder asBinder()>
<android.security.net.config.TrustedCertificateStoreAdapter: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
<android.app.timezone.ICallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.os.IShellCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IDataLoader$Stub: android.os.IBinder asBinder()>
<android.app.assist.AssistStructure: android.app.assist.AssistStructure$WindowNode getWindowNodeAt(int)>
<android.widget.Magnifier$SurfaceInfo: int access$1700(android.widget.Magnifier$SurfaceInfo)>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getAspectRatioRange(boolean)>
<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>
<android.app.AppOpsManager$HistoricalPackageOps: int hashCode()>
<android.security.keystore.KeystoreResponse: int getErrorCode()>
<android.app.Person: java.lang.String getUri()>
<android.service.vr.IVrManager$Stub: android.service.vr.IVrManager asInterface(android.os.IBinder)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>
<android.hardware.camera2.params.StreamConfiguration: int getFormat()>
<android.telephony.DataSpecificRegistrationInfo: int describeContents()>
<android.view.ViewConfiguration: int getHoverTapTimeout()>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getConfigPreferences()>
<android.app.contentsuggestions.ContentSuggestionsManager: boolean isEnabled()>
<android.telephony.CellInfoTdscdma: android.telephony.CellIdentity getCellIdentity()>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.BatterySaverPolicyConfig: boolean getDisableOptionalSensors()>
<android.os.image.IDynamicSystemService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.backup.IFullBackupRestoreObserver$Stub: android.app.backup.IFullBackupRestoreObserver asInterface(android.os.IBinder)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>
<android.print.PrinterInfo: android.print.PrinterId getId()>
<android.net.INetworkScoreService$Default: android.net.NetworkScorerAppData getActiveScorer()>
<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int getMediaInfo()>
<android.net.NetworkTemplate: int getCollapsedRatType(int)>
<android.os.IUserRestrictionsListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.integrity.IAppIntegrityManager$Default: android.os.IBinder asBinder()>
<android.net.LocalSocketImpl: int access$300(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>
<android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback getDefaultImpl()>
<android.net.Uri$PathPart: android.net.Uri$PathPart appendDecodedSegment(android.net.Uri$PathPart,java.lang.String)>
<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<android.media.session.MediaController$PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>
<android.os.HandlerThread: int getThreadId()>
<android.media.tv.ITvInputManagerCallback$Stub: android.media.tv.ITvInputManagerCallback getDefaultImpl()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.os.IBinder asBinder()>
<android.os.storage.StorageManager: java.util.List getWritablePrivateVolumes()>
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int hashCode()>
<android.os.connectivity.GpsBatteryStats: long getLoggingDurationMs()>
<android.content.pm.PackageInstaller$SessionInfo: int getInstallLocation()>
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()>
<android.view.VerifiedInputEvent: int describeContents()>
<android.view.textclassifier.TextClassifierEvent: java.lang.String[] getEntityTypes()>
<android.widget.ExpandableListConnector$GroupMetadata: int describeContents()>
<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()>
<android.content.IntentFilter: int countDataSchemes()>
<android.net.wifi.nl80211.PnoSettings: int getMin2gRssiDbm()>
<android.hardware.radio.V1_0.CellInfoTdscdma: int hashCode()>
<android.os.UserHandle: int describeContents()>
<android.hardware.location.IContextHubClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.text.SpannableStringBuilder: int hashCode()>
<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaLong()>
<android.text.TextUtils$StringWithRemovedChars: int codePointAt(int)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIsoForPhone(int)>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<android.widget.AbsSpinner: android.view.View getSelectedView()>
<android.os.ShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<android.app.EnterTransitionCoordinator: java.util.ArrayList getPendingExitSharedElementNames()>
<android.telephony.TelephonyManager: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)>
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.PowerProfile: double getBatteryCapacity()>
<android.view.IWindowSession$Stub$Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InsetsState)>
<android.view.IPinnedStackController$Stub: android.view.IPinnedStackController asInterface(android.os.IBinder)>
<android.window.ITaskOrganizerController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(java.lang.Object)>
<android.app.timedetector.ManualTimeSuggestion: android.os.TimestampedValue getUtcTime()>
<android.graphics.NinePatch: java.lang.String getName()>
<android.app.IAlarmManager$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.CameraMetadataNative$Key: long getVendorId()>
<com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService getDefaultImpl()>
<android.app.trust.ITrustListener$Stub: android.app.trust.ITrustListener getDefaultImpl()>
<android.net.NetworkRequest: int getRequestorUid()>
<android.telephony.CellInfoTdscdma$1: android.telephony.CellInfoTdscdma[] newArray(int)>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>
<android.database.MatrixCursor: double getDouble(int)>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,java.lang.String,int,android.os.UserHandle)>
<android.net.lowpan.LowpanBeaconInfo: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.content.pm.parsing.component.ParsedProvider: android.content.pm.PathPermission[] getPathPermissions()>
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
<android.app.IProcessObserver$Default: android.os.IBinder asBinder()>
<android.media.soundtrigger.SoundTriggerManager: int getModelState(java.util.UUID)>
<android.app.assist.AssistStructure$ViewNode: int writeSelfToParcel(android.os.Parcel,android.os.PooledStringWriter,boolean,float[])>
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getPermission()>
<android.media.IAudioService$Stub$Proxy: int[] getSupportedSystemUsages()>
<android.hardware.radio.V1_2.TdscdmaSignalStrength: int hashCode()>
<android.text.method.WordIterator: int prevBoundary(int)>
<android.view.View$AttachInfo: android.view.contentcapture.ContentCaptureManager getContentCaptureManager(android.content.Context)>
<android.view.View: float getBottomFadingEdgeStrength()>
<android.app.admin.IDevicePolicyManager$Default: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>
<android.internal.hidl.base.V1_0.IBase$Stub: java.util.ArrayList getHashChain()>
<android.view.ViewRootImpl: android.view.HandlerActionQueue getRunQueue()>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getIP()>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)>
<android.app.IWallpaperManager$Stub: android.app.IWallpaperManager asInterface(android.os.IBinder)>
<android.provider.FontRequest: java.lang.String getIdentifier()>
<android.app.Notification$Builder: int access$3100(android.app.Notification$Builder)>
<android.view.textclassifier.TextClassifierEvent$Builder: int access$100(android.view.textclassifier.TextClassifierEvent$Builder)>
<android.app.IActivityTaskManager$Stub$Proxy: android.os.Bundle getAssistContextExtras(int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos(android.content.Context)>
<android.util.LongSparseArray: int access$002(android.util.LongSparseArray,int)>
<android.text.PrecomputedText: int getParagraphCount()>
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.os.Bundle)>
<android.media.AudioRecordingMonitorImpl: android.media.AudioRecordingConfiguration getActiveRecordingConfiguration()>
<android.app.KeyguardManager: boolean isDeviceSecure()>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>
<android.media.MediaRouter: int getRouteCountStatic()>
<android.telecom.PhoneAccount: int getSupportedAudioRoutes()>
<android.app.Fragment: android.transition.Transition getReenterTransition()>
<android.media.IMediaHTTPService$Default: android.media.IMediaHTTPConnection makeHTTPConnection()>
<android.app.BackStackRecord: java.lang.String getName()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.hardware.input.ITabletModeChangedListener$Stub: android.hardware.input.ITabletModeChangedListener asInterface(android.os.IBinder)>
<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.content.pm.parsing.component.ParsedActivity: java.lang.String getParentActivityName()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>
<android.filterfw.core.NativeBuffer: int size()>
<android.app.admin.PasswordMetrics$ComplexityBucket$4: int getMinimumLength(boolean)>
<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.IBinder asBinder()>
<android.text.StaticLayout: int getLineCount()>
<android.widget.ExpandableListConnector: int findGroupPosition(long,int)>
<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getMIMEType()>
<android.os.storage.StorageManager: android.os.storage.VolumeRecord findRecordByUuid(java.lang.String)>
<android.hardware.radio.V1_0.CellIdentityCdma: int hashCode()>
<com.android.internal.telecom.ITelecomService$Default: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<com.android.internal.util.function.pooled.PooledLambdaImpl$LambdaType: int decodeArgCount(int)>
<android.media.AudioMetadata$1: java.lang.Class getValueClass()>
<android.net.ITetheringStatsProvider$Stub: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanNetScanCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
<android.graphics.drawable.AnimatedImageDrawable: int getRepeatCount()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.Network getNetworkForType(int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<android.hardware.location.NanoAppMessage: long getNanoAppId()>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.content.pm.IPackageDeleteObserver2$Stub: android.content.pm.IPackageDeleteObserver2 getDefaultImpl()>
<android.service.notification.NotificationStats: int describeContents()>
<android.app.ITransientNotification$Stub: android.os.IBinder asBinder()>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>
<android.os.connectivity.CellularBatteryStats: long getTimeInRxSignalStrengthLevelMicros(int)>
<android.media.TimedMetaData: byte[] getMetaData()>
<android.widget.ListView$ArrowScrollFocusResult: int getAmountToScroll()>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
<android.app.ApplicationPackageManager: java.lang.String getDefaultTextClassifierPackageName()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IServiceManager$Stub$Proxy: android.os.IBinder getService(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
<android.media.Utils: int parseIntSafely(java.lang.Object,int)>
<android.media.IAudioService$Stub$Proxy: boolean isAudioServerRunning()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)>
<android.view.DisplayAddress: int describeContents()>
<android.view.IScrollCaptureClient$Default: android.os.IBinder asBinder()>
<android.telecom.ParcelableCallAnalytics: java.util.List getEventTimings()>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>
<android.text.HtmlToSpannedConverter: android.text.Spanned convert()>
<android.app.admin.DevicePolicyManager: int getLockTaskFeatures(android.content.ComponentName)>
<android.app.AppOpsManager$OpEntry: int getMode()>
<android.service.notification.StatusBarNotification: int getUid()>
<android.content.pm.IPackageStatsObserver$Stub: android.content.pm.IPackageStatsObserver getDefaultImpl()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.view.Window: android.view.View getStatusBarBackgroundView()>
<android.location.GpsClock: short getLeapSecond()>
<android.view.IRotationWatcher$Default: android.os.IBinder asBinder()>
<com.android.internal.infra.RemoteStream: byte[] readAll(java.io.InputStream)>
<android.app.timezone.DistroFormatVersion: int getMinorVersion()>
<android.location.ILocationManager$Default: java.util.List getProviders(android.location.Criteria,boolean)>
<android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)>
<android.text.TextPaint: float getUnderlineThickness()>
<android.telephony.CellSignalStrengthGsm$1: android.telephony.CellSignalStrengthGsm[] newArray(int)>
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])>
<android.app.Notification$Action$WearableExtender: boolean getHintDisplayActionInline()>
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()>
<android.printservice.recommendation.RecommendationInfo: int describeContents()>
<android.security.keystore.IKeystoreService$Default: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)>
<android.telephony.TelephonyManager: boolean isOffhook()>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanFlags(java.lang.Object)>
<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>
<android.os.TestLooperManager: android.os.Message next()>
<com.android.internal.view.IInputMethodManager$Default: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<com.android.internal.app.IAppOpsStartedCallback$Stub: android.os.IBinder asBinder()>
<android.net.nsd.INsdManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Environment: java.io.File getDataVendorDeDirectory(int)>
<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<android.hardware.camera2.CaptureRequest: java.lang.Object getProtected(java.lang.Object)>
<android.view.inputmethod.InputMethodInfo: int hashCode()>
<android.telephony.TelephonyManager: boolean supplyPin(java.lang.String)>
<android.telephony.ims.ImsMmTelManager: boolean isAvailable(int,int)>
<android.app.admin.DevicePolicyManager: long forceSecurityLogs()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Default: android.os.IBinder asBinder()>
<android.app.timezone.IRulesManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.TextView: int getHighlightColor()>
<android.content.pm.PackageManager: int installStatusToPublicStatus(int)>
<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)>
<android.app.NotificationChannel: java.lang.String getConversationId()>
<android.graphics.drawable.VectorDrawable: int getOpacity()>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.os.IBinder asBinder()>
<android.hardware.SensorDirectChannel: int getNativeHandle()>
<android.view.inputmethod.InputConnectionInspector: int getMissingMethodFlagsInternal(java.lang.Class)>
<android.graphics.Shader: android.graphics.ColorSpace colorSpace()>
<android.graphics.drawable.GradientDrawable: int[] getColors()>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener asInterface(android.os.IBinder)>
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getActiveTimeReaderInstance()>
<android.content.pm.PackageManager: boolean isPackageSuspended()>
<com.android.internal.compat.IPlatformCompat$Stub: java.lang.String getTransactionName(int)>
<android.appwidget.AppWidgetManager: boolean isRequestPinAppWidgetSupported()>
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>
<android.webkit.WebViewLibraryLoader: int prepareNativeLibraries(android.content.pm.PackageInfo)>
<android.os.INetworkManagementService$Default: int removeRoutesFromLocalNetwork(java.util.List)>
<android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_4.CellInfo,long)>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.net.lowpan.LowpanCredential getLowpanCredential()>
<com.android.internal.os.BatteryStatsImpl: int getEstimatedBatteryCapacity()>
<android.util.KeyValueListParser$StringValue: java.lang.String getValue()>
<android.graphics.Paint: java.lang.String getFontVariationSettings()>
<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()>
<android.net.lowpan.LowpanInterface: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.hardware.Camera$Parameters: float getFocalLength()>
<android.hardware.location.NanoAppInstanceInfo: long getAppId()>
<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuPopup getPopup()>
<android.content.Intent: int filterHashCode()>
<android.net.wifi.nl80211.IApInterfaceEventCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.telephony.euicc.ISwitchToProfileCallback$Stub: com.android.internal.telephony.euicc.ISwitchToProfileCallback asInterface(android.os.IBinder)>
<android.renderscript.Short4: short get(int)>
<android.media.AudioManager: float getStreamVolumeDb(int,int,int)>
<android.app.NotificationManager$Policy: int hashCode()>
<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig getConfig()>
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)>
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext()>
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()>
<android.telephony.CellSignalStrengthLte: int getRssnr()>
<android.app.contentsuggestions.ISelectionsCallback$Stub: java.lang.String getTransactionName(int)>
<android.net.lowpan.LowpanProperties$LowpanStandardProperty: java.lang.Class getType()>
<android.view.inputmethod.CompletionInfo: long getId()>
<android.os.UserManager: boolean isSameProfileGroup(int,int)>
<android.view.animation.AnimationSet: android.view.animation.Animation clone()>
<android.transition.ChangeBounds$2: java.lang.Object get(java.lang.Object)>
<android.service.notification.INotificationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.UidRange: int hashCode()>
<com.android.internal.os.BatterySipper: int getUid()>
<android.view.ViewConfiguration: int getTapTimeout()>
<android.os.BatteryManager: int getIntProperty(int)>
<android.os.IThermalService$Stub: java.lang.String getTransactionName(int)>
<android.net.Uri$PathPart: android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String)>
<android.view.IWindowManager$Stub$Proxy: boolean isViewServerRunning()>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>
<android.content.UndoManager: int getHistorySize()>
<android.app.AppGlobals: java.lang.String getInitialPackage()>
<android.media.AudioPlaybackConfiguration: int getPlayerType()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int logoutUser(android.content.ComponentName)>
<android.database.CursorWindow: int getInt(int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)>
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()>
<android.hardware.radio.ProgramList$Filter: java.util.Set getIdentifierTypes()>
<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: java.lang.Object stopObject(java.lang.String)>
<android.location.GpsNavigationMessage: short getMessageId()>
<android.accessibilityservice.GestureDescription: int getStrokeCount()>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>
<android.telephony.TelephonyScanManager$NetworkScanInfo: java.util.concurrent.Executor access$200(android.telephony.TelephonyScanManager$NetworkScanInfo)>
<android.util.apk.WrappedX509Certificate: java.util.Date getNotAfter()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTetheringApnRequiredForSubscriber(int)>
<android.media.IRemoteVolumeObserver$Stub: android.media.IRemoteVolumeObserver getDefaultImpl()>
<android.net.wifi.nl80211.WifiNl80211Manager: int[] getChannelsMhzForBand(int)>
<com.android.internal.textservice.ISpellCheckerSession$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Interpolator: int getValueCount()>
<android.graphics.drawable.VectorDrawable$VGroup$7: java.lang.Object get(java.lang.Object)>
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()>
<android.media.session.MediaSession$QueueItem: android.media.MediaDescription getDescription()>
<com.android.internal.infra.ServiceConnector$Impl: long getRequestTimeoutMs()>
<android.graphics.text.MeasuredText: float getWidth(int,int)>
<android.hardware.display.IColorDisplayManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.statusbar.IStatusBar$Stub: com.android.internal.statusbar.IStatusBar asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>
<android.os.StrictMode$ViolationInfo: java.lang.Class getViolationClass()>
<com.android.internal.policy.PhoneWindow: android.view.View getCurrentFocus()>
<android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback getDefaultImpl()>
<android.widget.ImageView: int getMaxHeight()>
<android.media.tv.tunerresourcemanager.TunerDescramblerRequest: int getClientId()>
<android.app.RuntimeAppOpAccessMessage: java.lang.String getOp()>
<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])>
<android.app.contentsuggestions.ClassificationsRequest: android.os.Bundle getExtras()>
<com.android.internal.telephony.IPhoneSubInfo$Default: java.lang.String[] getIsimPcscf(int)>
<android.renderscript.RenderScript: long safeID(android.renderscript.BaseObj)>
<com.android.internal.telephony.euicc.IRetrieveNotificationListCallback$Stub: com.android.internal.telephony.euicc.IRetrieveNotificationListCallback getDefaultImpl()>
<android.app.ContextImpl: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<android.net.INetworkPolicyManager$Default: int[] getUidsWithPolicy(int)>
<android.app.AppOpsManager$HistoricalOp: int describeContents()>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: int hashCode()>
<android.hardware.radio.ICloseHandle$Stub: java.lang.String getTransactionName(int)>
<android.accounts.IAccountManager$Stub$Proxy: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)>
<com.google.android.mms.pdu.GenericPdu: int getMmsVersion()>
<android.print.PrinterInfo: int hashCode()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: com.android.ims.internal.IImsUt getUtInterface()>
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray$MarshalerArray: int calculateMarshalSize(java.lang.Object)>
<android.util.apk.WrappedX509Certificate: boolean[] getIssuerUniqueID()>
<android.telephony.TelephonyManager: java.util.List getCarrierPrivilegedPackagesForAllActiveSubscriptions()>
<android.telephony.CellIdentityWcdma: android.telephony.CellIdentityWcdma copy()>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.KeyEvent: char getDisplayLabel()>
<android.hardware.camera2.impl.CameraMetadataNative$10: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.database.sqlite.SQLiteCompatibilityWalFlags: long getTruncateSize()>
<android.text.FontConfig$Font: android.graphics.fonts.FontVariationAxis[] getAxes()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>
<android.service.notification.NotificationStats: int getDismissalSurface()>
<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDeviceColorManaged()>
<android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()>
<android.hardware.camera2.CaptureRequest: java.lang.Object getProtected(android.hardware.camera2.CaptureRequest$Key)>
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<android.app.RemoteInputHistoryItem: android.net.Uri getUri()>
<android.telephony.BarringInfo: android.telephony.BarringInfo$BarringServiceInfo getBarringServiceInfo(int)>
<android.view.View: float getRotation()>
<android.location.GnssMeasurementCorrections: float getEnvironmentBearingDegrees()>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(int)>
<com.android.internal.view.IInputMethodManager$Stub: android.os.IBinder asBinder()>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>
<android.view.View: int getScrollY()>
<android.content.res.TypedArray: int getIndex(int)>
<android.hardware.ISensorPrivacyListener$Stub: android.os.IBinder asBinder()>
<android.widget.PopupWindow: int getWindowLayoutType()>
<android.app.admin.DevicePolicyManager: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>
<android.telephony.CellInfoCdma: int describeContents()>
<android.telephony.SubscriptionInfo: int getDataRoaming()>
<android.hardware.location.NanoApp: int getNeededExecMemBytes()>
<android.hardware.face.IFaceService$Stub: java.lang.String getTransactionName(int)>
<android.os.storage.StorageVolume: java.lang.String getPath()>
<android.hardware.camera2.impl.CaptureResultExtras: int getErrorStreamId()>
<android.content.IIntentReceiver$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.net.config.RootTrustManager: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>
<android.app.WallpaperColors: int getColorHints()>
<android.media.IVolumeController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IAudioService$Default: java.util.List getAudioProductStrategies()>
<android.content.IContentService$Default: boolean getMasterSyncAutomatically()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.app.job.JobInfo$TriggerContentUri: int getFlags()>
<android.os.storage.StorageManager: boolean isCacheBehaviorTombstone(java.io.File)>
<android.media.midi.IMidiDeviceServer$Stub$Proxy: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)>
<com.android.internal.telephony.ITelephony$Default: boolean hasIccCardUsingSlotIndex(int)>
<android.net.LocalSocketImpl$SocketInputStream: int read(byte[])>
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>
<android.media.Utils: int gcd(int,int)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getRestrictionsProvider(int)>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>
<android.content.pm.IPackageManager$Default: int getRuntimePermissionsVersion(int)>
<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>
<android.hardware.camera2.params.MandatoryStreamCombination$Builder: java.util.List getAvailableMandatoryConcurrentStreamCombinations()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>
<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getClusterTimeReaderInstance()>
<android.accessibilityservice.AccessibilityService$MagnificationController: float getScale()>
<android.permission.PermissionManager$PackageNamePermissionQuery: int hashCode()>
<android.text.style.EasyEditSpan: int describeContents()>
<android.view.textclassifier.TextLinks$TextLink: int getEntityCount()>
<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: long[] getProcessPss(int[])>
<android.app.SearchableInfo: int describeContents()>
<android.media.AudioTrack: int getChannelCount()>
<android.content.res.ObbInfo: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: long getCurrentDailyStartTime()>
<android.net.IpSecTransformResponse: int describeContents()>
<android.media.soundtrigger.SoundTriggerDetector$EventPayload: android.media.AudioFormat getCaptureAudioFormat()>
<android.widget.Editor: int access$7100(android.widget.Editor,int,boolean)>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>
<android.text.MeasuredParagraph: android.graphics.text.MeasuredText getMeasuredText()>
<android.app.LoadedApk: int getTargetSdkVersion()>
<android.hardware.face.Face: int describeContents()>
<android.content.ContextWrapper: java.io.File getDataDir()>
<android.text.style.ClickableSpan: int getId()>
<android.text.style.QuoteSpan: int getColor()>
<android.hardware.camera2.impl.CameraMetadataNative: int getTag(java.lang.String)>
<android.app.Activity: java.lang.CharSequence getTitle()>
<android.telecom.TelecomManager: android.content.Intent createManageBlockedNumbersIntent()>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
<android.hardware.camera2.legacy.LegacyCameraDevice: java.util.List getSurfaceIds(java.util.Collection)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLanguageTag()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()>
<android.telephony.TelephonyManager: int getDataActivationState(int)>
<com.android.internal.telecom.ITelecomService$Default: android.content.Intent createManageBlockedNumbersIntent()>
<android.net.http.SslCertificate$DName: java.lang.String getUName()>
<android.service.autofill.UserData: int getMaxValueLength()>
<android.print.PrintJobInfo: int getState()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getLastSecurityLogRetrievalTime()>
<android.graphics.drawable.VectorDrawable$VFullPath$3: java.lang.Object get(java.lang.Object)>
<android.telephony.ims.ImsStreamMediaProfile: int getVideoDirection()>
<android.print.IPrintJobStateChangeListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()>
<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()>
<android.util.KeyValueListParser$IntValue: java.lang.String getKey()>
<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int[] getUsers()>
<android.app.Notification$TvExtender: android.app.PendingIntent getContentIntent()>
<android.view.InputDevice: int getId()>
<android.app.UiModeManager: java.time.LocalTime getCustomNightModeEnd()>
<android.media.AudioTrack: int write(short[],int,int,int)>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)>
<android.telephony.gsm.GsmCellLocation: int hashCode()>
<android.widget.CompoundButton: int getHorizontalOffsetForDrawables()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>
<android.view.FrameStats: int getFrameCount()>
<android.security.keystore.recovery.KeyChainSnapshot: int getSnapshotVersion()>
<android.app.usage.NetworkStats$Bucket: int access$302(android.app.usage.NetworkStats$Bucket,int)>
<android.view.accessibility.CaptioningManager: java.lang.Runnable access$300(android.view.accessibility.CaptioningManager)>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
<com.android.internal.os.BatteryStatsHelper: long getProcessForegroundTimeMs(android.os.BatteryStats$Uid,int)>
<android.view.IWindowManager$Default: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)>
<android.hardware.camera2.legacy.LegacyCameraDevice: java.util.List getSurfaceIds(android.util.SparseArray)>
<android.media.ExifInterface: long getDateTimeOriginal()>
<com.android.internal.app.ISoundTriggerService$Default: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>
<android.hardware.location.NanoApp: int[] getNeededSensors()>
<android.permission.PermissionManager$SplitPermissionInfo: java.lang.String getSplitPermission()>
<android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()>
<android.net.ConnectivityManager: java.lang.String getCallbackName(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.dex.IArtManager getArtManager()>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<android.location.ICountryDetector$Default: android.os.IBinder asBinder()>
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntent(android.content.Intent)>
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<android.print.PrinterInfo: android.app.PendingIntent getInfoIntent()>
<com.android.internal.view.menu.MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>
<android.location.Address: int access$102(android.location.Address,int)>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.IGraphicsStatsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.apk.ApkSigningBlockUtils: java.lang.String getSignatureAlgorithmJcaKeyAlgorithm(int)>
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: android.os.Bundle getUserRestrictions(android.content.ComponentName)>
<android.view.View: java.lang.String[] getAutofillHints()>
<android.os.IDeviceIdleController$Stub$Proxy: int[] getAppIdWhitelist()>
<android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>
<android.telephony.TelephonyManager: int getCarrierIdFromSimMccMnc()>
<android.app.blob.BlobHandle: int hashCode()>
<android.provider.ContactsContract$CommonDataKinds$Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap getAppIcon()>
<android.content.pm.IPackageManager$Default: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<android.telephony.emergency.EmergencyNumber: java.lang.String getNumber()>
<android.view._$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc: java.lang.Object get()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<android.security.IKeyChainService$Default: byte[] getEncodedCaCertificate(java.lang.String,boolean)>
<android.media.PlayerBase: int getStartDelayMs()>
<android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
<android.view.MotionEvent: float getTouchMinor()>
<android.os.INetworkActivityListener$Stub: android.os.IBinder asBinder()>
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()>
<android.hardware.ISensorPrivacyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.Utils$2: int compare(java.lang.Object,java.lang.Object)>
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: int getSize()>
<android.app.admin.IDevicePolicyManager$Default: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>
<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription[] newArray(int)>
<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getFontMetrics()>
<android.service.notification.ZenModeConfig: int getZenPolicySenders(int)>
<android.content.Context: java.io.File getSharedPrefsFile(java.lang.String)>
<android.net.wifi.nl80211.PnoNetwork: int hashCode()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>
<android.net.IConnectivityManager$Default: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>
<android.text.FontConfig: android.text.FontConfig$Family[] getFamilies()>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>
<android.hardware.display.IDisplayManager$Default: int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String)>
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.webkit.WebViewProviderInfo[] getAllWebViewPackages()>
<android.view.textclassifier.TextClassificationSessionId: android.os.IBinder getToken()>
<android.util.apk.ApkSigningBlockUtils: byte[] parseVerityDigestAndVerifySourceLength(byte[],long,android.util.apk.SignatureInfo)>
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
<android.view.IDisplayFoldListener$Default: android.os.IBinder asBinder()>
<android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>
<android.service.carrier.CarrierIdentifier: int describeContents()>
<android.os.IProgressListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidObbDirs()>
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos()>
<android.telephony.ims.ImsCallProfile: int getVideoStateFromCallType(int)>
<android.view.InputDevice$MotionRange: float getRange()>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>
<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()>
<android.os.IUserManager$Default: int getUserBadgeResId(int)>
<android.app.AppOpsManager$HistoricalUidOps: int hashCode()>
<android.app.usage.IStorageStatsManager$Stub: android.app.usage.IStorageStatsManager asInterface(android.os.IBinder)>
<android.app.usage.UsageStatsManager: java.util.List queryEventStats(int,long,long)>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>
<android.view.ViewConfiguration: int getLongPressTooltipHideTimeout()>
<android.telephony.CellIdentityLte: int getChannelNumber()>
<android.net.ConnectivityManager: java.lang.String getCaptivePortalServerUrl()>
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.graphics.Region getMagnificationRegion(int)>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceActivationState(int,java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)>
<android.service.notification.SnoozeCriterion: int hashCode()>
<android.hardware.location.IContextHubTransactionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.RemoteViews$ReflectionAction: int mergeBehavior()>
<android.media.midi.IMidiDeviceListener$Default: android.os.IBinder asBinder()>
<android.database.CursorWrapper: byte[] getBlob(int)>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: int getFeatureState()>
<android.hardware.hdmi.HdmiPortInfo: int hashCode()>
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)>
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>
<android.print.IPrintServicesChangeListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int,int)>
<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(java.lang.String)>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: android.os.IBinder asBinder()>
<android.location.GpsMeasurement: double getPseudorangeInMeters()>
<android.content.ISyncStatusObserver$Stub: android.os.IBinder asBinder()>
<android.hardware.input.IInputManager$Default: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<android.debug.IAdbManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
<com.android.internal.view.menu.ActionMenuItem: int getNumericModifiers()>
<android.view.HandlerActionQueue: long getDelay(int)>
<android.service.gatekeeper.IGateKeeperService$Stub: android.service.gatekeeper.IGateKeeperService asInterface(android.os.IBinder)>
<android.hardware.biometrics.BiometricManager: int canAuthenticate()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<android.webkit.WebViewDelegate: android.app.Application getApplication()>
<android.os.ISystemConfig$Stub: android.os.ISystemConfig getDefaultImpl()>
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View getCustomView()>
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: int queryCapabilityStatus()>
<android.webkit.WebView: int computeVerticalScrollExtent()>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.data.ApnSetting: int getCarrierId()>
<android.net.INetworkPolicyManager$Default: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>
<android.debug.IAdbManager$Default: int getAdbWirelessPort()>
<android.telephony.TelephonyManager: boolean isDataRoamingEnabled()>
<android.app.IActivityManager$Default: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForPackage(long,long,java.lang.String)>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>
<android.widget.TextView: int getMaxWidth()>
<android.telephony.TelephonyManager: java.lang.String getMsisdn(int)>
<android.view.FrameStats: long getFramePresentedTimeNano(int)>
<android.net.lowpan.LowpanIdentity: java.lang.String getName()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)>
<android.graphics.Region: long ni()>
<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>
<android.database.CursorWindow: short getShort(int,int)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>
<android.os.IVoldMountCallback$Stub: java.lang.String getTransactionName(int)>
<android.media.tv.TvInputManager: java.lang.Object access$800(android.media.tv.TvInputManager)>
<android.view.MotionEvent: float getToolMinor(int)>
<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>
<android.os.Build: java.lang.String getSerial()>
<android.media.midi.MidiReceiver: int getMaxMessageSize()>
<android.webkit.WebView$PrivateAccess: int super_getScrollBarStyle()>
<android.util.apk.ApkSignatureVerifier: byte[] getVerityRootHash(java.lang.String)>
<android.net.Network: int getNetIdForResolv()>
<android.telephony.ims.aidl.IImsMmTelFeature$Default: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface()>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>
<android.os.storage.IStorageEventListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>
<android.graphics.drawable.Icon: byte[] getDataBytes()>
<android.telephony.ServiceState: java.lang.String getVoiceOperatorAlphaLong()>
<android.hardware.camera2.impl.CameraMetadataNative: int getTag(java.lang.String,long)>
<android.app.ActivityManager$RunningTaskInfo: int describeContents()>
<android.security.IKeyChainService$Stub$Proxy: android.content.pm.StringParceledListSlice getUserCaAliases()>
<android.app.ActivityManager: boolean isBackgroundRestricted()>
<android.view.textservice.SuggestionsInfo: int getSequence()>
<android.hardware.SystemSensorManager: java.util.List getFullDynamicSensorList()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<android.hardware.camera2.ICameraOfflineSession$Stub: android.hardware.camera2.ICameraOfflineSession asInterface(android.os.IBinder)>
<android.app.AppOpsManager: boolean access$000()>
<android.app.IUiModeManager$Stub$Proxy: long getCustomNightModeStart()>
<android.telephony.CbGeoUtils$LatLng: android.telephony.CbGeoUtils$LatLng subtract(android.telephony.CbGeoUtils$LatLng)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getPreferredActivityFilters()>
<android.text.PrecomputedText: int nextSpanTransition(int,int,java.lang.Class)>
<com.android.internal.graphics.palette.Palette: java.util.List getSwatches()>
<android.media.tv.tunerresourcemanager.ITunerResourceManager$Stub: android.media.tv.tunerresourcemanager.ITunerResourceManager asInterface(android.os.IBinder)>
<android.print.PrinterInfo: java.lang.String getDescription()>
<android.hardware.camera2.impl.CaptureCallbackHolder: java.util.concurrent.Executor getExecutor()>
<android.widget.LinearLayout: int getOrientation()>
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)>
<android.view.inputmethod.InputBinding: int getUid()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getNcpVersion()>
<android.media.MediaRouter$RouteInfo: java.lang.String getDeviceAddress()>
<android.app.Activity: int getTitleColor()>
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.app.usage.NetworkStats$Bucket: int getUid()>
<android.net.IpSecTransform: int getResourceId()>
<com.android.internal.telephony.ISub$Default: int getSlotIndex(int)>
<com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager getDefaultImpl()>
<android.media.AudioTrack: int access$902(android.media.AudioTrack,int)>
<android.print.PrintJobInfo: int getAdvancedIntOption(java.lang.String)>
<android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>
<android.hardware.radio.RadioMetadata: int getInt(java.lang.String)>
<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>
<android.content.pm.PermissionInfo: int describeContents()>
<android.text.Layout: float getLineWidth(int)>
<android.app.INotificationManager$Default: android.app.NotificationChannelGroup getPopulatedNotificationChannelGroupForPackage(java.lang.String,int,java.lang.String,boolean)>
<android.app.ContextImpl: android.os.Looper getMainLooper()>
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$Timer getWifiSignalStrengthTimer(int)>
<android.content.pm.IPackageManager$Default: java.util.List getInstalledModules(int)>
<android.media.Metadata: int lastType()>
<android.os.ICancellationSignal$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.trust.ITrustManager$Default: android.os.IBinder asBinder()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()>
<android.app.LoadedApk$ReceiverDispatcher$Args: java.lang.Runnable getRunnable()>
<android.app.AppOpsManager$NoteOpEvent: android.app.AppOpsManager$OpEventProxyInfo getProxy()>
<android.app.admin.IDevicePolicyManager$Default: android.app.admin.PasswordMetrics getPasswordMinimumMetrics(int)>
<android.widget.TextView: int getFadeHeight(boolean)>
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyNumberSources()>
<android.app.NotificationManager: boolean isNotificationAssistantAccessGranted(android.content.ComponentName)>
<android.telephony.TelephonyManager: boolean isEmergencyNumber(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()>
<android.telephony.CellSignalStrengthGsm: int getRssi()>
<android.net.IConnectivityManager$Default: int registerNetworkFactory(android.os.Messenger,java.lang.String)>
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telecom.ParcelableCallAnalytics$VideoEvent: int getVideoState()>
<android.renderscript.Allocation: java.nio.ByteBuffer getByteBuffer()>
<com.android.internal.app.ISoundTriggerService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: int getCardIdForDefaultEuicc()>
<com.android.net.IProxyService$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.net.lowpan.LowpanManager: java.util.Map access$000(android.net.lowpan.LowpanManager)>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.AppOpsManager: int opToSwitch(int)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.window.IDisplayAreaOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.Layout: int getLineBottomWithoutSpacing(int)>
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.telecom.Logging.SessionManager: java.lang.String printActiveSessions()>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>
<android.provider.ContactsContract$CommonDataKinds$Event: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()>
<android.app.trust.ITrustManager$Stub: android.os.IBinder asBinder()>
<android.media.tv.TvInputInfo: int getType()>
<com.android.internal.app.IVoiceInteractorRequest$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.ActivityManager$TaskDescription: boolean getEnsureNavigationBarContrastWhenTransparent()>
<com.android.internal.app.IAppOpsService$Stub$Proxy: int checkAudioOperation(int,int,int,java.lang.String)>
<android.media.MediaDrm$MediaDrmStateException: java.lang.String getDiagnosticInfo()>
<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>
<android.view.textclassifier.SelectionEvent: android.view.textclassifier.SystemTextClassifierMetadata getSystemTextClassifierMetadata()>
<android.text.style.SuggestionRangeSpan: int describeContents()>
<android.app.prediction.AppTargetEvent: java.lang.String getLaunchLocation()>
<android.content.res.AssetManager: int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.view.autofill.AutofillManager: android.content.Context access$700(android.view.autofill.AutofillManager)>
<android.location.Criteria: int getSpeedAccuracy()>
<android.hardware.biometrics.IAuthService$Stub: android.hardware.biometrics.IAuthService getDefaultImpl()>
<com.android.internal.app.IVoiceInteractorCallback$Stub: com.android.internal.app.IVoiceInteractorCallback getDefaultImpl()>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
<android.location.GnssClock: double getDriftUncertaintyNanosPerSecond()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMin()>
<android.view.View: java.lang.Object getTag(int)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>
<android.app.Notification$MessagingStyle$Message: java.lang.CharSequence getSender()>
<android.media.session.ISessionController$Stub$Proxy: android.os.IBinder asBinder()>
<android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController asInterface(android.os.IBinder)>
<android.app.IActivityManager$Default: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)>
<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.IAccessibilityServiceConnection getDefaultImpl()>
<android.app.Notification$Builder: int resolveNeutralColor()>
<android.content.pm.IShortcutChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>
<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>
<android.telephony.CellSignalStrengthGsm: int getLevel()>
<android.filterfw.core.FrameFormat: int getTarget()>
<android.telephony.SignalStrength: int getLteRsrp()>
<android.os.BaseBundle: boolean getBoolean(java.lang.String)>
<android.animation.ValueAnimator: int getRepeatMode()>
<android.location.LocationRequest: long getFastestInterval()>
<android.view.InputChannel: java.lang.String getName()>
<android.provider.FontsContract: int lambda$static$13(byte[],byte[])>
<android.telephony.SmsCbCmasInfo: int getSeverity()>
<android.view.InsetsSourceConsumer: int getType()>
<android.telephony.AvailableNetworkInfo: java.util.List getMccMncs()>
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData getMetaDataAt(int)>
<android.telephony.ims.aidl.IRcsUceControllerCallback$Stub: android.telephony.ims.aidl.IRcsUceControllerCallback getDefaultImpl()>
<android.app.Service: int getForegroundServiceType()>
<android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController asInterface(android.os.IBinder)>
<android.transition.Transition: java.util.List getTargets()>
<android.window.IWindowContainerTransactionCallback$Stub: android.window.IWindowContainerTransactionCallback asInterface(android.os.IBinder)>
<android.view.autofill.IAugmentedAutofillManagerClient$Default: android.os.IBinder asBinder()>
<android.service.notification.Adjustment: android.os.Bundle getSignals()>
<android.os.ParcelUuid: java.util.UUID getUuid()>
<android.app.IActivityManager$Default: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>
<android.content.pm.parsing.component.ParsedComponent: java.util.List getIntents()>
<android.telephony.PackageChangeReceiver: void <clinit>()>
<com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>
<android.widget.CheckedTextView: android.graphics.PorterDuff$Mode getCheckMarkTintMode()>
<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>
<android.app.Notification: java.lang.Class getNotificationStyleClass(java.lang.String)>
<android.view.accessibility.AccessibilityManager: android.accessibilityservice.AccessibilityServiceInfo getInstalledServiceInfoWithComponentName(android.content.ComponentName)>
<android.content.pm.parsing.component.ParsedComponent: int getBanner()>
<android.media.IMediaRouter2$Stub: java.lang.String getTransactionName(int)>
<android.graphics.drawable.VectorDrawable$VGroup$5: java.lang.Object get(java.lang.Object)>
<android.media.RoutingSessionInfo: java.lang.String getOriginalId()>
<android.hardware.display.IDisplayManager$Default: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>
<android.app.IActivityManager$Default: int[] getRunningUserIds()>
<android.telephony.SubscriptionManager: boolean isUsableSubscriptionId(int)>
<android.graphics.fonts.FontFamily: int getSize()>
<android.app.BackStackRecord: int commitInternal(boolean)>
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener asInterface(android.os.IBinder)>
<android.transition.ChangeBounds$1: android.graphics.PointF get(android.graphics.drawable.Drawable)>
<android.hardware.soundtrigger.SoundTriggerModule: int getModelState(int)>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getVersion()>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest,android.media.audiopolicy.AudioPolicy)>
<android.app.admin.DevicePolicyManager: boolean hasUserSetupCompleted()>
<android.app.usage.UsageStats: long getTotalTimeVisible()>
<android.media.IMediaRouter2$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ListFragment: int getSelectedItemPosition()>
<android.filterfw.core.SyncRunner: java.lang.Exception getError()>
<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)>
<android.net.NetworkQuotaInfo: int describeContents()>
<com.android.internal.telephony.ITelephony$Default: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>
<android.media.session.ISession$Stub$Proxy: android.media.session.ISessionController getController()>
<android.media.IMediaHTTPConnection$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.SubscriptionInfo: int describeContents()>
<android.print.IPrintDocumentAdapterObserver$Stub: android.print.IPrintDocumentAdapterObserver getDefaultImpl()>
<android.text.Layout$HorizontalMeasurementProvider: float get(int)>
<android.view.IDisplayWindowInsetsController$Stub: android.view.IDisplayWindowInsetsController getDefaultImpl()>
<com.android.ims.internal.IImsMultiEndpoint$Stub: com.android.ims.internal.IImsMultiEndpoint asInterface(android.os.IBinder)>
<android.graphics.drawable.ShapeDrawable: int getAlpha()>
<android.net.wifi.nl80211.DeviceWiphyCapabilities: int getMaxNumberTxSpatialStreams()>
<android.app.admin.SystemUpdatePolicy: java.util.List getFreezePeriods()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()>
<android.media.projection.IMediaProjection$Default: int applyVirtualDisplayFlags(int)>
<android.net.nsd.NsdManager: android.util.SparseArray access$400(android.net.nsd.NsdManager)>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.os.BinderProxy: android.os.BinderProxy$InterfaceCount[] getSortedInterfaceCounts(int)>
<android.app.NotificationHistory$HistoricalNotification: int hashCode()>
<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>
<com.android.internal.telephony.ISub$Default: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)>
<android.graphics.Color: boolean isWideGamut()>
<android.os.Binder: int lambda$static$1(int)>
<android.database.CursorWindow: long getLong(int,int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>
<android.renderscript.Element: int getBytesSize()>
<android.hardware.usb.UsbDevice: int getDeviceSubclass()>
<android.telephony.TelephonyManager: void enableServiceHandleCaching()>
<android.hardware.cas.V1_1.IMediaCasService$Stub: java.util.ArrayList getHashChain()>
<android.app.backup.IRestoreObserver$Stub: android.app.backup.IRestoreObserver getDefaultImpl()>
<android.media.MediaCodec: android.media.Image getOutputImage(int)>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>
<android.security.KeyStore: android.content.Context getApplicationContext()>
<android.view.contentcapture.IContentCaptureDirectManager$Default: android.os.IBinder asBinder()>
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getWritePermission()>
<com.android.internal.util.State: java.lang.String getName()>
<android.location.GpsMeasurement: double getTimeOffsetInNs()>
<android.content.ContentProviderOperation$Builder: int access$000(android.content.ContentProviderOperation$Builder)>
<android.app.ApplicationPackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(android.os.UserHandle)>
<android.net.NetworkStatsHistory: int getIndexAfter(long)>
<android.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()>
<android.permission.IPermissionController$Stub: android.os.IBinder asBinder()>
<android.telephony.ServiceState: java.lang.String getDataOperatorNumeric()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)>
<android.view.textclassifier.TextClassifierEvent: java.lang.String getModelName()>
<android.telephony.ClientRequestStats: long getCompletedRequestsCount()>
<android.database.AbstractCursor: android.os.Bundle getExtras()>
<android.media.Tokenizer$DataTokenizer: android.media.Tokenizer$TokenizerPhase start()>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()>
<android.drm.DrmRights: byte[] getData()>
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>
<com.android.internal.telephony.ISms$Default: int getPremiumSmsPermission(java.lang.String)>
<android.hardware.ICameraServiceListener$Default: android.os.IBinder asBinder()>
<android.widget.RemoteViewsAdapter$RemoteViewsCacheKey: int hashCode()>
<android.view.View: android.content.Context getContext()>
<android.widget.ImageView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: com.android.internal.inputmethod.IExtractedTextResultCallback getDefaultImpl()>
<android.content.pm.IPackageInstallerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.assist.AssistStructure$HtmlInfoNode: int describeContents()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultBanner(android.content.pm.PackageManager)>
<android.media.IAudioServerStateDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.health.HealthStats: int getTimerCount(int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)>
<android.media.AudioManager: java.lang.Object access$100(android.media.AudioManager)>
<android.service.oemlock.IOemLockService$Stub: android.service.oemlock.IOemLockService getDefaultImpl()>
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)>
<android.location.Geofence: int getType()>
<com.android.internal.telephony.SmsApplication$SmsApplicationData: int access$700(com.android.internal.telephony.SmsApplication$SmsApplicationData)>
<com.android.internal.widget.ScrollingTabContainerView$TabView: android.app.ActionBar$Tab getTab()>
<android.util.jar.StrictJarFile$FDStream: int read(byte[],int,int)>
<android.os.BasicShellCommandHandler: android.os.Binder getTarget()>
<android.permission.IPermissionManager$Default: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.server.SystemConfig: android.util.ArraySet getVendorPrivAppDenyPermissions(java.lang.String)>
<com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer getDefaultImpl()>
<android.view.DragEvent: java.lang.Object getLocalState()>
<android.view.IGraphicsStats$Stub: android.view.IGraphicsStats getDefaultImpl()>
<android.hardware.lights.ILightsManager$Stub: android.hardware.lights.ILightsManager getDefaultImpl()>
<android.content.pm.CrossProfileApps: java.lang.CharSequence getProfileSwitchingLabel(android.os.UserHandle)>
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier getPrimaryId()>
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)>
<android.content.pm.FallbackCategoryProvider: int getFallbackCategory(java.lang.String)>
<android.os.Environment: java.io.File getDataSystemDirectory()>
<android.app.usage.IStorageStatsManager$Default: android.app.usage.StorageStats queryStatsForPackage(java.lang.String,java.lang.String,int,java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: int getSharedUserLabel()>
<android.content.integrity.IAppIntegrityManager$Stub: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: int getSimCarrierId()>
<android.app.ApplicationPackageManager: java.lang.String getWellbeingPackageName()>
<com.android.internal.view.InlineSuggestionsRequestInfo: android.view.autofill.AutofillId getAutofillId()>
<android.app.admin.DevicePolicyManager: long getRequiredStrongAuthTimeout(android.content.ComponentName,int)>
<android.content.pm.IOnAppsChangedListener$Stub: android.content.pm.IOnAppsChangedListener getDefaultImpl()>
<android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.hardware.hdmi.IHdmiVendorCommandListener asInterface(android.os.IBinder)>
<android.app.IRequestFinishCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.contentcapture.IDataShareWriteAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()>
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiSettingEnabled()>
<android.hardware.radio.RadioManager$AmBandConfig: boolean getStereo()>
<android.hardware.radio.RadioManager$FmBandConfig: boolean getTa()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVideoTelephonyAvailable(int)>
<android.util.LauncherIcons$ShadowDrawable$MyConstantState: android.graphics.drawable.Drawable newDrawable()>
<com.android.ims.internal.IImsFeatureStatusCallback$Default: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreService$Stub: java.lang.String getTransactionName(int)>
<android.app.job.JobInfo: android.content.ClipData getClipData()>
<android.net.wifi.nl80211.IWificond$Stub$Proxy: int[] getAvailableDFSChannels()>
<android.telephony.NetworkRegistrationInfo$1: android.telephony.NetworkRegistrationInfo createFromParcel(android.os.Parcel)>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)>
<android.hardware.cas.V1_2.ICasListener$Stub: java.util.ArrayList getHashChain()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorNameForPhone(int)>
<android.telephony.ims.ImsCallProfile: int getCallerNumberVerificationStatus()>
<android.app.role.IOnRoleHoldersChangedListener$Stub: java.lang.String getTransactionName(int)>
<android.hardware.Camera$Parameters: int getZoom()>
<android.view.KeyEvent: int getRepeatCount()>
<android.hardware.display.DisplayedContentSample: long[] getSampleComponent(android.hardware.display.DisplayedContentSample$ColorComponent)>
<android.service.oemlock.IOemLockService$Stub$Proxy: boolean isOemUnlockAllowed()>
<android.os.IRecoverySystemProgressListener$Stub: android.os.IRecoverySystemProgressListener getDefaultImpl()>
<android.view.WindowlessWindowManager: android.view.SurfaceControl getSurfaceControl(android.view.View)>
<android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager getDefaultImpl()>
<android.view.contentcapture.ViewNode: java.lang.CharSequence[] getAutofillOptions()>
<android.media.tv.tunerresourcemanager.ResourceClientProfile: int getUseCase()>
<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)>
<android.net.lowpan.ILowpanManager$Stub$Proxy: android.net.lowpan.ILowpanInterface getInterface(java.lang.String)>
<android.media.IAudioService$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean needsOtaServiceProvisioning()>
<android.graphics.Rect: int centerX()>
<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String,java.lang.String)>
<android.view.VelocityTracker$Estimator: float getYCoeff(int)>
<android.os.IVoldTaskListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.opengl.GLLogWrapper$PointerInfo: int sizeof(int)>
<android.hardware.display.IVirtualDisplayCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.legacy.RequestThreadManager: java.lang.String access$100(android.hardware.camera2.legacy.RequestThreadManager)>
<android.content.pm.IShortcutChangeCallback$Stub: android.content.pm.IShortcutChangeCallback asInterface(android.os.IBinder)>
<android.text.style.LineBackgroundSpan$Standard: int getSpanTypeIdInternal()>
<android.media.tv.TvStreamConfig: int access$502(android.media.tv.TvStreamConfig,int)>
<android.widget.RtlSpacingHelper: int getRight()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)>
<com.android.internal.policy.PhoneWindow: int getStatusBarColor()>
<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] preceding(int)>
<android.graphics.ComposeShader: long createNativeInstance(long)>
<android.provider.Telephony$Mms$Part: android.net.Uri getPartUriForMessage(java.lang.String)>
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)>
<android.content.pm.PackageInstaller: java.util.List getActiveStagedSessions()>
<android.hardware.hdmi.IHdmiControlStatusChangeListener$Default: android.os.IBinder asBinder()>
<android.os.MemoryFile$MemoryInputStream: int read(byte[],int,int)>
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.database.IContentObserver$Stub: android.database.IContentObserver asInterface(android.os.IBinder)>
<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>
<android.telephony.PreciseCallState$1: android.telephony.PreciseCallState createFromParcel(android.os.Parcel)>
<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>
<android.app.usage.NetworkStats$Bucket: long getStartTimeStamp()>
<android.content.UndoManager: java.lang.CharSequence getUndoLabel(android.content.UndoOwner[])>
<android.media.midi.IMidiDeviceListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.widget.IRemoteViewsFactory$Default: int getViewTypeCount()>
<android.os.storage.IStorageManager$Stub$Proxy: long getCacheQuotaBytes(java.lang.String,int)>
<android.app.KeyguardManager: android.content.Intent createConfirmFactoryResetCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)>
<android.view.View$3: java.lang.Object get(java.lang.Object)>
<android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher getDefaultImpl()>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>
<android.app.assist.AssistContent: android.net.Uri getWebUri()>
<android.content.pm.PermissionInfo: int calculateFootprint()>
<android.content.pm.IPackageMoveObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>
<android.security.keystore.IKeystoreService$Default: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)>
<android.view.IWindowSession$Stub$Proxy: boolean getInTouchMode()>
<android.media.MediaPlayer$2$1: android.os.Looper getSubtitleLooper()>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getColorCount()>
<android.text.style.BulletSpan: int describeContents()>
<android.permission.IPermissionManager$Default: android.os.IBinder asBinder()>
<android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getCredentialProtectedDataDir(android.content.pm.parsing.ParsingPackageRead,int)>
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>
<android.app.admin.IDevicePolicyManager$Default: java.util.List getDefaultCrossProfilePackages()>
<android.system.suspend.ISuspendControlService$Stub$Proxy: android.system.suspend.WakeLockInfo[] getWakeLockStats()>
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>
<android.os.storage.IStorageManager$Stub$Proxy: long getAllocatableBytes(java.lang.String,int,java.lang.String)>
<android.text.style.ImageSpan: java.lang.String getSource()>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.animation.AnimatorSet$AnimationEvent: long getTime()>
<android.view.IWindowSessionCallback$Stub: android.os.IBinder asBinder()>
<android.animation.AnimatorSet$SeekState: boolean isActive()>
<android.print.IPrintServicesChangeListener$Stub: java.lang.String getTransactionName(int)>
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>
<android.telephony.ims.aidl.IImsConfigCallback$Default: android.os.IBinder asBinder()>
<android.net.IConnectivityManager$Default: android.net.NetworkRequest getDefaultRequest()>
<android.view.Choreographer: android.view.Choreographer getInstance()>
<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioPlaybackCaptureConfiguration: int[] getMatchingUids()>
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.media.AudioTrack: int getOffloadPadding()>
<android.app.IActivityController$Stub: android.app.IActivityController asInterface(android.os.IBinder)>
<com.android.internal.telephony.ISms$Default: boolean enableCellBroadcastForSubscriber(int,int,int)>
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>
<android.location.IGnssNavigationMessageListener$Default: android.os.IBinder asBinder()>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>
<android.media.session.MediaController: android.media.session.MediaController$PlaybackInfo getPlaybackInfo()>
<android.content.pm.PackageParser$PackageLite: java.util.List getAllCodePaths()>
<android.app.admin.IDevicePolicyManager$Default: int getUserProvisioningState()>
<android.telecom.ParcelableCallAnalytics: int getCallSource()>
<android.hardware.face.FaceManager: int revokeChallenge()>
<android.app.AlarmManager: android.app.IAlarmManager access$000(android.app.AlarmManager)>
<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.NotificationManager: java.util.Map getAutomaticZenRules()>
<android.service.autofill.FieldClassification$Match: float getScore()>
<android.webkit.WebViewDelegate: java.lang.String getDataDirectorySuffix()>
<android.os.ISystemUpdateManager$Default: android.os.Bundle retrieveSystemUpdateInfo()>
<android.widget.ScrollBarDrawable: int getOpacity()>
<android.renderscript.RenderScript: long nScriptGroup2Create(java.lang.String,java.lang.String,long[])>
<android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupSchemeForTest(android.content.Context)>
<android.os.ProxyFileDescriptorCallback: long onGetSize()>
<android.net.StaticIpConfiguration: java.util.List getRoutes(java.lang.String)>
<android.net.wifi.nl80211.ISendMgmtFrameEvent$Default: android.os.IBinder asBinder()>
<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.view.accessibility.AccessibilityManager: int getAccessibilityWindowId(android.os.IBinder)>
<android.os.connectivity.WifiBatteryStats: long getMonitoredRailChargeConsumedMaMillis()>
<android.graphics.BLASTBufferQueue: android.view.Surface getSurface()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.Camera access$1302(android.hardware.camera2.legacy.RequestThreadManager,android.hardware.Camera)>
<android.telephony.CellIdentityNr: int getNrarfcn()>
<android.app.NotificationChannelGroup: java.util.List getChannels()>
<android.net.Network: javax.net.SocketFactory getSocketFactory()>
<android.app.IActivityManager$Stub$Proxy: int getLockTaskModeState()>
<android.telephony.data.ApnSetting: boolean getPermanentFailed()>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>
<android.net.nsd.INsdManager$Default: android.os.Messenger getMessenger()>
<android.content.pm.PackageInstaller$Session: java.lang.String[] getNames()>
<android.service.gatekeeper.IGateKeeperService$Stub: android.service.gatekeeper.IGateKeeperService getDefaultImpl()>
<android.widget.Toolbar: java.lang.CharSequence getTitle()>
<android.media.session.ISessionController$Stub: android.media.session.ISessionController asInterface(android.os.IBinder)>
<android.media.projection.IMediaProjectionManager$Default: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>
<com.android.internal.telephony.ITelephony$Default: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)>
<android.media.IAudioServerStateDispatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.radio.V1_5.CellIdentity: byte getDiscriminator()>
<android.app.role.IRoleManager$Stub: android.os.IBinder asBinder()>
<android.app.AutomaticZenRule: int hashCode()>
<android.service.carrier.CarrierIdentifier: int hashCode()>
<android.os.Parcel: android.util.SparseIntArray readSparseIntArray()>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
<android.print.ILayoutResultCallback$Default: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Default: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.net.INetworkManagementEventObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.display.IDisplayManager$Default: android.graphics.Point getStableDisplaySize()>
<android.app.WallpaperManager: android.content.ComponentName getDefaultWallpaperComponent(android.content.Context)>
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()>
<android.content.pm.IShortcutChangeCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>
<android.widget.Spinner$DialogPopup: boolean isShowing()>
<android.os.storage.IStorageManager$Stub$Proxy: boolean isConvertibleToFBE()>
<android.view.Window: int getLocalFeatures()>
<android.view.View: boolean getClipToOutline()>
<android.database.IContentObserver$Stub: java.lang.String getTransactionName(int)>
<android.app.RemoteInputHistoryItem: int describeContents()>
<android.view.inputmethod.EditorInfo: int describeContents()>
<android.security.keystore.IKeystoreResponseCallback$Stub: android.os.IBinder asBinder()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>
<android.telephony.TelephonyHistogram: int describeContents()>
<com.android.internal.app.ISoundTriggerService$Default: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid,int)>
<android.app.DexLoadReporter: android.app.DexLoadReporter getInstance()>
<android.window.ITaskOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.Intent: android.graphics.Rect getSourceBounds()>
<android.accessibilityservice.AccessibilityButtonController: boolean isAccessibilityButtonAvailable()>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.os.IBinder asBinder()>
<android.hardware.display.BrightnessConfiguration$Builder: int getMaxCorrectionsByCategory()>
<android.graphics.BlendModeColorFilter: int getColor()>
<android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener getDefaultImpl()>
<android.view.IOnKeyguardExitResult$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.res.TypedArray: int getChangingConfigurations()>
<com.android.internal.compat.IPlatformCompat$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.ImsSsData: int getTeleserviceType()>
<android.app.PropertyInvalidatedCache: java.lang.Object maybeCheckConsistency(java.lang.Object,java.lang.Object)>
<android.text.BoringLayout: int getTopPadding()>
<com.android.internal.telephony.euicc.IEuiccController$Stub: com.android.internal.telephony.euicc.IEuiccController getDefaultImpl()>
<android.content.pm.ILauncherApps$Stub$Proxy: int getShortcutIconResId(java.lang.String,java.lang.String,java.lang.String,int)>
<android.telephony.NetworkRegistrationInfo: java.lang.String getRegisteredPlmn()>
<android.net.IpPrefix: int getPrefixLength()>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback$Stub: android.security.keystore.IKeystoreKeyCharacteristicsCallback getDefaultImpl()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>
<android.view.inputmethod.InputMethodManager: android.graphics.Matrix access$702(android.view.inputmethod.InputMethodManager,android.graphics.Matrix)>
<android.view.CutoutSpecification: int access$700()>
<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()>
<android.util.jar.StrictJarVerifier: boolean isSignedJar()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.widget.GridView: int getGravity()>
<android.os.Looper: java.lang.Thread getThread()>
<android.view.PendingInsetsController: android.view.InsetsState getState()>
<android.provider.Settings$Config: java.util.Map getStrings(android.content.ContentResolver,java.lang.String,java.util.List)>
<android.app.backup.BackupManager: android.content.Intent getDataManagementIntent(java.lang.String)>
<com.android.internal.app.IAppOpsNotedCallback$Stub: com.android.internal.app.IAppOpsNotedCallback getDefaultImpl()>
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>
<android.widget.Editor$SuggestionHelper$SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)>
<android.view.KeyboardShortcutInfo: java.lang.CharSequence getLabel()>
<android.util.jar.StrictJarFile$FDStream: int available()>
<android.webkit.Plugin: java.lang.String getDescription()>
<com.android.internal.telephony.ISub$Default: int getActiveSubInfoCount(java.lang.String,java.lang.String)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean isAccessibilityButtonAvailable()>
<android.view.WindowlessWindowManager: android.os.IBinder asBinder()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
<android.renderscript.BaseObj: java.lang.String getName()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Default: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)>
<android.net.INetworkScoreCache$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String)>
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,java.util.concurrent.Executor,int)>
<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>
<android.location.Criteria: int getHorizontalAccuracy()>
<android.media.AudioRecord: int getBufferSizeInFrames()>
<android.widget.RemoteViews$SetRemoteInputsAction: int getActionTag()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: java.lang.CharSequence getText()>
<android.hardware.input.ITabletModeChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>
<android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String,int)>
<android.os.TimestampedValue: java.lang.Object getValue()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int onDeviceOffBody()>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>
<android.net.lowpan.LowpanIdentity: byte[] getRawName()>
<android.os.UserHandle: int getUserGid(int)>
<android.print.IWriteResultCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveSubInfoCountMax()>
<android.media.IMediaRouter2$Stub: android.media.IMediaRouter2 getDefaultImpl()>
<android.os.storage.VolumeInfo: int describeContents()>
<android.app.IActivityTaskManager$Stub$Proxy: java.lang.String getPackageForToken(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)>
<android.hardware.hdmi.IHdmiControlService$Default: android.os.IBinder asBinder()>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getDisplays()>
<android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
<android.telephony.SmsCbEtwsInfo: boolean isPopupAlert()>
<android.content.IIntentSender$Stub: android.content.IIntentSender asInterface(android.os.IBinder)>
<android.media.MediaDrm$Certificate: byte[] getWrappedPrivateKey()>
<android.graphics.Typeface: int getWeight()>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: com.android.internal.telephony.ISetOpportunisticDataCallback asInterface(android.os.IBinder)>
<android.view.View: int getAutofillType()>
<android.print.PageRange: int getStart()>
<android.service.euicc.EuiccProfileInfo: int hashCode()>
<android.view.ViewRootImpl$TrackballAxis: int generate()>
<android.content.IntentSender: int hashCode()>
<android.app.admin.FreezePeriod: int getLength()>
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowed()>
<com.android.internal.view.IInputMethodClient$Stub: android.os.IBinder asBinder()>
<android.app.IProcessObserver$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.storage.VolumeInfo: java.lang.String getFsUuid()>
<android.content.res.Resources$ThemeKey: int hashCode()>
<android.content.pm.permission.SplitPermissionInfoParcelable: int describeContents()>
<android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.hardware.hdmi.IHdmiInputChangeListener getDefaultImpl()>
<android.os.IPowerManager$Stub$Proxy: int getLastShutdownReason()>
<android.app.ISearchManager$Stub$Proxy: java.util.List getSearchablesInGlobalSearch()>
<android.telephony.SubscriptionManager: void invalidateDefaultDataSubIdCaches()>
<android.database.AbstractWindowedCursor: float getFloat(int)>
<android.telephony.TelephonyManager: int[] getAllNetworkTypes()>
<android.content.pm.ShortcutInfo: int getShortLabelResourceId()>
<android.net.wifi.nl80211.WifiNl80211Manager: android.net.wifi.nl80211.WifiNl80211Manager$TxPacketCounters getTxPacketCounters(java.lang.String)>
<android.service.notification.ZenPolicy: int describeContents()>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$802(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IPinnedStackListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.transition.ChangeTransform$2: java.lang.Object get(java.lang.Object)>
<android.os.IRemoteCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.util.List getAllPhoneAccounts()>
<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<android.hardware.radio.V1_0.CellIdentityWcdma: int hashCode()>
<android.service.persistentdata.IPersistentDataBlockService$Default: byte[] read()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRect$MarshalerRect: int getNativeSize()>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: int getInputMethodWindowVisibleHeight()>
<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.view.Surface getInputSurface()>
<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelMemoryTimerLocked(long)>
<android.os.UserManager: java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence,android.os.UserHandle)>
<android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>
<android.app.IActivityManager$Default: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<android.text.style.UnderlineSpan: int getSpanTypeId()>
<android.os.IIncidentAuthListener$Stub: android.os.IBinder asBinder()>
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)>
<android.media.ExifInterface: long[] getThumbnailRange()>
<android.media.session.MediaController$PlaybackInfo: int getPlaybackType()>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
<android.telephony.ServiceState: int getCdmaEriIconIndex()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.accessibilityservice.util.AccessibilityUtils: java.lang.String getFilteredHtmlText(java.lang.String)>
<android.app.IUiModeManager$Stub$Proxy: int getNightMode()>
<android.printservice.PrintServiceInfo: int describeContents()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isFactoryResetProtectionPolicySupported()>
<android.media.AudioManager: int updateAudioPortCache(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.util.apk.ByteBufferDataSource: long size()>
<android.permission.PermissionControllerManager$1: long getRequestTimeoutMs()>
<android.hardware.location.IContextHubService$Default: android.os.IBinder asBinder()>
<android.content.pm.DataLoaderParams: android.content.pm.DataLoaderParamsParcel getData()>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISms$Stub$Proxy: int checkSmsShortCodeDestination(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
<android.text.HtmlToSpannedConverter$Newline: int access$900(android.text.HtmlToSpannedConverter$Newline)>
<android.content.pm.ShortcutInfo: java.lang.String getResourcePackageName(java.lang.String)>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)>
<android.os.connectivity.WifiActivityEnergyInfo: long getControllerEnergyUsedMicroJoules()>
<com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollection(android.content.Context)>
<android.telephony.BarringInfo: android.telephony.BarringInfo create(android.hardware.radio.V1_5.CellIdentity,java.util.List)>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: long getAccessibilityIdForRegion(android.graphics.Region)>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.view.IWindowSession$Default: boolean getInTouchMode()>
<android.media.IMediaRouter2Manager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<android.telephony.euicc.EuiccManager: java.util.List getSupportedCountries()>
<android.telephony.UiccCardInfo: int getCardId()>
<android.media.AudioDeviceAttributes: int getRole()>
<android.media.MediaCas$PluginDescriptor: java.lang.String getName()>
<android.media.AudioFocusInfo: long getGen()>
<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.parsing.component.ParsedProvider: java.lang.String getAuthority()>
<android.content.pm.ShortcutManager$ShareShortcutInfo: android.content.pm.ShortcutInfo getShortcutInfo()>
<android.app.admin.DevicePolicyManager: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<android.content.IContentService$Default: java.util.List getCurrentSyncsAsUser(int)>
<android.view.SurfaceControl: java.lang.Throwable getReleaseStack()>
<android.app.admin.SystemUpdateInfo: int getSecurityPatchState()>
<com.android.internal.widget.IRemoteViewsFactory$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()>
<android.view.ViewGroup: int getTransientViewCount()>
<android.telephony.CarrierRestrictionRules: boolean isAllCarriersAllowed()>
<android.text.method.WordIterator: int getNextWordEndOnTwoWordBoundary(int)>
<android.widget.Toolbar: int getPopupTheme()>
<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>
<android.print.PrintAttributes$Margins: int getBottomMils()>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
<android.view.DragEvent: float getY()>
<android.os.Message: java.lang.Runnable getCallback()>
<android.app.SystemServiceRegistry$15: android.os.IBinder createService()>
<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>
<android.widget.FastScroller$4: java.lang.Object get(java.lang.Object)>
<android.service.autofill.UserData: java.lang.String[] getValues()>
<android.view.accessibility.AccessibilityRecord: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>
<android.widget.ProgressBar$1: java.lang.Object get(java.lang.Object)>
<android.view.textclassifier.ConversationActions$Request: java.util.List getHints()>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>
<android.location.GpsMeasurement: double getElevationInDeg()>
<android.graphics.ImageDecoder: android.graphics.PostProcessor getPostProcessor()>
<android.hardware.radio.RadioManager$BandDescriptor: int getType()>
<android.app.job.JobInfo: long getEstimatedNetworkUploadBytes()>
<android.app.IActivityController$Stub: java.lang.String getTransactionName(int)>
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>
<android.app.INotificationManager$Default: android.content.ComponentName getAllowedNotificationAssistant()>
<android.service.vr.IVrManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.UserManager: boolean isAdminUser()>
<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.menu.MenuAdapter: com.android.internal.view.menu.MenuBuilder getAdapterMenu()>
<android.content.ComponentName: java.lang.String getClassName()>
<android.os.IThermalService$Default: android.os.Temperature[] getCurrentTemperatures()>
<android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>
<android.view.IPinnedStackController$Stub: android.view.IPinnedStackController getDefaultImpl()>
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface(android.net.lowpan.ILowpanInterface)>
<android.hardware.radio.V1_0.CellInfoWcdma: int hashCode()>
<com.android.internal.telephony.ITelephony$Default: boolean isTtyOverVolteEnabled(int)>
<android.app.admin.DevicePolicyManager: android.os.PersistableBundle getTransferOwnershipBundle()>
<android.media.MediaDrm$CryptoSession: byte[] encrypt(byte[],byte[],byte[])>
<android.widget.TextView: int getTotalPaddingTop()>
<android.telephony.LteVopsSupportInfo$1: android.telephony.LteVopsSupportInfo[] newArray(int)>
<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>
<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubTransaction queryNanoApps(android.hardware.location.ContextHubInfo)>
<android.app.IBackupAgent$Stub: android.app.IBackupAgent getDefaultImpl()>
<android.text.BidiFormatter$DirectionalityEstimator: int getExitDir()>
<android.service.notification.ZenPolicy: int getPriorityCategoryEvents()>
<android.app.admin.IDevicePolicyManager$Default: long getLastSecurityLogRetrievalTime()>
<android.telephony.UiccAccessRule$1: void <init>()>
<android.hardware.radio.V1_5.BarringInfo$BarringTypeSpecificInfo$Conditional: int hashCode()>
<com.android.internal.policy.DecorView: android.graphics.drawable.Drawable getBackgroundFallback()>
<android.hardware.camera2.impl.CaptureCallback: java.util.concurrent.Executor getExecutor()>
<android.view.contentcapture.ViewNode: int getHeight()>
<com.android.internal.telephony.ITelephony$Default: boolean setOperatorBrandOverride(int,java.lang.String)>
<android.app.admin.IDevicePolicyManager$Default: int getDeviceOwnerUserId()>
<android.os.ISystemConfig$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.metrics.LogMaker: java.lang.Object getTaggedData(int)>
<android.app.IActivityManager$Stub$Proxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.app.AsyncNotedAppOp: int hashCode()>
<android.content.pm.IPackageDeleteObserver$Default: android.os.IBinder asBinder()>
<android.internal.hidl.base.V1_0.IBase$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.media.AudioManager: java.util.concurrent.Executor access$1600(android.media.AudioManager)>
<android.telephony.SubscriptionManager: int getSlotIndex(int)>
<android.media.MediaRouter$RouteInfo: int getVolume()>
<com.android.internal.statusbar.IStatusBarService$Default: int[] getDisableFlags(android.os.IBinder,int)>
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>
<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>
<android.security.keystore.ICredstoreTokenCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()>
<android.view.ViewGroup$ChildListForAccessibility: int getChildCount()>
<android.hardware.input.IInputDevicesChangedListener$Default: android.os.IBinder asBinder()>
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastFrameNumber()>
<android.text.style.TextAppearanceSpan: int getShadowColor()>
<com.android.internal.telephony.IMms$Default: boolean deleteStoredConversation(java.lang.String,long)>
<android.filterfw.core.SimpleFrame: int[] getInts()>
<android.app.IActivityTaskManager$Stub$Proxy: android.app.ActivityManager$StackInfo getStackInfoOnDisplay(int,int,int)>
<android.content.res.Resources$Theme: int getChangingConfigurations()>
<android.os.IIncidentReportStatusListener$Stub: java.lang.String getTransactionName(int)>
<android.app.JobSchedulerImpl: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>
<android.text.style.StyleSpan: int getStyle()>
<android.os.UserManager: android.content.pm.UserInfo preCreateUser(java.lang.String)>
<com.android.internal.content.om.OverlayConfig: com.android.internal.content.om.OverlayConfig getSystemInstance()>
<android.app.IActivityManager$Stub$Proxy: int getUidForIntentSender(android.content.IIntentSender)>
<android.app.admin.DevicePolicyManager: int getOrganizationColorForUser(int)>
<android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager asInterface(android.os.IBinder)>
<com.android.internal.telephony.euicc.IRemoveNotificationFromListCallback$Default: android.os.IBinder asBinder()>
<android.security.keystore.IKeystoreCertificateChainCallback$Stub: android.security.keystore.IKeystoreCertificateChainCallback getDefaultImpl()>
<com.android.internal.inputmethod.IIntResultCallback$Stub: com.android.internal.inputmethod.IIntResultCallback getDefaultImpl()>
<android.media.AudioFocusInfo: int getLossReceived()>
<android.hardware.camera2.CaptureRequest: java.lang.String getLogicalCameraId()>
<android.graphics.drawable.DrawableWrapper: int getChangingConfigurations()>
<android.os.health.HealthStats: long getMeasurement(int)>
<android.content.UndoManager: int forgetUndos(android.content.UndoOwner[],int)>
<android.media.session.ISessionManager$Default: android.content.pm.ParceledListSlice getSession2Tokens(int)>
<com.android.internal.view.menu.IconMenuView: int getNumActualItemsShown()>
<android.graphics.RenderNode: float getTranslationZ()>
<android.view.textclassifier.TextClassification$Request: java.lang.CharSequence getText()>
<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getSummaryAggregate()>
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.hardware.camera2.utils.TypeReference: int hashCode()>
<android.widget.Toolbar: int getContentInsetStart()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.policy.PhoneWindow: float getElevation()>
<android.media.AudioPresentation: int hashCode()>
<android.animation.KeyframeSet: java.lang.Object getValue(float)>
<android.content.pm.IPackageManager$Default: int getApplicationEnabledSetting(java.lang.String,int)>
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getCurrent()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()>
<android.telephony.ims.aidl.IRcsFeatureListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(byte[])>
<android.app.PendingIntent: int hashCode()>
<android.telephony.SmsManager$2: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,int,boolean,int)>
<android.view.VerifiedKeyEvent: java.lang.Boolean getFlag(int)>
<android.view.View$3: java.lang.Float get(android.view.View)>
<com.android.internal.telephony.ITelephony$Default: boolean isWifiCallingAvailable(int)>
<android.security.keystore.IKeystoreService$Default: int insert(java.lang.String,byte[],int,int)>
<android.media.Ringtone: int getStreamType()>
<com.android.ims.internal.IImsCallSession$Default: android.telephony.ims.ImsCallProfile getRemoteCallProfile()>
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getCount()>
<android.view.IRemoteAnimationRunner$Stub: java.lang.String getTransactionName(int)>
<android.content.res.ResourcesImpl: java.lang.String getResourceEntryName(int)>
<android.media.AudioManager: int registerAudioPolicy(android.media.audiopolicy.AudioPolicy)>
<android.graphics.Typeface: int access$200(android.graphics.Typeface)>
<android.telephony.TelephonyManager: java.lang.String getImei(int)>
<android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener asInterface(android.os.IBinder)>
<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.PackageParser$SigningDetails getSigningDetails(android.content.pm.parsing.ParsingPackageRead,boolean)>
<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>
<android.app.usage.IStorageStatsManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app._$$Lambda$SystemServiceRegistry$16$s6mZ42tuGUunhKa_5iwjLY5FGdM: java.lang.Object get()>
<android.app.timezone.RulesState: int describeContents()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: java.lang.CharSequence getHint()>
<android.window.WindowContainerTransaction$HierarchyOp: android.os.IBinder getNewParent()>
<android.service.vr.IVrManager$Default: boolean getVrModeState()>
<android.media.MediaCodecList: java.util.Map getGlobalSettings()>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getBlocksPerSecondRange()>
<android.telephony.PreciseCallState: int getRingingCallState()>
<android.hardware.location.MemoryRegion: int getCapacityBytes()>
<android.app.Notification$BigPictureStyle: android.graphics.Bitmap getBigPicture()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getPreferredNetworkType(int)>
<android.view.WindowlessWindowManager: int addToDisplayAsUser(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])>
<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier[] getSecondaryIds()>
<com.android.internal.telephony.ITelephony$Default: int getCarrierPrivilegeStatusForUid(int,int)>
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)>
<android.net.IEthernetManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.IIpSecService$Stub: java.lang.String getTransactionName(int)>
<android.os.IDeviceIdentifiersPolicyService$Stub$Proxy: android.os.IBinder asBinder()>
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>
<android.net.lowpan.ILowpanEnergyScanCallback$Stub: android.net.lowpan.ILowpanEnergyScanCallback asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTtyModeSupported()>
<android.os.PowerManager: float getBrightnessConstraint(int)>
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)>
<android.app.NotificationHistory: java.util.List getNotificationsToWrite()>
<android.media.projection.IMediaProjection$Stub$Proxy: int applyVirtualDisplayFlags(int)>
<android.media.AudioTrack: int getBufferSizeInFrames()>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger$SoundModel: byte[] getData()>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.graphics.drawable.GradientDrawable: float getThicknessRatio()>
<android.graphics.Bitmap: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.view.autofill.AutofillManager: android.view.autofill.AutofillId getNextAutofillId()>
<android.os.IInstalld$Stub$Proxy: long[] getExternalSize(java.lang.String,int,int,int[])>
<android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.hardware.hdmi.IHdmiDeviceEventListener asInterface(android.os.IBinder)>
<android.hardware.ICameraService$Default: android.hardware.CameraInfo getCameraInfo(int)>
<android.net.lowpan.ILowpanManager$Stub: android.os.IBinder asBinder()>
<android.telephony.CellIdentity: int describeContents()>
<android.app.ContextImpl: java.io.File getNoBackupFilesDir()>
<android.net.LinkProperties: java.util.List getLinkAddresses()>
<android.view.textclassifier.ExtrasUtils: android.content.Intent getActionIntent(android.os.Bundle)>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: boolean isDisplayWhiteBalanceEnabled()>
<android.app.backup.IBackupObserver$Default: android.os.IBinder asBinder()>
<android.graphics.Point: int hashCode()>
<android.util.Rational: long longValue()>
<com.android.ims.internal.IImsEcbm$Stub: java.lang.String getDefaultTransactionName(int)>
<android.content.pm.IPackageManager$Default: java.lang.String getNameForUid(int)>
<com.android.ims.internal.IImsVideoCallProvider$Stub: com.android.ims.internal.IImsVideoCallProvider getDefaultImpl()>
<android.view.inputmethod.InputConnectionWrapper: android.os.Handler getHandler()>
<com.android.internal.telephony.INumberVerificationCallback$Stub: com.android.internal.telephony.INumberVerificationCallback asInterface(android.os.IBinder)>
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>
<android.hardware.location.IContextHubClientCallback$Stub: android.hardware.location.IContextHubClientCallback asInterface(android.os.IBinder)>
<android.view.IWindowManager$Stub$Proxy: int getInitialDisplayDensity(int)>
<android.content.Intent: java.lang.String getType()>
<android.view.contentcapture.IDataShareWriteAdapter$Stub: java.lang.String getTransactionName(int)>
<android.media.TextTrackCue: int hashCode()>
<android.app.LoadedApk: java.io.File getCredentialProtectedDataDirFile()>
<android.app.Notification$CarExtender: int getColor()>
<android.content.pm.IPackageManager$Stub$Proxy: int getIntentVerificationStatus(java.lang.String,int)>
<android.text.style.LocaleSpan: int describeContents()>
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>
<android.net.NetworkStatsHistory: int describeContents()>
<android.app.IProcessObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IUiAutomationConnection$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
<android.hardware.ICamera$Stub: android.hardware.ICamera getDefaultImpl()>
<com.android.internal.util.SizedInputStream: int read(byte[],int,int)>
<android.telephony.data.ApnSetting$Builder: int access$1500(android.telephony.data.ApnSetting$Builder)>
<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest getManifest()>
<android.widget.Editor$InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.IWindowManager$Stub: java.lang.String getTransactionName(int)>
<android.content.rollback.IRollbackManager$Default: android.os.IBinder asBinder()>
<android.app.IWallpaperManager$Default: android.app.WallpaperColors getWallpaperColors(int,int,int)>
<android.telephony.CdmaEriInformation: int getEriIconIndex()>
<android.location.LocationManager$GnssStatusListenerManager: android.location.GnssStatus getGnssStatus()>
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>
<android.app.job.IJobScheduler$Default: android.content.pm.ParceledListSlice getAllPendingJobs()>
<android.app.admin.IDevicePolicyManager$Default: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.lang.String access$400(android.telephony.VisualVoicemailSmsFilterSettings$Builder)>
<android.view.contentcapture.IContentCaptureDirectManager$Stub: android.view.contentcapture.IContentCaptureDirectManager getDefaultImpl()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int getNativeSize()>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>
<com.android.server.SystemConfig: android.util.ArrayMap getComponentsEnabledStates(java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstantApps(int)>
<android.content.ISyncStatusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.VectorDrawable$VGroup: android.util.Property getProperty(java.lang.String)>
<com.android.internal.telephony.euicc.IDisableProfileCallback$Default: android.os.IBinder asBinder()>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<android.media.MediaRouter$RouteInfo: android.view.Display getPresentationDisplay()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isEmergencyNumber(java.lang.String,boolean)>
<com.android.ims.internal.IImsMultiEndpoint$Stub: com.android.ims.internal.IImsMultiEndpoint getDefaultImpl()>
<android.app.Activity: android.os.IBinder getActivityToken()>
<android.hardware.camera2.impl.FrameNumberTracker: long getCompletedReprocessFrameNumber()>
<android.util.apk.WrappedX509Certificate: byte[] getEncoded()>
<android.media.soundtrigger_middleware.PhraseSoundModel: int describeContents()>
<android.widget.EdgeEffect: int getColor()>
<android.security.keystore.IKeystoreService$Default: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>
<android.telephony.SubscriptionManager: int getEnabledSubscriptionId(int)>
<android.widget.AbsListView: int getCacheColorHint()>
<android.telephony.CellIdentityCdma: int hashCode()>
<android.net.RouteInfo: java.net.InetAddress getGateway()>
<android.view.MotionEvent: float getHistoricalX(int)>
<android.hardware.ISensorPrivacyManager$Stub$Proxy: boolean isSensorPrivacyEnabled()>
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>
<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>
<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle getMetaData()>
<android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.os.IBinder asBinder()>
<android.app.IActivityManager$Default: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.WindowlessWindowManager: boolean getInTouchMode()>
<android.telephony.ims.feature.CapabilityChangeRequest$CapabilityPair: int getCapability()>
<android.telephony.data.ApnSetting$Builder: int access$900(android.telephony.data.ApnSetting$Builder)>
<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>
<android.os.INetworkManagementService$Default: java.lang.String[] listInterfaces()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<com.android.internal.telephony.SmsMessageBase: void extractEmailAddressFromMessageBody()>
<android.graphics.ColorSpace: int getComponentCount()>
<android.location.IGnssMeasurementsListener$Stub: android.location.IGnssMeasurementsListener getDefaultImpl()>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<android.telephony.TelephonyManager: int addDevicePolicyOverrideApn(android.content.Context,android.telephony.data.ApnSetting)>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOn(java.lang.String)>
<android.net.lowpan.LowpanInterface: android.net.LinkAddress[] getLinkAddresses()>
<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()>
<android.view.accessibility.IAccessibilityEmbeddedConnection$Stub: android.view.accessibility.IAccessibilityEmbeddedConnection getDefaultImpl()>
<android.widget.EditText: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IDeviceIdleController$Stub: android.os.IDeviceIdleController getDefaultImpl()>
<android.os.storage.VolumeInfo: java.lang.String getDiskId()>
<android.text.StaticLayout: int getLineExtra(int)>
<com.android.internal.os.BatteryStatsImpl: long getInteractiveTime(long,int)>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
<android.graphics.drawable.LayerDrawable: int getLayerHeight(int)>
<android.text.method.WordIterator: int getPunctuationBeginning(int)>
<android.app.IWallpaperManagerCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.transition.Transition: android.transition.Transition$EpicenterCallback getEpicenterCallback()>
<android.graphics.text.LineBreaker$ParagraphConstraints: float getFirstWidth()>
<android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.util.ArrayList getHashChain()>
<android.location.GpsMeasurement: int access$002(android.location.GpsMeasurement,int)>
<android.net.ConnectivityManager: byte[] getNetworkWatchlistConfigHash()>
<android.telephony.CellInfoGsm: android.telephony.CellInfoGsm createFromParcelBody(android.os.Parcel)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.print.IPrinterDiscoveryObserver$Stub: java.lang.String getTransactionName(int)>
<android.net.IConnectivityManager$Default: int getConnectionOwnerUid(android.net.ConnectionInfo)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkPropertiesForType(int)>
<android.content.pm.ILauncherApps$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.location.IContextHubCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeImpl()>
<android.content.res.Resources: java.lang.ClassLoader getClassLoader()>
<android.view.animation.Animation: boolean getFillBefore()>
<android.view.WindowInsets$Type: int systemBars()>
<android.telephony.CallAttributes$1: android.telephony.CallAttributes[] newArray(int)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.IAccessibilityServiceConnection asInterface(android.os.IBinder)>
<com.android.internal.telephony.ISub$Default: int getPhoneId(int)>
<android.util.proto.ProtoOutputStream: byte[] getBytes()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest getDefaultRequest()>
<com.android.ims.internal.IImsEcbmListener$Default: android.os.IBinder asBinder()>
<com.android.internal.textservice.ITextServicesManager$Default: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)>
<android.location.IGnssStatusListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.session.MediaSessionManager: java.util.List getSession2Tokens()>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUserCached(java.lang.String,int,int)>
<android.os.IInstalld$Stub$Proxy: long createAppDataBatched(java.lang.String[],java.lang.String[],int,int,int[],java.lang.String[],int[])>
<android.view.ViewGroup: int indexOfChild(android.view.View)>
<android.renderscript.Float4: float get(int)>
<android.content.pm.ShortcutManager: java.util.List getShortcuts(int)>
<android.net.NetworkTemplate: int hashCode()>
<android.view.ViewConfiguration: int getPressedStateDuration()>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()>
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.service.notification.NotificationListenerService$RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService$Ranking)>
<android.hardware.IConsumerIrService$Default: int[] getCarrierFrequencies()>
<android.hardware.camera2.ICameraOfflineSession$Stub: android.hardware.camera2.ICameraOfflineSession getDefaultImpl()>
<android.telephony.CellIdentity: int hashCode()>
<android.widget.Editor: int access$5700(android.widget.Editor)>
<android.net.IIpSecService$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.Spinner$DropDownAdapter: java.lang.Object getItem(int)>
<android.widget.Toast: int getXOffset()>
<android.os.storage.VolumeInfo$1: int compare(java.lang.Object,java.lang.Object)>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>
<android.hardware.display.IDisplayManager$Default: int[] getDisplayIds()>
<android.webkit.WebSettings: java.lang.String getPluginsPath()>
<com.android.internal.os.IResultReceiver$Stub: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: android.net.Network getActiveNetworkForUid(int,boolean)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>
<android.content.pm.IPackageInstallerSession$Stub: android.os.IBinder asBinder()>
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.app.AppOpsManager$AttributedOpEntry: long getLastBackgroundDuration(int)>
<android.telephony.CellSignalStrength: int getAsuFromRssiDbm(int)>
<android.media.session.ISessionController$Stub$Proxy: android.content.pm.ParceledListSlice getQueue()>
<android.telephony.TelephonyManager: java.lang.String getBasebandVersion()>
<android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>
<com.android.internal.app.ISoundTriggerService$Default: android.os.IBinder asBinder()>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<android.media.IVolumeController$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.IntentFilter: int countDataSchemeSpecificParts()>
<com.android.internal.telephony.ITelephony$Default: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()>
<android.app.admin.IDevicePolicyManager$Default: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<android.drm.DrmManagerClient: int access$000(android.drm.DrmManagerClient)>
<android.widget.EditorTouchState: float getLastDownX()>
<android.view.contentcapture.ContentCaptureEvent: long getEventTime()>
<android.text.BoringLayout: int getLineCount()>
<android.content.pm.PackageManager: java.util.List getDeclaredSharedLibraries(java.lang.String,int)>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.ISms$Default: int checkSmsShortCodeDestination(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.os.IPowerManager$Stub$Proxy: boolean isPowerSaveMode()>
<android.content.IRestrictionsManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.AbsListView: int getListPaddingTop()>
<android.view.textclassifier.TextClassificationConstants: int getGenerateLinksMaxTextLength()>
<android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)>
<android.telephony.ModemInfo$1: android.telephony.ModemInfo[] newArray(int)>
<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo)>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>
<android.media.session.MediaSessionManager$RemoteUserInfo: int hashCode()>
<android.media.AudioSystem: java.lang.String getInputDeviceName(int)>
<android.media.IAudioFocusDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.MediaMetadata: java.lang.String getKeyFromMetadataEditorKey(int)>
<android.media.AudioPresentation: java.util.Map getLabels()>
<android.view.SurfaceControlViewHost$SurfacePackage: android.view.SurfaceControl getSurfaceControl()>
<android.widget.ProgressBar: int getMin()>
<android.text.SpannedString: int hashCode()>
<android.net.ConnectivityManager: boolean isVpnLockdownEnabled(int)>
<android.hardware.IConsumerIrService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBinder asBinder()>
<com.android.internal.net.INetworkWatchlistManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.util.Size: int getHeight()>
<android.location.Country: long getTimestamp()>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakelockTimerLocked(com.android.internal.os.BatteryStatsImpl$Uid$Wakelock,int)>
<android.telephony.SmsManager$5: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.SubscriptionInfo: java.util.List getAccessRules()>
<android.filterfw.core.FrameFormat: int getHeight()>
<android.media.PlayerBase: int baseSetAuxEffectSendLevel(float)>
<android.hardware.usb.IUsbSerialReader$Stub: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorBackgroundTime()>
<android.os.BatteryStatsManager: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()>
<android.service.notification.IStatusBarNotificationHolder$Stub: android.os.IBinder asBinder()>
<android.media.PlaybackParams: float getSpeed()>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<android.telephony.TelephonyManager: boolean isRadioOn()>
<android.view.HandlerActionQueue: java.lang.Runnable getRunnable(int)>
<android.graphics.Canvas: int getSaveCount()>
<com.android.internal.os.BatteryStatsImpl: long[] getCpuFreqs()>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfig()>
<android.hardware.display.IDisplayManagerCallback$Stub: android.os.IBinder asBinder()>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.DisplayInfo: android.view.Display$Mode getDefaultMode()>
<android.graphics.Typeface: int getStyle()>
<android.telephony.CallForwardingInfo$1: android.telephony.CallForwardingInfo createFromParcel(android.os.Parcel)>
<android.telephony.CellIdentityLte: void updateGlobalCellId()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean resetModemConfig(int)>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,int,java.lang.String)>
<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>
<android.app.ActivityTaskManager: int getDefaultAppRecentsLimitStatic()>
<com.android.internal.app.IVoiceInteractor$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>
<android.app.AppOpsManager: int strOpToOp(java.lang.String)>
<android.telephony.CellIdentityGsm$1: void <init>()>
<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets getApkAssets()>
<android.content.pm.PackageInfo: int describeContents()>
<android.app.FragmentHostCallback: boolean getRetainLoaders()>
<android.service.voice.IVoiceInteractionSession$Stub: android.service.voice.IVoiceInteractionSession asInterface(android.os.IBinder)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: int getWindowIdForLeashToken(android.os.IBinder)>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Stub: com.android.internal.telephony.IUpdateAvailableNetworksCallback asInterface(android.os.IBinder)>
<android.provider.ContactsContract$CommonDataKinds$SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<com.android.internal.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()>
<android.app.role.IOnRoleHoldersChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String)>
<android.util.jar.StrictJarFile: java.security.cert.Certificate[][] getCertificateChains(java.util.zip.ZipEntry)>
<android.app.Fragment: android.content.res.Resources getResources()>
<android.net.lowpan.LowpanChannelInfo: int access$102(android.net.lowpan.LowpanChannelInfo,int)>
<com.android.internal.telephony.CellNetworkScanResult$1: void <init>()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
<android.text.StaticLayout: int unpackEndHyphenEdit(int)>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<android.app.ActivityThread: android.os.Handler getHandler()>
<android.content.pm.IPackageStatsObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.impl.RequestLastFrameNumbersHolder: long getLastRegularFrameNumber()>
<android.print.IPrintDocumentAdapter$Stub: android.os.IBinder asBinder()>
<android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<android.os.Handler: android.os.IMessenger getIMessenger()>
<android.telephony.SmsCbLocation: int describeContents()>
<android.media.AudioPlaybackCaptureConfiguration: int[] getMatchingUsages()>
<android.app.Activity: int getChangingConfigurations()>
<android.security.keystore.IKeystoreService$Default: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()>
<android.view.WindowInsets$Type: int navigationBars()>
<android.telephony.UiccSlotInfo: int describeContents()>
<android.os.UserManager: android.os.IUserManager access$000(android.os.UserManager)>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.app.usage.UsageEvents queryEventsForUser(long,long,int,java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>
<android.app.ApplicationPackageManager: int getPackageUidAsUser(java.lang.String,int,int)>
<android.telephony.data.ApnSetting: int getMvnoType()>
<android.app.prediction.IPredictionManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.os.BatteryStatsImpl: int getHistoryTotalSize()>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainPosition(long)>
<android.net.lowpan.LowpanChannelInfo: int hashCode()>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>
<android.view.View: android.view.Display getDisplay()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>
<android.hardware.cas.V1_2.ICasListener$Stub: java.util.ArrayList interfaceChain()>
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getFrontendType()>
<android.os.IClientCallback$Default: android.os.IBinder asBinder()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>
<android.view.Choreographer: android.view.Choreographer getMainThreadInstance()>
<android.content.IntentFilter: java.util.ArrayList getHostsList()>
<android.content.pm.IPackageManager$Stub$Proxy: int movePrimaryStorage(java.lang.String)>
<android.app.NotificationHistory: int describeContents()>
<android.content.pm.IPackageManager$Default: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>
<android.os.health.HealthStatsParceler: android.os.health.HealthStats getHealthStats()>
<android.hardware.location.ContextHubMessage: int getMsgType()>
<android.media.AudioMetadata$ObjectPackage: android.util.Pair unpack(java.nio.ByteBuffer)>
<com.android.internal.telephony.euicc.IDeleteProfileCallback$Stub: com.android.internal.telephony.euicc.IDeleteProfileCallback asInterface(android.os.IBinder)>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findEmulatedForPrivate(android.os.storage.VolumeInfo)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
<android.media.TimedMetaData: long getTimestamp()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>
<android.view.InsetsSourceControl: android.graphics.Point getSurfacePosition()>
<android.view.InsetsAnimationControlImpl: int getTypes()>
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.GpsMeasurement: byte getLossOfLock()>
<android.net.EthernetManager: java.lang.String[] getAvailableInterfaces()>
<android.app.ActivityOptions: int getStartY()>
<android.os.storage.StorageVolume: java.lang.String getMediaStoreVolumeName()>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub: android.os.IBinder asBinder()>
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma createFromParcel(android.os.Parcel)>
<android.app.RuntimeAppOpAccessMessage: java.lang.String getPackageName()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.widget.Toolbar: int getTitleMarginBottom()>
<android.media.IAudioRoutesObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.textclassifier.TextLinks$TextLinkSpan: java.lang.String getUrl()>
<android.os.ISystemUpdateManager$Stub: android.os.ISystemUpdateManager asInterface(android.os.IBinder)>
<android.location.Criteria: int describeContents()>
<android.telephony.SmsManager$1: void <init>(android.telephony.SmsManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,long)>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>
<android.widget.RemoteViews$ViewContentNavigation: int mergeBehavior()>
<android.os.IBatteryPropertiesRegistrar$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)>
<android.media.AudioTrack$TunerConfiguration: int getSyncId()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDefaultCrossProfilePackages()>
<android.app.backup.FullBackup$BackupScheme: java.lang.String tokenToDirectoryPath(java.lang.String)>
<android.app.ContextImpl: android.content.Context createCredentialProtectedStorageContext()>
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMin()>
<com.android.internal.infra.IAndroidFuture$Stub: com.android.internal.infra.IAndroidFuture getDefaultImpl()>
<android.renderscript.Matrix3f: float get(int,int)>
<android.telephony.SubscriptionManager: boolean isSubscriptionVisible(android.telephony.SubscriptionInfo)>
<android.security.net.config.ApplicationConfig: boolean isCleartextTrafficPermitted()>
<android.security.keystore.IKeystoreService$Stub$Proxy: boolean isConfirmationPromptSupported()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isTtyOverVolteEnabled(int)>
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>
<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>
<android.content.ContentProviderOperation: android.net.Uri getUri()>
<android.webkit.WebView: int computeVerticalScrollRange()>
<android.media.audiofx.AudioEffect$Descriptor: int hashCode()>
<android.widget.AbsListView: int getHeightForPosition(int)>
<android.media.session.ISessionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.Bitmap: long getNativeInstance()>
<android.app.IActivityManager$Default: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.security.keystore.recovery.KeyChainProtectionParams: int describeContents()>
<com.android.server.SystemConfig: android.util.ArraySet getSystemExtPrivAppPermissions(java.lang.String)>
<android.debug.IAdbManager$Stub$Proxy: boolean isAdbWifiSupported()>
<android.util.apk.ApkSignatureSchemeV3Verifier: byte[] getVerityRootHash(java.lang.String)>
<android.content.res.ResourcesImpl: android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue,int,int,android.content.res.Resources$Theme)>
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()>
<android.widget.RemoteViews$ViewGroupActionRemove: int access$2100(android.widget.RemoteViews$ViewGroupActionRemove)>
<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>
<android.app.ActivityManager: int staticGetLargeMemoryClass()>
<android.hardware.radio.Announcement: java.util.Map getVendorInfo()>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: java.util.List access$200(android.telephony.VisualVoicemailSmsFilterSettings$Builder)>
<com.android.internal.widget.ActionBarOverlayLayout$5: java.lang.Integer get(com.android.internal.widget.ActionBarOverlayLayout)>
<android.app.contentsuggestions.ISelectionsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.PooledStringWriter: int getStringCount()>
<android.hardware.radio.ITunerCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.prediction.AppTarget: java.lang.String getPackageName()>
<com.android.internal.view.IInputMethodClient$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.impl.CameraMetadataNative$Key: java.lang.String getName()>
<android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
<android.telephony.euicc.EuiccNotification: int getSeq()>
<android.content.res.FontResourcesParser$ProviderResourceEntry: java.lang.String getAuthority()>
<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppPermissions(java.lang.String)>
<android.permission.IPermissionManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String,int)>
<android.media.AudioFocusInfo: java.lang.String getPackageName()>
<android.app.ISearchManager$Default: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean nvWriteItem(int,java.lang.String)>
<android.text.SpannableStringBuilder: int length()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getNotificationChannelGroupsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getSupportedModelArch()>
<android.content.pm.IPackageManager$Default: android.content.ComponentName getHomeActivities(java.util.List)>
<android.app.admin.SystemUpdateInfo: long getReceivedTime()>
<android.os.ParcelUuid: int hashCode()>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>
<android.app.ApplicationPackageManager: java.lang.String getAttentionServicePackageName()>
<android.content.res.ResourcesImpl: android.content.res.ResourcesImpl$ThemeImpl newThemeImpl(android.content.res.Resources$ThemeKey)>
<android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(int,java.lang.String,java.lang.String)>
<android.content.res.TypedArray: android.content.res.Resources getResources()>
<android.telephony.CellInfoWcdma: android.telephony.CellInfoWcdma createFromParcelBody(android.os.Parcel)>
<android.hardware.location.IContextHubTransactionCallback$Default: android.os.IBinder asBinder()>
<com.android.internal.view.FloatingActionMode: java.lang.CharSequence getSubtitle()>
<android.os.IServiceCallback$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: java.lang.String getSystemTextClassifierPackageName()>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)>
<com.android.internal.widget.AbsActionBarView: int getContentHeight()>
<android.text.style.TextAppearanceSpan: float getShadowDx()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultDataSubscriptionInfo()>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<android.telephony.TelephonyScanManager: android.telephony.NetworkScan requestNetworkScan(int,android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback,java.lang.String,java.lang.String)>
<android.os.storage.IStorageEventListener$Stub: java.lang.String getTransactionName(int)>
<android.os.incremental.IncrementalStorage: byte[] getFileMetadata(java.util.UUID)>
<android.graphics.PorterDuffColorFilter: int hashCode()>
<android.app.IAlarmCompleteListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOps(int)>
<android.hardware.location.NanoApp: int getNeededWriteMemBytes()>
<com.android.internal.telephony.ISub$Default: int getPreferredDataSubscriptionId()>
<android.widget.SuggestionsAdapter: int getQueryRefinement()>
<android.telephony.CallQuality: int getNumRtpPacketsReceived()>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
<android.os.VibrationEffect$Prebaked: int getEffectStrength()>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>
<android.location.LocationRequest: android.os.WorkSource getWorkSource()>
<android.graphics.BitmapRegionDecoder: int getHeight()>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.util.Map getLogicalToPhysicalSlotMapping()>
<android.media.AudioMetadata$AutoGrowByteBuffer: java.nio.ByteOrder order()>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
<android.graphics.ImageDecoder$InputStreamSource: android.content.res.Resources getResources()>
<android.text.SpannableString: int getSpanFlags(java.lang.Object)>
<android.telecom.PhoneAccount: java.util.List getSupportedUriSchemes()>
<android.accounts.IAccountManager$Stub: java.lang.String getTransactionName(int)>
<android.net.NetworkStats: int internalSize()>
<com.android.ims.internal.IImsVideoCallCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.animation.AnimatorSet: long getCurrentPlayTime()>
<android.renderscript.Type: int getCount()>
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()>
<android.view.IGraphicsStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.euicc.DownloadableSubscription: int describeContents()>
<android.media.session.ISessionManager$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso(int)>
<android.app.Fragment: android.app.Fragment getTargetFragment()>
<android.view.View$10: java.lang.Float get(android.view.View)>
<com.android.internal.telephony.ITelephony$Default: int getDataStateForSubId(int)>
<android.app.job.JobWorkItem: int describeContents()>
<android.app.usage.StorageStatsManager: android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.util.UUID,android.os.UserHandle)>
<android.view.AbsSavedState: int describeContents()>
<android.hardware.camera2.params.StreamConfigurationMap: int hashCode()>
<android.view.GestureExclusionTracker$GestureExclusionViewInfo: int update()>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: java.lang.String convertAfModeToLegacy(int,java.util.List)>
<android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy: byte[] getOneTouchRecordSource(int)>
<android.os.IUserManager$Default: android.os.Bundle getUserRestrictions(int)>
<android.net.wifi.nl80211.IInterfaceEventCallback$Stub: android.net.wifi.nl80211.IInterfaceEventCallback getDefaultImpl()>
<android.hardware.hdmi.IHdmiRecordListener$Default: byte[] getOneTouchRecordSource(int)>
<android.printservice.PrintServiceInfo: int hashCode()>
<android.security.keystore.IKeystoreService$Stub$Proxy: int onKeyguardVisibilityChanged(boolean,int)>
<android.view.textclassifier.SelectionEvent: int getAbsoluteEnd()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getNamesForUids(int[])>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordComplexity(boolean)>
<android.view.View: android.view.ViewParent getParentForAccessibility()>
<android.drm.DrmManagerClient: int access$300(android.drm.DrmManagerClient,int)>
<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.security.keystore.recovery.KeyChainSnapshot: long getCounterId()>
<com.google.android.mms.pdu.DeliveryInd: long getDate()>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams hasProgress(boolean)>
<android.util.MapCollections$MapIterator: int hashCode()>
<android.hardware.hdmi.HdmiDeviceInfo: int getDevicePowerStatus()>
<android.telephony.SubscriptionManager: boolean allDefaultsSelected()>
<android.view.WindowInsets$Type: int statusBars()>
<android.telephony.CellInfoWcdma$1: android.telephony.CellInfoWcdma createFromParcel(android.os.Parcel)>
<android.hardware.radio.IAnnouncementListener$Stub: android.hardware.radio.IAnnouncementListener getDefaultImpl()>
<android.os.IIncidentReportStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)>
<android.view.ViewConfiguration: long getDeviceGlobalActionKeyTimeout()>
<android.telephony.CellIdentityCdma: int getLatitude()>
<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: java.lang.String getPath()>
<android.telecom.TelecomManager: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)>
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>
<android.media.projection.IMediaProjectionCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.DrawableWrapper: android.graphics.ColorFilter getColorFilter()>
<android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>
<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()>
<com.android.internal.os.BatteryStatsImpl$Uid: int getWifiScanCount(int)>
<com.android.internal.telephony.ISub$Stub$Proxy: boolean isActiveSubId(int,java.lang.String,java.lang.String)>
<android.app.AppOpsManager$AppOpsCollector: java.util.concurrent.Executor getAsyncNotedExecutor()>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()>
<android.app.blob.BlobStoreManager: java.util.List queryBlobsForUser(android.os.UserHandle)>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>
<android.telephony.UiccAccessRule: android.telephony.UiccAccessRule[] decodeRules(byte[])>
<com.android.internal.telephony.EncodeException: int getError()>
<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>
<android.os.INetworkManagementService$Stub$Proxy: boolean getIpForwardingEnabled()>
<android.content.pm.ChangedPackages: int getSequenceNumber()>
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>
<com.android.internal.widget.ILockSettings$Default: int getStrongAuthForUser(int)>
<com.android.internal.app.IVoiceInteractorRequest$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.res.AssetManager: long access$900(long,long,int)>
<android.view.autofill.AutofillPopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.os.BasicShellCommandHandler: java.io.OutputStream getRawErrorStream()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.android.mms.pdu.NotificationInd: byte[] getMessageClass()>
<android.media.midi.IMidiDeviceOpenCallback$Default: android.os.IBinder asBinder()>
<android.location.GnssNavigationMessage: byte[] getData()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: boolean isClientActive()>
<android.content.UndoManager: int countRedos(android.content.UndoOwner[])>
<android.os.storage.IStorageShutdownObserver$Default: android.os.IBinder asBinder()>
<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getAnimatorCache()>
<com.android.internal.inputmethod.IInputContentUriToken$Stub: java.lang.String getTransactionName(int)>
<android.hardware.face.IFaceServiceReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.View: int getLeft()>
<android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>
<android.print.IWriteResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.AlertDialog: android.widget.ListView getListView()>
<android.app.usage.UsageEvents$Event: int getAppStandbyBucket()>
<android.content.pm.ShortcutInfo: int getTextResId()>
<android.hardware.location.IContextHubClient$Stub$Proxy: android.os.IBinder asBinder()>
<android.transition.Transition$ArrayListManager: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>
<android.view.Window: android.view.Window getContainer()>
<android.net.Uri$Builder: android.net.Uri$Builder fragment(android.net.Uri$Part)>
<android.os.UserManager: int getMaxSupportedUsers()>
<android.net.wifi.nl80211.IClientInterface$Stub: java.lang.String getTransactionName(int)>
<android.os.IThermalService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.net.NetworkKey: int hashCode()>
<android.media.IAudioRoutesObserver$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getAccessibilityClassName()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.app.Instrumentation: android.content.Context getTargetContext()>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>
<android.content.pm.IPackageDeleteObserver$Stub: android.content.pm.IPackageDeleteObserver asInterface(android.os.IBinder)>
<com.android.internal.textservice.ITextServicesManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.IWallpaperManager$Default: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.view.WindowInsets: int getSystemWindowInsetTop()>
<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CameraDeviceState access$300(android.hardware.camera2.legacy.GLThreadManager)>
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<android.os.IThermalStatusListener$Stub: android.os.IThermalStatusListener getDefaultImpl()>
<android.os.IUserManager$Default: int getUserBadgeColorResId(int)>
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForUid(java.util.UUID,int)>
<android.os.IUserManager$Stub$Proxy: int getUserIconBadgeResId(int)>
<android.app.RuntimeAppOpAccessMessage: java.lang.String getMessage()>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowEnd()>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>
<android.app.backup.IBackupManager$Stub$Proxy: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>
<android.content.pm.PackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,android.os.UserHandle)>
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.RouteDiscoveryPreference: int describeContents()>
<android.content.rollback.IRollbackManager$Stub$Proxy: int notifyStagedSession(int)>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<android.view.KeyboardShortcutInfo: android.graphics.drawable.Icon getIcon()>
<android.app.AppOpsManager$OpEntry: long getLastDuration(int)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getRequestedPermissions()>
<android.view.autofill.AutofillManager: java.lang.String getUserDataId()>
<android.net.NetworkStatsHistory: long getEnd()>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)>
<android.media.MediaDrm$SessionException: int getErrorCode()>
<com.android.internal.app.IAppOpsService$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockHardwareCanvas()>
<android.webkit.IWebViewUpdateService$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.AppOpsManager$OpEntry: long getLastBackgroundDuration(int)>
<android.media.MediaDrm$KeyRequest: int getRequestType()>
<android.net.VpnManager: android.content.Intent provisionVpnProfile(android.net.PlatformVpnProfile)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: android.os.IBinder asBinder()>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>
<android.graphics.drawable.VectorDrawable$VGroup: float getRotation()>
<android.content.IntentFilter: int getOrder()>
<android.telephony.ims.aidl.IImsConfigCallback$Stub: android.os.IBinder asBinder()>
<android.graphics.text.MeasuredText: long getNativePtr()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<android.app.blob.BlobStoreManager: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle)>
<android.telephony.SubscriptionPlan: long access$702(android.telephony.SubscriptionPlan,long)>
<android.telephony.CellSignalStrengthTdscdma$1: android.telephony.CellSignalStrengthTdscdma[] newArray(int)>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: android.view.accessibility.IWindowMagnificationConnectionCallback getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>
<android.os.PowerManager: boolean isAmbientDisplaySuppressedForToken(java.lang.String)>
<android.hardware.cas.V1_2.ICasListener$Proxy: java.util.ArrayList getHashChain()>
<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>
<android.widget.Toolbar: android.view.Menu getMenu()>
<android.app.Person: java.lang.String getKey()>
<android.widget.Spinner: int getDropDownWidth()>
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder previewProduced()>
<android.os.Debug: int getGlobalFreedCount()>
<android.printservice.recommendation.IRecommendationsChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.window.WindowContainerToken: int hashCode()>
<android.app.Notification$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()>
<android.app.ActivityTransitionCoordinator: android.os.Bundle captureSharedElementState()>
<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.net.wifi.nl80211.NativeScanResult[] getScanResults()>
<android.app.slice.ISliceManager$Default: android.os.IBinder asBinder()>
<android.os.storage.StorageManager: java.io.File findPathForUuid(java.lang.String)>
<com.android.ims.internal.IImsServiceFeatureCallback$Default: android.os.IBinder asBinder()>
<android.window.IWindowContainerTransactionCallback$Stub: java.lang.String getTransactionName(int)>
<android.drm.DrmRights: java.lang.String getMimeType()>
<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: int getRegionCount()>
<android.security.keystore.AndroidKeyStoreKey: int hashCode()>
<android.os.IDumpstateListener$Stub: android.os.IDumpstateListener asInterface(android.os.IBinder)>
<android.renderscript.Byte3: byte length()>
<android.widget.BaseAdapter: java.lang.CharSequence[] getAutofillOptions()>
<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider getAssetsProvider()>
<android.app.ApplicationPackageManager: int movePackage(java.lang.String,android.os.storage.VolumeInfo)>
<android.content.om.OverlayInfo: java.lang.String getCategory()>
<android.widget.PopupWindow: android.graphics.Rect getTransitionEpicenter()>
<android.content.pm.SuspendDialogInfo: int hashCode()>
<android.telephony.SmsMessage: int getStatusOnSim()>
<android.app.blob.IBlobStoreManager$Stub$Proxy: long getRemainingLeaseQuotaBytes(java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage: int getStatus()>
<android.location.IGnssAntennaInfoListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.telecom.Logging.Session: int hashCode()>
<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<android.os.UserManager: int getUserBadgeNoBackgroundResId(int)>
<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()>
<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.content.integrity.IAppIntegrityManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.V1_5.CellInfoGsm: int hashCode()>
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.text.style.EasyEditSpan: android.app.PendingIntent getPendingIntent()>
<android.content.pm.IOnAppsChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.WallpaperManager$Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean,int,int,boolean,android.app.WallpaperManager$ColorManagementProxy)>
<android.net.INetworkScoreService$Default: java.lang.String getActiveScorerPackage()>
<android.content.pm.ICrossProfileApps$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.IPowerManager$Stub$Proxy: int getPowerSaveModeTrigger()>
<android.hardware.radio.ProgramList: android.hardware.radio.RadioManager$ProgramInfo get(android.hardware.radio.ProgramSelector$Identifier)>
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>
<android.os.PowerWhitelistManager: int[] getWhitelistedAppIds(boolean)>
<com.android.internal.compat.IOverrideValidator$Stub: java.lang.String getDefaultTransactionName(int)>
<android.window.IWindowContainerToken$Default: android.os.IBinder asBinder()>
<android.net.http.SslError: java.lang.String getUrl()>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(java.lang.String)>
<android.hardware.IConsumerIrService$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder)>
<android.content.pm.VersionedPackage: int getVersionCode()>
<android.hardware.fingerprint.FingerprintManager: int postEnroll()>
<android.hardware.radio.ICloseHandle$Default: android.os.IBinder asBinder()>
<android.text.SpanSet: int getNextTransition(int,int)>
<android.app.DisabledWallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float,int)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean hasIccCardUsingSlotIndex(int)>
<android.security.KeyStore$OperationPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.media.audiopolicy.AudioProductStrategy: android.media.audiopolicy.AudioProductStrategy getAudioProductStrategyWithId(int)>
<android.content.pm.ICrossProfileApps$Stub: android.content.pm.ICrossProfileApps asInterface(android.os.IBinder)>
<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)>
<android.text.MeasuredParagraph: int getMemoryUsage()>
<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>
<android.text.SpannedString: int getSpanStart(java.lang.Object)>
<android.hardware.radio.V1_5.CellIdentity: int hashCode()>
<android.os.storage.IStorageManager$Stub$Proxy: java.lang.String getPrimaryStorageUuid()>
<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()>
<android.location.GnssClock: int getLeapSecond()>
<android.media.AudioRecordingMonitorImpl: android.media.AudioRecordingConfiguration getMyConfig(java.util.List)>
<com.android.internal.os.ZygoteConnection: java.lang.Runnable processOneCommand(com.android.internal.os.ZygoteServer)>
<android.hardware.camera2.params.StreamConfigurationDuration: int hashCode()>
<android.hardware.cas.V1_0.ICasListener$Stub: android.os.IHwBinder asBinder()>
<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$102(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Default: android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModules()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)>
<android.net.LinkProperties: android.net.Uri getCaptivePortalApiUrl()>
<android.media.AudioTrack: int access$500(android.media.AudioTrack)>
<android.app.usage.StorageStats: long getDataBytes()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK getDeviceStateCallback()>
<android.view.MenuInflater$MenuState: android.view.MenuItem addItem()>
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: int getEventName()>
<android.media.tv.ITvInputHardware$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: long getMaxNumberVerificationTimeoutMillis()>
<android.security.keystore.IKeystoreService$Stub: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthNr: int getCsiSinr()>
<android.widget.AbsListView: int getTopEdgeEffectColor()>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo makeRegular()>
<android.animation.PathKeyframes$FloatKeyframesBase: java.lang.Object getValue(float)>
<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>
<com.android.internal.os.RailStats: long getWifiTotalEnergyUseduWs()>
<android.os.BatterySaverPolicyConfig: boolean getEnableNightMode()>
<android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>
<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>
<android.hardware.fingerprint.IFingerprintServiceReceiver$Stub: android.hardware.fingerprint.IFingerprintServiceReceiver getDefaultImpl()>
<android.view.IWallpaperVisibilityListener$Stub: java.lang.String getTransactionName(int)>
<android.os.IVoldTaskListener$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getAllPackages()>
<android.app.backup.ISelectBackupTransportCallback$Default: android.os.IBinder asBinder()>
<android.os.IVibratorService$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()>
<android.widget.TextView: float getLetterSpacing()>
<android.media.session.ISessionController$Stub: java.lang.String getTransactionName(int)>
<com.android.internal.telephony.ISetOpportunisticDataCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.internal.telephony.ISub$Stub$Proxy: boolean isSubscriptionEnabled(int)>
<android.media.MediaCodec$CodecException: java.lang.String getDiagnosticInfo()>
<android.net.wifi.nl80211.IScanEvent$Stub: android.os.IBinder asBinder()>
<android.net.IConnectivityManager$Default: android.net.LinkProperties getLinkPropertiesForType(int)>
<android.app.usage.IUsageStatsManager$Default: int getUsageSource()>
<android.provider.ContactsContract$RawContacts: java.lang.String getLocalAccountType(android.content.Context)>
<com.android.internal.view.menu.ListMenuPresenter: int getId()>
<android.app.INotificationManager$Stub$Proxy: android.app.NotificationManager$Policy getNotificationPolicy(java.lang.String)>
<android.app.INotificationManager$Stub$Proxy: int getRuleInstanceCount(android.content.ComponentName)>
<android.location.GpsNavigationMessage: short getSubmessageId()>
<android.telecom.Logging.Session: java.lang.String getSessionId()>
<android.widget.ProgressBar: android.graphics.PorterDuff$Mode getSecondaryProgressTintMode()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()>
<android.content.pm.IPackageDataObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.autofill.IAutofillWindowPresenter$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.IRemoteViewsFactory$Default: android.widget.RemoteViews getLoadingView()>
<android.view.DisplayCutout: android.graphics.Insets getWaterfallInsets()>
<android.hardware.display.DeviceProductInfo: java.lang.String getManufacturerPnpId()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>
<android.hardware.radio.ITuner$Stub$Proxy: android.hardware.radio.RadioManager$BandConfig getConfiguration()>
<android.app.ContextImpl: android.view.Display getDisplayNoVerify()>
<android.os.IIncidentManager$Default: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>
<android.app.timedetector.ITimeDetectorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<android.view.FrameStats: long getRefreshPeriodNano()>
<android.content.ClipData: int getItemCount()>
<android.app.usage.IUsageStatsManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>
<android.hardware.biometrics.CryptoObject: javax.crypto.Cipher getCipher()>
<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.util.KeyValueListParser$LongValue: long getDefaultValue()>
<android.app.backup.IBackupManager$Stub$Proxy: android.os.UserHandle getUserForAncestralSerialNumber(long)>
<android.util.MapCollections$MapIterator: java.lang.Object getValue()>
<android.view.FocusFinder$FocusSorter: int lambda$new$1$FocusFinder$FocusSorter(android.view.View,android.view.View)>
<android.text.style.URLSpan: int getSpanTypeId()>
<android.view.ViewRootImpl$UnhandledKeyManager: boolean preViewDispatch(android.view.KeyEvent)>
<android.hardware.location.NanoApp: int describeContents()>
<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>
<com.google.android.mms.pdu.ReadRecInd: byte[] getMessageId()>
<com.android.internal.content.PackageMonitor: java.lang.String getPackageName(android.content.Intent)>
<android.app.INotificationManager$Default: java.lang.String getNotificationDelegate(java.lang.String)>
<android.telephony.CallQuality$1: android.telephony.CallQuality[] newArray(int)>
<android.net.NetworkScoreManager: boolean isCallerActiveScorer(int)>
<android.net.IConnectivityManager$Default: android.net.Network[] getAllNetworks()>
<android.text.method.DigitsKeyListener: int getInputType()>
<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set getConcurrentCameraIdCombination()>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>
<android.widget.ProgressBar: android.graphics.BlendMode getProgressTintBlendMode()>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>
<android.app.admin.DevicePolicyManager: java.util.List getOwnerInstalledCaCerts(android.os.UserHandle)>
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo findCurrentGuestUser()>
<android.graphics.Canvas: long getNativeCanvasWrapper()>
<android.media.projection.IMediaProjection$Default: android.os.IBinder asBinder()>
<android.app.NotificationChannel: java.lang.String getId()>
<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<android.view.IWindow$Stub$Proxy: android.os.IBinder asBinder()>
<android.text.style.SuperscriptSpan: int describeContents()>
<android.media.MicrophoneInfo: java.util.List getChannelMapping()>
<android.os.IVoldListener$Stub: android.os.IVoldListener asInterface(android.os.IBinder)>
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient getDefaultImpl()>
<android.view.View: int getImportantForAutofill()>
<android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
<android.view.View: int getNextFocusForwardId()>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>
<android.telephony.ims.ImsExternalCallState: int getCallState()>
<android.view.animation.Animation: long getStartOffset()>
<android.media.RoutingSessionInfo: int describeContents()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getPackagesForUid(int)>
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>
<android.hardware.face.IFaceService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
<android.telephony.CellIdentity: boolean isSameCell(android.telephony.CellIdentity)>
<android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver getDefaultImpl()>
<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long getReportTimestamp()>
<android.transition.ChangeBounds$6: android.graphics.PointF get(android.view.View)>
<android.hardware.camera2.CaptureResult$Key: int hashCode()>
<android.net.IIpSecService$Stub$Proxy: android.net.IpSecTransformResponse createTransform(android.net.IpSecConfig,android.os.IBinder,java.lang.String)>
<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()>
<android.util.jar.StrictJarFile$JarFileInputStream: int read()>
<android.content.pm.IPackageManager$Default: int[] getPackageGids(java.lang.String,int,int)>
<android.net.NetworkTemplate: int describeContents()>
<android.os.StatsServiceManager$ServiceRegisterer: android.os.IBinder get()>
<com.android.internal.view.FloatingActionMode: android.view.Menu getMenu()>
<android.net.NetworkPolicy: byte[] getBytesForBackup()>
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()>
<android.security.keystore.IKeystoreService$Default: int lock(int)>
<android.service.notification.ZenPolicy: int getVisualEffectPeek()>
<android.service.vr.IVrManager$Default: int getVr2dDisplayId()>
<com.android.internal.content.om.OverlayConfig: int getPriority(java.lang.String)>
<android.accounts.AuthenticatorDescription: int describeContents()>
<android.hardware.Sensor: float getMaximumRange()>
<android.graphics.Matrix: int hashCode()>
<com.android.internal.inputmethod.IInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IInputMethodPrivilegedOperations asInterface(android.os.IBinder)>
<android.media.tv.ITvInputManager$Default: java.util.List getDvbDeviceList()>
<android.location.LocationManager: int getGnssYearOfHardware()>
<android.service.textclassifier.ITextClassifierCallback$Stub: android.service.textclassifier.ITextClassifierCallback asInterface(android.os.IBinder)>
<android.app.backup.BackupDataInputStream: int read(byte[])>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
<android.view.VerifiedMotionEvent: java.lang.Boolean getFlag(int)>
<android.telephony.TelephonyManager: android.telephony.CarrierRestrictionRules getCarrierRestrictionRules()>
<android.net.wifi.nl80211.IApInterface$Stub: android.net.wifi.nl80211.IApInterface asInterface(android.os.IBinder)>
<com.android.internal.telephony.ITelephony$Default: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.net.http.SslCertificate$DName: java.lang.String getOName()>
<android.app.WallpaperManager: android.app.WallpaperManager$Globals access$100()>
<android.service.notification.StatusBarNotification: int describeContents()>
<android.opengl.GLLogWrapper: int glGetError()>
<android.view.WindowInsets$Type: int systemGestures()>
<android.content.pm.parsing.component.ParsedActivity: int getTheme()>
<android.content.pm.IPackageManager$Default: int getInstallLocation()>
<android.net.wifi.nl80211.NativeWifiClient: int describeContents()>
<android.text.PrecomputedText$Params: int getBreakStrategy()>
<android.os.IncidentManager: android.os.IncidentManager$IncidentReport getIncidentReport(android.net.Uri)>
<android.app.timezone.IRulesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.lowpan.ILowpanInterface$Stub$Proxy: java.lang.String getRole()>
<android.telephony.CellSignalStrengthCdma: int getLevel()>
<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager getWindowlessWM()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()>
<android.view.accessibility.IAccessibilityManager$Default: java.util.List getEnabledAccessibilityServiceList(int,int)>
<android.hardware.display.WifiDisplayStatus: int describeContents()>
<android.os.connectivity.CellularBatteryStats: long getLoggingDurationMillis()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<android.accessibilityservice.AccessibilityShortcutInfo: int hashCode()>
<android.util.SparseIntArray: int get(int)>
<android.telephony.PreciseCallState: int getDisconnectCause()>
<android.content.pm.parsing.component.ParsedProvider: int describeContents()>
<android.net.NetworkAgentConfig: java.lang.String getLegacyTypeName()>
<android.app.WallpaperColors: int hashCode()>
<android.app.PendingIntent: java.lang.String getCreatorPackage()>
<android.app.contentsuggestions.SelectionsRequest: int describeContents()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()>
<android.app.slice.ISliceManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>
<android.media.PlayerBase$PlayerIdCard: int hashCode()>
<android.content.pm.parsing.ParsingPackageImpl: int getCompileSdkVersion()>
<android.graphics.fonts.FontVariationAxis: int hashCode()>
<android.graphics.drawable.Drawable: int getAlpha()>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getYOffsetUncertaintyMm()>
<android.hardware.camera2.utils.SizeAreaComparator: int compare(java.lang.Object,java.lang.Object)>
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceClassName(java.lang.String)>
<android.app.usage.IUsageStatsManager$Default: android.app.usage.UsageEvents queryEventsForUser(long,long,int,java.lang.String)>
<android.util.Range: java.lang.Comparable getUpper()>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.content.res.AssetFileDescriptor: int describeContents()>
<com.android.internal.telephony.euicc.IGetEuiccInfo2Callback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener getListener()>
<android.security.FileIntegrityManager: boolean isAppSourceCertificateTrusted(java.security.cert.X509Certificate)>
<android.os.VibrationEffect$OneShot: long getDuration()>
<android.telephony.ClientRequestStats$1: android.telephony.ClientRequestStats createFromParcel(android.os.Parcel)>
<android.app.Vr2dDisplayProperties: int hashCode()>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()>
<android.app.ContextImpl: java.io.File getDataDir()>
<android.view.View$10: java.lang.Object get(java.lang.Object)>
<com.android.internal.telephony.euicc.IPrepareDownloadCallback$Stub: com.android.internal.telephony.euicc.IPrepareDownloadCallback asInterface(android.os.IBinder)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>
<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: int getDefaultFlags(android.content.Context)>
<com.android.internal.policy.DecorView: android.view.WindowInsetsController getWindowInsetsController()>
<android.app.FragmentHostCallback: android.app.Activity getActivity()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
<android.view.IWindowManager$Default: float[] getAnimationScales()>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>
<android.net.IpSecUdpEncapResponse: int describeContents()>
<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.internal.graphics.palette.VariationalKMeansQuantizer: java.util.List getQuantizedColors()>
<android.os.IPowerManager$Stub$Proxy: boolean isLightDeviceIdleMode()>
<com.android.server.SystemConfig: android.util.ArraySet getProductPrivAppDenyPermissions(java.lang.String)>
<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: java.util.List getInputDevices()>
<android.os.UserManager: boolean isUserRunning(int)>
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()>
<android.app.AsyncNotedAppOp: java.lang.String getAttributionTag()>
<android.app.IAlarmListener$Default: android.os.IBinder asBinder()>
<android.graphics.drawable.GradientDrawable: android.graphics.Insets getOpticalInsets()>
<android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>
<com.android.internal.app.IVoiceInteractorRequest$Default: android.os.IBinder asBinder()>
<com.android.internal.widget.LockPatternUtils: byte[] getPasswordHistoryHashFactor(com.android.internal.widget.LockscreenCredential,int)>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String,android.os.UserHandle)>
<android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener asInterface(android.os.IBinder)>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>
<android.util.proto.ProtoStream: int getDepthFromToken(long)>
<android.net.http.SslCertificate$DName: java.lang.String getCName()>
<android.media.soundtrigger.SoundTriggerManager: int stopRecognition(java.util.UUID)>
<android.filterfw.core.FrameFormat: int hashCode()>
<android.hardware.usb.IUsbSerialReader$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(java.lang.String,int)>
<android.view.Display: int getDisplayId()>
<android.location.GnssAntennaInfo$PhaseCenterOffset: int describeContents()>
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getAccessibilityShortcutTargets(int)>
<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)>
<android.net.TrafficStats: long getMobileTcpTxPackets()>
<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyServiceCategories()>
<android.os.IMessenger$Stub$Proxy: android.os.IBinder asBinder()>
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()>
<com.android.internal.os.BatteryStatsImpl: long getWifiMulticastWakelockTime(long,int)>
<android.graphics.RecordingCanvas: int getHeight()>
<android.telephony.TelephonyManager: java.lang.String[] getForbiddenPlmns(int,int)>
<android.os.storage.StorageVolume: java.lang.String getInternalPath()>
<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo getInfo()>
<android.telecom.Logging.Session: java.util.ArrayList getChildSessions()>
<com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)>
<android.view.SurfaceControl: int describeContents()>
<com.android.internal.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()>
<android.os.storage.CrateMetadata: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getRadioPowerState(int,java.lang.String,java.lang.String)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>
<com.android.internal.telephony.IMms$Default: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>
<com.android.internal.compat.CompatibilityChangeInfo: boolean getDisabled()>
<android.os.IUserManager$Stub$Proxy: android.os.Bundle getDefaultGuestRestrictions()>
<android.telephony.CellSignalStrengthNr: int getSsRsrp()>
<android.os.storage.StorageManager$ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()>
<android.app.admin.SystemUpdatePolicy: android.util.Pair getCurrentFreezePeriod(java.time.LocalDate)>
<android.media.session.ISessionController$Default: android.media.MediaMetadata getMetadata()>
<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoList()>
<android.media.IMediaRouterService$Default: android.os.IBinder asBinder()>
<android.net.DataUsageRequest: int hashCode()>
<android.telephony.CellSignalStrengthGsm$1: android.telephony.CellSignalStrengthGsm createFromParcel(android.os.Parcel)>
<android.hardware.cas.V1_2.ICasListener$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.telephony.euicc.EuiccNotification: int getEvent()>
<android.location.GpsMeasurement: long getReceivedGpsTowInNs()>
<android.media.session.ISession2TokensListener$Default: android.os.IBinder asBinder()>
<android.window.IDisplayAreaOrganizer$Stub: android.window.IDisplayAreaOrganizer getDefaultImpl()>
<android.app.job.JobParameters: int getClipGrantFlags()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>
<android.util.EventLog$Event: int getUid()>
<android.net.INetworkStatsSession$Default: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>
<android.telephony.ims.ImsCallProfile: int getServiceType()>
<com.google.android.mms.pdu.PduPart: int getCharset()>
<android.hardware.location.ContextHubClient: android.hardware.location.ContextHubInfo getAttachedHub()>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCountMax()>
<android.telephony.SubscriptionManager: boolean isActiveSubId(int)>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>
<android.app.Instrumentation$ActivityMonitor: int getHits()>
<android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener getDefaultImpl()>
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()>
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.Context)>
<android.app.UiAutomation: android.util.SparseArray getWindowsOnAllDisplays()>
<android.hardware.SerialPort: int read(java.nio.ByteBuffer)>
<android.util.apk.WrappedX509Certificate: byte[] getExtensionValue(java.lang.String)>
<android.app.IAppTask$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()>
<android.view.VerifiedMotionEvent: int getMetaState()>
<com.android.internal.logging.InstanceId: int getId()>
<android.app.NotificationChannel: java.lang.String getDescription()>
<android.app.Instrumentation$ActivityMonitor: android.content.IntentFilter getFilter()>
<android.app.assist.AssistStructure$ViewNode: java.lang.String[] getAutofillHints()>
<android.app.Activity: boolean isOverlayWithDecorCaptionEnabled()>
<android.view.contentcapture.DataRemovalRequest: java.util.List getLocusIdRequests()>
<com.android.internal.graphics.palette.ColorCutQuantizer$Vbox: int getLongestColorDimension()>
<android.app.UiModeManager: java.time.LocalTime getCustomNightModeStart()>
<android.app.blob.IBlobStoreManager$Stub$Proxy: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)>
<android.content.pm.IPackageManager$Stub$Proxy: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<android.hardware.radio.ITuner$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<com.android.internal.widget.LockscreenCredential: int size()>
<android.app.AppOpsManager$HistoricalOps: long getEndTimeMillis()>
<android.net.NetworkPolicyManager$1: android.util.Pair next()>
<com.google.android.mms.util.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction getTimeoutAction()>
<android.telephony.TelephonyManager: int getLteOnCdmaMode(int)>
<android.telephony.TelephonyManager: void access$200()>
<android.view.ViewRootImpl: android.view.ViewRootImpl$GfxInfo getGfxInfo()>
<android.media.MicrophoneInfo: int getIndexInTheGroup()>
<android.media.MediaRouter: int getCategoryCount()>
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ContentProviderHolder: int describeContents()>
<android.transition.ChangeBounds$3: java.lang.Object get(java.lang.Object)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()>
<android.app.Fragment: boolean isStateSaved()>
<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getFreqTimeReaderInstance()>
<android.filterfw.core.SerializedFrame$DirectByteInputStream: int available()>
<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>
<android.text.method.WordIterator: int getBeginning(int)>
<android.content.pm.PackageManager: android.os.Bundle getSuspendedPackageAppExtras()>
<android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser asInterface(android.os.IBinder)>
<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.content.IntentSender: int getCreatorUid()>
<android.app.IActivityManager$Default: android.content.pm.ParceledListSlice getHistoricalProcessExitReasons(java.lang.String,int,int,int)>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplaySessionInfo getSessionInfo()>
<android.app.trust.TrustManager: boolean isTrustUsuallyManaged(int)>
<android.os.ZygoteProcess$ZygoteState: android.net.LocalSocket getUsapSessionSocket()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityButtonController getAccessibilityButtonController(int)>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.ComponentName getComponentName()>
<android.graphics.drawable.RotateDrawable: float getFromDegrees()>
<android.view.IRecentsAnimationRunner$Default: android.os.IBinder asBinder()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)>
<android.content.RestrictionEntry: java.lang.String getDescription()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getGlobalPrivateDnsMode(android.content.ComponentName)>
<android.os.image.IDynamicSystemService$Stub: android.os.image.IDynamicSystemService getDefaultImpl()>
<com.android.ims.internal.IImsUtListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$200(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>
<android.media.WebVttRenderingWidget$CueLayout: int access$000(android.media.WebVttRenderingWidget$CueLayout)>
<android.widget.TextView: java.lang.String getFontFeatureSettings()>
<android.app.usage.IUsageStatsManager$Stub: android.app.usage.IUsageStatsManager asInterface(android.os.IBinder)>
<android.net.INetworkScoreService$Stub$Proxy: java.util.List getAllValidScorers()>
<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality(int)>
<android.content.pm.parsing.component.ParsedActivity: int describeContents()>
<android.media.AudioRecord: android.media.AudioFormat getFormat()>
<android.hardware.location.NanoApp: int getAppVersion()>
<android.graphics.PorterDuffColorFilter: int getColor()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)>
<android.os.Parcel: int dataSize()>
<android.location.LocationRequest: long getExpireIn()>
<android.graphics.Picture: int getWidth()>
<android.content.IClipboard$Stub: android.content.IClipboard getDefaultImpl()>
<android.app.admin.DevicePolicyManager: int getUserProvisioningState()>
<android.app.usage.StorageStatsManager: long getTotalBytes(java.lang.String)>
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()>
<android.os.UserManager: boolean isUserSwitcherEnabled()>
<android.hardware.camera2.params.MandatoryStreamCombination: int hashCode()>
<android.telephony.data.ApnSetting: java.util.List getApnTypes()>
<android.os.VibrationAttributes: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isVtSettingEnabled(int)>
<com.android.internal.telephony.euicc.IGetSmdsAddressCallback$Stub: com.android.internal.telephony.euicc.IGetSmdsAddressCallback getDefaultImpl()>
<android.content.UndoManager: android.content.UndoOwner restoreOwner(android.os.Parcel)>
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()>
<android.view.KeyboardShortcutInfo: char getBaseCharacter()>
<android.util.MapCollections$KeySet: int hashCode()>
<android.graphics.drawable.VectorDrawable$VFullPath$8: java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath)>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>
<android.view.autofill.AutofillManager: android.service.autofill.FillEventHistory getFillEventHistory()>
<android.app.backup.IBackupCallback$Default: android.os.IBinder asBinder()>
<android.app.timezone.IRulesManager$Stub$Proxy: android.app.timezone.RulesState getRulesState()>
<android.app.IApplicationThread$Stub: android.os.IBinder asBinder()>
<android.app.ApplicationPackageManager: boolean isAutoRevokeWhitelisted(java.lang.String)>
<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.os.IBinder asBinder()>
<android.app.timezone.IRulesManager$Stub: android.app.timezone.IRulesManager asInterface(android.os.IBinder)>
<android.telephony.PhoneNumberUtils: java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)>
<com.android.internal.telephony.SmsHeader$MiscElt: boolean equals(java.lang.Object)>
<android.hardware.HardwareBuffer: int describeContents()>
<android.media.VolumeShaper$Configuration: float[] getVolumes()>
<android.media.ExifInterface: double getAltitude(double)>
<android.transition.ChangeTransform: boolean getReparent()>
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: int describeContents()>
<android.net.wifi.nl80211.IWificond$Stub: android.os.IBinder asBinder()>
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator(int)>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: com.android.internal.textservice.ISpellCheckerSessionListener getDefaultImpl()>
<android.app.job.JobInfo: android.app.job.JobInfo$TriggerContentUri[] getTriggerContentUris()>
<android.media.AudioGain: int stepValue()>
<android.view.View: android.graphics.Matrix getInverseMatrix()>
<android.hardware.cas.V1_2.IMediaCasService$Stub: java.lang.String interfaceDescriptor()>
<android.widget.Editor$SelectionHandleView: int getMagnifierHandleTrigger()>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
<android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>
<android.net.lowpan.LowpanCredential: int describeContents()>
<android.content.res.XmlBlock$Parser: int getSourceResId()>
<android.app.INotificationManager$Stub$Proxy: int getBubblePreferenceForPackage(java.lang.String,int)>
<android.location.ILocationManager$Default: java.lang.String[] getBackgroundThrottlingWhitelist()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: android.view.autofill.AutofillId getAutofillId()>
<android.app.contentsuggestions.ClassificationsRequest: int describeContents()>
<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>
<android.telephony.NetworkScanRequest$1: android.telephony.NetworkScanRequest createFromParcel(android.os.Parcel)>
<android.os.IPowerManager$Stub: android.os.IBinder asBinder()>
<android.app.job.IJobCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.PhoneNumberUtils: java.lang.String convertToEmergencyNumber(android.content.Context,java.lang.String)>
<android.os.image.DynamicSystemManager: boolean isEnabled()>
<com.android.internal.app.IAppOpsActiveCallback$Stub: com.android.internal.app.IAppOpsActiveCallback asInterface(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getScreenCaptureDisabled(android.content.ComponentName,int,boolean)>
<android.os.BaseBundle: int size()>
<com.android.internal.telephony.SmsAddress: boolean isNetworkSpecific()>
<android.os.UserHandle: int getUserId(int)>
<android.media.tv.ITvInputHardwareCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.pm.IDexModuleRegisterCallback$Stub: android.content.pm.IDexModuleRegisterCallback getDefaultImpl()>
<android.app.PropertyInvalidatedCache: java.lang.String cacheName()>
<android.app.Fragment: java.lang.CharSequence getText(int)>
<android.hardware.cas.V1_1.ICasListener$Stub: java.util.ArrayList getHashChain()>
<android.telephony.CellIdentityGsm: java.util.Set getAdditionalPlmns()>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
<android.net.wifi.nl80211.NativeScanResult: java.util.List getRadioChainInfos()>
<android.app.Activity: android.app.ActivityThread getActivityThread()>
<android.service.carrier.CarrierIdentifier: java.lang.String getMcc()>
<android.os.BatterySaverPolicyConfig: boolean getForceAllAppsStandby()>
<android.app.Notification$BubbleMetadata: int getFlags()>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)>
<android.util.AtomicFile: java.io.File getBaseFile()>
<android.telephony.TelephonyManager: boolean isTetheringApnRequired()>
<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>
<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.PendingInsetsController: int getSystemBarsAppearance()>
<com.android.internal.os.RuntimeInit: int access$200(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.os.CpuUsageInfo: long getTotal()>
<android.os.IUserManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()>
<com.android.internal.util.MimeIconUtils: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)>
<android.media.AudioManager: java.lang.Object access$800(android.media.AudioManager)>
<android.media.tv.tunerresourcemanager.CasSessionRequest: int getClientId()>
<com.android.internal.util.StateMachine$LogRec: java.lang.String getInfo()>
<android.graphics.RenderNode: int getRight()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getForceEphemeralUsers(android.content.ComponentName)>
<com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState: int describeContents()>
<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>
<android.view.ViewGroup: int getChildDrawingOrder(int)>
<android.telephony.ims.aidl.IImsCallSessionListener$Stub: android.telephony.ims.aidl.IImsCallSessionListener getDefaultImpl()>
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()>
<android.view.IDisplayWindowRotationController$Stub: android.view.IDisplayWindowRotationController asInterface(android.os.IBinder)>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSubscriptionServiceRegisterer()>
<android.view.accessibility.IWindowMagnificationConnectionCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.face.FaceManager: java.util.List getEnrolledFaces()>
<android.provider.DeviceConfig$Properties: int getInt(java.lang.String,int)>
<android.app.usage.StorageStatsManager: java.util.Collection queryCratesForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)>
<android.telephony.SubscriptionInfo: int getCarrierId()>
<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()>
<android.media.Tokenizer$TagTokenizer: android.media.Tokenizer$TokenizerPhase start()>
<android.widget.RemoteViews: android.graphics.Rect getSourceBounds(android.view.View)>
<android.app.blob.LeaseInfo: java.lang.String getPackageName()>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)>
<android.hardware.radio.IRadioService$Default: java.util.List listModules()>
<android.text.DynamicLayout: int getEllipsisStart(int)>
<com.android.internal.widget.LockPatternUtils: int getCredentialTypeForUser(int)>
<android.telephony.AvailableNetworkInfo: int describeContents()>
<android.location.GnssSingleSatCorrection: int getSatelliteId()>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>
<android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>
<android.os.Environment: java.io.File getDataDirectory()>
<android.hardware.ICameraService$Stub: android.hardware.ICameraService asInterface(android.os.IBinder)>
<android.app.slice.SliceSpec: int getRevision()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Default: android.os.IBinder asBinder()>
<android.net.IpSecConfig: android.net.Network getNetwork()>
<android.view.IWindowSessionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.fingerprint.FingerprintManager: long preEnroll()>
<android.app.IActivityManager$Stub$Proxy: int getPackageProcessState(java.lang.String,java.lang.String)>
<android.widget.Toolbar: com.android.internal.widget.DecorToolbar getWrapper()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmiForSubscriber(int,java.lang.String)>
<android.content.res.AssetManager: java.lang.CharSequence getPooledStringForCookie(int,int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub$Proxy: android.os.IBinder asBinder()>
<android.location.LocationManager$LocationListenerTransport: java.lang.String getListenerId()>
<android.system.suspend.ISuspendCallback$Default: android.os.IBinder asBinder()>
<android.media.tv.tunerresourcemanager.TunerFrontendRequest: int describeContents()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetBottom(int)>
<android.hardware.face.IFaceService$Stub$Proxy: long getAuthenticatorId(int)>
<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()>
<android.view.accessibility.IWindowMagnificationConnection$Default: android.os.IBinder asBinder()>
<android.app.INotificationManager$Default: java.util.List getEnabledNotificationListeners(int)>
<com.google.android.mms.pdu.NotifyRespInd: int getReportAllowed()>
<android.service.vr.IPersistentVrStateCallbacks$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.appwidget.IAppWidgetService$Default: int[] getAppWidgetIdsForHost(java.lang.String,int)>
<android.view.KeyEvent: char getMatch(char[],int)>
<android.widget.TextView: android.os.LocaleList getTextLocales()>
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>
<android.content.pm.parsing.ParsingPackageImpl: java.util.List getReceivers()>
<android.widget.Spinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.hardware.radio.V1_4.CellInfo$Info$hidl_discriminator: java.lang.String getName(byte)>
<com.android.internal.view.menu.CascadingMenuPopup: android.widget.ListView getListView()>
<android.hardware.biometrics.IBiometricServiceReceiver$Stub: android.os.IBinder asBinder()>
<android.location.Country: int getSource()>
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>
<android.os.UserManager: java.util.List getUsers(boolean,boolean,boolean)>
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>
<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>
<android.service.notification.ZenPolicy: int hashCode()>
<android.hardware.radio.ProgramSelector: int hashCode()>
<android.widget.Toast: float getHorizontalMargin()>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.CameraCharacteristics access$1200(android.hardware.camera2.legacy.RequestThreadManager)>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration$MarshalerStreamConfigurationDuration: int getNativeSize()>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>
<com.android.ims.internal.IImsUt$Default: int updateCallBarring(int,int,java.lang.String[])>
<android.media.MediaRoute2Info: android.net.Uri getIconUri()>
<android.content.pm.PackageManager: android.content.pm.dex.ArtManager getArtManager()>
<android.accessibilityservice.GestureDescription$StrokeDescription: boolean getPosForTime(long,float[])>
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>
<com.android.internal.view.menu.MenuAdapter: boolean getForceShowIcon()>
<android.view.View: int computeHorizontalScrollOffset()>
<android.content.IOnPrimaryClipChangedListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>
<android.net.ITestNetworkManager$Default: android.net.TestNetworkInterface createTapInterface()>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.os.PersistableBundle getStallDetails()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getSystemPowerWhitelistExceptIdle()>
<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.view.SurfaceControl: android.hardware.display.DisplayedContentSamplingAttributes getDisplayedContentSamplingAttributes(android.os.IBinder)>
<android.graphics.drawable.LayerDrawable: int getLayerInsetTop(int)>
<android.app.IUiModeManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.camera2.params.OisSample: float getXshift()>
<android.app.IServiceConnection$Stub: java.lang.String getTransactionName(int)>
<android.util.Size: int hashCode()>
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<android.app.Service: java.lang.String getClassName()>
<android.telephony.ims.ImsCallProfile: int getEmergencyCallRouting()>
<android.os.storage.StorageVolume: java.lang.String getState()>
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.IState getOriginalState()>
<android.hardware.ICameraClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String getDescription()>
<android.location.LocationManager: boolean isLocationEnabledForUser(android.os.UserHandle)>
<android.view.textclassifier.TextLinks: int describeContents()>
<android.media.RoutingSessionInfo: int hashCode()>
<android.widget.Editor: int getCurrentLineAdjustedForSlop(android.text.Layout,int,float)>
<android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>
<android.os.BasicShellCommandHandler: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[])>
<android.graphics.Region: int describeContents()>
<android.net.IpConfiguration: int hashCode()>
<android.app.blob.IBlobStoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioAttributes: int describeContents()>
<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder asBinder()>
<android.graphics.RenderNode: float getTranslationX()>
<android.app.ActivityOptions: boolean getAvoidMoveToFront()>
<android.service.gatekeeper.IGateKeeperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>
<com.android.internal.app.IBatteryStats$Default: byte[] getStatistics()>
<android.graphics.SurfaceTexture: long getTimestamp()>
<android.view.textclassifier.TextClassifierEvent: int getEventType()>
<android.telephony.SubscriptionManager: boolean isActiveSubscriptionId(int)>
<android.widget.TextView: int getMaxHeight()>
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()>
<android.hardware.fingerprint.IFingerprintService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IUserManager$Default: android.content.pm.UserInfo findCurrentGuestUser()>
<android.telephony.SubscriptionPlan$1: android.telephony.SubscriptionPlan[] newArray(int)>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.os.IncidentManager$PendingReport: long getTimestamp()>
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getRule()>
<android.hardware.usb.UsbEndpoint: int describeContents()>
<com.android.internal.app.WindowDecorActionBar$TabImpl: android.view.View getCustomView()>
<android.telephony.CellIdentityLte: int getBandwidth()>
<android.os.image.IDynamicSystemService$Stub$Proxy: boolean isEnabled()>
<android.telephony.ClientRequestStats$1: void <init>()>
<android.view.InputDevice$MotionRange: int getAxis()>
<android.content.Intent$FilterComparison: android.content.Intent getIntent()>
<com.android.internal.view.IInputMethod$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.IActivityTaskManager$Default: java.util.List getAllStackInfos()>
<android.content.pm.IDataLoaderManager$Stub$Proxy: android.content.pm.IDataLoader getDataLoader(int)>
<android.text.StaticLayout: int getIndentAdjust(int,android.text.Layout$Alignment)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeUidSnapshot(int)>
<android.app.usage.UsageStats: java.lang.String getPackageName()>
<android.media.session.PlaybackState: long getLastPositionUpdateTime()>
<android.os.incremental.IncrementalManager: byte[] unsafeGetFileSignature(java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: int getEcNo()>
<android.telephony.TelephonyManager: boolean doesSwitchMultiSimConfigTriggerReboot()>
<android.app.FragmentManagerImpl: int getBackStackEntryCount()>
<com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings asInterface(android.os.IBinder)>
<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int)>
<android.media.MediaDrm$KeyStatus: int getStatusCode()>
<android.os.storage.StorageManager: android.os.storage.VolumeInfo findVolumeByQualifiedUuid(java.lang.String)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isLogoutEnabled()>
<android.hardware.location.IContextHubClient$Stub: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthWcdma$1: android.telephony.CellSignalStrengthWcdma[] newArray(int)>
<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId getSessionId()>
<android.media.tv.TvInputManager$Session: android.os.IBinder getToken()>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>
<android.service.oemlock.IOemLockService$Default: java.lang.String getLockName()>
<android.telephony.CellSignalStrengthWcdma: int getBitErrorRate()>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>
<android.app.slice.SliceItem: java.lang.String getSubType()>
<android.accounts.Account: int hashCode()>
<android.transition.Slide$CalculateSlideHorizontal: float getGoneY(android.view.ViewGroup,android.view.View,float)>
<android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>
<android.media.session.ISessionManager$Stub$Proxy: boolean isGlobalPriorityActive()>
<com.android.ims.internal.IImsCallSession$Stub: java.lang.String getTransactionName(int)>
<android.graphics.Paint: android.graphics.BlendMode getBlendMode()>
<android.hardware.display.IDisplayManager$Default: android.hardware.display.Curve getMinimumBrightnessCurve()>
<android.telephony.TelephonyManager: int getCdmaRoamingMode()>
<android.app.job.IJobCallback$Stub: android.app.job.IJobCallback asInterface(android.os.IBinder)>
<android.telephony.ims.aidl.IImsMmTelListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.window.IWindowContainerTransactionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.IAppOpsCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.MediaFormat: int getInteger(java.lang.String,int)>
<com.google.android.mms.util.DrmConvertSession: byte[] convert(byte[],int)>
<android.app.IAppTask$Stub: android.os.IBinder asBinder()>
<android.content.res.XmlBlock$Parser: java.lang.String getNamespacePrefix(int)>
<android.util.ArrayMap: int size()>
<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>
<android.security.net.config.NetworkSecurityConfig: android.security.net.config.PinSet getPins()>
<android.location.GnssClock: int getReferenceConstellationTypeForIsb()>
<android.widget.RemoteViews$RemoteViewsContextWrapper: android.content.res.Resources getResources()>
<android.media.MediaHTTPConnection: java.lang.String getUri()>
<android.hardware.usb.UsbDevice: boolean getHasAudioCapture()>
<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()>
<android.app.ContextImpl: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)>
<android.app.ITransientNotification$Stub: java.lang.String getTransactionName(int)>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.window.IWindowContainerToken$Stub: android.window.IWindowContainerToken asInterface(android.os.IBinder)>
<android.telecom.ParcelableCallAnalytics$EventTiming: long getTime()>
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getStackInfo(int,int)>
<android.os.storage.VolumeInfo: java.lang.String getId()>
<android.os.IInstalld$Stub$Proxy: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<android.media.soundtrigger_middleware.PhraseRecognitionExtra: int describeContents()>
<android.hardware.display.IColorDisplayManager$Stub$Proxy: int getNightDisplayAutoModeRaw()>
<android.text.style.AccessibilityClickableSpan: int getSpanTypeIdInternal()>
<com.android.internal.telephony.euicc.ICancelSessionCallback$Stub: com.android.internal.telephony.euicc.ICancelSessionCallback asInterface(android.os.IBinder)>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Default: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo access$000(java.lang.String,int,int)>
<android.hardware.display.IDisplayManager$Stub$Proxy: int getPreferredWideGamutColorSpaceId()>
<android.hardware.ISensorPrivacyManager$Stub: android.hardware.ISensorPrivacyManager asInterface(android.os.IBinder)>
<android.view.textclassifier.TextClassification$Request: android.os.Bundle getExtras()>
<android.media.AudioManager: long getMaxAdditionalOutputDeviceDelay(android.media.AudioDeviceInfo)>
<android.media.soundtrigger_middleware.ISoundTriggerMiddlewareService$Stub: java.lang.String getTransactionName(int)>
<android.view.ViewRootImpl: int getHeight()>
<android.service.voice.IVoiceInteractionSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.textclassifier.TextLanguage: int describeContents()>
<android.hardware.usb.ParcelableUsbPort: android.hardware.usb.UsbPort getUsbPort(android.hardware.usb.UsbManager)>
<com.android.internal.app.IAppOpsAsyncNotedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.View: int getTop()>
<android.app.WallpaperColors: int describeContents()>
<android.provider.DeviceConfig$Properties: long getLong(java.lang.String,long)>
<android.app.role.IRoleController$Stub: android.app.role.IRoleController asInterface(android.os.IBinder)>
<android.security.KeyStore$KeystoreResultPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.app.IActivityTaskManager$Stub$Proxy: int getLockTaskModeState()>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size getLargestSupportedJpegSizeByArea(android.hardware.Camera$Parameters)>
<android.permission.IPermissionManager$Default: int checkUidPermission(java.lang.String,int)>
<com.android.internal.telephony.ITelephony$Default: int getCdmaRoamingMode(int)>
<android.app.IUidObserver$Stub: android.app.IUidObserver getDefaultImpl()>
<android.location.Location: android.os.Bundle getExtras()>
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>
<android.app.ApplicationPackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>
<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype get(int)>
<android.content.res.Resources: float getDimension(int)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)>
<android.net.ProxyInfo: int getPort()>
<android.os.PatternMatcher: java.lang.String getPath()>
<android.service.persistentdata.PersistentDataBlockManager: int getDataBlockSize()>
<android.net.IConnectivityManager$Stub$Proxy: boolean isActiveNetworkMetered()>
<android.view.View$13: java.lang.Object get(java.lang.Object)>
<android.view.ViewOverlay: boolean isEmpty()>
<com.android.internal.telephony.IMms$Stub$Proxy: android.os.IBinder asBinder()>
<android.hardware.hdmi.IHdmiControlService$Default: int getPhysicalAddress()>
<android.media.session.ISessionController$Stub$Proxy: android.media.session.MediaController$PlaybackInfo getVolumeAttributes()>
<android.view.textservice.SpellCheckerSubtype: int getNameResId()>
<android.app.contentsuggestions.IClassificationsCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.incremental.IIncrementalServiceConnector$Stub: java.lang.String getDefaultTransactionName(int)>
<android.app.Notification: java.lang.String getChannel()>
<android.view.animation.AnimationSet: long getDuration()>
<com.android.internal.telephony.ITelephony$Default: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>
<android.view.IWindowManager$Stub: android.os.IBinder asBinder()>
<android.hardware.camera2.params.StreamConfiguration: int getWidth()>
<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeId()>
<com.android.internal.policy.IKeyguardDismissCallback$Stub: java.lang.String getTransactionName(int)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>
<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()>
<android.os.UserManager: java.util.List getUsers(boolean)>
<android.content.IntentSender: int describeContents()>
<android.view.KeyEvent: long getEventTime()>
<android.telephony.CallForwardingInfo: java.lang.String getNumber()>
<android.media.ExifInterface$1: long getSize()>
<com.android.internal.appwidget.IAppWidgetHost$Stub: com.android.internal.appwidget.IAppWidgetHost getDefaultImpl()>
<android.app.NotificationChannel: int getAllowBubbles()>
<com.android.internal.telephony.ISms$Default: boolean isSmsSimPickActivityNeeded(int)>
<android.os.incremental.IIncrementalService$Stub: android.os.IBinder asBinder()>
<android.location.ICountryListener$Stub: android.location.ICountryListener getDefaultImpl()>
<android.app.AppOpsManager$OpEntry: int getProxyUid()>
<android.widget.ScrollBarDrawable: int getSize(boolean)>
<android.view.ViewRootImpl: int getDisplayId()>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: int getCallState()>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>
<android.text.TextUtils$StringWithRemovedChars: int length()>
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)>
<android.view.contentcapture.IDataShareWriteAdapter$Stub: android.os.IBinder asBinder()>
<android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>
<android.os.Bundle: byte getByte(java.lang.String)>
<android.security.keystore.IKeystoreResponseCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.View: float getCameraDistance()>
<android.text.style.TabStopSpan$Standard: int getTabStop()>
<com.android.ims.internal.IImsUt$Stub: android.os.IBinder asBinder()>
<android.net.ConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getDeviceOwnerUserId()>
<android.app.assist.AssistStructure$ViewNode: int getTextBackgroundColor()>
<android.security.NetworkSecurityPolicy: android.security.net.config.ApplicationConfig getApplicationConfigForPackage(android.content.Context,java.lang.String)>
<android.telephony.CellIdentityLte: android.telephony.CellIdentity sanitizeLocationInfo()>
<android.service.notification.ZenPolicy: int getPriorityCategoryAlarms()>
<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>
<android.content.res.ResourcesImpl: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<android.service.notification.Adjustment: java.lang.String getKey()>
<android.media.tv.tunerresourcemanager.TunerFrontendInfo: int getExclusiveGroupId()>
<android.media.tv.tunerresourcemanager.CasSessionRequest: int getCasSystemId()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowImplicitBroadcasts()>
<android.view.InputQueue: long getNativePtr()>
<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.app.IAppOpsActiveCallback$Stub: java.lang.String getTransactionName(int)>
<android.webkit.IWebViewUpdateService$Default: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()>
<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])>
<android.graphics.GraphicBuffer: int getUsage()>
<com.android.internal.app.IVoiceInteractor$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.policy.IKeyguardDismissCallback$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: boolean isOpportunisticNetworkEnabled()>
<android.view.accessibility.AccessibilityRequestPreparer: int getAccessibilityViewId()>
<android.app.backup.IBackupManager$Default: android.content.Intent getDataManagementIntentForUser(int,java.lang.String)>
<android.os.IUserManager$Stub$Proxy: int getUserSerialNumber(int)>
<android.location.GnssAntennaInfo: android.location.GnssAntennaInfo$SphericalCorrections getPhaseCenterVariationCorrections()>
<android.content.RestrictionEntry: java.lang.String getTitle()>
<android.telephony.CarrierRestrictionRules: java.util.List access$300(android.telephony.CarrierRestrictionRules)>
<android.widget.ToastPresenter: java.lang.String getPackageName()>
<android.net.ITetheredInterfaceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.euicc.IEuiccCardController$Stub: android.os.IBinder asBinder()>
<com.android.internal.util.MemInfoReader: long getKernelUsedSize()>
<android.view.IRotationWatcher$Stub: android.view.IRotationWatcher getDefaultImpl()>
<android.telephony.TelephonyManager: java.lang.String getCdmaMin()>
<android.view.textclassifier.TextSelection$Request: android.os.LocaleList getDefaultLocales()>
<android.app.backup.BackupAgent: android.os.IBinder onBind()>
<android.app.admin.DevicePolicyManager: long getRequiredStrongAuthTimeout(android.content.ComponentName)>
<android.os.IUserRestrictionsListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.IWindowSession$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.ims.internal.IImsEcbm$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.om.IOverlayManager$Stub$Proxy: java.util.Map getAllOverlays(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: int access$502(android.hardware.camera2.impl.CameraDeviceImpl,int)>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>
<android.text.style.ForegroundColorSpan: int getSpanTypeIdInternal()>
<android.net.ITestNetworkManager$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.os.incremental.IIncrementalService$Stub$Proxy: byte[] getMetadataByPath(int,java.lang.String)>
<android.telephony.euicc.EuiccManager: boolean isEnabled()>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
<android.app.AppOpsManager$OpEntry: long getLastForegroundDuration(int)>
<android.graphics.drawable.VectorDrawable$VClipPath: long getNativePtr()>
<android.view.WindowId: int hashCode()>
<android.location.IGnssNavigationMessageListener$Stub: java.lang.String getTransactionName(int)>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getByteBuffer(java.nio.ByteBuffer,int)>
<android.view.ViewConfiguration: long getScreenshotChordKeyTimeout()>
<android.net.wifi.nl80211.NativeScanResult: int getSignalMbm()>
<android.view.DisplayAddress$Physical: int hashCode()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetails(int,java.lang.String,long,long)>
<android.service.notification.SnoozeCriterion: java.lang.CharSequence getExplanation()>
<android.os.Vibrator: int areAllEffectsSupported(int[])>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean switchSlots(int[])>
<android.hardware.camera2.utils.SurfaceUtils: long getSurfaceId(android.view.Surface)>
<android.net.Uri: java.lang.String access$600()>
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.VpnConfig getVpnConfig(int)>
<android.app.Notification$BigTextStyle: java.lang.CharSequence getBigText()>
<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>
<android.media.IMediaRouterService$Stub$Proxy: java.util.List getSystemRoutes()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo(java.lang.String,java.lang.String)>
<android.text.DynamicLayout: int getLineStart(int)>
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.PackageParser$Package: java.util.List getAllCodePathsExcludingResourceOnly()>
<android.app.blob.IBlobStoreSession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.Tokenizer: int access$108(android.media.Tokenizer)>
<android.os.storage.VolumeInfo: java.io.File getPath()>
<android.app.IUiAutomationConnection$Stub$Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.util.ArraySet: int hashCode()>
<android.app.IActivityManager$Default: android.os.IBinder asBinder()>
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()>
<android.net.IConnectivityManager$Default: android.net.LinkProperties getLinkProperties(android.net.Network)>
<android.text.style.TextAppearanceSpan: int getSpanTypeIdInternal()>
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<com.android.internal.app.ISoundTriggerService$Stub$Proxy: int getModelState(android.os.ParcelUuid)>
<android.telephony.CellInfoWcdma: android.telephony.CellSignalStrength getCellSignalStrength()>
<android.hardware.radio.RadioManager$ProgramInfo: int getChannel()>
<android.widget.CompoundButton: java.lang.CharSequence getButtonStateDescription()>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>
<android.animation.AnimationHandler$MyFrameCallbackProvider: long getFrameTime()>
<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)>
<android.graphics.drawable.AnimatedImageDrawable: android.graphics.ColorFilter getColorFilter()>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(android.content.UndoOwner,int)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<android.app.Notification$TvExtender: android.app.PendingIntent getDeleteIntent()>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>
<com.android.internal.telephony.IUpdateAvailableNetworksCallback$Default: android.os.IBinder asBinder()>
<android.view.View: int getNextFocusDownId()>
<com.android.internal.os.KernelSingleUidTimeReader$Injector: byte[] readData(java.lang.String)>
<com.android.ims.internal.IImsUt$Default: int updateCallForward(int,int,java.lang.String,int,int)>
<android.os.INetworkManagementService$Default: android.net.NetworkStats getNetworkStatsTethering(int)>
<android.app.KeyguardManager: android.view.IWindowManager access$100(android.app.KeyguardManager)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>
<com.android.internal.app.AlertController: int access$1000(com.android.internal.app.AlertController)>
<com.google.android.mms.pdu.PduPersister: byte[] getBytes(java.lang.String)>
<android.net.wifi.nl80211.IApInterface$Default: android.os.IBinder asBinder()>
<android.animation.PathKeyframes$3: int getIntValue(float)>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Stub: android.hardware.biometrics.IBiometricServiceReceiverInternal getDefaultImpl()>
<com.android.ims.internal.IImsVideoCallCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.IPackageInstaller$Stub$Proxy: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
<android.telephony.ims.aidl.IImsRegistration$Stub$Proxy: int getRegistrationTechnology()>
<android.os.BatteryStats$Timer: long getTotalDurationMsLocked(long)>
<android.app.RemoteInput: java.lang.CharSequence getLabel()>
<android.app.Notification$Builder: int access$4400(android.app.Notification$Builder)>
<android.app.ApplicationPackageManager: java.lang.String getSetupWizardPackageName()>
<android.view.MotionEvent: float getX()>
<android.media.IMediaRouterClient$Default: android.os.IBinder asBinder()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getMappedNames()>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerOrDeviceOwnerSupervisionComponent(android.os.UserHandle)>
<android.net.NetworkRequest: java.lang.String getRequestorPackageName()>
<android.text.Layout: float getSecondaryHorizontal(int,boolean)>
<android.content.res.Resources$Theme: java.lang.String[] getTheme()>
<android.os.BaseBundle: android.util.ArrayMap getMap()>
<com.android.internal.util.StateMachine: java.lang.String getName()>
<android.graphics.drawable.VectorDrawable$VGroup$8: java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup)>
<android.content.pm.InstantAppResolveInfo$InstantAppDigest: int[] getDigestPrefix()>
<android.hardware.lights.Light: int hashCode()>
<android.view.MotionEvent: float getAxisValue(int,int)>
<android.content.pm.SharedLibraryInfo: java.util.List getAllCodePaths()>
<android.net.lowpan.ILowpanManagerListener$Stub: java.lang.String getDefaultTransactionName(int)>
<com.android.internal.compat.IOverrideValidator$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.SurfaceControl: int getActiveColorMode(android.os.IBinder)>
<android.media.tv.TvTrackInfo: float getVideoPixelAspectRatio()>
<android.location.ILocationManager$Stub$Proxy: int getGnssBatchSize(java.lang.String)>
<android.text.style.AlignmentSpan$Standard: android.text.Layout$Alignment getAlignment()>
<android.provider.DocumentsContract$Path: int hashCode()>
<android.app.AppOpsManager$HistoricalOp: int hashCode()>
<android.hardware.camera2.legacy.GLThreadManager: android.graphics.SurfaceTexture getCurrentSurfaceTexture()>
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultVoiceSubscriptionInfo()>
<android.net.NetworkIdentity: int hashCode()>
<android.view.ViewConfiguration: long getAccessibilityShortcutKeyTimeout()>
<android.telephony.ims.aidl.IImsCapabilityCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.view.Window: android.transition.Transition getReturnTransition()>
<android.app.RemoteInput: int getEditChoicesBeforeSending()>
<android.view.InsetsSourceConsumer: boolean isRequestedVisibleAwaitingControl()>
<android.content.res.AssetManager: int getResourceArray(int,int[])>
<android.content.res.ResourcesImpl: java.lang.CharSequence getQuantityText(int,int)>
<android.hardware.face.IFaceService$Stub: android.hardware.face.IFaceService getDefaultImpl()>
<android.net.ITetheredInterfaceCallback$Stub: android.os.IBinder asBinder()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: android.os.IBinder asBinder()>
<android.app.Activity: android.view.View getCurrentFocus()>
<android.location.GnssClock: long getFullBiasNanos()>
<android.view.InsetsAnimationThreadControlRunner: int getTypes()>
<android.os.INetworkManagementService$Stub$Proxy: boolean isBandwidthControlEnabled()>
<android.location.Address: java.lang.String getFeatureName()>
<android.widget.TextView: java.util.Locale getTextServicesLocale()>
<android.text.Annotation: java.lang.String getValue()>
<android.app.prediction.IPredictionManager$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getStorageEncryptionStatus(java.lang.String,int)>
<android.hardware.ICameraService$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyManager: int getCallState(int)>
<com.android.internal.view.IInlineSuggestionsRequestCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.IntentFilter: java.util.List dataTypes()>
<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForUser(java.util.UUID,android.os.UserHandle)>
<com.android.internal.telephony.ITelephony$Default: int getDataActivityForSubId(int)>
<android.media.AudioTrack: android.media.AudioDeviceInfo getRoutedDevice()>
<android.media.midi.MidiDeviceInfo$PortInfo: java.lang.String getName()>
<android.view.inputmethod.EditorInfo: java.lang.CharSequence getInitialTextBeforeCursor(int,int)>
<android.window.WindowContainerTransaction: java.util.Map getChanges()>
<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getDominantSwatch()>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
<android.app.IStopUserCallback$Stub: android.app.IStopUserCallback asInterface(android.os.IBinder)>
<android.hardware.Sensor: java.lang.String getVendor()>
<android.telephony.CellSignalStrengthLte: int getDbm()>
<android.ddm.DdmHandleAppName$Names: java.lang.String getPkgName()>
<android.hardware.usb.UsbPortStatus: int describeContents()>
<android.telephony.CellIdentityCdma: void updateGlobalCellId()>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>
<android.app.servertransaction.StopActivityItem: int getTargetState()>
<android.text.style.SuggestionSpan: java.lang.String getLocale()>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<android.app.admin.IDevicePolicyManager$Default: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<android.transition.Slide$2: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.view.textclassifier.EntityConfidence: java.util.List getEntities()>
<android.hardware.radio.RadioMetadata: java.lang.String getKeyFromNativeKey(int)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
<android.content.res.CompatibilityInfo: int describeContents()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getImsProvisioningInt(int,int)>
<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>
<android.location.IGnssStatusListener$Stub$Proxy: android.os.IBinder asBinder()>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()>
<android.telephony.PhoneNumberUtils: int getMinMatchForTest()>
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm[] newArray(int)>
<android.app.timedetector.TelephonyTimeSuggestion: int describeContents()>
<android.content.pm.parsing.component.ParsedActivity: int getScreenOrientation()>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>
<android.view.accessibility.AccessibilityManager: java.lang.Object access$100(android.view.accessibility.AccessibilityManager)>
<android.security.keystore.IKeystoreExportKeyCallback$Stub: android.os.IBinder asBinder()>
<android.graphics.drawable.Drawable: int[] getState()>
<android.telephony.CellIdentity: int inRangeOrUnavailable(int,int,int,int)>
<android.os.storage.IStorageManager$Default: android.os.storage.DiskInfo[] getDisks()>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>
<android.os.IRemoteCallback$Stub: android.os.IBinder asBinder()>
<android.companion.CompanionDeviceManager: android.app.Activity access$100(android.companion.CompanionDeviceManager)>
<com.android.internal.telephony.euicc.IGetEuiccChallengeCallback$Stub: com.android.internal.telephony.euicc.IGetEuiccChallengeCallback getDefaultImpl()>
<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>
<android.media.IAudioService$Stub$Proxy: boolean isCallScreeningModeSupported()>
<android.hardware.camera2.marshal.MarshalRegistry$MarshalToken: int hashCode()>
<android.accessibilityservice.AccessibilityService$ScreenshotResult: long getTimestamp()>
<com.android.internal.widget.ILockSettings$Default: java.lang.String getKey(java.lang.String)>
<android.telephony.SignalStrength: int describeContents()>
<android.widget.AdapterViewAnimator: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: int hashCode()>
<android.content.pm.LauncherApps: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,android.os.UserHandle)>
<android.security.keystore.IKeystoreService$Default: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)>
<android.graphics.drawable.VectorDrawable: int getAlpha()>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>
<android.app.usage.StorageStatsManager: long getCacheBytes(java.util.UUID)>
<android.media.MediaPlayer: int playerSetAuxEffectSendLevel(boolean,float)>
<com.android.ims.internal.IImsFeatureStatusCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.INotificationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.ParcelableColorSpace: long getNativeInstance()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number(int)>
<android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.VolumeInfo[] getVolumes(int)>
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>
<android.telephony.NetworkRegistrationInfo: boolean isSearching()>
<android.permission.IPermissionManager$Stub$Proxy: java.lang.String getDefaultBrowser(int)>
<com.android.internal.policy.PhoneWindow: boolean getAllowReturnTransitionOverlap()>
<android.media.AudioMetadata$BaseMap: int size()>
<android.hardware.Sensor: int getType()>
<android.content.pm.IPackageManager$Default: java.lang.String[] getNamesForUids(int[])>
<android.security.net.config.UserCertificateSource$NoPreloadHolder: android.security.net.config.UserCertificateSource access$100()>
<android.os.incremental.IIncrementalService$Default: int makeLink(int,java.lang.String,int,java.lang.String)>
<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>
<android.location.ILocationManager$Default: java.lang.String getGnssHardwareModelName()>
<android.media.IPlaybackConfigDispatcher$Stub$Proxy: android.os.IBinder asBinder()>
<android.accessibilityservice.GestureDescription$StrokeDescription: long getStartTime()>
<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation getOrientation()>
<android.app.backup.IRestoreSession$Default: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()>
<android.app.NotificationChannelGroup: int describeContents()>
<android.graphics.drawable.RotateDrawable: float getPivotY()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService$MagnificationController getMagnificationController()>
<android.text.BoringLayout: int getEllipsizedWidth()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.os.IBinder asBinder()>
<android.security.keymaster.KeyCharacteristics: long getUnsignedInt(int,long)>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>
<com.android.internal.os.BatteryStatsHelper: long getForegroundActivityTotalTimeUs(android.os.BatteryStats$Uid,long)>
<android.view.Window: android.content.Context getContext()>
<android.internal.hidl.base.V1_0.IBase$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>
<android.content.ContextWrapper: android.view.Display getDisplay()>
<android.media.tv.TvStreamConfig: int access$202(android.media.tv.TvStreamConfig,int)>
<android.service.voice.IVoiceInteractionSession$Default: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()>
<android.view.textclassifier.ConversationActions$Request: android.os.Bundle getExtras()>
<android.service.notification.NotificationListenerService$Ranking: java.util.List getAdditionalPeople()>
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getVerticalTrackDrawable()>
<android.renderscript.Long2: long get(int)>
<android.view.contentcapture.ViewNode: int getVisibility()>
<android.content.pm.PackageParser$Package: long getLatestForegroundPackageUseTimeInMills()>
<android.view.KeyEvent: long getEventTimeNano()>
<android.telephony.CellIdentityLte: int hashCode()>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.android.internal.os.HandlerCaller: android.os.Handler getHandler()>
<android.view.inputmethod.InputMethodInfo: int describeContents()>
<android.service.notification.NotificationListenerService$Ranking: java.util.List getSnoozeCriteria()>
<android.hardware.face.FaceManager: android.os.Handler access$000(android.hardware.face.FaceManager)>
<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()>
<android.app.AppOpsManager$HistoricalOp: int getOpCode()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>
<android.media.midi.IMidiManager$Default: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>
<android.os.BaseBundle: short[] getShortArray(java.lang.String)>
<android.view.View$4: java.lang.Object get(java.lang.Object)>
<com.android.internal.net.VpnProfile: int describeContents()>
<android.app.ActivityTransitionCoordinator: android.transition.Transition configureTransition(android.transition.Transition,boolean)>
<android.telephony.CellInfoNr: android.telephony.CellIdentity getCellIdentity()>
<android.hardware.display.DisplayedContentSamplingAttributes: int getDataspace()>
<android.net.wifi.nl80211.NativeScanResult: byte[] getSsid()>
<android.view.inputmethod.ExtractedText: int describeContents()>
<android.widget.Editor$HandleView: int getOffsetAtCoordinate(android.text.Layout,int,float)>
<android.app.PendingIntent: int describeContents()>
<android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getTextureSize(android.graphics.SurfaceTexture)>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.content.pm.PackageInstaller: java.util.List getMySessions()>
<android.app.IUiModeManager$Default: long getCustomNightModeEnd()>
<android.content.pm.InstantAppResolveInfo: int getVersionCode()>
<com.android.internal.telephony.euicc.IAuthenticateServerCallback$Default: android.os.IBinder asBinder()>
<android.os.IDeviceIdleController$Stub$Proxy: java.lang.String[] getUserPowerWhitelist()>
<android.view.Window: android.transition.Transition getSharedElementExitTransition()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub: com.android.internal.inputmethod.ICharSequenceResultCallback asInterface(android.os.IBinder)>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$RankingMap getCurrentRanking()>
<android.service.autofill.UserData: java.lang.String[] getCategoryIds()>
<android.telephony.IccOpenLogicalChannelResponse: int getStatus()>
<android.content.res.ResourcesImpl: android.util.LongSparseArray getPreloadedDrawables()>
<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$DailyItem getDailyItemLocked(int)>
<android.telephony.PreciseDataConnectionState: int getState()>
<com.android.internal.util.ContrastColorUtil: int resolveColor(android.content.Context,int,boolean)>
<android.telephony.ims.aidl.IImsSmsListener$Stub: android.telephony.ims.aidl.IImsSmsListener asInterface(android.os.IBinder)>
<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getXOffsetUncertaintyMm()>
<android.content.Intent: java.lang.String getScheme()>
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<android.hardware.camera2.params.StreamConfigurationMap: int imageFormatToDataspace(int)>
<android.content.pm.IPackageManager$Stub: java.lang.String getTransactionName(int)>
<android.app.ApplicationPackageManager: java.lang.String getInstantAppAndroidId(java.lang.String,android.os.UserHandle)>
<com.android.internal.view.AppearanceRegion: android.graphics.Rect getBounds()>
<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<android.gsi.GsiProgress: int describeContents()>
<android.telephony.ClosedSubscriberGroupInfo: android.telephony.ClosedSubscriberGroupInfo createFromParcelBody(android.os.Parcel)>
<android.net.NetworkCapabilities: java.lang.String describeFirstNonRequestableCapability()>
<android.location.Criteria: int access$402(android.location.Criteria,int)>
<android.os.TimestampedValue: int describeContents()>
<android.content.Intent$ShortcutIconResource: int describeContents()>
<com.android.internal.view.menu.MenuItemImpl: int getItemId()>
<android.app.WallpaperColors: java.util.List getMainColors()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getAppComponentFactory()>
<android.telephony.ServiceState: int getDataRegistrationState()>
<android.transition.Transition: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>
<android.telecom.TelecomManager: boolean isInEmergencyCall()>
<android.net.nsd.NsdManager: java.lang.String access$200()>
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent: int getRelativeWordStartIndex()>
<android.permission.PermissionControllerManager: void getAppPermissions(java.lang.String,android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback,android.os.Handler)>
<android.print.IPrintManager$Default: boolean getBindInstantServiceAllowed(int)>
<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)>
<android.telephony.TelephonyManager: java.lang.String getMeid()>
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>
<android.media.session.ISessionController$Default: int getRatingType()>
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>
<com.android.internal.telephony.ISub$Default: int getDefaultVoiceSubId()>
<android.hardware.camera2.CaptureFailure: int getReason()>
<android.media.MediaDrm: byte[] openSession()>
<android.net.wifi.nl80211.PnoNetwork: int describeContents()>
<android.content.ISyncStatusObserver$Stub: java.lang.String getTransactionName(int)>
<android.graphics.ColorSpace$Rgb: float[] getWhitePoint(float[])>
<com.android.internal.app.MessageSamplingConfig: int getAcceptableLeftDistance()>
<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getIccPhoneBookServiceRegisterer()>
<android.telephony.VisualVoicemailSmsFilterSettings$1: android.telephony.VisualVoicemailSmsFilterSettings createFromParcel(android.os.Parcel)>
<android.graphics.drawable.ColorStateListDrawable: int getOpacity()>
<android.widget.RemoteViews$TextViewSizeAction: int getActionTag()>
<android.net.NetworkIdentity: int getSubType()>
<android.os.image.IDynamicSystemService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.TelephonyManager: boolean isInEmergencySmsMode()>
<android.media.tv.TvContentRating: java.util.List getSubRatings()>
<android.content.pm.PackageManager: android.content.Intent buildRequestPermissionsIntent(java.lang.String[])>
<android.service.notification.INotificationListener$Stub: java.lang.String getDefaultTransactionName(int)>
<android.provider.FontsContract$FontInfo: android.graphics.fonts.FontVariationAxis[] getAxes()>
<android.content.pm.CrossProfileApps: android.graphics.drawable.Drawable getProfileSwitchingIconDrawable(android.os.UserHandle)>
<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>
<android.widget.Magnifier: float getZoom()>
<android.app.INotificationManager$Stub$Proxy: android.content.ComponentName getAllowedNotificationAssistant()>
<android.app.backup.IBackupManager$Default: java.lang.String getCurrentTransportForUser(int)>
<android.os.storage.IObbActionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.content.Context: android.os.Handler getMainThreadHandler()>
<android.view.textservice.TextInfo: java.lang.String getText()>
<android.widget.TextView: int getTextSizeUnit()>
<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>
<android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>
<android.net.lowpan.ILowpanInterface$Stub: java.lang.String getTransactionName(int)>
<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: int getGlobalAudioRestriction()>
<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()>
<android.provider.DocumentsContract$Path: java.util.List getPath()>
<android.hardware.biometrics.CryptoObject: java.security.Signature getSignature()>
<android.app.trust.IStrongAuthTracker$Stub: android.app.trust.IStrongAuthTracker asInterface(android.os.IBinder)>
<android.app.usage.UsageStats: long getTotalTimeInForeground()>
<android.app.ApplicationPackageManager: java.util.List getInstalledApplicationsAsUser(int,int)>
<android.os.IThermalService$Stub$Proxy: int getCurrentThermalStatus()>
<android.net.LinkProperties: java.util.List getAddresses()>
<android.widget.Toolbar: int access$400(android.widget.Toolbar)>
<android.content.pm.SuspendDialogInfo: java.lang.String getDialogMessage()>
<android.util.Base64$Decoder: int maxOutputSize(int)>
<android.media.Rating: int describeContents()>
<android.os.storage.IObbActionListener$Default: android.os.IBinder asBinder()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)>
<android.hardware.usb.IUsbManager$Stub$Proxy: long getCurrentFunctions()>
<android.animation.Keyframe$IntKeyframe: int getIntValue()>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>
<android.net.lowpan.ILowpanInterfaceListener$Stub: android.net.lowpan.ILowpanInterfaceListener asInterface(android.os.IBinder)>
<android.telephony.NetworkRegistrationInfo: int getNrState()>
<android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<android.text.PackedIntVector: int getValue(int,int)>
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()>
<android.telephony.SmsCbCmasInfo$1: void <init>()>
<android.os.storage.StorageManager: long getStorageCacheBytes(java.io.File,int)>
<android.view.WindowId: boolean isFocused()>
<android.view.IRotationWatcher$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.ims.RcsUceAdapter: int getUcePublishState()>
<android.app.RemoteAction: java.lang.CharSequence getContentDescription()>
<android.view.autofill.IAutoFillManagerClient$Stub: java.lang.String getTransactionName(int)>
<android.os.Environment: java.io.File getDataProfilesDePackageDirectory(int,java.lang.String)>
<android.media.IMediaHTTPConnection$Default: long getSize()>
<android.hardware.camera2.CameraManager$CameraManagerGlobal: android.hardware.camera2.CameraManager$CameraManagerGlobal get()>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<com.google.android.mms.ContentType: java.util.ArrayList getSupportedTypes()>
<android.app.ListFragment: long getSelectedItemId()>
<android.hardware.display.BrightnessConfiguration: int hashCode()>
<android.telephony.ims.feature.ImsFeature: int getFeatureState()>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
<android.os.BatteryStats$Timer: android.os.BatteryStats$Timer getSubTimer()>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
<com.android.internal.app.IAppOpsCallback$Stub: com.android.internal.app.IAppOpsCallback asInterface(android.os.IBinder)>
<android.telephony._$$Lambda$SubscriptionManager$vq2TobVWeB6FgTmZtD6jJ3grtk0: int callMethod(com.android.internal.telephony.ISub)>
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)>
<android.app.job.JobParameters: android.content.ClipData getClipData()>
<android.window.IDisplayAreaOrganizer$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View: int getNextClusterForwardId()>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.graphics.ColorFilter: long getNativeInstance()>
<android.webkit.WebView: java.lang.String getUrl()>
<android.content.Intent: java.util.Set getCategories()>
<android.app.Activity: android.view.autofill.AutofillId autofillClientGetNextAutofillId()>
<android.provider.ContactsContract$CommonDataKinds$Event: int getTypeResource(java.lang.Integer)>
<android.telephony.CbGeoUtils$Polygon: boolean equals(java.lang.Object)>
<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.graphics.drawable.VectorDrawable$VectorDrawableState: int getChangingConfigurations()>
<android.permission.PermissionControllerManager: java.util.concurrent.CompletableFuture lambda$updateUserSensitiveForApp$24(int,android.permission.IPermissionController)>
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.content.pm.LauncherApps: java.util.List getShortcuts(android.content.pm.LauncherApps$ShortcutQuery,android.os.UserHandle)>
<android.companion.AssociationRequest: java.util.List getDeviceFilters()>
<android.os.IMessenger$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.IMediaRouterService$Stub$Proxy: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<android.view.Choreographer: long getFrameTimeNanos()>
<android.app.admin.StartInstallingUpdateCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.pm.ParceledListSlice: java.util.List getList()>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int checkProvisioningPreCondition(java.lang.String,java.lang.String)>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<android.content.IContentService$Stub: android.content.IContentService asInterface(android.os.IBinder)>
<android.os.UserManager: java.lang.String getSeedAccountType()>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveAdjustedTime(int)>
<android.hardware.biometrics.IAuthService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.location.ILocationManager$Stub: android.location.ILocationManager asInterface(android.os.IBinder)>
<android.telephony.ims.aidl.IImsRcsFeature$Stub: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getContentCaptureServicePackageName()>
<android.app.AppOpsManager$HistoricalUidOps: int getUid()>
<android.view.textclassifier.TextClassifierEvent$TextSelectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder self()>
<android.app.AppOpsManager$AttributedOpEntry: long getLastForegroundDuration(int)>
<com.android.internal.telecom.ITelecomService$Stub$Proxy: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>
<android.security.IKeyChainService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.hardware.hdmi.HdmiUtils: int getHdmiAddressRelativePosition(int,int)>
<android.graphics.drawable.GradientDrawable: float getInnerRadiusRatio()>
<android.media.AudioTrack: int getPlaybackRate()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getMobileProvisioningUrl()>
<com.android.internal.app.LocalePicker$LocaleInfo: int compareTo(com.android.internal.app.LocalePicker$LocaleInfo)>
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.view.WindowInsets: int getStableInsetTop()>
<android.widget.TextView: android.widget.Editor getEditorForTesting()>
<android.content.pm.IShortcutService$Stub$Proxy: byte[] getBackupPayload(int)>
<android.hardware.face.IFaceServiceReceiver$Stub: android.hardware.face.IFaceServiceReceiver asInterface(android.os.IBinder)>
<android.renderscript.Element: int getVectorSize()>
<android.telecom.Logging.SessionManager: android.telecom.Logging.Session$Info getExternalSession()>
<android.net.lowpan.ILowpanInterface$Default: java.lang.String[] getSupportedNetworkTypes()>
<android.telephony.TelephonyManager: java.lang.String getVisualVoicemailPackageName()>
<android.media.session.MediaController$PlaybackInfo: int describeContents()>
<android.app.slice.Slice: android.net.Uri getUri()>
<android.app.ContextImpl: java.io.File getFilesDir()>
<android.service.notification.NotificationListenerService$Ranking: java.lang.String getKey()>
<com.android.internal.telecom.ITelecomService$Default: java.util.List getCallCapablePhoneAccounts(boolean,java.lang.String,java.lang.String)>
<android.view.DisplayAdjustments: int getRotation(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: long[] getScreenOffCpuFreqTimes(int)>
<android.telephony.ims.ImsCallForwardInfo: int describeContents()>
<com.google.android.mms.pdu.GenericPdu: int getMessageType()>
<android.telephony.ims.aidl.IImsRegistration$Stub: java.lang.String getTransactionName(int)>
<android.permission.IPermissionManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.os.Binder: java.lang.String getTransactionName(int)>
<android.app.IUriGrantsManager$Default: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>
<android.print.PrintDocumentInfo: int describeContents()>
<com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager getDefaultImpl()>
<com.android.internal.telephony.euicc.IRetrieveNotificationCallback$Stub: android.os.IBinder asBinder()>
<android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController getDefaultImpl()>
<com.android.internal.telephony.ITelephony$Default: int getCardIdForDefaultEuicc(int,java.lang.String)>
<android.content.pm.IPackageInstallerSessionFileSystemConnector$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.IStrategyPreferredDeviceDispatcher$Default: android.os.IBinder asBinder()>
<android.text.style.BackgroundColorSpan: int getSpanTypeIdInternal()>
<android.media.tv.ITvInputClient$Stub: java.lang.String getDefaultTransactionName(int)>
<android.telephony.SubscriptionInfo: java.lang.String getIccId()>
<android.location.GnssMeasurement: double getBasebandCn0DbHz()>
<android.net.NetworkSpecifier: android.net.NetworkSpecifier redact()>
<android.telephony.ModemActivityInfo$1: android.telephony.ModemActivityInfo createFromParcel(android.os.Parcel)>
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer getSensorTimerLocked(int,boolean)>
<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int hashCode()>
<android.view.ViewRootImpl: int getWindowFlags()>
<android.os.IncidentManager: java.util.List getIncidentReportList(java.lang.String)>
<android.hardware.radio.IRadioService$Default: android.os.IBinder asBinder()>
<android.content.pm.IPackageManager$Default: android.content.ComponentName getInstantAppResolverSettingsComponent()>
<com.android.internal.telephony.euicc.IGetProfileCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.job.IJobScheduler$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.Editor$HandleView: int getCursorOffset()>
<android.hardware.Sensor: java.lang.String getRequiredPermission()>
<com.android.internal.view.menu.MenuItemImpl: int getOrdering()>
<android.telephony.TelephonyManager: int getPhoneType(int)>
<android.media.MediaFormat: java.util.Set getFeatures()>
<android.media.IMediaRouterService$Default: java.util.List getSystemRoutes()>
<android.app.admin.IDevicePolicyManager$Default: int getOrganizationColorForUser(int)>
<android.hardware.fingerprint.IFingerprintClientActiveCallback$Default: android.os.IBinder asBinder()>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>
<android.os.IClientCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.database.CursorWrapper: int getInt(int)>
<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>
<android.app.backup.ISelectBackupTransportCallback$Stub: java.lang.String getTransactionName(int)>
<android.content.pm.PackageManager: java.lang.String getDefaultTextClassifierPackageName()>
<android.telecom.TelecomAnalytics: java.util.List getSessionTimings()>
<com.android.internal.widget.LockPatternUtils: int getStrongAuthForUser(int)>
<android.widget.Editor: int access$4500(android.widget.Editor,android.graphics.drawable.Drawable,float)>
<com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>
<android.window.ITaskOrganizerController$Stub$Proxy: android.app.ActivityManager$RunningTaskInfo createRootTask(int,int)>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()>
<android.print.IPrintDocumentAdapterObserver$Stub: java.lang.String getTransactionName(int)>
<android.view.contentcapture.ChildContentCaptureSession: android.view.contentcapture.MainContentCaptureSession getMainCaptureSession()>
<android.media.tv.TvTrackInfo: int getType()>
<android.content.res.AssetManager: int[] getAttributeResolutionStack(long,int,int,int)>
<android.widget.ScrollBarDrawable: android.graphics.drawable.Drawable getHorizontalTrackDrawable()>
<android.view.contentcapture.ViewNode: int getScrollY()>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>
<android.window.ITaskOrganizerController$Default: android.os.IBinder asBinder()>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEventsForSelf(long,long)>
<android.hardware.camera2.CameraAccessException: int getReason()>
<android.os.MemoryFile$MemoryInputStream: int available()>
<android.telephony.ims.aidl.IImsSmsListener$Default: android.os.IBinder asBinder()>
<android.media.IAudioService$Default: android.os.IBinder asBinder()>
<android.graphics.BitmapFactory$Options: long nativeColorSpace(android.graphics.BitmapFactory$Options)>
<android.os.UserManager$UserOperationException: int getUserOperationResult()>
<android.media.AudioManager: boolean isValidRingerMode(int)>
<com.android.internal.appwidget.IAppWidgetService$Default: android.content.pm.ParceledListSlice getInstalledProvidersForProfile(int,int,java.lang.String)>
<android.telephony.TelephonyDisplayInfo$1: android.telephony.TelephonyDisplayInfo[] newArray(int)>
<android.media.session.ISessionController$Stub$Proxy: android.app.PendingIntent getLaunchPendingIntent()>
<android.app.AsyncNotedAppOp: int describeContents()>
<android.media.session.ISessionCallback$Stub: android.media.session.ISessionCallback getDefaultImpl()>
<android.accessibilityservice.IAccessibilityServiceConnection$Default: float getMagnificationCenterX(int)>
<android.app.ApplicationPackageManager: java.util.List getIntentFilterVerifications(java.lang.String)>
<com.android.internal.policy.IKeyguardDismissCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.hardware.radio.V1_0.CellIdentityGsm: int hashCode()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()>
<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] getPlanes()>
<com.android.internal.ml.clustering.KMeans$Mean: java.util.List getItems()>
<android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder)>
<android.view.textclassifier.TextClassification: float getConfidenceScore(java.lang.String)>
<android.animation.ValueAnimator: int getRepeatCount()>
<android.provider.FontRequest: java.lang.String getProviderPackage()>
<android.content.pm.parsing.ParsingPackageImpl: int getBanner()>
<android.content.pm.IPackageManager$Default: java.lang.String getInstantAppAndroidId(java.lang.String,int)>
<android.app.INotificationManager$Stub$Proxy: boolean getPrivateNotificationsAllowed()>
<com.android.internal.app.IVoiceInteractorCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.ims.RegistrationManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()>
<android.telecom.ParcelableCallAnalytics$AnalyticsEvent: long getTimeSinceLastEvent()>
<android.app.ApplicationPackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<com.android.internal.telephony.gsm.SmsMessage: int getNumOfVoicemails()>
<com.android.ims.internal.IImsCallSession$Default: int getState()>
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()>
<android.view.SurfaceControlViewHost$SurfacePackage: int describeContents()>
<com.android.internal.compat.IPlatformCompat$Stub$Proxy: int disableTargetSdkChanges(java.lang.String,int)>
<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int hashCode()>
<android.service.notification.IStatusBarNotificationHolder$Default: android.os.IBinder asBinder()>
<android.widget.TextView: android.graphics.BlendMode getCompoundDrawableTintBlendMode()>
<android.hardware.hdmi.IHdmiRecordListener$Default: android.os.IBinder asBinder()>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()>
<android.view.IDisplayWindowInsetsController$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyManager: int getSimState(int)>
<android.media.tv.ITvInputHardwareCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>
<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
<android.content.pm.ILauncherApps$Default: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)>
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getManagedProfileMaximumTimeOff(android.content.ComponentName)>
<android.telephony.SubscriptionManager: int getIntegerSubscriptionProperty(int,java.lang.String,int,android.content.Context)>
<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>
<android.media.AudioDeviceAttributes: java.lang.String getAddress()>
<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getId()>
<android.hardware.biometrics.IBiometricServiceReceiverInternal$Default: android.os.IBinder asBinder()>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>
<com.android.internal.os.BatteryStatsImpl$Uid: long getTimeAtCpuSpeed(int,int,int)>
<android.content.integrity.IAppIntegrityManager$Stub$Proxy: java.lang.String getCurrentRuleSetProvider()>
<android.app.IActivityManager$Stub$Proxy: java.util.List getProcessesInErrorState()>
<android.net.IConnectivityManager$Stub$Proxy: int checkMobileProvisioning(int)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.location.GnssAntennaInfo$PhaseCenterOffset: double getZOffsetMm()>
<android.view.textclassifier.SelectionEvent: java.lang.String getResultId()>
<android.location.GpsSatellite: float getAzimuth()>
<android.os.storage.IStorageShutdownObserver$Stub: android.os.IBinder asBinder()>
<android.content.IOnPrimaryClipChangedListener$Default: android.os.IBinder asBinder()>
<android.widget.RemoteViews$RuntimeAction: int getActionTag()>
<android.telecom.TelecomManager: boolean isRinging()>
<android.telephony.CellInfoNr$1: android.telephony.CellInfoNr[] newArray(int)>
<android.telephony.SignalStrength: int getTdScdmaLevel()>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.AudioFormat: int hashCode()>
<android.location.IGnssAntennaInfoListener$Stub: android.location.IGnssAntennaInfoListener asInterface(android.os.IBinder)>
<android.media.midi.MidiPortImpl: int getDataOffset(byte[],int)>
<android.app.ActivityManager: android.app.IActivityTaskManager access$000()>
<android.os.IDeviceIdleController$Default: int[] getAppIdUserWhitelist()>
<android.webkit.IWebViewUpdateService$Stub: android.webkit.IWebViewUpdateService asInterface(android.os.IBinder)>
<android.telephony.CellInfoCdma: android.telephony.CellInfo sanitizeLocationInfo()>
<android.view.Display: int getLayerStack()>
<android.content.integrity.IAppIntegrityManager$Default: java.lang.String getCurrentRuleSetProvider()>
<android.media.AudioManager: boolean isStreamAffectedByRingerMode(int)>
<android.view.textclassifier.ConversationActions$Message: java.lang.CharSequence getText()>
<android.hardware.camera2.params.StreamConfigurationDuration: int getHeight()>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>
<android.view.autofill.IAutofillWindowPresenter$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.IccOpenLogicalChannelResponse: byte[] getSelectResponse()>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<android.app.IActivityManager$Stub: android.app.IActivityManager asInterface(android.os.IBinder)>
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getGlobalSearchActivity()>
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>
<android.media.MicrophoneInfo: android.media.MicrophoneInfo$Coordinate3F getPosition()>
<android.companion.ICompanionDeviceManager$Stub$Proxy: java.util.List getAssociations(java.lang.String,int)>
<android.graphics.drawable.VectorDrawable$VFullPath: float getStrokeAlpha()>
<android.security.net.config.ManifestConfigSource: java.util.Set getPerDomainConfigs()>
<android.security.keystore.IKeystoreService$Default: int listUidsOfAuthBoundKeys(java.util.List)>
<android.widget.Toolbar: int getCurrentContentInsetStart()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
<android.renderscript.Int4: int get(int)>
<android.drm.DrmInfo: byte[] getData()>
<android.telephony.TelephonyManager: void notifyOtaEmergencyNumberDbInstalled()>
<android.app.AutomaticZenRule: int describeContents()>
<android.telephony.VisualVoicemailSmsFilterSettings$Builder: android.telephony.VisualVoicemailSmsFilterSettings$Builder setDestinationPort(int)>
<android.telephony.TelephonyManager: int getVoiceNetworkType()>
<android.app.ResourcesManager: android.content.res.Resources createBaseTokenResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)>
<android.security.keystore.KeystoreResponse: java.lang.String getErrorMessage()>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>
<android.media.MediaCodecInfo$VideoCapabilities: int getHeightAlignment()>
<android.media.session.ISession$Stub: java.lang.String getDefaultTransactionName(int)>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance()>
<android.net.NetworkScorerAppData: java.lang.String getNetworkAvailableNotificationChannelId()>
<android.hardware.cas.V1_2.ICasListener$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>
<android.print.PageRange: int getEnd()>
<android.app.contentsuggestions.SelectionsRequest: android.graphics.Point getInterestPoint()>
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int calculateMarshalSize(android.os.Parcelable)>
<android.app.Notification$MessagingStyle$Message: long getTimestamp()>
<android.app.INotificationManager$Default: int getRuleInstanceCount(android.content.ComponentName)>
<android.app.ContextImpl: java.lang.String getAttributionTag()>
<android.widget.ImageView: int getBaseline()>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTime(long,int)>
<android.os.IncidentReportArgs: int describeContents()>
<android.view.View: int getPaddingRight()>
<android.app.usage.NetworkStats$Bucket: int access$000(int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>
<com.android.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>
<android.security.keystore.IKeystoreService$Default: android.os.IBinder asBinder()>
<android.widget.HeaderViewListAdapter: int getFootersCount()>
<android.hardware.radio.IRadioService$Stub: android.hardware.radio.IRadioService getDefaultImpl()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>
<android.hardware.ISerialManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.app.IActivityTaskManager$Default: int getLockTaskModeState()>
<android.app.ActivityOptions: int getExitCoordinatorKey()>
<android.media.tv.ITvInputManager$Stub$Proxy: int getClientPid(java.lang.String)>
<android.app.Vr2dDisplayProperties: int getRemovedFlags()>
<android.telephony.SmsCbMessage: boolean isCmasMessage()>
<android.os.storage.VolumeInfo: int hashCode()>
<android.service.autofill.FillEventHistory: android.os.Bundle getClientState()>
<android.graphics.Typeface$CustomFallbackBuilder: int getMaxCustomFallbackCount()>
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>
<android.app.assist.AssistContent: int describeContents()>
<android.hardware.cas.V1_1.ICas$Proxy: java.util.ArrayList getHashChain()>
<android.media.MicrophoneInfo: int getType()>
<com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback getDefaultImpl()>
<android.media.MediaCodecInfo$VideoCapabilities: android.util.Size getBlockSize()>
<android.hardware.camera2.CaptureFailure: android.hardware.camera2.CaptureRequest getRequest()>
<android.media.session.ISessionManager$Stub: android.media.session.ISessionManager asInterface(android.os.IBinder)>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()>
<android.os.Environment: java.io.File getDataVendorCeDirectory(int)>
<android.hardware.display.BrightnessConfiguration: java.lang.String getDescription()>
<android.security.keystore.recovery.KeyChainProtectionParams: android.security.keystore.recovery.KeyDerivationParams getKeyDerivationParams()>
<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>
<android.database.IContentObserver$Stub$Proxy: android.os.IBinder asBinder()>
<android.os.Environment: java.io.File getDataStagingDirectory(java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean hasIccCard()>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>
<android.app.blob.BlobHandle: int describeContents()>
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>
<android.telephony.ims.aidl.IImsRegistrationCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.os.ParcelFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)>
<android.app.IActivityManager$Default: android.graphics.Rect getTaskBounds(int)>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>
<android.content.res.GradientColor$GradientColorFactory: android.content.res.GradientColor newInstance()>
<android.view.MotionEvent: float getXPrecision()>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.media.RoutingSessionInfo: java.lang.String getProviderId()>
<android.accounts.IAccountManagerResponse$Stub$Proxy: android.os.IBinder asBinder()>
<android.content.ContentValues: int hashCode()>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.security.keystore.recovery.KeyChainSnapshot: byte[] access$800(android.security.keystore.recovery.KeyChainSnapshot)>
<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()>
<android.os.BaseBundle: char getChar(java.lang.String,char)>
<android.content.IIntentSender$Default: android.os.IBinder asBinder()>
<android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>
<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>
<com.android.internal.view.menu.ListMenuPresenter: int getItemIndexOffset()>
<android.service.voice.IVoiceInteractionSession$Stub: java.lang.String getTransactionName(int)>
<android.widget.PopupWindow: android.view.WindowManager$LayoutParams getDecorViewLayoutParams()>
<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()>
<android.app.INotificationManager$Default: android.content.pm.ParceledListSlice getConversationsForPackage(java.lang.String,int)>
<com.android.internal.telephony.euicc.IGetEuiccInfo1Callback$Stub: com.android.internal.telephony.euicc.IGetEuiccInfo1Callback getDefaultImpl()>
<android.os.BasicShellCommandHandler: java.io.OutputStream getRawOutputStream()>
<android.media.soundtrigger_middleware.ISoundTriggerCallback$Default: android.os.IBinder asBinder()>
<android.widget.SpellChecker: int access$600(android.widget.SpellChecker)>
<android.content.pm.IPackageManager$Stub$Proxy: android.content.ComponentName getInstantAppInstallerComponent()>
<com.android.internal.app.IAppOpsService$Default: int checkAudioOperation(int,int,int,java.lang.String)>
<android.hardware.radio.ITuner$Stub: android.os.IBinder asBinder()>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>
<android.media.IMediaRouterService$Default: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>
<android.content.res.XmlBlock$Parser: int next()>
<android.service.notification.SnoozeCriterion: int describeContents()>
<com.android.internal.inputmethod.ICharSequenceResultCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>
<android.telephony.CellInfo: long getTimestampMillis()>
<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()>
<android.hardware.camera2.impl.ICameraDeviceUserWrapper: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.location.GnssMeasurementCorrections: double getLongitudeDegrees()>
<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthLte: int hashCode()>
<android.hardware.cas.V1_0.ICas$Stub: java.util.ArrayList interfaceChain()>
<android.media.session.IOnMediaKeyEventDispatchedListener$Stub$Proxy: android.os.IBinder asBinder()>
<android.net.lowpan.ILowpanNetScanCallback$Stub: android.net.lowpan.ILowpanNetScanCallback getDefaultImpl()>
<android.app.Notification$MessagingStyle: android.graphics.drawable.Icon getShortcutIcon()>
<android.text.style.QuoteSpan: int getStripeWidth()>
<android.graphics.drawable.VectorDrawable$VFullPath$4: java.lang.Object get(java.lang.Object)>
<android.content.pm.parsing.component.ParsedPermissionGroup: int getRequestDetailResourceId()>
<android.view.contentcapture.ViewNode$ViewStructureImpl: int getTextSelectionEnd()>
<android.content.pm.PackageParser$SplitNameComparator: int compare(java.lang.String,java.lang.String)>
<android.telephony.RadioAccessSpecifier: int[] getChannels()>
<com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State[] values()>
<android.os.IInstalld$Default: android.os.storage.CrateMetadata[] getUserCrates(java.lang.String,int)>
<android.text.StaticLayout: int getEllipsisStart(int)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Uid$Pid getPidStatsLocked(int)>
<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder asBinder()>
<android.renderscript.RenderScript: long getMinorVersion()>
<android.telephony.TelephonyManager: void refreshUiccProfile()>
<android.database.AbstractCursor: int getType(int)>
<android.app.usage.ExternalStorageStats: long getAudioBytes()>
<android.location.GnssStatus: float getCn0DbHz(int)>
<android.hardware.face.FaceManager: boolean hasEnrolledTemplates()>
<com.google.android.mms.pdu.NotifyRespInd: int getStatus()>
<android.net.ConnectivityDiagnosticsManager$DataStallReport: android.net.LinkProperties getLinkProperties()>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>
<android.graphics.fonts.Font: java.nio.ByteBuffer getBuffer()>
<android.telecom.TelecomManager: boolean isIncomingCallPermitted(android.telecom.PhoneAccountHandle)>
<android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>
<android.app.FragmentHostCallback: int onGetWindowAnimations()>
<android.net.LocalSocket: int getSendBufferSize()>
<android.os.storage.VolumeInfo: int getMountUserId()>
<android.widget.Toolbar: int getTitleMarginTop()>
<android.app.RemoteAction: android.app.PendingIntent getActionIntent()>
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>
<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder asBinder()>
<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>
<android.net.LinkProperties: android.net.IpPrefix getNat64Prefix()>
<android.database.sqlite.SQLiteCursor: int getCount()>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<android.telephony.NeighboringCellInfo: int getCid()>
<android.net.lowpan.LowpanManager: android.net.lowpan.LowpanInterface getInterface()>
<android.net.lowpan.LowpanBeaconInfo: java.util.Collection getFlags()>
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap getWakeupAlarmStats()>
<android.app.ContextImpl: android.app.IApplicationThread getIApplicationThread()>
<android.telephony.TelephonyManager: java.lang.String getTypeAllocationCode()>
<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getVolumeUuid()>
<android.media.AudioFormat: int getBytesPerSample(int)>
<com.android.internal.widget.AutoScrollHelper: int access$800(int,int,int)>
<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
<android.media.IMediaHTTPConnection$Stub: android.os.IBinder asBinder()>
<android.view.View: int getExplicitStyle()>
<android.view.IPinnedStackController$Stub$Proxy: int getDisplayRotation()>
<com.android.ims.internal.IImsCallSession$Stub$Proxy: java.lang.String getProperty(java.lang.String)>
<android.net.wifi.nl80211.PnoNetwork: byte[] access$100(android.net.wifi.nl80211.PnoNetwork)>
<android.widget._$$Lambda$E_XesXLNXm7BCuVAnjZcIGfnQJQ: java.lang.Object get()>
<android.media.MediaDrm: byte[] signRSA(byte[],java.lang.String,byte[],byte[])>
<com.android.server.SystemConfig: java.util.Map getOemPermissions(java.lang.String)>
<android.os.UserManager: boolean isQuietModeEnabled(android.os.UserHandle)>
<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener getUpdateListener()>
<com.android.ims.internal.IImsUt$Default: int queryCLIR()>
<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>
<android.app.assist.AssistStructure$ViewNodeBuilder: android.graphics.Rect getTempRect()>
<android.media.IMediaHTTPService$Stub: android.media.IMediaHTTPService getDefaultImpl()>
<android.net.IpSecManager$UdpEncapsulationSocket: int getPort()>
<com.android.internal.policy.PhoneWindow: android.view.View getDecorView()>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>
<com.android.internal.util.BitwiseInputStream: int read(int)>
<android.app.admin.IDevicePolicyManager$Default: int getCurrentFailedPasswordAttempts(int,boolean)>
<android.app.Notification$CarExtender: android.app.Notification$CarExtender$UnreadConversation getUnreadConversation()>
<android.telephony.DataSpecificRegistrationInfo: int hashCode()>
<android.view.contentcapture.ViewNode: float getTextSize()>
<com.android.internal.inputmethod.IIntResultCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.telephony.CellIdentityWcdma$1: android.telephony.CellIdentityWcdma[] newArray(int)>
<com.android.internal.telephony.ITelephony$Default: int getDataState()>
<android.view.IRecentsAnimationController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.app.ContextImpl: java.lang.String getPackageName()>
<com.android.internal.telephony.IIntegerConsumer$Stub$Proxy: android.os.IBinder asBinder()>
<android.media.midi.MidiDeviceInfo: int describeContents()>
<android.widget.TextView: int getFadeTop(boolean)>
<android.net.wifi.nl80211.IClientInterface$Stub: android.net.wifi.nl80211.IClientInterface asInterface(android.os.IBinder)>
<android.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()>
<android.security.keymaster.KeyCharacteristics: boolean getBoolean(int)>
<android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes getAudioAttributes()>
<com.android.internal.telephony._$$Lambda$RILConstants$ODSbRKyUeaOFMcez_ZudOmaKCBw: java.lang.Object apply(java.lang.Object)>
<android.app.timedetector.ITimeDetectorService$Stub: java.lang.String getDefaultTransactionName(int)>
<android.service.notification.StatusBarNotification: int getInitialPid()>
<android.os.IDumpstate$Stub: java.lang.String getTransactionName(int)>
<android.hardware.radio.RadioManager$BandConfig: int getType()>
<android.hardware.location.IContextHubService$Default: int loadNanoApp(int,android.hardware.location.NanoApp)>
<android.service.autofill.FillEventHistory$Event: android.os.Bundle getClientState()>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<com.android.internal.inputmethod.IExtractedTextResultCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.widget.TextView: int getMaxLines()>
<android.service.gatekeeper.GateKeeperResponse: byte[] getPayload()>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>
<android.graphics.drawable.VectorDrawable$VGroup$6: java.lang.Object get(java.lang.Object)>
<android.media.AudioRecord: int read(float[],int,int,int)>
<android.media.AudioTrack: int getUnderrunCount()>
<com.android.internal.graphics.palette.Palette: int getDarkVibrantColor(int)>
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>
<android.app.ActivityThread: java.lang.String getProfileFilePath()>
<android.net.wifi.nl80211.WifiNl80211Manager: boolean tearDownInterfaces()>
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)>
<android.os.storage.StorageManager$ObbListenerDelegate: int access$100(android.os.storage.StorageManager$ObbListenerDelegate)>
<android.app.IActivityTaskManager$Stub$Proxy: java.util.List getAllStackInfos()>
<android.telephony.TelephonyManager: void answerRingingCall()>
<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse[] newArray(int)>
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)>
<android.app.job.JobInfo: int getPriority()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureResultKeys()>
<android.app.Dialog: android.view.View getCurrentFocus()>
<android.os.IIncidentCompanion$Stub: android.os.IIncidentCompanion asInterface(android.os.IBinder)>
<com.android.internal.policy.PhoneFallbackEventHandler: android.media.session.MediaSessionManager getMediaSessionManager()>
<android.net.wifi.nl80211.IWifiScannerImpl$Default: android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults()>
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>
<android.graphics.Shader: long createNativeInstance(long)>
<android.service.notification.NotificationListenerService$RankingMap: int describeContents()>
<android.widget.TextView: int getTypefaceStyle()>
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>
<android.telephony.emergency.EmergencyNumber: int hashCode()>
<android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getSurfaceSize(android.view.Surface)>
<android.telephony.UssdResponse$1: void <init>()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: int convertAntiBandingModeOrDefault(java.lang.String)>
<android.app.IUiModeManager$Stub: android.app.IUiModeManager getDefaultImpl()>
<android.media.AudioManager: java.util.List getMicrophones()>
<android.net.wifi.nl80211.IClientInterface$Default: java.lang.String getInterfaceName()>
<android.media.projection.IMediaProjectionWatcherCallback$Stub: java.lang.String getTransactionName(int)>
<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>
<android.animation.ObjectAnimator: java.lang.String getNameForTrace()>
<android.service.euicc.EuiccProfileInfo: int getState()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<android.app.NotificationManager: int getZenMode()>
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getInputMethodList(int)>
<android.text.BoringLayout: int getEllipsisCount(int)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(int,android.os.UserHandle,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Counter getBluetoothScanResultCounter()>
<android.os.ICancellationSignal$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>
<android.hardware.display.DisplayManager: android.util.Pair getMinimumBrightnessCurve()>
<android.content.pm.IPackageManager$Default: byte[] getDefaultAppsBackup(int)>
<android.security.net.config.XmlConfigSource: java.util.Set getPerDomainConfigs()>
<android.graphics.RenderNode: android.graphics.Matrix getAnimationMatrix()>
<android.location.GnssMeasurement: java.lang.String getCodeType()>
<android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IDeviceIdentifiersPolicyService asInterface(android.os.IBinder)>
<android.telephony.CellSignalStrengthLte$1: void <init>()>
<android.telephony.TelephonyManager: java.lang.String getManufacturerCode()>
<android.content.pm.KeySet: android.os.IBinder getToken()>
<android.media.midi.MidiDeviceInfo: android.media.midi.MidiDeviceInfo$PortInfo[] getPorts()>
<android.telephony.CellInfoCdma: int hashCode()>
<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity(int)>
<com.android.internal.widget.LockscreenCredential: byte[] getCredential()>
<android.content.pm.ILauncherApps$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<android.content.IIntentSender$Stub: java.lang.String getTransactionName(int)>
<android.app.Vr2dDisplayProperties: int getHeight()>
<android.telephony.CellSignalStrengthCdma$1: android.telephony.CellSignalStrengthCdma[] newArray(int)>
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)>
<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)>
<android.telephony.SubscriptionManager: int getDefaultSmsPhoneId()>
<android.app.IActivityTaskManager$Default: android.app.ActivityManager$StackInfo getStackInfoOnDisplay(int,int,int)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>
<android.net.Uri: int compareTo(android.net.Uri)>
<android.graphics.RenderNode: long getUniqueId()>
<android.os.IDeviceIdleController$Default: int[] getAppIdWhitelistExceptIdle()>
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>
<android.telephony.ims.aidl.IImsMmTelFeature$Stub$Proxy: android.telephony.ims.ImsCallProfile createCallProfile(int,int)>
<android.telephony.TelephonyManager: boolean isNetworkRoaming(int)>
<com.android.internal.util.MemInfoReader: long getFreeSize()>
<android.net.ScoredNetwork: int calculateRankingScore(int)>
<android.service.persistentdata.PersistentDataBlockManager: int write(byte[])>
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getWebSearchActivity()>
<android.content.res.AssetManager: long createTheme()>
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String)>
<com.android.internal.view.IInputMethod$Stub: java.lang.String getDefaultTransactionName(int)>
<android.view.View: boolean getClipBounds(android.graphics.Rect)>
<android.telephony.ClientRequestStats: long getPendingRequestsCount()>
<android.text.style.AlignmentSpan$Standard: int describeContents()>
<android.companion.IFindDeviceCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.security.net.config.WfaCertificateSource: android.security.net.config.WfaCertificateSource getInstance()>
<android.os.Debug: int getThreadGcInvocationCount()>
<android.media.TimedText: java.lang.String getText()>
<android.hardware.radio.ICloseHandle$Stub: android.hardware.radio.ICloseHandle getDefaultImpl()>
<android.hardware.input.KeyboardLayout: int getVendorId()>
<android.graphics.drawable.VectorDrawable$VFullPath: int getNativeSize()>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>
<android.telephony.ims.aidl.IImsRcsController$Default: android.os.IBinder asBinder()>
<android.media.soundtrigger_middleware.ISoundTriggerModule$Stub: android.media.soundtrigger_middleware.ISoundTriggerModule asInterface(android.os.IBinder)>
<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getNotificationChannelGroupsFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle)>
<android.net.ISocketKeepaliveCallback$Stub: java.lang.String getTransactionName(int)>
<android.telephony.TelephonyManager: java.util.Map getEmergencyNumberList()>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>
<android.media.tv.ITvInputClient$Default: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthWcdma: int getAsuLevel()>
<android.view.View: android.content.res.Resources getResources()>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.media.soundtrigger_middleware.RecognitionConfig: int describeContents()>
<android.hardware.camera2.CameraManager$CameraManagerGlobal: java.util.Set getConcurrentCameraIds()>
<android.hardware.camera2.params.MeteringRectangle: int getHeight()>
<android.view.ISystemGestureExclusionListener$Default: android.os.IBinder asBinder()>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
<android.app.INotificationManager$Default: int getNumNotificationChannelsForPackage(java.lang.String,int,boolean)>
<android.view.CutoutSpecification: android.graphics.Rect getRightBound()>
<android.app.trust.ITrustManager$Stub: java.lang.String getTransactionName(int)>
<android.telephony.SubscriptionManager: boolean isValidSlotIndex(int)>
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()>
<android.media.AudioAttributes: java.util.Set getTags()>
<android.os.Bundle: short getShort(java.lang.String)>
<android.app.slice.ISliceManager$Stub: android.os.IBinder asBinder()>
<android.animation.Animator: android.content.res.ConstantState createConstantState()>
<android.content.pm.ShortcutManager: int getRemainingCallCount()>
<com.android.server.SystemConfig: android.util.ArrayMap getSharedLibraries()>
<com.android.internal.os.BatteryStatsHelper: java.util.List getMobilemsppList()>
<com.google.android.mms.pdu.RetrieveConf: int getDeliveryReport()>
<android.app.backup.IRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.data.ApnSetting: int getMaxConnsTime()>
<android.app.IUserSwitchObserver$Stub: android.app.IUserSwitchObserver getDefaultImpl()>
<android.content.pm.IPinItemRequest$Stub: java.lang.String getDefaultTransactionName(int)>
<android.media.tv.TvStreamConfig: int getType()>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityNodeInfo getNode(int,long)>
<android.app.blob.BlobHandle: byte[] getSha256Digest()>
<com.android.internal.graphics.palette.Palette: int getLightVibrantColor(int)>
<android.app.IRequestFinishCallback$Default: android.os.IBinder asBinder()>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>
<android.app.timezonedetector.ITimeZoneDetectorService$Stub: android.app.timezonedetector.ITimeZoneDetectorService getDefaultImpl()>
<android.content.pm.IPackageManager$Stub$Proxy: boolean isSafeMode()>
  
CONTACT_INFORMATION:  
z<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
z<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
z<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
  
CALENDAR_INFORMATION:  
z<android.service.notification.ScheduleCalendar: long getNextChangeTime(long)>
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
  
NFC:  
<android.nfc.IAppCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>
<android.nfc.INfcAdapterExtras$Stub: android.nfc.INfcAdapterExtras getDefaultImpl()>
<android.nfc.cardemulation.NfcFCardEmulation: android.nfc.cardemulation.NfcFCardEmulation getInstance(android.nfc.NfcAdapter)>
<android.nfc.cardemulation.CardEmulation: java.util.List getServices(java.lang.String)>
<android.nfc.INfcDta$Default: android.os.IBinder asBinder()>
<android.nfc.INfcUnlockHandler$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.cardemulation.AidGroup: java.lang.String getCategory()>
<android.nfc.tech.IsoDep: int getTimeout()>
<android.nfc.INfcCardEmulation$Default: java.util.List getServices(int,java.lang.String)>
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getDriverName(java.lang.String)>
<android.nfc.cardemulation.NfcFServiceInfo: int hashCode()>
<android.nfc.INfcFCardEmulation$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()>
<android.nfc.INfcCardEmulation$Stub: android.nfc.INfcCardEmulation asInterface(android.os.IBinder)>
<android.nfc.INfcAdapter$Default: android.nfc.INfcTag getNfcTagInterface()>
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>
<android.nfc.INfcAdapter$Stub$Proxy: boolean isNdefPushEnabled()>
<android.nfc.NfcActivityManager: android.nfc.BeamShareData createBeamShareData(byte)>
<android.nfc.INfcFCardEmulation$Default: java.util.List getNfcFServices(int)>
<android.nfc.NdefRecord: byte[] getPayload()>
<android.nfc.cardemulation.CardEmulation: java.lang.String getRouteDestinationForPreferredPaymentService()>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()>
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getSubsetAids()>
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>
<android.nfc.INfcAdapter$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.cardemulation.ApduServiceInfo: int describeContents()>
<android.nfc.INfcDta$Stub: java.lang.String getTransactionName(int)>
<android.nfc.INfcAdapter$Default: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
<android.nfc.INfcUnlockHandler$Stub: android.nfc.INfcUnlockHandler getDefaultImpl()>
<android.nfc.NfcAdapter: android.nfc.INfcFCardEmulation getNfcFCardEmulationService()>
<android.nfc.INfcAdapterExtras$Stub: android.nfc.INfcAdapterExtras asInterface(android.os.IBinder)>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcApplicationState findAppState(android.app.Application)>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcDta getNfcDtaInterface(java.lang.String)>
<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()>
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>
<android.nfc.NdefRecord: int getByteLength()>
<android.nfc.INfcUnlockHandler$Stub: android.nfc.INfcUnlockHandler asInterface(android.os.IBinder)>
<android.nfc.IAppCallback$Stub: android.os.IBinder asBinder()>
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.INfcUnlockHandler$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.INfcAdapter$Stub: java.lang.String getTransactionName(int)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<android.nfc.NdefRecord: byte[] getType()>
<android.nfc.cardemulation.NfcFServiceInfo: int describeContents()>
<android.nfc.IAppCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.Tag: int[] getTechCodeList()>
<android.nfc.INfcTag$Default: int getTimeout(int)>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>
<android.nfc.INfcFCardEmulation$Stub: android.os.IBinder asBinder()>
<android.nfc.INfcAdapter$Default: android.nfc.INfcDta getNfcDtaInterface(java.lang.String)>
<android.nfc.NdefRecord: byte[] toByteArray()>
<android.nfc.INfcTag$Default: int reconnect(int)>
<android.nfc.INfcDta$Stub: android.nfc.INfcDta getDefaultImpl()>
<android.nfc.ITagRemovedCallback$Stub: android.nfc.ITagRemovedCallback asInterface(android.os.IBinder)>
<android.nfc.INfcFCardEmulation$Stub$Proxy: int getMaxNumOfRegisterableSystemCodes()>
<android.nfc.cardemulation.NfcFServiceInfo: android.content.ComponentName getComponent()>
<android.nfc.INfcUnlockHandler$Stub: java.lang.String getTransactionName(int)>
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getT3tPmm()>
<android.nfc.NfcAdapter: java.util.List getSupportedOffHostSecureElements()>
<android.nfc.INfcAdapterExtras$Stub: java.lang.String getTransactionName(int)>
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.INfcAdapterExtras$Default: java.lang.String getDriverName(java.lang.String)>
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)>
<android.nfc.INfcAdapter$Stub$Proxy: int getState()>
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.NfcActivityManager$NfcActivityState: java.lang.String toString()>
<android.nfc.TechListParcel: int describeContents()>
<android.nfc.INfcCardEmulation$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.NdefMessage: int hashCode()>
<android.nfc.cardemulation.ApduServiceInfo: int getUid()>
<android.nfc.Tag: android.nfc.INfcTag getTagService()>
<android.nfc.Tag: android.os.Bundle getTechExtras(int)>
<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>
<android.nfc.NdefMessage: int describeContents()>
<android.nfc.INfcAdapter$Stub$Proxy: boolean isNfcSecureEnabled()>
<android.nfc.ITagRemovedCallback$Stub: java.lang.String getTransactionName(int)>
<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)>
<android.nfc.INfcCardEmulation$Default: android.os.IBinder asBinder()>
<android.nfc.cardemulation.AidGroup: java.util.List getAids()>
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>
<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>
<android.nfc.tech.NfcB: android.nfc.Tag getTag()>
<android.nfc.INfcAdapter$Default: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()>
<android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)>
<android.nfc.INfcCardEmulation$Default: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>
<android.nfc.cardemulation.ApduServiceInfo: int hashCode()>
<android.nfc.NdefMessage: int getByteArrayLength()>
<android.nfc.ITagRemovedCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.cardemulation.CardEmulation: java.lang.CharSequence getDescriptionForPreferredPaymentService()>
<android.nfc.INfcAdapterExtras$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.IAppCallback$Default: android.os.IBinder asBinder()>
<android.nfc.INfcUnlockHandler$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.INfcTag$Default: int formatNdef(int,byte[])>
<android.nfc.INfcDta$Stub: android.nfc.INfcDta asInterface(android.os.IBinder)>
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()>
<android.nfc.ITagRemovedCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.cardemulation.NfcFServiceInfo: int getUid()>
<android.nfc.INfcTag$Default: int ndefMakeReadOnly(int)>
<android.nfc.Tag: java.lang.String[] getTechList()>
<android.nfc.Tag: int[] getTechCodesFromStrings(java.lang.String[])>
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.util.List getNfcFServices(int)>
<android.nfc.INfcCardEmulation$Stub: java.lang.String getTransactionName(int)>
<android.nfc.NfcAdapter: android.content.Context getContext()>
<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>
<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>
<android.nfc.Tag: int getConnectedTechnology()>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
<android.nfc.cardemulation.NfcFCardEmulation: int getMaxNumOfRegisterableSystemCodes()>
<android.nfc.NfcAdapter: android.nfc.INfcCardEmulation getCardEmulationService()>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()>
<android.nfc.INfcFCardEmulation$Default: java.lang.String getSystemCodeForService(int,android.content.ComponentName)>
<android.nfc.INfcFCardEmulation$Stub: java.lang.String getTransactionName(int)>
<android.nfc.INfcCardEmulation$Stub: android.os.IBinder asBinder()>
<android.nfc.INfcAdapter$Default: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>
<android.nfc.INfcFCardEmulation$Stub: android.nfc.INfcFCardEmulation asInterface(android.os.IBinder)>
<android.nfc.INfcDta$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.INfcAdapter$Default: android.os.IBinder asBinder()>
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getPrefixAids()>
<android.nfc.NdefRecord: int hashCode()>
<android.nfc.INfcUnlockHandler$Stub: android.os.IBinder asBinder()>
<android.nfc.cardemulation.AidGroup: int describeContents()>
<android.nfc.NdefRecord: byte[] getId()>
<android.nfc.INfcCardEmulation$Stub: android.nfc.INfcCardEmulation getDefaultImpl()>
<android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>
<android.nfc.INfcTag$Default: android.os.IBinder asBinder()>
<android.nfc.Tag: byte[] getId()>
<android.nfc.INfcTag$Stub$Proxy: boolean getExtendedLengthApdusSupported()>
<android.nfc.NdefRecord: short getTnf()>
<android.nfc.IAppCallback$Stub: android.nfc.IAppCallback asInterface(android.os.IBinder)>
<android.nfc.Tag: int getServiceHandle()>
<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()>
<android.nfc.IAppCallback$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.IAppCallback$Stub$Proxy: android.nfc.BeamShareData createBeamShareData(byte)>
<android.nfc.NdefRecord: int describeContents()>
<android.nfc.ITagRemovedCallback$Stub: android.os.IBinder asBinder()>
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForPreferredPaymentService()>
<android.nfc.TransceiveResult: int describeContents()>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>
<android.nfc.INfcCardEmulation$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.cardemulation.ApduServiceInfo: android.content.ComponentName getComponent()>
<android.nfc.ITagRemovedCallback$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.INfcDta$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)>
<android.nfc.INfcTag$Stub: android.nfc.INfcTag asInterface(android.os.IBinder)>
<android.nfc.NfcAdapter: int getAdapterState()>
<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>
<android.nfc.INfcTag$Stub: java.lang.String getTransactionName(int)>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()>
<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>
<android.nfc.INfcTag$Default: int[] getTechList(int)>
<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>
<android.nfc.BeamShareData: int describeContents()>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getCategoryForAid(java.lang.String)>
<android.nfc.cardemulation.CardEmulation: android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)>
<android.nfc.cardemulation.ApduServiceInfo: java.util.ArrayList getAidGroups()>
<android.nfc.NfcAdapter: int getSdkVersion()>
<android.nfc.Tag: int describeContents()>
<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getSettingsActivityName()>
<android.nfc.INfcFCardEmulation$Default: android.os.IBinder asBinder()>
<android.nfc.cardemulation.ApduServiceInfo: android.nfc.cardemulation.AidGroup getDynamicAidGroupForCategory(java.lang.String)>
<android.nfc.tech.NfcB: byte[] getApplicationData()>
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getSystemCodeForService(int,android.content.ComponentName)>
<android.nfc.tech.BasicTagTechnology: boolean isConnected()>
<android.nfc.INfcCardEmulation$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.IAppCallback$Stub: android.nfc.IAppCallback getDefaultImpl()>
<android.nfc.INfcTag$Default: boolean getExtendedLengthApdusSupported()>
<android.nfc.NdefMessage: byte[] toByteArray()>
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getSystemCode()>
<android.nfc.INfcFCardEmulation$Default: java.lang.String getNfcid2ForService(int,android.content.ComponentName)>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)>
<android.nfc.cardemulation.NfcFCardEmulation: java.util.List getNfcFServices()>
<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)>
z<android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter getDefaultImpl()>
<android.nfc.INfcCardEmulation$Stub$Proxy: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>
z<android.nfc.INfcAdapterExtras$Default: android.os.IBinder asBinder()>
z<android.nfc.ITagRemovedCallback$Default: android.os.IBinder asBinder()>
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getNfcid2ForService(android.content.ComponentName)>
<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)>
z<android.nfc.INfcFCardEmulation$Default: int getMaxNumOfRegisterableSystemCodes()>
<android.nfc.INfcFCardEmulation$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.cardemulation.ApduServiceInfo: java.util.List getAids()>
<android.nfc.INfcUnlockHandler$Default: android.os.IBinder asBinder()>
<android.nfc.INfcAdapter$Default: int getState()>
<android.nfc.INfcAdapterExtras$Default: int getCardEmulationRoute(java.lang.String)>
z<android.nfc.INfcDta$Stub: android.os.IBinder asBinder()>
z<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getDescription()>
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getSystemCodeForService(android.content.ComponentName)>
<android.nfc.IAppCallback$Stub: java.lang.String getTransactionName(int)>
<android.nfc.NdefRecord: java.lang.String toMimeType()>
<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>
z<android.nfc.INfcTag$Stub: java.lang.String getDefaultTransactionName(int)>
<android.nfc.INfcTag$Default: int ndefWrite(int,android.nfc.NdefMessage)>
<android.nfc.NfcAdapter: android.nfc.INfcDta getNfcDtaInterface()>
z<android.nfc.INfcFCardEmulation$Stub: android.nfc.INfcFCardEmulation getDefaultImpl()>
z<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
z<android.nfc.INfcDta$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.INfcCardEmulation$Default: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>
<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>
z<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getDescription()>
<android.nfc.INfcCardEmulation$Stub$Proxy: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>
z<android.nfc.INfcTag$Default: int connect(int,int)>
z<android.nfc.INfcAdapter$Stub$Proxy: android.os.IBinder asBinder()>
<android.nfc.cardemulation.NfcFServiceInfo: java.lang.String getNfcid2()>
<android.nfc.INfcFCardEmulation$Stub$Proxy: java.lang.String getNfcid2ForService(int,android.content.ComponentName)>
z<android.nfc.INfcTag$Default: int getMaxTransceiveLength(int)>
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>
<android.nfc.INfcCardEmulation$Stub$Proxy: java.util.List getServices(int,java.lang.String)>
z<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
z<android.nfc.ITagRemovedCallback$Stub: android.nfc.ITagRemovedCallback getDefaultImpl()>
