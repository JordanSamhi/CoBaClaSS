v<android.content.Intent: void dumpDebug(android.util.proto.ProtoOutputStream)> -> _SINK_
x<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(android.content.Intent,int[],java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)> -> _SINK_
x<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> -> _SINK_
v<android.net.metrics.IpConnectivityLog: boolean log(int,int[],android.net.metrics.IpConnectivityLog$Event)> -> _SINK_
v<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)> -> _SINK_
x<android.media.tv.TvInputManager$SessionCallback: void onSessionEvent(android.media.tv.TvInputManager$Session,java.lang.String,android.os.Bundle)> -> _SINK_
v<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> _SINK_
x<android.database.DatabaseUtils: int executeUpdateDelete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])> -> _SINK_
x<android.hardware.display.BrightnessCorrection: void saveToXml(org.xmlpull.v1.XmlSerializer)> -> _SINK_
x<com.android.internal.telephony.GsmAlphabet: void stringToGsm8BitUnpackedField(java.lang.String,byte[],int,int)> -> _SINK_
x<android.view.RenderNodeAnimator: void setTarget(android.view.View)> -> _SINK_
x<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> -> _SINK_
v<android.util.proto.ProtoOutputStream: void write(long,byte[])> -> _SINK_
x<android.service.notification.NotifyingApp: android.service.notification.NotifyingApp setPackage(java.lang.String)> -> _SINK_
v<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> _SINK_
v<android.telephony.euicc.EuiccManager: void startResolutionActivity(android.app.Activity,int,android.content.Intent,android.app.PendingIntent)> -> _SINK_
x<android.widget.AdapterView: void removeView(android.view.View)> -> _SINK_
v<android.os.Messenger: void send(android.os.Message)> -> _SINK_
x<android.app.ApplicationPackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)> -> _SINK_
v<android.telephony.ims.ImsCallSession: void sendUssd(java.lang.String)> -> _SINK_
x<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)> -> _SINK_
x<android.content.Intent: int fillIn(android.content.Intent,int)> -> _SINK_
v<android.os.PersistableBundle: void writeToStream(java.io.OutputStream)> -> _SINK_
x<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,int)> -> _SINK_
v<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)> -> _SINK_
x<android.renderscript.RenderScript: void sendMessage(int,int[])> -> _SINK_
v<android.util.Log: int v(java.lang.String,java.lang.String)> -> _SINK_
v<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> -> _SINK_
x<java.util.logging.Logger: void setResourceBundle(java.util.ResourceBundle)> -> _SINK_
x<android.telephony.ims.stub.ImsSmsImplBase: void onSmsReceived(int,java.lang.String,byte[])> -> _SINK_
v<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int,java.lang.Object)> -> _SINK_
v<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
v<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)> -> _SINK_
x<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> -> _SINK_
x<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference$Callback,android.os.Handler)> -> _SINK_
x<android.content.res.Resources$Theme: void encode(android.view.ViewHierarchyEncoder)> -> _SINK_
x<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)> -> _SINK_
v<android.app.ActivityManager: void broadcastStickyIntent(android.content.Intent,int)> -> _SINK_
x<android.widget.TextView: void setAccessibilitySelection(int,int)> -> _SINK_
x<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference$Callback)> -> _SINK_
v<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)> -> _SINK_
x<android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int,int)> -> _SINK_
x<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)> -> _SINK_
v<java.util.logging.Logger: void severe(java.lang.String)> -> _SINK_
v<android.app.Fragment: void startActivity(android.content.Intent)> -> _SINK_
x<android.content.ContextWrapper: boolean moveDatabaseFrom(android.content.Context,java.lang.String)> -> _SINK_
x<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)> -> _SINK_
v<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_
x<android.os.storage.CrateInfo: void readFromParcel(android.os.Parcel)> -> _SINK_
v<android.util.proto.EncodedBuffer: void dumpByteString(java.lang.String,java.lang.String,byte[])> -> _SINK_
v<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)> -> _SINK_
x<android.content.pm.PackageParser: int computeTargetSdkVersion(int,java.lang.String,java.lang.String[],java.lang.String[])> -> _SINK_
v<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> -> _SINK_
v<android.app.AlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource)> -> _SINK_
x<android.net.util.SocketUtils: java.net.SocketAddress makePacketSocketAddress(int,byte[])> -> _SINK_
v<android.hardware.camera2.DngCreator: void writeImage(java.io.OutputStream,android.media.Image)> -> _SINK_
v<com.android.internal.os.LoggingPrintStream: void println(java.lang.Object)> -> _SINK_
x<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)> -> _SINK_
v<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)> -> _SINK_
x<android.telephony.MbmsDownloadSession: void cancelDownload(android.telephony.mbms.DownloadRequest)> -> _SINK_
v<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> -> _SINK_
x<android.media.AudioManager$OnAudioPortUpdateListener: void onAudioPatchListUpdate(android.media.AudioPatch[])> -> _SINK_
v<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)> -> _SINK_
x<android.telecom.InCallAdapter: void requestBluetoothAudio(java.lang.String)> -> _SINK_
x<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)> -> _SINK_
v<android.util.proto.ProtoOutputStream: void dump(java.lang.String)> -> _SINK_
x<android.os.storage.StorageManager: void benchmark(java.lang.String,android.os.IVoldTaskListener)> -> _SINK_
v<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> -> _SINK_
v<java.io.PrintStream: void write(byte[],int,int)> -> _SINK_
v<com.android.internal.os.LoggingPrintStream: void print(char)> -> _SINK_
v<android.os.BinderProxy: void shellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)> -> _SINK_
x<android.telephony.ims.ImsCallSession$Listener: void callSessionRttMessageReceived(java.lang.String)> -> _SINK_
x<com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)> -> _SINK_
x<java.util.logging.Logger: void throwing(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
v<java.io.Writer: void write(java.lang.String)> -> _SINK_
x<android.content.ComponentName: void appendShortString(java.lang.StringBuilder)> -> _SINK_
x<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.media.tv.TvInputHardwareInfo,java.lang.String,android.net.Uri)> -> _SINK_
x<android.view.View: void encode(android.view.ViewHierarchyEncoder)> -> _SINK_
x<java.security.MessageDigest: void update(byte[])> -> _SINK_
x<android.provider.Settings$System: void getNonLegacyMovedKeys(java.util.HashSet)> -> _SINK_
v<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> _SINK_
v<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)> -> _SINK_
x<android.metrics.MetricsReader: void read(long)> -> _SINK_
x<android.view.ViewGroup: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)> -> _SINK_
v<android.net.NetworkCapabilities: void dumpDebug(android.util.proto.ProtoOutputStream,long)> -> _SINK_
x<android.provider.Telephony$Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int,int)> -> _SINK_
x<android.hardware.Camera$Parameters: void setGpsTimestamp(long)> -> _SINK_
v<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)> -> _SINK_
v<android.app.timezone.RulesUpdaterContract: void sendBroadcast(android.content.Context,java.lang.String,byte[])> -> _SINK_
v<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_
x<android.app.Notification$MessagingStyle: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle$Message)> -> _SINK_
x<android.telecom.InCallAdapter: void rejectCall(java.lang.String,int)> -> _SINK_
x<android.app.Notification: void setBubbleMetadata(android.app.Notification$BubbleMetadata)> -> _SINK_
x<android.telephony.ims.stub.ImsSmsImplBase: void onSmsStatusReportReceived(int,java.lang.String,byte[])> -> _SINK_
x<com.android.internal.logging.MetricsLogger: void action(android.metrics.LogMaker)> -> _SINK_
v<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
v<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_
x<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair previewCaptured(long)> -> _SINK_
x<android.graphics.fonts.FontFamily$Builder: android.graphics.fonts.FontFamily build(java.lang.String,int,boolean)> -> _SINK_
x<android.bluetooth.BluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)> -> _SINK_
