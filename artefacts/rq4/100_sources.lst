x<android.view.textclassifier.TextLanguage: int getLocaleHypothesisCount()> -> _SOURCE_
v<android.view.InputDevice: int getVendorId()> -> _SOURCE_
x<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)> -> _SOURCE_
v<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()> -> _SOURCE_
x<android.bluetooth.BluetoothHidDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
x<android.location.GpsMeasurement: boolean hasDopplerShiftInHz()> -> _SOURCE_
x<com.android.internal.view.InputBindResult: android.graphics.Matrix getActivityViewToScreenMatrix()> -> _SOURCE_
x<android.telephony.TelephonyManager$UssdResponseCallback: void onReceiveUssdResponse(android.telephony.TelephonyManager,java.lang.String,java.lang.CharSequence)> -> _SOURCE_
x<android.os.storage.StorageManager: int getProxyFileDescriptorMountPointId()> -> _SOURCE_
x<android.app.admin.DevicePolicyManager: void clearApplicationUserData(android.content.ComponentName,java.lang.String,java.util.concurrent.Executor,android.app.admin.DevicePolicyManager$OnClearApplicationUserDataListener)> -> _SOURCE_
x<android.os.image.DynamicSystemManager: boolean remove()> -> _SOURCE_
x<android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)> -> _SOURCE_
x<android.media.MediaCodec: android.view.Surface createPersistentInputSurface()> -> _SOURCE_
x<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)> -> _SOURCE_
x<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)> -> _SOURCE_
x<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)> -> _SOURCE_
x<android.app.AppOpsManager$HistoricalOps: long getEndTimeMillis()> -> _SOURCE_
x<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)> -> _SOURCE_
x<android.os.health.HealthStats: long getTimerTime(int)> -> _SOURCE_
x<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
x<android.view.inputmethod.InputConnectionWrapper: int getMissingMethodFlags()> -> _SOURCE_
x<android.service.autofill.SaveInfo: android.service.autofill.InternalSanitizer[] getSanitizerKeys()> -> _SOURCE_
x<android.widget.TextView: int getCurrentHintTextColor()> -> _SOURCE_
x<android.net.TrafficStats: long getLoopbackTxBytes()> -> _SOURCE_
x<android.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)> -> _SOURCE_
x<java.io.OutputStreamWriter: void flush()> -> _SOURCE_
x<java.util.Locale: java.lang.String getVariant()> -> _SOURCE_
x<android.telecom.Call$Details: boolean can(int)> -> _SOURCE_
x<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)> -> _SOURCE_
x<android.bluetooth.BluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
x<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode(int)> -> _SOURCE_
v<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])> -> _SOURCE_
x<android.location.GpsClock: boolean hasDriftUncertaintyInNsPerSec()> -> _SOURCE_
v<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)> -> _SOURCE_
x<android.os.connectivity.CellularBatteryStats: long getIdleTimeMillis()> -> _SOURCE_
x<android.net.NetworkCapabilities: boolean hasCapability(int)> -> _SOURCE_
x<android.location.GpsClock: double getBiasUncertaintyInNs()> -> _SOURCE_
x<android.nfc.tech.MifareUltralight: int getTimeout()> -> _SOURCE_
v<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()> -> _SOURCE_
v<android.mtp.MtpObjectInfo: int getStorageId()> -> _SOURCE_
x<android.media.MediaTimestamp: float getMediaClockRate()> -> _SOURCE_
x<android.telephony.ims.stub.ImsConfigImplBase: void updateImsCarrierConfigs(android.os.PersistableBundle)> -> _SOURCE_
x<com.android.ims.internal.uce.options.OptionsSipResponse: int getRequestId()> -> _SOURCE_
x<android.telecom.Connection: android.telecom.StatusHints getStatusHints()> -> _SOURCE_
x<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()> -> _SOURCE_
x<android.window.WindowContainerToken: android.os.IBinder asBinder()> -> _SOURCE_
x<android.provider.DocumentsContract: android.net.Uri buildSearchDocumentsUri(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
x<android.location.LocationManager: int getGnssBatchSize()> -> _SOURCE_
x<java.util.logging.LogRecord: long getMillis()> -> _SOURCE_
x<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)> -> _SOURCE_
x<android.telephony.TelephonyRegistryManager: void listenForSubscriber(int,java.lang.String,java.lang.String,android.telephony.PhoneStateListener,int,boolean)> -> _SOURCE_
x<android.app.admin.DevicePolicyManager: int getLockTaskFeatures(android.content.ComponentName)> -> _SOURCE_
v<android.telephony.TelephonyManager: java.lang.String getCdmaPrlVersion()> -> _SOURCE_
x<android.app.assist.AssistContent: boolean isAppProvidedIntent()> -> _SOURCE_
x<android.hardware.display.AmbientDisplayConfiguration: boolean dozeSuppressed(int)> -> _SOURCE_
x<android.telephony.PhoneStateListener: void onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int)> -> _SOURCE_
x<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()> -> _SOURCE_
x<android.hardware.display.ColorDisplayManager: boolean isSaturationActivated()> -> _SOURCE_
x<android.telephony.ServiceState: boolean isEmergencyOnly()> -> _SOURCE_
x<android.app.Notification$Builder: java.lang.String loadHeaderAppName()> -> _SOURCE_
v<android.os.Parcel: byte readByte()> -> _SOURCE_
v<java.lang.System: java.util.Properties getProperties()> -> _SOURCE_
x<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> -> _SOURCE_
x<android.app.Notification$MessagingStyle$Message: boolean isRemoteInputHistory()> -> _SOURCE_
x<android.media.SubtitleData: int getTrackIndex()> -> _SOURCE_
x<android.view.animation.AnticipateOvershootInterpolator: long createNativeInterpolator()> -> _SOURCE_
x<android.widget.LinearLayout: int getGravity()> -> _SOURCE_
x<android.service.notification.NotificationListenerService$Ranking: android.app.NotificationChannel getChannel()> -> _SOURCE_
x<android.util.TypedValue: java.lang.CharSequence coerceToString()> -> _SOURCE_
x<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> -> _SOURCE_
x<com.android.internal.app.ChooserListAdapter: java.util.List getSurfacedTargetInfo()> -> _SOURCE_
x<java.net.URLConnection: java.lang.String getContentType()> -> _SOURCE_
x<android.media.MediaRouter$UserRouteInfo: void requestSetVolume(int)> -> _SOURCE_
x<android.telephony.TelephonyManager: int getVoiceNetworkType()> -> _SOURCE_
v<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
x<android.text.TextLine: float metrics(android.graphics.Paint$FontMetricsInt)> -> _SOURCE_
x<android.hardware.biometrics.BiometricPrompt$CryptoObject: java.security.Signature getSignature()> -> _SOURCE_
x<android.drm.DrmSupportInfo: java.lang.String getDescription()> -> _SOURCE_
x<android.media.tv.tuner.frontend.FrontendInfo: android.media.tv.tuner.frontend.FrontendCapabilities getFrontendCapabilities()> -> _SOURCE_
x<android.telephony.MbmsStreamingSession: android.telephony.MbmsStreamingSession create(android.content.Context,java.util.concurrent.Executor,android.telephony.mbms.MbmsStreamingSessionCallback)> -> _SOURCE_
x<com.android.ims.internal.uce.common.CapInfo: boolean isSpSupported()> -> _SOURCE_
x<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()> -> _SOURCE_
x<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> -> _SOURCE_
x<android.content.pm.parsing.result.ParseInput$DeferredError: int getTargetSdkForChange(long)> -> _SOURCE_
x<android.service.voice.VoiceInteractionSession$CompleteVoiceRequest: java.lang.CharSequence getMessage()> -> _SOURCE_
x<java.security.AlgorithmParameters: byte[] getEncoded()> -> _SOURCE_
x<android.telephony.TelephonyManager: boolean isOffhook()> -> _SOURCE_
x<android.location.GnssNavigationMessage$Callback: void onStatusChanged(int)> -> _SOURCE_
x<android.os.Environment: java.io.File getDownloadCacheDirectory()> -> _SOURCE_
x<android.app.DirectAction$Builder: android.app.DirectAction build()> -> _SOURCE_
x<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)> -> _SOURCE_
x<android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)> -> _SOURCE_
x<android.telecom.Call: int getState()> -> _SOURCE_
x<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)> -> _SOURCE_
x<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()> -> _SOURCE_
x<android.net.NetworkCapabilities: java.lang.String transportNamesOf(int[])> -> _SOURCE_
x<android.net.metrics.ValidationProbeEvent: void writeToParcel(android.os.Parcel,int)> -> _SOURCE_
x<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()> -> _SOURCE_
x<android.net.MobileLinkQualityInfo: int getEvdoEcio()> -> _SOURCE_
x<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()> -> _SOURCE_
