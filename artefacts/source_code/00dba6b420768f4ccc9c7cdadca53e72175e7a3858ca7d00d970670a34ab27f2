public boolean[] primaryIsTrailingPreviousAllLineOffsets(int line){
    int lineStart = getLineStart(line);
    int lineEnd = getLineEnd(line);
    int[] runs = getLineDirections(line).mDirections;
    boolean[] trailing = new boolean[lineEnd - lineStart + 1];
    byte[] level = new byte[lineEnd - lineStart + 1];
    for (int i = 0; i < runs.length; i += 2) {
        int start = lineStart + runs[i];
        int limit = start + (runs[i + 1] & RUN_LENGTH_MASK);
        if (limit > lineEnd) {
            limit = lineEnd;
        }
        if (limit == start) {
            continue;
        }
        level[limit - lineStart - 1] = (byte) ((runs[i + 1] >>> RUN_LEVEL_SHIFT) & RUN_LEVEL_MASK);
    }
    for (int i = 0; i < runs.length; i += 2) {
        int start = lineStart + runs[i];
        byte currentLevel = (byte) ((runs[i + 1] >>> RUN_LEVEL_SHIFT) & RUN_LEVEL_MASK);
        trailing[start - lineStart] = currentLevel > (start == lineStart ? (getParagraphDirection(line) == 1 ? 0 : 1) : level[start - lineStart - 1]);
    }
    return trailing;
}