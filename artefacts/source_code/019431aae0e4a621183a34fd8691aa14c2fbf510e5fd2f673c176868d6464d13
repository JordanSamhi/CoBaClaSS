public synchronized IRadio getRadioProxy(Message result){
    if (!SubscriptionManager.isValidPhoneId(mPhoneId))
        return null;
    if (!mIsCellularSupported) {
        if (RILJ_LOGV)
            riljLog("getRadioProxy: Not calling getService(): wifi-only");
        if (result != null) {
            AsyncResult.forMessage(result, null, CommandException.fromRilErrno(RADIO_NOT_AVAILABLE));
            result.sendToTarget();
        }
        return null;
    }
    if (mRadioProxy != null) {
        return mRadioProxy;
    }
    try {
        if (mDisabledRadioServices.contains(mPhoneId)) {
            riljLoge("getRadioProxy: mRadioProxy for " + HIDL_SERVICE_NAME[mPhoneId] + " is disabled");
        } else {
            try {
                mRadioProxy = android.hardware.radio.V1_5.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                mRadioVersion = RADIO_HAL_VERSION_1_5;
            } catch (NoSuchElementException e) {
            }
            if (mRadioProxy == null) {
                try {
                    mRadioProxy = android.hardware.radio.V1_4.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                    mRadioVersion = RADIO_HAL_VERSION_1_4;
                } catch (NoSuchElementException e) {
                }
            }
            if (mRadioProxy == null) {
                try {
                    mRadioProxy = android.hardware.radio.V1_3.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                    mRadioVersion = RADIO_HAL_VERSION_1_3;
                } catch (NoSuchElementException e) {
                }
            }
            if (mRadioProxy == null) {
                try {
                    mRadioProxy = android.hardware.radio.V1_2.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                    mRadioVersion = RADIO_HAL_VERSION_1_2;
                } catch (NoSuchElementException e) {
                }
            }
            if (mRadioProxy == null) {
                try {
                    mRadioProxy = android.hardware.radio.V1_1.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                    mRadioVersion = RADIO_HAL_VERSION_1_1;
                } catch (NoSuchElementException e) {
                }
            }
            if (mRadioProxy == null) {
                try {
                    mRadioProxy = android.hardware.radio.V1_0.IRadio.getService(HIDL_SERVICE_NAME[mPhoneId], true);
                    mRadioVersion = RADIO_HAL_VERSION_1_0;
                } catch (NoSuchElementException e) {
                }
            }
            if (mRadioProxy != null) {
                mRadioProxy.linkToDeath(mRadioProxyDeathRecipient, mRadioProxyCookie.incrementAndGet());
                mRadioProxy.setResponseFunctions(mRadioResponse, mRadioIndication);
            } else {
                mDisabledRadioServices.add(mPhoneId);
                riljLoge("getRadioProxy: mRadioProxy for " + HIDL_SERVICE_NAME[mPhoneId] + " is disabled");
            }
        }
    } catch (RemoteException e) {
        mRadioProxy = null;
        riljLoge("RadioProxy getService/setResponseFunctions: " + e);
    }
    if (mRadioProxy == null) {
        riljLoge("getRadioProxy: mRadioProxy == null");
        if (result != null) {
            AsyncResult.forMessage(result, null, CommandException.fromRilErrno(RADIO_NOT_AVAILABLE));
            result.sendToTarget();
        }
    }
    return mRadioProxy;
}