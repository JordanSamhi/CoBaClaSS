public void unregisterAudioPlaybackCallback(@NonNull AudioPlaybackCallback cb){
    if (cb == null) {
        throw new IllegalArgumentException("Illegal null AudioPlaybackCallback argument");
    }
    synchronized (mPlaybackCallbackLock) {
        if (mPlaybackCallbackList == null) {
            Log.w(TAG, "attempt to call unregisterAudioPlaybackCallback() on a callback" + " that was never registered");
            return;
        }
        final int oldCbCount = mPlaybackCallbackList.size();
        if (removePlaybackCallback_sync(cb)) {
            final int newCbCount = mPlaybackCallbackList.size();
            if ((oldCbCount > 0) && (newCbCount == 0)) {
                try {
                    getService().unregisterPlaybackCallback(mPlayCb);
                } catch (RemoteException e) {
                    throw e.rethrowFromSystemServer();
                }
            }
        } else {
            Log.w(TAG, "attempt to call unregisterAudioPlaybackCallback() on a callback" + " already unregistered or never registered");
        }
    }
}