public void systemReady(){
    ConcurrentUtils.wtfIfLockHeld(TAG, mLock);
    mContentResolver.registerContentObserver(Settings.Global.getUriFor(Settings.Global.BATTERY_SAVER_CONSTANTS), false, this);
    mContentResolver.registerContentObserver(Settings.Global.getUriFor(Settings.Global.BATTERY_SAVER_DEVICE_SPECIFIC_CONSTANTS), false, this);
    mContentResolver.registerContentObserver(Settings.Global.getUriFor(Settings.Global.BATTERY_SAVER_ADAPTIVE_CONSTANTS), false, this);
    mContentResolver.registerContentObserver(Settings.Global.getUriFor(Settings.Global.BATTERY_SAVER_ADAPTIVE_DEVICE_SPECIFIC_CONSTANTS), false, this);
    final AccessibilityManager acm = mContext.getSystemService(AccessibilityManager.class);
    acm.addAccessibilityStateChangeListener((enabled) -> setAccessibilityEnabled(enabled));
    final boolean accessibilityEnabled = acm.isEnabled();
    synchronized (mLock) {
        mAccessibilityEnabled = accessibilityEnabled;
    }
    final IntentFilter filter = new IntentFilter(UiModeManager.ACTION_ENTER_CAR_MODE_PRIORITIZED);
    filter.addAction(UiModeManager.ACTION_EXIT_CAR_MODE_PRIORITIZED);
    mContext.registerReceiver(mBroadcastReceiver, filter);
    final boolean carModeEnabled = mContext.getSystemService(UiModeManager.class).getCurrentModeType() == Configuration.UI_MODE_TYPE_CAR;
    synchronized (mLock) {
        mCarModeEnabled = carModeEnabled;
    }
    onChange(true, null);
}