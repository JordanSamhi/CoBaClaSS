public void update(Context c, CommandsInterface ci, IccCardStatus ics){
    synchronized (mLock) {
        mUniversalPinState = ics.mUniversalPinState;
        mGsmUmtsSubscriptionAppIndex = ics.mGsmUmtsSubscriptionAppIndex;
        mCdmaSubscriptionAppIndex = ics.mCdmaSubscriptionAppIndex;
        mImsSubscriptionAppIndex = ics.mImsSubscriptionAppIndex;
        mContext = c;
        mCi = ci;
        mTelephonyManager = (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);
        if (DBG)
            log(ics.mApplications.length + " applications");
        mLastReportedNumOfUiccApplications = ics.mApplications.length;
        for (int i = 0; i < mUiccApplications.length; i++) {
            if (mUiccApplications[i] == null) {
                if (i < ics.mApplications.length) {
                    mUiccApplications[i] = new UiccCardApplication(this, ics.mApplications[i], mContext, mCi);
                }
            } else if (i >= ics.mApplications.length) {
                mUiccApplications[i].dispose();
                mUiccApplications[i] = null;
            } else {
                mUiccApplications[i].update(ics.mApplications[i], mContext, mCi);
            }
        }
        createAndUpdateCatServiceLocked();
        log("Before privilege rules: " + mCarrierPrivilegeRules + " : " + ics.mCardState);
        if (mCarrierPrivilegeRules == null && ics.mCardState == CardState.CARDSTATE_PRESENT) {
            mCarrierPrivilegeRules = new UiccCarrierPrivilegeRules(this, mHandler.obtainMessage(EVENT_CARRIER_PRIVILEGES_LOADED));
        } else if (mCarrierPrivilegeRules != null && ics.mCardState != CardState.CARDSTATE_PRESENT) {
            mCarrierPrivilegeRules = null;
            mContext.getContentResolver().unregisterContentObserver(mProvisionCompleteContentObserver);
        }
        sanitizeApplicationIndexesLocked();
        updateIccAvailability(true);
    }
}