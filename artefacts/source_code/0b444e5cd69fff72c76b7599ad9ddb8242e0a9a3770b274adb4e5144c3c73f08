public void handleMessage(Message msg){
    AsyncResult ar;
    switch(msg.what) {
        case EVENT_CDMA_SUBSCRIPTION_SOURCE_CHANGED:
        case EVENT_GET_CDMA_SUBSCRIPTION_SOURCE:
            {
                log("CDMA_SUBSCRIPTION_SOURCE event = " + msg.what);
                ar = (AsyncResult) msg.obj;
                handleGetCdmaSubscriptionSource(ar);
            }
            break;
        case EVENT_RADIO_ON:
            {
                mCi.getCdmaSubscriptionSource(obtainMessage(EVENT_GET_CDMA_SUBSCRIPTION_SOURCE));
            }
            break;
        case EVENT_SUBSCRIPTION_STATUS_CHANGED:
            {
                log("EVENT_SUBSCRIPTION_STATUS_CHANGED");
                ar = (AsyncResult) msg.obj;
                if (ar.exception == null) {
                    int actStatus = ((int[]) ar.result)[0];
                    log("actStatus = " + actStatus);
                    if (actStatus == SUBSCRIPTION_ACTIVATED) {
                        Rlog.v(LOG_TAG, "get Cdma Subscription Source");
                        mCi.getCdmaSubscriptionSource(obtainMessage(EVENT_GET_CDMA_SUBSCRIPTION_SOURCE));
                    }
                } else {
                    logw("EVENT_SUBSCRIPTION_STATUS_CHANGED, Exception:" + ar.exception);
                }
            }
            break;
        default:
            super.handleMessage(msg);
    }
}