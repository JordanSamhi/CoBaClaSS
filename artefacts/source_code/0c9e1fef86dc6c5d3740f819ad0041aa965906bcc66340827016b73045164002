public LinkAddress requestDownstreamAddress(final IpServer ipServer){
    maybeRemoveDeprectedUpstreams();
    final byte[] bytes = mTetheringPrefix.getRawAddress();
    final int subAddress = getRandomSubAddr();
    final int subNet = (subAddress >> 8) & BYTE_MASK;
    bytes[3] = getSanitizedAddressSuffix(subAddress, (byte) 0, (byte) 1, (byte) 0xff);
    for (int i = 0; i < MAX_UBYTE; i++) {
        final int newSubNet = (subNet + i) & BYTE_MASK;
        if (newSubNet == BLUETOOTH_RESERVED)
            continue;
        bytes[2] = (byte) newSubNet;
        final InetAddress addr;
        try {
            addr = InetAddress.getByAddress(bytes);
        } catch (UnknownHostException e) {
            throw new IllegalStateException("Invalid address, shouldn't happen.", e);
        }
        final IpPrefix prefix = new IpPrefix(addr, PREFIX_LENGTH);
        if (isDownstreamPrefixInUse(prefix))
            continue;
        if (isConflictWithUpstream(prefix))
            continue;
        mDownstreams.add(ipServer);
        return new LinkAddress(addr, PREFIX_LENGTH);
    }
    return null;
}