public static PointF movePointInsideNearestRectangle(final PointF point, final List<T> list, final Function<T, RectF> extractor){
    float bestX = -1;
    float bestY = -1;
    double bestDistance = Double.MAX_VALUE;
    final int elementCount = list.size();
    for (int index = 0; index < elementCount; ++index) {
        final RectF rectangle = extractor.apply(list.get(index));
        final float candidateY = rectangle.centerY();
        final float candidateX;
        if (point.x > rectangle.right) {
            candidateX = rectangle.right;
        } else if (point.x < rectangle.left) {
            candidateX = rectangle.left;
        } else {
            candidateX = point.x;
        }
        final double candidateDistance = Math.pow(point.x - candidateX, 2) + Math.pow(point.y - candidateY, 2);
        if (candidateDistance < bestDistance) {
            bestX = candidateX;
            bestY = candidateY;
            bestDistance = candidateDistance;
        }
    }
    return new PointF(bestX, bestY);
}