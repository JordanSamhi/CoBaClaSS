public PowerSaveState getBatterySaverPolicy(@ServiceType int type){
    synchronized (mLock) {
        final Policy currPolicy = getCurrentPolicyLocked();
        final PowerSaveState.Builder builder = new PowerSaveState.Builder().setGlobalBatterySaverEnabled(currPolicy.advertiseIsEnabled);
        switch(type) {
            case ServiceType.LOCATION:
                boolean isEnabled = currPolicy.advertiseIsEnabled || currPolicy.locationMode != PowerManager.LOCATION_MODE_NO_CHANGE;
                return builder.setBatterySaverEnabled(isEnabled).setLocationMode(currPolicy.locationMode).build();
            case ServiceType.ANIMATION:
                return builder.setBatterySaverEnabled(currPolicy.disableAnimation).build();
            case ServiceType.FULL_BACKUP:
                return builder.setBatterySaverEnabled(currPolicy.deferFullBackup).build();
            case ServiceType.KEYVALUE_BACKUP:
                return builder.setBatterySaverEnabled(currPolicy.deferKeyValueBackup).build();
            case ServiceType.NETWORK_FIREWALL:
                return builder.setBatterySaverEnabled(currPolicy.enableFirewall).build();
            case ServiceType.SCREEN_BRIGHTNESS:
                return builder.setBatterySaverEnabled(currPolicy.enableAdjustBrightness).setBrightnessFactor(currPolicy.adjustBrightnessFactor).build();
            case ServiceType.DATA_SAVER:
                return builder.setBatterySaverEnabled(currPolicy.enableDataSaver).build();
            case ServiceType.SOUND:
                return builder.setBatterySaverEnabled(currPolicy.disableSoundTrigger).build();
            case ServiceType.VIBRATION:
                return builder.setBatterySaverEnabled(currPolicy.disableVibration).build();
            case ServiceType.FORCE_ALL_APPS_STANDBY:
                return builder.setBatterySaverEnabled(currPolicy.forceAllAppsStandby).build();
            case ServiceType.FORCE_BACKGROUND_CHECK:
                return builder.setBatterySaverEnabled(currPolicy.forceBackgroundCheck).build();
            case ServiceType.NIGHT_MODE:
                return builder.setBatterySaverEnabled(currPolicy.enableNightMode).build();
            case ServiceType.OPTIONAL_SENSORS:
                return builder.setBatterySaverEnabled(currPolicy.disableOptionalSensors).build();
            case ServiceType.AOD:
                return builder.setBatterySaverEnabled(currPolicy.disableAod).build();
            case ServiceType.QUICK_DOZE:
                return builder.setBatterySaverEnabled(currPolicy.enableQuickDoze).build();
            default:
                return builder.setBatterySaverEnabled(currPolicy.advertiseIsEnabled).build();
        }
    }
}