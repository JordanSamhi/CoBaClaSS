public void recordNdpCreation(int uid, String packageName, Map<WifiAwareNetworkSpecifier, WifiAwareDataPathStateManager.AwareNetworkRequestInformation> networkRequestCache){
    int numNdpInApp = 0;
    int numSecureNdpInApp = 0;
    int numNdpInSystem = 0;
    int numSecureNdpInSystem = 0;
    Map<String, Integer> ndpPerNdiMap = new HashMap<>();
    Set<String> ndiInApp = new HashSet<>();
    Set<String> ndiInSystem = new HashSet<>();
    for (WifiAwareDataPathStateManager.AwareNetworkRequestInformation anri : networkRequestCache.values()) {
        if (anri.state != WifiAwareDataPathStateManager.AwareNetworkRequestInformation.STATE_CONFIRMED) {
            continue;
        }
        boolean sameApp = (anri.uid == uid) && TextUtils.equals(anri.packageName, packageName);
        boolean isSecure = !TextUtils.isEmpty(anri.networkSpecifier.passphrase) || (anri.networkSpecifier.pmk != null && anri.networkSpecifier.pmk.length != 0);
        if (sameApp) {
            numNdpInApp += 1;
            if (isSecure) {
                numSecureNdpInApp += 1;
            }
            ndiInApp.add(anri.interfaceName);
        }
        numNdpInSystem += 1;
        if (isSecure) {
            numSecureNdpInSystem += 1;
        }
        Integer ndpCount = ndpPerNdiMap.get(anri.interfaceName);
        if (ndpCount == null) {
            ndpPerNdiMap.put(anri.interfaceName, 1);
        } else {
            ndpPerNdiMap.put(anri.interfaceName, ndpCount + 1);
        }
        ndiInSystem.add(anri.interfaceName);
    }
    synchronized (mLock) {
        mMaxNdiInApp = Math.max(mMaxNdiInApp, ndiInApp.size());
        mMaxNdpInApp = Math.max(mMaxNdpInApp, numNdpInApp);
        mMaxSecureNdpInApp = Math.max(mMaxSecureNdpInApp, numSecureNdpInApp);
        mMaxNdiInSystem = Math.max(mMaxNdiInSystem, ndiInSystem.size());
        mMaxNdpInSystem = Math.max(mMaxNdpInSystem, numNdpInSystem);
        mMaxSecureNdpInSystem = Math.max(mMaxSecureNdpInSystem, numSecureNdpInSystem);
        mMaxNdpPerNdi = Math.max(mMaxNdpPerNdi, Collections.max(ndpPerNdiMap.values()));
    }
}