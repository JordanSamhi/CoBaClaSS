public void dispatchIntent(Intent intent, String permission, String appOp, Bundle opts, BroadcastReceiver resultReceiver, UserHandle user, int subId){
    intent.addFlags(Intent.FLAG_RECEIVER_NO_ABORT);
    final String action = intent.getAction();
    SubscriptionManager.putPhoneIdAndSubIdExtra(intent, mPhone.getPhoneId());
    if (SubscriptionManager.isValidSubscriptionId(subId)) {
        SubscriptionManager.putSubscriptionIdExtra(intent, subId);
    }
    if (user.equals(UserHandle.ALL)) {
        int[] users = null;
        final List<UserHandle> userHandles = mUserManager.getUserHandles(false);
        final List<UserHandle> runningUserHandles = new ArrayList();
        for (UserHandle handle : userHandles) {
            if (mUserManager.isUserRunning(handle)) {
                runningUserHandles.add(handle);
            }
        }
        if (runningUserHandles.isEmpty()) {
            users = new int[] { user.getIdentifier() };
        } else {
            users = new int[runningUserHandles.size()];
            for (int i = 0; i < runningUserHandles.size(); i++) {
                users[i] = runningUserHandles.get(i).getIdentifier();
            }
        }
        for (int i = users.length - 1; i >= 0; i--) {
            UserHandle targetUser = UserHandle.of(users[i]);
            if (users[i] != UserHandle.SYSTEM.getIdentifier()) {
                if (hasUserRestriction(UserManager.DISALLOW_SMS, targetUser)) {
                    continue;
                }
                if (mUserManager.isManagedProfile(users[i])) {
                    continue;
                }
            }
            try {
                mContext.createPackageContextAsUser(mContext.getPackageName(), 0, targetUser).sendOrderedBroadcast(intent, Activity.RESULT_OK, permission, appOp, users[i] == UserHandle.SYSTEM.getIdentifier() ? resultReceiver : null, getHandler(), null, null, opts);
            } catch (PackageManager.NameNotFoundException ignored) {
            }
        }
    } else {
        try {
            mContext.createPackageContextAsUser(mContext.getPackageName(), 0, user).sendOrderedBroadcast(intent, Activity.RESULT_OK, permission, appOp, resultReceiver, getHandler(), null, null, opts);
        } catch (PackageManager.NameNotFoundException ignored) {
        }
    }
}