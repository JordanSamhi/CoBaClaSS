public final boolean refresh(@NonNull Uri url, @Nullable Bundle extras, @Nullable CancellationSignal cancellationSignal){
    Objects.requireNonNull(url, "url");
    try {
        if (mWrapped != null)
            return mWrapped.refresh(url, extras, cancellationSignal);
    } catch (RemoteException e) {
        return false;
    }
    IContentProvider provider = acquireProvider(url);
    if (provider == null) {
        return false;
    }
    try {
        ICancellationSignal remoteCancellationSignal = null;
        if (cancellationSignal != null) {
            cancellationSignal.throwIfCanceled();
            remoteCancellationSignal = provider.createCancellationSignal();
            cancellationSignal.setRemote(remoteCancellationSignal);
        }
        return provider.refresh(mPackageName, mAttributionTag, url, extras, remoteCancellationSignal);
    } catch (RemoteException e) {
        return false;
    } finally {
        releaseProvider(provider);
    }
}