public void setCurrentPlayTime(long playTime){
    if (mReversing && getTotalDuration() == DURATION_INFINITE) {
        throw new UnsupportedOperationException("Error: Cannot seek in reverse in an infinite" + " AnimatorSet");
    }
    if ((getTotalDuration() != DURATION_INFINITE && playTime > getTotalDuration() - mStartDelay) || playTime < 0) {
        throw new UnsupportedOperationException("Error: Play time should always be in between" + "0 and duration.");
    }
    initAnimation();
    if (!isStarted() || isPaused()) {
        if (mReversing) {
            throw new UnsupportedOperationException("Error: Something went wrong. mReversing" + " should not be set when AnimatorSet is not started.");
        }
        if (!mSeekState.isActive()) {
            findLatestEventIdForTime(0);
            initChildren();
            mSeekState.setPlayTime(0, mReversing);
        }
        animateBasedOnPlayTime(playTime, 0, mReversing);
        mSeekState.setPlayTime(playTime, mReversing);
    } else {
        mSeekState.setPlayTime(playTime, mReversing);
    }
}