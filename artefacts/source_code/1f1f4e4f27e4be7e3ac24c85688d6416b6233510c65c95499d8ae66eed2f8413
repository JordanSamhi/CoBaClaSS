public static Ikev2VpnProfile fromVpnProfile(@NonNull VpnProfile profile, @Nullable KeyStore keyStore) throws IOException, GeneralSecurityException{
    final Builder builder = new Builder(profile.server, profile.ipsecIdentifier);
    builder.setProxy(profile.proxy);
    builder.setAllowedAlgorithms(profile.getAllowedAlgorithms());
    builder.setBypassable(profile.isBypassable);
    builder.setMetered(profile.isMetered);
    builder.setMaxMtu(profile.maxMtu);
    if (profile.isRestrictedToTestNetworks) {
        builder.restrictToTestNetworks();
    }
    switch(profile.type) {
        case TYPE_IKEV2_IPSEC_USER_PASS:
            builder.setAuthUsernamePassword(profile.username, profile.password, certificateFromPemString(profile.ipsecCaCert));
            break;
        case TYPE_IKEV2_IPSEC_PSK:
            builder.setAuthPsk(decodeFromIpsecSecret(profile.ipsecSecret));
            break;
        case TYPE_IKEV2_IPSEC_RSA:
            final PrivateKey key;
            if (profile.ipsecSecret.startsWith(PREFIX_KEYSTORE_ALIAS)) {
                Objects.requireNonNull(keyStore, "Missing Keystore for aliased PrivateKey");
                final String alias = profile.ipsecSecret.substring(PREFIX_KEYSTORE_ALIAS.length());
                key = AndroidKeyStoreProvider.loadAndroidKeyStorePrivateKeyFromKeystore(keyStore, alias, Process.myUid());
            } else if (profile.ipsecSecret.startsWith(PREFIX_INLINE)) {
                key = getPrivateKey(profile.ipsecSecret.substring(PREFIX_INLINE.length()));
            } else {
                throw new IllegalArgumentException("Invalid RSA private key prefix");
            }
            final X509Certificate userCert = certificateFromPemString(profile.ipsecUserCert);
            final X509Certificate serverRootCa = certificateFromPemString(profile.ipsecCaCert);
            builder.setAuthDigitalSignature(userCert, key, serverRootCa);
            break;
        default:
            throw new IllegalArgumentException("Invalid auth method set");
    }
    return builder.build();
}