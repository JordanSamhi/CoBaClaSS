public static Notification createNotification(@NonNull Context context, byte transportType){
    Resources resources = context.getResources();
    int titleId;
    int messageId;
    if (transportType == AdbTransportType.USB) {
        titleId = com.android.internal.R.string.adb_active_notification_title;
        messageId = com.android.internal.R.string.adb_active_notification_message;
    } else if (transportType == AdbTransportType.WIFI) {
        titleId = com.android.internal.R.string.adbwifi_active_notification_title;
        messageId = com.android.internal.R.string.adbwifi_active_notification_message;
    } else {
        throw new IllegalArgumentException("createNotification called with unknown transport type=" + transportType);
    }
    CharSequence title = resources.getText(titleId);
    CharSequence message = resources.getText(messageId);
    Intent intent = new Intent(Settings.ACTION_APPLICATION_DEVELOPMENT_SETTINGS);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
    ResolveInfo resolveInfo = context.getPackageManager().resolveActivity(intent, PackageManager.MATCH_SYSTEM_ONLY);
    PendingIntent pIntent = null;
    if (resolveInfo != null) {
        intent.setPackage(resolveInfo.activityInfo.packageName);
        pIntent = PendingIntent.getActivityAsUser(context, 0, intent, PendingIntent.FLAG_IMMUTABLE, null, UserHandle.CURRENT);
    }
    return new Notification.Builder(context, SystemNotificationChannels.DEVELOPER_IMPORTANT).setSmallIcon(com.android.internal.R.drawable.stat_sys_adb).setWhen(0).setOngoing(true).setTicker(title).setDefaults(0).setColor(context.getColor(com.android.internal.R.color.system_notification_accent_color)).setContentTitle(title).setContentText(message).setContentIntent(pIntent).setVisibility(Notification.VISIBILITY_PUBLIC).extend(new Notification.TvExtender().setChannelId(ADB_NOTIFICATION_CHANNEL_ID_TV)).build();
}