public void assertValid(Characteristics characteristics, boolean rttSupported) throws IllegalArgumentException{
    WifiAwareUtils.validateServiceName(mServiceName);
    if (!TlvBufferUtils.isValid(mMatchFilter, 0, 1)) {
        throw new IllegalArgumentException("Invalid matchFilter configuration - LV fields do not match up to length");
    }
    if (mSubscribeType < SUBSCRIBE_TYPE_PASSIVE || mSubscribeType > SUBSCRIBE_TYPE_ACTIVE) {
        throw new IllegalArgumentException("Invalid subscribeType - " + mSubscribeType);
    }
    if (mTtlSec < 0) {
        throw new IllegalArgumentException("Invalid ttlSec - must be non-negative");
    }
    if (characteristics != null) {
        int maxServiceNameLength = characteristics.getMaxServiceNameLength();
        if (maxServiceNameLength != 0 && mServiceName.length > maxServiceNameLength) {
            throw new IllegalArgumentException("Service name longer than supported by device characteristics");
        }
        int maxServiceSpecificInfoLength = characteristics.getMaxServiceSpecificInfoLength();
        if (maxServiceSpecificInfoLength != 0 && mServiceSpecificInfo != null && mServiceSpecificInfo.length > maxServiceSpecificInfoLength) {
            throw new IllegalArgumentException("Service specific info longer than supported by device characteristics");
        }
        int maxMatchFilterLength = characteristics.getMaxMatchFilterLength();
        if (maxMatchFilterLength != 0 && mMatchFilter != null && mMatchFilter.length > maxMatchFilterLength) {
            throw new IllegalArgumentException("Match filter longer than supported by device characteristics");
        }
    }
    if (mMinDistanceMmSet && mMinDistanceMm < 0) {
        throw new IllegalArgumentException("Minimum distance must be non-negative");
    }
    if (mMaxDistanceMmSet && mMaxDistanceMm < 0) {
        throw new IllegalArgumentException("Maximum distance must be non-negative");
    }
    if (mMinDistanceMmSet && mMaxDistanceMmSet && mMaxDistanceMm <= mMinDistanceMm) {
        throw new IllegalArgumentException("Maximum distance must be greater than minimum distance");
    }
    if (!rttSupported && (mMinDistanceMmSet || mMaxDistanceMmSet)) {
        throw new IllegalArgumentException("Ranging is not supported");
    }
}