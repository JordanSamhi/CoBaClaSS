public static EuiccSpecVersion fromOpenChannelResponse(byte[] response){
    Asn1Node node;
    try {
        Asn1Decoder decoder = new Asn1Decoder(response);
        if (!decoder.hasNextNode()) {
            return null;
        }
        node = decoder.nextNode();
    } catch (InvalidAsn1DataException e) {
        Rlog.e(LOG_TAG, "Cannot parse the select response of ISD-R.", e);
        return null;
    }
    try {
        byte[] versionType;
        if (node.getTag() == TAG_ISD_R_APP_TEMPLATE) {
            versionType = node.getChild(TAG_VERSION).asBytes();
        } else {
            versionType = node.getChild(TAG_ISD_R_APP_TEMPLATE, TAG_VERSION).asBytes();
        }
        if (versionType.length == 3) {
            return new EuiccSpecVersion(versionType);
        } else {
            Rlog.e(LOG_TAG, "Cannot parse select response of ISD-R: " + node.toHex());
        }
    } catch (InvalidAsn1DataException | TagNotFoundException e) {
        Rlog.e(LOG_TAG, "Cannot parse select response of ISD-R: " + node.toHex());
    }
    return null;
}