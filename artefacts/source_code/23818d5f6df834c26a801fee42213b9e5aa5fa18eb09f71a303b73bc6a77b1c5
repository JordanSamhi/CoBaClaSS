public int[] getChannelsMhzForBand(@WifiAnnotations.WifiBandBasic int band){
    if (mWificond == null) {
        Log.e(TAG, "No valid wificond scanner interface handler");
        return new int[0];
    }
    int[] result = null;
    try {
        switch(band) {
            case WifiScanner.WIFI_BAND_24_GHZ:
                result = mWificond.getAvailable2gChannels();
                break;
            case WifiScanner.WIFI_BAND_5_GHZ:
                result = mWificond.getAvailable5gNonDFSChannels();
                break;
            case WifiScanner.WIFI_BAND_5_GHZ_DFS_ONLY:
                result = mWificond.getAvailableDFSChannels();
                break;
            case WifiScanner.WIFI_BAND_6_GHZ:
                result = mWificond.getAvailable6gChannels();
                break;
            default:
                throw new IllegalArgumentException("unsupported band " + band);
        }
    } catch (RemoteException e1) {
        Log.e(TAG, "Failed to request getChannelsForBand due to remote exception");
    }
    if (result == null) {
        result = new int[0];
    }
    return result;
}