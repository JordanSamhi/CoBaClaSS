public void onRoleHoldersChanged(@NonNull String roleName, @NonNull UserHandle user){
    if (!roleName.equals(RoleManager.ROLE_ASSISTANT)) {
        return;
    }
    List<String> roleHolders = mRm.getRoleHoldersAsUser(roleName, user);
    int userId = user.getIdentifier();
    if (roleHolders.isEmpty()) {
        Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.ASSISTANT, "", userId);
        Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_INTERACTION_SERVICE, "", userId);
        Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_RECOGNITION_SERVICE, getDefaultRecognizer(user), userId);
    } else {
        String pkg = roleHolders.get(0);
        List<ResolveInfo> services = mPm.queryIntentServicesAsUser(new Intent(VoiceInteractionService.SERVICE_INTERFACE).setPackage(pkg), PackageManager.GET_META_DATA | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE, userId);
        for (ResolveInfo resolveInfo : services) {
            ServiceInfo serviceInfo = resolveInfo.serviceInfo;
            VoiceInteractionServiceInfo voiceInteractionServiceInfo = new VoiceInteractionServiceInfo(mPm, serviceInfo);
            if (!voiceInteractionServiceInfo.getSupportsAssist()) {
                continue;
            }
            String serviceComponentName = serviceInfo.getComponentName().flattenToShortString();
            String serviceRecognizerName = new ComponentName(pkg, voiceInteractionServiceInfo.getRecognitionService()).flattenToShortString();
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.ASSISTANT, serviceComponentName, userId);
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_INTERACTION_SERVICE, serviceComponentName, userId);
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_RECOGNITION_SERVICE, serviceRecognizerName, userId);
            return;
        }
        final List<ResolveInfo> activities = mPm.queryIntentActivitiesAsUser(new Intent(Intent.ACTION_ASSIST).setPackage(pkg), PackageManager.MATCH_DEFAULT_ONLY | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE, userId);
        for (ResolveInfo resolveInfo : activities) {
            ActivityInfo activityInfo = resolveInfo.activityInfo;
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.ASSISTANT, activityInfo.getComponentName().flattenToShortString(), userId);
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_INTERACTION_SERVICE, "", userId);
            Settings.Secure.putStringForUser(getContext().getContentResolver(), Settings.Secure.VOICE_RECOGNITION_SERVICE, getDefaultRecognizer(user), userId);
            return;
        }
    }
}