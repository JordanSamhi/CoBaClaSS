public void handleMessage(Message msg){
    switch(msg.what) {
        case EVENT_UNSOL_EMERGENCY_NUMBER_LIST:
            AsyncResult ar = (AsyncResult) msg.obj;
            if (ar.result == null) {
                loge("EVENT_UNSOL_EMERGENCY_NUMBER_LIST: Result from RIL is null.");
            } else if ((ar.result != null) && (ar.exception == null)) {
                updateRadioEmergencyNumberListAndNotify((List<EmergencyNumber>) ar.result);
            } else {
                loge("EVENT_UNSOL_EMERGENCY_NUMBER_LIST: Exception from RIL : " + ar.exception);
            }
            break;
        case EVENT_UPDATE_DB_COUNTRY_ISO_CHANGED:
            if (msg.obj == null) {
                loge("EVENT_UPDATE_DB_COUNTRY_ISO_CHANGED: Result from UpdateCountryIso is" + " null.");
            } else {
                updateEmergencyNumberListDatabaseAndNotify((String) msg.obj);
            }
            break;
        case EVENT_UPDATE_EMERGENCY_NUMBER_TEST_MODE:
            if (msg.obj == null && msg.arg1 != RESET_EMERGENCY_NUMBER_TEST_MODE) {
                loge("EVENT_UPDATE_EMERGENCY_NUMBER_TEST_MODE: Result from" + " executeEmergencyNumberTestModeCommand is null.");
            } else {
                updateEmergencyNumberListTestModeAndNotify(msg.arg1, (EmergencyNumber) msg.obj);
            }
            break;
        case EVENT_UPDATE_EMERGENCY_NUMBER_PREFIX:
            if (msg.obj == null) {
                loge("EVENT_UPDATE_EMERGENCY_NUMBER_PREFIX: Result from" + " onCarrierConfigChanged is null.");
            } else {
                updateEmergencyNumberPrefixAndNotify((String[]) msg.obj);
            }
            break;
        case EVENT_UPDATE_OTA_EMERGENCY_NUMBER_DB:
            updateOtaEmergencyNumberListDatabaseAndNotify();
            break;
        case EVENT_OVERRIDE_OTA_EMERGENCY_NUMBER_DB_FILE_PATH:
            if (msg.obj == null) {
                overrideOtaEmergencyNumberDbFilePath(null);
            } else {
                overrideOtaEmergencyNumberDbFilePath((ParcelFileDescriptor) msg.obj);
            }
            break;
    }
}