public static synchronized RecoverableKeyStoreManager getInstance(Context context, KeyStore keystore){
    if (mInstance == null) {
        RecoverableKeyStoreDb db = RecoverableKeyStoreDb.newInstance(context);
        PlatformKeyManager platformKeyManager;
        ApplicationKeyStorage applicationKeyStorage;
        try {
            platformKeyManager = PlatformKeyManager.getInstance(context, db);
            applicationKeyStorage = ApplicationKeyStorage.getInstance(keystore);
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        } catch (KeyStoreException e) {
            throw new ServiceSpecificException(ERROR_SERVICE_INTERNAL_ERROR, e.getMessage());
        }
        RecoverySnapshotStorage snapshotStorage = RecoverySnapshotStorage.newInstance();
        CleanupManager cleanupManager = CleanupManager.getInstance(context.getApplicationContext(), snapshotStorage, db, applicationKeyStorage);
        mInstance = new RecoverableKeyStoreManager(context.getApplicationContext(), db, new RecoverySessionStorage(), Executors.newScheduledThreadPool(1), snapshotStorage, new RecoverySnapshotListenersStorage(), platformKeyManager, applicationKeyStorage, new TestOnlyInsecureCertificateHelper(), cleanupManager);
    }
    return mInstance;
}