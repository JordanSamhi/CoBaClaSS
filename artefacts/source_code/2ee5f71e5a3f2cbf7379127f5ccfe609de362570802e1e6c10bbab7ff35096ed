public static ServiceInfo findService(@NonNull String packageName, int userId, String serviceAction, String servicePermission, Class<?> serviceClassForLogging, IPackageManager ipm, StringBuilder errorMessage){
    final String simpleClassName = serviceClassForLogging.getSimpleName();
    final Intent intent = new Intent(serviceAction);
    intent.setPackage(packageName);
    errorMessage.setLength(0);
    try {
        final ParceledListSlice<ResolveInfo> pls = ipm.queryIntentServices(intent, null, 0, userId);
        if (pls == null || pls.getList().size() == 0) {
            errorMessage.append("Service with " + serviceAction + " not found.");
            return null;
        }
        final List<ResolveInfo> list = pls.getList();
        if (list.size() > 1) {
            errorMessage.append("More than one " + simpleClassName + "'s found in package " + packageName + ".  They'll all be ignored.");
            Log.e(TAG, errorMessage.toString());
            return null;
        }
        final ServiceInfo si = list.get(0).serviceInfo;
        if (!servicePermission.equals(si.permission)) {
            errorMessage.append(simpleClassName + " " + si.getComponentName().flattenToShortString() + " must be protected with " + servicePermission + ".");
            Log.e(TAG, errorMessage.toString());
            return null;
        }
        return si;
    } catch (RemoteException e) {
    }
    return null;
}