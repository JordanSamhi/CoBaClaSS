public String toString(){
    if (!sDebug)
        return super.toString();
    final StringBuilder builder = new StringBuilder("FillResponse : [mRequestId=" + mRequestId);
    if (mDatasets != null) {
        builder.append(", datasets=").append(mDatasets.getList());
    }
    if (mSaveInfo != null) {
        builder.append(", saveInfo=").append(mSaveInfo);
    }
    if (mClientState != null) {
        builder.append(", hasClientState");
    }
    if (mPresentation != null) {
        builder.append(", hasPresentation");
    }
    if (mInlinePresentation != null) {
        builder.append(", hasInlinePresentation");
    }
    if (mHeader != null) {
        builder.append(", hasHeader");
    }
    if (mFooter != null) {
        builder.append(", hasFooter");
    }
    if (mAuthentication != null) {
        builder.append(", hasAuthentication");
    }
    if (mAuthenticationIds != null) {
        builder.append(", authenticationIds=").append(Arrays.toString(mAuthenticationIds));
    }
    builder.append(", disableDuration=").append(mDisableDuration);
    if (mFlags != 0) {
        builder.append(", flags=").append(mFlags);
    }
    if (mFieldClassificationIds != null) {
        builder.append(Arrays.toString(mFieldClassificationIds));
    }
    if (mUserData != null) {
        builder.append(", userData=").append(mUserData);
    }
    if (mCancelIds != null) {
        builder.append(", mCancelIds=").append(mCancelIds.length);
    }
    builder.append(", mSupportInlinePresentations=").append(mSupportsInlineSuggestions);
    return builder.append("]").toString();
}