public synchronized Connection dialGsm(String dialString, int clirMode, UUSInfo uusInfo, Bundle intentExtras) throws CallStateException{
    clearDisconnected();
    boolean isEmergencyCall = PhoneNumberUtils.isLocalEmergencyNumber(mPhone.getContext(), dialString);
    checkForDialIssues(isEmergencyCall);
    String origNumber = dialString;
    dialString = convertNumberIfNecessary(mPhone, dialString);
    if (mForegroundCall.getState() == GsmCdmaCall.State.ACTIVE) {
        switchWaitingOrHoldingAndActive();
        try {
            Thread.sleep(500);
        } catch (InterruptedException e) {
        }
        fakeHoldForegroundBeforeDial();
    }
    if (mForegroundCall.getState() != GsmCdmaCall.State.IDLE) {
        throw new CallStateException("cannot dial in current state");
    }
    mPendingMO = new GsmCdmaConnection(mPhone, dialString, this, mForegroundCall, isEmergencyCall);
    if (intentExtras != null) {
        Rlog.d(LOG_TAG, "dialGsm - emergency dialer: " + intentExtras.getBoolean(TelecomManager.EXTRA_IS_USER_INTENT_EMERGENCY_CALL));
        mPendingMO.setHasKnownUserIntentEmergency(intentExtras.getBoolean(TelecomManager.EXTRA_IS_USER_INTENT_EMERGENCY_CALL));
    }
    mHangupPendingMO = false;
    mMetrics.writeRilDial(mPhone.getPhoneId(), mPendingMO, clirMode, uusInfo);
    mPhone.getVoiceCallSessionStats().onRilDial(mPendingMO);
    if (mPendingMO.getAddress() == null || mPendingMO.getAddress().length() == 0 || mPendingMO.getAddress().indexOf(PhoneNumberUtils.WILD) >= 0) {
        mPendingMO.mCause = DisconnectCause.INVALID_NUMBER;
        pollCallsWhenSafe();
    } else {
        setMute(false);
        mCi.dial(mPendingMO.getAddress(), mPendingMO.isEmergencyCall(), mPendingMO.getEmergencyNumberInfo(), mPendingMO.hasKnownUserIntentEmergency(), clirMode, uusInfo, obtainCompleteMessage());
    }
    if (mNumberConverted) {
        mPendingMO.restoreDialedNumberAfterConversion(origNumber);
        mNumberConverted = false;
    }
    updatePhoneState();
    mPhone.notifyPreciseCallStateChanged();
    return mPendingMO;
}