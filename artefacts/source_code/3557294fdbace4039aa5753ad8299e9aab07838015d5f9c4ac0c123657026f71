public TagData findOrCreateTag(String tagStr, int ownerUid, boolean shouldCreate){
    int firstAvailable = -1;
    TagData oldest = null;
    int oldestIndex = -1;
    TagData tag = new TagData(tagStr, ownerUid);
    for (int i = 0; i < mArray.length; i++) {
        TagData current = mArray[i];
        if (tag.equals(current)) {
            return current;
        } else if (!shouldCreate) {
            continue;
        } else if (current != null) {
            if (oldest == null || current.lastUsedTime < oldest.lastUsedTime) {
                oldestIndex = i;
                oldest = current;
            }
        } else if (firstAvailable == -1) {
            firstAvailable = i;
        }
    }
    if (!shouldCreate) {
        return null;
    }
    boolean useOldest = firstAvailable == -1;
    if (useOldest && mCallback != null) {
        if (DEBUG) {
            Slog.d(TAG, "Removing tag index: " + oldestIndex + " = " + oldest);
        }
        mCallback.onIndexRemoved(oldestIndex);
    }
    setToIndex(tag, firstAvailable != -1 ? firstAvailable : oldestIndex);
    return tag;
}