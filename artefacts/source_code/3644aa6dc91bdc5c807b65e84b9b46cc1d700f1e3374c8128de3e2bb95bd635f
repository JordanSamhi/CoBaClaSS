public void readKernelUidCpuActiveTimesLocked(boolean onBattery){
    final long startTimeMs = mClocks.uptimeMillis();
    mCpuUidActiveTimeReader.readDelta((uid, cpuActiveTimesMs) -> {
        uid = mapUid(uid);
        if (Process.isIsolated(uid)) {
            mCpuUidActiveTimeReader.removeUid(uid);
            Slog.w(TAG, "Got active times for an isolated uid with no mapping: " + uid);
            return;
        }
        if (!mUserInfoProvider.exists(UserHandle.getUserId(uid))) {
            Slog.w(TAG, "Got active times for an invalid user's uid " + uid);
            mCpuUidActiveTimeReader.removeUid(uid);
            return;
        }
        final Uid u = getUidStatsLocked(uid);
        u.mCpuActiveTimeMs.addCountLocked(cpuActiveTimesMs, onBattery);
    });
    final long elapsedTimeMs = mClocks.uptimeMillis() - startTimeMs;
    if (DEBUG_ENERGY_CPU || elapsedTimeMs >= 100) {
        Slog.d(TAG, "Reading cpu active times took " + elapsedTimeMs + "ms");
    }
}