public int detachMixes(@NonNull List<AudioMix> mixes){
    if (mixes == null) {
        throw new IllegalArgumentException("Illegal null list of AudioMix");
    }
    synchronized (mLock) {
        if (mStatus != POLICY_STATUS_REGISTERED) {
            throw new IllegalStateException("Cannot alter unregistered AudioPolicy");
        }
        final ArrayList<AudioMix> zeMixes = new ArrayList<AudioMix>(mixes.size());
        for (AudioMix mix : mixes) {
            if (mix == null) {
                throw new IllegalArgumentException("Illegal null AudioMix in detachMixes");
            } else {
                zeMixes.add(mix);
            }
        }
        final AudioPolicyConfig cfg = new AudioPolicyConfig(zeMixes);
        IAudioService service = getService();
        try {
            final int status = service.removeMixForPolicy(cfg, this.cb());
            if (status == AudioManager.SUCCESS) {
                mConfig.remove(zeMixes);
            }
            return status;
        } catch (RemoteException e) {
            Log.e(TAG, "Dead object in detachMixes", e);
            return AudioManager.ERROR;
        }
    }
}