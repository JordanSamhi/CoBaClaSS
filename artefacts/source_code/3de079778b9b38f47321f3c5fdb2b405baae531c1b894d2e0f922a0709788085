public IBackupAgent bindToAgentSynchronous(ApplicationInfo app, int mode){
    IBackupAgent agent = null;
    synchronized (mAgentConnectLock) {
        mConnecting = true;
        mConnectedAgent = null;
        try {
            if (mActivityManager.bindBackupAgent(app.packageName, mode, mUserId)) {
                Slog.d(TAG, addUserIdToLogMessage(mUserId, "awaiting agent for " + app));
                long timeoutMark = System.currentTimeMillis() + BIND_TIMEOUT_INTERVAL;
                while (mConnecting && mConnectedAgent == null && (System.currentTimeMillis() < timeoutMark)) {
                    try {
                        mAgentConnectLock.wait(5000);
                    } catch (InterruptedException e) {
                        Slog.w(TAG, addUserIdToLogMessage(mUserId, "Interrupted: " + e));
                        mConnecting = false;
                        mConnectedAgent = null;
                    }
                }
                if (mConnecting) {
                    Slog.w(TAG, addUserIdToLogMessage(mUserId, "Timeout waiting for agent " + app));
                    mConnectedAgent = null;
                }
                if (DEBUG) {
                    Slog.i(TAG, addUserIdToLogMessage(mUserId, "got agent " + mConnectedAgent));
                }
                agent = mConnectedAgent;
            }
        } catch (RemoteException e) {
        }
    }
    if (agent == null) {
        mActivityManagerInternal.clearPendingBackup(mUserId);
    }
    return agent;
}