public void onJobCompletedLocked(JobStatus jobStatus, boolean needsReschedule){
    if (DEBUG) {
        Slog.d(TAG, "Completed " + jobStatus + ", reschedule=" + needsReschedule);
    }
    final JobStatus rescheduledJob = needsReschedule ? getRescheduleJobForFailureLocked(jobStatus) : null;
    if (!stopTrackingJobLocked(jobStatus, rescheduledJob, !jobStatus.getJob().isPeriodic())) {
        if (DEBUG) {
            Slog.d(TAG, "Could not find job to remove. Was job removed while executing?");
        }
        mHandler.obtainMessage(MSG_CHECK_JOB_GREEDY).sendToTarget();
        return;
    }
    if (rescheduledJob != null) {
        try {
            rescheduledJob.prepareLocked();
        } catch (SecurityException e) {
            Slog.w(TAG, "Unable to regrant job permissions for " + rescheduledJob);
        }
        startTrackingJobLocked(rescheduledJob, jobStatus);
    } else if (jobStatus.getJob().isPeriodic()) {
        JobStatus rescheduledPeriodic = getRescheduleJobForPeriodic(jobStatus);
        try {
            rescheduledPeriodic.prepareLocked();
        } catch (SecurityException e) {
            Slog.w(TAG, "Unable to regrant job permissions for " + rescheduledPeriodic);
        }
        startTrackingJobLocked(rescheduledPeriodic, jobStatus);
    }
    jobStatus.unprepareLocked();
    reportActiveLocked();
    mHandler.obtainMessage(MSG_CHECK_JOB_GREEDY).sendToTarget();
}