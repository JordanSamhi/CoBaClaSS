public static boolean isSystemPackage(Context context, String packageName, int uid, int userId){
    synchronized (sLock) {
        if (SYSTEM_PACKAGE_NAME.equals(packageName)) {
            return true;
        }
        if (SHELL_PACKAGE_NAME.equals(packageName) || ROOT_PACKAGE_NAME.equals(packageName)) {
            return false;
        }
        if (uid != INVALID_UID) {
            final int callingAppId = UserHandle.getAppId(uid);
            if (callingAppId < FIRST_APPLICATION_UID) {
                sSystemUids.put(callingAppId, callingAppId);
                return true;
            }
        }
        final long identity = Binder.clearCallingIdentity();
        try {
            try {
                uid = context.getPackageManager().getPackageUidAsUser(packageName, 0, userId);
            } catch (PackageManager.NameNotFoundException e) {
                return false;
            }
            if (UserHandle.getAppId(uid) < FIRST_APPLICATION_UID) {
                sSystemUids.put(uid, uid);
                return true;
            }
            if (sSystemUids.indexOfKey(uid) >= 0) {
                return true;
            }
            String setupWizPackage = context.getPackageManager().getSetupWizardPackageName();
            if (packageName.equals(setupWizPackage)) {
                sSystemUids.put(uid, uid);
                return true;
            }
            PackageInfo packageInfo;
            try {
                packageInfo = context.getPackageManager().getPackageInfoAsUser(packageName, PackageManager.GET_SIGNATURES, userId);
                if ((packageInfo.applicationInfo.flags & ApplicationInfo.FLAG_PERSISTENT) != 0 && (packageInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
                    sSystemUids.put(uid, uid);
                    return true;
                }
            } catch (PackageManager.NameNotFoundException e) {
                return false;
            }
            if (sSystemSignature == null) {
                try {
                    sSystemSignature = context.getPackageManager().getPackageInfoAsUser(SYSTEM_PACKAGE_NAME, PackageManager.GET_SIGNATURES, UserHandle.USER_SYSTEM).signatures[0];
                } catch (PackageManager.NameNotFoundException e) {
                    return false;
                }
            }
            if (sSystemSignature.equals(packageInfo.signatures[0])) {
                sSystemUids.put(uid, uid);
                return true;
            }
        } finally {
            Binder.restoreCallingIdentity(identity);
        }
        return false;
    }
}