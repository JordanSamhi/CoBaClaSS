public void handleSoapMessageResponse(int sessionId, @Nullable SppResponseMessage responseMessage){
    if (sessionId != mCurrentSessionId) {
        Log.w(TAG, "Expected soapMessageResponse callback for currentSessionId=" + mCurrentSessionId);
        return;
    }
    if (responseMessage == null) {
        Log.e(TAG, "failed to send the sppPostDevData message");
        resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_SOAP_MESSAGE_EXCHANGE);
        return;
    }
    if (mState == STATE_WAITING_FOR_FIRST_SOAP_RESPONSE) {
        if (responseMessage.getMessageType() != SppResponseMessage.MessageType.POST_DEV_DATA_RESPONSE) {
            Log.e(TAG, "Expected a PostDevDataResponse, but got " + responseMessage.getMessageType());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_TYPE);
            return;
        }
        PostDevDataResponse devDataResponse = (PostDevDataResponse) responseMessage;
        mSessionId = devDataResponse.getSessionID();
        if (devDataResponse.getSppCommand().getExecCommandId() != SppCommand.ExecCommandId.BROWSER) {
            Log.e(TAG, "Expected a launchBrowser command, but got " + devDataResponse.getSppCommand().getExecCommandId());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_COMMAND_TYPE);
            return;
        }
        Log.d(TAG, "Exec: " + devDataResponse.getSppCommand().getExecCommandId() + ", for '" + devDataResponse.getSppCommand().getCommandData() + "'");
        mWebUrl = ((BrowserUri) devDataResponse.getSppCommand().getCommandData()).getUri();
        if (mWebUrl == null) {
            Log.e(TAG, "No Web-Url");
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_INVALID_URL_FORMAT_FOR_OSU);
            return;
        }
        if (!mWebUrl.toLowerCase(Locale.US).contains(mSessionId.toLowerCase(Locale.US))) {
            Log.e(TAG, "Bad or Missing session ID in webUrl");
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_INVALID_URL_FORMAT_FOR_OSU);
            return;
        }
        launchOsuWebView();
    } else if (mState == STATE_WAITING_FOR_SECOND_SOAP_RESPONSE) {
        if (responseMessage.getMessageType() != SppResponseMessage.MessageType.POST_DEV_DATA_RESPONSE) {
            Log.e(TAG, "Expected a PostDevDataResponse, but got " + responseMessage.getMessageType());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_TYPE);
            return;
        }
        PostDevDataResponse devDataResponse = (PostDevDataResponse) responseMessage;
        if (devDataResponse.getSppCommand() == null || devDataResponse.getSppCommand().getSppCommandId() != SppCommand.CommandId.ADD_MO) {
            Log.e(TAG, "Expected a ADD_MO command, but got " + ((devDataResponse.getSppCommand() == null) ? "null" : devDataResponse.getSppCommand().getSppCommandId()));
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_COMMAND_TYPE);
            return;
        }
        mPasspointConfiguration = buildPasspointConfiguration((PpsMoData) devDataResponse.getSppCommand().getCommandData());
        thirdSoapExchange(mPasspointConfiguration == null);
    } else if (mState == STATE_WAITING_FOR_THIRD_SOAP_RESPONSE) {
        if (responseMessage.getMessageType() != SppResponseMessage.MessageType.EXCHANGE_COMPLETE) {
            Log.e(TAG, "Expected a ExchangeCompleteMessage, but got " + responseMessage.getMessageType());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_TYPE);
            return;
        }
        ExchangeCompleteMessage exchangeCompleteMessage = (ExchangeCompleteMessage) responseMessage;
        if (exchangeCompleteMessage.getStatus() != SppConstants.SppStatus.EXCHANGE_COMPLETE) {
            Log.e(TAG, "Expected a ExchangeCompleteMessage Status, but got " + exchangeCompleteMessage.getStatus());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_STATUS);
            return;
        }
        if (exchangeCompleteMessage.getError() != SppConstants.INVALID_SPP_CONSTANT) {
            Log.e(TAG, "In the SppExchangeComplete, got error " + exchangeCompleteMessage.getError());
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_PROVISIONING_ABORTED);
            return;
        }
        if (mPasspointConfiguration == null) {
            Log.e(TAG, "No PPS MO to use for retrieving TrustCerts");
            resetStateMachineForFailure(ProvisioningCallback.OSU_FAILURE_NO_PPS_MO);
            return;
        }
        retrieveTrustRootCerts(mPasspointConfiguration);
    } else {
        if (mVerboseLoggingEnabled) {
            Log.v(TAG, "Received an unexpected SOAP message in state=" + mState);
        }
    }
}