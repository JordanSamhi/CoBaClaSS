public static int loadWebViewNativeLibraryFromPackage(String packageName, ClassLoader clazzLoader){
    if (!isWebViewSupported()) {
        return LIBLOAD_WRONG_PACKAGE_NAME;
    }
    WebViewProviderResponse response = null;
    try {
        response = getUpdateService().waitForAndGetProvider();
    } catch (RemoteException e) {
        Log.e(LOGTAG, "error waiting for relro creation", e);
        return LIBLOAD_FAILED_WAITING_FOR_WEBVIEW_REASON_UNKNOWN;
    }
    if (response.status != LIBLOAD_SUCCESS && response.status != LIBLOAD_FAILED_WAITING_FOR_RELRO) {
        return response.status;
    }
    if (!response.packageInfo.packageName.equals(packageName)) {
        return LIBLOAD_WRONG_PACKAGE_NAME;
    }
    PackageManager packageManager = AppGlobals.getInitialApplication().getPackageManager();
    String libraryFileName;
    try {
        PackageInfo packageInfo = packageManager.getPackageInfo(packageName, PackageManager.GET_META_DATA | PackageManager.MATCH_DEBUG_TRIAGED_MISSING);
        libraryFileName = getWebViewLibrary(packageInfo.applicationInfo);
    } catch (PackageManager.NameNotFoundException e) {
        Log.e(LOGTAG, "Couldn't find package " + packageName);
        return LIBLOAD_WRONG_PACKAGE_NAME;
    }
    int loadNativeRet = WebViewLibraryLoader.loadNativeLibrary(clazzLoader, libraryFileName);
    if (loadNativeRet == LIBLOAD_SUCCESS)
        return response.status;
    return loadNativeRet;
}