public void updateLocked(List<DisplayDevice> devices){
    if (mPrimaryDisplayDevice == null) {
        return;
    }
    if (!devices.contains(mPrimaryDisplayDevice)) {
        mPrimaryDisplayDevice = null;
        return;
    }
    DisplayDeviceInfo deviceInfo = mPrimaryDisplayDevice.getDisplayDeviceInfoLocked();
    if (!Objects.equals(mPrimaryDisplayDeviceInfo, deviceInfo)) {
        mBaseDisplayInfo.layerStack = mLayerStack;
        mBaseDisplayInfo.flags = 0;
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_SUPPORTS_PROTECTED_BUFFERS) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_SUPPORTS_PROTECTED_BUFFERS;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_SECURE) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_SECURE;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_PRIVATE) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_PRIVATE;
            mBaseDisplayInfo.removeMode = Display.REMOVE_MODE_DESTROY_CONTENT;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_DESTROY_CONTENT_ON_REMOVAL) != 0) {
            mBaseDisplayInfo.removeMode = Display.REMOVE_MODE_DESTROY_CONTENT;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_PRESENTATION) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_PRESENTATION;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_ROUND) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_ROUND;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS;
        }
        if ((deviceInfo.flags & DisplayDeviceInfo.FLAG_TRUSTED) != 0) {
            mBaseDisplayInfo.flags |= Display.FLAG_TRUSTED;
        }
        Rect maskingInsets = getMaskingInsets(deviceInfo);
        int maskedWidth = deviceInfo.width - maskingInsets.left - maskingInsets.right;
        int maskedHeight = deviceInfo.height - maskingInsets.top - maskingInsets.bottom;
        mBaseDisplayInfo.type = deviceInfo.type;
        mBaseDisplayInfo.address = deviceInfo.address;
        mBaseDisplayInfo.deviceProductInfo = deviceInfo.deviceProductInfo;
        mBaseDisplayInfo.name = deviceInfo.name;
        mBaseDisplayInfo.uniqueId = deviceInfo.uniqueId;
        mBaseDisplayInfo.appWidth = maskedWidth;
        mBaseDisplayInfo.appHeight = maskedHeight;
        mBaseDisplayInfo.logicalWidth = maskedWidth;
        mBaseDisplayInfo.logicalHeight = maskedHeight;
        mBaseDisplayInfo.rotation = Surface.ROTATION_0;
        mBaseDisplayInfo.modeId = deviceInfo.modeId;
        mBaseDisplayInfo.defaultModeId = deviceInfo.defaultModeId;
        mBaseDisplayInfo.supportedModes = Arrays.copyOf(deviceInfo.supportedModes, deviceInfo.supportedModes.length);
        mBaseDisplayInfo.colorMode = deviceInfo.colorMode;
        mBaseDisplayInfo.supportedColorModes = Arrays.copyOf(deviceInfo.supportedColorModes, deviceInfo.supportedColorModes.length);
        mBaseDisplayInfo.hdrCapabilities = deviceInfo.hdrCapabilities;
        mBaseDisplayInfo.minimalPostProcessingSupported = deviceInfo.allmSupported || deviceInfo.gameContentTypeSupported;
        mBaseDisplayInfo.logicalDensityDpi = deviceInfo.densityDpi;
        mBaseDisplayInfo.physicalXDpi = deviceInfo.xDpi;
        mBaseDisplayInfo.physicalYDpi = deviceInfo.yDpi;
        mBaseDisplayInfo.appVsyncOffsetNanos = deviceInfo.appVsyncOffsetNanos;
        mBaseDisplayInfo.presentationDeadlineNanos = deviceInfo.presentationDeadlineNanos;
        mBaseDisplayInfo.state = deviceInfo.state;
        mBaseDisplayInfo.smallestNominalAppWidth = maskedWidth;
        mBaseDisplayInfo.smallestNominalAppHeight = maskedHeight;
        mBaseDisplayInfo.largestNominalAppWidth = maskedWidth;
        mBaseDisplayInfo.largestNominalAppHeight = maskedHeight;
        mBaseDisplayInfo.ownerUid = deviceInfo.ownerUid;
        mBaseDisplayInfo.ownerPackageName = deviceInfo.ownerPackageName;
        boolean maskCutout = (deviceInfo.flags & DisplayDeviceInfo.FLAG_MASK_DISPLAY_CUTOUT) != 0;
        mBaseDisplayInfo.displayCutout = maskCutout ? null : deviceInfo.displayCutout;
        mBaseDisplayInfo.displayId = mDisplayId;
        mPrimaryDisplayDeviceInfo = deviceInfo;
        mInfo.set(null);
    }
}