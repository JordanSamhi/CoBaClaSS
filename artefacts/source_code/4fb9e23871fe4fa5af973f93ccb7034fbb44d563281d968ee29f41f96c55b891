public static ServerMain forkAndStartServer(int basePort, int limit) throws IOException, InterruptedException{
    RuntimeMXBean runtimeMxBean = ManagementFactory.getRuntimeMXBean();
    List<String> arguments = runtimeMxBean.getInputArguments().stream().filter(arg -> !arg.contains("-agentlib")).collect(Collectors.toList());
    Path javaPath = Paths.get(System.getProperty("java.home"), "bin", "java");
    String thisClassName = ServerMain.class.getName().replace('.', '/');
    List<String> cmd = new ArrayList<>();
    cmd.add(javaPath.toString());
    cmd.addAll(arguments);
    cmd.add("-cp");
    cmd.add(System.getProperty("java.class.path"));
    cmd.add(thisClassName);
    cmd.add(Integer.toString(basePort));
    cmd.add(Integer.toString(limit));
    Process process = new ProcessBuilder().command(cmd).start();
    BlockingQueue<String> outputQueue = new ArrayBlockingQueue<>(10);
    Thread outputThread = createOutputProcessor("output", process.getInputStream(), outputQueue::offer);
    Thread errorThread = createOutputProcessor("error", process.getErrorStream(), System.err::println);
    Runnable killServer = () -> {
        process.destroyForcibly();
        outputThread.interrupt();
        errorThread.interrupt();
        try {
            outputThread.join();
        } catch (InterruptedException ignore) {
        }
        try {
            errorThread.join();
        } catch (InterruptedException ignore) {
        }
    };
    for (int i = 0; i < 10; i++) {
        String line = outputQueue.poll(5, TimeUnit.SECONDS);
        if (line != null && line.startsWith(RUNNING_SERVER_STR)) {
            int runningPort = Integer.parseInt(line.substring(RUNNING_SERVER_STR.length()));
            System.out.println("Running on port " + runningPort);
            Registry registry = LocateRegistry.getRegistry(runningPort);
            return new ServerMain(runningPort, registry) {

                @Override
                public void stop() {
                    killServer.run();
                }
            };
        }
    }
    killServer.run();
    throw new IOException("Unable to find start string");
}