public GroupCall startGroupCall(long tmgi, @NonNull List<Integer> saiList, @NonNull List<Integer> frequencyList, @NonNull Executor executor, @NonNull GroupCallCallback callback){
    IMbmsGroupCallService groupCallService = mService.get();
    if (groupCallService == null) {
        throw new IllegalStateException("Middleware not yet bound");
    }
    InternalGroupCallCallback serviceCallback = new InternalGroupCallCallback(callback, executor);
    GroupCall serviceForApp = new GroupCall(mSubscriptionId, groupCallService, this, tmgi, serviceCallback);
    mKnownActiveGroupCalls.add(serviceForApp);
    try {
        int returnCode = groupCallService.startGroupCall(mSubscriptionId, tmgi, saiList, frequencyList, serviceCallback);
        if (returnCode == MbmsErrors.UNKNOWN) {
            close();
            throw new IllegalStateException("Middleware must not return an unknown error code");
        }
        if (returnCode != MbmsErrors.SUCCESS) {
            mInternalCallback.onError(returnCode, null);
            return null;
        }
    } catch (RemoteException e) {
        Log.w(LOG_TAG, "Remote process died");
        mService.set(null);
        sIsInitialized.set(false);
        mInternalCallback.onError(MbmsErrors.ERROR_MIDDLEWARE_LOST, null);
        return null;
    }
    return serviceForApp;
}