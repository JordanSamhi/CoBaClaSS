public static SmartRepliesAndActions chooseSmartRepliesAndActions(SmartReplyConstants smartReplyConstants, final NotificationEntry entry){
    Notification notification = entry.getSbn().getNotification();
    Pair<RemoteInput, Notification.Action> remoteInputActionPair = notification.findRemoteInputActionPair(false);
    Pair<RemoteInput, Notification.Action> freeformRemoteInputActionPair = notification.findRemoteInputActionPair(true);
    if (!smartReplyConstants.isEnabled()) {
        if (DEBUG) {
            Log.d(TAG, "Smart suggestions not enabled, not adding suggestions for " + entry.getSbn().getKey());
        }
        return new SmartRepliesAndActions(null, null);
    }
    boolean enableAppGeneratedSmartReplies = (!smartReplyConstants.requiresTargetingP() || entry.targetSdk >= Build.VERSION_CODES.P);
    boolean appGeneratedSmartRepliesExist = enableAppGeneratedSmartReplies && remoteInputActionPair != null && !ArrayUtils.isEmpty(remoteInputActionPair.first.getChoices()) && remoteInputActionPair.second.actionIntent != null;
    List<Notification.Action> appGeneratedSmartActions = notification.getContextualActions();
    boolean appGeneratedSmartActionsExist = !appGeneratedSmartActions.isEmpty();
    SmartReplyView.SmartReplies smartReplies = null;
    SmartReplyView.SmartActions smartActions = null;
    if (appGeneratedSmartRepliesExist) {
        smartReplies = new SmartReplyView.SmartReplies(Arrays.asList(remoteInputActionPair.first.getChoices()), remoteInputActionPair.first, remoteInputActionPair.second.actionIntent, false);
    }
    if (appGeneratedSmartActionsExist) {
        smartActions = new SmartReplyView.SmartActions(appGeneratedSmartActions, false);
    }
    if (!appGeneratedSmartRepliesExist && !appGeneratedSmartActionsExist) {
        boolean useGeneratedReplies = !ArrayUtils.isEmpty(entry.getSmartReplies()) && freeformRemoteInputActionPair != null && freeformRemoteInputActionPair.second.getAllowGeneratedReplies() && freeformRemoteInputActionPair.second.actionIntent != null;
        if (useGeneratedReplies) {
            smartReplies = new SmartReplyView.SmartReplies(entry.getSmartReplies(), freeformRemoteInputActionPair.first, freeformRemoteInputActionPair.second.actionIntent, true);
        }
        boolean useSmartActions = !ArrayUtils.isEmpty(entry.getSmartActions()) && notification.getAllowSystemGeneratedContextualActions();
        if (useSmartActions) {
            List<Notification.Action> systemGeneratedActions = entry.getSmartActions();
            ActivityManagerWrapper activityManagerWrapper = Dependency.get(ActivityManagerWrapper.class);
            if (activityManagerWrapper.isLockTaskKioskModeActive()) {
                systemGeneratedActions = filterWhiteListedLockTaskApps(systemGeneratedActions);
            }
            smartActions = new SmartReplyView.SmartActions(systemGeneratedActions, true);
        }
    }
    return new SmartRepliesAndActions(smartReplies, smartActions);
}