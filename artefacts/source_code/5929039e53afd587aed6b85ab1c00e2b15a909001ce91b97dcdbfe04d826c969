public static Bitmap decodeStream(final InputStreamFactory factory, final Rect outPadding, final BitmapFactory.Options opts) throws FileNotFoundException{
    InputStream is = null;
    try {
        is = factory.createInputStream();
        final int orientation = Exif.getOrientation(is, -1);
        if (is != null) {
            is.close();
        }
        is = factory.createInputStream();
        final Bitmap originalBitmap = BitmapFactory.decodeStream(is, outPadding, opts);
        if (is != null && originalBitmap == null && !opts.inJustDecodeBounds) {
            Log.w(TAG, "ImageUtils#decodeStream(InputStream, Rect, Options): " + "Image bytes cannot be decoded into a Bitmap");
            throw new UnsupportedOperationException("Image bytes cannot be decoded into a Bitmap.");
        }
        if (originalBitmap != null && orientation != 0) {
            final Matrix matrix = new Matrix();
            matrix.postRotate(orientation);
            return Bitmap.createBitmap(originalBitmap, 0, 0, originalBitmap.getWidth(), originalBitmap.getHeight(), matrix, true);
        }
        return originalBitmap;
    } catch (OutOfMemoryError oome) {
        Log.e(TAG, "ImageUtils#decodeStream(InputStream, Rect, Options) threw an OOME", oome);
        return null;
    } catch (IOException ioe) {
        Log.e(TAG, "ImageUtils#decodeStream(InputStream, Rect, Options) threw an IOE", ioe);
        return null;
    } finally {
        if (is != null) {
            try {
                is.close();
            } catch (IOException e) {
            }
        }
    }
}