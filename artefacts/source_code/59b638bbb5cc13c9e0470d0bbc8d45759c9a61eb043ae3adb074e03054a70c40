public static PointerIcon getSystemIcon(@NonNull Context context, int type){
    if (context == null) {
        throw new IllegalArgumentException("context must not be null");
    }
    if (type == TYPE_NULL) {
        return gNullIcon;
    }
    if (sDisplayListener == null) {
        registerDisplayListener(context);
    }
    final int displayId = context.getDisplayId();
    SparseArray<PointerIcon> systemIcons = gSystemIconsByDisplay.get(displayId);
    if (systemIcons == null) {
        systemIcons = new SparseArray<>();
        gSystemIconsByDisplay.put(displayId, systemIcons);
    }
    PointerIcon icon = systemIcons.get(type);
    if (icon != null) {
        return icon;
    }
    int typeIndex = getSystemIconTypeIndex(type);
    if (typeIndex == 0) {
        typeIndex = getSystemIconTypeIndex(TYPE_DEFAULT);
    }
    int defStyle = sUseLargeIcons ? com.android.internal.R.style.LargePointer : com.android.internal.R.style.Pointer;
    TypedArray a = context.obtainStyledAttributes(null, com.android.internal.R.styleable.Pointer, 0, defStyle);
    int resourceId = a.getResourceId(typeIndex, -1);
    a.recycle();
    if (resourceId == -1) {
        Log.w(TAG, "Missing theme resources for pointer icon type " + type);
        return type == TYPE_DEFAULT ? gNullIcon : getSystemIcon(context, TYPE_DEFAULT);
    }
    icon = new PointerIcon(type);
    if ((resourceId & 0xff000000) == 0x01000000) {
        icon.mSystemIconResourceId = resourceId;
    } else {
        icon.loadResource(context, context.getResources(), resourceId);
    }
    systemIcons.append(type, icon);
    return icon;
}