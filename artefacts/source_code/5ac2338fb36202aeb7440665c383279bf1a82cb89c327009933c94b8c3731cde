public static NetworkIdentity buildNetworkIdentity(Context context, NetworkState state, boolean defaultNetwork, @NetworkType int subType){
    final int type = state.networkInfo.getType();
    String subscriberId = null;
    String networkId = null;
    boolean roaming = !state.networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING);
    boolean metered = !state.networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED);
    if (isNetworkTypeMobile(type)) {
        if (state.subscriberId == null) {
            if (state.networkInfo.getState() != NetworkInfo.State.DISCONNECTED && state.networkInfo.getState() != NetworkInfo.State.UNKNOWN) {
                Slog.w(TAG, "Active mobile network without subscriber! ni = " + state.networkInfo);
            }
        }
        subscriberId = state.subscriberId;
    } else if (type == TYPE_WIFI) {
        if (state.networkId != null) {
            networkId = state.networkId;
        } else {
            final WifiManager wifi = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
            final WifiInfo info = wifi.getConnectionInfo();
            networkId = info != null ? info.getSSID() : null;
        }
    }
    return new NetworkIdentity(type, subType, subscriberId, networkId, roaming, metered, defaultNetwork);
}