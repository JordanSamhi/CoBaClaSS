public CharSequence fixText(CharSequence cs){
    if (TextUtils.getTrimmedLength(cs) == 0)
        return "";
    Rfc822Token[] tokens = Rfc822Tokenizer.tokenize(cs);
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < tokens.length; i++) {
        String text = tokens[i].getAddress();
        if (mRemoveInvalid && !isValid(text)) {
            continue;
        }
        int index = text.indexOf('@');
        if (index < 0) {
            if (mDomain != null) {
                tokens[i].setAddress(removeIllegalCharacters(text) + "@" + mDomain);
            }
        } else {
            String fix = removeIllegalCharacters(text.substring(0, index));
            if (TextUtils.isEmpty(fix)) {
                continue;
            }
            String domain = removeIllegalCharacters(text.substring(index + 1));
            boolean emptyDomain = domain.length() == 0;
            if (!emptyDomain || mDomain != null) {
                tokens[i].setAddress(fix + "@" + (!emptyDomain ? domain : mDomain));
            }
        }
        sb.append(tokens[i].toString());
        if (i + 1 < tokens.length) {
            sb.append(", ");
        }
    }
    return sb;
}