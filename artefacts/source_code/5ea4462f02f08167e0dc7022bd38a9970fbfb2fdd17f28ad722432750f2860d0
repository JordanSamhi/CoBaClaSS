public void restoreAtInstall(String packageName, int token){
    if (Binder.getCallingUid() != Process.SYSTEM_UID) {
        Slog.w(TAG, addUserIdToLogMessage(mUserId, "Non-system process uid=" + Binder.getCallingUid() + " attemping install-time restore"));
        return;
    }
    boolean skip = false;
    long restoreSet = getAvailableRestoreToken(packageName);
    if (DEBUG) {
        Slog.v(TAG, addUserIdToLogMessage(mUserId, "restoreAtInstall pkg=" + packageName + " token=" + Integer.toHexString(token) + " restoreSet=" + Long.toHexString(restoreSet)));
    }
    if (restoreSet == 0) {
        if (MORE_DEBUG)
            Slog.i(TAG, addUserIdToLogMessage(mUserId, "No restore set"));
        skip = true;
    }
    TransportClient transportClient = mTransportManager.getCurrentTransportClient("BMS.restoreAtInstall()");
    if (transportClient == null) {
        if (DEBUG)
            Slog.w(TAG, addUserIdToLogMessage(mUserId, "No transport client"));
        skip = true;
    }
    if (!mAutoRestore) {
        if (DEBUG) {
            Slog.w(TAG, addUserIdToLogMessage(mUserId, "Non-restorable state: auto=" + mAutoRestore));
        }
        skip = true;
    }
    if (!skip) {
        try {
            mWakelock.acquire();
            OnTaskFinishedListener listener = caller -> {
                mTransportManager.disposeOfTransportClient(transportClient, caller);
                mWakelock.release();
            };
            if (MORE_DEBUG) {
                Slog.d(TAG, addUserIdToLogMessage(mUserId, "Restore at install of " + packageName));
            }
            Message msg = mBackupHandler.obtainMessage(MSG_RUN_RESTORE);
            msg.obj = RestoreParams.createForRestoreAtInstall(transportClient, null, null, restoreSet, packageName, token, listener);
            mBackupHandler.sendMessage(msg);
        } catch (Exception e) {
            Slog.e(TAG, addUserIdToLogMessage(mUserId, "Unable to contact transport: " + e.getMessage()));
            skip = true;
        }
    }
    if (skip) {
        if (transportClient != null) {
            mTransportManager.disposeOfTransportClient(transportClient, "BMS.restoreAtInstall()");
        }
        if (DEBUG)
            Slog.v(TAG, addUserIdToLogMessage(mUserId, "Finishing install immediately"));
        try {
            mPackageManagerBinder.finishPackageInstall(token, false);
        } catch (RemoteException e) {
        }
    }
}