public void selectBackupTransportAsync(ComponentName transportComponent, ISelectBackupTransportCallback listener){
    mContext.enforceCallingOrSelfPermission(android.Manifest.permission.BACKUP, "selectBackupTransportAsync");
    final long oldId = Binder.clearCallingIdentity();
    try {
        String transportString = transportComponent.flattenToShortString();
        Slog.v(TAG, addUserIdToLogMessage(mUserId, "selectBackupTransportAsync(transport = " + transportString + ")"));
        mBackupHandler.post(() -> {
            String transportName = null;
            int result = mTransportManager.registerAndSelectTransport(transportComponent);
            if (result == BackupManager.SUCCESS) {
                try {
                    transportName = mTransportManager.getTransportName(transportComponent);
                    updateStateForTransport(transportName);
                } catch (TransportNotRegisteredException e) {
                    Slog.e(TAG, addUserIdToLogMessage(mUserId, "Transport got unregistered"));
                    result = BackupManager.ERROR_TRANSPORT_UNAVAILABLE;
                }
            }
            try {
                if (transportName != null) {
                    listener.onSuccess(transportName);
                } else {
                    listener.onFailure(result);
                }
            } catch (RemoteException e) {
                Slog.e(TAG, addUserIdToLogMessage(mUserId, "ISelectBackupTransportCallback listener not" + " available"));
            }
        });
    } finally {
        Binder.restoreCallingIdentity(oldId);
    }
}