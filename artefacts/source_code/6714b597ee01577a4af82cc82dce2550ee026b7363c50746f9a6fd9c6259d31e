public static void dump(PriorityDumper dumper, FileDescriptor fd, PrintWriter pw, String[] args){
    boolean asProto = false;
    @PriorityType
    int priority = PRIORITY_TYPE_INVALID;
    if (args == null) {
        dumper.dump(fd, pw, args, asProto);
        return;
    }
    String[] strippedArgs = new String[args.length];
    int strippedCount = 0;
    for (int argIndex = 0; argIndex < args.length; argIndex++) {
        if (args[argIndex].equals(PROTO_ARG)) {
            asProto = true;
        } else if (args[argIndex].equals(PRIORITY_ARG)) {
            if (argIndex + 1 < args.length) {
                argIndex++;
                priority = getPriorityType(args[argIndex]);
            }
        } else {
            strippedArgs[strippedCount++] = args[argIndex];
        }
    }
    if (strippedCount < args.length) {
        strippedArgs = Arrays.copyOf(strippedArgs, strippedCount);
    }
    switch(priority) {
        case PRIORITY_TYPE_CRITICAL:
            {
                dumper.dumpCritical(fd, pw, strippedArgs, asProto);
                return;
            }
        case PRIORITY_TYPE_HIGH:
            {
                dumper.dumpHigh(fd, pw, strippedArgs, asProto);
                return;
            }
        case PRIORITY_TYPE_NORMAL:
            {
                dumper.dumpNormal(fd, pw, strippedArgs, asProto);
                return;
            }
        default:
            {
                dumper.dump(fd, pw, strippedArgs, asProto);
                return;
            }
    }
}