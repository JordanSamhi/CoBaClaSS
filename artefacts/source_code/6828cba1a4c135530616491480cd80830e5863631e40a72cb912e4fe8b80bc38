public void setVirtualDisplayProperties(Vr2dDisplayProperties displayProperties){
    synchronized (mVdLock) {
        if (DEBUG) {
            Log.i(TAG, "VD setVirtualDisplayProperties: " + displayProperties.toString());
        }
        int width = displayProperties.getWidth();
        int height = displayProperties.getHeight();
        int dpi = displayProperties.getDpi();
        boolean resized = false;
        if (width < MIN_VR_DISPLAY_WIDTH || height < MIN_VR_DISPLAY_HEIGHT || dpi < MIN_VR_DISPLAY_DPI) {
            Log.i(TAG, "Ignoring Width/Height/Dpi values of " + width + "," + height + "," + dpi);
        } else {
            Log.i(TAG, "Setting width/height/dpi to " + width + "," + height + "," + dpi);
            mVirtualDisplayWidth = width;
            mVirtualDisplayHeight = height;
            mVirtualDisplayDpi = dpi;
            resized = true;
        }
        if ((displayProperties.getAddedFlags() & Vr2dDisplayProperties.FLAG_VIRTUAL_DISPLAY_ENABLED) == Vr2dDisplayProperties.FLAG_VIRTUAL_DISPLAY_ENABLED) {
            mIsVirtualDisplayAllowed = true;
        } else if ((displayProperties.getRemovedFlags() & Vr2dDisplayProperties.FLAG_VIRTUAL_DISPLAY_ENABLED) == Vr2dDisplayProperties.FLAG_VIRTUAL_DISPLAY_ENABLED) {
            mIsVirtualDisplayAllowed = false;
        }
        if (mVirtualDisplay != null && resized && mIsVirtualDisplayAllowed) {
            mVirtualDisplay.resize(mVirtualDisplayWidth, mVirtualDisplayHeight, mVirtualDisplayDpi);
            ImageReader oldImageReader = mImageReader;
            mImageReader = null;
            startImageReader();
            oldImageReader.close();
        }
        updateVirtualDisplay();
    }
}