public void startNattKeepalive(@Nullable NetworkAgentInfo nai, @Nullable FileDescriptor fd, int intervalSeconds, @NonNull ISocketKeepaliveCallback cb, @NonNull String srcAddrString, int srcPort, @NonNull String dstAddrString, int dstPort){
    if (nai == null) {
        notifyErrorCallback(cb, ERROR_INVALID_NETWORK);
        return;
    }
    InetAddress srcAddress, dstAddress;
    try {
        srcAddress = NetworkUtils.numericToInetAddress(srcAddrString);
        dstAddress = NetworkUtils.numericToInetAddress(dstAddrString);
    } catch (IllegalArgumentException e) {
        notifyErrorCallback(cb, ERROR_INVALID_IP_ADDRESS);
        return;
    }
    KeepalivePacketData packet;
    try {
        packet = NattKeepalivePacketData.nattKeepalivePacket(srcAddress, srcPort, dstAddress, NATT_PORT);
    } catch (InvalidPacketException e) {
        notifyErrorCallback(cb, e.getError());
        return;
    }
    KeepaliveInfo ki = null;
    try {
        ki = new KeepaliveInfo(cb, nai, packet, intervalSeconds, KeepaliveInfo.TYPE_NATT, fd);
    } catch (InvalidSocketException | IllegalArgumentException | SecurityException e) {
        Log.e(TAG, "Fail to construct keepalive", e);
        notifyErrorCallback(cb, ERROR_INVALID_SOCKET);
        return;
    }
    Log.d(TAG, "Created keepalive: " + ki.toString());
    mConnectivityServiceHandler.obtainMessage(NetworkAgent.CMD_START_SOCKET_KEEPALIVE, ki).sendToTarget();
}