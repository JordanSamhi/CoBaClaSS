public void dump(String outerPrefix, PrintWriter pw){
    pw.print(outerPrefix);
    pw.println("AutofillManager:");
    final String pfx = outerPrefix + "  ";
    pw.print(pfx);
    pw.print("sessionId: ");
    pw.println(mSessionId);
    pw.print(pfx);
    pw.print("state: ");
    pw.println(getStateAsStringLocked());
    pw.print(pfx);
    pw.print("context: ");
    pw.println(mContext);
    final AutofillClient client = getClient();
    if (client != null) {
        pw.print(pfx);
        pw.print("client: ");
        pw.print(client);
        pw.print(" (");
        pw.print(client.autofillClientGetActivityToken());
        pw.println(')');
    }
    pw.print(pfx);
    pw.print("enabled: ");
    pw.println(mEnabled);
    pw.print(pfx);
    pw.print("enabledAugmentedOnly: ");
    pw.println(mForAugmentedAutofillOnly);
    pw.print(pfx);
    pw.print("hasService: ");
    pw.println(mService != null);
    pw.print(pfx);
    pw.print("hasCallback: ");
    pw.println(mCallback != null);
    pw.print(pfx);
    pw.print("onInvisibleCalled ");
    pw.println(mOnInvisibleCalled);
    pw.print(pfx);
    pw.print("last autofilled data: ");
    pw.println(mLastAutofilledData);
    pw.print(pfx);
    pw.print("id of last fill UI shown: ");
    pw.println(mIdShownFillUi);
    pw.print(pfx);
    pw.print("tracked views: ");
    if (mTrackedViews == null) {
        pw.println("null");
    } else {
        final String pfx2 = pfx + "  ";
        pw.println();
        pw.print(pfx2);
        pw.print("visible:");
        pw.println(mTrackedViews.mVisibleTrackedIds);
        pw.print(pfx2);
        pw.print("invisible:");
        pw.println(mTrackedViews.mInvisibleTrackedIds);
    }
    pw.print(pfx);
    pw.print("fillable ids: ");
    pw.println(mFillableIds);
    pw.print(pfx);
    pw.print("entered ids: ");
    pw.println(mEnteredIds);
    if (mEnteredForAugmentedAutofillIds != null) {
        pw.print(pfx);
        pw.print("entered ids for augmented autofill: ");
        pw.println(mEnteredForAugmentedAutofillIds);
    }
    if (mForAugmentedAutofillOnly) {
        pw.print(pfx);
        pw.println("For Augmented Autofill Only");
    }
    pw.print(pfx);
    pw.print("save trigger id: ");
    pw.println(mSaveTriggerId);
    pw.print(pfx);
    pw.print("save on finish(): ");
    pw.println(mSaveOnFinish);
    if (mOptions != null) {
        pw.print(pfx);
        pw.print("options: ");
        mOptions.dumpShort(pw);
        pw.println();
    }
    pw.print(pfx);
    pw.print("compat mode enabled: ");
    synchronized (mLock) {
        if (mCompatibilityBridge != null) {
            final String pfx2 = pfx + "  ";
            pw.println("true");
            pw.print(pfx2);
            pw.print("windowId: ");
            pw.println(mCompatibilityBridge.mFocusedWindowId);
            pw.print(pfx2);
            pw.print("nodeId: ");
            pw.println(mCompatibilityBridge.mFocusedNodeId);
            pw.print(pfx2);
            pw.print("virtualId: ");
            pw.println(AccessibilityNodeInfo.getVirtualDescendantId(mCompatibilityBridge.mFocusedNodeId));
            pw.print(pfx2);
            pw.print("focusedBounds: ");
            pw.println(mCompatibilityBridge.mFocusedBounds);
        } else {
            pw.println("false");
        }
    }
    pw.print(pfx);
    pw.print("debug: ");
    pw.print(sDebug);
    pw.print(" verbose: ");
    pw.println(sVerbose);
}