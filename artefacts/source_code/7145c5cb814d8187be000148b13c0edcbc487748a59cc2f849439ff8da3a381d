public ArrayList<KernelCpuThreadReader.ProcessCpuUsage> getProcessCpuUsageDiffed(){
    Map<ThreadKey, int[]> newCpuUsage = null;
    try {
        final ArrayList<KernelCpuThreadReader.ProcessCpuUsage> processCpuUsages = mReader.getProcessCpuUsage();
        newCpuUsage = createCpuUsageMap(processCpuUsages);
        if (mPreviousCpuUsage == null) {
            return null;
        }
        for (int i = 0; i < processCpuUsages.size(); i++) {
            KernelCpuThreadReader.ProcessCpuUsage processCpuUsage = processCpuUsages.get(i);
            changeToDiffs(mPreviousCpuUsage, processCpuUsage);
            applyThresholding(processCpuUsage);
        }
        return processCpuUsages;
    } finally {
        mPreviousCpuUsage = newCpuUsage;
    }
}