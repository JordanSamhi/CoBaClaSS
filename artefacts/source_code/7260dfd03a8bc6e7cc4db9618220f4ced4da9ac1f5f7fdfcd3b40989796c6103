public void connect(int flags){
    synchronized (mLock) {
        throwIfConnectedLocked();
        if (mIsConnecting) {
            return;
        }
        mIsConnecting = true;
        mRemoteCallbackThread = new HandlerThread("UiAutomation");
        mRemoteCallbackThread.start();
        mClient = new IAccessibilityServiceClientImpl(mRemoteCallbackThread.getLooper());
    }
    try {
        mUiAutomationConnection.connect(mClient, flags);
        mFlags = flags;
    } catch (RemoteException re) {
        throw new RuntimeException("Error while connecting " + this, re);
    }
    synchronized (mLock) {
        final long startTimeMillis = SystemClock.uptimeMillis();
        try {
            while (true) {
                if (isConnectedLocked()) {
                    break;
                }
                final long elapsedTimeMillis = SystemClock.uptimeMillis() - startTimeMillis;
                final long remainingTimeMillis = CONNECT_TIMEOUT_MILLIS - elapsedTimeMillis;
                if (remainingTimeMillis <= 0) {
                    throw new RuntimeException("Error while connecting " + this);
                }
                try {
                    mLock.wait(remainingTimeMillis);
                } catch (InterruptedException ie) {
                }
            }
        } finally {
            mIsConnecting = false;
        }
    }
}