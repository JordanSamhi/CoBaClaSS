public static Comparator<IpPrefix> lengthComparator(){
    return new Comparator<IpPrefix>() {

        @Override
        public int compare(IpPrefix prefix1, IpPrefix prefix2) {
            if (prefix1.isIPv4()) {
                if (prefix2.isIPv6())
                    return -1;
            } else {
                if (prefix2.isIPv4())
                    return 1;
            }
            final int p1len = prefix1.getPrefixLength();
            final int p2len = prefix2.getPrefixLength();
            if (p1len < p2len)
                return -1;
            if (p2len < p1len)
                return 1;
            final byte[] a1 = prefix1.address;
            final byte[] a2 = prefix2.address;
            final int len = a1.length < a2.length ? a1.length : a2.length;
            for (int i = 0; i < len; ++i) {
                if (a1[i] < a2[i])
                    return -1;
                if (a1[i] > a2[i])
                    return 1;
            }
            if (a2.length < len)
                return 1;
            if (a1.length < len)
                return -1;
            return 0;
        }
    };
}