public static String readTerminatedProcFile(String path, byte terminator){
    final StrictMode.ThreadPolicy savedPolicy = StrictMode.allowThreadDiskReads();
    try (FileInputStream is = new FileInputStream(path)) {
        ByteArrayOutputStream byteStream = null;
        final byte[] buffer = new byte[READ_SIZE];
        while (true) {
            final int len = is.read(buffer);
            if (len <= 0) {
                break;
            }
            int terminatingIndex = -1;
            for (int i = 0; i < len; i++) {
                if (buffer[i] == terminator) {
                    terminatingIndex = i;
                    break;
                }
            }
            final boolean foundTerminator = terminatingIndex != -1;
            if (foundTerminator && byteStream == null) {
                return new String(buffer, 0, terminatingIndex);
            }
            if (byteStream == null) {
                byteStream = new ByteArrayOutputStream(READ_SIZE);
            }
            byteStream.write(buffer, 0, foundTerminator ? terminatingIndex : len);
            if (foundTerminator) {
                break;
            }
        }
        if (byteStream == null) {
            return "";
        }
        return byteStream.toString();
    } catch (IOException e) {
        if (DEBUG) {
            Slog.d(TAG, "Failed to open proc file", e);
        }
        return null;
    } finally {
        StrictMode.setThreadPolicy(savedPolicy);
    }
}