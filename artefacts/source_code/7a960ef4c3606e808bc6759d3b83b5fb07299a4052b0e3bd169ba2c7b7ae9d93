public void notifyBarringInfoChanged(int phoneId, int subId, @NonNull BarringInfo barringInfo){
    if (!checkNotifyPermission("notifyBarringInfo()")) {
        return;
    }
    if (barringInfo == null) {
        log("Received null BarringInfo for subId=" + subId + ", phoneId=" + phoneId);
        mBarringInfo.set(phoneId, new BarringInfo());
        return;
    }
    synchronized (mRecords) {
        if (validatePhoneId(phoneId)) {
            mBarringInfo.set(phoneId, barringInfo);
            BarringInfo biNoLocation = barringInfo.createLocationInfoSanitizedCopy();
            if (VDBG)
                log("listen: call onBarringInfoChanged=" + barringInfo);
            for (Record r : mRecords) {
                if (r.matchPhoneStateListenerEvent(PhoneStateListener.LISTEN_BARRING_INFO) && idMatch(r.subId, subId, phoneId)) {
                    try {
                        if (DBG_LOC) {
                            log("notifyBarringInfo: mBarringInfo=" + barringInfo + " r=" + r);
                        }
                        r.callback.onBarringInfoChanged(checkFineLocationAccess(r, Build.VERSION_CODES.BASE) ? barringInfo : biNoLocation);
                    } catch (RemoteException ex) {
                        mRemoveList.add(r.binder);
                    }
                }
            }
        }
        handleRemoveListLocked();
    }
}