public List<SubscriptionInfo> getSubscriptionsInGroup(ParcelUuid groupUuid, String callingPackage, String callingFeatureId){
    long identity = Binder.clearCallingIdentity();
    List<SubscriptionInfo> subInfoList;
    try {
        subInfoList = getAllSubInfoList(mContext.getOpPackageName(), mContext.getAttributionTag());
        if (groupUuid == null || subInfoList == null || subInfoList.isEmpty()) {
            return new ArrayList<>();
        }
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
    return subInfoList.stream().filter(info -> {
        if (!groupUuid.equals(info.getGroupUuid()))
            return false;
        int subId = info.getSubscriptionId();
        return TelephonyPermissions.checkCallingOrSelfReadPhoneState(mContext, subId, callingPackage, callingFeatureId, "getSubscriptionsInGroup") || info.canManageSubscription(mContext, callingPackage);
    }).map(subscriptionInfo -> conditionallyRemoveIdentifiers(subscriptionInfo, callingPackage, callingFeatureId, "getSubscriptionsInGroup")).collect(Collectors.toList());
}