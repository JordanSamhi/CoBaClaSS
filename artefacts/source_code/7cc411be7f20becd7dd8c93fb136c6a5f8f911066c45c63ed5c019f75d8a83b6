public static List<Pair<Locale, String>> getProviderNames(X509Certificate providerCert){
    List<Pair<Locale, String>> providerNames = new ArrayList<>();
    Pair<Locale, String> providerName;
    if (providerCert == null) {
        return providerNames;
    }
    try {
        Collection<List<?>> col = providerCert.getSubjectAlternativeNames();
        if (col == null) {
            return providerNames;
        }
        for (List<?> entry : col) {
            if (entry == null || entry.size() != ENTRY_COUNT) {
                continue;
            }
            if ((Integer) entry.get(0) != OTHER_NAME) {
                continue;
            }
            if (!(entry.toArray()[1] instanceof byte[])) {
                continue;
            }
            byte[] octets = (byte[]) entry.toArray()[1];
            ASN1Encodable obj = new ASN1InputStream(octets).readObject();
            if (!(obj instanceof DERTaggedObject)) {
                continue;
            }
            DERTaggedObject taggedObject = (DERTaggedObject) obj;
            ASN1Encodable encodedObject = taggedObject.getObject();
            if (!(encodedObject instanceof ASN1Sequence)) {
                continue;
            }
            ASN1Sequence innerSequence = (ASN1Sequence) (encodedObject);
            ASN1Encodable innerObject = innerSequence.getObjectAt(0);
            if (!(innerObject instanceof ASN1ObjectIdentifier)) {
                continue;
            }
            ASN1ObjectIdentifier oid = ASN1ObjectIdentifier.getInstance(innerObject);
            if (!oid.getId().equals(ID_WFA_OID_HOTSPOT_FRIENDLYNAME)) {
                continue;
            }
            for (int index = 1; index < innerSequence.size(); index++) {
                innerObject = innerSequence.getObjectAt(index);
                if (!(innerObject instanceof DERTaggedObject)) {
                    continue;
                }
                DERTaggedObject innerSequenceObj = (DERTaggedObject) innerObject;
                ASN1Encodable innerSequenceEncodedObject = innerSequenceObj.getObject();
                if (!(innerSequenceEncodedObject instanceof DERUTF8String)) {
                    continue;
                }
                DERUTF8String providerNameUtf8 = (DERUTF8String) innerSequenceEncodedObject;
                providerName = getFriendlyName(providerNameUtf8.getString());
                if (providerName != null) {
                    providerNames.add(providerName);
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return providerNames;
}