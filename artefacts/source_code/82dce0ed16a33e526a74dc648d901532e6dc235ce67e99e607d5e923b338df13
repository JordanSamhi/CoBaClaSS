public ParcelUuid createSubscriptionGroup(int[] subIdList, String callingPackage){
    if (subIdList == null || subIdList.length == 0) {
        throw new IllegalArgumentException("Invalid subIdList " + subIdList);
    }
    mAppOps.checkPackage(Binder.getCallingUid(), callingPackage);
    if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.MODIFY_PHONE_STATE) != PERMISSION_GRANTED && !checkCarrierPrivilegeOnSubList(subIdList, callingPackage)) {
        throw new SecurityException("CreateSubscriptionGroup needs MODIFY_PHONE_STATE or" + " carrier privilege permission on all specified subscriptions");
    }
    long identity = Binder.clearCallingIdentity();
    try {
        ParcelUuid groupUUID = new ParcelUuid(UUID.randomUUID());
        ContentValues value = new ContentValues();
        value.put(SubscriptionManager.GROUP_UUID, groupUUID.toString());
        value.put(SubscriptionManager.GROUP_OWNER, callingPackage);
        int result = mContext.getContentResolver().update(SubscriptionManager.CONTENT_URI, value, getSelectionForSubIdList(subIdList), null);
        if (DBG)
            logdl("createSubscriptionGroup update DB result: " + result);
        refreshCachedActiveSubscriptionInfoList();
        notifySubscriptionInfoChanged();
        MultiSimSettingController.getInstance().notifySubscriptionGroupChanged(groupUUID);
        return groupUUID;
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
}