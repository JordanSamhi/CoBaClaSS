public void handleMessage(Message msg){
    AsyncResult ar;
    switch(msg.what) {
        case EVENT_START_DATA_DOWNLOAD:
            handleDataDownload((SmsMessage) msg.obj);
            break;
        case EVENT_SEND_ENVELOPE_RESPONSE:
            ar = (AsyncResult) msg.obj;
            if (ar.exception != null) {
                Rlog.e(TAG, "UICC Send Envelope failure, exception: " + ar.exception);
                acknowledgeSmsWithError(CommandsInterface.GSM_SMS_FAIL_CAUSE_USIM_DATA_DOWNLOAD_ERROR);
                return;
            }
            int[] dcsPid = (int[]) ar.userObj;
            sendSmsAckForEnvelopeResponse((IccIoResult) ar.result, dcsPid[0], dcsPid[1]);
            break;
        case EVENT_WRITE_SMS_COMPLETE:
            ar = (AsyncResult) msg.obj;
            if (ar.exception == null) {
                Rlog.d(TAG, "Successfully wrote SMS-PP message to UICC");
                mCi.acknowledgeLastIncomingGsmSms(true, 0, null);
            } else {
                Rlog.d(TAG, "Failed to write SMS-PP message to UICC", ar.exception);
                mCi.acknowledgeLastIncomingGsmSms(false, CommandsInterface.GSM_SMS_FAIL_CAUSE_UNSPECIFIED_ERROR, null);
            }
            break;
        default:
            Rlog.e(TAG, "Ignoring unexpected message, what=" + msg.what);
    }
}