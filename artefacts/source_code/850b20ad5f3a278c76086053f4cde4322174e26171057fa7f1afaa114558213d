public static void writePrinterCapabilities(@NonNull Context context, @NonNull DualDumpOutputStream proto, String idName, long id, @NonNull PrinterCapabilitiesInfo cap){
    long token = proto.start(idName, id);
    writeMargins(proto, "min_margins", PrinterCapabilitiesProto.MIN_MARGINS, cap.getMinMargins());
    int numMediaSizes = cap.getMediaSizes().size();
    for (int i = 0; i < numMediaSizes; i++) {
        writeMediaSize(context, proto, "media_sizes", PrinterCapabilitiesProto.MEDIA_SIZES, cap.getMediaSizes().get(i));
    }
    int numResolutions = cap.getResolutions().size();
    for (int i = 0; i < numResolutions; i++) {
        writeResolution(proto, "resolutions", PrinterCapabilitiesProto.RESOLUTIONS, cap.getResolutions().get(i));
    }
    if ((cap.getColorModes() & PrintAttributes.COLOR_MODE_MONOCHROME) != 0) {
        proto.write("color_modes", PrinterCapabilitiesProto.COLOR_MODES, PrintAttributesProto.COLOR_MODE_MONOCHROME);
    }
    if ((cap.getColorModes() & PrintAttributes.COLOR_MODE_COLOR) != 0) {
        proto.write("color_modes", PrinterCapabilitiesProto.COLOR_MODES, PrintAttributesProto.COLOR_MODE_COLOR);
    }
    if ((cap.getDuplexModes() & PrintAttributes.DUPLEX_MODE_NONE) != 0) {
        proto.write("duplex_modes", PrinterCapabilitiesProto.DUPLEX_MODES, PrintAttributesProto.DUPLEX_MODE_NONE);
    }
    if ((cap.getDuplexModes() & PrintAttributes.DUPLEX_MODE_LONG_EDGE) != 0) {
        proto.write("duplex_modes", PrinterCapabilitiesProto.DUPLEX_MODES, PrintAttributesProto.DUPLEX_MODE_LONG_EDGE);
    }
    if ((cap.getDuplexModes() & PrintAttributes.DUPLEX_MODE_SHORT_EDGE) != 0) {
        proto.write("duplex_modes", PrinterCapabilitiesProto.DUPLEX_MODES, PrintAttributesProto.DUPLEX_MODE_SHORT_EDGE);
    }
    proto.end(token);
}