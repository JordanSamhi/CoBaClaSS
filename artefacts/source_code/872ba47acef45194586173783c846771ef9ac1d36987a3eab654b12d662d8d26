public long start(long fieldId) throws IOException{
    assertFreshData();
    assertFieldNumber(fieldId);
    assertWireType(WIRE_TYPE_LENGTH_DELIMITED);
    int messageSize = (int) readVarint();
    if (mExpectedObjectTokenStack == null) {
        mExpectedObjectTokenStack = new ArrayList<>();
    }
    if (++mDepth == mExpectedObjectTokenStack.size()) {
        mExpectedObjectTokenStack.add(makeToken(0, (fieldId & FIELD_COUNT_REPEATED) == FIELD_COUNT_REPEATED, mDepth, (int) fieldId, getOffset() + messageSize));
    } else {
        mExpectedObjectTokenStack.set(mDepth, makeToken(0, (fieldId & FIELD_COUNT_REPEATED) == FIELD_COUNT_REPEATED, mDepth, (int) fieldId, getOffset() + messageSize));
    }
    if (mDepth > 0 && getOffsetFromToken(mExpectedObjectTokenStack.get(mDepth)) > getOffsetFromToken(mExpectedObjectTokenStack.get(mDepth - 1))) {
        throw new ProtoParseException("Embedded Object (" + token2String(mExpectedObjectTokenStack.get(mDepth)) + ") ends after of parent Objects's (" + token2String(mExpectedObjectTokenStack.get(mDepth - 1)) + ") end" + dumpDebugData());
    }
    mState &= ~STATE_STARTED_FIELD_READ;
    return mExpectedObjectTokenStack.get(mDepth);
}