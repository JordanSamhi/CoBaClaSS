public void dispatchVolumeKeyEventToSessionAsSystemService(String packageName, String opPackageName, MediaSession.Token sessionToken, KeyEvent keyEvent){
    int pid = Binder.getCallingPid();
    int uid = Binder.getCallingUid();
    final long token = Binder.clearCallingIdentity();
    try {
        synchronized (mLock) {
            MediaSessionRecord record = getMediaSessionRecordLocked(sessionToken);
            if (DEBUG_KEY_EVENT) {
                Log.d(TAG, "dispatchVolumeKeyEventToSessionAsSystemService, pkg=" + packageName + ", opPkg=" + opPackageName + ", pid=" + pid + ", uid=" + uid + ", sessionToken=" + sessionToken + ", event=" + keyEvent + ", session=" + record);
            }
            if (record == null) {
                Log.w(TAG, "Failed to find session to dispatch key event, token=" + sessionToken + ". Fallbacks to the default handling.");
                dispatchVolumeKeyEventLocked(packageName, opPackageName, pid, uid, true, keyEvent, AudioManager.USE_DEFAULT_STREAM_TYPE, false);
                return;
            }
            switch(keyEvent.getAction()) {
                case KeyEvent.ACTION_DOWN:
                    {
                        int direction = 0;
                        switch(keyEvent.getKeyCode()) {
                            case KeyEvent.KEYCODE_VOLUME_UP:
                                direction = AudioManager.ADJUST_RAISE;
                                break;
                            case KeyEvent.KEYCODE_VOLUME_DOWN:
                                direction = AudioManager.ADJUST_LOWER;
                                break;
                            case KeyEvent.KEYCODE_VOLUME_MUTE:
                                direction = AudioManager.ADJUST_TOGGLE_MUTE;
                                break;
                        }
                        record.adjustVolume(packageName, opPackageName, pid, uid, true, direction, AudioManager.FLAG_SHOW_UI, false);
                        break;
                    }
                case KeyEvent.ACTION_UP:
                    {
                        final int flags = AudioManager.FLAG_PLAY_SOUND | AudioManager.FLAG_VIBRATE | AudioManager.FLAG_FROM_KEY;
                        record.adjustVolume(packageName, opPackageName, pid, uid, true, 0, flags, false);
                    }
            }
        }
    } finally {
        Binder.restoreCallingIdentity(token);
    }
}