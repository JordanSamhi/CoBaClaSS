public void waitForNetworkStateUpdate(long procStateSeq){
    final int callingUid = Binder.getCallingUid();
    if (DEBUG_NETWORK) {
        Slog.d(TAG_NETWORK, "Called from " + callingUid + " to wait for seq: " + procStateSeq);
    }
    UidRecord record;
    synchronized (this) {
        record = mProcessList.getUidRecordLocked(callingUid);
        if (record == null) {
            return;
        }
    }
    synchronized (record.networkStateLock) {
        if (record.lastDispatchedProcStateSeq < procStateSeq) {
            if (DEBUG_NETWORK) {
                Slog.d(TAG_NETWORK, "Uid state change for seq no. " + procStateSeq + " is not " + "dispatched to NPMS yet, so don't wait. Uid: " + callingUid + " lastProcStateSeqDispatchedToObservers: " + record.lastDispatchedProcStateSeq);
            }
            return;
        }
        if (record.curProcStateSeq > procStateSeq) {
            if (DEBUG_NETWORK) {
                Slog.d(TAG_NETWORK, "Ignore the wait requests for older seq numbers. Uid: " + callingUid + ", curProcStateSeq: " + record.curProcStateSeq + ", procStateSeq: " + procStateSeq);
            }
            return;
        }
        if (record.lastNetworkUpdatedProcStateSeq >= procStateSeq) {
            if (DEBUG_NETWORK) {
                Slog.d(TAG_NETWORK, "Network rules have been already updated for seq no. " + procStateSeq + ", so no need to wait. Uid: " + callingUid + ", lastProcStateSeqWithUpdatedNetworkState: " + record.lastNetworkUpdatedProcStateSeq);
            }
            return;
        }
        try {
            if (DEBUG_NETWORK) {
                Slog.d(TAG_NETWORK, "Starting to wait for the network rules update." + " Uid: " + callingUid + " procStateSeq: " + procStateSeq);
            }
            final long startTime = SystemClock.uptimeMillis();
            record.waitingForNetwork = true;
            record.networkStateLock.wait(mWaitForNetworkTimeoutMs);
            record.waitingForNetwork = false;
            final long totalTime = SystemClock.uptimeMillis() - startTime;
            if (totalTime >= mWaitForNetworkTimeoutMs || DEBUG_NETWORK) {
                Slog.w(TAG_NETWORK, "Total time waited for network rules to get updated: " + totalTime + ". Uid: " + callingUid + " procStateSeq: " + procStateSeq + " UidRec: " + record + " validateUidRec: " + mValidateUids.get(callingUid));
            }
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}