public void recordNdpStatus(int status, boolean isOutOfBand, long startTimestamp){
    synchronized (mLock) {
        if (isOutOfBand) {
            addNanHalStatusToHistogram(status, mOutOfBandNdpStatusData);
        } else {
            addNanHalStatusToHistogram(status, mInBandNdpStatusData);
        }
        if (status == NanStatusType.SUCCESS) {
            long creationTime = mClock.getElapsedSinceBootMillis() - startTimestamp;
            MetricsUtils.addValueToLogHistogram(creationTime, mNdpCreationTimeDuration, DURATION_LOG_HISTOGRAM);
            mNdpCreationTimeMin = (mNdpCreationTimeMin == -1) ? creationTime : Math.min(mNdpCreationTimeMin, creationTime);
            mNdpCreationTimeMax = Math.max(mNdpCreationTimeMax, creationTime);
            mNdpCreationTimeSum += creationTime;
            mNdpCreationTimeSumSq += creationTime * creationTime;
            mNdpCreationTimeNumSamples += 1;
        }
    }
}