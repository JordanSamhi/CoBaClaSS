public byte[] decrypt(@NonNull EncryptedData encryptedData){
    byte[] decryptedData = null;
    try {
        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);
        GCMParameterSpec spec = new GCMParameterSpec(GCM_TAG_LENGTH, encryptedData.getIv());
        SecretKey secretKeyReference = getOrCreateSecretKey(getKeyAlias());
        if (secretKeyReference != null) {
            cipher.init(Cipher.DECRYPT_MODE, secretKeyReference, spec);
            decryptedData = cipher.doFinal(encryptedData.getEncryptedData());
        }
    } catch (NoSuchAlgorithmException e) {
        reportException(e, "decrypt could not find cipher algorithm " + CIPHER_ALGORITHM);
    } catch (NoSuchPaddingException e) {
        reportException(e, "decrypt could not find padding algorithm");
    } catch (IllegalBlockSizeException e) {
        reportException(e, "decrypt had a illegal block size");
    } catch (BadPaddingException e) {
        reportException(e, "decrypt had bad padding");
    } catch (InvalidKeyException e) {
        reportException(e, "decrypt had an invalid key");
    } catch (InvalidAlgorithmParameterException e) {
        reportException(e, "decrypt had an invalid algorithm parameter");
    }
    return decryptedData;
}