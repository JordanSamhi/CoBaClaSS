public void start(Context context, Looper looper, WifiAwareMetrics awareMetrics, WifiPermissionsUtil wifiPermissionsUtil, WifiPermissionsWrapper permissionsWrapper, Clock clock, NetdWrapper netdWrapper){
    Log.i(TAG, "start()");
    mContext = context;
    mAwareMetrics = awareMetrics;
    mWifiPermissionsUtil = wifiPermissionsUtil;
    mSm = new WifiAwareStateMachine(TAG, looper);
    mSm.setDbg(VDBG);
    mSm.start();
    mDataPathMgr = new WifiAwareDataPathStateManager(this, clock);
    mDataPathMgr.start(mContext, mSm.getHandler().getLooper(), awareMetrics, wifiPermissionsUtil, permissionsWrapper, netdWrapper);
    mPowerManager = mContext.getSystemService(PowerManager.class);
    mLocationManager = (LocationManager) mContext.getSystemService(Context.LOCATION_SERVICE);
    mWifiManager = (WifiManager) mContext.getSystemService(Context.WIFI_SERVICE);
    IntentFilter intentFilter = new IntentFilter();
    intentFilter.addAction(Intent.ACTION_SCREEN_ON);
    intentFilter.addAction(Intent.ACTION_SCREEN_OFF);
    intentFilter.addAction(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED);
    mContext.registerReceiver(new BroadcastReceiver() {

        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if (mDbg)
                Log.v(TAG, "BroadcastReceiver: action=" + action);
            if (action.equals(Intent.ACTION_SCREEN_ON) || action.equals(Intent.ACTION_SCREEN_OFF)) {
                reconfigure();
            }
            if (action.equals(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED)) {
                if (mSettableParameters.get(PARAM_ON_IDLE_DISABLE_AWARE) != 0) {
                    if (mPowerManager.isDeviceIdleMode()) {
                        disableUsage();
                    } else {
                        enableUsage();
                    }
                } else {
                    reconfigure();
                }
            }
        }
    }, intentFilter);
    intentFilter = new IntentFilter();
    intentFilter.addAction(LocationManager.MODE_CHANGED_ACTION);
    mContext.registerReceiver(new BroadcastReceiver() {

        @Override
        public void onReceive(Context context, Intent intent) {
            if (mDbg)
                Log.v(TAG, "onReceive: MODE_CHANGED_ACTION: intent=" + intent);
            if (wifiPermissionsUtil.isLocationModeEnabled()) {
                enableUsage();
            } else {
                disableUsage();
            }
        }
    }, intentFilter);
    intentFilter = new IntentFilter();
    intentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
    mContext.registerReceiver(new BroadcastReceiver() {

        @Override
        public void onReceive(Context context, Intent intent) {
            boolean isEnabled = intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN) == WifiManager.WIFI_STATE_ENABLED;
            if (isEnabled) {
                enableUsage();
            } else {
                disableUsage();
            }
        }
    }, intentFilter);
}