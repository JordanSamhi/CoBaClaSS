public void onDeviceFound(byte[] srcAddress, byte[] p2pDeviceAddress, byte[] primaryDeviceType, String deviceName, short configMethods, byte deviceCapabilities, int groupCapabilities, byte[] wfdDeviceInfo){
    WifiP2pDevice device = new WifiP2pDevice();
    device.deviceName = deviceName;
    if (deviceName == null) {
        Log.e(TAG, "Missing device name.");
        return;
    }
    try {
        device.deviceAddress = NativeUtil.macAddressFromByteArray(p2pDeviceAddress);
    } catch (Exception e) {
        Log.e(TAG, "Could not decode device address.", e);
        return;
    }
    try {
        device.primaryDeviceType = NativeUtil.wpsDevTypeStringFromByteArray(primaryDeviceType);
    } catch (Exception e) {
        Log.e(TAG, "Could not encode device primary type.", e);
        return;
    }
    device.deviceCapability = deviceCapabilities;
    device.groupCapability = groupCapabilities;
    device.wpsConfigMethodsSupported = configMethods;
    device.status = WifiP2pDevice.AVAILABLE;
    if (wfdDeviceInfo != null && wfdDeviceInfo.length >= 6) {
        device.wfdInfo = new WifiP2pWfdInfo(((wfdDeviceInfo[0] & 0xFF) << 8) + (wfdDeviceInfo[1] & 0xFF), ((wfdDeviceInfo[2] & 0xFF) << 8) + (wfdDeviceInfo[3] & 0xFF), ((wfdDeviceInfo[4] & 0xFF) << 8) + (wfdDeviceInfo[5] & 0xFF));
    }
    logd("Device discovered on " + mInterface + ": " + device);
    mMonitor.broadcastP2pDeviceFound(mInterface, device);
}