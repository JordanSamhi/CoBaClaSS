public long pullStats(long startNs, int report, boolean doAgg, List<ParcelFileDescriptor> out){
    checkCallerIsSystemOrShell();
    long startMs = TimeUnit.MILLISECONDS.convert(startNs, TimeUnit.NANOSECONDS);
    final long identity = Binder.clearCallingIdentity();
    try {
        switch(report) {
            case REPORT_REMOTE_VIEWS:
                Slog.e(TAG, "pullStats REPORT_REMOTE_VIEWS from: " + startMs + "  wtih " + doAgg);
                PulledStats stats = mUsageStats.remoteViewStats(startMs, doAgg);
                if (stats != null) {
                    out.add(stats.toParcelFileDescriptor(report));
                    Slog.e(TAG, "exiting pullStats with: " + out.size());
                    long endNs = TimeUnit.NANOSECONDS.convert(stats.endTimeMs(), TimeUnit.MILLISECONDS);
                    return endNs;
                }
                Slog.e(TAG, "null stats for: " + report);
        }
    } catch (IOException e) {
        Slog.e(TAG, "exiting pullStats: on error", e);
        return 0;
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
    Slog.e(TAG, "exiting pullStats: bad request");
    return 0;
}