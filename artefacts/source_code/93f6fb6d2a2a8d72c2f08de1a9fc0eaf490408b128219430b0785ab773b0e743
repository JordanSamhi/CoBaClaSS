public static String flagsToString(Class<?> clazz, String prefix, int flags){
    final StringBuilder res = new StringBuilder();
    boolean flagsWasZero = flags == 0;
    for (Field field : clazz.getDeclaredFields()) {
        final int modifiers = field.getModifiers();
        if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers) && field.getType().equals(int.class) && field.getName().startsWith(prefix)) {
            try {
                final int value = field.getInt(null);
                if (value == 0 && flagsWasZero) {
                    return constNameWithoutPrefix(prefix, field);
                }
                if (value != 0 && (flags & value) == value) {
                    flags &= ~value;
                    res.append(constNameWithoutPrefix(prefix, field)).append('|');
                }
            } catch (IllegalAccessException ignored) {
            }
        }
    }
    if (flags != 0 || res.length() == 0) {
        res.append(Integer.toHexString(flags));
    } else {
        res.deleteCharAt(res.length() - 1);
    }
    return res.toString();
}