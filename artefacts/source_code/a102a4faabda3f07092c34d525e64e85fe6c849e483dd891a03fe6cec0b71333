public void start(){
    Log.d(TAG, "start()");
    if (getGoodSavedNetworksAndSuggestions().isEmpty()) {
        Log.i(TAG, "Ignore wakeup start since there are no good networks.");
        return;
    }
    mWifiInjector.getWifiScanner().registerScanListener(new HandlerExecutor(mHandler), mScanListener);
    if (mIsActive) {
        mWifiWakeMetrics.recordIgnoredStart();
        return;
    }
    setActive(true);
    if (isEnabledAndReady()) {
        mWakeupOnboarding.maybeShowNotification();
        List<ScanResult> scanResults = filterDfsScanResults(mWifiInjector.getWifiScanner().getSingleScanResults());
        Set<ScanResultMatchInfo> matchInfos = toMatchInfos(scanResults);
        matchInfos.retainAll(getGoodSavedNetworksAndSuggestions());
        long now = mClock.getElapsedSinceBootMillis();
        if (mLastDisconnectInfo != null && ((now - mLastDisconnectTimestampMillis) <= LAST_DISCONNECT_TIMEOUT_MILLIS)) {
            matchInfos.add(mLastDisconnectInfo);
            if (mVerboseLoggingEnabled) {
                Log.d(TAG, "Added last connected network to lock: " + mLastDisconnectInfo);
            }
        }
        if (mVerboseLoggingEnabled) {
            Log.d(TAG, "Saved networks in most recent scan:" + matchInfos);
        }
        mWifiWakeMetrics.recordStartEvent(matchInfos.size());
        mWakeupLock.setLock(matchInfos);
    }
}