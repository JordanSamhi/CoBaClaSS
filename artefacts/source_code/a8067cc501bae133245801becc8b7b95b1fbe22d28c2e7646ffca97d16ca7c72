public static int checkFieldId(long fieldId, long expectedFlags){
    final long fieldCount = fieldId & FIELD_COUNT_MASK;
    final long fieldType = fieldId & FIELD_TYPE_MASK;
    final long expectedCount = expectedFlags & FIELD_COUNT_MASK;
    final long expectedType = expectedFlags & FIELD_TYPE_MASK;
    if (((int) fieldId) == 0) {
        throw new IllegalArgumentException("Invalid proto field " + (int) fieldId + " fieldId=" + Long.toHexString(fieldId));
    }
    if (fieldType != expectedType || !((fieldCount == expectedCount) || (fieldCount == FIELD_COUNT_PACKED && expectedCount == FIELD_COUNT_REPEATED))) {
        final String countString = getFieldCountString(fieldCount);
        final String typeString = getFieldTypeString(fieldType);
        if (typeString != null && countString != null) {
            final StringBuilder sb = new StringBuilder();
            if (expectedType == FIELD_TYPE_MESSAGE) {
                sb.append("start");
            } else {
                sb.append("write");
            }
            sb.append(getFieldCountString(expectedCount));
            sb.append(getFieldTypeString(expectedType));
            sb.append(" called for field ");
            sb.append((int) fieldId);
            sb.append(" which should be used with ");
            if (fieldType == FIELD_TYPE_MESSAGE) {
                sb.append("start");
            } else {
                sb.append("write");
            }
            sb.append(countString);
            sb.append(typeString);
            if (fieldCount == FIELD_COUNT_PACKED) {
                sb.append(" or writeRepeated");
                sb.append(typeString);
            }
            sb.append('.');
            throw new IllegalArgumentException(sb.toString());
        } else {
            final StringBuilder sb = new StringBuilder();
            if (expectedType == FIELD_TYPE_MESSAGE) {
                sb.append("start");
            } else {
                sb.append("write");
            }
            sb.append(getFieldCountString(expectedCount));
            sb.append(getFieldTypeString(expectedType));
            sb.append(" called with an invalid fieldId: 0x");
            sb.append(Long.toHexString(fieldId));
            sb.append(". The proto field ID might be ");
            sb.append((int) fieldId);
            sb.append('.');
            throw new IllegalArgumentException(sb.toString());
        }
    }
    return (int) fieldId;
}