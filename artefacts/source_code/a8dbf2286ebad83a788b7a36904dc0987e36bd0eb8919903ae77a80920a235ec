public void apply(@NonNull ValueFinder finder, @NonNull RemoteViews parentTemplate, int childViewId) throws Exception{
    final StringBuilder converted = new StringBuilder();
    final int size = mFields.size();
    if (sDebug)
        Log.d(TAG, size + " fields on id " + childViewId);
    for (Entry<AutofillId, Pair<Pattern, String>> entry : mFields.entrySet()) {
        final AutofillId id = entry.getKey();
        final Pair<Pattern, String> field = entry.getValue();
        final String value = finder.findByAutofillId(id);
        if (value == null) {
            Log.w(TAG, "No value for id " + id);
            return;
        }
        try {
            final Matcher matcher = field.first.matcher(value);
            if (!matcher.find()) {
                if (sDebug)
                    Log.d(TAG, "Match for " + field.first + " failed on id " + id);
                return;
            }
            final String convertedValue = matcher.replaceAll(field.second);
            converted.append(convertedValue);
        } catch (Exception e) {
            Log.w(TAG, "Cannot apply " + field.first.pattern() + "->" + field.second + " to " + "field with autofill id" + id + ": " + e.getClass());
            throw e;
        }
    }
    Log.d(TAG, "Converting text on child " + childViewId + " to " + converted.length() + "_chars");
    parentTemplate.setCharSequence(childViewId, "setText", converted);
}