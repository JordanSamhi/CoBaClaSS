public Cursor query(SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit, CancellationSignal cancellationSignal){
    if (mTables == null) {
        return null;
    }
    final String sql;
    final String unwrappedSql = buildQuery(projectionIn, selection, groupBy, having, sortOrder, limit);
    if (isStrictColumns()) {
        enforceStrictColumns(projectionIn);
    }
    if (isStrictGrammar()) {
        enforceStrictGrammar(selection, groupBy, having, sortOrder, limit);
    }
    if (isStrict()) {
        db.validateSql(unwrappedSql, cancellationSignal);
        final String wrappedSql = buildQuery(projectionIn, wrap(selection), groupBy, wrap(having), sortOrder, limit);
        sql = wrappedSql;
    } else {
        sql = unwrappedSql;
    }
    final String[] sqlArgs = selectionArgs;
    if (Log.isLoggable(TAG, Log.DEBUG)) {
        if (Build.IS_DEBUGGABLE) {
            Log.d(TAG, sql + " with args " + Arrays.toString(sqlArgs));
        } else {
            Log.d(TAG, sql);
        }
    }
    return db.rawQueryWithFactory(mFactory, sql, sqlArgs, SQLiteDatabase.findEditTable(mTables), cancellationSignal);
}