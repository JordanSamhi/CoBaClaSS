public static void registerServiceWrappers(){
    SystemServiceRegistry.registerContextAwareService(Context.WIFI_SERVICE, WifiManager.class, (context, serviceBinder) -> {
        IWifiManager service = IWifiManager.Stub.asInterface(serviceBinder);
        return new WifiManager(context, service, getInstanceLooper());
    });
    SystemServiceRegistry.registerStaticService(Context.WIFI_P2P_SERVICE, WifiP2pManager.class, serviceBinder -> {
        IWifiP2pManager service = IWifiP2pManager.Stub.asInterface(serviceBinder);
        return new WifiP2pManager(service);
    });
    SystemServiceRegistry.registerContextAwareService(Context.WIFI_AWARE_SERVICE, WifiAwareManager.class, (context, serviceBinder) -> {
        IWifiAwareManager service = IWifiAwareManager.Stub.asInterface(serviceBinder);
        return new WifiAwareManager(context, service);
    });
    SystemServiceRegistry.registerContextAwareService(Context.WIFI_SCANNING_SERVICE, WifiScanner.class, (context, serviceBinder) -> {
        IWifiScanner service = IWifiScanner.Stub.asInterface(serviceBinder);
        return new WifiScanner(context, service, getInstanceLooper());
    });
    SystemServiceRegistry.registerContextAwareService(Context.WIFI_RTT_RANGING_SERVICE, WifiRttManager.class, (context, serviceBinder) -> {
        IWifiRttManager service = IWifiRttManager.Stub.asInterface(serviceBinder);
        return new WifiRttManager(context, service);
    });
    SystemServiceRegistry.registerContextAwareService(Context.WIFI_RTT_SERVICE, RttManager.class, context -> {
        WifiRttManager wifiRttManager = context.getSystemService(WifiRttManager.class);
        return new RttManager(context, wifiRttManager);
    });
}