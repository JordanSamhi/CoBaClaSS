public static BytesResult formatBytes(Resources res, long sizeBytes, int flags){
    final int unit = ((flags & FLAG_IEC_UNITS) != 0) ? 1024 : 1000;
    final boolean isNegative = (sizeBytes < 0);
    float result = isNegative ? -sizeBytes : sizeBytes;
    int suffix = com.android.internal.R.string.byteShort;
    long mult = 1;
    if (result > 900) {
        suffix = com.android.internal.R.string.kilobyteShort;
        mult = unit;
        result = result / unit;
    }
    if (result > 900) {
        suffix = com.android.internal.R.string.megabyteShort;
        mult *= unit;
        result = result / unit;
    }
    if (result > 900) {
        suffix = com.android.internal.R.string.gigabyteShort;
        mult *= unit;
        result = result / unit;
    }
    if (result > 900) {
        suffix = com.android.internal.R.string.terabyteShort;
        mult *= unit;
        result = result / unit;
    }
    if (result > 900) {
        suffix = com.android.internal.R.string.petabyteShort;
        mult *= unit;
        result = result / unit;
    }
    final int roundFactor;
    final String roundFormat;
    if (mult == 1 || result >= 100) {
        roundFactor = 1;
        roundFormat = "%.0f";
    } else if (result < 1) {
        roundFactor = 100;
        roundFormat = "%.2f";
    } else if (result < 10) {
        if ((flags & FLAG_SHORTER) != 0) {
            roundFactor = 10;
            roundFormat = "%.1f";
        } else {
            roundFactor = 100;
            roundFormat = "%.2f";
        }
    } else {
        if ((flags & FLAG_SHORTER) != 0) {
            roundFactor = 1;
            roundFormat = "%.0f";
        } else {
            roundFactor = 100;
            roundFormat = "%.2f";
        }
    }
    if (isNegative) {
        result = -result;
    }
    final String roundedString = String.format(roundFormat, result);
    final long roundedBytes = (flags & FLAG_CALCULATE_ROUNDED) == 0 ? 0 : (((long) Math.round(result * roundFactor)) * mult / roundFactor);
    final String units = res.getString(suffix);
    return new BytesResult(roundedString, units, roundedBytes);
}