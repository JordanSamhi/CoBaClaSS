public boolean setWindowsForAccessibilityCallbackLocked(int displayId, WindowsForAccessibilityCallback callback){
    final DisplayContent dc = mService.mRoot.getDisplayContentOrCreate(displayId);
    if (dc == null) {
        return false;
    }
    if (callback != null) {
        if (isEmbeddedDisplay(dc)) {
            if (mWindowsForAccessibilityObserver.get(displayId) == null) {
                handleWindowObserverOfEmbeddedDisplayLocked(displayId, dc.getParentWindow());
            }
            return false;
        } else if (mWindowsForAccessibilityObserver.get(displayId) != null) {
            throw new IllegalStateException("Windows for accessibility callback of display " + displayId + " already set!");
        }
        mWindowsForAccessibilityObserver.put(displayId, new WindowsForAccessibilityObserver(mService, displayId, callback));
    } else {
        if (isEmbeddedDisplay(dc)) {
            return true;
        }
        final WindowsForAccessibilityObserver windowsForA11yObserver = mWindowsForAccessibilityObserver.get(displayId);
        if (windowsForA11yObserver == null) {
            throw new IllegalStateException("Windows for accessibility callback of display " + displayId + " already cleared!");
        }
        removeObserverOfEmbeddedDisplay(windowsForA11yObserver);
        mWindowsForAccessibilityObserver.remove(displayId);
    }
    return true;
}