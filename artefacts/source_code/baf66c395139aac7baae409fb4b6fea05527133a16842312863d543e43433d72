public AudioAttributes build(){
    AudioAttributes aa = new AudioAttributes();
    aa.mContentType = mContentType;
    if (mUsage == USAGE_INVALID) {
        if (mSystemUsage == USAGE_INVALID) {
            aa.mUsage = USAGE_UNKNOWN;
        } else {
            aa.mUsage = mSystemUsage;
        }
    } else {
        if (mSystemUsage == USAGE_INVALID) {
            aa.mUsage = mUsage;
        } else {
            throw new IllegalArgumentException("Cannot set both usage and system usage on same builder");
        }
    }
    aa.mSource = mSource;
    aa.mFlags = mFlags;
    if (mMuteHapticChannels) {
        aa.mFlags |= FLAG_MUTE_HAPTIC;
    }
    if (mPrivacySensitive == PRIVACY_SENSITIVE_DEFAULT) {
        if (mSource == MediaRecorder.AudioSource.VOICE_COMMUNICATION || mSource == MediaRecorder.AudioSource.CAMCORDER) {
            aa.mFlags |= FLAG_CAPTURE_PRIVATE;
        } else {
            aa.mFlags &= ~FLAG_CAPTURE_PRIVATE;
        }
    } else if (mPrivacySensitive == PRIVACY_SENSITIVE_ENABLED) {
        aa.mFlags |= FLAG_CAPTURE_PRIVATE;
    } else {
        aa.mFlags &= ~FLAG_CAPTURE_PRIVATE;
    }
    aa.mTags = (HashSet<String>) mTags.clone();
    aa.mFormattedTags = TextUtils.join(";", mTags);
    if (mBundle != null) {
        aa.mBundle = new Bundle(mBundle);
    }
    return aa;
}