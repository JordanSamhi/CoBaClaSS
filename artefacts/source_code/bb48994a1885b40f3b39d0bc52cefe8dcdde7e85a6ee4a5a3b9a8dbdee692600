public static long[] removeRange(long[] ranges, long start, long end){
    if (start == end) {
        return ranges;
    } else if (start > end) {
        throw new IllegalArgumentException();
    }
    long[] res = EmptyArray.LONG;
    for (int i = 0; i < ranges.length; i += 2) {
        if (start <= ranges[i] && end >= ranges[i + 1]) {
        } else if (start >= ranges[i] && end <= ranges[i + 1]) {
            res = Arrays.copyOf(res, res.length + 4);
            res[res.length - 4] = ranges[i];
            res[res.length - 3] = start;
            res[res.length - 2] = end;
            res[res.length - 1] = ranges[i + 1];
        } else {
            res = Arrays.copyOf(res, res.length + 2);
            if (end >= ranges[i] && end <= ranges[i + 1]) {
                res[res.length - 2] = Math.max(ranges[i], end);
            } else {
                res[res.length - 2] = ranges[i];
            }
            if (start >= ranges[i] && start <= ranges[i + 1]) {
                res[res.length - 1] = Math.min(ranges[i + 1], start);
            } else {
                res[res.length - 1] = ranges[i + 1];
            }
        }
    }
    return res;
}