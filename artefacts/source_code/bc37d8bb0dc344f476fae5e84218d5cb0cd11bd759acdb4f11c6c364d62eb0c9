public void checkAndStartWifi(){
    mWifiThreadRunner.post(() -> {
        if (!mWifiConfigManager.loadFromStore()) {
            Log.e(TAG, "Failed to load from config store");
        }
        enableVerboseLoggingInternal(getVerboseLoggingLevel());
        boolean wifiEnabled = mSettingsStore.isWifiToggleEnabled();
        Log.i(TAG, "WifiService starting up with Wi-Fi " + (wifiEnabled ? "enabled" : "disabled"));
        mWifiInjector.getWifiScanAlwaysAvailableSettingsCompatibility().initialize();
        mContext.registerReceiver(new BroadcastReceiver() {

            @Override
            public void onReceive(Context context, Intent intent) {
                if (mSettingsStore.handleAirplaneModeToggled()) {
                    mActiveModeWarden.airplaneModeToggled();
                }
            }
        }, new IntentFilter(Intent.ACTION_AIRPLANE_MODE_CHANGED));
        mContext.registerReceiver(new BroadcastReceiver() {

            @Override
            public void onReceive(Context context, Intent intent) {
                int state = intent.getIntExtra(TelephonyManager.EXTRA_SIM_STATE, TelephonyManager.SIM_STATE_UNKNOWN);
                if (TelephonyManager.SIM_STATE_ABSENT == state) {
                    Log.d(TAG, "resetting networks because SIM was removed");
                    mClientModeImpl.resetSimAuthNetworks(ClientModeImpl.RESET_SIM_REASON_SIM_REMOVED);
                }
            }
        }, new IntentFilter(TelephonyManager.ACTION_SIM_CARD_STATE_CHANGED));
        mContext.registerReceiver(new BroadcastReceiver() {

            @Override
            public void onReceive(Context context, Intent intent) {
                int state = intent.getIntExtra(TelephonyManager.EXTRA_SIM_STATE, TelephonyManager.SIM_STATE_UNKNOWN);
                if (TelephonyManager.SIM_STATE_LOADED == state) {
                    Log.d(TAG, "resetting networks because SIM was loaded");
                    mClientModeImpl.resetSimAuthNetworks(ClientModeImpl.RESET_SIM_REASON_SIM_INSERTED);
                }
            }
        }, new IntentFilter(TelephonyManager.ACTION_SIM_APPLICATION_STATE_CHANGED));
        mContext.registerReceiver(new BroadcastReceiver() {

            private int mLastSubId = SubscriptionManager.INVALID_SUBSCRIPTION_ID;

            @Override
            public void onReceive(Context context, Intent intent) {
                final int subId = intent.getIntExtra("subscription", SubscriptionManager.INVALID_SUBSCRIPTION_ID);
                if (subId != mLastSubId) {
                    Log.d(TAG, "resetting networks as default data SIM is changed");
                    mClientModeImpl.resetSimAuthNetworks(ClientModeImpl.RESET_SIM_REASON_DEFAULT_DATA_SIM_CHANGED);
                    mLastSubId = subId;
                }
            }
        }, new IntentFilter(TelephonyManager.ACTION_DEFAULT_DATA_SUBSCRIPTION_CHANGED));
        registerForBroadcasts();
        mInIdleMode = mPowerManager.isDeviceIdleMode();
        mClientModeImpl.initialize();
        mActiveModeWarden.start();
        registerForCarrierConfigChange();
    });
}