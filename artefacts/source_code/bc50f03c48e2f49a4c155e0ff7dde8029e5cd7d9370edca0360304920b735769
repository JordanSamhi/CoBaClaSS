public void handleMessage(Message msg){
    if (DBG)
        logd("handleMessage: " + msg.what);
    switch(msg.what) {
        case SIM_LOAD_EVENT:
            handleSimLoaded();
            break;
        case CARRIER_ID_DB_UPDATE_EVENT:
            loadCarrierMatchingRulesOnMccMnc();
            break;
        case PREFER_APN_UPDATE_EVENT:
            String preferApn = getPreferApn();
            if (!equals(mPreferApn, preferApn, true)) {
                logd("[updatePreferApn] from:" + mPreferApn + " to:" + preferApn);
                mPreferApn = preferApn;
                matchSubscriptionCarrier();
            }
            break;
        case ICC_CHANGED_EVENT:
            final IccRecords newIccRecords = UiccController.getInstance().getIccRecords(mPhone.getPhoneId(), UiccController.APP_FAM_3GPP);
            if (mIccRecords != newIccRecords) {
                if (mIccRecords != null) {
                    logd("Removing stale icc objects.");
                    mIccRecords.unregisterForRecordsOverride(this);
                    mIccRecords = null;
                }
                if (newIccRecords != null) {
                    logd("new Icc object");
                    newIccRecords.registerForRecordsOverride(this, SIM_LOAD_EVENT, null);
                    mIccRecords = newIccRecords;
                }
            }
            break;
        default:
            loge("invalid msg: " + msg.what);
            break;
    }
}