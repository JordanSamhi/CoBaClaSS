public void presentPrompt(@NonNull Executor executor, @NonNull ConfirmationCallback callback) throws ConfirmationAlreadyPresentingException, ConfirmationNotAvailableException{
    if (mCallback != null) {
        throw new ConfirmationAlreadyPresentingException();
    }
    if (isAccessibilityServiceRunning(mContext)) {
        throw new ConfirmationNotAvailableException();
    }
    mCallback = callback;
    mExecutor = executor;
    int uiOptionsAsFlags = getUiOptionsAsFlags();
    String locale = Locale.getDefault().toLanguageTag();
    int responseCode = mKeyStore.presentConfirmationPrompt(mCallbackBinder, mPromptText.toString(), mExtraData, locale, uiOptionsAsFlags);
    switch(responseCode) {
        case KeyStore.CONFIRMATIONUI_OK:
            return;
        case KeyStore.CONFIRMATIONUI_OPERATION_PENDING:
            throw new ConfirmationAlreadyPresentingException();
        case KeyStore.CONFIRMATIONUI_UNIMPLEMENTED:
            throw new ConfirmationNotAvailableException();
        case KeyStore.CONFIRMATIONUI_UIERROR:
            throw new IllegalArgumentException();
        default:
            Log.w(TAG, "Unexpected responseCode=" + responseCode + " from presentConfirmationPrompt() call.");
            throw new IllegalArgumentException();
    }
}