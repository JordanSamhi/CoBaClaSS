public void logNetworkSelectionDecision(int experiment1Id, int experiment2Id, boolean isSameDecision, int numNetworkChoices){
    if (numNetworkChoices < 0) {
        Log.e(TAG, "numNetworkChoices cannot be negative!");
        return;
    }
    if (experiment1Id == experiment2Id) {
        Log.e(TAG, "comparing the same experiment id: " + experiment1Id);
        return;
    }
    Pair<Integer, Integer> key = new Pair<>(experiment1Id, experiment2Id);
    synchronized (mLock) {
        NetworkSelectionExperimentResults results = mNetworkSelectionExperimentPairNumChoicesCounts.computeIfAbsent(key, k -> new NetworkSelectionExperimentResults());
        IntCounter counter = isSameDecision ? results.sameSelectionNumChoicesCounter : results.differentSelectionNumChoicesCounter;
        counter.increment(numNetworkChoices);
    }
}