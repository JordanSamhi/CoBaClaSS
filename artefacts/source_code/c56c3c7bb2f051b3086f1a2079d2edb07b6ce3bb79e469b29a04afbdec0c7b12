public long createTokenBasedSyntheticPassword(byte[] token, int userId, @Nullable EscrowTokenStateChangeCallback changeCallback){
    long handle = generateHandle();
    if (!tokenMap.containsKey(userId)) {
        tokenMap.put(userId, new ArrayMap<>());
    }
    TokenData tokenData = new TokenData();
    final byte[] secdiscardable = secureRandom(SECDISCARDABLE_LENGTH);
    if (isWeaverAvailable()) {
        tokenData.weaverSecret = secureRandom(mWeaverConfig.valueSize);
        tokenData.secdiscardableOnDisk = SyntheticPasswordCrypto.encrypt(tokenData.weaverSecret, PERSONALISATION_WEAVER_TOKEN, secdiscardable);
    } else {
        tokenData.secdiscardableOnDisk = secdiscardable;
        tokenData.weaverSecret = null;
    }
    tokenData.aggregatedSecret = transformUnderSecdiscardable(token, secdiscardable);
    tokenData.mCallback = changeCallback;
    tokenMap.get(userId).put(handle, tokenData);
    return handle;
}