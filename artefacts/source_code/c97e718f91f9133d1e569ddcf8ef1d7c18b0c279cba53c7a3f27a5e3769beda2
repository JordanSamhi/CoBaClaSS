public AudioFocusRequest build(){
    if ((mDelayedFocus || mPausesOnDuck) && (mFocusListener == null)) {
        throw new IllegalStateException("Can't use delayed focus or pause on duck without a listener");
    }
    if (mA11yForceDucking) {
        final Bundle extraInfo;
        if (mAttr.getBundle() == null) {
            extraInfo = new Bundle();
        } else {
            extraInfo = mAttr.getBundle();
        }
        extraInfo.putBoolean(KEY_ACCESSIBILITY_FORCE_FOCUS_DUCKING, true);
        mAttr = new AudioAttributes.Builder(mAttr).addBundle(extraInfo).build();
    }
    final int flags = 0 | (mDelayedFocus ? AudioManager.AUDIOFOCUS_FLAG_DELAY_OK : 0) | (mPausesOnDuck ? AudioManager.AUDIOFOCUS_FLAG_PAUSES_ON_DUCKABLE_LOSS : 0) | (mFocusLocked ? AudioManager.AUDIOFOCUS_FLAG_LOCK : 0);
    return new AudioFocusRequest(mFocusListener, mListenerHandler, mAttr, mFocusGain, flags);
}