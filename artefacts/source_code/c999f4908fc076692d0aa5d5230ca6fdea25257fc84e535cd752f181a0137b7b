public void startServiceForOwner(@NonNull String packageName, int userId, @NonNull String actionForLog){
    final long token = mInjector.binderClearCallingIdentity();
    try {
        synchronized (mLock) {
            final ServiceInfo service = findService(packageName, userId);
            if (service == null) {
                debug("Owner package %s on u%d has no service.", packageName, userId);
                disconnectServiceOnUserLocked(userId, actionForLog);
                return;
            }
            final PersistentConnection<IDeviceAdminService> existing = mConnections.get(userId);
            if (existing != null) {
                debug("Disconnecting from existing service connection.", packageName, userId);
                disconnectServiceOnUserLocked(userId, actionForLog);
            }
            debug("Owner package %s on u%d has service %s for %s", packageName, userId, service.getComponentName().flattenToShortString(), actionForLog);
            final DevicePolicyServiceConnection conn = new DevicePolicyServiceConnection(userId, service.getComponentName());
            mConnections.put(userId, conn);
            conn.bind();
        }
    } finally {
        mInjector.binderRestoreCallingIdentity(token);
    }
}