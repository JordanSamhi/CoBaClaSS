public boolean isCapable(@RcsImsCapabilities.RcsImsCapabilityFlag int capability, @ImsRegistrationImplBase.ImsRegistrationTech int radioTech) throws android.telephony.ims.ImsException{
    CountDownLatch latch = new CountDownLatch(1);
    AtomicReference<Boolean> capableRef = new AtomicReference<>();
    IImsCapabilityCallback callback = new IImsCapabilityCallback.Stub() {

        @Override
        public void onQueryCapabilityConfiguration(int resultCapability, int resultRadioTech, boolean enabled) {
            if ((capability != resultCapability) || (radioTech != resultRadioTech)) {
                return;
            }
            if (DBG)
                log("capable result:capability=" + capability + ", enabled=" + enabled);
            capableRef.set(enabled);
            latch.countDown();
        }

        @Override
        public void onCapabilitiesStatusChanged(int config) {
        }

        @Override
        public void onChangeCapabilityConfigurationError(int capability, int radioTech, int reason) {
        }
    };
    try {
        if (DBG)
            log("Query capability: " + capability + ", radioTech=" + radioTech);
        mRcsFeatureConnection.queryCapabilityConfiguration(capability, radioTech, callback);
        return awaitResult(latch, capableRef);
    } catch (RemoteException e) {
        loge("isCapable error: ", e);
        throw new android.telephony.ims.ImsException("Can not determine capabilities", android.telephony.ims.ImsException.CODE_ERROR_SERVICE_UNAVAILABLE);
    }
}