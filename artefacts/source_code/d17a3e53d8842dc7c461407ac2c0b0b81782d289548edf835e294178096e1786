public boolean onTouchEvent(@NonNull MotionEvent event){
    boolean handled;
    int action = event.getAction();
    final float x = event.getX();
    final float y = event.getY();
    final int offset = putOffsetInRange(x, y);
    final DrawableRecipientChip currentChip = findChip(offset);
    if (action == MotionEvent.ACTION_UP) {
        boolean touchedWarningIcon = touchedWarningIcon(x, y, currentChip);
        if (touchedWarningIcon) {
            String warningText = String.format(mWarningTextTemplate, currentChip.getEntry().getDestination());
            showWarningDialog(warningText);
            return true;
        }
        if (!isFocused()) {
            return touchedWarningIcon || super.onTouchEvent(event);
        }
        handled = super.onTouchEvent(event);
        if (mSelectedChip == null) {
            mGestureDetector.onTouchEvent(event);
        }
        boolean chipWasSelected = false;
        if (currentChip != null) {
            if (mSelectedChip != null && mSelectedChip != currentChip) {
                clearSelectedChip();
                selectChip(currentChip);
            } else if (mSelectedChip == null) {
                commitDefault();
                selectChip(currentChip);
            } else {
                onClick(mSelectedChip);
            }
            chipWasSelected = true;
            handled = true;
        } else if (mSelectedChip != null && shouldShowEditableText(mSelectedChip)) {
            chipWasSelected = true;
        }
        if (!chipWasSelected) {
            clearSelectedChip();
        }
    } else {
        boolean touchedWarningIcon = touchedWarningIcon(x, y, currentChip);
        if (touchedWarningIcon) {
            return true;
        }
        handled = super.onTouchEvent(event);
        if (!isFocused()) {
            return handled;
        }
        if (mSelectedChip == null) {
            mGestureDetector.onTouchEvent(event);
        }
    }
    return handled;
}