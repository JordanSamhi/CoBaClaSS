public void notifyChange(@NonNull Collection<Uri> uris, @Nullable ContentObserver observer, @NotifyFlags int flags){
    Objects.requireNonNull(uris, "uris");
    final SparseArray<ArrayList<Uri>> clusteredByUser = new SparseArray<>();
    for (Uri uri : uris) {
        final int userId = ContentProvider.getUserIdFromUri(uri, mContext.getUserId());
        ArrayList<Uri> list = clusteredByUser.get(userId);
        if (list == null) {
            list = new ArrayList<>();
            clusteredByUser.put(userId, list);
        }
        list.add(ContentProvider.getUriWithoutUserId(uri));
    }
    for (int i = 0; i < clusteredByUser.size(); i++) {
        final int userId = clusteredByUser.keyAt(i);
        final ArrayList<Uri> list = clusteredByUser.valueAt(i);
        notifyChange(list.toArray(new Uri[list.size()]), observer, flags, userId);
    }
}