public static AppsFilter create(PackageManagerInternal pms, PackageManagerService.Injector injector){
    final boolean forceSystemAppsQueryable = injector.getContext().getResources().getBoolean(R.bool.config_forceSystemPackagesQueryable);
    final FeatureConfigImpl featureConfig = new FeatureConfigImpl(pms, injector);
    final String[] forcedQueryablePackageNames;
    if (forceSystemAppsQueryable) {
        forcedQueryablePackageNames = new String[] {};
    } else {
        forcedQueryablePackageNames = injector.getContext().getResources().getStringArray(R.array.config_forceQueryablePackages);
        for (int i = 0; i < forcedQueryablePackageNames.length; i++) {
            forcedQueryablePackageNames[i] = forcedQueryablePackageNames[i].intern();
        }
    }
    final StateProvider stateProvider = command -> {
        synchronized (injector.getLock()) {
            command.currentState(injector.getSettings().mPackages, injector.getUserManagerInternal().getUserInfos());
        }
    };
    AppsFilter appsFilter = new AppsFilter(stateProvider, featureConfig, forcedQueryablePackageNames, forceSystemAppsQueryable, null);
    featureConfig.setAppsFilter(appsFilter);
    return appsFilter;
}