public void handleOnBootPhase(){
    if (DBG) {
        Slog.d(TAG, "Bluetooth boot completed");
    }
    mAppOps = mContext.getSystemService(AppOpsManager.class);
    UserManagerInternal userManagerInternal = LocalServices.getService(UserManagerInternal.class);
    userManagerInternal.addUserRestrictionsListener(mUserRestrictionsListener);
    final boolean isBluetoothDisallowed = isBluetoothDisallowed();
    if (isBluetoothDisallowed) {
        return;
    }
    final boolean isSafeMode = mContext.getPackageManager().isSafeMode();
    if (mEnableExternal && isBluetoothPersistedStateOnBluetooth() && !isSafeMode) {
        if (DBG) {
            Slog.d(TAG, "Auto-enabling Bluetooth.");
        }
        sendEnableMsg(mQuietEnableExternal, BluetoothProtoEnums.ENABLE_DISABLE_REASON_SYSTEM_BOOT, mContext.getPackageName());
    } else if (!isNameAndAddressSet()) {
        if (DBG) {
            Slog.d(TAG, "Getting adapter name and address");
        }
        Message getMsg = mHandler.obtainMessage(MESSAGE_GET_NAME_AND_ADDRESS);
        mHandler.sendMessage(getMsg);
    }
    if (mBluetoothAirplaneModeListener != null) {
        mBluetoothAirplaneModeListener.start(new BluetoothAirplaneModeListener.AirplaneModeHelper(mContext));
    }
}