public static void setActualDefaultRingtoneUri(Context context, int type, Uri ringtoneUri){
    String setting = getSettingForType(type);
    if (setting == null)
        return;
    final ContentResolver resolver = context.getContentResolver();
    if (Settings.Secure.getIntForUser(resolver, Settings.Secure.SYNC_PARENT_SOUNDS, 0, context.getUserId()) == 1) {
        disableSyncFromParent(context);
    }
    if (!isInternalRingtoneUri(ringtoneUri)) {
        ringtoneUri = ContentProvider.maybeAddUserId(ringtoneUri, context.getUserId());
    }
    Settings.System.putStringForUser(resolver, setting, ringtoneUri != null ? ringtoneUri.toString() : null, context.getUserId());
    if (ringtoneUri != null) {
        final Uri cacheUri = getCacheForType(type, context.getUserId());
        try (InputStream in = openRingtone(context, ringtoneUri);
            OutputStream out = resolver.openOutputStream(cacheUri)) {
            FileUtils.copy(in, out);
        } catch (IOException e) {
            Log.w(TAG, "Failed to cache ringtone: " + e);
        }
    }
}