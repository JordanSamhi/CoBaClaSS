public TextLinks generateLinks(@NonNull TextLinks.Request request){
    Objects.requireNonNull(request);
    Utils.checkMainThread();
    if (!Utils.checkTextLength(request.getText(), getMaxGenerateLinksTextLength())) {
        return mFallback.generateLinks(request);
    }
    if (!mSettings.isSmartLinkifyEnabled() && request.isLegacyFallback()) {
        return Utils.generateLegacyLinks(request);
    }
    try {
        request.setSystemTextClassifierMetadata(mSystemTcMetadata);
        final BlockingCallback<TextLinks> callback = new BlockingCallback<>("textlinks");
        mManagerService.onGenerateLinks(mSessionId, request, callback);
        final TextLinks links = callback.get();
        if (links != null) {
            return links;
        }
    } catch (RemoteException e) {
        Log.e(LOG_TAG, "Error generating links. Using fallback.", e);
    }
    return mFallback.generateLinks(request);
}