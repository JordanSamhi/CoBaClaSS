public String startWpsPinDisplay(String groupIfName, String bssid){
    if (TextUtils.isEmpty(groupIfName))
        return null;
    synchronized (mLock) {
        if (!checkSupplicantP2pIfaceAndLogFailure("startWpsPinDisplay"))
            return null;
        if (groupIfName == null) {
            Log.e(TAG, "Group name required when requesting WPS KEYPAD.");
            return null;
        }
        byte[] macAddress = null;
        try {
            macAddress = NativeUtil.macAddressToByteArray(bssid);
        } catch (Exception e) {
            Log.e(TAG, "Could not parse BSSID.", e);
            return null;
        }
        SupplicantResult<String> result = new SupplicantResult("startWpsPinDisplay(" + groupIfName + ", " + bssid + ")");
        try {
            mISupplicantP2pIface.startWpsPinDisplay(groupIfName, macAddress, (SupplicantStatus status, String generatedPin) -> {
                result.setResult(status, generatedPin);
            });
        } catch (RemoteException e) {
            Log.e(TAG, "ISupplicantP2pIface exception: " + e);
            supplicantServiceDiedHandler();
        }
        return result.getResult();
    }
}