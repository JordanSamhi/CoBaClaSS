public static ArrayList<Locale> getSuitableLocalesForSpellChecker(@Nullable final Locale systemLocale){
    final Locale systemLocaleLanguageCountryVariant;
    final Locale systemLocaleLanguageCountry;
    final Locale systemLocaleLanguage;
    if (systemLocale != null) {
        final String language = systemLocale.getLanguage();
        final boolean hasLanguage = !TextUtils.isEmpty(language);
        final String country = systemLocale.getCountry();
        final boolean hasCountry = !TextUtils.isEmpty(country);
        final String variant = systemLocale.getVariant();
        final boolean hasVariant = !TextUtils.isEmpty(variant);
        if (hasLanguage && hasCountry && hasVariant) {
            systemLocaleLanguageCountryVariant = new Locale(language, country, variant);
        } else {
            systemLocaleLanguageCountryVariant = null;
        }
        if (hasLanguage && hasCountry) {
            systemLocaleLanguageCountry = new Locale(language, country);
        } else {
            systemLocaleLanguageCountry = null;
        }
        if (hasLanguage) {
            systemLocaleLanguage = new Locale(language);
        } else {
            systemLocaleLanguage = null;
        }
    } else {
        systemLocaleLanguageCountryVariant = null;
        systemLocaleLanguageCountry = null;
        systemLocaleLanguage = null;
    }
    final ArrayList<Locale> locales = new ArrayList<>();
    if (systemLocaleLanguageCountryVariant != null) {
        locales.add(systemLocaleLanguageCountryVariant);
    }
    if (Locale.ENGLISH.equals(systemLocaleLanguage)) {
        if (systemLocaleLanguageCountry != null) {
            if (systemLocaleLanguageCountry != null) {
                locales.add(systemLocaleLanguageCountry);
            }
            if (!Locale.US.equals(systemLocaleLanguageCountry)) {
                locales.add(Locale.US);
            }
            if (!Locale.UK.equals(systemLocaleLanguageCountry)) {
                locales.add(Locale.UK);
            }
            locales.add(Locale.ENGLISH);
        } else {
            locales.add(Locale.ENGLISH);
            locales.add(Locale.US);
            locales.add(Locale.UK);
        }
    } else {
        if (systemLocaleLanguageCountry != null) {
            locales.add(systemLocaleLanguageCountry);
        }
        if (systemLocaleLanguage != null) {
            locales.add(systemLocaleLanguage);
        }
        locales.add(Locale.US);
        locales.add(Locale.UK);
        locales.add(Locale.ENGLISH);
    }
    return locales;
}