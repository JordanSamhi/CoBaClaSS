public void setPullAtomCallback(int atomTag, @Nullable PullAtomMetadata metadata, @NonNull @CallbackExecutor Executor executor, @NonNull StatsPullAtomCallback callback){
    long coolDownMillis = metadata == null ? DEFAULT_COOL_DOWN_MILLIS : metadata.mCoolDownMillis;
    long timeoutMillis = metadata == null ? DEFAULT_TIMEOUT_MILLIS : metadata.mTimeoutMillis;
    int[] additiveFields = metadata == null ? new int[0] : metadata.mAdditiveFields;
    if (additiveFields == null) {
        additiveFields = new int[0];
    }
    synchronized (sLock) {
        try {
            IStatsManagerService service = getIStatsManagerServiceLocked();
            PullAtomCallbackInternal rec = new PullAtomCallbackInternal(atomTag, callback, executor);
            service.registerPullAtomCallback(atomTag, coolDownMillis, timeoutMillis, additiveFields, rec);
        } catch (RemoteException e) {
            throw new RuntimeException("Unable to register pull callback", e);
        }
    }
}