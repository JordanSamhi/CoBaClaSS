public Session openSession(@SessionUsage int sessionUsage, @ScramblingMode int scramblingMode) throws MediaCasException{
    int sessionResourceHandle = getSessionResourceHandle();
    if (mICasV12 == null) {
        Log.d(TAG, "Open Session with scrambling mode is only supported by cas@1.2+ interface");
        throw new UnsupportedCasException("Open Session with scrambling mode is not supported");
    }
    try {
        OpenSession_1_2_Callback cb = new OpenSession_1_2_Callback();
        mICasV12.openSession_1_2(sessionUsage, scramblingMode, cb);
        MediaCasException.throwExceptionIfNeeded(cb.mStatus);
        addSessionToResourceMap(cb.mSession, sessionResourceHandle);
        Log.d(TAG, "Write Stats Log for succeed to Open Session.");
        FrameworkStatsLog.write(FrameworkStatsLog.TV_CAS_SESSION_OPEN_STATUS, mUserId, mCasSystemId, FrameworkStatsLog.TV_CAS_SESSION_OPEN_STATUS__STATE__SUCCEEDED);
        return cb.mSession;
    } catch (RemoteException e) {
        cleanupAndRethrowIllegalState();
    }
    Log.d(TAG, "Write Stats Log for fail to Open Session.");
    FrameworkStatsLog.write(FrameworkStatsLog.TV_CAS_SESSION_OPEN_STATUS, mUserId, mCasSystemId, FrameworkStatsLog.TV_CAS_SESSION_OPEN_STATUS__STATE__FAILED);
    return null;
}