public CpuFrequencies parseString(String cpuNumberAndFrequencies){
    synchronized (mLock) {
        mCoreAndFrequencies.clear();
        try {
            for (String pair : cpuNumberAndFrequencies.split("/")) {
                pair = pair.trim();
                if (pair.length() == 0) {
                    continue;
                }
                final String[] coreAndFreq = pair.split(":", 2);
                if (coreAndFreq.length != 2) {
                    throw new IllegalArgumentException("Wrong format");
                }
                final int core = Integer.parseInt(coreAndFreq[0]);
                final long freq = Long.parseLong(coreAndFreq[1]);
                mCoreAndFrequencies.put(core, freq);
            }
        } catch (IllegalArgumentException e) {
            Slog.wtf(TAG, "Invalid configuration: '" + cpuNumberAndFrequencies + "'");
        }
    }
    return this;
}