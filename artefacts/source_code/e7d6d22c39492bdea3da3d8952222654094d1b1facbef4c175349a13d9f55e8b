public List<MediaRoute2Info> getAvailableRoutesForRoutingSession(@NonNull RoutingSessionInfo sessionInfo){
    Objects.requireNonNull(sessionInfo, "sessionInfo must not be null");
    List<MediaRoute2Info> routes = new ArrayList<>();
    String packageName = sessionInfo.getClientPackageName();
    List<String> preferredFeatures = mPreferredFeaturesMap.get(packageName);
    if (preferredFeatures == null) {
        preferredFeatures = Collections.emptyList();
    }
    synchronized (mRoutesLock) {
        for (MediaRoute2Info route : mRoutes.values()) {
            if (route.hasAnyFeatures(preferredFeatures) || sessionInfo.getSelectedRoutes().contains(route.getId()) || sessionInfo.getTransferableRoutes().contains(route.getId())) {
                routes.add(route);
            }
        }
    }
    return routes;
}