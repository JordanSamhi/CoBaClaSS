public CallForwardingInfo getCallForwarding(@CallForwardingReason int callForwardingReason){
    if (callForwardingReason < CallForwardingInfo.REASON_UNCONDITIONAL || callForwardingReason > CallForwardingInfo.REASON_ALL_CONDITIONAL) {
        throw new IllegalArgumentException("callForwardingReason is out of range");
    }
    try {
        ITelephony telephony = getITelephony();
        if (telephony != null) {
            return telephony.getCallForwarding(getSubId(), callForwardingReason);
        }
    } catch (RemoteException ex) {
        Rlog.e(TAG, "getCallForwarding RemoteException", ex);
    } catch (NullPointerException ex) {
        Rlog.e(TAG, "getCallForwarding NPE", ex);
    }
    return new CallForwardingInfo(CallForwardingInfo.STATUS_UNKNOWN_ERROR, 0, null, 0);
}