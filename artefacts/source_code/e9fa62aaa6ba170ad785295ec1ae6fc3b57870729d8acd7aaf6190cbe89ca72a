public long getExpirationDate(){
    long minExpirationDate = Long.MAX_VALUE;
    for (int key_type : CARRIER_KEY_TYPES) {
        if (!isKeyEnabled(key_type)) {
            continue;
        }
        ImsiEncryptionInfo imsiEncryptionInfo = mPhone.getCarrierInfoForImsiEncryption(key_type);
        if (imsiEncryptionInfo != null && imsiEncryptionInfo.getExpirationTime() != null) {
            if (minExpirationDate > imsiEncryptionInfo.getExpirationTime().getTime()) {
                minExpirationDate = imsiEncryptionInfo.getExpirationTime().getTime();
            }
        }
    }
    if (minExpirationDate == Long.MAX_VALUE || (minExpirationDate < System.currentTimeMillis() + END_RENEWAL_WINDOW_DAYS * DAY_IN_MILLIS)) {
        minExpirationDate = System.currentTimeMillis() + DAY_IN_MILLIS;
    } else {
        Random random = new Random();
        int max = START_RENEWAL_WINDOW_DAYS * DAY_IN_MILLIS;
        int min = END_RENEWAL_WINDOW_DAYS * DAY_IN_MILLIS;
        int randomTime = random.nextInt(max - min) + min;
        minExpirationDate = minExpirationDate - randomTime;
    }
    return minExpirationDate;
}