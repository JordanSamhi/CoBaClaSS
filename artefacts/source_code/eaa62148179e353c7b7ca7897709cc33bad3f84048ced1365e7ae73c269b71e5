public static INetd get(long maxTimeoutMs){
    if (maxTimeoutMs == 0)
        return getInstance();
    final long stop = (maxTimeoutMs > 0) ? SystemClock.elapsedRealtime() + maxTimeoutMs : Long.MAX_VALUE;
    long timeoutMs = 0;
    while (true) {
        final INetd netdInstance = getInstance();
        if (netdInstance != null) {
            return netdInstance;
        }
        final long remaining = stop - SystemClock.elapsedRealtime();
        if (remaining <= 0)
            break;
        timeoutMs = Math.min(timeoutMs + BASE_TIMEOUT_MS, MAX_TIMEOUT_MS);
        timeoutMs = Math.min(timeoutMs, remaining);
        try {
            Thread.sleep(timeoutMs);
        } catch (InterruptedException e) {
        }
    }
    return null;
}