public static boolean isVoiceMailNumber(@NonNull Context context, int subId, @Nullable String number){
    String vmNumber, mdn;
    try {
        final TelephonyManager tm;
        if (context == null) {
            tm = TelephonyManager.getDefault();
            if (DBG)
                log("isVoiceMailNumber: default tm");
        } else {
            tm = TelephonyManager.from(context);
            if (DBG)
                log("isVoiceMailNumber: tm from context");
        }
        vmNumber = tm.getVoiceMailNumber(subId);
        mdn = tm.getLine1Number(subId);
        if (DBG)
            log("isVoiceMailNumber: mdn=" + mdn + ", vmNumber=" + vmNumber + ", number=" + number);
    } catch (SecurityException ex) {
        if (DBG)
            log("isVoiceMailNumber: SecurityExcpetion caught");
        return false;
    }
    number = extractNetworkPortionAlt(number);
    if (TextUtils.isEmpty(number)) {
        if (DBG)
            log("isVoiceMailNumber: number is empty after stripping");
        return false;
    }
    boolean compareWithMdn = false;
    if (context != null) {
        CarrierConfigManager configManager = (CarrierConfigManager) context.getSystemService(Context.CARRIER_CONFIG_SERVICE);
        if (configManager != null) {
            PersistableBundle b = configManager.getConfigForSubId(subId);
            if (b != null) {
                compareWithMdn = b.getBoolean(CarrierConfigManager.KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOL);
                if (DBG)
                    log("isVoiceMailNumber: compareWithMdn=" + compareWithMdn);
            }
        }
    }
    if (compareWithMdn) {
        if (DBG)
            log("isVoiceMailNumber: treating mdn as additional vm number");
        return compare(number, vmNumber) || compare(number, mdn);
    } else {
        if (DBG)
            log("isVoiceMailNumber: returning regular compare");
        return compare(number, vmNumber);
    }
}