public void startRecentsActivity(Intent intent, final AssistDataReceiver assistDataReceiver, final RecentsAnimationListener animationHandler, final Consumer<Boolean> resultCallback, Handler resultCallbackHandler){
    try {
        IAssistDataReceiver receiver = null;
        if (assistDataReceiver != null) {
            receiver = new IAssistDataReceiver.Stub() {

                public void onHandleAssistData(Bundle resultData) {
                    assistDataReceiver.onHandleAssistData(resultData);
                }

                public void onHandleAssistScreenshot(Bitmap screenshot) {
                    assistDataReceiver.onHandleAssistScreenshot(screenshot);
                }
            };
        }
        IRecentsAnimationRunner runner = null;
        if (animationHandler != null) {
            runner = new IRecentsAnimationRunner.Stub() {

                @Override
                public void onAnimationStart(IRecentsAnimationController controller, RemoteAnimationTarget[] apps, RemoteAnimationTarget[] wallpapers, Rect homeContentInsets, Rect minimizedHomeBounds) {
                    final RecentsAnimationControllerCompat controllerCompat = new RecentsAnimationControllerCompat(controller);
                    final RemoteAnimationTargetCompat[] appsCompat = RemoteAnimationTargetCompat.wrap(apps);
                    final RemoteAnimationTargetCompat[] wallpapersCompat = RemoteAnimationTargetCompat.wrap(wallpapers);
                    animationHandler.onAnimationStart(controllerCompat, appsCompat, wallpapersCompat, homeContentInsets, minimizedHomeBounds);
                }

                @Override
                public void onAnimationCanceled(TaskSnapshot taskSnapshot) {
                    animationHandler.onAnimationCanceled(taskSnapshot != null ? new ThumbnailData(taskSnapshot) : null);
                }

                @Override
                public void onTaskAppeared(RemoteAnimationTarget app) {
                    animationHandler.onTaskAppeared(new RemoteAnimationTargetCompat(app));
                }
            };
        }
        ActivityTaskManager.getService().startRecentsActivity(intent, receiver, runner);
        if (resultCallback != null) {
            resultCallbackHandler.post(new Runnable() {

                @Override
                public void run() {
                    resultCallback.accept(true);
                }
            });
        }
    } catch (Exception e) {
        if (resultCallback != null) {
            resultCallbackHandler.post(new Runnable() {

                @Override
                public void run() {
                    resultCallback.accept(false);
                }
            });
        }
    }
}