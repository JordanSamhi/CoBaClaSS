public List<Mean> predict(final int k, final float[][] inputData){
    checkDataSetSanity(inputData);
    int dimension = inputData[0].length;
    final ArrayList<Mean> means = new ArrayList<>();
    for (int i = 0; i < k; i++) {
        Mean m = new Mean(dimension);
        for (int j = 0; j < dimension; j++) {
            m.mCentroid[j] = mRandomState.nextFloat();
        }
        means.add(m);
    }
    boolean converged = false;
    for (int i = 0; i < mMaxIterations; i++) {
        converged = step(means, inputData);
        if (converged) {
            if (DEBUG)
                Log.d(TAG, "Converged at iteration: " + i);
            break;
        }
    }
    if (!converged && DEBUG)
        Log.d(TAG, "Did not converge");
    return means;
}