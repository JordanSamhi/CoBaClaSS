public boolean setCallForwarding(@NonNull CallForwardingInfo callForwardingInfo){
    if (callForwardingInfo == null) {
        throw new IllegalArgumentException("callForwardingInfo is null");
    }
    int callForwardingStatus = callForwardingInfo.getStatus();
    if (callForwardingStatus != CallForwardingInfo.STATUS_ACTIVE && callForwardingStatus != CallForwardingInfo.STATUS_INACTIVE) {
        throw new IllegalArgumentException("callForwardingStatus is neither active nor inactive");
    }
    int callForwardingReason = callForwardingInfo.getReason();
    if (callForwardingReason < CallForwardingInfo.REASON_UNCONDITIONAL || callForwardingReason > CallForwardingInfo.REASON_ALL_CONDITIONAL) {
        throw new IllegalArgumentException("callForwardingReason is out of range");
    }
    if (callForwardingInfo.getNumber() == null) {
        throw new IllegalArgumentException("callForwarding number is null");
    }
    if (callForwardingInfo.getTimeoutSeconds() <= 0) {
        throw new IllegalArgumentException("callForwarding timeout isn't positive");
    }
    try {
        ITelephony telephony = getITelephony();
        if (telephony != null) {
            return telephony.setCallForwarding(getSubId(), callForwardingInfo);
        }
    } catch (RemoteException ex) {
        Rlog.e(TAG, "setCallForwarding RemoteException", ex);
    } catch (NullPointerException ex) {
        Rlog.e(TAG, "setCallForwarding NPE", ex);
    }
    return false;
}