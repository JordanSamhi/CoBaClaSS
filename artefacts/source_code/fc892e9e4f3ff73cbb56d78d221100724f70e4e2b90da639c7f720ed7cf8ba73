public void writeToParcel(Parcel dest, int flags){
    dest.writeSerializable(mViolation);
    dest.writeInt(mBinderStack.size());
    for (StackTraceElement[] traceElements : mBinderStack) {
        dest.writeInt(traceElements.length);
        for (StackTraceElement element : traceElements) {
            dest.writeString(element.getClassName());
            dest.writeString(element.getMethodName());
            dest.writeString(element.getFileName());
            dest.writeInt(element.getLineNumber());
        }
    }
    int start = dest.dataPosition();
    dest.writeInt(mPenaltyMask);
    dest.writeInt(durationMillis);
    dest.writeInt(violationNumThisLoop);
    dest.writeInt(numAnimationsRunning);
    dest.writeLong(violationUptimeMillis);
    dest.writeLong(numInstances);
    dest.writeString(broadcastIntentAction);
    dest.writeStringArray(tags);
    int total = dest.dataPosition() - start;
    if (Binder.CHECK_PARCEL_SIZE && total > 10 * 1024) {
        Slog.d(TAG, "VIO: penalty=" + mPenaltyMask + " dur=" + durationMillis + " numLoop=" + violationNumThisLoop + " anim=" + numAnimationsRunning + " uptime=" + violationUptimeMillis + " numInst=" + numInstances);
        Slog.d(TAG, "VIO: action=" + broadcastIntentAction);
        Slog.d(TAG, "VIO: tags=" + Arrays.toString(tags));
        Slog.d(TAG, "VIO: TOTAL BYTES WRITTEN: " + (dest.dataPosition() - start));
    }
}