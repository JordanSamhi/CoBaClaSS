public void authenticate(@NonNull CryptoObject crypto, @NonNull CancellationSignal cancel, @NonNull @CallbackExecutor Executor executor, @NonNull AuthenticationCallback callback){
    if (crypto == null) {
        throw new IllegalArgumentException("Must supply a crypto object");
    }
    if (cancel == null) {
        throw new IllegalArgumentException("Must supply a cancellation signal");
    }
    if (executor == null) {
        throw new IllegalArgumentException("Must supply an executor");
    }
    if (callback == null) {
        throw new IllegalArgumentException("Must supply a callback");
    }
    @Authenticators.Types
    final int authenticators = mBundle.getInt(KEY_AUTHENTICATORS_ALLOWED, Authenticators.BIOMETRIC_STRONG);
    final int biometricStrength = authenticators & Authenticators.BIOMETRIC_WEAK;
    if ((biometricStrength & ~Authenticators.BIOMETRIC_STRONG) != 0) {
        throw new IllegalArgumentException("Only Strong biometrics supported with crypto");
    }
    authenticateInternal(crypto, cancel, executor, callback, mContext.getUserId());
}