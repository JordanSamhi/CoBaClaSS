public INetworkStatsProviderCallback registerNetworkStatsProvider(@NonNull String tag, @NonNull INetworkStatsProvider provider){
    enforceAnyPermissionOf(NETWORK_STATS_PROVIDER, NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK);
    Objects.requireNonNull(provider, "provider is null");
    Objects.requireNonNull(tag, "tag is null");
    try {
        NetworkStatsProviderCallbackImpl callback = new NetworkStatsProviderCallbackImpl(tag, provider, mStatsProviderSem, mAlertObserver, mStatsProviderCbList);
        mStatsProviderCbList.add(callback);
        Log.d(TAG, "registerNetworkStatsProvider from " + callback.mTag + " uid/pid=" + getCallingUid() + "/" + getCallingPid());
        return callback;
    } catch (RemoteException e) {
        Log.e(TAG, "registerNetworkStatsProvider failed", e);
    }
    return null;
}