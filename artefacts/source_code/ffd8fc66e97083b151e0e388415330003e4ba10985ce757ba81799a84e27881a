public void backupAgentCreated(String agentPackageName, IBinder agent, int userId){
    userId = mUserController.handleIncomingUser(Binder.getCallingPid(), Binder.getCallingUid(), userId, false, ALLOW_FULL_ONLY, "backupAgentCreated", null);
    if (DEBUG_BACKUP) {
        Slog.v(TAG_BACKUP, "backupAgentCreated: " + agentPackageName + " = " + agent + " callingUserId = " + UserHandle.getCallingUserId() + " userId = " + userId + " callingUid = " + Binder.getCallingUid() + " uid = " + Process.myUid());
    }
    synchronized (this) {
        final BackupRecord backupTarget = mBackupTargets.get(userId);
        String backupAppName = backupTarget == null ? null : backupTarget.appInfo.packageName;
        if (!agentPackageName.equals(backupAppName)) {
            Slog.e(TAG, "Backup agent created for " + agentPackageName + " but not requested!");
            return;
        }
    }
    long oldIdent = Binder.clearCallingIdentity();
    try {
        IBackupManager bm = IBackupManager.Stub.asInterface(ServiceManager.getService(Context.BACKUP_SERVICE));
        bm.agentConnectedForUser(userId, agentPackageName, agent);
    } catch (RemoteException e) {
    } catch (Exception e) {
        Slog.w(TAG, "Exception trying to deliver BackupAgent binding: ");
        e.printStackTrace();
    } finally {
        Binder.restoreCallingIdentity(oldIdent);
    }
}