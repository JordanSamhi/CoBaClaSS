public void prepareAppProfiles(AndroidPackage pkg, @UserIdInt int user, boolean updateReferenceProfileContent){
    final int appId = UserHandle.getAppId(pkg.getUid());
    if (user < 0) {
        Slog.wtf(TAG, "Invalid user id: " + user);
        return;
    }
    if (appId < 0) {
        Slog.wtf(TAG, "Invalid app id: " + appId);
        return;
    }
    try {
        ArrayMap<String, String> codePathsProfileNames = getPackageProfileNames(pkg);
        for (int i = codePathsProfileNames.size() - 1; i >= 0; i--) {
            String codePath = codePathsProfileNames.keyAt(i);
            String profileName = codePathsProfileNames.valueAt(i);
            String dexMetadataPath = null;
            if (updateReferenceProfileContent) {
                File dexMetadata = DexMetadataHelper.findDexMetadataForFile(new File(codePath));
                dexMetadataPath = dexMetadata == null ? null : dexMetadata.getAbsolutePath();
            }
            synchronized (mInstaller) {
                boolean result = mInstaller.prepareAppProfile(pkg.getPackageName(), user, appId, profileName, codePath, dexMetadataPath);
                if (!result) {
                    Slog.e(TAG, "Failed to prepare profile for " + pkg.getPackageName() + ":" + codePath);
                }
            }
        }
    } catch (InstallerException e) {
        Slog.e(TAG, "Failed to prepare profile for " + pkg.getPackageName(), e);
    }
}