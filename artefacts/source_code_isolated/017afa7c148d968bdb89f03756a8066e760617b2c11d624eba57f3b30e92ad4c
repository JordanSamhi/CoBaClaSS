public void processNotification(Notification notification, Notification.Builder builder){
    Icon largeIcon = notification.getLargeIcon();
    Bitmap bitmap = null;
    Drawable drawable = null;
    if (largeIcon != null) {
        builder.setRebuildStyledRemoteViews(true);
        drawable = largeIcon.loadDrawable(mPackageContext);
        int backgroundColor = 0;
        if (notification.isColorizedMedia()) {
            int width = drawable.getIntrinsicWidth();
            int height = drawable.getIntrinsicHeight();
            int area = width * height;
            if (area > RESIZE_BITMAP_AREA) {
                double factor = Math.sqrt((float) RESIZE_BITMAP_AREA / area);
                width = (int) (factor * width);
                height = (int) (factor * height);
            }
            bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
            Canvas canvas = new Canvas(bitmap);
            drawable.setBounds(0, 0, width, height);
            drawable.draw(canvas);
            Palette.Builder paletteBuilder = generateArtworkPaletteBuilder(bitmap);
            Palette palette = paletteBuilder.generate();
            Palette.Swatch backgroundSwatch = findBackgroundSwatch(palette);
            backgroundColor = backgroundSwatch.getRgb();
            float textColorStartWidthFraction = 0.4f;
            paletteBuilder.setRegion((int) (bitmap.getWidth() * textColorStartWidthFraction), 0, bitmap.getWidth(), bitmap.getHeight());
            if (!isWhiteOrBlack(backgroundSwatch.getHsl())) {
                final float backgroundHue = backgroundSwatch.getHsl()[0];
                paletteBuilder.addFilter((rgb, hsl) -> {
                    float diff = Math.abs(hsl[0] - backgroundHue);
                    return diff > 10 && diff < 350;
                });
            }
            paletteBuilder.addFilter(mBlackWhiteFilter);
            palette = paletteBuilder.generate();
            int foregroundColor = selectForegroundColor(backgroundColor, palette);
            builder.setColorPalette(backgroundColor, foregroundColor);
        } else {
            backgroundColor = mContext.getColor(R.color.notification_material_background_color);
        }
        Bitmap colorized = mColorizer.colorize(drawable, backgroundColor, mContext.getResources().getConfiguration().getLayoutDirection() == LayoutDirection.RTL);
        builder.setLargeIcon(Icon.createWithBitmap(colorized));
    }
}