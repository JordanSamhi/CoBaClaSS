public void saveAttributes() throws IOException{
    if (!mIsSupportedFile || (mMimeType != IMAGE_TYPE_JPEG && mMimeType != IMAGE_TYPE_PNG)) {
        throw new IOException("ExifInterface only supports saving attributes on JPEG or PNG " + "formats.");
    }
    if (mIsInputStream || (mSeekableFileDescriptor == null && mFilename == null)) {
        throw new IOException("ExifInterface does not support saving attributes for the current input.");
    }
    mModified = true;
    mThumbnailBytes = getThumbnail();
    FileInputStream in = null;
    FileOutputStream out = null;
    File originalFile = null;
    if (mFilename != null) {
        originalFile = new File(mFilename);
    }
    File tempFile = null;
    try {
        if (mFilename != null) {
            tempFile = new File(mFilename + ".tmp");
            if (!originalFile.renameTo(tempFile)) {
                throw new IOException("Couldn't rename to " + tempFile.getAbsolutePath());
            }
        } else if (mSeekableFileDescriptor != null) {
            if (mMimeType == IMAGE_TYPE_JPEG) {
                tempFile = File.createTempFile("temp", "jpg");
            } else if (mMimeType == IMAGE_TYPE_PNG) {
                tempFile = File.createTempFile("temp", "png");
            }
            Os.lseek(mSeekableFileDescriptor, 0, OsConstants.SEEK_SET);
            in = new FileInputStream(mSeekableFileDescriptor);
            out = new FileOutputStream(tempFile);
            Streams.copy(in, out);
        }
    } catch (Exception e) {
        throw new IOException("Failed to copy original file to temp file", e);
    } finally {
        IoUtils.closeQuietly(in);
        IoUtils.closeQuietly(out);
    }
    in = null;
    out = null;
    try {
        in = new FileInputStream(tempFile);
        if (mFilename != null) {
            out = new FileOutputStream(mFilename);
        } else if (mSeekableFileDescriptor != null) {
            Os.lseek(mSeekableFileDescriptor, 0, OsConstants.SEEK_SET);
            out = new FileOutputStream(mSeekableFileDescriptor);
        }
        try (BufferedInputStream bufferedIn = new BufferedInputStream(in);
            BufferedOutputStream bufferedOut = new BufferedOutputStream(out)) {
            if (mMimeType == IMAGE_TYPE_JPEG) {
                saveJpegAttributes(bufferedIn, bufferedOut);
            } else if (mMimeType == IMAGE_TYPE_PNG) {
                savePngAttributes(bufferedIn, bufferedOut);
            }
        }
    } catch (Exception e) {
        if (mFilename != null) {
            if (!tempFile.renameTo(originalFile)) {
                throw new IOException("Couldn't restore original file: " + originalFile.getAbsolutePath());
            }
        }
        throw new IOException("Failed to save new file", e);
    } finally {
        IoUtils.closeQuietly(in);
        IoUtils.closeQuietly(out);
        tempFile.delete();
    }
    mThumbnailBytes = null;
}