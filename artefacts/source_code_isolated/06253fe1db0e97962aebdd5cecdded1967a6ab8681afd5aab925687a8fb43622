public String getSettingsSummary(boolean convertSavedAsDisconnected){
    if (isPasspointConfigurationR1() && isExpired()) {
        return mContext.getString(R.string.wifi_passpoint_expired);
    }
    StringBuilder summary = new StringBuilder();
    if (isOsuProvider()) {
        if (mOsuProvisioningComplete) {
            summary.append(mContext.getString(R.string.osu_sign_up_complete));
        } else if (mOsuFailure != null) {
            summary.append(mOsuFailure);
        } else if (mOsuStatus != null) {
            summary.append(mOsuStatus);
        } else {
            summary.append(mContext.getString(R.string.tap_to_sign_up));
        }
    } else if (isActive()) {
        summary.append(getSummary(mContext, null, getDetailedState(), mInfo != null && mInfo.isEphemeral(), mInfo != null ? mInfo.getRequestingPackageName() : null));
    } else {
        if (mConfig != null && mConfig.hasNoInternetAccess()) {
            int messageID = mConfig.getNetworkSelectionStatus().getNetworkSelectionStatus() == NETWORK_SELECTION_PERMANENTLY_DISABLED ? R.string.wifi_no_internet_no_reconnect : R.string.wifi_no_internet;
            summary.append(mContext.getString(messageID));
        } else if (mConfig != null && (mConfig.getNetworkSelectionStatus().getNetworkSelectionStatus() != NETWORK_SELECTION_ENABLED)) {
            WifiConfiguration.NetworkSelectionStatus networkStatus = mConfig.getNetworkSelectionStatus();
            switch(networkStatus.getNetworkSelectionDisableReason()) {
                case WifiConfiguration.NetworkSelectionStatus.DISABLED_AUTHENTICATION_FAILURE:
                    summary.append(mContext.getString(R.string.wifi_disabled_password_failure));
                    break;
                case WifiConfiguration.NetworkSelectionStatus.DISABLED_BY_WRONG_PASSWORD:
                    summary.append(mContext.getString(R.string.wifi_check_password_try_again));
                    break;
                case WifiConfiguration.NetworkSelectionStatus.DISABLED_DHCP_FAILURE:
                    summary.append(mContext.getString(R.string.wifi_disabled_network_failure));
                    break;
                case WifiConfiguration.NetworkSelectionStatus.DISABLED_ASSOCIATION_REJECTION:
                    summary.append(mContext.getString(R.string.wifi_disabled_generic));
                    break;
            }
        } else if (!isReachable()) {
            summary.append(mContext.getString(R.string.wifi_not_in_range));
        } else {
            if (mConfig != null) {
                switch(mConfig.getRecentFailureReason()) {
                    case WifiConfiguration.RECENT_FAILURE_AP_UNABLE_TO_HANDLE_NEW_STA:
                        summary.append(mContext.getString(R.string.wifi_ap_unable_to_handle_new_sta));
                        break;
                    default:
                        if (convertSavedAsDisconnected) {
                            summary.append(mContext.getString(R.string.wifi_disconnected));
                        } else {
                            summary.append(mContext.getString(R.string.wifi_remembered));
                        }
                        break;
                }
            }
        }
    }
    if (isVerboseLoggingEnabled()) {
        summary.append(WifiUtils.buildLoggingSummary(this, mConfig));
    }
    if (mConfig != null && (WifiUtils.isMeteredOverridden(mConfig) || mConfig.meteredHint)) {
        return mContext.getResources().getString(R.string.preference_summary_default_combination, WifiUtils.getMeteredLabel(mContext, mConfig), summary.toString());
    }
    if (getSpeedLabel() != null && summary.length() != 0) {
        return mContext.getResources().getString(R.string.preference_summary_default_combination, getSpeedLabel(), summary.toString());
    } else if (getSpeedLabel() != null) {
        return getSpeedLabel();
    } else {
        return summary.toString();
    }
}