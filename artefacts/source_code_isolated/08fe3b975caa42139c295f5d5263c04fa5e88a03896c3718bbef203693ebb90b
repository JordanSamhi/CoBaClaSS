public void triangulate(){
    try {
        float[] lightSources = SpotShadowVertexCalculator.calculateLight(mShadowConfig.getLightRadius(), mShadowConfig.getLightCoord()[0], mShadowConfig.getLightCoord()[1], mShadowConfig.getLightCoord()[2]);
        mStrips = new float[2][];
        int[] sizes = SpotShadowVertexCalculator.getStripSizes(mShadowConfig.getPolyLength());
        for (int i = 0; i < sizes.length; ++i) {
            mStrips[i] = new float[3 * sizes[i]];
        }
        SpotShadowVertexCalculator.calculateShadow(lightSources, mShadowConfig.getPoly(), mShadowConfig.getPolyLength(), mShadowConfig.getShadowStrength(), mStrips);
    } catch (IndexOutOfBoundsException | ArithmeticException mathError) {
        Bridge.getLog().warning(LayoutLog.TAG_INFO, "Arithmetic error while drawing " + "spot shadow", null, mathError);
    } catch (Exception ex) {
        Bridge.getLog().warning(LayoutLog.TAG_INFO, "Error while drawing shadow", null, ex);
    }
}