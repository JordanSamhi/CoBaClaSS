public static Collector<T, ?, Double> averagingDouble(ToDoubleFunction<? super T> mapper){
    return new CollectorImpl<>(() -> new double[4], (a, t) -> {
        sumWithCompensation(a, mapper.applyAsDouble(t));
        a[2]++;
        a[3] += mapper.applyAsDouble(t);
    }, (a, b) -> {
        sumWithCompensation(a, b[0]);
        sumWithCompensation(a, b[1]);
        a[2] += b[2];
        a[3] += b[3];
        return a;
    }, a -> (a[2] == 0) ? 0.0d : (computeFinalSum(a) / a[2]), CH_NOID);
}