public long until(Temporal endExclusive, TemporalUnit unit){
    YearMonth end = YearMonth.from(endExclusive);
    if (unit instanceof ChronoUnit) {
        long monthsUntil = end.getProlepticMonth() - getProlepticMonth();
        switch((ChronoUnit) unit) {
            case MONTHS:
                return monthsUntil;
            case YEARS:
                return monthsUntil / 12;
            case DECADES:
                return monthsUntil / 120;
            case CENTURIES:
                return monthsUntil / 1200;
            case MILLENNIA:
                return monthsUntil / 12000;
            case ERAS:
                return end.getLong(ERA) - getLong(ERA);
        }
        throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
}