public synchronized void writeOnImsCapabilities(int phoneId, @ImsRegistrationImplBase.ImsRegistrationTech int radioTech, MmTelFeature.MmTelCapabilities capabilities){
    ImsCapabilities cap = new ImsCapabilities();
    if (radioTech == ImsRegistrationImplBase.REGISTRATION_TECH_LTE) {
        cap.voiceOverLte = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VOICE);
        cap.videoOverLte = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VIDEO);
        cap.utOverLte = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_UT);
    } else if (radioTech == ImsRegistrationImplBase.REGISTRATION_TECH_IWLAN) {
        cap.voiceOverWifi = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VOICE);
        cap.videoOverWifi = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_VIDEO);
        cap.utOverWifi = capabilities.isCapable(MmTelFeature.MmTelCapabilities.CAPABILITY_TYPE_UT);
    }
    TelephonyEvent event = new TelephonyEventBuilder(phoneId).setImsCapabilities(cap).build();
    if (mLastImsCapabilities.get(phoneId) != null && Arrays.equals(ImsCapabilities.toByteArray(mLastImsCapabilities.get(phoneId)), ImsCapabilities.toByteArray(cap))) {
        return;
    }
    mLastImsCapabilities.put(phoneId, cap);
    addTelephonyEvent(event);
    annotateInProgressCallSession(event.timestampMillis, phoneId, new CallSessionEventBuilder(TelephonyCallSession.Event.Type.IMS_CAPABILITIES_CHANGED).setImsCapabilities(event.imsCapabilities));
    annotateInProgressSmsSession(event.timestampMillis, phoneId, new SmsSessionEventBuilder(SmsSession.Event.Type.IMS_CAPABILITIES_CHANGED).setImsCapabilities(event.imsCapabilities));
}