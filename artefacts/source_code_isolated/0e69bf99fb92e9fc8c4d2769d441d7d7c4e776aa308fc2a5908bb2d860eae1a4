public WifiNative.ConnectionCapabilities getConnectionCapabilities(@NonNull String ifaceName){
    final String methodStr = "getConnectionCapabilities";
    WifiNative.ConnectionCapabilities capOut = new WifiNative.ConnectionCapabilities();
    if (isV1_3()) {
        ISupplicantStaIface iface = checkSupplicantStaIfaceAndLogFailure(ifaceName, methodStr);
        if (iface == null) {
            return capOut;
        }
        android.hardware.wifi.supplicant.V1_3.ISupplicantStaIface staIfaceV13 = getStaIfaceMockableV1_3(iface);
        if (staIfaceV13 == null) {
            Log.e(TAG, methodStr + ": SupplicantStaIface is null, cannot get Connection Capabilities");
            return capOut;
        }
        try {
            staIfaceV13.getConnectionCapabilities((SupplicantStatus statusInternal, ConnectionCapabilities cap) -> {
                if (statusInternal.code == SupplicantStatusCode.SUCCESS) {
                    capOut.wifiStandard = getWifiStandardFromCap(cap);
                    capOut.channelBandwidth = getChannelBandwidthFromCap(cap);
                    capOut.maxNumberTxSpatialStreams = cap.maxNumberTxSpatialStreams;
                    capOut.maxNumberRxSpatialStreams = cap.maxNumberRxSpatialStreams;
                }
                checkStatusAndLogFailure(statusInternal, methodStr);
            });
        } catch (RemoteException e) {
            handleRemoteException(e, methodStr);
        }
    } else {
        Log.e(TAG, "Method " + methodStr + " is not supported in existing HAL");
    }
    return capOut;
}