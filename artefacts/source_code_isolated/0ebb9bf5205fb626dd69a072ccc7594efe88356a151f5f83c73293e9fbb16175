public int resolveCallingUserIdEnforcingPermissionsLocked(int userId){
    final int callingUid = Binder.getCallingUid();
    final int currentUserId = mAccessibilityUserManager.getCurrentUserIdLocked();
    if (callingUid == 0 || callingUid == Process.SYSTEM_UID || callingUid == Process.SHELL_UID) {
        if (userId == UserHandle.USER_CURRENT || userId == UserHandle.USER_CURRENT_OR_SELF) {
            return currentUserId;
        }
        return resolveProfileParentLocked(userId);
    }
    final int callingUserId = UserHandle.getUserId(callingUid);
    if (callingUserId == userId) {
        return resolveProfileParentLocked(userId);
    }
    final int callingUserParentId = resolveProfileParentLocked(callingUserId);
    if (callingUserParentId == currentUserId && (userId == UserHandle.USER_CURRENT || userId == UserHandle.USER_CURRENT_OR_SELF)) {
        return currentUserId;
    }
    if (!hasPermission(Manifest.permission.INTERACT_ACROSS_USERS) && !hasPermission(Manifest.permission.INTERACT_ACROSS_USERS_FULL)) {
        throw new SecurityException("Call from user " + callingUserId + " as user " + userId + " without permission INTERACT_ACROSS_USERS or " + "INTERACT_ACROSS_USERS_FULL not allowed.");
    }
    if (userId == UserHandle.USER_CURRENT || userId == UserHandle.USER_CURRENT_OR_SELF) {
        return currentUserId;
    }
    return resolveProfileParentLocked(userId);
}