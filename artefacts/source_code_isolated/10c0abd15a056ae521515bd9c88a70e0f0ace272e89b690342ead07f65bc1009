public final int initialize(final IMbmsStreamingSessionCallback callback, final int subscriptionId) throws RemoteException{
    if (callback == null) {
        throw new NullPointerException("Callback must not be null");
    }
    final int uid = Binder.getCallingUid();
    int result = initialize(new MbmsStreamingSessionCallback() {

        @Override
        public void onError(final int errorCode, final String message) {
            try {
                if (errorCode == MbmsErrors.UNKNOWN) {
                    throw new IllegalArgumentException("Middleware cannot send an unknown error.");
                }
                callback.onError(errorCode, message);
            } catch (RemoteException e) {
                onAppCallbackDied(uid, subscriptionId);
            }
        }

        @Override
        public void onStreamingServicesUpdated(final List<StreamingServiceInfo> services) {
            try {
                callback.onStreamingServicesUpdated(services);
            } catch (RemoteException e) {
                onAppCallbackDied(uid, subscriptionId);
            }
        }

        @Override
        public void onMiddlewareReady() {
            try {
                callback.onMiddlewareReady();
            } catch (RemoteException e) {
                onAppCallbackDied(uid, subscriptionId);
            }
        }
    }, subscriptionId);
    if (result == MbmsErrors.SUCCESS) {
        callback.asBinder().linkToDeath(new DeathRecipient() {

            @Override
            public void binderDied() {
                onAppCallbackDied(uid, subscriptionId);
            }
        }, 0);
    }
    return result;
}