public Typeface loadFont(Resources wrapper, TypedValue value, int id){
    if (value.string == null) {
        throw new NotFoundException("Resource \"" + getResourceName(id) + "\" (" + Integer.toHexString(id) + ") is not a Font: " + value);
    }
    final String file = value.string.toString();
    if (!file.startsWith("res/")) {
        return null;
    }
    Typeface cached = Typeface.findFromCache(mAssets, file);
    if (cached != null) {
        return cached;
    }
    if (DEBUG_LOAD) {
        Log.v(TAG, "Loading font for cookie " + value.assetCookie + ": " + file);
    }
    Trace.traceBegin(Trace.TRACE_TAG_RESOURCES, file);
    try {
        if (file.endsWith("xml")) {
            final XmlResourceParser rp = loadXmlResourceParser(file, id, value.assetCookie, "font");
            final FontResourcesParser.FamilyResourceEntry familyEntry = FontResourcesParser.parse(rp, wrapper);
            if (familyEntry == null) {
                return null;
            }
            return Typeface.createFromResources(familyEntry, mAssets, file);
        }
        return new Typeface.Builder(mAssets, file, false, value.assetCookie).build();
    } catch (XmlPullParserException e) {
        Log.e(TAG, "Failed to parse xml resource " + file, e);
    } catch (IOException e) {
        Log.e(TAG, "Failed to read xml resource " + file, e);
    } finally {
        Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
    }
    return null;
}