public void writeToParcel(Parcel dest, int flags){
    dest.writeInt(networkId);
    dest.writeInt(status);
    mNetworkSelectionStatus.writeToParcel(dest);
    dest.writeString(SSID);
    dest.writeString(BSSID);
    dest.writeInt(apBand);
    dest.writeInt(apChannel);
    dest.writeString(FQDN);
    dest.writeString(providerFriendlyName);
    dest.writeInt(isHomeProviderNetwork ? 1 : 0);
    dest.writeInt(roamingConsortiumIds.length);
    for (long roamingConsortiumId : roamingConsortiumIds) {
        dest.writeLong(roamingConsortiumId);
    }
    dest.writeString(preSharedKey);
    for (String wepKey : wepKeys) {
        dest.writeString(wepKey);
    }
    dest.writeInt(wepTxKeyIndex);
    dest.writeInt(priority);
    dest.writeInt(hiddenSSID ? 1 : 0);
    dest.writeInt(requirePmf ? 1 : 0);
    dest.writeString(updateIdentifier);
    writeBitSet(dest, allowedKeyManagement);
    writeBitSet(dest, allowedProtocols);
    writeBitSet(dest, allowedAuthAlgorithms);
    writeBitSet(dest, allowedPairwiseCiphers);
    writeBitSet(dest, allowedGroupCiphers);
    writeBitSet(dest, allowedGroupManagementCiphers);
    writeBitSet(dest, allowedSuiteBCiphers);
    dest.writeParcelable(enterpriseConfig, flags);
    dest.writeParcelable(mIpConfiguration, flags);
    dest.writeString(dhcpServer);
    dest.writeString(defaultGwMacAddress);
    dest.writeInt(validatedInternetAccess ? 1 : 0);
    dest.writeInt(isLegacyPasspointConfig ? 1 : 0);
    dest.writeInt(ephemeral ? 1 : 0);
    dest.writeInt(trusted ? 1 : 0);
    dest.writeInt(fromWifiNetworkSuggestion ? 1 : 0);
    dest.writeInt(fromWifiNetworkSpecifier ? 1 : 0);
    dest.writeInt(meteredHint ? 1 : 0);
    dest.writeInt(meteredOverride);
    dest.writeInt(useExternalScores ? 1 : 0);
    dest.writeInt(creatorUid);
    dest.writeInt(lastConnectUid);
    dest.writeInt(lastUpdateUid);
    dest.writeString(creatorName);
    dest.writeString(lastUpdateName);
    dest.writeInt(numScorerOverride);
    dest.writeInt(numScorerOverrideAndSwitchedNetwork);
    dest.writeInt(numAssociation);
    dest.writeBoolean(allowAutojoin);
    dest.writeInt(numNoInternetAccessReports);
    dest.writeInt(noInternetAccessExpected ? 1 : 0);
    dest.writeInt(shared ? 1 : 0);
    dest.writeString(mPasspointManagementObjectTree);
    dest.writeInt(recentFailure.getAssociationStatus());
    dest.writeParcelable(mRandomizedMacAddress, flags);
    dest.writeInt(macRandomizationSetting);
    dest.writeInt(osu ? 1 : 0);
    dest.writeLong(randomizedMacExpirationTimeMs);
    dest.writeInt(carrierId);
    dest.writeString(mPasspointUniqueId);
}