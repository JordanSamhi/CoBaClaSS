public byte[] encode(){
    StringBuilder builder = new StringBuilder(name);
    builder.append(VALUE_DELIMITER).append(type);
    builder.append(VALUE_DELIMITER).append(server);
    builder.append(VALUE_DELIMITER).append(saveLogin ? username : "");
    builder.append(VALUE_DELIMITER).append(saveLogin ? password : "");
    builder.append(VALUE_DELIMITER).append(dnsServers);
    builder.append(VALUE_DELIMITER).append(searchDomains);
    builder.append(VALUE_DELIMITER).append(routes);
    builder.append(VALUE_DELIMITER).append(mppe);
    builder.append(VALUE_DELIMITER).append(l2tpSecret);
    builder.append(VALUE_DELIMITER).append(ipsecIdentifier);
    builder.append(VALUE_DELIMITER).append(ipsecSecret);
    builder.append(VALUE_DELIMITER).append(ipsecUserCert);
    builder.append(VALUE_DELIMITER).append(ipsecCaCert);
    builder.append(VALUE_DELIMITER).append(ipsecServerCert);
    if (proxy != null) {
        builder.append(VALUE_DELIMITER).append(proxy.getHost() != null ? proxy.getHost() : "");
        builder.append(VALUE_DELIMITER).append(proxy.getPort());
        builder.append(VALUE_DELIMITER).append(proxy.getExclusionListAsString() != null ? proxy.getExclusionListAsString() : "");
        builder.append(VALUE_DELIMITER).append(proxy.getPacFileUrl().toString());
    } else {
        builder.append(ENCODED_NULL_PROXY_INFO);
    }
    builder.append(VALUE_DELIMITER).append(String.join(LIST_DELIMITER, mAllowedAlgorithms));
    builder.append(VALUE_DELIMITER).append(isBypassable);
    builder.append(VALUE_DELIMITER).append(isMetered);
    builder.append(VALUE_DELIMITER).append(maxMtu);
    builder.append(VALUE_DELIMITER).append(areAuthParamsInline);
    builder.append(VALUE_DELIMITER).append(isRestrictedToTestNetworks);
    return builder.toString().getBytes(StandardCharsets.UTF_8);
}