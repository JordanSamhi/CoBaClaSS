public boolean shouldIntercept(int zen, NotificationManager.Policy policy, NotificationRecord record){
    if (zen == ZEN_MODE_OFF || isCritical(record)) {
        return false;
    }
    if (NotificationManager.Policy.areAllVisualEffectsSuppressed(policy.suppressedVisualEffects) && "android".equals(record.getSbn().getPackageName()) && SystemMessageProto.SystemMessage.NOTE_ZEN_UPGRADE == record.getSbn().getId()) {
        ZenLog.traceNotIntercepted(record, "systemDndChangedNotification");
        return false;
    }
    switch(zen) {
        case Global.ZEN_MODE_NO_INTERRUPTIONS:
            ZenLog.traceIntercepted(record, "none");
            return true;
        case Global.ZEN_MODE_ALARMS:
            if (isAlarm(record)) {
                return false;
            }
            ZenLog.traceIntercepted(record, "alarmsOnly");
            return true;
        case Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS:
            if (record.getPackagePriority() == Notification.PRIORITY_MAX) {
                ZenLog.traceNotIntercepted(record, "priorityApp");
                return false;
            }
            if (isAlarm(record)) {
                if (!policy.allowAlarms()) {
                    ZenLog.traceIntercepted(record, "!allowAlarms");
                    return true;
                }
                return false;
            }
            if (isEvent(record)) {
                if (!policy.allowEvents()) {
                    ZenLog.traceIntercepted(record, "!allowEvents");
                    return true;
                }
                return false;
            }
            if (isReminder(record)) {
                if (!policy.allowReminders()) {
                    ZenLog.traceIntercepted(record, "!allowReminders");
                    return true;
                }
                return false;
            }
            if (isMedia(record)) {
                if (!policy.allowMedia()) {
                    ZenLog.traceIntercepted(record, "!allowMedia");
                    return true;
                }
                return false;
            }
            if (isSystem(record)) {
                if (!policy.allowSystem()) {
                    ZenLog.traceIntercepted(record, "!allowSystem");
                    return true;
                }
                return false;
            }
            if (isConversation(record)) {
                if (policy.allowConversations()) {
                    if (policy.priorityConversationSenders == CONVERSATION_SENDERS_ANYONE) {
                        ZenLog.traceNotIntercepted(record, "conversationAnyone");
                        return false;
                    } else if (policy.priorityConversationSenders == NotificationManager.Policy.CONVERSATION_SENDERS_IMPORTANT && record.getChannel().isImportantConversation()) {
                        ZenLog.traceNotIntercepted(record, "conversationMatches");
                        return false;
                    }
                }
            }
            if (isCall(record)) {
                if (policy.allowRepeatCallers() && REPEAT_CALLERS.isRepeat(mContext, extras(record))) {
                    ZenLog.traceNotIntercepted(record, "repeatCaller");
                    return false;
                }
                if (!policy.allowCalls()) {
                    ZenLog.traceIntercepted(record, "!allowCalls");
                    return true;
                }
                return shouldInterceptAudience(policy.allowCallsFrom(), record);
            }
            if (isMessage(record)) {
                if (!policy.allowMessages()) {
                    ZenLog.traceIntercepted(record, "!allowMessages");
                    return true;
                }
                return shouldInterceptAudience(policy.allowMessagesFrom(), record);
            }
            ZenLog.traceIntercepted(record, "!priority");
            return true;
        default:
            return false;
    }
}