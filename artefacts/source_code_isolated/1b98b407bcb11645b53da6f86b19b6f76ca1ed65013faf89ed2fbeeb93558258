public boolean setWpsDeviceType(String typeStr){
    try {
        Matcher match = WPS_DEVICE_TYPE_PATTERN.matcher(typeStr);
        if (!match.find() || match.groupCount() != 3) {
            Log.e(TAG, "Malformed WPS device type " + typeStr);
            return false;
        }
        short categ = Short.parseShort(match.group(1));
        byte[] oui = NativeUtil.hexStringToByteArray(match.group(2));
        short subCateg = Short.parseShort(match.group(3));
        byte[] bytes = new byte[8];
        ByteBuffer byteBuffer = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);
        byteBuffer.putShort(categ);
        byteBuffer.put(oui);
        byteBuffer.putShort(subCateg);
        synchronized (mLock) {
            if (!checkSupplicantP2pIfaceAndLogFailure("setWpsDeviceType"))
                return false;
            SupplicantResult<Void> result = new SupplicantResult("setWpsDeviceType(" + typeStr + ")");
            try {
                result.setResult(mISupplicantP2pIface.setWpsDeviceType(bytes));
            } catch (RemoteException e) {
                Log.e(TAG, "ISupplicantP2pIface exception: " + e);
                supplicantServiceDiedHandler();
            }
            return result.isSuccess();
        }
    } catch (IllegalArgumentException e) {
        Log.e(TAG, "Illegal argument " + typeStr, e);
        return false;
    }
}