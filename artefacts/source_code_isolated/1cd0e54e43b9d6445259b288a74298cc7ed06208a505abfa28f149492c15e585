public boolean connectToNetwork(@NonNull String ifaceName, @NonNull WifiConfiguration config){
    synchronized (mLock) {
        logd("connectToNetwork " + config.getKey());
        WifiConfiguration currentConfig = getCurrentNetworkLocalConfig(ifaceName);
        if (WifiConfigurationUtil.isSameNetwork(config, currentConfig)) {
            String networkSelectionBSSID = config.getNetworkSelectionStatus().getNetworkSelectionBSSID();
            String networkSelectionBSSIDCurrent = currentConfig.getNetworkSelectionStatus().getNetworkSelectionBSSID();
            if (Objects.equals(networkSelectionBSSID, networkSelectionBSSIDCurrent)) {
                logd("Network is already saved, will not trigger remove and add operation.");
            } else {
                logd("Network is already saved, but need to update BSSID.");
                if (!setCurrentNetworkBssid(ifaceName, config.getNetworkSelectionStatus().getNetworkSelectionBSSID())) {
                    loge("Failed to set current network BSSID.");
                    return false;
                }
                mCurrentNetworkLocalConfigs.put(ifaceName, new WifiConfiguration(config));
            }
        } else {
            mCurrentNetworkRemoteHandles.remove(ifaceName);
            mCurrentNetworkLocalConfigs.remove(ifaceName);
            if (!removeAllNetworks(ifaceName)) {
                loge("Failed to remove existing networks");
                return false;
            }
            Pair<SupplicantStaNetworkHal, WifiConfiguration> pair = addNetworkAndSaveConfig(ifaceName, config);
            if (pair == null) {
                loge("Failed to add/save network configuration: " + config.getKey());
                return false;
            }
            mCurrentNetworkRemoteHandles.put(ifaceName, pair.first);
            mCurrentNetworkLocalConfigs.put(ifaceName, pair.second);
        }
        SupplicantStaNetworkHal networkHandle = checkSupplicantStaNetworkAndLogFailure(ifaceName, "connectToNetwork");
        if (networkHandle == null) {
            loge("No valid remote network handle for network configuration: " + config.getKey());
            return false;
        }
        PmkCacheStoreData pmkData = mPmkCacheEntries.get(config.networkId);
        if (pmkData != null && !WifiConfigurationUtil.isConfigForPskNetwork(config) && pmkData.expirationTimeInSec > mClock.getElapsedSinceBootMillis() / 1000) {
            logi("Set PMK cache for config id " + config.networkId);
            if (networkHandle.setPmkCache(pmkData.data)) {
                mWifiMetrics.setConnectionPmkCache(true);
            }
        }
        if (!networkHandle.select()) {
            loge("Failed to select network configuration: " + config.getKey());
            return false;
        }
        return true;
    }
}