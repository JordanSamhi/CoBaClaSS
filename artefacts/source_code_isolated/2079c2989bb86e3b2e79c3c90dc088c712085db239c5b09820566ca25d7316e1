public List<Pair<PasspointProvider, PasspointMatch>> matchProvider(ScanResult scanResult, boolean anqpRequestAllowed){
    List<Pair<PasspointProvider, PasspointMatch>> allMatches = getAllMatchedProviders(scanResult, anqpRequestAllowed);
    if (allMatches.isEmpty()) {
        return allMatches;
    }
    List<Pair<PasspointProvider, PasspointMatch>> homeProviders = new ArrayList<>();
    List<Pair<PasspointProvider, PasspointMatch>> roamingProviders = new ArrayList<>();
    for (Pair<PasspointProvider, PasspointMatch> match : allMatches) {
        if (isExpired(match.first.getConfig())) {
            continue;
        }
        if (match.second == PasspointMatch.HomeProvider) {
            homeProviders.add(match);
        } else {
            roamingProviders.add(match);
        }
    }
    if (!homeProviders.isEmpty()) {
        Log.d(TAG, String.format("Matched %s to %s providers as %s", scanResult.SSID, homeProviders.size(), "Home Provider"));
        return homeProviders;
    }
    if (!roamingProviders.isEmpty()) {
        Log.d(TAG, String.format("Matched %s to %s providers as %s", scanResult.SSID, roamingProviders.size(), "Roaming Provider"));
        return roamingProviders;
    }
    if (mVerboseLoggingEnabled) {
        Log.d(TAG, "No service provider found for " + scanResult.SSID);
    }
    return new ArrayList<>();
}