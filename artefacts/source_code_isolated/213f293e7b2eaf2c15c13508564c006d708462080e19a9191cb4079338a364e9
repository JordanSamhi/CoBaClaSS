public void dumpDebug(ProtoOutputStream proto, long fieldId, long now, int section){
    final long token = proto.start(fieldId);
    proto.write(ProcessStatsPackageProto.PACKAGE, mPackageName);
    proto.write(ProcessStatsPackageProto.UID, mUid);
    proto.write(ProcessStatsPackageProto.VERSION, mVersionCode);
    if ((section & ProcessStats.REPORT_PKG_PROC_STATS) != 0) {
        for (int ip = 0; ip < mProcesses.size(); ip++) {
            final String procName = mProcesses.keyAt(ip);
            final ProcessState procState = mProcesses.valueAt(ip);
            procState.dumpDebug(proto, ProcessStatsPackageProto.PROCESS_STATS, procName, mUid, now);
        }
    }
    if ((section & ProcessStats.REPORT_PKG_SVC_STATS) != 0) {
        for (int is = 0; is < mServices.size(); is++) {
            final ServiceState serviceState = mServices.valueAt(is);
            serviceState.dumpDebug(proto, ProcessStatsPackageProto.SERVICE_STATS, now);
        }
    }
    if ((section & ProcessStats.REPORT_PKG_ASC_STATS) != 0) {
        for (int ia = 0; ia < mAssociations.size(); ia++) {
            final AssociationState ascState = mAssociations.valueAt(ia);
            ascState.dumpDebug(proto, ProcessStatsPackageProto.ASSOCIATION_STATS, now);
        }
    }
    proto.end(token);
}