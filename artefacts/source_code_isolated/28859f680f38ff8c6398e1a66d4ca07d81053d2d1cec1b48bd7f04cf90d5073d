public CharSequence coerceToText(Context context){
    CharSequence text = getText();
    if (text != null) {
        return text;
    }
    Uri uri = getUri();
    if (uri != null) {
        final ContentResolver resolver = context.getContentResolver();
        AssetFileDescriptor descr = null;
        FileInputStream stream = null;
        InputStreamReader reader = null;
        try {
            try {
                descr = resolver.openTypedAssetFileDescriptor(uri, "text/*", null);
            } catch (SecurityException e) {
                Log.w("ClipData", "Failure opening stream", e);
            } catch (FileNotFoundException | RuntimeException e) {
            }
            if (descr != null) {
                try {
                    stream = descr.createInputStream();
                    reader = new InputStreamReader(stream, "UTF-8");
                    final StringBuilder builder = new StringBuilder(128);
                    char[] buffer = new char[8192];
                    int len;
                    while ((len = reader.read(buffer)) > 0) {
                        builder.append(buffer, 0, len);
                    }
                    return builder.toString();
                } catch (IOException e) {
                    Log.w("ClipData", "Failure loading text", e);
                    return e.toString();
                }
            }
        } finally {
            IoUtils.closeQuietly(descr);
            IoUtils.closeQuietly(stream);
            IoUtils.closeQuietly(reader);
        }
        final String scheme = uri.getScheme();
        if (SCHEME_CONTENT.equals(scheme) || SCHEME_ANDROID_RESOURCE.equals(scheme) || SCHEME_FILE.equals(scheme)) {
            return "";
        }
        return uri.toString();
    }
    Intent intent = getIntent();
    if (intent != null) {
        return intent.toUri(Intent.URI_INTENT_SCHEME);
    }
    return "";
}