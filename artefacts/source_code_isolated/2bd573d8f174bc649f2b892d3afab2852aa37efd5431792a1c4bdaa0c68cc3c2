public int apply(@NonNull Spannable text, @NonNull TextLinks textLinks){
    Objects.requireNonNull(text);
    Objects.requireNonNull(textLinks);
    final String textString = text.toString();
    if (Linkify.containsUnsupportedCharacters(textString)) {
        android.util.EventLog.writeEvent(0x534e4554, "116321860", -1, "");
        return TextLinks.STATUS_UNSUPPORTED_CHARACTER;
    }
    if (!textString.startsWith(textLinks.getText().toString())) {
        return TextLinks.STATUS_DIFFERENT_TEXT;
    }
    if (textLinks.getLinks().isEmpty()) {
        return TextLinks.STATUS_NO_LINKS_FOUND;
    }
    int applyCount = 0;
    for (TextLink link : textLinks.getLinks()) {
        final TextLinkSpan span = mSpanFactory.apply(link);
        if (span != null) {
            final ClickableSpan[] existingSpans = text.getSpans(link.getStart(), link.getEnd(), ClickableSpan.class);
            if (existingSpans.length > 0) {
                if (mApplyStrategy == TextLinks.APPLY_STRATEGY_REPLACE) {
                    for (ClickableSpan existingSpan : existingSpans) {
                        text.removeSpan(existingSpan);
                    }
                    text.setSpan(span, link.getStart(), link.getEnd(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                    applyCount++;
                }
            } else {
                text.setSpan(span, link.getStart(), link.getEnd(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                applyCount++;
            }
        }
    }
    if (applyCount == 0) {
        return TextLinks.STATUS_NO_LINKS_APPLIED;
    }
    return TextLinks.STATUS_LINKS_APPLIED;
}