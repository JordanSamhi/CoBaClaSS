public AccessibilityNodeInfo findFocus(int connectionId, int accessibilityWindowId, long accessibilityNodeId, int focusType){
    try {
        IAccessibilityServiceConnection connection = getConnection(connectionId);
        if (connection != null) {
            final int interactionId = mInteractionIdCounter.getAndIncrement();
            final long identityToken = Binder.clearCallingIdentity();
            final String[] packageNames;
            try {
                packageNames = connection.findFocus(accessibilityWindowId, accessibilityNodeId, focusType, interactionId, this, Thread.currentThread().getId());
            } finally {
                Binder.restoreCallingIdentity(identityToken);
            }
            if (packageNames != null) {
                AccessibilityNodeInfo info = getFindAccessibilityNodeInfoResultAndClear(interactionId);
                finalizeAndCacheAccessibilityNodeInfo(info, connectionId, false, packageNames);
                return info;
            }
        } else {
            if (DEBUG) {
                Log.w(LOG_TAG, "No connection for connection id: " + connectionId);
            }
        }
    } catch (RemoteException re) {
        Log.w(LOG_TAG, "Error while calling remote findFocus", re);
    }
    return null;
}