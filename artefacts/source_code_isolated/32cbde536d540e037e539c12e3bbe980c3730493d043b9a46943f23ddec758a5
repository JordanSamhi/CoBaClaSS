public static boolean signaturesMatch(Signature[] storedSigs, PackageInfo target, PackageManagerInternal pmi){
    if (target == null || target.packageName == null) {
        return false;
    }
    if ((target.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
        if (MORE_DEBUG) {
            Slog.v(TAG, "System app " + target.packageName + " - skipping sig check");
        }
        return true;
    }
    if (ArrayUtils.isEmpty(storedSigs)) {
        return false;
    }
    SigningInfo signingInfo = target.signingInfo;
    if (signingInfo == null) {
        Slog.w(TAG, "signingInfo is empty, app was either unsigned or the flag" + " PackageManager#GET_SIGNING_CERTIFICATES was not specified");
        return false;
    }
    if (DEBUG) {
        Slog.v(TAG, "signaturesMatch(): stored=" + storedSigs + " device=" + signingInfo.getApkContentsSigners());
    }
    final int nStored = storedSigs.length;
    if (nStored == 1) {
        return pmi.isDataRestoreSafe(storedSigs[0], target.packageName);
    } else {
        Signature[] deviceSigs = signingInfo.getApkContentsSigners();
        int nDevice = deviceSigs.length;
        for (int i = 0; i < nStored; i++) {
            boolean match = false;
            for (int j = 0; j < nDevice; j++) {
                if (storedSigs[i].equals(deviceSigs[j])) {
                    match = true;
                    break;
                }
            }
            if (!match) {
                return false;
            }
        }
        return true;
    }
}