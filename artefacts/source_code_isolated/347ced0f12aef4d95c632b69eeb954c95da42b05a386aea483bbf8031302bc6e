public void handleMessage(Message msg){
    AsyncResult ar;
    switch(msg.what) {
        case EVENT_RADIO_ON:
        case EVENT_IMS_STATE_CHANGED:
            mCi.getImsRegistrationState(this.obtainMessage(EVENT_IMS_STATE_DONE));
            break;
        case EVENT_IMS_STATE_DONE:
            ar = (AsyncResult) msg.obj;
            if (ar.exception == null) {
                updateImsInfo(ar);
            } else {
                Rlog.e(TAG, "IMS State query failed with exp " + ar.exception);
            }
            break;
        case EVENT_SERVICE_STATE_CHANGED:
        case EVENT_SMS_HANDLER_EXITING_WAITING_STATE:
            reevaluateTimerStatus();
            break;
        case EVENT_PARTIAL_SEGMENT_TIMER_EXPIRY:
            handlePartialSegmentTimerExpiry((Long) msg.obj);
            break;
        case EVENT_USER_UNLOCKED:
            if (VDBG) {
                logd("handleMessage: EVENT_USER_UNLOCKED");
            }
            mPhone.registerForServiceStateChanged(this, EVENT_SERVICE_STATE_CHANGED, null);
            resetPartialSegmentWaitTimer();
            break;
        default:
            if (isCdmaMo()) {
                mCdmaDispatcher.handleMessage(msg);
            } else {
                mGsmDispatcher.handleMessage(msg);
            }
    }
}