public void tryToGetAware(){
    synchronized (mLock) {
        if (mDbg) {
            Log.d(TAG, "tryToGetAware: mWifiNanIface=" + mWifiNanIface + ", mReferenceCount=" + mReferenceCount);
        }
        if (mWifiNanIface != null) {
            mReferenceCount++;
            return;
        }
        if (mHalDeviceManager == null) {
            Log.e(TAG, "tryToGetAware: mHalDeviceManager is null!?");
            awareIsDown();
            return;
        }
        mInterfaceDestroyedListener = new InterfaceDestroyedListener();
        IWifiNanIface iface = mHalDeviceManager.createNanIface(mInterfaceDestroyedListener, mHandler);
        if (iface == null) {
            Log.e(TAG, "Was not able to obtain an IWifiNanIface (even though enabled!?)");
            awareIsDown();
        } else {
            if (mDbg)
                Log.v(TAG, "Obtained an IWifiNanIface");
            try {
                android.hardware.wifi.V1_2.IWifiNanIface iface12 = mockableCastTo_1_2(iface);
                WifiStatus status;
                if (iface12 == null) {
                    mWifiAwareNativeCallback.mIsHal12OrLater = false;
                    status = iface.registerEventCallback(mWifiAwareNativeCallback);
                } else {
                    mWifiAwareNativeCallback.mIsHal12OrLater = true;
                    status = iface12.registerEventCallback_1_2(mWifiAwareNativeCallback);
                }
                if (status.code != WifiStatusCode.SUCCESS) {
                    Log.e(TAG, "IWifiNanIface.registerEventCallback error: " + statusString(status));
                    mHalDeviceManager.removeIface(iface);
                    awareIsDown();
                    return;
                }
            } catch (RemoteException e) {
                Log.e(TAG, "IWifiNanIface.registerEventCallback exception: " + e);
                awareIsDown();
                return;
            }
            mWifiNanIface = iface;
            mReferenceCount = 1;
        }
    }
}