public boolean respondToDataPathRequest(short transactionId, boolean accept, int ndpId, String interfaceName, byte[] pmk, String passphrase, byte[] appInfo, boolean isOutOfBand, Capabilities capabilities){
    if (mDbg) {
        Log.v(TAG, "respondToDataPathRequest: transactionId=" + transactionId + ", accept=" + accept + ", int ndpId=" + ndpId + ", interfaceName=" + interfaceName + ", appInfo.length=" + ((appInfo == null) ? 0 : appInfo.length));
    }
    recordTransactionId(transactionId);
    IWifiNanIface iface = mHal.getWifiNanIface();
    if (iface == null) {
        Log.e(TAG, "respondToDataPathRequest: null interface");
        return false;
    }
    if (capabilities == null) {
        Log.e(TAG, "initiateDataPath: null capabilities");
        return false;
    }
    NanRespondToDataPathIndicationRequest req = new NanRespondToDataPathIndicationRequest();
    req.acceptRequest = accept;
    req.ndpInstanceId = ndpId;
    req.ifaceName = interfaceName;
    req.securityConfig.securityType = NanDataPathSecurityType.OPEN;
    if (pmk != null && pmk.length != 0) {
        req.securityConfig.cipherType = getStrongestCipherSuiteType(capabilities.supportedCipherSuites);
        req.securityConfig.securityType = NanDataPathSecurityType.PMK;
        copyArray(pmk, req.securityConfig.pmk);
    }
    if (passphrase != null && passphrase.length() != 0) {
        req.securityConfig.cipherType = getStrongestCipherSuiteType(capabilities.supportedCipherSuites);
        req.securityConfig.securityType = NanDataPathSecurityType.PASSPHRASE;
        convertNativeByteArrayToArrayList(passphrase.getBytes(), req.securityConfig.passphrase);
    }
    if (req.securityConfig.securityType != NanDataPathSecurityType.OPEN && isOutOfBand) {
        convertNativeByteArrayToArrayList(SERVICE_NAME_FOR_OOB_DATA_PATH.getBytes(StandardCharsets.UTF_8), req.serviceNameOutOfBand);
    }
    convertNativeByteArrayToArrayList(appInfo, req.appInfo);
    try {
        WifiStatus status = iface.respondToDataPathIndicationRequest(transactionId, req);
        if (status.code == WifiStatusCode.SUCCESS) {
            return true;
        } else {
            Log.e(TAG, "respondToDataPathRequest: error: " + statusString(status));
            return false;
        }
    } catch (RemoteException e) {
        Log.e(TAG, "respondToDataPathRequest: exception: " + e);
        return false;
    }
}