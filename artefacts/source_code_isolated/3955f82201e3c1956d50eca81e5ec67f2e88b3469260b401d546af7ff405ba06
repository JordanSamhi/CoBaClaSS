public void scheduleApply(final SyncRtSurfaceTransactionApplierCompat.SurfaceParams... params){
    if (mTargetViewRootImpl == null || mTargetViewRootImpl.getView() == null) {
        return;
    }
    mPendingSequenceNumber++;
    final int toApplySeqNo = mPendingSequenceNumber;
    mTargetViewRootImpl.registerRtFrameCallback(new HardwareRenderer.FrameDrawingCallback() {

        @Override
        public void onFrameDraw(long frame) {
            if (mBarrierSurfaceControl == null || !mBarrierSurfaceControl.isValid()) {
                Message.obtain(mApplyHandler, MSG_UPDATE_SEQUENCE_NUMBER, toApplySeqNo, 0).sendToTarget();
                return;
            }
            Trace.traceBegin(Trace.TRACE_TAG_VIEW, "Sync transaction frameNumber=" + frame);
            Transaction t = new Transaction();
            for (int i = params.length - 1; i >= 0; i--) {
                SyncRtSurfaceTransactionApplierCompat.SurfaceParams surfaceParams = params[i];
                t.deferTransactionUntil(surfaceParams.surface, mBarrierSurfaceControl, frame);
                surfaceParams.applyTo(t);
            }
            t.apply();
            Trace.traceEnd(Trace.TRACE_TAG_VIEW);
            Message.obtain(mApplyHandler, MSG_UPDATE_SEQUENCE_NUMBER, toApplySeqNo, 0).sendToTarget();
        }
    });
    mTargetViewRootImpl.getView().invalidate();
}