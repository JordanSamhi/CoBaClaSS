public double removeHiddenBatterySippers(List<BatterySipper> sippers){
    double proportionalSmearPowerMah = 0;
    BatterySipper screenSipper = null;
    for (int i = sippers.size() - 1; i >= 0; i--) {
        final BatterySipper sipper = sippers.get(i);
        sipper.shouldHide = shouldHideSipper(sipper);
        if (sipper.shouldHide) {
            if (sipper.drainType != DrainType.OVERCOUNTED && sipper.drainType != DrainType.SCREEN && sipper.drainType != DrainType.AMBIENT_DISPLAY && sipper.drainType != DrainType.UNACCOUNTED && sipper.drainType != DrainType.BLUETOOTH && sipper.drainType != DrainType.WIFI && sipper.drainType != DrainType.IDLE) {
                proportionalSmearPowerMah += sipper.totalPowerMah;
            }
        }
        if (sipper.drainType == BatterySipper.DrainType.SCREEN) {
            screenSipper = sipper;
        }
    }
    smearScreenBatterySipper(sippers, screenSipper);
    return proportionalSmearPowerMah;
}