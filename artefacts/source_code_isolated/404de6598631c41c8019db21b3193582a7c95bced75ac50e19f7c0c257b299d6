public Pair<Intent, ActivityOptions> getLaunchOptions(View view){
    Intent intent = mPendingIntent != null ? new Intent() : new Intent(mFillIntent);
    intent.setSourceBounds(getSourceBounds(view));
    ActivityOptions opts = null;
    Context context = view.getContext();
    if (context.getResources().getBoolean(com.android.internal.R.bool.config_overrideRemoteViewsActivityTransition)) {
        TypedArray windowStyle = context.getTheme().obtainStyledAttributes(com.android.internal.R.styleable.Window);
        int windowAnimations = windowStyle.getResourceId(com.android.internal.R.styleable.Window_windowAnimationStyle, 0);
        TypedArray windowAnimationStyle = context.obtainStyledAttributes(windowAnimations, com.android.internal.R.styleable.WindowAnimation);
        int enterAnimationId = windowAnimationStyle.getResourceId(com.android.internal.R.styleable.WindowAnimation_activityOpenRemoteViewsEnterAnimation, 0);
        windowStyle.recycle();
        windowAnimationStyle.recycle();
        if (enterAnimationId != 0) {
            opts = ActivityOptions.makeCustomAnimation(context, enterAnimationId, 0);
            opts.setPendingIntentLaunchFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        }
    }
    if (opts == null && mViewIds != null && mElementNames != null) {
        View parent = (View) view.getParent();
        while (parent != null && !(parent instanceof AppWidgetHostView)) {
            parent = (View) parent.getParent();
        }
        if (parent instanceof AppWidgetHostView) {
            opts = ((AppWidgetHostView) parent).createSharedElementActivityOptions(mViewIds.toArray(), mElementNames.toArray(new String[mElementNames.size()]), intent);
        }
    }
    if (opts == null) {
        opts = ActivityOptions.makeBasic();
        opts.setPendingIntentLaunchFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    }
    return Pair.create(intent, opts);
}