public Iterator<TlvElement> iterator(){
    return new Iterator<TlvElement>() {

        private int mOffset = 0;

        @Override
        public boolean hasNext() {
            return mOffset < mArrayLength;
        }

        @Override
        public TlvElement next() {
            if (!hasNext()) {
                throw new NoSuchElementException();
            }
            int type = 0;
            if (mTypeSize == 1) {
                type = mArray[mOffset];
            } else if (mTypeSize == 2) {
                type = peekShort(mArray, mOffset, mByteOrder);
            }
            mOffset += mTypeSize;
            int length = 0;
            if (mLengthSize == 1) {
                length = mArray[mOffset];
            } else if (mLengthSize == 2) {
                length = peekShort(mArray, mOffset, mByteOrder);
            }
            mOffset += mLengthSize;
            TlvElement tlv = new TlvElement(type, length, mArray, mOffset);
            tlv.byteOrder = mByteOrder;
            mOffset += length;
            return tlv;
        }

        @Override
        public void remove() {
            throw new UnsupportedOperationException();
        }
    };
}