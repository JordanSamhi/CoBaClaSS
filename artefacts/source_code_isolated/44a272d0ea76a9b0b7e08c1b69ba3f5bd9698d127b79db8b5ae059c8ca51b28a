public int getTextRunCursor(@NonNull CharSequence text, @IntRange(from = 0) int contextStart, @IntRange(from = 0) int contextEnd, boolean isRtl, @IntRange(from = 0) int offset, @CursorOption int cursorOpt){
    if (text instanceof String || text instanceof SpannedString || text instanceof SpannableString) {
        return getTextRunCursor(text.toString(), contextStart, contextEnd, isRtl, offset, cursorOpt);
    }
    if (text instanceof GraphicsOperations) {
        return ((GraphicsOperations) text).getTextRunCursor(contextStart, contextEnd, isRtl, offset, cursorOpt, this);
    }
    int contextLen = contextEnd - contextStart;
    char[] buf = TemporaryBuffer.obtain(contextLen);
    TextUtils.getChars(text, contextStart, contextEnd, buf, 0);
    int relPos = getTextRunCursor(buf, 0, contextLen, isRtl, offset - contextStart, cursorOpt);
    TemporaryBuffer.recycle(buf);
    return (relPos == -1) ? -1 : relPos + contextStart;
}