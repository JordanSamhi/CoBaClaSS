public void assertScannedPackageValid(AndroidPackage pkg) throws PackageManagerException{
    if (pkg == null || pkg.getPackageName() == null) {
        throw new PackageManagerException(INSTALL_FAILED_INVALID_APK, "Passed invalid package to keyset validation.");
    }
    ArraySet<PublicKey> signingKeys = pkg.getSigningDetails().publicKeys;
    if (signingKeys == null || !(signingKeys.size() > 0) || signingKeys.contains(null)) {
        throw new PackageManagerException(INSTALL_FAILED_INVALID_APK, "Package has invalid signing-key-set.");
    }
    Map<String, ArraySet<PublicKey>> definedMapping = pkg.getKeySetMapping();
    if (definedMapping != null) {
        if (definedMapping.containsKey(null) || definedMapping.containsValue(null)) {
            throw new PackageManagerException(INSTALL_FAILED_INVALID_APK, "Package has null defined key set.");
        }
        for (ArraySet<PublicKey> value : definedMapping.values()) {
            if (!(value.size() > 0) || value.contains(null)) {
                throw new PackageManagerException(INSTALL_FAILED_INVALID_APK, "Package has null/no public keys for defined key-sets.");
            }
        }
    }
    Set<String> upgradeAliases = pkg.getUpgradeKeySets();
    if (upgradeAliases != null) {
        if (definedMapping == null || !(definedMapping.keySet().containsAll(upgradeAliases))) {
            throw new PackageManagerException(INSTALL_FAILED_INVALID_APK, "Package has upgrade-key-sets without corresponding definitions.");
        }
    }
}