public void reportShareTargetEvent(@NonNull AppTargetEvent event, @NonNull IntentFilter intentFilter){
    AppTarget appTarget = event.getTarget();
    if (appTarget == null || event.getAction() != AppTargetEvent.ACTION_LAUNCH) {
        return;
    }
    UserData userData = getUnlockedUserData(appTarget.getUser().getIdentifier());
    if (userData == null) {
        return;
    }
    PackageData packageData = userData.getOrCreatePackageData(appTarget.getPackageName());
    @Event.EventType
    int eventType = mimeTypeToShareEventType(intentFilter.getDataType(0));
    EventHistoryImpl eventHistory;
    if (ChooserActivity.LAUNCH_LOCATION_DIRECT_SHARE.equals(event.getLaunchLocation())) {
        if (appTarget.getShortcutInfo() == null) {
            return;
        }
        String shortcutId = appTarget.getShortcutInfo().getId();
        if (ChooserActivity.CHOOSER_TARGET.equals(shortcutId)) {
            return;
        }
        if (packageData.getConversationStore().getConversation(shortcutId) == null) {
            addOrUpdateConversationInfo(appTarget.getShortcutInfo());
        }
        eventHistory = packageData.getEventStore().getOrCreateEventHistory(EventStore.CATEGORY_SHORTCUT_BASED, shortcutId);
    } else {
        eventHistory = packageData.getEventStore().getOrCreateEventHistory(EventStore.CATEGORY_CLASS_BASED, appTarget.getClassName());
    }
    eventHistory.addEvent(new Event(System.currentTimeMillis(), eventType));
}