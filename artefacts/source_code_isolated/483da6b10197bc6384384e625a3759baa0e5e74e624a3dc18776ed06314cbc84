public void onInvitationReceived(byte[] srcAddress, byte[] goDeviceAddress, byte[] bssid, int persistentNetworkId, int operatingFrequency){
    WifiP2pGroup group = new WifiP2pGroup();
    group.setNetworkId(persistentNetworkId);
    WifiP2pDevice client = new WifiP2pDevice();
    try {
        client.deviceAddress = NativeUtil.macAddressFromByteArray(srcAddress);
    } catch (Exception e) {
        Log.e(TAG, "Could not decode MAC address.", e);
        return;
    }
    group.addClient(client);
    WifiP2pDevice owner = new WifiP2pDevice();
    try {
        owner.deviceAddress = NativeUtil.macAddressFromByteArray(goDeviceAddress);
    } catch (Exception e) {
        Log.e(TAG, "Could not decode Group Owner MAC address.", e);
        return;
    }
    group.setOwner(owner);
    logd("Invitation received on " + mInterface + ": " + group);
    mMonitor.broadcastP2pInvitationReceived(mInterface, group);
}