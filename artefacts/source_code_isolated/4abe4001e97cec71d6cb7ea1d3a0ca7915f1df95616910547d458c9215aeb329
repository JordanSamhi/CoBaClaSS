public void onSubscriptionsChanged(){
    if (DBG)
        log("SubscriptionListener.onSubscriptionInfoChanged");
    int subId = mPhone.getSubId();
    ServiceStateTracker.this.mPrevSubId = mPreviousSubId.get();
    if (mPreviousSubId.getAndSet(subId) != subId) {
        if (SubscriptionManager.isValidSubscriptionId(subId)) {
            Context context = mPhone.getContext();
            mPhone.notifyPhoneStateChanged();
            mPhone.notifyCallForwardingIndicator();
            if (!SubscriptionManager.isValidSubscriptionId(ServiceStateTracker.this.mPrevSubId)) {
                mPhone.notifyServiceStateChanged(mSS);
            }
            boolean restoreSelection = !context.getResources().getBoolean(com.android.internal.R.bool.skip_restoring_network_selection);
            mPhone.sendSubscriptionSettings(restoreSelection);
            setDataNetworkTypeForPhone(mSS.getRilDataRadioTechnology());
            if (mSpnUpdatePending) {
                mSubscriptionController.setPlmnSpn(mPhone.getPhoneId(), mCurShowPlmn, mCurPlmn, mCurShowSpn, mCurSpn);
                mSpnUpdatePending = false;
            }
            SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);
            String oldNetworkSelection = sp.getString(Phone.NETWORK_SELECTION_KEY, "");
            String oldNetworkSelectionName = sp.getString(Phone.NETWORK_SELECTION_NAME_KEY, "");
            String oldNetworkSelectionShort = sp.getString(Phone.NETWORK_SELECTION_SHORT_KEY, "");
            if (!TextUtils.isEmpty(oldNetworkSelection) || !TextUtils.isEmpty(oldNetworkSelectionName) || !TextUtils.isEmpty(oldNetworkSelectionShort)) {
                SharedPreferences.Editor editor = sp.edit();
                editor.putString(Phone.NETWORK_SELECTION_KEY + subId, oldNetworkSelection);
                editor.putString(Phone.NETWORK_SELECTION_NAME_KEY + subId, oldNetworkSelectionName);
                editor.putString(Phone.NETWORK_SELECTION_SHORT_KEY + subId, oldNetworkSelectionShort);
                editor.remove(Phone.NETWORK_SELECTION_KEY);
                editor.remove(Phone.NETWORK_SELECTION_NAME_KEY);
                editor.remove(Phone.NETWORK_SELECTION_SHORT_KEY);
                editor.commit();
            }
            updateSpnDisplay();
        }
        mPhone.updateVoiceMail();
    }
}