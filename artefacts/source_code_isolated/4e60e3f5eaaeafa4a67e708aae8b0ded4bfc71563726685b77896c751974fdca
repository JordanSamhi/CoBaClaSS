public static void rebootWipeUserData(Context context, boolean shutdown, String reason, boolean force, boolean wipeEuicc) throws IOException{
    UserManager um = (UserManager) context.getSystemService(Context.USER_SERVICE);
    if (!force && um.hasUserRestriction(UserManager.DISALLOW_FACTORY_RESET)) {
        throw new SecurityException("Wiping data is not allowed for this user.");
    }
    final ConditionVariable condition = new ConditionVariable();
    Intent intent = new Intent("android.intent.action.MASTER_CLEAR_NOTIFICATION");
    intent.addFlags(Intent.FLAG_RECEIVER_FOREGROUND | Intent.FLAG_RECEIVER_INCLUDE_BACKGROUND);
    context.sendOrderedBroadcastAsUser(intent, UserHandle.SYSTEM, android.Manifest.permission.MASTER_CLEAR, new BroadcastReceiver() {

        @Override
        public void onReceive(Context context, Intent intent) {
            condition.open();
        }
    }, null, 0, null, null);
    condition.block();
    EuiccManager euiccManager = context.getSystemService(EuiccManager.class);
    if (wipeEuicc) {
        wipeEuiccData(context, PACKAGE_NAME_EUICC_DATA_MANAGEMENT_CALLBACK);
    } else {
        removeEuiccInvisibleSubs(context, euiccManager);
    }
    String shutdownArg = null;
    if (shutdown) {
        shutdownArg = "--shutdown_after";
    }
    String reasonArg = null;
    if (!TextUtils.isEmpty(reason)) {
        String timeStamp = DateFormat.format("yyyy-MM-ddTHH:mm:ssZ", System.currentTimeMillis()).toString();
        reasonArg = "--reason=" + sanitizeArg(reason + "," + timeStamp);
    }
    final String localeArg = "--locale=" + Locale.getDefault().toLanguageTag();
    bootCommand(context, shutdownArg, "--wipe_data", reasonArg, localeArg);
}