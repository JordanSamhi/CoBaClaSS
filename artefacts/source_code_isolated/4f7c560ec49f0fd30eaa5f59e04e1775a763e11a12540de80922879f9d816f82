public DateTimeFormatterBuilder appendText(TemporalField field, Map<Long, String> textLookup){
    Objects.requireNonNull(field, "field");
    Objects.requireNonNull(textLookup, "textLookup");
    Map<Long, String> copy = new LinkedHashMap<>(textLookup);
    Map<TextStyle, Map<Long, String>> map = Collections.singletonMap(TextStyle.FULL, copy);
    final LocaleStore store = new LocaleStore(map);
    DateTimeTextProvider provider = new DateTimeTextProvider() {

        @Override
        public String getText(TemporalField field, long value, TextStyle style, Locale locale) {
            return store.getText(value, style);
        }

        @Override
        public Iterator<Entry<String, Long>> getTextIterator(TemporalField field, TextStyle style, Locale locale) {
            return store.getTextIterator(style);
        }
    };
    appendInternal(new TextPrinterParser(field, TextStyle.FULL, provider));
    return this;
}