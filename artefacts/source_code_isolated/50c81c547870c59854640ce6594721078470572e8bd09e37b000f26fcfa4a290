public static int computeMinSdkVersion(@IntRange(from = 1) int minVers, @Nullable String minCode, @IntRange(from = 1) int platformSdkVersion, @NonNull String[] platformSdkCodenames, @NonNull String[] outError){
    if (minCode == null) {
        if (minVers <= platformSdkVersion) {
            return minVers;
        }
        outError[0] = "Requires newer sdk version #" + minVers + " (current version is #" + platformSdkVersion + ")";
        return -1;
    }
    if (matchTargetCode(platformSdkCodenames, minCode)) {
        return Build.VERSION_CODES.CUR_DEVELOPMENT;
    }
    if (platformSdkCodenames.length > 0) {
        outError[0] = "Requires development platform " + minCode + " (current platform is any of " + Arrays.toString(platformSdkCodenames) + ")";
    } else {
        outError[0] = "Requires development platform " + minCode + " but this is a release platform.";
    }
    return -1;
}