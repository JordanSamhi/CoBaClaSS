public void read(long horizonMs){
    ArrayList<Event> nativeEvents = new ArrayList<>();
    try {
        mReader.readEvents(LOGTAGS, horizonMs, nativeEvents);
    } catch (IOException e) {
        e.printStackTrace();
    }
    mPendingQueue.clear();
    mSeenQueue.clear();
    for (Event event : nativeEvents) {
        final long eventTimestampMs = event.getTimeMillis();
        Object data = event.getData();
        Object[] objects;
        if (data instanceof Object[]) {
            objects = (Object[]) data;
        } else {
            objects = new Object[1];
            objects[0] = data;
        }
        final LogMaker log = new LogMaker(objects).setTimestamp(eventTimestampMs).setUid(event.getUid()).setProcessId(event.getProcessId());
        if (log.getCategory() == MetricsEvent.METRICS_CHECKPOINT) {
            if (log.getSubtype() == mCheckpointTag) {
                mPendingQueue.clear();
            }
        } else {
            mPendingQueue.offer(log);
        }
    }
}