public void retrieveNotificationList(@EuiccNotification.Event int events, AsyncResultCallback<EuiccNotification[]> callback, Handler handler){
    sendApdu(newRequestProvider((RequestBuilder requestBuilder) -> requestBuilder.addStoreData(Asn1Node.newBuilder(Tags.TAG_RETRIEVE_NOTIFICATIONS_LIST).addChild(Asn1Node.newBuilder(Tags.TAG_CTX_COMP_0).addChildAsBits(Tags.TAG_CTX_1, events)).build().toHex())), response -> {
        Asn1Node root = parseResponse(response);
        if (root.hasChild(Tags.TAG_CTX_1)) {
            int error = root.getChild(Tags.TAG_CTX_1).asInteger();
            switch(error) {
                case CODE_NO_RESULT_AVAILABLE:
                    return new EuiccNotification[0];
                default:
                    throw new EuiccCardErrorException(EuiccCardErrorException.OPERATION_RETRIEVE_NOTIFICATION, error);
            }
        }
        List<Asn1Node> nodes = root.getChild(Tags.TAG_CTX_COMP_0).getChildren();
        EuiccNotification[] notifications = new EuiccNotification[nodes.size()];
        for (int i = 0; i < notifications.length; ++i) {
            notifications[i] = createNotification(nodes.get(i));
        }
        return notifications;
    }, callback, handler);
}