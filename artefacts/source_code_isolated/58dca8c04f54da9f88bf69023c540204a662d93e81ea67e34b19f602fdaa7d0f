public void dump(PrintWriter pw){
    final String prefix = "        ";
    pw.print(prefix);
    pw.print("mName: ");
    pw.println(mName);
    pw.print(prefix);
    pw.print("mBaseType: ");
    pw.println(UserInfo.flagsToString(mBaseType));
    pw.print(prefix);
    pw.print("mEnabled: ");
    pw.println(mEnabled);
    pw.print(prefix);
    pw.print("mMaxAllowed: ");
    pw.println(mMaxAllowed);
    pw.print(prefix);
    pw.print("mMaxAllowedPerParent: ");
    pw.println(mMaxAllowedPerParent);
    pw.print(prefix);
    pw.print("mDefaultUserInfoFlags: ");
    pw.println(UserInfo.flagsToString(mDefaultUserInfoPropertyFlags));
    pw.print(prefix);
    pw.print("mLabel: ");
    pw.println(mLabel);
    if (isSystem()) {
        pw.print(prefix);
        pw.println("config_defaultFirstUserRestrictions: ");
        try {
            final Bundle restrictions = new Bundle();
            final String[] defaultFirstUserRestrictions = Resources.getSystem().getStringArray(com.android.internal.R.array.config_defaultFirstUserRestrictions);
            for (String userRestriction : defaultFirstUserRestrictions) {
                if (UserRestrictionsUtils.isValidRestriction(userRestriction)) {
                    restrictions.putBoolean(userRestriction, true);
                }
            }
            UserRestrictionsUtils.dumpRestrictions(pw, prefix + "    ", restrictions);
        } catch (Resources.NotFoundException e) {
            pw.print(prefix);
            pw.println("    none - resource not found");
        }
    } else {
        pw.print(prefix);
        pw.println("mDefaultRestrictions: ");
        UserRestrictionsUtils.dumpRestrictions(pw, prefix + "    ", mDefaultRestrictions);
    }
    pw.print(prefix);
    pw.print("mIconBadge: ");
    pw.println(mIconBadge);
    pw.print(prefix);
    pw.print("mBadgePlain: ");
    pw.println(mBadgePlain);
    pw.print(prefix);
    pw.print("mBadgeNoBackground: ");
    pw.println(mBadgeNoBackground);
    pw.print(prefix);
    pw.print("mBadgeLabels.length: ");
    pw.println(mBadgeLabels != null ? mBadgeLabels.length : "0(null)");
    pw.print(prefix);
    pw.print("mBadgeColors.length: ");
    pw.println(mBadgeColors != null ? mBadgeColors.length : "0(null)");
    pw.print(prefix);
    pw.print("mDarkThemeBadgeColors.length: ");
    pw.println(mDarkThemeBadgeColors != null ? mDarkThemeBadgeColors.length : "0(null)");
}