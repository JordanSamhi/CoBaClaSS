public void setControl(@Nullable InsetsSourceControl control, @InsetsType int[] showTypes, @InsetsType int[] hideTypes){
    if (mSourceControl == control) {
        return;
    }
    SurfaceControl oldLeash = mSourceControl != null ? mSourceControl.getLeash() : null;
    final InsetsSourceControl lastControl = mSourceControl;
    mSourceControl = control;
    if (control != null) {
        if (DEBUG)
            Log.d(TAG, String.format("setControl -> %s on %s", InsetsState.typeToString(control.getType()), mController.getHost().getRootViewTitle()));
    }
    if (mSourceControl == null) {
        mController.notifyControlRevoked(this);
        mState.getSource(getType()).setVisible(mController.getLastDispatchedState().getSource(getType()).isVisible());
        applyLocalVisibilityOverride();
    } else {
        final boolean requestedVisible = isRequestedVisibleAwaitingControl();
        final boolean needAnimation = requestedVisible != mState.getSource(mType).isVisible();
        if (control.getLeash() != null && (needAnimation || mIsAnimationPending)) {
            if (DEBUG)
                Log.d(TAG, String.format("Gaining control in %s, requestedVisible: %b", mController.getHost().getRootViewTitle(), requestedVisible));
            if (requestedVisible) {
                showTypes[0] |= toPublicType(getType());
            } else {
                hideTypes[0] |= toPublicType(getType());
            }
            mIsAnimationPending = false;
        } else {
            if (needAnimation) {
                mIsAnimationPending = true;
            }
            if (applyLocalVisibilityOverride()) {
                mController.notifyVisibilityChanged();
            }
            SurfaceControl newLeash = mSourceControl.getLeash();
            if (oldLeash == null || newLeash == null || !oldLeash.isSameSurface(newLeash)) {
                applyHiddenToControl();
            }
            if (!requestedVisible && !mIsAnimationPending) {
                removeSurface();
            }
        }
    }
    if (lastControl != null) {
        lastControl.release(SurfaceControl::release);
    }
}