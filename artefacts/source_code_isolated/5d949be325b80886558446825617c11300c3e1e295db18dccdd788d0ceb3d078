public Typeface build(){
    if (mFontBuilder == null) {
        return resolveFallbackTypeface();
    }
    try {
        final Font font = mFontBuilder.build();
        final String key = mAssetManager == null ? null : createAssetUid(mAssetManager, mPath, font.getTtcIndex(), font.getAxes(), mWeight, mItalic, mFallbackFamilyName == null ? DEFAULT_FAMILY : mFallbackFamilyName);
        if (key != null) {
            synchronized (sDynamicCacheLock) {
                final Typeface typeface = sDynamicTypefaceCache.get(key);
                if (typeface != null) {
                    return typeface;
                }
            }
        }
        final FontFamily family = new FontFamily.Builder(font).build();
        final int weight = mWeight == RESOLVE_BY_FONT_TABLE ? font.getStyle().getWeight() : mWeight;
        final int slant = mItalic == RESOLVE_BY_FONT_TABLE ? font.getStyle().getSlant() : mItalic;
        final CustomFallbackBuilder builder = new CustomFallbackBuilder(family).setStyle(new FontStyle(weight, slant));
        if (mFallbackFamilyName != null) {
            builder.setSystemFallback(mFallbackFamilyName);
        }
        final Typeface typeface = builder.build();
        if (key != null) {
            synchronized (sDynamicCacheLock) {
                sDynamicTypefaceCache.put(key, typeface);
            }
        }
        return typeface;
    } catch (IOException | IllegalArgumentException e) {
        return resolveFallbackTypeface();
    }
}