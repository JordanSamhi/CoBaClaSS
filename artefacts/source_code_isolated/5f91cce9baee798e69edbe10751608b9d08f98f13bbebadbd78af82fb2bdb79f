public static WifiEnterpriseConfig parseFromXml(XmlPullParser in, int outerTagDepth, boolean shouldExpectEncryptedCredentials, @Nullable WifiConfigStoreEncryptionUtil encryptionUtil) throws XmlPullParserException, IOException{
    WifiEnterpriseConfig enterpriseConfig = new WifiEnterpriseConfig();
    while (XmlUtilHelper.nextElementWithin(in, outerTagDepth)) {
        if (in.getAttributeValue(null, "name") != null) {
            String[] valueName = new String[1];
            Object value = XmlUtil.readCurrentValue(in, valueName);
            if (valueName[0] == null) {
                throw new XmlPullParserException("Missing value name");
            }
            switch(valueName[0]) {
                case XML_TAG_IDENTITY:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.IDENTITY_KEY, (String) value);
                    break;
                case XML_TAG_ANON_IDENTITY:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.ANON_IDENTITY_KEY, (String) value);
                    break;
                case XML_TAG_PASSWORD:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.PASSWORD_KEY, (String) value);
                    if (shouldExpectEncryptedCredentials && !TextUtils.isEmpty(enterpriseConfig.getFieldValue(WifiEnterpriseConfig.PASSWORD_KEY))) {
                        Log.e(TAG, "password value not expected");
                    }
                    break;
                case XML_TAG_CLIENT_CERT:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.CLIENT_CERT_KEY, (String) value);
                    break;
                case XML_TAG_CA_CERT:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.CA_CERT_KEY, (String) value);
                    break;
                case XML_TAG_SUBJECT_MATCH:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.SUBJECT_MATCH_KEY, (String) value);
                    break;
                case XML_TAG_ENGINE:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.ENGINE_KEY, (String) value);
                    break;
                case XML_TAG_ENGINE_ID:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.ENGINE_ID_KEY, (String) value);
                    break;
                case XML_TAG_PRIVATE_KEY_ID:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.PRIVATE_KEY_ID_KEY, (String) value);
                    break;
                case XML_TAG_ALT_SUBJECT_MATCH:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.ALTSUBJECT_MATCH_KEY, (String) value);
                    break;
                case XML_TAG_DOM_SUFFIX_MATCH:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.DOM_SUFFIX_MATCH_KEY, (String) value);
                    break;
                case XML_TAG_CA_PATH:
                    enterpriseConfig.setFieldValue(WifiEnterpriseConfig.CA_PATH_KEY, (String) value);
                    break;
                case XML_TAG_OCSP:
                    enterpriseConfig.setOcsp((int) value);
                    break;
                case XML_TAG_EAP_METHOD:
                    enterpriseConfig.setEapMethod((int) value);
                    break;
                case XML_TAG_PHASE2_METHOD:
                    enterpriseConfig.setPhase2Method((int) value);
                    break;
                case XML_TAG_PLMN:
                    enterpriseConfig.setPlmn((String) value);
                    break;
                case XML_TAG_REALM:
                    enterpriseConfig.setRealm((String) value);
                    break;
                case XML_TAG_WAPI_CERT_SUITE:
                    enterpriseConfig.setWapiCertSuite((String) value);
                    break;
                default:
                    Log.w(TAG, "Ignoring unknown value name found: " + valueName[0]);
                    break;
            }
        } else {
            String tagName = in.getName();
            if (tagName == null) {
                throw new XmlPullParserException("Unexpected null tag found");
            }
            switch(tagName) {
                case XML_TAG_PASSWORD:
                    if (!shouldExpectEncryptedCredentials || encryptionUtil == null) {
                        throw new XmlPullParserException("encrypted password section not expected");
                    }
                    EncryptedData encryptedData = EncryptedDataXmlUtil.parseFromXml(in, outerTagDepth + 1);
                    byte[] passwordBytes = encryptionUtil.decrypt(encryptedData);
                    if (passwordBytes == null) {
                        Log.wtf(TAG, "Decryption of password failed");
                    } else {
                        enterpriseConfig.setFieldValue(WifiEnterpriseConfig.PASSWORD_KEY, new String(passwordBytes));
                    }
                    break;
                default:
                    Log.w(TAG, "Ignoring unknown tag name found: " + tagName);
                    break;
            }
        }
    }
    return enterpriseConfig;
}