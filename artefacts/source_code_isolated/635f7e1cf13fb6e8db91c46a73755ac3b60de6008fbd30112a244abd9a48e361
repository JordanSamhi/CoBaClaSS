public long until(Temporal endExclusive, TemporalUnit unit){
    OffsetTime end = OffsetTime.from(endExclusive);
    if (unit instanceof ChronoUnit) {
        long nanosUntil = end.toEpochNano() - toEpochNano();
        switch((ChronoUnit) unit) {
            case NANOS:
                return nanosUntil;
            case MICROS:
                return nanosUntil / 1000;
            case MILLIS:
                return nanosUntil / 1000_000;
            case SECONDS:
                return nanosUntil / NANOS_PER_SECOND;
            case MINUTES:
                return nanosUntil / NANOS_PER_MINUTE;
            case HOURS:
                return nanosUntil / NANOS_PER_HOUR;
            case HALF_DAYS:
                return nanosUntil / (12 * NANOS_PER_HOUR);
        }
        throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
}