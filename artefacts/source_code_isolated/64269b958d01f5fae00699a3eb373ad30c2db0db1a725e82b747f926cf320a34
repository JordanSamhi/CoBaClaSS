public synchronized void updateActiveSubscriptionInfoList(List<SubscriptionInfo> subInfos){
    List<Integer> inActivePhoneList = new ArrayList<>();
    for (int i = 0; i < mLastActiveSubscriptionInfos.size(); i++) {
        inActivePhoneList.add(mLastActiveSubscriptionInfos.keyAt(i));
    }
    for (SubscriptionInfo info : subInfos) {
        int phoneId = info.getSimSlotIndex();
        inActivePhoneList.removeIf(value -> value.equals(phoneId));
        ActiveSubscriptionInfo activeSubscriptionInfo = new ActiveSubscriptionInfo();
        activeSubscriptionInfo.slotIndex = phoneId;
        activeSubscriptionInfo.isOpportunistic = info.isOpportunistic() ? 1 : 0;
        activeSubscriptionInfo.carrierId = info.getCarrierId();
        if (info.getMccString() != null && info.getMncString() != null) {
            activeSubscriptionInfo.simMccmnc = info.getMccString() + info.getMncString();
        }
        if (!MessageNano.messageNanoEquals(mLastActiveSubscriptionInfos.get(phoneId), activeSubscriptionInfo)) {
            addTelephonyEvent(new TelephonyEventBuilder(phoneId).setActiveSubscriptionInfoChange(activeSubscriptionInfo).build());
            mLastActiveSubscriptionInfos.put(phoneId, activeSubscriptionInfo);
        }
    }
    for (int phoneId : inActivePhoneList) {
        mLastActiveSubscriptionInfos.remove(phoneId);
        addTelephonyEvent(new TelephonyEventBuilder(phoneId).setActiveSubscriptionInfoChange(makeInvalidSubscriptionInfo(phoneId)).build());
    }
}