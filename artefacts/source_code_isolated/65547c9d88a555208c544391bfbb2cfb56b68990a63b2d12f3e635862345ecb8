public void processCode(){
    try {
        if (isPinPukCommand()) {
            String oldPinOrPuk = mSia;
            String newPinOrPuk = mSib;
            int pinLen = newPinOrPuk.length();
            if (isRegister()) {
                if (!newPinOrPuk.equals(mSic)) {
                    handlePasswordError(com.android.internal.R.string.mismatchPin);
                } else if (pinLen < 4 || pinLen > 8) {
                    handlePasswordError(com.android.internal.R.string.invalidPin);
                } else if (mSc.equals(SC_PIN) && mUiccApplication != null && mUiccApplication.getState() == AppState.APPSTATE_PUK) {
                    handlePasswordError(com.android.internal.R.string.needPuk);
                } else if (mUiccApplication != null) {
                    Rlog.d(LOG_TAG, "process mmi service code using UiccApp sc=" + mSc);
                    if (mSc.equals(SC_PIN)) {
                        mUiccApplication.changeIccLockPassword(oldPinOrPuk, newPinOrPuk, obtainMessage(EVENT_SET_COMPLETE, this));
                    } else if (mSc.equals(SC_PIN2)) {
                        mUiccApplication.changeIccFdnPassword(oldPinOrPuk, newPinOrPuk, obtainMessage(EVENT_SET_COMPLETE, this));
                    } else if (mSc.equals(SC_PUK)) {
                        mUiccApplication.supplyPuk(oldPinOrPuk, newPinOrPuk, obtainMessage(EVENT_SET_COMPLETE, this));
                    } else if (mSc.equals(SC_PUK2)) {
                        mUiccApplication.supplyPuk2(oldPinOrPuk, newPinOrPuk, obtainMessage(EVENT_SET_COMPLETE, this));
                    } else {
                        throw new RuntimeException("Unsupported service code=" + mSc);
                    }
                } else {
                    throw new RuntimeException("No application mUiccApplicaiton is null");
                }
            } else {
                throw new RuntimeException("Ivalid register/action=" + mAction);
            }
        }
    } catch (RuntimeException exc) {
        mState = State.FAILED;
        mMessage = mContext.getText(com.android.internal.R.string.mmiError);
        mPhone.onMMIDone(this);
    }
}