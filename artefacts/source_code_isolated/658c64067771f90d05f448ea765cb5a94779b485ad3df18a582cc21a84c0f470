public void openRemoteInputBridge(IBinder token, String name, int width, int height, int maxPointers) throws RuntimeException{
    final IBinder finalToken = Objects.requireNonNull(token);
    final String finalName = Objects.requireNonNull(name);
    synchronized (mOpenBridgeRunnables) {
        if (mRemoteServiceInput == null) {
            Log.d(TAG, "Delaying openRemoteInputBridge() for " + finalName);
            mOpenBridgeRunnables.add(() -> {
                try {
                    mRemoteServiceInput.openInputBridge(finalToken, finalName, width, height, maxPointers);
                    Log.d(TAG, "Delayed openRemoteInputBridge() for " + finalName + ": success");
                } catch (RemoteException re) {
                    Log.e(TAG, "Delayed openRemoteInputBridge() for " + finalName + ": failure", re);
                }
            });
            return;
        }
    }
    try {
        mRemoteServiceInput.openInputBridge(finalToken, finalName, width, height, maxPointers);
        Log.d(TAG, "openRemoteInputBridge() for " + finalName + ": success");
    } catch (RemoteException re) {
        throw re.rethrowFromSystemServer();
    }
}