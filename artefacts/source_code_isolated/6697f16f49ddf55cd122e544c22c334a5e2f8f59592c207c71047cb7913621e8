public List<SubscriptionInfo> getFilteredSubscriptionInfo(boolean forceReload){
    List<SubscriptionInfo> subscriptions = getSubscriptionInfo(false);
    if (subscriptions.size() == 2) {
        SubscriptionInfo info1 = subscriptions.get(0);
        SubscriptionInfo info2 = subscriptions.get(1);
        if (info1.getGroupUuid() != null && info1.getGroupUuid().equals(info2.getGroupUuid())) {
            if (!info1.isOpportunistic() && !info2.isOpportunistic())
                return subscriptions;
            boolean alwaysShowPrimary = CarrierConfigManager.getDefaultConfig().getBoolean(CarrierConfigManager.KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEAN);
            if (alwaysShowPrimary) {
                subscriptions.remove(info1.isOpportunistic() ? info1 : info2);
            } else {
                subscriptions.remove(info1.getSubscriptionId() == mActiveMobileDataSubscription ? info2 : info1);
            }
        }
    }
    return subscriptions;
}