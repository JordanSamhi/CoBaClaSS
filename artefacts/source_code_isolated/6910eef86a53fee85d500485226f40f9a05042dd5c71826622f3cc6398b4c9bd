public void setColor(int mainColor, boolean animated){
    if (mainColor == mMainColorTo) {
        return;
    }
    if (mColorAnimation != null && mColorAnimation.isRunning()) {
        mColorAnimation.cancel();
    }
    mMainColorTo = mainColor;
    if (animated) {
        final int mainFrom = mMainColor;
        ValueAnimator anim = ValueAnimator.ofFloat(0, 1);
        anim.setDuration(COLOR_ANIMATION_DURATION);
        anim.addUpdateListener(animation -> {
            float ratio = (float) animation.getAnimatedValue();
            mMainColor = ColorUtils.blendARGB(mainFrom, mainColor, ratio);
            invalidateSelf();
        });
        anim.addListener(new AnimatorListenerAdapter() {

            @Override
            public void onAnimationEnd(Animator animation, boolean isReverse) {
                if (mColorAnimation == animation) {
                    mColorAnimation = null;
                }
            }
        });
        anim.setInterpolator(new DecelerateInterpolator());
        anim.start();
        mColorAnimation = anim;
    } else {
        mMainColor = mainColor;
        invalidateSelf();
    }
}