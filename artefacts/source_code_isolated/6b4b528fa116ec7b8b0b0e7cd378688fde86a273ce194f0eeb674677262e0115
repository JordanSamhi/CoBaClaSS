public void dump(@NonNull String prefix, @NonNull PrintWriter pw){
    String tab = "  ";
    pw.append(prefix).append("service:").println();
    pw.append(prefix).append(tab).append("userId=").append(String.valueOf(mUserId)).println();
    pw.append(prefix).append(tab).append("componentName=").append(mComponentName.flattenToString()).println();
    pw.append(prefix).append(tab).append("destroyed=").append(String.valueOf(mDestroyed)).println();
    pw.append(prefix).append(tab).append("numUnfinishedRequests=").append(String.valueOf(mUnfinishedRequests.size())).println();
    final boolean bound = handleIsBound();
    pw.append(prefix).append(tab).append("bound=").append(String.valueOf(bound));
    final long idleTimeout = getTimeoutIdleBindMillis();
    if (bound) {
        if (idleTimeout > 0) {
            pw.append(" (unbind in : ");
            TimeUtils.formatDuration(mNextUnbind - SystemClock.elapsedRealtime(), pw);
            pw.append(")");
        } else {
            pw.append(" (permanently bound)");
        }
    }
    pw.println();
    pw.append(prefix).append("mBindingFlags=").println(mBindingFlags);
    pw.append(prefix).append("idleTimeout=").append(Long.toString(idleTimeout / 1000)).append("s\n");
    pw.append(prefix).append("requestTimeout=");
    try {
        pw.append(Long.toString(getRemoteRequestMillis() / 1000)).append("s\n");
    } catch (UnsupportedOperationException e) {
        pw.append("not supported\n");
    }
    pw.println();
}