public void testFocus_autofillBothFields() throws Throwable{
    MyAutofillService.newCannedResponse().setUsername(mUsername.getAutofillId(), "user").setPassword(mPassword.getAutofillId(), "pass").reply();
    setService();
    MyAutofillCallback callback = new MyAutofillCallback();
    mAfm.registerCallback(callback);
    mActivityRule.runOnUiThread(() -> mUsername.requestFocus());
    MyAutofillService.getLastFillRequest();
    callback.expectEvent(mUsername, EVENT_INPUT_SHOWN);
    mActivityRule.runOnUiThread(() -> mPassword.requestFocus());
    callback.expectEvent(mUsername, EVENT_INPUT_HIDDEN);
    callback.expectEvent(mPassword, EVENT_INPUT_SHOWN);
    try {
        BenchmarkState state = mPerfStatusReporter.getBenchmarkState();
        while (state.keepRunning()) {
            mActivityRule.runOnUiThread(() -> mUsername.requestFocus());
            state.pauseTiming();
            callback.expectEvent(mPassword, EVENT_INPUT_HIDDEN);
            callback.expectEvent(mUsername, EVENT_INPUT_SHOWN);
            state.resumeTiming();
            mActivityRule.runOnUiThread(() -> mPassword.requestFocus());
            state.pauseTiming();
            callback.expectEvent(mUsername, EVENT_INPUT_HIDDEN);
            callback.expectEvent(mPassword, EVENT_INPUT_SHOWN);
            state.resumeTiming();
        }
        callback.assertNoAsyncErrors();
    } finally {
        mAfm.unregisterCallback(callback);
    }
}