public WifiMetricsProto.WifiAwareLog consolidateProto(){
    WifiMetricsProto.WifiAwareLog log = new WifiMetricsProto.WifiAwareLog();
    long now = mClock.getElapsedSinceBootMillis();
    synchronized (mLock) {
        log.histogramAwareAvailableDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramAwareAvailableDurationMs, DURATION_LOG_HISTOGRAM));
        log.availableTimeMs = mAvailableTimeMs;
        if (mLastEnableUsageInThisSampleWindowMs != 0) {
            log.availableTimeMs += now - mLastEnableUsageInThisSampleWindowMs;
        }
        log.histogramAwareEnabledDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramAwareEnabledDurationMs, DURATION_LOG_HISTOGRAM));
        log.enabledTimeMs = mEnabledTimeMs;
        if (mLastEnableAwareInThisSampleWindowMs != 0) {
            log.enabledTimeMs += now - mLastEnableAwareInThisSampleWindowMs;
        }
        log.numApps = mAttachDataByUid.size();
        log.numAppsUsingIdentityCallback = 0;
        log.maxConcurrentAttachSessionsInApp = 0;
        for (AttachData ad : mAttachDataByUid.values()) {
            if (ad.mUsesIdentityCallback) {
                ++log.numAppsUsingIdentityCallback;
            }
            log.maxConcurrentAttachSessionsInApp = Math.max(log.maxConcurrentAttachSessionsInApp, ad.mMaxConcurrentAttaches);
        }
        log.histogramAttachSessionStatus = histogramToProtoArray(mAttachStatusData);
        log.histogramAttachDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramAttachDuration, DURATION_LOG_HISTOGRAM));
        log.maxConcurrentPublishInApp = mMaxPublishInApp;
        log.maxConcurrentSubscribeInApp = mMaxSubscribeInApp;
        log.maxConcurrentDiscoverySessionsInApp = mMaxDiscoveryInApp;
        log.maxConcurrentPublishInSystem = mMaxPublishInSystem;
        log.maxConcurrentSubscribeInSystem = mMaxSubscribeInSystem;
        log.maxConcurrentDiscoverySessionsInSystem = mMaxDiscoveryInSystem;
        log.histogramPublishStatus = histogramToProtoArray(mPublishStatusData);
        log.histogramSubscribeStatus = histogramToProtoArray(mSubscribeStatusData);
        log.numAppsWithDiscoverySessionFailureOutOfResources = mAppsWithDiscoverySessionResourceFailure.size();
        log.histogramPublishSessionDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramPublishDuration, DURATION_LOG_HISTOGRAM));
        log.histogramSubscribeSessionDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramSubscribeDuration, DURATION_LOG_HISTOGRAM));
        log.maxConcurrentPublishWithRangingInApp = mMaxPublishWithRangingInApp;
        log.maxConcurrentSubscribeWithRangingInApp = mMaxSubscribeWithRangingInApp;
        log.maxConcurrentPublishWithRangingInSystem = mMaxPublishWithRangingInSystem;
        log.maxConcurrentSubscribeWithRangingInSystem = mMaxSubscribeWithRangingInSystem;
        log.histogramSubscribeGeofenceMin = histogramToProtoArray(MetricsUtils.linearHistogramToGenericBuckets(mHistogramSubscribeGeofenceMin, RANGING_LIMIT_METERS));
        log.histogramSubscribeGeofenceMax = histogramToProtoArray(MetricsUtils.linearHistogramToGenericBuckets(mHistogramSubscribeGeofenceMax, RANGING_LIMIT_METERS));
        log.numSubscribesWithRanging = mNumSubscribesWithRanging;
        log.numMatchesWithRanging = mNumMatchesWithRanging;
        log.numMatchesWithoutRangingForRangingEnabledSubscribes = mNumMatchesWithoutRangingForRangingEnabledSubscribes;
        log.maxConcurrentNdiInApp = mMaxNdiInApp;
        log.maxConcurrentNdiInSystem = mMaxNdiInSystem;
        log.maxConcurrentNdpInApp = mMaxNdpInApp;
        log.maxConcurrentNdpInSystem = mMaxNdpInSystem;
        log.maxConcurrentSecureNdpInApp = mMaxSecureNdpInApp;
        log.maxConcurrentSecureNdpInSystem = mMaxSecureNdpInSystem;
        log.maxConcurrentNdpPerNdi = mMaxNdpPerNdi;
        log.histogramRequestNdpStatus = histogramToProtoArray(mInBandNdpStatusData);
        log.histogramRequestNdpOobStatus = histogramToProtoArray(mOutOfBandNdpStatusData);
        log.histogramNdpCreationTimeMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mNdpCreationTimeDuration, DURATION_LOG_HISTOGRAM));
        log.ndpCreationTimeMsMin = mNdpCreationTimeMin;
        log.ndpCreationTimeMsMax = mNdpCreationTimeMax;
        log.ndpCreationTimeMsSum = mNdpCreationTimeSum;
        log.ndpCreationTimeMsSumOfSq = mNdpCreationTimeSumSq;
        log.ndpCreationTimeMsNumSamples = mNdpCreationTimeNumSamples;
        log.histogramNdpSessionDurationMs = histogramToProtoArray(MetricsUtils.logHistogramToGenericBuckets(mHistogramNdpDuration, DURATION_LOG_HISTOGRAM));
    }
    return log;
}