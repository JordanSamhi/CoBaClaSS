public boolean canAddMoreProfilesToUser(String userType, @UserIdInt int userId, boolean allowedToRemoveOne){
    checkManageUsersPermission("check if more profiles can be added.");
    final UserTypeDetails type = mUserTypes.get(userType);
    if (type == null) {
        return false;
    }
    final boolean isManagedProfile = type.isManagedProfile();
    if (isManagedProfile) {
        if (!mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_MANAGED_USERS)) {
            return false;
        }
    }
    synchronized (mUsersLock) {
        UserInfo userInfo = getUserInfoLU(userId);
        if (userInfo == null || !userInfo.canHaveProfile()) {
            return false;
        }
        final int maxUsersOfType = getMaxUsersOfTypePerParent(type);
        if (maxUsersOfType != UserTypeDetails.UNLIMITED_NUMBER_OF_USERS) {
            final int userTypeCount = getProfileIds(userId, userType, false).length;
            final int profilesRemovedCount = userTypeCount > 0 && allowedToRemoveOne ? 1 : 0;
            if (userTypeCount - profilesRemovedCount >= maxUsersOfType) {
                return false;
            }
            if (isManagedProfile) {
                int usersCountAfterRemoving = getAliveUsersExcludingGuestsCountLU() - profilesRemovedCount;
                return usersCountAfterRemoving == 1 || usersCountAfterRemoving < UserManager.getMaxSupportedUsers();
            }
        }
    }
    return true;
}