public static String getSubString(String text, int start, int end, int minimumLength){
    Preconditions.checkArgument(start >= 0);
    Preconditions.checkArgument(end <= text.length());
    Preconditions.checkArgument(start <= end);
    if (text.length() < minimumLength) {
        return text;
    }
    final int length = end - start;
    if (length >= minimumLength) {
        return text.substring(start, end);
    }
    final int offset = (minimumLength - length) / 2;
    int iterStart = Math.max(0, Math.min(start - offset, text.length() - minimumLength));
    int iterEnd = Math.min(text.length(), iterStart + minimumLength);
    synchronized (WORD_ITERATOR) {
        WORD_ITERATOR.setText(text);
        iterStart = WORD_ITERATOR.isBoundary(iterStart) ? iterStart : Math.max(0, WORD_ITERATOR.preceding(iterStart));
        iterEnd = WORD_ITERATOR.isBoundary(iterEnd) ? iterEnd : Math.max(iterEnd, WORD_ITERATOR.following(iterEnd));
        WORD_ITERATOR.setText("");
        return text.substring(iterStart, iterEnd);
    }
}