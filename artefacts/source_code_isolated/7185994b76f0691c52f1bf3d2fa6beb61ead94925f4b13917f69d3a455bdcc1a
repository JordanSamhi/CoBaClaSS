public long createPasswordBasedSyntheticPassword(IGateKeeperService gatekeeper, LockscreenCredential credential, AuthenticationToken authToken, int userId){
    long handle = generateHandle();
    PasswordData pwd = PasswordData.create(credential.getType());
    byte[] pwdToken = computePasswordToken(credential, pwd);
    final long sid;
    final byte[] applicationId;
    if (isWeaverAvailable()) {
        int weaverSlot = getNextAvailableWeaverSlot();
        Slog.i(TAG, "Weaver enroll password to slot " + weaverSlot + " for user " + userId);
        byte[] weaverSecret = weaverEnroll(weaverSlot, passwordTokenToWeaverKey(pwdToken), null);
        if (weaverSecret == null) {
            throw new IllegalStateException("Fail to enroll user password under weaver " + userId);
        }
        saveWeaverSlot(weaverSlot, handle, userId);
        mPasswordSlotManager.markSlotInUse(weaverSlot);
        synchronizeWeaverFrpPassword(pwd, 0, userId, weaverSlot);
        pwd.passwordHandle = null;
        sid = GateKeeper.INVALID_SECURE_USER_ID;
        applicationId = transformUnderWeaverSecret(pwdToken, weaverSecret);
    } else {
        try {
            gatekeeper.clearSecureUserId(fakeUid(userId));
        } catch (RemoteException ignore) {
            Slog.w(TAG, "Failed to clear SID from gatekeeper");
        }
        GateKeeperResponse response;
        try {
            response = gatekeeper.enroll(fakeUid(userId), null, null, passwordTokenToGkInput(pwdToken));
        } catch (RemoteException e) {
            throw new IllegalStateException("Failed to enroll password for new SP blob", e);
        }
        if (response.getResponseCode() != GateKeeperResponse.RESPONSE_OK) {
            throw new IllegalStateException("Fail to enroll user password when creating SP for user " + userId);
        }
        pwd.passwordHandle = response.getPayload();
        sid = sidFromPasswordHandle(pwd.passwordHandle);
        applicationId = transformUnderSecdiscardable(pwdToken, createSecdiscardable(handle, userId));
        synchronizeFrpPassword(pwd, 0, userId);
    }
    saveState(PASSWORD_DATA_NAME, pwd.toBytes(), handle, userId);
    savePasswordMetrics(credential, authToken, handle, userId);
    createSyntheticPasswordBlob(handle, SYNTHETIC_PASSWORD_PASSWORD_BASED, authToken, applicationId, sid, userId);
    return handle;
}