public static NetworkSelectionStatus parseFromXml(XmlPullParser in, int outerTagDepth) throws XmlPullParserException, IOException{
    NetworkSelectionStatus selectionStatus = new NetworkSelectionStatus();
    String statusString = "";
    String disableReasonString = "";
    while (!XmlUtil.isNextSectionEnd(in, outerTagDepth)) {
        String[] valueName = new String[1];
        Object value = XmlUtil.readCurrentValue(in, valueName);
        if (valueName[0] == null) {
            throw new XmlPullParserException("Missing value name");
        }
        switch(valueName[0]) {
            case XML_TAG_SELECTION_STATUS:
                statusString = (String) value;
                break;
            case XML_TAG_DISABLE_REASON:
                disableReasonString = (String) value;
                break;
            case XML_TAG_CONNECT_CHOICE:
                selectionStatus.setConnectChoice((String) value);
                break;
            case XML_TAG_HAS_EVER_CONNECTED:
                selectionStatus.setHasEverConnected((boolean) value);
                break;
            default:
                Log.w(TAG, "Ignoring unknown value name found: " + valueName[0]);
                break;
        }
    }
    int status = Arrays.asList(NetworkSelectionStatus.QUALITY_NETWORK_SELECTION_STATUS).indexOf(statusString);
    int disableReason = NetworkSelectionStatus.getDisableReasonByString(disableReasonString);
    if (status == -1 || disableReason == -1 || status == NetworkSelectionStatus.NETWORK_SELECTION_TEMPORARY_DISABLED) {
        status = NetworkSelectionStatus.NETWORK_SELECTION_ENABLED;
        disableReason = NetworkSelectionStatus.DISABLED_NONE;
    }
    selectionStatus.setNetworkSelectionStatus(status);
    selectionStatus.setNetworkSelectionDisableReason(disableReason);
    return selectionStatus;
}