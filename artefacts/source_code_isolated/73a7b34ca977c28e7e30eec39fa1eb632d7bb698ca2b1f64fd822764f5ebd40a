public long until(Temporal endExclusive, TemporalUnit unit){
    Year end = Year.from(endExclusive);
    if (unit instanceof ChronoUnit) {
        long yearsUntil = ((long) end.year) - year;
        switch((ChronoUnit) unit) {
            case YEARS:
                return yearsUntil;
            case DECADES:
                return yearsUntil / 10;
            case CENTURIES:
                return yearsUntil / 100;
            case MILLENNIA:
                return yearsUntil / 1000;
            case ERAS:
                return end.getLong(ERA) - getLong(ERA);
        }
        throw new UnsupportedTemporalTypeException("Unsupported unit: " + unit);
    }
    return unit.between(this, end);
}