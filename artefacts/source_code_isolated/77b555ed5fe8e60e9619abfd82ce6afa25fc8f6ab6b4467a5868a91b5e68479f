public WifiNative.BucketSettings createBucketSettings(int bucketId, int maxChannels){
    this.bucketId = bucketId;
    int reportEvents = WifiScanner.REPORT_EVENT_NO_BATCH;
    int maxPeriodInMs = 0;
    int stepCount = 0;
    int bucketIndex = 0;
    for (int i = 0; i < mScanSettingsList.size(); ++i) {
        WifiScanner.ScanSettings setting = mScanSettingsList.get(i);
        int requestedReportEvents = setting.reportEvents;
        if ((requestedReportEvents & WifiScanner.REPORT_EVENT_NO_BATCH) == 0) {
            reportEvents &= ~WifiScanner.REPORT_EVENT_NO_BATCH;
        }
        if ((requestedReportEvents & WifiScanner.REPORT_EVENT_AFTER_EACH_SCAN) != 0) {
            reportEvents |= WifiScanner.REPORT_EVENT_AFTER_EACH_SCAN;
        }
        if ((requestedReportEvents & WifiScanner.REPORT_EVENT_FULL_SCAN_RESULT) != 0) {
            reportEvents |= WifiScanner.REPORT_EVENT_FULL_SCAN_RESULT;
        }
        if (i == 0 && setting.maxPeriodInMs != 0 && setting.maxPeriodInMs != setting.periodInMs) {
            bucketIndex = findBestRegularBucketIndex(setting.periodInMs, NUM_OF_REGULAR_BUCKETS);
            period = PREDEFINED_BUCKET_PERIODS[bucketIndex];
            maxPeriodInMs = (setting.maxPeriodInMs < period) ? period : setting.maxPeriodInMs;
            stepCount = setting.stepCount;
        }
    }
    WifiNative.BucketSettings bucketSettings = new WifiNative.BucketSettings();
    bucketSettings.bucket = bucketId;
    bucketSettings.report_events = reportEvents;
    bucketSettings.period_ms = period;
    bucketSettings.max_period_ms = maxPeriodInMs;
    bucketSettings.step_count = stepCount;
    mChannelCollection.fillBucketSettings(bucketSettings, maxChannels);
    return bucketSettings;
}