public static String formatShortElapsedTime(Context context, long millis){
    long secondsLong = millis / 1000;
    int days = 0, hours = 0, minutes = 0;
    if (secondsLong >= SECONDS_PER_DAY) {
        days = (int) (secondsLong / SECONDS_PER_DAY);
        secondsLong -= days * SECONDS_PER_DAY;
    }
    if (secondsLong >= SECONDS_PER_HOUR) {
        hours = (int) (secondsLong / SECONDS_PER_HOUR);
        secondsLong -= hours * SECONDS_PER_HOUR;
    }
    if (secondsLong >= SECONDS_PER_MINUTE) {
        minutes = (int) (secondsLong / SECONDS_PER_MINUTE);
        secondsLong -= minutes * SECONDS_PER_MINUTE;
    }
    int seconds = (int) secondsLong;
    final Locale locale = localeFromContext(context);
    final MeasureFormat measureFormat = MeasureFormat.getInstance(locale, MeasureFormat.FormatWidth.SHORT);
    if (days >= 2 || (days > 0 && hours == 0)) {
        days += (hours + 12) / 24;
        return measureFormat.format(new Measure(days, MeasureUnit.DAY));
    } else if (days > 0) {
        return measureFormat.formatMeasures(new Measure(days, MeasureUnit.DAY), new Measure(hours, MeasureUnit.HOUR));
    } else if (hours >= 2 || (hours > 0 && minutes == 0)) {
        hours += (minutes + 30) / 60;
        return measureFormat.format(new Measure(hours, MeasureUnit.HOUR));
    } else if (hours > 0) {
        return measureFormat.formatMeasures(new Measure(hours, MeasureUnit.HOUR), new Measure(minutes, MeasureUnit.MINUTE));
    } else if (minutes >= 2 || (minutes > 0 && seconds == 0)) {
        minutes += (seconds + 30) / 60;
        return measureFormat.format(new Measure(minutes, MeasureUnit.MINUTE));
    } else if (minutes > 0) {
        return measureFormat.formatMeasures(new Measure(minutes, MeasureUnit.MINUTE), new Measure(seconds, MeasureUnit.SECOND));
    } else {
        return measureFormat.format(new Measure(seconds, MeasureUnit.SECOND));
    }
}