public ViewHolder chooseDropTarget(ViewHolder selected, List<ViewHolder> dropTargets, int curX, int curY){
    int right = curX + selected.itemView.getWidth();
    int bottom = curY + selected.itemView.getHeight();
    ViewHolder winner = null;
    int winnerScore = -1;
    final int dx = curX - selected.itemView.getLeft();
    final int dy = curY - selected.itemView.getTop();
    final int targetsSize = dropTargets.size();
    for (int i = 0; i < targetsSize; i++) {
        final ViewHolder target = dropTargets.get(i);
        if (dx > 0) {
            int diff = target.itemView.getRight() - right;
            if (diff < 0 && target.itemView.getRight() > selected.itemView.getRight()) {
                final int score = Math.abs(diff);
                if (score > winnerScore) {
                    winnerScore = score;
                    winner = target;
                }
            }
        }
        if (dx < 0) {
            int diff = target.itemView.getLeft() - curX;
            if (diff > 0 && target.itemView.getLeft() < selected.itemView.getLeft()) {
                final int score = Math.abs(diff);
                if (score > winnerScore) {
                    winnerScore = score;
                    winner = target;
                }
            }
        }
        if (dy < 0) {
            int diff = target.itemView.getTop() - curY;
            if (diff > 0 && target.itemView.getTop() < selected.itemView.getTop()) {
                final int score = Math.abs(diff);
                if (score > winnerScore) {
                    winnerScore = score;
                    winner = target;
                }
            }
        }
        if (dy > 0) {
            int diff = target.itemView.getBottom() - bottom;
            if (diff < 0 && target.itemView.getBottom() > selected.itemView.getBottom()) {
                final int score = Math.abs(diff);
                if (score > winnerScore) {
                    winnerScore = score;
                    winner = target;
                }
            }
        }
    }
    return winner;
}