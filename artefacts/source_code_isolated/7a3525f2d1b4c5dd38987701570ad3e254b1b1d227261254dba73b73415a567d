public static int getHdmiAddressRelativePosition(int src, int dest){
    if (src == 0xFFFF || dest == 0xFFFF) {
        return HDMI_RELATIVE_POSITION_UNKNOWN;
    }
    try {
        int firstDiffPos = physicalAddressFirstDifferentDigitPos(src, dest);
        if (firstDiffPos == NPOS) {
            return HDMI_RELATIVE_POSITION_SAME;
        }
        int mask = (0xF000 >> (firstDiffPos * 4));
        int nextPos = firstDiffPos + 1;
        if ((src & mask) == 0) {
            if (nextPos == 4) {
                return HDMI_RELATIVE_POSITION_DIRECTLY_ABOVE;
            }
            if (((0xF000 >> (nextPos * 4)) & dest) == 0) {
                return HDMI_RELATIVE_POSITION_DIRECTLY_ABOVE;
            }
            return HDMI_RELATIVE_POSITION_ABOVE;
        }
        if ((dest & mask) == 0) {
            if (nextPos == 4) {
                return HDMI_RELATIVE_POSITION_DIRECTLY_BELOW;
            }
            if (((0xF000 >> (nextPos * 4)) & src) == 0) {
                return HDMI_RELATIVE_POSITION_DIRECTLY_BELOW;
            }
            return HDMI_RELATIVE_POSITION_BELOW;
        }
        if (nextPos == 4) {
            return HDMI_RELATIVE_POSITION_SIBLING;
        }
        if (((0xF000 >> (nextPos * 4)) & src) == 0 && ((0xF000 >> (nextPos * 4)) & dest) == 0) {
            return HDMI_RELATIVE_POSITION_SIBLING;
        }
        return HDMI_RELATIVE_POSITION_DIFFERENT_BRANCH;
    } catch (IllegalArgumentException e) {
        return HDMI_RELATIVE_POSITION_UNKNOWN;
    }
}