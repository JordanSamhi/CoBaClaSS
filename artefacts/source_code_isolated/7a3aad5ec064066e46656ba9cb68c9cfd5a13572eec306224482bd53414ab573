public boolean canPackageManageGroup(ParcelUuid groupUuid, String callingPackage){
    if (groupUuid == null) {
        throw new IllegalArgumentException("Invalid groupUuid");
    }
    if (TextUtils.isEmpty(callingPackage)) {
        throw new IllegalArgumentException("Empty callingPackage");
    }
    List<SubscriptionInfo> infoList;
    long identity = Binder.clearCallingIdentity();
    try {
        infoList = getSubInfo(SubscriptionManager.GROUP_UUID + "=\'" + groupUuid.toString() + "\'", null);
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
    if (ArrayUtils.isEmpty(infoList)) {
        return true;
    }
    if (callingPackage.equals(infoList.get(0).getGroupOwner()))
        return true;
    int[] subIdArray = infoList.stream().mapToInt(info -> info.getSubscriptionId()).toArray();
    return (checkCarrierPrivilegeOnSubList(subIdArray, callingPackage));
}