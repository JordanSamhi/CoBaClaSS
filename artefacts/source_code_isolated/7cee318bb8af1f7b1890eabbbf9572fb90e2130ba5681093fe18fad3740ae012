public void reportAssistContextExtras(IBinder token, Bundle extras, AssistStructure structure, AssistContent content, Uri referrer){
    PendingAssistExtras pae = (PendingAssistExtras) token;
    synchronized (pae) {
        pae.result = extras;
        pae.structure = structure;
        pae.content = content;
        if (referrer != null) {
            pae.extras.putParcelable(Intent.EXTRA_REFERRER, referrer);
        }
        if (structure != null) {
            structure.setTaskId(pae.activity.getTask().mTaskId);
            structure.setActivityComponent(pae.activity.mActivityComponent);
            structure.setHomeActivity(pae.isHome);
        }
        pae.haveResult = true;
        pae.notifyAll();
        if (pae.intent == null && pae.receiver == null) {
            return;
        }
    }
    IAssistDataReceiver sendReceiver = null;
    Bundle sendBundle = null;
    synchronized (mGlobalLock) {
        buildAssistBundleLocked(pae, extras);
        boolean exists = mPendingAssistExtras.remove(pae);
        mUiHandler.removeCallbacks(pae);
        if (!exists) {
            return;
        }
        if ((sendReceiver = pae.receiver) != null) {
            sendBundle = new Bundle();
            sendBundle.putInt(ActivityTaskManagerInternal.ASSIST_TASK_ID, pae.activity.getTask().mTaskId);
            sendBundle.putBinder(ActivityTaskManagerInternal.ASSIST_ACTIVITY_ID, pae.activity.assistToken);
            sendBundle.putBundle(ASSIST_KEY_DATA, pae.extras);
            sendBundle.putParcelable(ASSIST_KEY_STRUCTURE, pae.structure);
            sendBundle.putParcelable(ASSIST_KEY_CONTENT, pae.content);
            sendBundle.putBundle(ASSIST_KEY_RECEIVER_EXTRAS, pae.receiverExtras);
        }
    }
    if (sendReceiver != null) {
        try {
            sendReceiver.onHandleAssistData(sendBundle);
        } catch (RemoteException e) {
        }
        return;
    }
    final long ident = Binder.clearCallingIdentity();
    try {
        if (TextUtils.equals(pae.intent.getAction(), android.service.voice.VoiceInteractionService.SERVICE_INTERFACE)) {
            mAssistUtils.showSessionForActiveService(pae.extras, SHOW_SOURCE_APPLICATION, null, null);
        } else {
            pae.intent.replaceExtras(pae.extras);
            pae.intent.setFlags(FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_ACTIVITY_CLEAR_TOP);
            mInternal.closeSystemDialogs("assist");
            try {
                mContext.startActivityAsUser(pae.intent, new UserHandle(pae.userHandle));
            } catch (ActivityNotFoundException e) {
                Slog.w(TAG, "No activity to handle assist action.", e);
            }
        }
    } finally {
        Binder.restoreCallingIdentity(ident);
    }
}