public void prepareToLeaveProcess(boolean leavingPackage){
    setAllowFds(false);
    if (mSelector != null) {
        mSelector.prepareToLeaveProcess(leavingPackage);
    }
    if (mClipData != null) {
        mClipData.prepareToLeaveProcess(leavingPackage, getFlags());
    }
    if (mExtras != null && !mExtras.isParcelled()) {
        final Object intent = mExtras.get(Intent.EXTRA_INTENT);
        if (intent instanceof Intent) {
            ((Intent) intent).prepareToLeaveProcess(leavingPackage);
        }
    }
    if (mAction != null && mData != null && StrictMode.vmFileUriExposureEnabled() && leavingPackage) {
        switch(mAction) {
            case ACTION_MEDIA_REMOVED:
            case ACTION_MEDIA_UNMOUNTED:
            case ACTION_MEDIA_CHECKING:
            case ACTION_MEDIA_NOFS:
            case ACTION_MEDIA_MOUNTED:
            case ACTION_MEDIA_SHARED:
            case ACTION_MEDIA_UNSHARED:
            case ACTION_MEDIA_BAD_REMOVAL:
            case ACTION_MEDIA_UNMOUNTABLE:
            case ACTION_MEDIA_EJECT:
            case ACTION_MEDIA_SCANNER_STARTED:
            case ACTION_MEDIA_SCANNER_FINISHED:
            case ACTION_MEDIA_SCANNER_SCAN_FILE:
            case ACTION_PACKAGE_NEEDS_VERIFICATION:
            case ACTION_PACKAGE_NEEDS_INTEGRITY_VERIFICATION:
            case ACTION_PACKAGE_VERIFIED:
            case ACTION_PACKAGE_ENABLE_ROLLBACK:
                break;
            default:
                mData.checkFileUriExposed("Intent.getData()");
        }
    }
    if (mAction != null && mData != null && StrictMode.vmContentUriWithoutPermissionEnabled() && leavingPackage) {
        switch(mAction) {
            case ACTION_PROVIDER_CHANGED:
            case QuickContact.ACTION_QUICK_CONTACT:
                break;
            default:
                mData.checkContentUriWithoutPermission("Intent.getData()", getFlags());
        }
    }
    if (ACTION_MEDIA_SCANNER_SCAN_FILE.equals(mAction) && mData != null && ContentResolver.SCHEME_FILE.equals(mData.getScheme()) && leavingPackage) {
        final StorageManager sm = AppGlobals.getInitialApplication().getSystemService(StorageManager.class);
        final File before = new File(mData.getPath());
        final File after = sm.translateAppToSystem(before, android.os.Process.myPid(), android.os.Process.myUid());
        if (!Objects.equals(before, after)) {
            Log.v(TAG, "Translated " + before + " to " + after);
            mData = Uri.fromFile(after);
        }
    }
}