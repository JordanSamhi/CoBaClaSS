public void sendReportAudioStatusCecCommand(boolean isMuteAdjust, int volume, int maxVolume, boolean isMute){
    if (isMuteAdjust) {
        try {
            mService.reportAudioStatus(getDeviceType(), volume, maxVolume, isMute);
        } catch (RemoteException e) {
        }
        return;
    }
    mLastVolume = volume;
    mLastMaxVolume = maxVolume;
    mLastIsMute = isMute;
    if (mCanSendAudioStatus) {
        try {
            mService.reportAudioStatus(getDeviceType(), volume, maxVolume, isMute);
            mCanSendAudioStatus = false;
            mHandler.postDelayed(new Runnable() {

                @Override
                public void run() {
                    if (mPendingReportAudioStatus) {
                        try {
                            mService.reportAudioStatus(getDeviceType(), mLastVolume, mLastMaxVolume, mLastIsMute);
                            mHandler.postDelayed(this, REPORT_AUDIO_STATUS_INTERVAL_MS);
                        } catch (RemoteException e) {
                            mCanSendAudioStatus = true;
                        } finally {
                            mPendingReportAudioStatus = false;
                        }
                    } else {
                        mCanSendAudioStatus = true;
                    }
                }
            }, REPORT_AUDIO_STATUS_INTERVAL_MS);
        } catch (RemoteException e) {
        }
    } else {
        mPendingReportAudioStatus = true;
    }
}