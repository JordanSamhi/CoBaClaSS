public boolean canForwardTo(Intent intent, String resolvedType, int sourceUserId, int targetUserId){
    mContext.enforceCallingOrSelfPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL, null);
    List<CrossProfileIntentFilter> matches = getMatchingCrossProfileIntentFilters(intent, resolvedType, sourceUserId);
    if (matches != null) {
        int size = matches.size();
        for (int i = 0; i < size; i++) {
            if (matches.get(i).getTargetUserId() == targetUserId)
                return true;
        }
    }
    if (intent.hasWebURI()) {
        final int callingUid = Binder.getCallingUid();
        final UserInfo parent = getProfileParent(sourceUserId);
        if (parent == null) {
            return false;
        }
        synchronized (mLock) {
            int flags = updateFlagsForResolve(0, parent.id, callingUid, false, isImplicitImageCaptureIntentAndNotSetByDpcLocked(intent, parent.id, resolvedType, 0));
            CrossProfileDomainInfo xpDomainInfo = getCrossProfileDomainPreferredLpr(intent, resolvedType, flags, sourceUserId, parent.id);
            return xpDomainInfo != null;
        }
    }
    return false;
}