public List<IpPrefix> asIpPrefixes(){
    final boolean isIpv6 = (mStartAddr.length == 16);
    final List<IpPrefix> result = new ArrayList<>();
    final Queue<IpPrefix> workingSet = new LinkedList<>();
    workingSet.add(new IpPrefix(isIpv6 ? getAsInetAddress(new byte[16]) : getAsInetAddress(new byte[4]), 0));
    while (!workingSet.isEmpty()) {
        final IpPrefix workingPrefix = workingSet.poll();
        final IpRange workingRange = new IpRange(workingPrefix);
        if (containsRange(workingRange)) {
            result.add(workingPrefix);
            continue;
        }
        if (overlapsRange(workingRange)) {
            workingSet.addAll(getSubsetPrefixes(workingPrefix));
        }
    }
    return result;
}