public void chunkify(InputStream inputStream, ChunkConsumer chunkConsumer) throws IOException, GeneralSecurityException{
    int chunkLength;
    int initialReadLength = mMinChunkSize - WINDOW_SIZE;
    while ((chunkLength = inputStream.read(mChunkBuffer, 0, initialReadLength)) != -1) {
        int b;
        long fingerprint = 0L;
        while ((b = inputStream.read()) != -1) {
            byte inByte = (byte) b;
            byte outByte = getCurrentWindowStartByte(chunkLength);
            mChunkBuffer[chunkLength++] = inByte;
            fingerprint = mRabinFingerprint64.computeFingerprint64(inByte, outByte, fingerprint);
            if (chunkLength >= mMaxChunkSize || (chunkLength >= mMinChunkSize && mBreakpointPredicate.isBreakpoint(mFingerprintMixer.mix(fingerprint)))) {
                chunkConsumer.accept(Arrays.copyOf(mChunkBuffer, chunkLength));
                chunkLength = 0;
                break;
            }
        }
        if (chunkLength > 0) {
            chunkConsumer.accept(Arrays.copyOf(mChunkBuffer, chunkLength));
        }
    }
}