public void registerStreamEventCallback(@NonNull @CallbackExecutor Executor executor, @NonNull StreamEventCallback eventCallback){
    if (eventCallback == null) {
        throw new IllegalArgumentException("Illegal null StreamEventCallback");
    }
    if (!mOffloaded) {
        throw new IllegalStateException("Cannot register StreamEventCallback on non-offloaded AudioTrack");
    }
    if (executor == null) {
        throw new IllegalArgumentException("Illegal null Executor for the StreamEventCallback");
    }
    synchronized (mStreamEventCbLock) {
        for (StreamEventCbInfo seci : mStreamEventCbInfoList) {
            if (seci.mStreamEventCb == eventCallback) {
                throw new IllegalArgumentException("StreamEventCallback already registered");
            }
        }
        beginStreamEventHandling();
        mStreamEventCbInfoList.add(new StreamEventCbInfo(executor, eventCallback));
    }
}