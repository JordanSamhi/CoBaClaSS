public static List<String> getParserNames(@NonNull MediaFormat mediaFormat){
    String mimeType = mediaFormat.getString(MediaFormat.KEY_MIME);
    mimeType = mimeType == null ? null : Util.toLowerInvariant(mimeType.trim());
    if (TextUtils.isEmpty(mimeType)) {
        return Collections.unmodifiableList(new ArrayList<>(EXTRACTOR_FACTORIES_BY_NAME.keySet()));
    }
    ArrayList<String> result = new ArrayList<>();
    switch(mimeType) {
        case "video/x-matroska":
        case "audio/x-matroska":
        case "video/x-webm":
        case "audio/x-webm":
            result.add(PARSER_NAME_MATROSKA);
            break;
        case "video/mp4":
        case "audio/mp4":
        case "application/mp4":
            result.add(PARSER_NAME_MP4);
            result.add(PARSER_NAME_FMP4);
            break;
        case "audio/mpeg":
            result.add(PARSER_NAME_MP3);
            break;
        case "audio/aac":
            result.add(PARSER_NAME_ADTS);
            break;
        case "audio/ac3":
            result.add(PARSER_NAME_AC3);
            break;
        case "video/mp2t":
        case "audio/mp2t":
            result.add(PARSER_NAME_TS);
            break;
        case "video/x-flv":
            result.add(PARSER_NAME_FLV);
            break;
        case "video/ogg":
        case "audio/ogg":
        case "application/ogg":
            result.add(PARSER_NAME_OGG);
            break;
        case "video/mp2p":
        case "video/mp1s":
            result.add(PARSER_NAME_PS);
            break;
        case "audio/vnd.wave":
        case "audio/wav":
        case "audio/wave":
        case "audio/x-wav":
            result.add(PARSER_NAME_WAV);
            break;
        case "audio/amr":
            result.add(PARSER_NAME_AMR);
            break;
        case "audio/ac4":
            result.add(PARSER_NAME_AC4);
            break;
        case "audio/flac":
        case "audio/x-flac":
            result.add(PARSER_NAME_FLAC);
            break;
        default:
            break;
    }
    return Collections.unmodifiableList(result);
}