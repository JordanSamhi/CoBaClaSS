public String toString(){
    StringBuilder builder = new StringBuilder();
    builder.append("EventType: ").append(eventTypeToString(mEventType));
    builder.append("; EventTime: ").append(mEventTime);
    builder.append("; PackageName: ").append(mPackageName);
    if (!DEBUG_CONCISE_TOSTRING || mMovementGranularity != 0) {
        builder.append("; MovementGranularity: ").append(mMovementGranularity);
    }
    if (!DEBUG_CONCISE_TOSTRING || mAction != 0) {
        builder.append("; Action: ").append(mAction);
    }
    if (!DEBUG_CONCISE_TOSTRING || mContentChangeTypes != 0) {
        builder.append("; ContentChangeTypes: ").append(contentChangeTypesToString(mContentChangeTypes));
    }
    if (!DEBUG_CONCISE_TOSTRING || mWindowChangeTypes != 0) {
        builder.append("; WindowChangeTypes: ").append(windowChangeTypesToString(mWindowChangeTypes));
    }
    super.appendTo(builder);
    if (DEBUG || DEBUG_CONCISE_TOSTRING) {
        if (!DEBUG_CONCISE_TOSTRING) {
            builder.append("\n");
        }
        if (DEBUG) {
            builder.append("; SourceWindowId: 0x").append(Long.toHexString(mSourceWindowId));
            builder.append("; SourceNodeId: 0x").append(Long.toHexString(mSourceNodeId));
        }
        for (int i = 0; i < getRecordCount(); i++) {
            builder.append("  Record ").append(i).append(":");
            getRecord(i).appendTo(builder).append("\n");
        }
    } else {
        builder.append("; recordCount: ").append(getRecordCount());
    }
    return builder.toString();
}