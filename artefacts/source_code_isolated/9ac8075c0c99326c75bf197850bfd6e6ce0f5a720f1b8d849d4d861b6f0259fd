public boolean gatherTransparentRegion(Region region){
    final boolean meOpaque = (mPrivateFlags & View.PFLAG_REQUEST_TRANSPARENT_REGIONS) == 0;
    if (meOpaque && region == null) {
        return true;
    }
    super.gatherTransparentRegion(region);
    final int childrenCount = mChildrenCount;
    boolean noneOfTheChildrenAreTransparent = true;
    if (childrenCount > 0) {
        final ArrayList<View> preorderedList = buildOrderedChildList();
        final boolean customOrder = preorderedList == null && isChildrenDrawingOrderEnabled();
        final View[] children = mChildren;
        for (int i = 0; i < childrenCount; i++) {
            final int childIndex = getAndVerifyPreorderedIndex(childrenCount, i, customOrder);
            final View child = getAndVerifyPreorderedView(preorderedList, children, childIndex);
            if ((child.mViewFlags & VISIBILITY_MASK) == VISIBLE || child.getAnimation() != null) {
                if (!child.gatherTransparentRegion(region)) {
                    noneOfTheChildrenAreTransparent = false;
                }
            }
        }
        if (preorderedList != null)
            preorderedList.clear();
    }
    return meOpaque || noneOfTheChildrenAreTransparent;
}