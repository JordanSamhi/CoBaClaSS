public void handleEventSocketKeepalive(@NonNull NetworkAgentInfo nai, @NonNull Message message){
    int slot = message.arg1;
    int reason = message.arg2;
    KeepaliveInfo ki = null;
    try {
        ki = mKeepalives.get(nai).get(slot);
    } catch (NullPointerException e) {
    }
    if (ki == null) {
        Log.e(TAG, "Event " + message.what + "," + slot + "," + reason + " for unknown keepalive " + slot + " on " + nai.toShortString());
        return;
    }
    if (KeepaliveInfo.STARTING == ki.mStartedState) {
        if (SUCCESS == reason) {
            Log.d(TAG, "Started keepalive " + slot + " on " + nai.toShortString());
            ki.mStartedState = KeepaliveInfo.STARTED;
            try {
                ki.mCallback.onStarted(slot);
            } catch (RemoteException e) {
                Log.w(TAG, "Discarded onStarted(" + slot + ") callback");
            }
        } else {
            Log.d(TAG, "Failed to start keepalive " + slot + " on " + nai.toShortString() + ": " + reason);
            handleStopKeepalive(nai, slot, reason);
        }
    } else if (KeepaliveInfo.STOPPING == ki.mStartedState) {
        Log.d(TAG, "Stopped keepalive " + slot + " on " + nai.toShortString() + " stopped: " + reason);
        ki.mStartedState = KeepaliveInfo.NOT_STARTED;
        cleanupStoppedKeepalive(nai, slot);
    } else {
        Log.wtf(TAG, "Event " + message.what + "," + slot + "," + reason + " for keepalive in wrong state: " + ki.toString());
    }
}