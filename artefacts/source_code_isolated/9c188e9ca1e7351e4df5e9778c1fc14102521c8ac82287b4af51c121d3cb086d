public void start(Looper looper, Clock clock, WifiAwareManager awareManager, RttNative rttNative, RttMetrics rttMetrics, WifiPermissionsUtil wifiPermissionsUtil, WifiSettingsConfigStore settingsConfigStore){
    mClock = clock;
    mAwareManager = awareManager;
    mRttNative = rttNative;
    mRttMetrics = rttMetrics;
    mWifiPermissionsUtil = wifiPermissionsUtil;
    mRttServiceSynchronized = new RttServiceSynchronized(looper, rttNative);
    mActivityManager = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);
    mPowerManager = mContext.getSystemService(PowerManager.class);
    mRttServiceSynchronized.mHandler.post(() -> {
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED);
        mContext.registerReceiver(new BroadcastReceiver() {

            @Override
            public void onReceive(Context context, Intent intent) {
                String action = intent.getAction();
                if (mDbg)
                    Log.v(TAG, "BroadcastReceiver: action=" + action);
                if (PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED.equals(action)) {
                    if (mPowerManager.isDeviceIdleMode()) {
                        disable();
                    } else {
                        enableIfPossible();
                    }
                }
            }
        }, intentFilter);
        settingsConfigStore.registerChangeListener(WIFI_VERBOSE_LOGGING_ENABLED, (key, newValue) -> enableVerboseLogging(newValue), mRttServiceSynchronized.mHandler);
        enableVerboseLogging(settingsConfigStore.get(WIFI_VERBOSE_LOGGING_ENABLED));
        mBackgroundProcessExecGapMs = mContext.getResources().getInteger(R.integer.config_wifiRttBackgroundExecGapMs);
        intentFilter = new IntentFilter();
        intentFilter.addAction(LocationManager.MODE_CHANGED_ACTION);
        mContext.registerReceiver(new BroadcastReceiver() {

            @Override
            public void onReceive(Context context, Intent intent) {
                if (mDbg)
                    Log.v(TAG, "onReceive: MODE_CHANGED_ACTION: intent=" + intent);
                if (mWifiPermissionsUtil.isLocationModeEnabled()) {
                    enableIfPossible();
                } else {
                    disable();
                }
            }
        }, intentFilter);
        rttNative.start(mRttServiceSynchronized.mHandler);
    });
}