public void onTouchEvent(MotionEvent event){
    final boolean filterOutEvent = shouldFilterOutTouchEvent(event);
    mLastButtonState = event.getButtonState();
    if (filterOutEvent) {
        if (event.getActionMasked() == MotionEvent.ACTION_UP) {
            mDiscardNextActionUp = true;
        }
        return;
    }
    ViewConfiguration viewConfiguration = ViewConfiguration.get(mTextView.getContext());
    mTouchState.update(event, viewConfiguration);
    updateFloatingToolbarVisibility(event);
    if (hasInsertionController()) {
        getInsertionController().onTouchEvent(event);
    }
    if (hasSelectionController()) {
        getSelectionController().onTouchEvent(event);
    }
    if (mShowSuggestionRunnable != null) {
        mTextView.removeCallbacks(mShowSuggestionRunnable);
        mShowSuggestionRunnable = null;
    }
    if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
        mTouchFocusSelected = false;
        mIgnoreActionUpEvent = false;
    }
}