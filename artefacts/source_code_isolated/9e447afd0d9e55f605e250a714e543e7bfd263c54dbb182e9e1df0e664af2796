public boolean contains(@NonNull LatLng latLng){
    Point p = convertAndScaleLatLng(latLng);
    int n = mScaledVertices.size();
    int windingNumber = 0;
    for (int i = 0; i < n; i++) {
        Point a = mScaledVertices.get(i);
        Point b = mScaledVertices.get((i + 1) % n);
        int ccw = sign(crossProduct(b.subtract(a), p.subtract(a)));
        if (ccw == 0) {
            if (Math.min(a.x, b.x) <= p.x && p.x <= Math.max(a.x, b.x) && Math.min(a.y, b.y) <= p.y && p.y <= Math.max(a.y, b.y)) {
                return true;
            }
        } else {
            if (sign(a.y - p.y) <= 0) {
                if (ccw > 0 && sign(b.y - p.y) > 0) {
                    ++windingNumber;
                }
            } else {
                if (ccw < 0 && sign(b.y - p.y) <= 0) {
                    --windingNumber;
                }
            }
        }
    }
    return windingNumber != 0;
}