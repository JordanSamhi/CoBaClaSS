public void hideView(OverlayViewController viewController, @Nullable Runnable hide){
    debugLog();
    if (mIsOccluded && mViewsHiddenForOcclusion.contains(viewController)) {
        mViewsHiddenForOcclusion.remove(viewController);
        return;
    }
    if (!viewController.isInflated()) {
        Log.d(TAG, "Content cannot be hidden since it isn't inflated: " + viewController.getClass().getName());
        return;
    }
    if (!mZOrderMap.containsKey(viewController)) {
        Log.d(TAG, "Content cannot be hidden since it has never been shown: " + viewController.getClass().getName());
        return;
    }
    if (!mZOrderVisibleSortedMap.containsKey(mZOrderMap.get(viewController))) {
        Log.d(TAG, "Content cannot be hidden since it isn't currently shown: " + viewController.getClass().getName());
        return;
    }
    if (hide != null) {
        hide.run();
    }
    mZOrderVisibleSortedMap.remove(mZOrderMap.get(viewController));
    refreshHighestZOrderWhenHidingView(viewController);
    refreshNavigationBarVisibility();
    if (mZOrderVisibleSortedMap.isEmpty()) {
        setWindowVisible(false);
    }
    Log.d(TAG, "Content hidden: " + viewController.getClass().getName());
    debugLog();
}