public void mergeEvent(@NonNull ContentCaptureEvent event){
    Preconditions.checkNotNull(event);
    final int eventType = event.getType();
    if (mType != eventType) {
        Log.e(TAG, "mergeEvent(" + getTypeAsString(eventType) + ") cannot be merged " + "with different eventType=" + getTypeAsString(mType));
        return;
    }
    if (eventType == TYPE_VIEW_DISAPPEARED) {
        final List<AutofillId> ids = event.getIds();
        final AutofillId id = event.getId();
        if (ids != null) {
            if (id != null) {
                Log.w(TAG, "got TYPE_VIEW_DISAPPEARED event with both id and ids: " + event);
            }
            for (int i = 0; i < ids.size(); i++) {
                addAutofillId(ids.get(i));
            }
            return;
        }
        if (id != null) {
            addAutofillId(id);
            return;
        }
        throw new IllegalArgumentException("mergeEvent(): got " + "TYPE_VIEW_DISAPPEARED event with neither id or ids: " + event);
    } else if (eventType == TYPE_VIEW_TEXT_CHANGED) {
        setText(event.getText());
    } else {
        Log.e(TAG, "mergeEvent(" + getTypeAsString(eventType) + ") does not support this event type.");
    }
}