public void dump(PrintWriter pw, String indent){
    pw.println("NotificationEntryManager");
    int filteredLen = mSortedAndFiltered.size();
    pw.print(indent);
    pw.println("active notifications: " + filteredLen);
    int active;
    for (active = 0; active < filteredLen; active++) {
        NotificationEntry e = mSortedAndFiltered.get(active);
        dumpEntry(pw, indent, active, e);
    }
    synchronized (mActiveNotifications) {
        int totalLen = mActiveNotifications.size();
        pw.print(indent);
        pw.println("inactive notifications: " + (totalLen - active));
        int inactiveCount = 0;
        for (int i = 0; i < totalLen; i++) {
            NotificationEntry entry = mActiveNotifications.valueAt(i);
            if (!mSortedAndFiltered.contains(entry)) {
                dumpEntry(pw, indent, inactiveCount, entry);
                inactiveCount++;
            }
        }
    }
}