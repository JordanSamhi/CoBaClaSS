public void onReceive(Context context, Bundle bundle, View view, Size viewSize){
    if (mSurfaceControlViewHost != null) {
        mSurfaceControlViewHost.release();
    }
    SurfaceControl surfaceControl = SurfaceViewRequestUtils.getSurfaceControl(bundle);
    if (surfaceControl != null) {
        if (viewSize == null) {
            viewSize = new Size(surfaceControl.getWidth(), surfaceControl.getHeight());
        }
        IBinder hostToken = SurfaceViewRequestUtils.getHostToken(bundle);
        WindowlessWindowManager windowlessWindowManager = new WindowlessWindowManager(context.getResources().getConfiguration(), surfaceControl, hostToken);
        DisplayManager dm = (DisplayManager) context.getSystemService(Context.DISPLAY_SERVICE);
        mSurfaceControlViewHost = new SurfaceControlViewHost(context, dm.getDisplay(SurfaceViewRequestUtils.getDisplayId(bundle)), windowlessWindowManager);
        WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams(viewSize.getWidth(), viewSize.getHeight(), WindowManager.LayoutParams.TYPE_APPLICATION, WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED, mOpacity);
        final float scale = Math.min(surfaceControl.getWidth() / (float) viewSize.getWidth(), surfaceControl.getHeight() / (float) viewSize.getHeight());
        view.setScaleX(scale);
        view.setScaleY(scale);
        view.setPivotX(0);
        view.setPivotY(0);
        view.setTranslationX((surfaceControl.getWidth() - scale * viewSize.getWidth()) / 2);
        view.setTranslationY((surfaceControl.getHeight() - scale * viewSize.getHeight()) / 2);
        mSurfaceControlViewHost.setView(view, layoutParams);
    }
}