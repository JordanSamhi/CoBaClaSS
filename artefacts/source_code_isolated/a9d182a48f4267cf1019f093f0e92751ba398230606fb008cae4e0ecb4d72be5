public Bitmap createIconBitmap(@NonNull Drawable icon, float scale, int size){
    Bitmap bitmap = Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888);
    if (icon == null) {
        return bitmap;
    }
    mCanvas.setBitmap(bitmap);
    mOldBounds.set(icon.getBounds());
    if (ATLEAST_OREO && icon instanceof AdaptiveIconDrawable) {
        int offset = Math.max((int) Math.ceil(BLUR_FACTOR * size), Math.round(size * (1 - scale) / 2));
        icon.setBounds(offset, offset, size - offset, size - offset);
        icon.draw(mCanvas);
    } else {
        if (icon instanceof BitmapDrawable) {
            BitmapDrawable bitmapDrawable = (BitmapDrawable) icon;
            Bitmap b = bitmapDrawable.getBitmap();
            if (bitmap != null && b.getDensity() == Bitmap.DENSITY_NONE) {
                bitmapDrawable.setTargetDensity(mContext.getResources().getDisplayMetrics());
            }
        }
        int width = size;
        int height = size;
        int intrinsicWidth = icon.getIntrinsicWidth();
        int intrinsicHeight = icon.getIntrinsicHeight();
        if (intrinsicWidth > 0 && intrinsicHeight > 0) {
            final float ratio = (float) intrinsicWidth / intrinsicHeight;
            if (intrinsicWidth > intrinsicHeight) {
                height = (int) (width / ratio);
            } else if (intrinsicHeight > intrinsicWidth) {
                width = (int) (height * ratio);
            }
        }
        final int left = (size - width) / 2;
        final int top = (size - height) / 2;
        icon.setBounds(left, top, left + width, top + height);
        mCanvas.save();
        mCanvas.scale(scale, scale, size / 2, size / 2);
        icon.draw(mCanvas);
        mCanvas.restore();
    }
    icon.setBounds(mOldBounds);
    mCanvas.setBitmap(null);
    return bitmap;
}