public boolean addOnMetadataChangedListener(@NonNull BluetoothDevice device, @NonNull Executor executor, @NonNull OnMetadataChangedListener listener){
    if (DBG)
        Log.d(TAG, "addOnMetadataChangedListener()");
    final IBluetooth service = mService;
    if (service == null) {
        Log.e(TAG, "Bluetooth is not enabled. Cannot register metadata listener");
        return false;
    }
    if (listener == null) {
        throw new NullPointerException("listener is null");
    }
    if (device == null) {
        throw new NullPointerException("device is null");
    }
    if (executor == null) {
        throw new NullPointerException("executor is null");
    }
    synchronized (sMetadataListeners) {
        List<Pair<OnMetadataChangedListener, Executor>> listenerList = sMetadataListeners.get(device);
        if (listenerList == null) {
            listenerList = new ArrayList<>();
            sMetadataListeners.put(device, listenerList);
        } else {
            if (listenerList.stream().anyMatch((pair) -> (pair.first.equals(listener)))) {
                throw new IllegalArgumentException("listener was already regestered" + " for the device");
            }
        }
        Pair<OnMetadataChangedListener, Executor> listenerPair = new Pair(listener, executor);
        listenerList.add(listenerPair);
        boolean ret = false;
        try {
            ret = service.registerMetadataListener(sBluetoothMetadataListener, device);
        } catch (RemoteException e) {
            Log.e(TAG, "registerMetadataListener fail", e);
        } finally {
            if (!ret) {
                listenerList.remove(listenerPair);
                if (listenerList.isEmpty()) {
                    sMetadataListeners.remove(device);
                }
            }
        }
        return ret;
    }
}