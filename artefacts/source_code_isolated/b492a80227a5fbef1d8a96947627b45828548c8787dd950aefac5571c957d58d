public void autofill(@NonNull @SuppressWarnings("unused") SparseArray<AutofillValue> values){
    if (!mContext.isAutofillCompatibilityEnabled()) {
        return;
    }
    final AccessibilityNodeProvider provider = getAccessibilityNodeProvider();
    if (provider == null) {
        return;
    }
    final int valueCount = values.size();
    for (int i = 0; i < valueCount; i++) {
        final AutofillValue value = values.valueAt(i);
        if (value.isText()) {
            final int virtualId = values.keyAt(i);
            final CharSequence text = value.getTextValue();
            final Bundle arguments = new Bundle();
            arguments.putCharSequence(AccessibilityNodeInfo.ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE, text);
            provider.performAction(virtualId, AccessibilityNodeInfo.ACTION_SET_TEXT, arguments);
        }
    }
}