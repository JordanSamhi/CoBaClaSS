public void connect(){
    if (mState != CONNECT_STATE_DISCONNECTING && mState != CONNECT_STATE_DISCONNECTED) {
        throw new IllegalStateException("connect() called while neither disconnecting nor " + "disconnected (state=" + getStateLabel(mState) + ")");
    }
    mState = CONNECT_STATE_CONNECTING;
    mHandler.post(new Runnable() {

        @Override
        public void run() {
            if (mState == CONNECT_STATE_DISCONNECTING) {
                return;
            }
            mState = CONNECT_STATE_CONNECTING;
            if (DBG) {
                if (mServiceConnection != null) {
                    throw new RuntimeException("mServiceConnection should be null. Instead it" + " is " + mServiceConnection);
                }
            }
            if (mServiceBinder != null) {
                throw new RuntimeException("mServiceBinder should be null. Instead it is " + mServiceBinder);
            }
            if (mServiceCallbacks != null) {
                throw new RuntimeException("mServiceCallbacks should be null. Instead it is " + mServiceCallbacks);
            }
            final Intent intent = new Intent(MediaBrowserService.SERVICE_INTERFACE);
            intent.setComponent(mServiceComponent);
            mServiceConnection = new MediaServiceConnection();
            boolean bound = false;
            try {
                bound = mContext.bindService(intent, mServiceConnection, Context.BIND_AUTO_CREATE);
            } catch (Exception ex) {
                Log.e(TAG, "Failed binding to service " + mServiceComponent);
            }
            if (!bound) {
                forceCloseConnection();
                mCallback.onConnectionFailed();
            }
            if (DBG) {
                Log.d(TAG, "connect...");
                dump();
            }
        }
    });
}