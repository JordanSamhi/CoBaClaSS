public static String getDefaultUserType(@UserInfoFlag int userInfoFlag){
    if ((userInfoFlag & FLAG_SYSTEM) != 0) {
        throw new IllegalArgumentException("Cannot getDefaultUserType for flags " + Integer.toHexString(userInfoFlag) + " because it corresponds to a " + "SYSTEM user type.");
    }
    final int supportedFlagTypes = FLAG_GUEST | FLAG_RESTRICTED | FLAG_MANAGED_PROFILE | FLAG_DEMO;
    switch(userInfoFlag & supportedFlagTypes) {
        case 0:
            return UserManager.USER_TYPE_FULL_SECONDARY;
        case FLAG_GUEST:
            return UserManager.USER_TYPE_FULL_GUEST;
        case FLAG_RESTRICTED:
            return UserManager.USER_TYPE_FULL_RESTRICTED;
        case FLAG_MANAGED_PROFILE:
            return UserManager.USER_TYPE_PROFILE_MANAGED;
        case FLAG_DEMO:
            return UserManager.USER_TYPE_FULL_DEMO;
        default:
            throw new IllegalArgumentException("Cannot getDefaultUserType for flags " + Integer.toHexString(userInfoFlag) + " because it doesn't correspond to a " + "valid user type.");
    }
}