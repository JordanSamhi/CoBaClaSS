public void onChange(boolean selfChange, Uri uri){
    String option = uri.getLastPathSegment();
    boolean enabled = readBooleanSetting(option, true);
    switch(option) {
        case Global.HDMI_CONTROL_ENABLED:
            setControlEnabled(enabled);
            break;
        case Global.HDMI_CONTROL_VOLUME_CONTROL_ENABLED:
            setHdmiCecVolumeControlEnabled(enabled);
            break;
        case Global.HDMI_CONTROL_AUTO_WAKEUP_ENABLED:
            if (isTvDeviceEnabled()) {
                tv().setAutoWakeup(enabled);
            }
            setCecOption(OptionKey.WAKEUP, enabled);
            break;
        case Global.HDMI_CONTROL_AUTO_DEVICE_OFF_ENABLED:
            for (int type : mLocalDevices) {
                HdmiCecLocalDevice localDevice = mCecController.getLocalDevice(type);
                if (localDevice != null) {
                    localDevice.setAutoDeviceOff(enabled);
                }
            }
            break;
        case Global.HDMI_SYSTEM_AUDIO_CONTROL_ENABLED:
            if (isTvDeviceEnabled()) {
                tv().setSystemAudioControlFeatureEnabled(enabled);
            }
            if (isAudioSystemDevice()) {
                if (audioSystem() == null) {
                    Slog.e(TAG, "Audio System device has not registered yet." + " Can't turn system audio mode on.");
                    break;
                }
                audioSystem().onSystemAduioControlFeatureSupportChanged(enabled);
            }
            break;
        case Global.HDMI_CEC_SWITCH_ENABLED:
            if (isAudioSystemDevice()) {
                if (audioSystem() == null) {
                    Slog.w(TAG, "Switch device has not registered yet." + " Can't turn routing on.");
                    break;
                }
                audioSystem().setRoutingControlFeatureEnables(enabled);
            }
            break;
        case Global.MHL_INPUT_SWITCHING_ENABLED:
            setMhlInputChangeEnabled(enabled);
            break;
        case Global.MHL_POWER_CHARGE_ENABLED:
            mMhlController.setOption(OPTION_MHL_POWER_CHARGE, toInt(enabled));
            break;
        case Global.DEVICE_NAME:
            String deviceName = readStringSetting(option, Build.MODEL);
            setDisplayName(deviceName);
            break;
    }
}