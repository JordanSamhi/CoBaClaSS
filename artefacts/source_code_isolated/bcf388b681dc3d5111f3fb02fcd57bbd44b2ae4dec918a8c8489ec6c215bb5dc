public static String toHexString(double d){
    if (!isFinite(d))
        return Double.toString(d);
    else {
        StringBuilder answer = new StringBuilder(24);
        if (Math.copySign(1.0, d) == -1.0)
            answer.append("-");
        answer.append("0x");
        d = Math.abs(d);
        if (d == 0.0) {
            answer.append("0.0p0");
        } else {
            boolean subnormal = (d < DoubleConsts.MIN_NORMAL);
            long signifBits = (Double.doubleToLongBits(d) & DoubleConsts.SIGNIF_BIT_MASK) | 0x1000000000000000L;
            answer.append(subnormal ? "0." : "1.");
            String signif = Long.toHexString(signifBits).substring(3, 16);
            answer.append(signif.equals("0000000000000") ? "0" : signif.replaceFirst("0{1,12}$", ""));
            answer.append('p');
            answer.append(subnormal ? DoubleConsts.MIN_EXPONENT : Math.getExponent(d));
        }
        return answer.toString();
    }
}