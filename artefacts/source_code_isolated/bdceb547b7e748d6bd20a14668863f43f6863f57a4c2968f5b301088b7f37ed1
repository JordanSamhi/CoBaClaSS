public void markAsNativeAllocation(Object referent, long native_object){
    NativeAllocationHolder holder;
    synchronized (DelegateManager.class) {
        T delegate = getDelegate(native_object);
        if (Debug.DEBUG) {
            if (delegate == null) {
                System.err.println("Unknown " + mClass.getSimpleName() + " with int " + native_object);
            } else {
                System.err.println("Marking element as native " + native_object);
            }
        }
        assert delegate != null;
        if (sJavaReferences.remove(delegate)) {
            holder = new NativeAllocationHolder(referent, delegate);
        } else {
            holder = null;
        }
    }
    if (holder != null) {
        synchronized (sNativeAllocations) {
            sNativeAllocations.add(holder);
            sNativeAllocationsReferences.put(holder.mReferred, new WeakReference<>(holder));
            if (++sNativeAllocationsCount % 50 == 0) {
                boolean collected = sNativeAllocations.removeIf(e -> e.mReferent.get() == null);
                if (Debug.DEBUG && collected) {
                    System.err.println("Elements collected");
                }
            }
        }
    }
}