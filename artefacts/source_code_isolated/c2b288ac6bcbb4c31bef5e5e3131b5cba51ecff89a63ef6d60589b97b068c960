public void registerMobileNetworkRequest(){
    if (!isCellularUpstreamPermitted()) {
        mLog.i("registerMobileNetworkRequest() is not permitted");
        releaseMobileNetworkRequest();
        return;
    }
    if (mMobileNetworkCallback != null) {
        mLog.e("registerMobileNetworkRequest() already registered");
        return;
    }
    final NetworkRequest mobileUpstreamRequest;
    if (mDunRequired) {
        mobileUpstreamRequest = new NetworkRequest.Builder().addCapability(NET_CAPABILITY_DUN).removeCapability(NET_CAPABILITY_NOT_RESTRICTED).addTransportType(TRANSPORT_CELLULAR).build();
    } else {
        mobileUpstreamRequest = new NetworkRequest.Builder().addCapability(NET_CAPABILITY_INTERNET).addTransportType(TRANSPORT_CELLULAR).build();
    }
    mMobileNetworkCallback = new UpstreamNetworkCallback(CALLBACK_MOBILE_REQUEST);
    final int legacyType = mDunRequired ? TYPE_MOBILE_DUN : TYPE_MOBILE_HIPRI;
    mLog.i("requesting mobile upstream network: " + mobileUpstreamRequest);
    cm().requestNetwork(mobileUpstreamRequest, 0, legacyType, mHandler, mMobileNetworkCallback);
}