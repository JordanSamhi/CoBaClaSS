public static ApplicationInfo generateApplicationInfo(AndroidPackage pkg, @PackageManager.ApplicationInfoFlags int flags, PackageUserState state, int userId, @Nullable PackageSetting pkgSetting){
    if (pkg == null) {
        return null;
    }
    if (!checkUseInstalledOrHidden(pkg, pkgSetting, state, flags) || !AndroidPackageUtils.isMatchForSystemOnly(pkg, flags)) {
        return null;
    }
    ApplicationInfo info = PackageInfoWithoutStateUtils.generateApplicationInfoUnchecked(pkg, flags, state, userId);
    if (pkgSetting != null) {
        PackageStateUnserialized pkgState = pkgSetting.getPkgState();
        info.hiddenUntilInstalled = pkgState.isHiddenUntilInstalled();
        List<String> usesLibraryFiles = pkgState.getUsesLibraryFiles();
        List<SharedLibraryInfo> usesLibraryInfos = pkgState.getUsesLibraryInfos();
        info.sharedLibraryFiles = usesLibraryFiles.isEmpty() ? null : usesLibraryFiles.toArray(new String[0]);
        info.sharedLibraryInfos = usesLibraryInfos.isEmpty() ? null : usesLibraryInfos;
    }
    info.seInfo = AndroidPackageUtils.getSeInfo(pkg, pkgSetting);
    info.primaryCpuAbi = AndroidPackageUtils.getPrimaryCpuAbi(pkg, pkgSetting);
    info.secondaryCpuAbi = AndroidPackageUtils.getSecondaryCpuAbi(pkg, pkgSetting);
    info.flags |= appInfoFlags(info.flags, pkgSetting);
    info.privateFlags |= appInfoPrivateFlags(info.privateFlags, pkgSetting);
    return info;
}