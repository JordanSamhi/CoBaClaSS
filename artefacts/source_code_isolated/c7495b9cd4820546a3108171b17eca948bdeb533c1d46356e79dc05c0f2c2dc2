public Builder setPassphrase(@Nullable String passphrase, @SecurityType int securityType){
    if (securityType == SECURITY_TYPE_OPEN) {
        if (passphrase != null) {
            throw new IllegalArgumentException("passphrase should be null when security type is open");
        }
    } else {
        Preconditions.checkStringNotEmpty(passphrase);
        final CharsetEncoder asciiEncoder = StandardCharsets.US_ASCII.newEncoder();
        if (!asciiEncoder.canEncode(passphrase)) {
            throw new IllegalArgumentException("passphrase not ASCII encodable");
        }
        if (securityType == SECURITY_TYPE_WPA2_PSK || securityType == SECURITY_TYPE_WPA3_SAE_TRANSITION) {
            if (passphrase.length() < PSK_MIN_LEN || passphrase.length() > PSK_MAX_LEN) {
                throw new IllegalArgumentException("Password size must be at least " + PSK_MIN_LEN + " and no more than " + PSK_MAX_LEN + " for WPA2_PSK and WPA3_SAE_TRANSITION Mode");
            }
        }
    }
    mSecurityType = securityType;
    mPassphrase = passphrase;
    return this;
}