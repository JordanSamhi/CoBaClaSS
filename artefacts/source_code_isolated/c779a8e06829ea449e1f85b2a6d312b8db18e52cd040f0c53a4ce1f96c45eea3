public static RemoteAnimationTarget[] startWallpaperAnimations(WindowManagerService service, long durationHint, long statusBarTransitionDelay, Consumer<WallpaperAnimationAdapter> animationCanceledRunnable, ArrayList<WallpaperAnimationAdapter> adaptersOut){
    final ArrayList<RemoteAnimationTarget> targets = new ArrayList<>();
    service.mRoot.forAllWallpaperWindows(wallpaperWindow -> {
        if (!wallpaperWindow.getDisplayContent().mWallpaperController.isWallpaperVisible()) {
            ProtoLog.d(WM_DEBUG_REMOTE_ANIMATIONS, "\tNot visible=%s", wallpaperWindow);
            return;
        }
        ProtoLog.d(WM_DEBUG_REMOTE_ANIMATIONS, "\tvisible=%s", wallpaperWindow);
        final WallpaperAnimationAdapter wallpaperAdapter = new WallpaperAnimationAdapter(wallpaperWindow, durationHint, statusBarTransitionDelay, animationCanceledRunnable);
        wallpaperWindow.startAnimation(wallpaperWindow.getPendingTransaction(), wallpaperAdapter, false, ANIMATION_TYPE_WINDOW_ANIMATION);
        targets.add(wallpaperAdapter.createRemoteAnimationTarget());
        adaptersOut.add(wallpaperAdapter);
    });
    return targets.toArray(new RemoteAnimationTarget[targets.size()]);
}