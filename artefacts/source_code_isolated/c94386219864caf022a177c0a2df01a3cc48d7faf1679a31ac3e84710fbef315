public SparseArray<int[]> getVisibilityWhitelist(PackageSetting setting, int[] users, ArrayMap<String, PackageSetting> existingSettings){
    if (mForceQueryable.contains(setting.appId)) {
        return null;
    }
    SparseArray<int[]> result = new SparseArray<>(users.length);
    for (int u = 0; u < users.length; u++) {
        final int userId = users[u];
        int[] appIds = new int[existingSettings.size()];
        int[] buffer = null;
        int whitelistSize = 0;
        for (int i = existingSettings.size() - 1; i >= 0; i--) {
            final PackageSetting existingSetting = existingSettings.valueAt(i);
            final int existingAppId = existingSetting.appId;
            if (existingAppId < Process.FIRST_APPLICATION_UID) {
                continue;
            }
            final int loc = Arrays.binarySearch(appIds, 0, whitelistSize, existingAppId);
            if (loc >= 0) {
                continue;
            }
            final int existingUid = UserHandle.getUid(userId, existingAppId);
            if (!shouldFilterApplication(existingUid, existingSetting, setting, userId)) {
                if (buffer == null) {
                    buffer = new int[appIds.length];
                }
                final int insert = ~loc;
                System.arraycopy(appIds, insert, buffer, 0, whitelistSize - insert);
                appIds[insert] = existingAppId;
                System.arraycopy(buffer, 0, appIds, insert + 1, whitelistSize - insert);
                whitelistSize++;
            }
        }
        result.put(userId, Arrays.copyOf(appIds, whitelistSize));
    }
    return result;
}