public boolean onDisplayRotationChanged(Rect outBounds, Rect oldBounds, Rect outInsetBounds, int displayId, int fromRotation, int toRotation, WindowContainerTransaction t){
    if ((displayId != mDisplayInfo.displayId) || (fromRotation == toRotation)) {
        return false;
    }
    final ActivityManager.StackInfo pinnedStackInfo;
    try {
        pinnedStackInfo = ActivityTaskManager.getService().getStackInfo(WINDOWING_MODE_PINNED, ACTIVITY_TYPE_UNDEFINED);
        if (pinnedStackInfo == null)
            return false;
    } catch (RemoteException e) {
        Log.e(TAG, "Failed to get StackInfo for pinned stack", e);
        return false;
    }
    final Rect postChangeStackBounds = new Rect(oldBounds);
    final float snapFraction = getSnapFraction(postChangeStackBounds);
    mDisplayLayout.rotateTo(mContext.getResources(), toRotation);
    mDisplayInfo.rotation = toRotation;
    updateDisplayInfoIfNeeded();
    final Rect postChangeMovementBounds = getMovementBounds(postChangeStackBounds, false);
    mSnapAlgorithm.applySnapFraction(postChangeStackBounds, postChangeMovementBounds, snapFraction);
    getInsetBounds(outInsetBounds);
    outBounds.set(postChangeStackBounds);
    t.setBounds(pinnedStackInfo.stackToken, outBounds);
    return true;
}