public void filter(int uid, @Nullable String packageName, @Nullable String attributionTag, @Nullable String[] opNames, @HistoricalOpsRequestFilter int filter, long beginTimeMillis, long endTimeMillis){
    final long durationMillis = getDurationMillis();
    mBeginTimeMillis = Math.max(mBeginTimeMillis, beginTimeMillis);
    mEndTimeMillis = Math.min(mEndTimeMillis, endTimeMillis);
    final double scaleFactor = Math.min((double) (endTimeMillis - beginTimeMillis) / (double) durationMillis, 1);
    final int uidCount = getUidCount();
    for (int i = uidCount - 1; i >= 0; i--) {
        final HistoricalUidOps uidOp = mHistoricalUidOps.valueAt(i);
        if ((filter & FILTER_BY_UID) != 0 && uid != uidOp.getUid()) {
            mHistoricalUidOps.removeAt(i);
        } else {
            uidOp.filter(packageName, attributionTag, opNames, filter, scaleFactor);
            if (uidOp.getPackageCount() == 0) {
                mHistoricalUidOps.removeAt(i);
            }
        }
    }
}