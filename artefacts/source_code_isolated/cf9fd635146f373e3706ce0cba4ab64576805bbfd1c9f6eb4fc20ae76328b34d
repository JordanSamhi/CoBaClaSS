public static String getAcquiredString(Context context, int acquireInfo, int vendorCode){
    switch(acquireInfo) {
        case FACE_ACQUIRED_GOOD:
            return null;
        case FACE_ACQUIRED_INSUFFICIENT:
            return context.getString(R.string.face_acquired_insufficient);
        case FACE_ACQUIRED_TOO_BRIGHT:
            return context.getString(R.string.face_acquired_too_bright);
        case FACE_ACQUIRED_TOO_DARK:
            return context.getString(R.string.face_acquired_too_dark);
        case FACE_ACQUIRED_TOO_CLOSE:
            return context.getString(R.string.face_acquired_too_close);
        case FACE_ACQUIRED_TOO_FAR:
            return context.getString(R.string.face_acquired_too_far);
        case FACE_ACQUIRED_TOO_HIGH:
            return context.getString(R.string.face_acquired_too_high);
        case FACE_ACQUIRED_TOO_LOW:
            return context.getString(R.string.face_acquired_too_low);
        case FACE_ACQUIRED_TOO_RIGHT:
            return context.getString(R.string.face_acquired_too_right);
        case FACE_ACQUIRED_TOO_LEFT:
            return context.getString(R.string.face_acquired_too_left);
        case FACE_ACQUIRED_POOR_GAZE:
            return context.getString(R.string.face_acquired_poor_gaze);
        case FACE_ACQUIRED_NOT_DETECTED:
            return context.getString(R.string.face_acquired_not_detected);
        case FACE_ACQUIRED_TOO_MUCH_MOTION:
            return context.getString(R.string.face_acquired_too_much_motion);
        case FACE_ACQUIRED_RECALIBRATE:
            return context.getString(R.string.face_acquired_recalibrate);
        case FACE_ACQUIRED_TOO_DIFFERENT:
            return context.getString(R.string.face_acquired_too_different);
        case FACE_ACQUIRED_TOO_SIMILAR:
            return context.getString(R.string.face_acquired_too_similar);
        case FACE_ACQUIRED_PAN_TOO_EXTREME:
            return context.getString(R.string.face_acquired_pan_too_extreme);
        case FACE_ACQUIRED_TILT_TOO_EXTREME:
            return context.getString(R.string.face_acquired_tilt_too_extreme);
        case FACE_ACQUIRED_ROLL_TOO_EXTREME:
            return context.getString(R.string.face_acquired_roll_too_extreme);
        case FACE_ACQUIRED_FACE_OBSCURED:
            return context.getString(R.string.face_acquired_obscured);
        case FACE_ACQUIRED_START:
            return null;
        case FACE_ACQUIRED_SENSOR_DIRTY:
            return context.getString(R.string.face_acquired_sensor_dirty);
        case FACE_ACQUIRED_VENDOR:
            {
                String[] msgArray = context.getResources().getStringArray(R.array.face_acquired_vendor);
                if (vendorCode < msgArray.length) {
                    return msgArray[vendorCode];
                }
            }
    }
    Slog.w(TAG, "Invalid acquired message: " + acquireInfo + ", " + vendorCode);
    return null;
}