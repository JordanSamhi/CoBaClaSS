public boolean sendNetworkEapSimUmtsAutsResponse(String paramsStr){
    synchronized (mLock) {
        try {
            Matcher match = UMTS_AUTS_RESPONSE_PARAMS_PATTERN.matcher(paramsStr);
            if (!match.find() || match.groupCount() != 1) {
                Log.e(TAG, "Malformed umts auts response params: " + paramsStr);
                return false;
            }
            byte[] auts = NativeUtil.hexStringToByteArray(match.group(1));
            if (auts == null || auts.length != 14) {
                Log.e(TAG, "Invalid auts value: " + match.group(1));
                return false;
            }
            return sendNetworkEapSimUmtsAutsResponse(auts);
        } catch (IllegalArgumentException e) {
            Log.e(TAG, "Illegal argument " + paramsStr, e);
            return false;
        }
    }
}