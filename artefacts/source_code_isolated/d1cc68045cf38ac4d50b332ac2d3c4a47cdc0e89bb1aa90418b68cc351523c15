public static String currentFieldToString(ProtoInputStream proto) throws IOException{
    StringBuilder sb = new StringBuilder();
    final int fieldNumber = proto.getFieldNumber();
    final int wireType = proto.getWireType();
    long fieldConstant;
    sb.append("Offset : 0x" + Integer.toHexString(proto.getOffset()));
    sb.append("\nField Number : 0x" + Integer.toHexString(proto.getFieldNumber()));
    sb.append("\nWire Type : ");
    switch(wireType) {
        case ProtoStream.WIRE_TYPE_VARINT:
            sb.append("varint");
            fieldConstant = ProtoStream.makeFieldId(fieldNumber, ProtoStream.FIELD_COUNT_SINGLE | ProtoStream.FIELD_TYPE_INT64);
            sb.append("\nField Value : 0x" + Long.toHexString(proto.readLong(fieldConstant)));
            break;
        case ProtoStream.WIRE_TYPE_FIXED64:
            sb.append("fixed64");
            fieldConstant = ProtoStream.makeFieldId(fieldNumber, ProtoStream.FIELD_COUNT_SINGLE | ProtoStream.FIELD_TYPE_FIXED64);
            sb.append("\nField Value : 0x" + Long.toHexString(proto.readLong(fieldConstant)));
            break;
        case ProtoStream.WIRE_TYPE_LENGTH_DELIMITED:
            sb.append("length delimited");
            fieldConstant = ProtoStream.makeFieldId(fieldNumber, ProtoStream.FIELD_COUNT_SINGLE | ProtoStream.FIELD_TYPE_BYTES);
            sb.append("\nField Bytes : " + proto.readBytes(fieldConstant));
            break;
        case ProtoStream.WIRE_TYPE_START_GROUP:
            sb.append("start group");
            break;
        case ProtoStream.WIRE_TYPE_END_GROUP:
            sb.append("end group");
            break;
        case ProtoStream.WIRE_TYPE_FIXED32:
            sb.append("fixed32");
            fieldConstant = ProtoStream.makeFieldId(fieldNumber, ProtoStream.FIELD_COUNT_SINGLE | ProtoStream.FIELD_TYPE_FIXED32);
            sb.append("\nField Value : 0x" + Integer.toHexString(proto.readInt(fieldConstant)));
            break;
        default:
            sb.append("unknown(" + proto.getWireType() + ")");
    }
    return sb.toString();
}