public long getWpaDriverFeatureSet(@NonNull String ifaceName){
    final String methodStr = "getWpaDriverFeatureSet";
    MutableInt drvCapabilitiesMask = new MutableInt(0);
    long featureSet = 0;
    if (isV1_3()) {
        ISupplicantStaIface iface = checkSupplicantStaIfaceAndLogFailure(ifaceName, methodStr);
        if (iface == null) {
            return 0;
        }
        android.hardware.wifi.supplicant.V1_3.ISupplicantStaIface staIfaceV13 = getStaIfaceMockableV1_3(iface);
        if (staIfaceV13 == null) {
            Log.e(TAG, methodStr + ": SupplicantStaIface is null, cannot get wpa driver features");
            return 0;
        }
        try {
            staIfaceV13.getWpaDriverCapabilities((SupplicantStatus statusInternal, int drvCapabilities) -> {
                if (statusInternal.code == SupplicantStatusCode.SUCCESS) {
                    drvCapabilitiesMask.value = drvCapabilities;
                }
                checkStatusAndLogFailure(statusInternal, methodStr);
            });
        } catch (RemoteException e) {
            handleRemoteException(e, methodStr);
        }
    } else {
        Log.i(TAG, "Method " + methodStr + " is not supported in existing HAL");
        return 0;
    }
    if ((drvCapabilitiesMask.value & WpaDriverCapabilitiesMask.MBO) != 0) {
        featureSet |= WIFI_FEATURE_MBO;
        if (mVerboseLoggingEnabled) {
            Log.v(TAG, methodStr + ": MBO supported");
        }
        if ((drvCapabilitiesMask.value & WpaDriverCapabilitiesMask.OCE) != 0) {
            featureSet |= WIFI_FEATURE_OCE;
            if (mVerboseLoggingEnabled) {
                Log.v(TAG, methodStr + ": OCE supported");
            }
        }
    }
    return featureSet;
}