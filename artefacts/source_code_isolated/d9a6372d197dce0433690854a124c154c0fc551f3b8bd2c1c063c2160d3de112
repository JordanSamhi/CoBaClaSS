public boolean setCurrentInputMethodSubtype(InputMethodSubtype subtype){
    if (Process.myUid() == Process.SYSTEM_UID) {
        Log.w(TAG, "System process should not call setCurrentInputMethodSubtype() because " + "almost always it is a bug under multi-user / multi-profile environment. " + "Consider directly interacting with InputMethodManagerService " + "via LocalServices.");
        return false;
    }
    if (subtype == null) {
        return false;
    }
    final Context fallbackContext = ActivityThread.currentApplication();
    if (fallbackContext == null) {
        return false;
    }
    if (fallbackContext.checkSelfPermission(WRITE_SECURE_SETTINGS) != PackageManager.PERMISSION_GRANTED) {
        return false;
    }
    final ContentResolver contentResolver = fallbackContext.getContentResolver();
    final String imeId = Settings.Secure.getString(contentResolver, Settings.Secure.DEFAULT_INPUT_METHOD);
    if (ComponentName.unflattenFromString(imeId) == null) {
        return false;
    }
    final List<InputMethodSubtype> enabledSubtypes;
    try {
        enabledSubtypes = mService.getEnabledInputMethodSubtypeList(imeId, true);
    } catch (RemoteException e) {
        return false;
    }
    final int numSubtypes = enabledSubtypes.size();
    for (int i = 0; i < numSubtypes; ++i) {
        final InputMethodSubtype enabledSubtype = enabledSubtypes.get(i);
        if (enabledSubtype.equals(subtype)) {
            Settings.Secure.putInt(contentResolver, Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE, enabledSubtype.hashCode());
            return true;
        }
    }
    return false;
}