public void dump(PrintWriter pw){
    pw.print("activeDataSubId: ");
    pw.println(activeDataSubId);
    dumpStringArray(pw, "tetherableUsbRegexs", tetherableUsbRegexs);
    dumpStringArray(pw, "tetherableWifiRegexs", tetherableWifiRegexs);
    dumpStringArray(pw, "tetherableWifiP2pRegexs", tetherableWifiP2pRegexs);
    dumpStringArray(pw, "tetherableBluetoothRegexs", tetherableBluetoothRegexs);
    dumpStringArray(pw, "tetherableNcmRegexs", tetherableNcmRegexs);
    pw.print("isDunRequired: ");
    pw.println(isDunRequired);
    pw.print("chooseUpstreamAutomatically: ");
    pw.println(chooseUpstreamAutomatically);
    pw.print("legacyPreredUpstreamIfaceTypes: ");
    pw.println(Arrays.toString(toIntArray(preferredUpstreamIfaceTypes)));
    dumpStringArray(pw, "legacyDhcpRanges", legacyDhcpRanges);
    dumpStringArray(pw, "defaultIPv4DNS", defaultIPv4DNS);
    pw.print("offloadPollInterval: ");
    pw.println(mOffloadPollInterval);
    dumpStringArray(pw, "provisioningApp", provisioningApp);
    pw.print("provisioningAppNoUi: ");
    pw.println(provisioningAppNoUi);
    pw.print("enableBpfOffload: ");
    pw.println(mEnableBpfOffload);
    pw.print("enableLegacyDhcpServer: ");
    pw.println(enableLegacyDhcpServer);
}