public LockscreenCredential retrievePassword(int userId){
    synchronized (mEncryptedPasswords) {
        byte[] block = mEncryptedPasswords.get(userId);
        if (block == null) {
            return null;
        }
        Key key;
        try {
            key = mKeyStore.getKey(getEncryptionKeyName(userId), null);
        } catch (UnrecoverableKeyException | KeyStoreException | NoSuchAlgorithmException e) {
            Slog.d(TAG, "Cannot get key", e);
            return null;
        }
        if (key == null) {
            return null;
        }
        byte[] iv = Arrays.copyOf(block, 12);
        byte[] ciphertext = Arrays.copyOfRange(block, 12, block.length);
        byte[] credential;
        try {
            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
            cipher.init(Cipher.DECRYPT_MODE, key, new GCMParameterSpec(128, iv));
            credential = cipher.doFinal(ciphertext);
        } catch (UserNotAuthenticatedException e) {
            Slog.i(TAG, "Device not unlocked for more than 7 days");
            return null;
        } catch (GeneralSecurityException e) {
            Slog.d(TAG, "Cannot decrypt", e);
            return null;
        }
        LockscreenCredential result = LockscreenCredential.createManagedPassword(credential);
        Arrays.fill(credential, (byte) 0);
        return result;
    }
}