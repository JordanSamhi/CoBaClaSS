public void setMicrophoneMute(boolean on, String callingPackage, int userId){
    int uid = Binder.getCallingUid();
    if (uid == android.os.Process.SYSTEM_UID) {
        uid = UserHandle.getUid(userId, UserHandle.getAppId(uid));
    }
    MediaMetrics.Item mmi = new MediaMetrics.Item(MediaMetrics.Name.AUDIO_MIC).setUid(uid).set(MediaMetrics.Property.CALLING_PACKAGE, callingPackage).set(MediaMetrics.Property.EVENT, "setMicrophoneMute").set(MediaMetrics.Property.REQUEST, on ? MediaMetrics.Value.MUTE : MediaMetrics.Value.UNMUTE);
    if (!on && mAppOps.noteOp(AppOpsManager.OP_MUTE_MICROPHONE, uid, callingPackage) != AppOpsManager.MODE_ALLOWED) {
        mmi.set(MediaMetrics.Property.EARLY_RETURN, "disallow unmuting").record();
        return;
    }
    if (!checkAudioSettingsPermission("setMicrophoneMute()")) {
        mmi.set(MediaMetrics.Property.EARLY_RETURN, "!checkAudioSettingsPermission").record();
        return;
    }
    if (userId != UserHandle.getCallingUserId() && mContext.checkCallingOrSelfPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED) {
        mmi.set(MediaMetrics.Property.EARLY_RETURN, "permission").record();
        return;
    }
    mMicMuteFromApi = on;
    mmi.record();
    setMicrophoneMuteNoCallerCheck(userId);
}