public static TelephonyCallSession.Event.CallQuality toCallQualityProto(CallQuality callQuality){
    TelephonyCallSession.Event.CallQuality cq = new TelephonyCallSession.Event.CallQuality();
    if (callQuality != null) {
        cq.downlinkLevel = callQualityLevelToProtoEnum(callQuality.getDownlinkCallQualityLevel());
        cq.uplinkLevel = callQualityLevelToProtoEnum(callQuality.getUplinkCallQualityLevel());
        cq.durationInSeconds = callQuality.getCallDuration() / 1000;
        cq.rtpPacketsTransmitted = callQuality.getNumRtpPacketsTransmitted();
        cq.rtpPacketsReceived = callQuality.getNumRtpPacketsReceived();
        cq.rtpPacketsTransmittedLost = callQuality.getNumRtpPacketsTransmittedLost();
        cq.rtpPacketsNotReceived = callQuality.getNumRtpPacketsNotReceived();
        cq.averageRelativeJitterMillis = callQuality.getAverageRelativeJitter();
        cq.maxRelativeJitterMillis = callQuality.getMaxRelativeJitter();
        cq.codecType = convertImsCodec(callQuality.getCodecType());
        cq.rtpInactivityDetected = callQuality.isRtpInactivityDetected();
        cq.rxSilenceDetected = callQuality.isIncomingSilenceDetectedAtCallSetup();
        cq.txSilenceDetected = callQuality.isOutgoingSilenceDetectedAtCallSetup();
    }
    return cq;
}