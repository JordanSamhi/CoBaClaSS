public static T[] filter(@Nullable T[] items, @NonNull IntFunction<T[]> arrayConstructor, @NonNull java.util.function.Predicate<T> predicate){
    if (isEmpty(items)) {
        return items;
    }
    int matchesCount = 0;
    int size = size(items);
    for (int i = 0; i < size; i++) {
        if (predicate.test(items[i])) {
            matchesCount++;
        }
    }
    if (matchesCount == 0) {
        return items;
    }
    if (matchesCount == items.length) {
        return items;
    }
    if (matchesCount == 0) {
        return null;
    }
    T[] result = arrayConstructor.apply(matchesCount);
    int outIdx = 0;
    for (int i = 0; i < size; i++) {
        if (predicate.test(items[i])) {
            result[outIdx++] = items[i];
        }
    }
    return result;
}