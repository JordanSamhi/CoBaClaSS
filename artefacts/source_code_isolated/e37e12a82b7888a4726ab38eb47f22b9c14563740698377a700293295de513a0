public void startRanging(@Nullable WorkSource workSource, @NonNull RangingRequest request, @NonNull @CallbackExecutor Executor executor, @NonNull RangingResultCallback callback){
    if (VDBG) {
        Log.v(TAG, "startRanging: workSource=" + workSource + ", request=" + request + ", callback=" + callback + ", executor=" + executor);
    }
    if (executor == null) {
        throw new IllegalArgumentException("Null executor provided");
    }
    if (callback == null) {
        throw new IllegalArgumentException("Null callback provided");
    }
    Binder binder = new Binder();
    try {
        mService.startRanging(binder, mContext.getOpPackageName(), mContext.getAttributionTag(), workSource, request, new IRttCallback.Stub() {

            @Override
            public void onRangingFailure(int status) throws RemoteException {
                clearCallingIdentity();
                executor.execute(() -> callback.onRangingFailure(status));
            }

            @Override
            public void onRangingResults(List<RangingResult> results) throws RemoteException {
                clearCallingIdentity();
                executor.execute(() -> callback.onRangingResults(results));
            }
        });
    } catch (RemoteException e) {
        throw e.rethrowFromSystemServer();
    }
}