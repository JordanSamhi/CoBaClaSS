public boolean startScan(String packageName, String featureId){
    if (enforceChangePermission(packageName) != MODE_ALLOWED) {
        return false;
    }
    int callingUid = Binder.getCallingUid();
    long ident = Binder.clearCallingIdentity();
    mLog.info("startScan uid=%").c(callingUid).flush();
    synchronized (this) {
        if (mInIdleMode) {
            sendFailedScanBroadcast();
            mScanPending = true;
            return false;
        }
    }
    try {
        mWifiPermissionsUtil.enforceCanAccessScanResults(packageName, featureId, callingUid, null);
        Boolean scanSuccess = mWifiThreadRunner.call(() -> mScanRequestProxy.startScan(callingUid, packageName), null);
        if (scanSuccess == null) {
            sendFailedScanBroadcast();
            return false;
        }
        if (!scanSuccess) {
            Log.e(TAG, "Failed to start scan");
            return false;
        }
    } catch (SecurityException e) {
        Log.e(TAG, "Permission violation - startScan not allowed for" + " uid=" + callingUid + ", packageName=" + packageName + ", reason=" + e);
        return false;
    } finally {
        Binder.restoreCallingIdentity(ident);
    }
    return true;
}