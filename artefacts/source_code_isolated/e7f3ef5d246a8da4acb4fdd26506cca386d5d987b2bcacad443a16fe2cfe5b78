public Map<Integer, List<EmergencyNumber>> getEmergencyNumberList(@EmergencyServiceCategories int categories){
    Map<Integer, List<EmergencyNumber>> emergencyNumberList = new HashMap<>();
    try {
        ITelephony telephony = getITelephony();
        if (telephony != null) {
            emergencyNumberList = telephony.getEmergencyNumberList(mContext.getOpPackageName(), mContext.getAttributionTag());
            if (emergencyNumberList != null) {
                for (Integer subscriptionId : emergencyNumberList.keySet()) {
                    List<EmergencyNumber> numberList = emergencyNumberList.get(subscriptionId);
                    for (EmergencyNumber number : numberList) {
                        if (!number.isInEmergencyServiceCategories(categories)) {
                            numberList.remove(number);
                        }
                    }
                }
            }
            return emergencyNumberList;
        } else {
            throw new IllegalStateException("telephony service is null.");
        }
    } catch (RemoteException ex) {
        Log.e(TAG, "getEmergencyNumberList with Categories RemoteException", ex);
        ex.rethrowAsRuntimeException();
    }
    return emergencyNumberList;
}