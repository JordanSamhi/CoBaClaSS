public static Intent buildEphemeralInstallerIntent(@NonNull Intent origIntent, @NonNull Intent sanitizedIntent, @Nullable Intent failureIntent, @NonNull String callingPackage, @Nullable String callingFeatureId, @Nullable Bundle verificationBundle, @NonNull String resolvedType, int userId, @Nullable ComponentName installFailureActivity, @Nullable String token, boolean needsPhaseTwo, List<AuxiliaryResolveInfo.AuxiliaryFilter> filters){
    int flags = origIntent.getFlags();
    final Intent intent = new Intent();
    intent.setFlags(flags | Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
    if (token != null) {
        intent.putExtra(Intent.EXTRA_INSTANT_APP_TOKEN, token);
    }
    if (origIntent.getData() != null) {
        intent.putExtra(Intent.EXTRA_INSTANT_APP_HOSTNAME, origIntent.getData().getHost());
    }
    intent.putExtra(Intent.EXTRA_INSTANT_APP_ACTION, origIntent.getAction());
    intent.putExtra(Intent.EXTRA_INTENT, sanitizedIntent);
    if (needsPhaseTwo) {
        intent.setAction(Intent.ACTION_RESOLVE_INSTANT_APP_PACKAGE);
    } else {
        if (failureIntent != null || installFailureActivity != null) {
            try {
                final Intent onFailureIntent;
                if (installFailureActivity != null) {
                    onFailureIntent = new Intent();
                    onFailureIntent.setComponent(installFailureActivity);
                    if (filters != null && filters.size() == 1) {
                        onFailureIntent.putExtra(Intent.EXTRA_SPLIT_NAME, filters.get(0).splitName);
                    }
                    onFailureIntent.putExtra(Intent.EXTRA_INTENT, origIntent);
                } else {
                    onFailureIntent = failureIntent;
                }
                final IIntentSender failureIntentTarget = ActivityManager.getService().getIntentSenderWithFeature(ActivityManager.INTENT_SENDER_ACTIVITY, callingPackage, callingFeatureId, null, null, 1, new Intent[] { onFailureIntent }, new String[] { resolvedType }, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE, null, userId);
                IntentSender failureSender = new IntentSender(failureIntentTarget);
                intent.putExtra(Intent.EXTRA_INSTANT_APP_FAILURE, failureSender);
            } catch (RemoteException ignore) {
            }
        }
        final Intent successIntent = new Intent(origIntent);
        successIntent.setLaunchToken(token);
        try {
            final IIntentSender successIntentTarget = ActivityManager.getService().getIntentSenderWithFeature(ActivityManager.INTENT_SENDER_ACTIVITY, callingPackage, callingFeatureId, null, null, 0, new Intent[] { successIntent }, new String[] { resolvedType }, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE, null, userId);
            IntentSender successSender = new IntentSender(successIntentTarget);
            intent.putExtra(Intent.EXTRA_INSTANT_APP_SUCCESS, successSender);
        } catch (RemoteException ignore) {
        }
        if (verificationBundle != null) {
            intent.putExtra(Intent.EXTRA_VERIFICATION_BUNDLE, verificationBundle);
        }
        intent.putExtra(Intent.EXTRA_CALLING_PACKAGE, callingPackage);
        if (filters != null) {
            Bundle[] resolvableFilters = new Bundle[filters.size()];
            for (int i = 0, max = filters.size(); i < max; i++) {
                Bundle resolvableFilter = new Bundle();
                AuxiliaryResolveInfo.AuxiliaryFilter filter = filters.get(i);
                resolvableFilter.putBoolean(Intent.EXTRA_UNKNOWN_INSTANT_APP, filter.resolveInfo != null && filter.resolveInfo.shouldLetInstallerDecide());
                resolvableFilter.putString(Intent.EXTRA_PACKAGE_NAME, filter.packageName);
                resolvableFilter.putString(Intent.EXTRA_SPLIT_NAME, filter.splitName);
                resolvableFilter.putLong(Intent.EXTRA_LONG_VERSION_CODE, filter.versionCode);
                resolvableFilter.putBundle(Intent.EXTRA_INSTANT_APP_EXTRAS, filter.extras);
                resolvableFilters[i] = resolvableFilter;
                if (i == 0) {
                    intent.putExtras(resolvableFilter);
                    intent.putExtra(Intent.EXTRA_VERSION_CODE, (int) filter.versionCode);
                }
            }
            intent.putExtra(Intent.EXTRA_INSTANT_APP_BUNDLES, resolvableFilters);
        }
        intent.setAction(Intent.ACTION_INSTALL_INSTANT_APP_PACKAGE);
    }
    return intent;
}