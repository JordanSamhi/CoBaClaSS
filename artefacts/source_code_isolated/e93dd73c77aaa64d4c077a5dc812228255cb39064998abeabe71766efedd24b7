public int maybeRemapReasonCode(ImsReasonInfo reasonInfo){
    int code = reasonInfo.getCode();
    String reason = reasonInfo.getExtraMessage();
    if (reason == null) {
        reason = "";
    } else {
        reason = reason.toLowerCase();
    }
    log("maybeRemapReasonCode : fromCode = " + reasonInfo.getCode() + " ; message = " + reason);
    Pair<Integer, String> toCheck = new Pair<>(code, reason);
    Pair<Integer, String> wildcardToCheck = new Pair<>(null, reason);
    if (mImsReasonCodeMap.containsKey(toCheck)) {
        int toCode = mImsReasonCodeMap.get(toCheck);
        log("maybeRemapReasonCode : fromCode = " + reasonInfo.getCode() + " ; message = " + reason + " ; toCode = " + toCode);
        return toCode;
    } else if (!reason.isEmpty() && mImsReasonCodeMap.containsKey(wildcardToCheck)) {
        int toCode = mImsReasonCodeMap.get(wildcardToCheck);
        log("maybeRemapReasonCode : fromCode(wildcard) = " + reasonInfo.getCode() + " ; message = " + reason + " ; toCode = " + toCode);
        return toCode;
    }
    return code;
}