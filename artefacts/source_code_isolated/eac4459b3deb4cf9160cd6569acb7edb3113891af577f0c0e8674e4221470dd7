public static String permissionFlagToString(int flag){
    switch(flag) {
        case FLAG_PERMISSION_GRANTED_BY_DEFAULT:
            return "GRANTED_BY_DEFAULT";
        case FLAG_PERMISSION_POLICY_FIXED:
            return "POLICY_FIXED";
        case FLAG_PERMISSION_SYSTEM_FIXED:
            return "SYSTEM_FIXED";
        case FLAG_PERMISSION_USER_SET:
            return "USER_SET";
        case FLAG_PERMISSION_USER_FIXED:
            return "USER_FIXED";
        case FLAG_PERMISSION_REVIEW_REQUIRED:
            return "REVIEW_REQUIRED";
        case FLAG_PERMISSION_REVOKE_WHEN_REQUESTED:
            return "REVOKE_WHEN_REQUESTED";
        case FLAG_PERMISSION_USER_SENSITIVE_WHEN_GRANTED:
            return "USER_SENSITIVE_WHEN_GRANTED";
        case FLAG_PERMISSION_USER_SENSITIVE_WHEN_DENIED:
            return "USER_SENSITIVE_WHEN_DENIED";
        case FLAG_PERMISSION_RESTRICTION_INSTALLER_EXEMPT:
            return "RESTRICTION_INSTALLER_EXEMPT";
        case FLAG_PERMISSION_RESTRICTION_SYSTEM_EXEMPT:
            return "RESTRICTION_SYSTEM_EXEMPT";
        case FLAG_PERMISSION_RESTRICTION_UPGRADE_EXEMPT:
            return "RESTRICTION_UPGRADE_EXEMPT";
        case FLAG_PERMISSION_APPLY_RESTRICTION:
            return "APPLY_RESTRICTION";
        case FLAG_PERMISSION_GRANTED_BY_ROLE:
            return "GRANTED_BY_ROLE";
        case FLAG_PERMISSION_REVOKED_COMPAT:
            return "REVOKED_COMPAT";
        case FLAG_PERMISSION_ONE_TIME:
            return "ONE_TIME";
        case FLAG_PERMISSION_AUTO_REVOKED:
            return "AUTO_REVOKED";
        default:
            return Integer.toString(flag);
    }
}