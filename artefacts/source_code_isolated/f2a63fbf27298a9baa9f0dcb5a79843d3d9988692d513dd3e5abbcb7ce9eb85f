public void layoutWindowLw(WindowState win, WindowState attached, DisplayFrames displayFrames){
    if ((win == mStatusBar && !canReceiveInput(win)) || win == mNavigationBar || mScreenDecorWindows.contains(win)) {
        return;
    }
    final WindowManager.LayoutParams attrs = win.getAttrs();
    final int type = attrs.type;
    final int fl = PolicyControl.getWindowFlags(win, attrs);
    final int pfl = attrs.privateFlags;
    final int sim = attrs.softInputMode;
    final int requestedSysUiFl = PolicyControl.getSystemUiVisibility(null, attrs);
    final int sysUiFl = requestedSysUiFl | getImpliedSysUiFlagsForLayout(attrs);
    displayFrames = win.getDisplayFrames(displayFrames);
    final WindowFrames windowFrames = win.getWindowFrames();
    sTmpLastParentFrame.set(windowFrames.mParentFrame);
    final Rect pf = windowFrames.mParentFrame;
    final Rect df = windowFrames.mDisplayFrame;
    final Rect cf = windowFrames.mContentFrame;
    final Rect vf = windowFrames.mVisibleFrame;
    final Rect dcf = windowFrames.mDecorFrame;
    final Rect sf = windowFrames.mStableFrame;
    dcf.setEmpty();
    windowFrames.setParentFrameWasClippedByDisplayCutout(false);
    final boolean hasNavBar = hasNavigationBar() && mNavigationBar != null && mNavigationBar.isVisibleLw();
    final int adjust = sim & SOFT_INPUT_MASK_ADJUST;
    final boolean layoutInScreen = (fl & FLAG_LAYOUT_IN_SCREEN) == FLAG_LAYOUT_IN_SCREEN;
    final boolean layoutInsetDecor = (fl & FLAG_LAYOUT_INSET_DECOR) == FLAG_LAYOUT_INSET_DECOR;
    sf.set(displayFrames.mStable);
    if (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_FULL) {
        @InsetsType
        final int typesToFit = attrs.getFitInsetsTypes();
        @InsetsSide
        final int sidesToFit = attrs.getFitInsetsSides();
        final ArraySet<Integer> types = InsetsState.toInternalType(typesToFit);
        final Rect dfu = displayFrames.mUnrestricted;
        Insets insets = Insets.of(0, 0, 0, 0);
        for (int i = types.size() - 1; i >= 0; i--) {
            final InsetsSource source = mDisplayContent.getInsetsPolicy().getInsetsForDispatch(win).peekSource(types.valueAt(i));
            if (source == null) {
                continue;
            }
            insets = Insets.max(insets, source.calculateInsets(dfu, attrs.isFitInsetsIgnoringVisibility()));
        }
        final int left = (sidesToFit & Side.LEFT) != 0 ? insets.left : 0;
        final int top = (sidesToFit & Side.TOP) != 0 ? insets.top : 0;
        final int right = (sidesToFit & Side.RIGHT) != 0 ? insets.right : 0;
        final int bottom = (sidesToFit & Side.BOTTOM) != 0 ? insets.bottom : 0;
        df.set(left, top, dfu.right - right, dfu.bottom - bottom);
        if (attached == null) {
            pf.set(df);
            vf.set(adjust != SOFT_INPUT_ADJUST_NOTHING ? displayFrames.mCurrent : displayFrames.mDock);
        } else {
            pf.set((fl & FLAG_LAYOUT_IN_SCREEN) == 0 ? attached.getFrameLw() : df);
            vf.set(attached.getVisibleFrameLw());
        }
        cf.set(adjust != SOFT_INPUT_ADJUST_RESIZE ? displayFrames.mDock : displayFrames.mContent);
        dcf.set(displayFrames.mSystem);
    } else if (type == TYPE_INPUT_METHOD) {
        vf.set(displayFrames.mDock);
        cf.set(displayFrames.mDock);
        df.set(displayFrames.mDock);
        pf.set(displayFrames.mDock);
        pf.bottom = df.bottom = displayFrames.mUnrestricted.bottom;
        cf.bottom = vf.bottom = displayFrames.mStable.bottom;
        if (mStatusBar != null && mFocusedWindow == mStatusBar && canReceiveInput(mStatusBar)) {
            if (mNavigationBarPosition == NAV_BAR_RIGHT) {
                pf.right = df.right = cf.right = vf.right = displayFrames.mStable.right;
            } else if (mNavigationBarPosition == NAV_BAR_LEFT) {
                pf.left = df.left = cf.left = vf.left = displayFrames.mStable.left;
            }
        }
        if (mNavigationBarPosition == NAV_BAR_BOTTOM) {
            final int rotation = displayFrames.mRotation;
            final int uimode = mService.mPolicy.getUiMode();
            final int navHeightOffset = getNavigationBarFrameHeight(rotation, uimode) - getNavigationBarHeight(rotation, uimode);
            if (navHeightOffset > 0) {
                cf.bottom -= navHeightOffset;
                sf.bottom -= navHeightOffset;
                vf.bottom -= navHeightOffset;
                dcf.bottom -= navHeightOffset;
            }
        }
        attrs.gravity = Gravity.BOTTOM;
    } else if (type == TYPE_VOICE_INTERACTION) {
        df.set(displayFrames.mUnrestricted);
        pf.set(displayFrames.mUnrestricted);
        if (adjust != SOFT_INPUT_ADJUST_RESIZE) {
            cf.set(displayFrames.mDock);
        } else {
            cf.set(displayFrames.mContent);
        }
        if (adjust != SOFT_INPUT_ADJUST_NOTHING) {
            vf.set(displayFrames.mCurrent);
        } else {
            vf.set(cf);
        }
    } else if (type == TYPE_WALLPAPER) {
        layoutWallpaper(displayFrames, pf, df, cf);
    } else if (win == mStatusBar || type == TYPE_NOTIFICATION_SHADE) {
        df.set(displayFrames.mUnrestricted);
        pf.set(displayFrames.mUnrestricted);
        cf.set(displayFrames.mStable);
        vf.set(displayFrames.mStable);
        if (adjust == SOFT_INPUT_ADJUST_RESIZE) {
            if (cf.bottom > displayFrames.mContent.bottom) {
                cf.bottom = displayFrames.mContent.bottom;
            }
        } else {
            if (cf.bottom > displayFrames.mDock.bottom) {
                cf.bottom = displayFrames.mDock.bottom;
            }
            if (vf.bottom > displayFrames.mContent.bottom) {
                vf.bottom = displayFrames.mContent.bottom;
            }
        }
    } else {
        dcf.set(displayFrames.mSystem);
        final boolean isAppWindow = type >= FIRST_APPLICATION_WINDOW && type <= LAST_APPLICATION_WINDOW;
        final boolean topAtRest = win == mTopFullscreenOpaqueWindowState && !win.isAnimatingLw();
        if (isAppWindow && !topAtRest) {
            if ((sysUiFl & View.SYSTEM_UI_FLAG_FULLSCREEN) == 0 && (fl & FLAG_FULLSCREEN) == 0 && (fl & FLAG_TRANSLUCENT_STATUS) == 0 && (fl & FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS) == 0 && (pfl & PRIVATE_FLAG_FORCE_DRAW_BAR_BACKGROUNDS) == 0) {
                dcf.top = displayFrames.mStable.top;
            }
            if ((fl & FLAG_TRANSLUCENT_NAVIGATION) == 0 && (sysUiFl & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0 && (fl & FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS) == 0 && (pfl & PRIVATE_FLAG_FORCE_DRAW_BAR_BACKGROUNDS) == 0) {
                dcf.bottom = displayFrames.mStable.bottom;
                dcf.right = displayFrames.mStable.right;
            }
        }
        if (layoutInScreen && layoutInsetDecor) {
            if (DEBUG_LAYOUT)
                Slog.v(TAG, "layoutWindowLw(" + attrs.getTitle() + "): IN_SCREEN, INSET_DECOR");
            if (attached != null) {
                setAttachedWindowFrames(win, fl, adjust, attached, true, pf, df, cf, vf, displayFrames);
            } else {
                if (type == TYPE_STATUS_BAR_ADDITIONAL || type == TYPE_STATUS_BAR_SUB_PANEL) {
                    pf.left = df.left = hasNavBar ? displayFrames.mDock.left : displayFrames.mUnrestricted.left;
                    pf.top = df.top = displayFrames.mUnrestricted.top;
                    pf.right = df.right = hasNavBar ? displayFrames.mRestricted.right : displayFrames.mUnrestricted.right;
                    pf.bottom = df.bottom = hasNavBar ? displayFrames.mRestricted.bottom : displayFrames.mUnrestricted.bottom;
                    if (DEBUG_LAYOUT)
                        Slog.v(TAG, "Laying out status bar window: " + pf);
                } else if ((sysUiFl & SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION) != 0 && (type >= FIRST_APPLICATION_WINDOW && type <= LAST_SUB_WINDOW || type == TYPE_VOLUME_OVERLAY || type == TYPE_KEYGUARD_DIALOG)) {
                    df.set(displayFrames.mUnrestricted);
                    pf.set(displayFrames.mUnrestricted);
                } else {
                    df.set(displayFrames.mRestricted);
                    pf.set(displayFrames.mRestricted);
                }
                if ((fl & FLAG_FULLSCREEN) == 0) {
                    if (win.isVoiceInteraction()) {
                        cf.set(displayFrames.mVoiceContent);
                    } else {
                        if (ViewRootImpl.sNewInsetsMode != NEW_INSETS_MODE_NONE || adjust != SOFT_INPUT_ADJUST_RESIZE) {
                            cf.set(displayFrames.mDock);
                        } else {
                            cf.set(displayFrames.mContent);
                        }
                    }
                } else {
                    cf.set(displayFrames.mRestricted);
                }
                applyStableConstraints(sysUiFl, fl, cf, displayFrames);
                if (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_NONE && adjust != SOFT_INPUT_ADJUST_NOTHING) {
                    vf.set(displayFrames.mCurrent);
                } else {
                    vf.set(cf);
                }
            }
        } else if (layoutInScreen || (sysUiFl & (SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) != 0) {
            if (DEBUG_LAYOUT)
                Slog.v(TAG, "layoutWindowLw(" + attrs.getTitle() + "): IN_SCREEN");
            if (type == TYPE_STATUS_BAR_ADDITIONAL || type == TYPE_STATUS_BAR_SUB_PANEL) {
                cf.set(displayFrames.mUnrestricted);
                df.set(displayFrames.mUnrestricted);
                pf.set(displayFrames.mUnrestricted);
                if (hasNavBar) {
                    pf.left = df.left = cf.left = displayFrames.mDock.left;
                    pf.right = df.right = cf.right = displayFrames.mRestricted.right;
                    pf.bottom = df.bottom = cf.bottom = displayFrames.mRestricted.bottom;
                }
                if (DEBUG_LAYOUT)
                    Slog.v(TAG, "Laying out IN_SCREEN status bar window: " + pf);
            } else if (type == TYPE_NAVIGATION_BAR || type == TYPE_NAVIGATION_BAR_PANEL) {
                df.set(displayFrames.mUnrestricted);
                pf.set(displayFrames.mUnrestricted);
                if (DEBUG_LAYOUT)
                    Slog.v(TAG, "Laying out navigation bar window: " + pf);
            } else if ((type == TYPE_SECURE_SYSTEM_OVERLAY || type == TYPE_SCREENSHOT) && ((fl & FLAG_FULLSCREEN) != 0)) {
                cf.set(displayFrames.mUnrestricted);
                df.set(displayFrames.mUnrestricted);
                pf.set(displayFrames.mUnrestricted);
            } else if (type == TYPE_BOOT_PROGRESS) {
                cf.set(displayFrames.mUnrestricted);
                df.set(displayFrames.mUnrestricted);
                pf.set(displayFrames.mUnrestricted);
            } else if ((sysUiFl & SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION) != 0 && (type == TYPE_NOTIFICATION_SHADE || type == TYPE_TOAST || type == TYPE_DOCK_DIVIDER || type == TYPE_VOICE_INTERACTION_STARTING || (type >= FIRST_APPLICATION_WINDOW && type <= LAST_SUB_WINDOW))) {
                cf.set(displayFrames.mUnrestricted);
                df.set(displayFrames.mUnrestricted);
                pf.set(displayFrames.mUnrestricted);
            } else if ((sysUiFl & SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN) != 0) {
                df.set(displayFrames.mRestricted);
                pf.set(displayFrames.mRestricted);
                if (ViewRootImpl.sNewInsetsMode != NEW_INSETS_MODE_NONE || adjust != SOFT_INPUT_ADJUST_RESIZE) {
                    cf.set(displayFrames.mDock);
                } else {
                    cf.set(displayFrames.mContent);
                }
            } else {
                cf.set(displayFrames.mRestricted);
                df.set(displayFrames.mRestricted);
                pf.set(displayFrames.mRestricted);
            }
            applyStableConstraints(sysUiFl, fl, cf, displayFrames);
            if (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_NONE && adjust != SOFT_INPUT_ADJUST_NOTHING) {
                vf.set(displayFrames.mCurrent);
            } else {
                vf.set(cf);
            }
        } else if (attached != null) {
            if (DEBUG_LAYOUT)
                Slog.v(TAG, "layoutWindowLw(" + attrs.getTitle() + "): attached to " + attached);
            setAttachedWindowFrames(win, fl, adjust, attached, false, pf, df, cf, vf, displayFrames);
        } else {
            if (DEBUG_LAYOUT)
                Slog.v(TAG, "layoutWindowLw(" + attrs.getTitle() + "): normal window");
            if (type == TYPE_STATUS_BAR_ADDITIONAL) {
                cf.set(displayFrames.mRestricted);
                df.set(displayFrames.mRestricted);
                pf.set(displayFrames.mRestricted);
            } else if (type == TYPE_TOAST || type == TYPE_SYSTEM_ALERT) {
                cf.set(displayFrames.mStable);
                df.set(displayFrames.mStable);
                pf.set(displayFrames.mStable);
            } else {
                pf.set(displayFrames.mContent);
                if (win.isVoiceInteraction()) {
                    cf.set(displayFrames.mVoiceContent);
                    df.set(displayFrames.mVoiceContent);
                } else if (adjust != SOFT_INPUT_ADJUST_RESIZE) {
                    cf.set(displayFrames.mDock);
                    df.set(displayFrames.mDock);
                } else {
                    cf.set(displayFrames.mContent);
                    df.set(displayFrames.mContent);
                }
                if (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_NONE && adjust != SOFT_INPUT_ADJUST_NOTHING) {
                    vf.set(displayFrames.mCurrent);
                } else {
                    vf.set(cf);
                }
            }
        }
    }
    final int cutoutMode = attrs.layoutInDisplayCutoutMode;
    final boolean attachedInParent = attached != null && !layoutInScreen;
    final boolean requestedFullscreen = (fl & FLAG_FULLSCREEN) != 0 || (requestedSysUiFl & View.SYSTEM_UI_FLAG_FULLSCREEN) != 0 || (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_FULL && !win.getRequestedInsetsState().getSourceOrDefaultVisibility(ITYPE_STATUS_BAR));
    final boolean requestedHideNavigation = (requestedSysUiFl & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) != 0 || (ViewRootImpl.sNewInsetsMode == NEW_INSETS_MODE_FULL && !win.getRequestedInsetsState().getSourceOrDefaultVisibility(ITYPE_NAVIGATION_BAR));
    final boolean floatingInScreenWindow = !attrs.isFullscreen() && layoutInScreen && type != TYPE_BASE_APPLICATION;
    if (cutoutMode != LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS) {
        final Rect displayCutoutSafeExceptMaybeBars = sTmpDisplayCutoutSafeExceptMaybeBarsRect;
        displayCutoutSafeExceptMaybeBars.set(displayFrames.mDisplayCutoutSafe);
        if (cutoutMode == LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES) {
            if (displayFrames.mDisplayWidth < displayFrames.mDisplayHeight) {
                displayCutoutSafeExceptMaybeBars.top = Integer.MIN_VALUE;
                displayCutoutSafeExceptMaybeBars.bottom = Integer.MAX_VALUE;
            } else {
                displayCutoutSafeExceptMaybeBars.left = Integer.MIN_VALUE;
                displayCutoutSafeExceptMaybeBars.right = Integer.MAX_VALUE;
            }
        }
        if (layoutInScreen && layoutInsetDecor && !requestedFullscreen && (cutoutMode == LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT || cutoutMode == LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES)) {
            displayCutoutSafeExceptMaybeBars.top = Integer.MIN_VALUE;
        }
        if (layoutInScreen && layoutInsetDecor && !requestedHideNavigation && (cutoutMode == LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT || cutoutMode == LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES)) {
            switch(mNavigationBarPosition) {
                case NAV_BAR_BOTTOM:
                    displayCutoutSafeExceptMaybeBars.bottom = Integer.MAX_VALUE;
                    break;
                case NAV_BAR_RIGHT:
                    displayCutoutSafeExceptMaybeBars.right = Integer.MAX_VALUE;
                    break;
                case NAV_BAR_LEFT:
                    displayCutoutSafeExceptMaybeBars.left = Integer.MIN_VALUE;
                    break;
            }
        }
        if (type == TYPE_INPUT_METHOD && mNavigationBarPosition == NAV_BAR_BOTTOM) {
            displayCutoutSafeExceptMaybeBars.bottom = Integer.MAX_VALUE;
        }
        if (!attachedInParent && !floatingInScreenWindow) {
            sTmpRect.set(pf);
            pf.intersectUnchecked(displayCutoutSafeExceptMaybeBars);
            windowFrames.setParentFrameWasClippedByDisplayCutout(!sTmpRect.equals(pf));
        }
        df.intersectUnchecked(displayCutoutSafeExceptMaybeBars);
    }
    cf.intersectUnchecked(displayFrames.mDisplayCutoutSafe);
    if ((fl & FLAG_LAYOUT_NO_LIMITS) != 0 && type != TYPE_SYSTEM_ERROR && !win.inMultiWindowMode()) {
        df.left = df.top = -10000;
        df.right = df.bottom = 10000;
        if (type != TYPE_WALLPAPER) {
            cf.left = cf.top = vf.left = vf.top = -10000;
            cf.right = cf.bottom = vf.right = vf.bottom = 10000;
        }
    }
    if (DEBUG_LAYOUT)
        Slog.v(TAG, "Compute frame " + attrs.getTitle() + ": sim=#" + Integer.toHexString(sim) + " attach=" + attached + " type=" + type + String.format(" flags=0x%08x", fl) + " pf=" + pf.toShortString() + " df=" + df.toShortString() + " cf=" + cf.toShortString() + " vf=" + vf.toShortString() + " dcf=" + dcf.toShortString() + " sf=" + sf.toShortString());
    if (!sTmpLastParentFrame.equals(pf)) {
        windowFrames.setContentChanged(true);
    }
    win.computeFrame(displayFrames);
    if (type == TYPE_INPUT_METHOD && win.isVisibleLw() && !win.getGivenInsetsPendingLw()) {
        offsetInputMethodWindowLw(win, displayFrames);
    }
    if (type == TYPE_VOICE_INTERACTION && win.isVisibleLw() && !win.getGivenInsetsPendingLw()) {
        offsetVoiceInputWindowLw(win, displayFrames);
    }
}