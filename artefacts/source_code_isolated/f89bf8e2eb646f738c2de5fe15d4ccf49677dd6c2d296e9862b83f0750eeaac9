public static ZenPolicy readZenPolicyXml(XmlPullParser parser){
    boolean policySet = false;
    ZenPolicy.Builder builder = new ZenPolicy.Builder();
    final int calls = safeInt(parser, ALLOW_ATT_CALLS_FROM, ZenPolicy.PEOPLE_TYPE_UNSET);
    final int messages = safeInt(parser, ALLOW_ATT_MESSAGES_FROM, ZenPolicy.PEOPLE_TYPE_UNSET);
    final int repeatCallers = safeInt(parser, ALLOW_ATT_REPEAT_CALLERS, ZenPolicy.STATE_UNSET);
    final int alarms = safeInt(parser, ALLOW_ATT_ALARMS, ZenPolicy.STATE_UNSET);
    final int media = safeInt(parser, ALLOW_ATT_MEDIA, ZenPolicy.STATE_UNSET);
    final int system = safeInt(parser, ALLOW_ATT_SYSTEM, ZenPolicy.STATE_UNSET);
    final int events = safeInt(parser, ALLOW_ATT_EVENTS, ZenPolicy.STATE_UNSET);
    final int reminders = safeInt(parser, ALLOW_ATT_REMINDERS, ZenPolicy.STATE_UNSET);
    if (calls != ZenPolicy.PEOPLE_TYPE_UNSET) {
        builder.allowCalls(calls);
        policySet = true;
    }
    if (messages != ZenPolicy.PEOPLE_TYPE_UNSET) {
        builder.allowMessages(messages);
        policySet = true;
    }
    if (repeatCallers != ZenPolicy.STATE_UNSET) {
        builder.allowRepeatCallers(repeatCallers == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (alarms != ZenPolicy.STATE_UNSET) {
        builder.allowAlarms(alarms == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (media != ZenPolicy.STATE_UNSET) {
        builder.allowMedia(media == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (system != ZenPolicy.STATE_UNSET) {
        builder.allowSystem(system == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (events != ZenPolicy.STATE_UNSET) {
        builder.allowEvents(events == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (reminders != ZenPolicy.STATE_UNSET) {
        builder.allowReminders(reminders == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    final int fullScreenIntent = safeInt(parser, SHOW_ATT_FULL_SCREEN_INTENT, ZenPolicy.STATE_UNSET);
    final int lights = safeInt(parser, SHOW_ATT_LIGHTS, ZenPolicy.STATE_UNSET);
    final int peek = safeInt(parser, SHOW_ATT_PEEK, ZenPolicy.STATE_UNSET);
    final int statusBar = safeInt(parser, SHOW_ATT_STATUS_BAR_ICONS, ZenPolicy.STATE_UNSET);
    final int badges = safeInt(parser, SHOW_ATT_BADGES, ZenPolicy.STATE_UNSET);
    final int ambient = safeInt(parser, SHOW_ATT_AMBIENT, ZenPolicy.STATE_UNSET);
    final int notificationList = safeInt(parser, SHOW_ATT_NOTIFICATION_LIST, ZenPolicy.STATE_UNSET);
    if (fullScreenIntent != ZenPolicy.STATE_UNSET) {
        builder.showFullScreenIntent(fullScreenIntent == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (lights != ZenPolicy.STATE_UNSET) {
        builder.showLights(lights == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (peek != ZenPolicy.STATE_UNSET) {
        builder.showPeeking(peek == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (statusBar != ZenPolicy.STATE_UNSET) {
        builder.showStatusBarIcons(statusBar == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (badges != ZenPolicy.STATE_UNSET) {
        builder.showBadges(badges == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (ambient != ZenPolicy.STATE_UNSET) {
        builder.showInAmbientDisplay(ambient == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (notificationList != ZenPolicy.STATE_UNSET) {
        builder.showInNotificationList(notificationList == ZenPolicy.STATE_ALLOW);
        policySet = true;
    }
    if (policySet) {
        return builder.build();
    }
    return null;
}