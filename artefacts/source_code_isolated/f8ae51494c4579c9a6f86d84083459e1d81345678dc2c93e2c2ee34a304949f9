public Color getColor(int x, int y){
    checkRecycled("Can't call getColor() on a recycled bitmap");
    checkHardware("unable to getColor(), " + "pixel access is not supported on Config#HARDWARE bitmaps");
    checkPixelAccess(x, y);
    final ColorSpace cs = getColorSpace();
    if (cs.equals(ColorSpace.get(ColorSpace.Named.SRGB))) {
        return Color.valueOf(nativeGetPixel(mNativePtr, x, y));
    }
    long rgba = nativeGetColor(mNativePtr, x, y);
    float r = Half.toFloat((short) ((rgba >> 0) & 0xffff));
    float g = Half.toFloat((short) ((rgba >> 16) & 0xffff));
    float b = Half.toFloat((short) ((rgba >> 32) & 0xffff));
    float a = Half.toFloat((short) ((rgba >> 48) & 0xffff));
    return Color.valueOf(clamp(r, cs, 0), clamp(g, cs, 1), clamp(b, cs, 2), a, cs);
}