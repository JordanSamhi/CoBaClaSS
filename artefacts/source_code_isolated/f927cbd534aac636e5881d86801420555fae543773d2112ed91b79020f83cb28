public synchronized void startMonitor(){
    if (isVerboseLoggable()) {
        Log.v(TAG, "Starting monitor");
    }
    mMonitorStartedCount++;
    if (mMonitorStartedCount == 0) {
        return;
    }
    mHandler.removeCallbacks(mDisconnectRunnable);
    if (mCar != null) {
        if (mCar.isConnected()) {
            try {
                onUxRestrictionsChanged(mRestrictionsManager.getCurrentCarUxRestrictions());
            } catch (CarNotConnectedException e) {
                Log.e(TAG, "Car not connected", e);
            }
        } else {
            try {
                mCar.connect();
            } catch (IllegalStateException e) {
                Log.e(TAG, "Failure connecting to Car object.", e);
            }
        }
        return;
    }
    mCar = Car.createCar(mContext, new ServiceConnection() {

        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {
            try {
                registerPropertyManager();
                registerRestrictionsManager();
            } catch (CarNotConnectedException e) {
                Log.e(TAG, "Car not connected", e);
            }
        }

        @Override
        public void onServiceDisconnected(ComponentName name) {
            try {
                if (mRestrictionsManager != null) {
                    mRestrictionsManager.unregisterListener();
                    mRestrictionsManager = null;
                }
            } catch (CarNotConnectedException e) {
                Log.e(TAG, "Car not connected", e);
            }
        }
    });
    try {
        mCar.connect();
    } catch (IllegalStateException e) {
        Log.e(TAG, "Failure connecting to Car object.", e);
    }
}