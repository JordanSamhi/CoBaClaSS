public void pinShortcuts(@UserIdInt int packageUserId, @NonNull String packageName, @NonNull List<String> ids, boolean forPinRequest){
    final ShortcutPackage packageShortcuts = mShortcutUser.getPackageShortcutsIfExists(packageName);
    if (packageShortcuts == null) {
        return;
    }
    final PackageWithUser pu = PackageWithUser.of(packageUserId, packageName);
    final int idSize = ids.size();
    if (idSize == 0) {
        mPinnedShortcuts.remove(pu);
    } else {
        final ArraySet<String> prevSet = mPinnedShortcuts.get(pu);
        final ArraySet<String> newSet = new ArraySet<>();
        for (int i = 0; i < idSize; i++) {
            final String id = ids.get(i);
            final ShortcutInfo si = packageShortcuts.findShortcutById(id);
            if (si == null) {
                continue;
            }
            if (si.isDynamic() || si.isManifestShortcut() || (prevSet != null && prevSet.contains(id)) || forPinRequest) {
                newSet.add(id);
            }
        }
        mPinnedShortcuts.put(pu, newSet);
    }
    packageShortcuts.refreshPinnedFlags();
}