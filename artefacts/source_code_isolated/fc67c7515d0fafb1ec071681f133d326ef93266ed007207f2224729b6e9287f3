public static NetworkDetailsTracker createNetworkDetailsTracker(@NonNull Lifecycle lifecycle, @NonNull Context context, @NonNull WifiManager wifiManager, @NonNull ConnectivityManager connectivityManager, @NonNull NetworkScoreManager networkScoreManager, @NonNull Handler mainHandler, @NonNull Handler workerHandler, @NonNull Clock clock, long maxScanAgeMillis, long scanIntervalMillis, String key){
    if (key.startsWith(StandardWifiEntry.KEY_PREFIX) || key.startsWith(NetworkRequestEntry.KEY_PREFIX)) {
        return new StandardNetworkDetailsTracker(lifecycle, context, wifiManager, connectivityManager, networkScoreManager, mainHandler, workerHandler, clock, maxScanAgeMillis, scanIntervalMillis, key);
    } else if (key.startsWith(PasspointWifiEntry.KEY_PREFIX)) {
        return new PasspointNetworkDetailsTracker(lifecycle, context, wifiManager, connectivityManager, networkScoreManager, mainHandler, workerHandler, clock, maxScanAgeMillis, scanIntervalMillis, key);
    } else {
        throw new IllegalArgumentException("Key does not contain valid key prefix!");
    }
}