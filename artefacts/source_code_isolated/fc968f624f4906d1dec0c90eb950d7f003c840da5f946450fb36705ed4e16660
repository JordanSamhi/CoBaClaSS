public static final byte[] readThisByteArrayXml(XmlPullParser parser, String endTag, String[] name) throws XmlPullParserException, IOException{
    int num;
    try {
        num = Integer.parseInt(parser.getAttributeValue(null, "num"));
    } catch (NullPointerException e) {
        throw new XmlPullParserException("Need num attribute in byte-array");
    } catch (NumberFormatException e) {
        throw new XmlPullParserException("Not a number in num attribute in byte-array");
    }
    byte[] array = new byte[0];
    int eventType = parser.getEventType();
    do {
        if (eventType == parser.TEXT) {
            if (num > 0) {
                String values = parser.getText();
                if (values == null || values.length() != num * 2) {
                    throw new XmlPullParserException("Invalid value found in byte-array: " + values);
                }
                array = HexEncoding.decode(values);
            }
        } else if (eventType == parser.END_TAG) {
            if (parser.getName().equals(endTag)) {
                return array;
            } else {
                throw new XmlPullParserException("Expected " + endTag + " end tag at: " + parser.getName());
            }
        }
        eventType = parser.next();
    } while (eventType != parser.END_DOCUMENT);
    throw new XmlPullParserException("Document ended before " + endTag + " end tag");
}