public void init(){
    synchronized (this) {
        if (mHandler != null) {
            return;
        }
        mHandlerThread = new HandlerThread(TAG);
        mHandlerThread.start();
        if (mHandlerThread.getLooper() == null) {
            mHandler = null;
            return;
        }
        mHandler = new Handler(mHandlerThread.getLooper()) {

            @Override
            public void handleMessage(Message msg) {
                ArrayList<AudioManager.VolumeGroupCallback> listeners;
                synchronized (this) {
                    if (msg.what == AUDIOVOLUMEGROUP_EVENT_NEW_LISTENER) {
                        listeners = new ArrayList<AudioManager.VolumeGroupCallback>();
                        if (mListeners.contains(msg.obj)) {
                            listeners.add((AudioManager.VolumeGroupCallback) msg.obj);
                        }
                    } else {
                        listeners = (ArrayList<AudioManager.VolumeGroupCallback>) mListeners.clone();
                    }
                }
                if (listeners.isEmpty()) {
                    return;
                }
                switch(msg.what) {
                    case AUDIOVOLUMEGROUP_EVENT_VOLUME_CHANGED:
                        for (int i = 0; i < listeners.size(); i++) {
                            listeners.get(i).onAudioVolumeGroupChanged((int) msg.arg1, (int) msg.arg2);
                        }
                        break;
                    default:
                        break;
                }
            }
        };
        native_setup(new WeakReference<AudioVolumeGroupChangeHandler>(this));
    }
}